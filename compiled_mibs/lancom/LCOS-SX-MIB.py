# SNMP MIB module (LCOS-SX-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\lancom\LCOS-SX-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 12:08:19 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(ifIndex,) = mibBuilder.importSymbols(
    "IF-MIB",
    "ifIndex")

(InetAddress,
 InetAddressType) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressType")

(dot1qFdbId,
 dot1qTpFdbAddress,
 dot1qTpFdbPort) = mibBuilder.importSymbols(
    "Q-BRIDGE-MIB",
    "dot1qFdbId",
    "dot1qTpFdbAddress",
    "dot1qTpFdbPort")

(OwnerString,) = mibBuilder.importSymbols(
    "RMON-MIB",
    "OwnerString")

(SnmpAdminString,) = mibBuilder.importSymbols(
    "SNMP-FRAMEWORK-MIB",
    "SnmpAdminString")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention")


# MODULE-IDENTITY

lcosSX = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14)
)
if mibBuilder.loadTexts:
    lcosSX.setRevisions(
        ("2019-05-31 03:10",
         "2014-05-30 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class OperState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )



class AdminMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )



class AdminMode2(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("notSupported", 2))
    )



class ActivateCmd(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 0),
          ("activate", 1))
    )



class KeyType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("doubleTag", 1),
          ("ipAddr", 2),
          ("macAndIpAddr", 3))
    )



class FrameRate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("threeHundredFramesPerSec", 0),
          ("oneHundredFramesPerSec", 1),
          ("tenFramesPerSec", 2),
          ("oneFramePerSec", 3),
          ("sixFramesPerMin", 4),
          ("oneFramePerMin", 5),
          ("sixFramesPerHour", 6))
    )



class DayOfWeek(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("mon", 1),
          ("tue", 2),
          ("wed", 3),
          ("thur", 4),
          ("fri", 5),
          ("sat", 6),
          ("sun", 7))
    )



class Month(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("jan", 1),
          ("feb", 2),
          ("march", 3),
          ("april", 4),
          ("may", 5),
          ("june", 6),
          ("july", 7),
          ("aug", 8),
          ("sept", 9),
          ("oct", 10),
          ("nov", 11),
          ("dec", 12))
    )



class SNMPv3SecurityLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noAuthNoPriv", 1),
          ("authNoPriv", 2),
          ("authPriv", 3))
    )



class SNMPv3AuthenticationProtocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("md5", 1),
          ("sha1", 2),
          ("sha224", 3),
          ("sha256", 4),
          ("sha384", 5),
          ("sha512", 6))
    )



class SNMPv3PrivacyProtocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("des", 1),
          ("aes128", 2),
          ("aes192", 3),
          ("aes256", 4))
    )



# MIB Managed Objects in the order of their OIDs

_LcsSystem_ObjectIdentity = ObjectIdentity
lcsSystem = _LcsSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1)
)
_LcsSystemInformation_ObjectIdentity = ObjectIdentity
lcsSystemInformation = _LcsSystemInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1)
)
_LcsSystemInfo_ObjectIdentity = ObjectIdentity
lcsSystemInfo = _LcsSystemInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1)
)
_LcsSystemInfoModelName_Type = DisplayString
_LcsSystemInfoModelName_Object = MibScalar
lcsSystemInfoModelName = _LcsSystemInfoModelName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 2),
    _LcsSystemInfoModelName_Type()
)
lcsSystemInfoModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoModelName.setStatus("current")
_LcsSystemInfoSystemDescript_Type = DisplayString
_LcsSystemInfoSystemDescript_Object = MibScalar
lcsSystemInfoSystemDescript = _LcsSystemInfoSystemDescript_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 3),
    _LcsSystemInfoSystemDescript_Type()
)
lcsSystemInfoSystemDescript.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoSystemDescript.setStatus("current")
_LcsSystemInfoLocation_Type = DisplayString
_LcsSystemInfoLocation_Object = MibScalar
lcsSystemInfoLocation = _LcsSystemInfoLocation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 4),
    _LcsSystemInfoLocation_Type()
)
lcsSystemInfoLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemInfoLocation.setStatus("current")
_LcsSystemInfoContact_Type = DisplayString
_LcsSystemInfoContact_Object = MibScalar
lcsSystemInfoContact = _LcsSystemInfoContact_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 5),
    _LcsSystemInfoContact_Type()
)
lcsSystemInfoContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemInfoContact.setStatus("current")
_LcsSystemInfoSystemName_Type = DisplayString
_LcsSystemInfoSystemName_Object = MibScalar
lcsSystemInfoSystemName = _LcsSystemInfoSystemName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 6),
    _LcsSystemInfoSystemName_Type()
)
lcsSystemInfoSystemName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemInfoSystemName.setStatus("current")
_LcsSystemInfoSystemDate_Type = DisplayString
_LcsSystemInfoSystemDate_Object = MibScalar
lcsSystemInfoSystemDate = _LcsSystemInfoSystemDate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 7),
    _LcsSystemInfoSystemDate_Type()
)
lcsSystemInfoSystemDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoSystemDate.setStatus("current")
_LcsSystemInfoSystemUptime_Type = DisplayString
_LcsSystemInfoSystemUptime_Object = MibScalar
lcsSystemInfoSystemUptime = _LcsSystemInfoSystemUptime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 8),
    _LcsSystemInfoSystemUptime_Type()
)
lcsSystemInfoSystemUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoSystemUptime.setStatus("current")
_LcsSystemInfoBootloaderVersion_Type = DisplayString
_LcsSystemInfoBootloaderVersion_Object = MibScalar
lcsSystemInfoBootloaderVersion = _LcsSystemInfoBootloaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 9),
    _LcsSystemInfoBootloaderVersion_Type()
)
lcsSystemInfoBootloaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoBootloaderVersion.setStatus("current")
_LcsSystemInfoFirmwareVersion_Type = DisplayString
_LcsSystemInfoFirmwareVersion_Object = MibScalar
lcsSystemInfoFirmwareVersion = _LcsSystemInfoFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 10),
    _LcsSystemInfoFirmwareVersion_Type()
)
lcsSystemInfoFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoFirmwareVersion.setStatus("current")
_LcsSystemInfoHardwareVersion_Type = DisplayString
_LcsSystemInfoHardwareVersion_Object = MibScalar
lcsSystemInfoHardwareVersion = _LcsSystemInfoHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 11),
    _LcsSystemInfoHardwareVersion_Type()
)
lcsSystemInfoHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoHardwareVersion.setStatus("current")
_LcsSystemInfoMechanicalVersion_Type = DisplayString
_LcsSystemInfoMechanicalVersion_Object = MibScalar
lcsSystemInfoMechanicalVersion = _LcsSystemInfoMechanicalVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 12),
    _LcsSystemInfoMechanicalVersion_Type()
)
lcsSystemInfoMechanicalVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoMechanicalVersion.setStatus("current")
_LcsSystemInfoSeriesNumber_Type = DisplayString
_LcsSystemInfoSeriesNumber_Object = MibScalar
lcsSystemInfoSeriesNumber = _LcsSystemInfoSeriesNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 13),
    _LcsSystemInfoSeriesNumber_Type()
)
lcsSystemInfoSeriesNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoSeriesNumber.setStatus("current")
_LcsSystemInfoHostMACAddress_Type = DisplayString
_LcsSystemInfoHostMACAddress_Object = MibScalar
lcsSystemInfoHostMACAddress = _LcsSystemInfoHostMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 14),
    _LcsSystemInfoHostMACAddress_Type()
)
lcsSystemInfoHostMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoHostMACAddress.setStatus("current")
_LcsSystemInfoMemory_Type = DisplayString
_LcsSystemInfoMemory_Object = MibScalar
lcsSystemInfoMemory = _LcsSystemInfoMemory_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 15),
    _LcsSystemInfoMemory_Type()
)
lcsSystemInfoMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoMemory.setStatus("current")
_LcsSystemInfoFlash_Type = DisplayString
_LcsSystemInfoFlash_Object = MibScalar
lcsSystemInfoFlash = _LcsSystemInfoFlash_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 16),
    _LcsSystemInfoFlash_Type()
)
lcsSystemInfoFlash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoFlash.setStatus("current")
_LcsSystemInfoFanSpeed_Type = DisplayString
_LcsSystemInfoFanSpeed_Object = MibScalar
lcsSystemInfoFanSpeed = _LcsSystemInfoFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 17),
    _LcsSystemInfoFanSpeed_Type()
)
lcsSystemInfoFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoFanSpeed.setStatus("current")
_LcsSystemInfoTemperature1_Type = DisplayString
_LcsSystemInfoTemperature1_Object = MibScalar
lcsSystemInfoTemperature1 = _LcsSystemInfoTemperature1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 22),
    _LcsSystemInfoTemperature1_Type()
)
lcsSystemInfoTemperature1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperature1.setStatus("current")
_LcsSystemInfoTemperature2_Type = DisplayString
_LcsSystemInfoTemperature2_Object = MibScalar
lcsSystemInfoTemperature2 = _LcsSystemInfoTemperature2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 23),
    _LcsSystemInfoTemperature2_Type()
)
lcsSystemInfoTemperature2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperature2.setStatus("current")
_LcsSystemInfoCPULoad_Type = DisplayString
_LcsSystemInfoCPULoad_Object = MibScalar
lcsSystemInfoCPULoad = _LcsSystemInfoCPULoad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 24),
    _LcsSystemInfoCPULoad_Type()
)
lcsSystemInfoCPULoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoCPULoad.setStatus("current")
_LcsSystemInfoProductionDate_Type = DisplayString
_LcsSystemInfoProductionDate_Object = MibScalar
lcsSystemInfoProductionDate = _LcsSystemInfoProductionDate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 33),
    _LcsSystemInfoProductionDate_Type()
)
lcsSystemInfoProductionDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoProductionDate.setStatus("current")
_LcsSystemInfoTemperature3_Type = DisplayString
_LcsSystemInfoTemperature3_Object = MibScalar
lcsSystemInfoTemperature3 = _LcsSystemInfoTemperature3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 34),
    _LcsSystemInfoTemperature3_Type()
)
lcsSystemInfoTemperature3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperature3.setStatus("current")
_LcsSystemInfoPhysicalPorts_Type = Integer32
_LcsSystemInfoPhysicalPorts_Object = MibScalar
lcsSystemInfoPhysicalPorts = _LcsSystemInfoPhysicalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 200),
    _LcsSystemInfoPhysicalPorts_Type()
)
lcsSystemInfoPhysicalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoPhysicalPorts.setStatus("current")
_LcsSystemInfoTemperatureSensor1_Type = Integer32
_LcsSystemInfoTemperatureSensor1_Object = MibScalar
lcsSystemInfoTemperatureSensor1 = _LcsSystemInfoTemperatureSensor1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 201),
    _LcsSystemInfoTemperatureSensor1_Type()
)
lcsSystemInfoTemperatureSensor1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperatureSensor1.setStatus("current")
_LcsSystemInfoTemperatureSensor2_Type = Integer32
_LcsSystemInfoTemperatureSensor2_Object = MibScalar
lcsSystemInfoTemperatureSensor2 = _LcsSystemInfoTemperatureSensor2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 202),
    _LcsSystemInfoTemperatureSensor2_Type()
)
lcsSystemInfoTemperatureSensor2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperatureSensor2.setStatus("current")
_LcsSystemInfoTemperatureSensor3_Type = Integer32
_LcsSystemInfoTemperatureSensor3_Object = MibScalar
lcsSystemInfoTemperatureSensor3 = _LcsSystemInfoTemperatureSensor3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 203),
    _LcsSystemInfoTemperatureSensor3_Type()
)
lcsSystemInfoTemperatureSensor3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoTemperatureSensor3.setStatus("current")
_LcsSystemInfoFreeMemory_Type = Integer32
_LcsSystemInfoFreeMemory_Object = MibScalar
lcsSystemInfoFreeMemory = _LcsSystemInfoFreeMemory_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 1, 204),
    _LcsSystemInfoFreeMemory_Type()
)
lcsSystemInfoFreeMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemInfoFreeMemory.setStatus("current")
_LcsPowerInformation_ObjectIdentity = ObjectIdentity
lcsPowerInformation = _LcsPowerInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2)
)
_LcsPowerInfoDetectedPSUA_Type = DisplayString
_LcsPowerInfoDetectedPSUA_Object = MibScalar
lcsPowerInfoDetectedPSUA = _LcsPowerInfoDetectedPSUA_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 2),
    _LcsPowerInfoDetectedPSUA_Type()
)
lcsPowerInfoDetectedPSUA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoDetectedPSUA.setStatus("current")
_LcsPowerInfoDetectedPSUB_Type = DisplayString
_LcsPowerInfoDetectedPSUB_Object = MibScalar
lcsPowerInfoDetectedPSUB = _LcsPowerInfoDetectedPSUB_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 3),
    _LcsPowerInfoDetectedPSUB_Type()
)
lcsPowerInfoDetectedPSUB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoDetectedPSUB.setStatus("current")
_LcsPowerInfoPSUStatusA_Type = DisplayString
_LcsPowerInfoPSUStatusA_Object = MibScalar
lcsPowerInfoPSUStatusA = _LcsPowerInfoPSUStatusA_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 4),
    _LcsPowerInfoPSUStatusA_Type()
)
lcsPowerInfoPSUStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoPSUStatusA.setStatus("current")
_LcsPowerInfoPSUStatusB_Type = DisplayString
_LcsPowerInfoPSUStatusB_Object = MibScalar
lcsPowerInfoPSUStatusB = _LcsPowerInfoPSUStatusB_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 5),
    _LcsPowerInfoPSUStatusB_Type()
)
lcsPowerInfoPSUStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoPSUStatusB.setStatus("current")
_LcsPowerInfoFANSpeedA_Type = Integer32
_LcsPowerInfoFANSpeedA_Object = MibScalar
lcsPowerInfoFANSpeedA = _LcsPowerInfoFANSpeedA_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 6),
    _LcsPowerInfoFANSpeedA_Type()
)
lcsPowerInfoFANSpeedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoFANSpeedA.setStatus("current")
_LcsPowerInfoFANSpeedB_Type = Integer32
_LcsPowerInfoFANSpeedB_Object = MibScalar
lcsPowerInfoFANSpeedB = _LcsPowerInfoFANSpeedB_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 7),
    _LcsPowerInfoFANSpeedB_Type()
)
lcsPowerInfoFANSpeedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoFANSpeedB.setStatus("current")
_LcsPowerInfoTemperatureA_Type = Integer32
_LcsPowerInfoTemperatureA_Object = MibScalar
lcsPowerInfoTemperatureA = _LcsPowerInfoTemperatureA_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 8),
    _LcsPowerInfoTemperatureA_Type()
)
lcsPowerInfoTemperatureA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoTemperatureA.setStatus("current")
_LcsPowerInfoTemperatureB_Type = Integer32
_LcsPowerInfoTemperatureB_Object = MibScalar
lcsPowerInfoTemperatureB = _LcsPowerInfoTemperatureB_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 9),
    _LcsPowerInfoTemperatureB_Type()
)
lcsPowerInfoTemperatureB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPowerInfoTemperatureB.setStatus("current")


class _LcsPowerInfoOperatingMode_Type(Integer32):
    """Custom type lcsPowerInfoOperatingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPowerInfoOperatingMode_Type.__name__ = "Integer32"
_LcsPowerInfoOperatingMode_Object = MibScalar
lcsPowerInfoOperatingMode = _LcsPowerInfoOperatingMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 1, 2, 10),
    _LcsPowerInfoOperatingMode_Type()
)
lcsPowerInfoOperatingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPowerInfoOperatingMode.setStatus("current")
_LcsSystemTimeConf_ObjectIdentity = ObjectIdentity
lcsSystemTimeConf = _LcsSystemTimeConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2)
)
_LcsSystemTime_ObjectIdentity = ObjectIdentity
lcsSystemTime = _LcsSystemTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2)
)
_LcsSystemTimeZone_ObjectIdentity = ObjectIdentity
lcsSystemTimeZone = _LcsSystemTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 1)
)


class _LcsSystemTimeZoneConf_Type(Integer32):
    """Custom type lcsSystemTimeZoneConf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-7200, 7201),
    )


_LcsSystemTimeZoneConf_Type.__name__ = "Integer32"
_LcsSystemTimeZoneConf_Object = MibScalar
lcsSystemTimeZoneConf = _LcsSystemTimeZoneConf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 1, 1),
    _LcsSystemTimeZoneConf_Type()
)
lcsSystemTimeZoneConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeZoneConf.setStatus("current")
_LcsSystemTimeZoneAcronym_Type = DisplayString
_LcsSystemTimeZoneAcronym_Object = MibScalar
lcsSystemTimeZoneAcronym = _LcsSystemTimeZoneAcronym_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 1, 2),
    _LcsSystemTimeZoneAcronym_Type()
)
lcsSystemTimeZoneAcronym.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeZoneAcronym.setStatus("current")
_LcsSystemTimeDaylightSaving_ObjectIdentity = ObjectIdentity
lcsSystemTimeDaylightSaving = _LcsSystemTimeDaylightSaving_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2)
)


class _LcsSystemTimeDaylightSavingMode_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("recurring", 1),
          ("nonRecurring", 2))
    )


_LcsSystemTimeDaylightSavingMode_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingMode_Object = MibScalar
lcsSystemTimeDaylightSavingMode = _LcsSystemTimeDaylightSavingMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 1),
    _LcsSystemTimeDaylightSavingMode_Type()
)
lcsSystemTimeDaylightSavingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingMode.setStatus("current")
_LcsSystemTimeDaylightSavingStartWeek_Type = DisplayString
_LcsSystemTimeDaylightSavingStartWeek_Object = MibScalar
lcsSystemTimeDaylightSavingStartWeek = _LcsSystemTimeDaylightSavingStartWeek_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 2),
    _LcsSystemTimeDaylightSavingStartWeek_Type()
)
lcsSystemTimeDaylightSavingStartWeek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartWeek.setStatus("current")


class _LcsSystemTimeDaylightSavingStartDay_Type(DayOfWeek):
    """Custom type lcsSystemTimeDaylightSavingStartDay based on DayOfWeek"""
    defaultValue = 1


_LcsSystemTimeDaylightSavingStartDay_Type.__name__ = "DayOfWeek"
_LcsSystemTimeDaylightSavingStartDay_Object = MibScalar
lcsSystemTimeDaylightSavingStartDay = _LcsSystemTimeDaylightSavingStartDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 3),
    _LcsSystemTimeDaylightSavingStartDay_Type()
)
lcsSystemTimeDaylightSavingStartDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartDay.setStatus("current")


class _LcsSystemTimeDaylightSavingStartMonth_Type(Month):
    """Custom type lcsSystemTimeDaylightSavingStartMonth based on Month"""
    defaultValue = 1


_LcsSystemTimeDaylightSavingStartMonth_Type.__name__ = "Month"
_LcsSystemTimeDaylightSavingStartMonth_Object = MibScalar
lcsSystemTimeDaylightSavingStartMonth = _LcsSystemTimeDaylightSavingStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 4),
    _LcsSystemTimeDaylightSavingStartMonth_Type()
)
lcsSystemTimeDaylightSavingStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartMonth.setStatus("current")


class _LcsSystemTimeDaylightSavingStartDate_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingStartDate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_LcsSystemTimeDaylightSavingStartDate_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingStartDate_Object = MibScalar
lcsSystemTimeDaylightSavingStartDate = _LcsSystemTimeDaylightSavingStartDate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 5),
    _LcsSystemTimeDaylightSavingStartDate_Type()
)
lcsSystemTimeDaylightSavingStartDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartDate.setStatus("current")


class _LcsSystemTimeDaylightSavingStartYear_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingStartYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 2097),
    )


_LcsSystemTimeDaylightSavingStartYear_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingStartYear_Object = MibScalar
lcsSystemTimeDaylightSavingStartYear = _LcsSystemTimeDaylightSavingStartYear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 6),
    _LcsSystemTimeDaylightSavingStartYear_Type()
)
lcsSystemTimeDaylightSavingStartYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartYear.setStatus("current")


class _LcsSystemTimeDaylightSavingStartHours_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingStartHours based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_LcsSystemTimeDaylightSavingStartHours_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingStartHours_Object = MibScalar
lcsSystemTimeDaylightSavingStartHours = _LcsSystemTimeDaylightSavingStartHours_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 7),
    _LcsSystemTimeDaylightSavingStartHours_Type()
)
lcsSystemTimeDaylightSavingStartHours.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartHours.setStatus("current")


class _LcsSystemTimeDaylightSavingStartMinutes_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingStartMinutes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_LcsSystemTimeDaylightSavingStartMinutes_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingStartMinutes_Object = MibScalar
lcsSystemTimeDaylightSavingStartMinutes = _LcsSystemTimeDaylightSavingStartMinutes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 8),
    _LcsSystemTimeDaylightSavingStartMinutes_Type()
)
lcsSystemTimeDaylightSavingStartMinutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingStartMinutes.setStatus("current")
_LcsSystemTimeDaylightSavingEndWeek_Type = DisplayString
_LcsSystemTimeDaylightSavingEndWeek_Object = MibScalar
lcsSystemTimeDaylightSavingEndWeek = _LcsSystemTimeDaylightSavingEndWeek_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 9),
    _LcsSystemTimeDaylightSavingEndWeek_Type()
)
lcsSystemTimeDaylightSavingEndWeek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndWeek.setStatus("current")


class _LcsSystemTimeDaylightSavingEndDay_Type(DayOfWeek):
    """Custom type lcsSystemTimeDaylightSavingEndDay based on DayOfWeek"""
    defaultValue = 1


_LcsSystemTimeDaylightSavingEndDay_Type.__name__ = "DayOfWeek"
_LcsSystemTimeDaylightSavingEndDay_Object = MibScalar
lcsSystemTimeDaylightSavingEndDay = _LcsSystemTimeDaylightSavingEndDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 10),
    _LcsSystemTimeDaylightSavingEndDay_Type()
)
lcsSystemTimeDaylightSavingEndDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndDay.setStatus("current")


class _LcsSystemTimeDaylightSavingEndMonth_Type(Month):
    """Custom type lcsSystemTimeDaylightSavingEndMonth based on Month"""
    defaultValue = 1


_LcsSystemTimeDaylightSavingEndMonth_Type.__name__ = "Month"
_LcsSystemTimeDaylightSavingEndMonth_Object = MibScalar
lcsSystemTimeDaylightSavingEndMonth = _LcsSystemTimeDaylightSavingEndMonth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 11),
    _LcsSystemTimeDaylightSavingEndMonth_Type()
)
lcsSystemTimeDaylightSavingEndMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndMonth.setStatus("current")


class _LcsSystemTimeDaylightSavingEndDate_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingEndDate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_LcsSystemTimeDaylightSavingEndDate_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingEndDate_Object = MibScalar
lcsSystemTimeDaylightSavingEndDate = _LcsSystemTimeDaylightSavingEndDate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 12),
    _LcsSystemTimeDaylightSavingEndDate_Type()
)
lcsSystemTimeDaylightSavingEndDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndDate.setStatus("current")


class _LcsSystemTimeDaylightSavingEndYear_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingEndYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 2097),
    )


_LcsSystemTimeDaylightSavingEndYear_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingEndYear_Object = MibScalar
lcsSystemTimeDaylightSavingEndYear = _LcsSystemTimeDaylightSavingEndYear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 13),
    _LcsSystemTimeDaylightSavingEndYear_Type()
)
lcsSystemTimeDaylightSavingEndYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndYear.setStatus("current")


class _LcsSystemTimeDaylightSavingEndHours_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingEndHours based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_LcsSystemTimeDaylightSavingEndHours_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingEndHours_Object = MibScalar
lcsSystemTimeDaylightSavingEndHours = _LcsSystemTimeDaylightSavingEndHours_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 14),
    _LcsSystemTimeDaylightSavingEndHours_Type()
)
lcsSystemTimeDaylightSavingEndHours.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndHours.setStatus("current")


class _LcsSystemTimeDaylightSavingEndMinutes_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingEndMinutes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_LcsSystemTimeDaylightSavingEndMinutes_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingEndMinutes_Object = MibScalar
lcsSystemTimeDaylightSavingEndMinutes = _LcsSystemTimeDaylightSavingEndMinutes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 15),
    _LcsSystemTimeDaylightSavingEndMinutes_Type()
)
lcsSystemTimeDaylightSavingEndMinutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingEndMinutes.setStatus("current")


class _LcsSystemTimeDaylightSavingOffset_Type(Integer32):
    """Custom type lcsSystemTimeDaylightSavingOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_LcsSystemTimeDaylightSavingOffset_Type.__name__ = "Integer32"
_LcsSystemTimeDaylightSavingOffset_Object = MibScalar
lcsSystemTimeDaylightSavingOffset = _LcsSystemTimeDaylightSavingOffset_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 2, 16),
    _LcsSystemTimeDaylightSavingOffset_Type()
)
lcsSystemTimeDaylightSavingOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeDaylightSavingOffset.setStatus("current")
_LcsSystemTimeConfiguration_ObjectIdentity = ObjectIdentity
lcsSystemTimeConfiguration = _LcsSystemTimeConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3)
)
_LcsSystemTimeConfigurationClockSource_Type = Integer32
_LcsSystemTimeConfigurationClockSource_Object = MibScalar
lcsSystemTimeConfigurationClockSource = _LcsSystemTimeConfigurationClockSource_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3, 1),
    _LcsSystemTimeConfigurationClockSource_Type()
)
lcsSystemTimeConfigurationClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeConfigurationClockSource.setStatus("current")
_LcsSystemTimeConfigurationSystemDate_Type = DisplayString
_LcsSystemTimeConfigurationSystemDate_Object = MibScalar
lcsSystemTimeConfigurationSystemDate = _LcsSystemTimeConfigurationSystemDate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3, 2),
    _LcsSystemTimeConfigurationSystemDate_Type()
)
lcsSystemTimeConfigurationSystemDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeConfigurationSystemDate.setStatus("current")


class _LcsSystemTimeConfigurationDateFormat_Type(Integer32):
    """Custom type lcsSystemTimeConfigurationDateFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
    )


_LcsSystemTimeConfigurationDateFormat_Type.__name__ = "Integer32"
_LcsSystemTimeConfigurationDateFormat_Object = MibScalar
lcsSystemTimeConfigurationDateFormat = _LcsSystemTimeConfigurationDateFormat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3, 3),
    _LcsSystemTimeConfigurationDateFormat_Type()
)
lcsSystemTimeConfigurationDateFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeConfigurationDateFormat.setStatus("current")


class _LcsSystemTimeConfigurationTimeFormat_Type(Integer32):
    """Custom type lcsSystemTimeConfigurationTimeFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsSystemTimeConfigurationTimeFormat_Type.__name__ = "Integer32"
_LcsSystemTimeConfigurationTimeFormat_Object = MibScalar
lcsSystemTimeConfigurationTimeFormat = _LcsSystemTimeConfigurationTimeFormat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3, 4),
    _LcsSystemTimeConfigurationTimeFormat_Type()
)
lcsSystemTimeConfigurationTimeFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeConfigurationTimeFormat.setStatus("current")
_LcsSystemTimeConfigurationSystemTime_Type = DisplayString
_LcsSystemTimeConfigurationSystemTime_Object = MibScalar
lcsSystemTimeConfigurationSystemTime = _LcsSystemTimeConfigurationSystemTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 2, 2, 3, 5),
    _LcsSystemTimeConfigurationSystemTime_Type()
)
lcsSystemTimeConfigurationSystemTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemTimeConfigurationSystemTime.setStatus("current")
_LcsSystemAccount_ObjectIdentity = ObjectIdentity
lcsSystemAccount = _LcsSystemAccount_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3)
)
_LcsSystemAccountUsers_ObjectIdentity = ObjectIdentity
lcsSystemAccountUsers = _LcsSystemAccountUsers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1)
)
_LcsUserConfigTable_Object = MibTable
lcsUserConfigTable = _LcsUserConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1)
)
if mibBuilder.loadTexts:
    lcsUserConfigTable.setStatus("current")
_LcsUserConfigEntry_Object = MibTableRow
lcsUserConfigEntry = _LcsUserConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1)
)
lcsUserConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsUserConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsUserConfigEntry.setStatus("current")


class _LcsUserConfigIndex_Type(Integer32):
    """Custom type lcsUserConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsUserConfigIndex_Type.__name__ = "Integer32"
_LcsUserConfigIndex_Object = MibTableColumn
lcsUserConfigIndex = _LcsUserConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1, 1),
    _LcsUserConfigIndex_Type()
)
lcsUserConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsUserConfigIndex.setStatus("current")


class _LcsUserConfigUserName_Type(DisplayString):
    """Custom type lcsUserConfigUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_LcsUserConfigUserName_Type.__name__ = "DisplayString"
_LcsUserConfigUserName_Object = MibTableColumn
lcsUserConfigUserName = _LcsUserConfigUserName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1, 2),
    _LcsUserConfigUserName_Type()
)
lcsUserConfigUserName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsUserConfigUserName.setStatus("current")


class _LcsUserConfigPassword_Type(DisplayString):
    """Custom type lcsUserConfigPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_LcsUserConfigPassword_Type.__name__ = "DisplayString"
_LcsUserConfigPassword_Object = MibTableColumn
lcsUserConfigPassword = _LcsUserConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1, 3),
    _LcsUserConfigPassword_Type()
)
lcsUserConfigPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsUserConfigPassword.setStatus("current")


class _LcsUserConfigPrivilegeLevel_Type(Integer32):
    """Custom type lcsUserConfigPrivilegeLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_LcsUserConfigPrivilegeLevel_Type.__name__ = "Integer32"
_LcsUserConfigPrivilegeLevel_Object = MibTableColumn
lcsUserConfigPrivilegeLevel = _LcsUserConfigPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1, 4),
    _LcsUserConfigPrivilegeLevel_Type()
)
lcsUserConfigPrivilegeLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsUserConfigPrivilegeLevel.setStatus("current")
_LcsUserConfigRowStatus_Type = RowStatus
_LcsUserConfigRowStatus_Object = MibTableColumn
lcsUserConfigRowStatus = _LcsUserConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1, 1, 5),
    _LcsUserConfigRowStatus_Type()
)
lcsUserConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsUserConfigRowStatus.setStatus("current")
_LcsPrivilegeLevelConfigTable_Object = MibTable
lcsPrivilegeLevelConfigTable = _LcsPrivilegeLevelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2)
)
if mibBuilder.loadTexts:
    lcsPrivilegeLevelConfigTable.setStatus("current")
_LcsPrivilegeLevelConfigEntry_Object = MibTableRow
lcsPrivilegeLevelConfigEntry = _LcsPrivilegeLevelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1)
)
lcsPrivilegeLevelConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPrivilegeLevelIndex"),
)
if mibBuilder.loadTexts:
    lcsPrivilegeLevelConfigEntry.setStatus("current")


class _LcsPrivilegeLevelIndex_Type(Integer32):
    """Custom type lcsPrivilegeLevelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPrivilegeLevelIndex_Type.__name__ = "Integer32"
_LcsPrivilegeLevelIndex_Object = MibTableColumn
lcsPrivilegeLevelIndex = _LcsPrivilegeLevelIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 1),
    _LcsPrivilegeLevelIndex_Type()
)
lcsPrivilegeLevelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelIndex.setStatus("current")
_LcsPrivilegeLevelGroupName_Type = DisplayString
_LcsPrivilegeLevelGroupName_Object = MibTableColumn
lcsPrivilegeLevelGroupName = _LcsPrivilegeLevelGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 2),
    _LcsPrivilegeLevelGroupName_Type()
)
lcsPrivilegeLevelGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelGroupName.setStatus("current")


class _LcsPrivilegeLevelConfigReadOnly_Type(Integer32):
    """Custom type lcsPrivilegeLevelConfigReadOnly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_LcsPrivilegeLevelConfigReadOnly_Type.__name__ = "Integer32"
_LcsPrivilegeLevelConfigReadOnly_Object = MibTableColumn
lcsPrivilegeLevelConfigReadOnly = _LcsPrivilegeLevelConfigReadOnly_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 3),
    _LcsPrivilegeLevelConfigReadOnly_Type()
)
lcsPrivilegeLevelConfigReadOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelConfigReadOnly.setStatus("current")


class _LcsPrivilegeLevelConfigReadWrite_Type(Integer32):
    """Custom type lcsPrivilegeLevelConfigReadWrite based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_LcsPrivilegeLevelConfigReadWrite_Type.__name__ = "Integer32"
_LcsPrivilegeLevelConfigReadWrite_Object = MibTableColumn
lcsPrivilegeLevelConfigReadWrite = _LcsPrivilegeLevelConfigReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 4),
    _LcsPrivilegeLevelConfigReadWrite_Type()
)
lcsPrivilegeLevelConfigReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelConfigReadWrite.setStatus("current")


class _LcsPrivilegeLevelStatusReadOnly_Type(Integer32):
    """Custom type lcsPrivilegeLevelStatusReadOnly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_LcsPrivilegeLevelStatusReadOnly_Type.__name__ = "Integer32"
_LcsPrivilegeLevelStatusReadOnly_Object = MibTableColumn
lcsPrivilegeLevelStatusReadOnly = _LcsPrivilegeLevelStatusReadOnly_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 5),
    _LcsPrivilegeLevelStatusReadOnly_Type()
)
lcsPrivilegeLevelStatusReadOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelStatusReadOnly.setStatus("current")


class _LcsPrivilegeLevelStatusReadWrite_Type(Integer32):
    """Custom type lcsPrivilegeLevelStatusReadWrite based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_LcsPrivilegeLevelStatusReadWrite_Type.__name__ = "Integer32"
_LcsPrivilegeLevelStatusReadWrite_Object = MibTableColumn
lcsPrivilegeLevelStatusReadWrite = _LcsPrivilegeLevelStatusReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 2, 1, 6),
    _LcsPrivilegeLevelStatusReadWrite_Type()
)
lcsPrivilegeLevelStatusReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPrivilegeLevelStatusReadWrite.setStatus("current")


class _LcsSystemAccountSuperUserPassword_Type(DisplayString):
    """Custom type lcsSystemAccountSuperUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_LcsSystemAccountSuperUserPassword_Type.__name__ = "DisplayString"
_LcsSystemAccountSuperUserPassword_Object = MibScalar
lcsSystemAccountSuperUserPassword = _LcsSystemAccountSuperUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1500),
    _LcsSystemAccountSuperUserPassword_Type()
)
lcsSystemAccountSuperUserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemAccountSuperUserPassword.setStatus("current")


class _LcsSystemAccountSuperUserPasswordUnhashed_Type(DisplayString):
    """Custom type lcsSystemAccountSuperUserPasswordUnhashed based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_LcsSystemAccountSuperUserPasswordUnhashed_Type.__name__ = "DisplayString"
_LcsSystemAccountSuperUserPasswordUnhashed_Object = MibScalar
lcsSystemAccountSuperUserPasswordUnhashed = _LcsSystemAccountSuperUserPasswordUnhashed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1501),
    _LcsSystemAccountSuperUserPasswordUnhashed_Type()
)
lcsSystemAccountSuperUserPasswordUnhashed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemAccountSuperUserPasswordUnhashed.setStatus("current")


class _LcsSystemAccountEnforcePasswordRules_Type(Integer32):
    """Custom type lcsSystemAccountEnforcePasswordRules based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsSystemAccountEnforcePasswordRules_Type.__name__ = "Integer32"
_LcsSystemAccountEnforcePasswordRules_Object = MibScalar
lcsSystemAccountEnforcePasswordRules = _LcsSystemAccountEnforcePasswordRules_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 3, 1, 1502),
    _LcsSystemAccountEnforcePasswordRules_Type()
)
lcsSystemAccountEnforcePasswordRules.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemAccountEnforcePasswordRules.setStatus("current")
_LcsIP_ObjectIdentity = ObjectIdentity
lcsIP = _LcsIP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4)
)
_LcsIPConfigurationBasic_ObjectIdentity = ObjectIdentity
lcsIPConfigurationBasic = _LcsIPConfigurationBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1)
)


class _LcsIPConfigIPv4DHCPClientEnable_Type(Integer32):
    """Custom type lcsIPConfigIPv4DHCPClientEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIPConfigIPv4DHCPClientEnable_Type.__name__ = "Integer32"
_LcsIPConfigIPv4DHCPClientEnable_Object = MibScalar
lcsIPConfigIPv4DHCPClientEnable = _LcsIPConfigIPv4DHCPClientEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 1),
    _LcsIPConfigIPv4DHCPClientEnable_Type()
)
lcsIPConfigIPv4DHCPClientEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigIPv4DHCPClientEnable.setStatus("current")
_LcsIPConfigIPv4Address_Type = DisplayString
_LcsIPConfigIPv4Address_Object = MibScalar
lcsIPConfigIPv4Address = _LcsIPConfigIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 2),
    _LcsIPConfigIPv4Address_Type()
)
lcsIPConfigIPv4Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigIPv4Address.setStatus("current")
_LcsIPConfigSubnetMask_Type = DisplayString
_LcsIPConfigSubnetMask_Object = MibScalar
lcsIPConfigSubnetMask = _LcsIPConfigSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 3),
    _LcsIPConfigSubnetMask_Type()
)
lcsIPConfigSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigSubnetMask.setStatus("current")
_LcsIPConfigGateway_Type = DisplayString
_LcsIPConfigGateway_Object = MibScalar
lcsIPConfigGateway = _LcsIPConfigGateway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 4),
    _LcsIPConfigGateway_Type()
)
lcsIPConfigGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigGateway.setStatus("current")


class _LcsIPConfigDNSServer_Type(Integer32):
    """Custom type lcsIPConfigDNSServer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsIPConfigDNSServer_Type.__name__ = "Integer32"
_LcsIPConfigDNSServer_Object = MibScalar
lcsIPConfigDNSServer = _LcsIPConfigDNSServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 5),
    _LcsIPConfigDNSServer_Type()
)
lcsIPConfigDNSServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigDNSServer.setStatus("current")
_LcsIPConfigDNSServerValue_Type = DisplayString
_LcsIPConfigDNSServerValue_Object = MibScalar
lcsIPConfigDNSServerValue = _LcsIPConfigDNSServerValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 1, 6),
    _LcsIPConfigDNSServerValue_Type()
)
lcsIPConfigDNSServerValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPConfigDNSServerValue.setStatus("current")
_LcsIPConfiguration_ObjectIdentity = ObjectIdentity
lcsIPConfiguration = _LcsIPConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2)
)


class _LcsMode_Type(Integer32):
    """Custom type lcsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMode_Type.__name__ = "Integer32"
_LcsMode_Object = MibScalar
lcsMode = _LcsMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 2),
    _LcsMode_Type()
)
lcsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMode.setStatus("current")


class _LcsDNSServerSource1_Type(Integer32):
    """Custom type lcsDNSServerSource1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsDNSServerSource1_Type.__name__ = "Integer32"
_LcsDNSServerSource1_Object = MibScalar
lcsDNSServerSource1 = _LcsDNSServerSource1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 3),
    _LcsDNSServerSource1_Type()
)
lcsDNSServerSource1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerSource1.setStatus("current")


class _LcsDNSServerSource2_Type(Integer32):
    """Custom type lcsDNSServerSource2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsDNSServerSource2_Type.__name__ = "Integer32"
_LcsDNSServerSource2_Object = MibScalar
lcsDNSServerSource2 = _LcsDNSServerSource2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 4),
    _LcsDNSServerSource2_Type()
)
lcsDNSServerSource2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerSource2.setStatus("current")


class _LcsDNSServerSource3_Type(Integer32):
    """Custom type lcsDNSServerSource3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsDNSServerSource3_Type.__name__ = "Integer32"
_LcsDNSServerSource3_Object = MibScalar
lcsDNSServerSource3 = _LcsDNSServerSource3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 5),
    _LcsDNSServerSource3_Type()
)
lcsDNSServerSource3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerSource3.setStatus("current")


class _LcsDNSServerSource4_Type(Integer32):
    """Custom type lcsDNSServerSource4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsDNSServerSource4_Type.__name__ = "Integer32"
_LcsDNSServerSource4_Object = MibScalar
lcsDNSServerSource4 = _LcsDNSServerSource4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 6),
    _LcsDNSServerSource4_Type()
)
lcsDNSServerSource4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerSource4.setStatus("current")
_LcsDNSServerValue1_Type = DisplayString
_LcsDNSServerValue1_Object = MibScalar
lcsDNSServerValue1 = _LcsDNSServerValue1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 7),
    _LcsDNSServerValue1_Type()
)
lcsDNSServerValue1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerValue1.setStatus("current")
_LcsDNSServerValue2_Type = DisplayString
_LcsDNSServerValue2_Object = MibScalar
lcsDNSServerValue2 = _LcsDNSServerValue2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 8),
    _LcsDNSServerValue2_Type()
)
lcsDNSServerValue2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerValue2.setStatus("current")
_LcsDNSServerValue3_Type = DisplayString
_LcsDNSServerValue3_Object = MibScalar
lcsDNSServerValue3 = _LcsDNSServerValue3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 9),
    _LcsDNSServerValue3_Type()
)
lcsDNSServerValue3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerValue3.setStatus("current")
_LcsDNSServerValue4_Type = DisplayString
_LcsDNSServerValue4_Object = MibScalar
lcsDNSServerValue4 = _LcsDNSServerValue4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 10),
    _LcsDNSServerValue4_Type()
)
lcsDNSServerValue4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSServerValue4.setStatus("current")


class _LcsDNSProxy_Type(Integer32):
    """Custom type lcsDNSProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDNSProxy_Type.__name__ = "Integer32"
_LcsDNSProxy_Object = MibScalar
lcsDNSProxy = _LcsDNSProxy_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 2, 11),
    _LcsDNSProxy_Type()
)
lcsDNSProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDNSProxy.setStatus("current")
_LcsIPInterfaces_ObjectIdentity = ObjectIdentity
lcsIPInterfaces = _LcsIPInterfaces_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3)
)
_LcsIPInterfacesTable_Object = MibTable
lcsIPInterfacesTable = _LcsIPInterfacesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1)
)
if mibBuilder.loadTexts:
    lcsIPInterfacesTable.setStatus("current")
_LcsIPInterfacesEntry_Object = MibTableRow
lcsIPInterfacesEntry = _LcsIPInterfacesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1)
)
lcsIPInterfacesEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPInterfacesIndex"),
)
if mibBuilder.loadTexts:
    lcsIPInterfacesEntry.setStatus("current")


class _LcsIPInterfacesIndex_Type(Integer32):
    """Custom type lcsIPInterfacesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_LcsIPInterfacesIndex_Type.__name__ = "Integer32"
_LcsIPInterfacesIndex_Object = MibTableColumn
lcsIPInterfacesIndex = _LcsIPInterfacesIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 1),
    _LcsIPInterfacesIndex_Type()
)
lcsIPInterfacesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPInterfacesIndex.setStatus("current")


class _LcsIPInterfacesVLAN_Type(Integer32):
    """Custom type lcsIPInterfacesVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsIPInterfacesVLAN_Type.__name__ = "Integer32"
_LcsIPInterfacesVLAN_Object = MibTableColumn
lcsIPInterfacesVLAN = _LcsIPInterfacesVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 2),
    _LcsIPInterfacesVLAN_Type()
)
lcsIPInterfacesVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesVLAN.setStatus("current")


class _LcsIPInterfacesIPv4DHCP_Type(Integer32):
    """Custom type lcsIPInterfacesIPv4DHCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIPInterfacesIPv4DHCP_Type.__name__ = "Integer32"
_LcsIPInterfacesIPv4DHCP_Object = MibTableColumn
lcsIPInterfacesIPv4DHCP = _LcsIPInterfacesIPv4DHCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 3),
    _LcsIPInterfacesIPv4DHCP_Type()
)
lcsIPInterfacesIPv4DHCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv4DHCP.setStatus("current")
_LcsIPInterfacesIPv4DHCPFallback_Type = DisplayString
_LcsIPInterfacesIPv4DHCPFallback_Object = MibTableColumn
lcsIPInterfacesIPv4DHCPFallback = _LcsIPInterfacesIPv4DHCPFallback_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 4),
    _LcsIPInterfacesIPv4DHCPFallback_Type()
)
lcsIPInterfacesIPv4DHCPFallback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv4DHCPFallback.setStatus("current")
_LcsIPInterfacesIPv4DHCPCurrentLease_Type = IpAddress
_LcsIPInterfacesIPv4DHCPCurrentLease_Object = MibTableColumn
lcsIPInterfacesIPv4DHCPCurrentLease = _LcsIPInterfacesIPv4DHCPCurrentLease_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 5),
    _LcsIPInterfacesIPv4DHCPCurrentLease_Type()
)
lcsIPInterfacesIPv4DHCPCurrentLease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv4DHCPCurrentLease.setStatus("current")
_LcsIPInterfacesIPv4Address_Type = IpAddress
_LcsIPInterfacesIPv4Address_Object = MibTableColumn
lcsIPInterfacesIPv4Address = _LcsIPInterfacesIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 6),
    _LcsIPInterfacesIPv4Address_Type()
)
lcsIPInterfacesIPv4Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv4Address.setStatus("current")


class _LcsIPInterfacesIPv4Mask_Type(Integer32):
    """Custom type lcsIPInterfacesIPv4Mask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_LcsIPInterfacesIPv4Mask_Type.__name__ = "Integer32"
_LcsIPInterfacesIPv4Mask_Object = MibTableColumn
lcsIPInterfacesIPv4Mask = _LcsIPInterfacesIPv4Mask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 7),
    _LcsIPInterfacesIPv4Mask_Type()
)
lcsIPInterfacesIPv4Mask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv4Mask.setStatus("current")


class _LcsIPInterfacesIPv6DHCP_Type(Integer32):
    """Custom type lcsIPInterfacesIPv6DHCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIPInterfacesIPv6DHCP_Type.__name__ = "Integer32"
_LcsIPInterfacesIPv6DHCP_Object = MibTableColumn
lcsIPInterfacesIPv6DHCP = _LcsIPInterfacesIPv6DHCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 8),
    _LcsIPInterfacesIPv6DHCP_Type()
)
lcsIPInterfacesIPv6DHCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv6DHCP.setStatus("current")


class _LcsIPInterfacesIPv6RapidCommit_Type(Integer32):
    """Custom type lcsIPInterfacesIPv6RapidCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIPInterfacesIPv6RapidCommit_Type.__name__ = "Integer32"
_LcsIPInterfacesIPv6RapidCommit_Object = MibTableColumn
lcsIPInterfacesIPv6RapidCommit = _LcsIPInterfacesIPv6RapidCommit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 9),
    _LcsIPInterfacesIPv6RapidCommit_Type()
)
lcsIPInterfacesIPv6RapidCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv6RapidCommit.setStatus("current")
_LcsIPInterfacesIPv6CurrentLease_Type = DisplayString
_LcsIPInterfacesIPv6CurrentLease_Object = MibTableColumn
lcsIPInterfacesIPv6CurrentLease = _LcsIPInterfacesIPv6CurrentLease_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 10),
    _LcsIPInterfacesIPv6CurrentLease_Type()
)
lcsIPInterfacesIPv6CurrentLease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv6CurrentLease.setStatus("current")


class _LcsIPInterfacesIPv6Address_Type(DisplayString):
    """Custom type lcsIPInterfacesIPv6Address based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_LcsIPInterfacesIPv6Address_Type.__name__ = "DisplayString"
_LcsIPInterfacesIPv6Address_Object = MibTableColumn
lcsIPInterfacesIPv6Address = _LcsIPInterfacesIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 11),
    _LcsIPInterfacesIPv6Address_Type()
)
lcsIPInterfacesIPv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv6Address.setStatus("current")


class _LcsIPInterfacesIPv6Mask_Type(Integer32):
    """Custom type lcsIPInterfacesIPv6Mask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_LcsIPInterfacesIPv6Mask_Type.__name__ = "Integer32"
_LcsIPInterfacesIPv6Mask_Object = MibTableColumn
lcsIPInterfacesIPv6Mask = _LcsIPInterfacesIPv6Mask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 12),
    _LcsIPInterfacesIPv6Mask_Type()
)
lcsIPInterfacesIPv6Mask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPInterfacesIPv6Mask.setStatus("current")
_LcsIPInterfacesRowStatus_Type = RowStatus
_LcsIPInterfacesRowStatus_Object = MibTableColumn
lcsIPInterfacesRowStatus = _LcsIPInterfacesRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 3, 1, 1, 13),
    _LcsIPInterfacesRowStatus_Type()
)
lcsIPInterfacesRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPInterfacesRowStatus.setStatus("current")
_LcsIPRoutes_ObjectIdentity = ObjectIdentity
lcsIPRoutes = _LcsIPRoutes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4)
)
_LcsIPRoutesTable_Object = MibTable
lcsIPRoutesTable = _LcsIPRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1)
)
if mibBuilder.loadTexts:
    lcsIPRoutesTable.setStatus("current")
_LcsIPRoutesEntry_Object = MibTableRow
lcsIPRoutesEntry = _LcsIPRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1)
)
lcsIPRoutesEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPRoutesIndex"),
)
if mibBuilder.loadTexts:
    lcsIPRoutesEntry.setStatus("current")


class _LcsIPRoutesIndex_Type(Integer32):
    """Custom type lcsIPRoutesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_LcsIPRoutesIndex_Type.__name__ = "Integer32"
_LcsIPRoutesIndex_Object = MibTableColumn
lcsIPRoutesIndex = _LcsIPRoutesIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 2),
    _LcsIPRoutesIndex_Type()
)
lcsIPRoutesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPRoutesIndex.setStatus("current")


class _LcsIPRoutesNetwork_Type(DisplayString):
    """Custom type lcsIPRoutesNetwork based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_LcsIPRoutesNetwork_Type.__name__ = "DisplayString"
_LcsIPRoutesNetwork_Object = MibTableColumn
lcsIPRoutesNetwork = _LcsIPRoutesNetwork_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 3),
    _LcsIPRoutesNetwork_Type()
)
lcsIPRoutesNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPRoutesNetwork.setStatus("current")


class _LcsIPRoutesMaskLength_Type(Integer32):
    """Custom type lcsIPRoutesMaskLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_LcsIPRoutesMaskLength_Type.__name__ = "Integer32"
_LcsIPRoutesMaskLength_Object = MibTableColumn
lcsIPRoutesMaskLength = _LcsIPRoutesMaskLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 4),
    _LcsIPRoutesMaskLength_Type()
)
lcsIPRoutesMaskLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPRoutesMaskLength.setStatus("current")


class _LcsIPRoutesGateway_Type(DisplayString):
    """Custom type lcsIPRoutesGateway based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_LcsIPRoutesGateway_Type.__name__ = "DisplayString"
_LcsIPRoutesGateway_Object = MibTableColumn
lcsIPRoutesGateway = _LcsIPRoutesGateway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 5),
    _LcsIPRoutesGateway_Type()
)
lcsIPRoutesGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPRoutesGateway.setStatus("current")


class _LcsIPRoutesNextHopVLAN_Type(Integer32):
    """Custom type lcsIPRoutesNextHopVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsIPRoutesNextHopVLAN_Type.__name__ = "Integer32"
_LcsIPRoutesNextHopVLAN_Object = MibTableColumn
lcsIPRoutesNextHopVLAN = _LcsIPRoutesNextHopVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 6),
    _LcsIPRoutesNextHopVLAN_Type()
)
lcsIPRoutesNextHopVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPRoutesNextHopVLAN.setStatus("current")
_LcsIPRoutesRowStatus_Type = RowStatus
_LcsIPRoutesRowStatus_Object = MibTableColumn
lcsIPRoutesRowStatus = _LcsIPRoutesRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 4, 1, 1, 7),
    _LcsIPRoutesRowStatus_Type()
)
lcsIPRoutesRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPRoutesRowStatus.setStatus("current")
_LcsIPStatusInterface_ObjectIdentity = ObjectIdentity
lcsIPStatusInterface = _LcsIPStatusInterface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8)
)
_LcsIPStatusInterfaceTable_Object = MibTable
lcsIPStatusInterfaceTable = _LcsIPStatusInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1)
)
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceTable.setStatus("current")
_LcsIPStatusInterfaceEntry_Object = MibTableRow
lcsIPStatusInterfaceEntry = _LcsIPStatusInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1)
)
lcsIPStatusInterfaceEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPStatusInterfaceIndex"),
)
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceEntry.setStatus("current")


class _LcsIPStatusInterfaceIndex_Type(Integer32):
    """Custom type lcsIPStatusInterfaceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_LcsIPStatusInterfaceIndex_Type.__name__ = "Integer32"
_LcsIPStatusInterfaceIndex_Object = MibTableColumn
lcsIPStatusInterfaceIndex = _LcsIPStatusInterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1, 1),
    _LcsIPStatusInterfaceIndex_Type()
)
lcsIPStatusInterfaceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceIndex.setStatus("current")
_LcsIPStatusInterfaceName_Type = DisplayString
_LcsIPStatusInterfaceName_Object = MibTableColumn
lcsIPStatusInterfaceName = _LcsIPStatusInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1, 2),
    _LcsIPStatusInterfaceName_Type()
)
lcsIPStatusInterfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceName.setStatus("current")
_LcsIPStatusInterfaceType_Type = DisplayString
_LcsIPStatusInterfaceType_Object = MibTableColumn
lcsIPStatusInterfaceType = _LcsIPStatusInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1, 3),
    _LcsIPStatusInterfaceType_Type()
)
lcsIPStatusInterfaceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceType.setStatus("current")
_LcsIPStatusInterfaceAddress_Type = DisplayString
_LcsIPStatusInterfaceAddress_Object = MibTableColumn
lcsIPStatusInterfaceAddress = _LcsIPStatusInterfaceAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1, 4),
    _LcsIPStatusInterfaceAddress_Type()
)
lcsIPStatusInterfaceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceAddress.setStatus("current")
_LcsIPStatusInterfaceStatus_Type = DisplayString
_LcsIPStatusInterfaceStatus_Object = MibTableColumn
lcsIPStatusInterfaceStatus = _LcsIPStatusInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 8, 1, 1, 5),
    _LcsIPStatusInterfaceStatus_Type()
)
lcsIPStatusInterfaceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusInterfaceStatus.setStatus("current")
_LcsIPStatusRoute_ObjectIdentity = ObjectIdentity
lcsIPStatusRoute = _LcsIPStatusRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9)
)
_LcsIPStatusRouteTable_Object = MibTable
lcsIPStatusRouteTable = _LcsIPStatusRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1)
)
if mibBuilder.loadTexts:
    lcsIPStatusRouteTable.setStatus("current")
_LcsIPStatusRouteEntry_Object = MibTableRow
lcsIPStatusRouteEntry = _LcsIPStatusRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1, 1)
)
lcsIPStatusRouteEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPStatusRouteIndex"),
)
if mibBuilder.loadTexts:
    lcsIPStatusRouteEntry.setStatus("current")


class _LcsIPStatusRouteIndex_Type(Integer32):
    """Custom type lcsIPStatusRouteIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2048),
    )


_LcsIPStatusRouteIndex_Type.__name__ = "Integer32"
_LcsIPStatusRouteIndex_Object = MibTableColumn
lcsIPStatusRouteIndex = _LcsIPStatusRouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1, 1, 1),
    _LcsIPStatusRouteIndex_Type()
)
lcsIPStatusRouteIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPStatusRouteIndex.setStatus("current")
_LcsIPStatusRouteNetwork_Type = DisplayString
_LcsIPStatusRouteNetwork_Object = MibTableColumn
lcsIPStatusRouteNetwork = _LcsIPStatusRouteNetwork_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1, 1, 2),
    _LcsIPStatusRouteNetwork_Type()
)
lcsIPStatusRouteNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusRouteNetwork.setStatus("current")
_LcsIPStatusRouteGateway_Type = DisplayString
_LcsIPStatusRouteGateway_Object = MibTableColumn
lcsIPStatusRouteGateway = _LcsIPStatusRouteGateway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1, 1, 3),
    _LcsIPStatusRouteGateway_Type()
)
lcsIPStatusRouteGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusRouteGateway.setStatus("current")
_LcsIPStatusRouteAddress_Type = DisplayString
_LcsIPStatusRouteAddress_Object = MibTableColumn
lcsIPStatusRouteAddress = _LcsIPStatusRouteAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 9, 1, 1, 4),
    _LcsIPStatusRouteAddress_Type()
)
lcsIPStatusRouteAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusRouteAddress.setStatus("current")
_LcsIPStatusNeighborCache_ObjectIdentity = ObjectIdentity
lcsIPStatusNeighborCache = _LcsIPStatusNeighborCache_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10)
)
_LcsIPStatusNeighborCacheTable_Object = MibTable
lcsIPStatusNeighborCacheTable = _LcsIPStatusNeighborCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10, 1)
)
if mibBuilder.loadTexts:
    lcsIPStatusNeighborCacheTable.setStatus("current")
_LcsIPStatusNeighborCacheEntry_Object = MibTableRow
lcsIPStatusNeighborCacheEntry = _LcsIPStatusNeighborCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10, 1, 1)
)
lcsIPStatusNeighborCacheEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPStatusNeighborCacheIndex"),
)
if mibBuilder.loadTexts:
    lcsIPStatusNeighborCacheEntry.setStatus("current")


class _LcsIPStatusNeighborCacheIndex_Type(Integer32):
    """Custom type lcsIPStatusNeighborCacheIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_LcsIPStatusNeighborCacheIndex_Type.__name__ = "Integer32"
_LcsIPStatusNeighborCacheIndex_Object = MibTableColumn
lcsIPStatusNeighborCacheIndex = _LcsIPStatusNeighborCacheIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10, 1, 1, 1),
    _LcsIPStatusNeighborCacheIndex_Type()
)
lcsIPStatusNeighborCacheIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPStatusNeighborCacheIndex.setStatus("current")
_LcsIPStatusNeighborCacheIPAddress_Type = DisplayString
_LcsIPStatusNeighborCacheIPAddress_Object = MibTableColumn
lcsIPStatusNeighborCacheIPAddress = _LcsIPStatusNeighborCacheIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10, 1, 1, 2),
    _LcsIPStatusNeighborCacheIPAddress_Type()
)
lcsIPStatusNeighborCacheIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusNeighborCacheIPAddress.setStatus("current")
_LcsIPStatusNeighborCacheLinkAddress_Type = DisplayString
_LcsIPStatusNeighborCacheLinkAddress_Object = MibTableColumn
lcsIPStatusNeighborCacheLinkAddress = _LcsIPStatusNeighborCacheLinkAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 10, 1, 1, 3),
    _LcsIPStatusNeighborCacheLinkAddress_Type()
)
lcsIPStatusNeighborCacheLinkAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusNeighborCacheLinkAddress.setStatus("current")
_LcsIPStatusDNSServer_ObjectIdentity = ObjectIdentity
lcsIPStatusDNSServer = _LcsIPStatusDNSServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 11)
)
_LcsIPStatusDNSServerType_Type = DisplayString
_LcsIPStatusDNSServerType_Object = MibScalar
lcsIPStatusDNSServerType = _LcsIPStatusDNSServerType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 11, 1),
    _LcsIPStatusDNSServerType_Type()
)
lcsIPStatusDNSServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusDNSServerType.setStatus("current")
_LcsIPStatusDNSServerIPAddress_Type = DisplayString
_LcsIPStatusDNSServerIPAddress_Object = MibScalar
lcsIPStatusDNSServerIPAddress = _LcsIPStatusDNSServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 11, 2),
    _LcsIPStatusDNSServerIPAddress_Type()
)
lcsIPStatusDNSServerIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusDNSServerIPAddress.setStatus("current")
_LcsIPStatusDNSServerInterface_Type = DisplayString
_LcsIPStatusDNSServerInterface_Object = MibScalar
lcsIPStatusDNSServerInterface = _LcsIPStatusDNSServerInterface_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 4, 11, 3),
    _LcsIPStatusDNSServerInterface_Type()
)
lcsIPStatusDNSServerInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPStatusDNSServerInterface.setStatus("current")
_LcsSyslog_ObjectIdentity = ObjectIdentity
lcsSyslog = _LcsSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5)
)
_LcsSyslogConf_ObjectIdentity = ObjectIdentity
lcsSyslogConf = _LcsSyslogConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 1)
)


class _LcsSystemLogServerMode_Type(AdminMode):
    """Custom type lcsSystemLogServerMode based on AdminMode"""
    defaultValue = 0


_LcsSystemLogServerMode_Type.__name__ = "AdminMode"
_LcsSystemLogServerMode_Object = MibScalar
lcsSystemLogServerMode = _LcsSystemLogServerMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 1, 1),
    _LcsSystemLogServerMode_Type()
)
lcsSystemLogServerMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogServerMode.setStatus("current")
_LcsSystemLogServerAddress_Type = DisplayString
_LcsSystemLogServerAddress_Object = MibScalar
lcsSystemLogServerAddress = _LcsSystemLogServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 1, 2),
    _LcsSystemLogServerAddress_Type()
)
lcsSystemLogServerAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogServerAddress.setStatus("current")


class _LcsSystemLogServerPort_Type(Integer32):
    """Custom type lcsSystemLogServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSystemLogServerPort_Type.__name__ = "Integer32"
_LcsSystemLogServerPort_Object = MibScalar
lcsSystemLogServerPort = _LcsSystemLogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 1, 4),
    _LcsSystemLogServerPort_Type()
)
lcsSystemLogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogServerPort.setStatus("current")


class _LcsSystemLogIncludeHostname_Type(Integer32):
    """Custom type lcsSystemLogIncludeHostname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LcsSystemLogIncludeHostname_Type.__name__ = "Integer32"
_LcsSystemLogIncludeHostname_Object = MibScalar
lcsSystemLogIncludeHostname = _LcsSystemLogIncludeHostname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 1, 150),
    _LcsSystemLogIncludeHostname_Type()
)
lcsSystemLogIncludeHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogIncludeHostname.setStatus("current")
_LcsSysLogInfo_ObjectIdentity = ObjectIdentity
lcsSysLogInfo = _LcsSysLogInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2)
)


class _LcsSystemLogInfoLevel_Type(Integer32):
    """Custom type lcsSystemLogInfoLevel based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("emergency", 0),
          ("alert", 1),
          ("critical", 2),
          ("error", 3),
          ("warning", 4),
          ("notice", 5),
          ("information", 6),
          ("debug", 7),
          ("all", 8))
    )


_LcsSystemLogInfoLevel_Type.__name__ = "Integer32"
_LcsSystemLogInfoLevel_Object = MibScalar
lcsSystemLogInfoLevel = _LcsSystemLogInfoLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 1),
    _LcsSystemLogInfoLevel_Type()
)
lcsSystemLogInfoLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogInfoLevel.setStatus("current")


class _LcsSystemLogInfoClearLevel_Type(Integer32):
    """Custom type lcsSystemLogInfoClearLevel based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("emergency", 0),
          ("alert", 1),
          ("critical", 2),
          ("error", 3),
          ("warning", 4),
          ("notice", 5),
          ("information", 6),
          ("debug", 7),
          ("all", 8))
    )


_LcsSystemLogInfoClearLevel_Type.__name__ = "Integer32"
_LcsSystemLogInfoClearLevel_Object = MibScalar
lcsSystemLogInfoClearLevel = _LcsSystemLogInfoClearLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 2),
    _LcsSystemLogInfoClearLevel_Type()
)
lcsSystemLogInfoClearLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogInfoClearLevel.setStatus("current")


class _LcsSystemLogInfoClearCmd_Type(ActivateCmd):
    """Custom type lcsSystemLogInfoClearCmd based on ActivateCmd"""
    defaultValue = 0


_LcsSystemLogInfoClearCmd_Type.__name__ = "ActivateCmd"
_LcsSystemLogInfoClearCmd_Object = MibScalar
lcsSystemLogInfoClearCmd = _LcsSystemLogInfoClearCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 3),
    _LcsSystemLogInfoClearCmd_Type()
)
lcsSystemLogInfoClearCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSystemLogInfoClearCmd.setStatus("current")
_LcsSystemLogDetailedInfoTable_Object = MibTable
lcsSystemLogDetailedInfoTable = _LcsSystemLogDetailedInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4)
)
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoTable.setStatus("current")
_LcsSystemLogDetailedInfoEntry_Object = MibTableRow
lcsSystemLogDetailedInfoEntry = _LcsSystemLogDetailedInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1)
)
lcsSystemLogDetailedInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSystemLogDetailedInfoID"),
)
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoEntry.setStatus("current")


class _LcsSystemLogDetailedSwitchIndex_Type(Integer32):
    """Custom type lcsSystemLogDetailedSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsSystemLogDetailedSwitchIndex_Type.__name__ = "Integer32"
_LcsSystemLogDetailedSwitchIndex_Object = MibTableColumn
lcsSystemLogDetailedSwitchIndex = _LcsSystemLogDetailedSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1, 1),
    _LcsSystemLogDetailedSwitchIndex_Type()
)
lcsSystemLogDetailedSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsSystemLogDetailedSwitchIndex.setStatus("current")


class _LcsSystemLogDetailedInfoID_Type(Integer32):
    """Custom type lcsSystemLogDetailedInfoID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_LcsSystemLogDetailedInfoID_Type.__name__ = "Integer32"
_LcsSystemLogDetailedInfoID_Object = MibTableColumn
lcsSystemLogDetailedInfoID = _LcsSystemLogDetailedInfoID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1, 2),
    _LcsSystemLogDetailedInfoID_Type()
)
lcsSystemLogDetailedInfoID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoID.setStatus("current")
_LcsSystemLogDetailedInfoLevel_Type = DisplayString
_LcsSystemLogDetailedInfoLevel_Object = MibTableColumn
lcsSystemLogDetailedInfoLevel = _LcsSystemLogDetailedInfoLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1, 3),
    _LcsSystemLogDetailedInfoLevel_Type()
)
lcsSystemLogDetailedInfoLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoLevel.setStatus("current")


class _LcsSystemLogDetailedInfoTime_Type(DisplayString):
    """Custom type lcsSystemLogDetailedInfoTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_LcsSystemLogDetailedInfoTime_Type.__name__ = "DisplayString"
_LcsSystemLogDetailedInfoTime_Object = MibTableColumn
lcsSystemLogDetailedInfoTime = _LcsSystemLogDetailedInfoTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1, 4),
    _LcsSystemLogDetailedInfoTime_Type()
)
lcsSystemLogDetailedInfoTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoTime.setStatus("current")
_LcsSystemLogDetailedInfoMessage_Type = DisplayString
_LcsSystemLogDetailedInfoMessage_Object = MibTableColumn
lcsSystemLogDetailedInfoMessage = _LcsSystemLogDetailedInfoMessage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 5, 2, 4, 1, 5),
    _LcsSystemLogDetailedInfoMessage_Type()
)
lcsSystemLogDetailedInfoMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSystemLogDetailedInfoMessage.setStatus("current")
_LcsSnmp_ObjectIdentity = ObjectIdentity
lcsSnmp = _LcsSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6)
)
_LcsSnmpSystem_ObjectIdentity = ObjectIdentity
lcsSnmpSystem = _LcsSnmpSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1)
)
_LcsSnmpSystemMode_Type = Integer32
_LcsSnmpSystemMode_Object = MibScalar
lcsSnmpSystemMode = _LcsSnmpSystemMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1, 1),
    _LcsSnmpSystemMode_Type()
)
lcsSnmpSystemMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSnmpSystemMode.setStatus("current")
_LcsSnmpSystemReadCommunity_Type = DisplayString
_LcsSnmpSystemReadCommunity_Object = MibScalar
lcsSnmpSystemReadCommunity = _LcsSnmpSystemReadCommunity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1, 3),
    _LcsSnmpSystemReadCommunity_Type()
)
lcsSnmpSystemReadCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSnmpSystemReadCommunity.setStatus("current")
_LcsSnmpSystemWriteCommunity_Type = DisplayString
_LcsSnmpSystemWriteCommunity_Object = MibScalar
lcsSnmpSystemWriteCommunity = _LcsSnmpSystemWriteCommunity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1, 4),
    _LcsSnmpSystemWriteCommunity_Type()
)
lcsSnmpSystemWriteCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSnmpSystemWriteCommunity.setStatus("current")
_LcsSnmpSystemWriteCommunityMode_Type = Integer32
_LcsSnmpSystemWriteCommunityMode_Object = MibScalar
lcsSnmpSystemWriteCommunityMode = _LcsSnmpSystemWriteCommunityMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1, 6),
    _LcsSnmpSystemWriteCommunityMode_Type()
)
lcsSnmpSystemWriteCommunityMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSnmpSystemWriteCommunityMode.setStatus("current")
_LcsSnmpSystemReadCommunityMode_Type = Integer32
_LcsSnmpSystemReadCommunityMode_Object = MibScalar
lcsSnmpSystemReadCommunityMode = _LcsSnmpSystemReadCommunityMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 1, 7),
    _LcsSnmpSystemReadCommunityMode_Type()
)
lcsSnmpSystemReadCommunityMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSnmpSystemReadCommunityMode.setStatus("current")
_LcsTrapDestinationConfTable_Object = MibTable
lcsTrapDestinationConfTable = _LcsTrapDestinationConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3)
)
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTable.setStatus("current")
_LcsTrapDestinationConfEntry_Object = MibTableRow
lcsTrapDestinationConfEntry = _LcsTrapDestinationConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1)
)
lcsTrapDestinationConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsTrapDestinationConfIndex"),
)
if mibBuilder.loadTexts:
    lcsTrapDestinationConfEntry.setStatus("current")


class _LcsTrapDestinationConfIndex_Type(Integer32):
    """Custom type lcsTrapDestinationConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsTrapDestinationConfIndex_Type.__name__ = "Integer32"
_LcsTrapDestinationConfIndex_Object = MibTableColumn
lcsTrapDestinationConfIndex = _LcsTrapDestinationConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 1),
    _LcsTrapDestinationConfIndex_Type()
)
lcsTrapDestinationConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfIndex.setStatus("current")
_LcsTrapDestinationConfTrapConfigName_Type = DisplayString
_LcsTrapDestinationConfTrapConfigName_Object = MibTableColumn
lcsTrapDestinationConfTrapConfigName = _LcsTrapDestinationConfTrapConfigName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 2),
    _LcsTrapDestinationConfTrapConfigName_Type()
)
lcsTrapDestinationConfTrapConfigName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapConfigName.setStatus("current")
_LcsTrapDestinationConfTrapMode_Type = Integer32
_LcsTrapDestinationConfTrapMode_Object = MibTableColumn
lcsTrapDestinationConfTrapMode = _LcsTrapDestinationConfTrapMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 3),
    _LcsTrapDestinationConfTrapMode_Type()
)
lcsTrapDestinationConfTrapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapMode.setStatus("current")
_LcsTrapDestinationConfTrapVersion_Type = Integer32
_LcsTrapDestinationConfTrapVersion_Object = MibTableColumn
lcsTrapDestinationConfTrapVersion = _LcsTrapDestinationConfTrapVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 4),
    _LcsTrapDestinationConfTrapVersion_Type()
)
lcsTrapDestinationConfTrapVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapVersion.setStatus("current")
_LcsTrapDestinationConfTrapCommunity_Type = DisplayString
_LcsTrapDestinationConfTrapCommunity_Object = MibTableColumn
lcsTrapDestinationConfTrapCommunity = _LcsTrapDestinationConfTrapCommunity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 5),
    _LcsTrapDestinationConfTrapCommunity_Type()
)
lcsTrapDestinationConfTrapCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapCommunity.setStatus("current")
_LcsTrapDestinationConfTrapDestinationAddres_Type = DisplayString
_LcsTrapDestinationConfTrapDestinationAddres_Object = MibTableColumn
lcsTrapDestinationConfTrapDestinationAddres = _LcsTrapDestinationConfTrapDestinationAddres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 6),
    _LcsTrapDestinationConfTrapDestinationAddres_Type()
)
lcsTrapDestinationConfTrapDestinationAddres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapDestinationAddres.setStatus("current")
_LcsTrapDestinationConfTrapDestinationPort_Type = Integer32
_LcsTrapDestinationConfTrapDestinationPort_Object = MibTableColumn
lcsTrapDestinationConfTrapDestinationPort = _LcsTrapDestinationConfTrapDestinationPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 7),
    _LcsTrapDestinationConfTrapDestinationPort_Type()
)
lcsTrapDestinationConfTrapDestinationPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapDestinationPort.setStatus("current")
_LcsTrapDestinationConfTrapSecurityEngineID_Type = DisplayString
_LcsTrapDestinationConfTrapSecurityEngineID_Object = MibTableColumn
lcsTrapDestinationConfTrapSecurityEngineID = _LcsTrapDestinationConfTrapSecurityEngineID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 12),
    _LcsTrapDestinationConfTrapSecurityEngineID_Type()
)
lcsTrapDestinationConfTrapSecurityEngineID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapSecurityEngineID.setStatus("current")
_LcsTrapDestinationConfTrapSecurityName_Type = DisplayString
_LcsTrapDestinationConfTrapSecurityName_Object = MibTableColumn
lcsTrapDestinationConfTrapSecurityName = _LcsTrapDestinationConfTrapSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 13),
    _LcsTrapDestinationConfTrapSecurityName_Type()
)
lcsTrapDestinationConfTrapSecurityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapSecurityName.setStatus("current")
_LcsTrapDestinationConfTrapRowStatus_Type = Integer32
_LcsTrapDestinationConfTrapRowStatus_Object = MibTableColumn
lcsTrapDestinationConfTrapRowStatus = _LcsTrapDestinationConfTrapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 3, 1, 14),
    _LcsTrapDestinationConfTrapRowStatus_Type()
)
lcsTrapDestinationConfTrapRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapDestinationConfTrapRowStatus.setStatus("current")
_LcsSNMPCommunityConfTable_Object = MibTable
lcsSNMPCommunityConfTable = _LcsSNMPCommunityConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5)
)
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfTable.setStatus("current")
_LcsSNMPCommunityConfEntry_Object = MibTableRow
lcsSNMPCommunityConfEntry = _LcsSNMPCommunityConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1)
)
lcsSNMPCommunityConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSNMPCommunityConfIndex"),
)
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfEntry.setStatus("current")


class _LcsSNMPCommunityConfIndex_Type(Integer32):
    """Custom type lcsSNMPCommunityConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSNMPCommunityConfIndex_Type.__name__ = "Integer32"
_LcsSNMPCommunityConfIndex_Object = MibTableColumn
lcsSNMPCommunityConfIndex = _LcsSNMPCommunityConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1, 1),
    _LcsSNMPCommunityConfIndex_Type()
)
lcsSNMPCommunityConfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfIndex.setStatus("current")
_LcsSNMPCommunityConfSNMPv3Community_Type = DisplayString
_LcsSNMPCommunityConfSNMPv3Community_Object = MibTableColumn
lcsSNMPCommunityConfSNMPv3Community = _LcsSNMPCommunityConfSNMPv3Community_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1, 2),
    _LcsSNMPCommunityConfSNMPv3Community_Type()
)
lcsSNMPCommunityConfSNMPv3Community.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfSNMPv3Community.setStatus("current")
_LcsSNMPCommunityConfSNMPv3SourceIP_Type = IpAddress
_LcsSNMPCommunityConfSNMPv3SourceIP_Object = MibTableColumn
lcsSNMPCommunityConfSNMPv3SourceIP = _LcsSNMPCommunityConfSNMPv3SourceIP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1, 3),
    _LcsSNMPCommunityConfSNMPv3SourceIP_Type()
)
lcsSNMPCommunityConfSNMPv3SourceIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfSNMPv3SourceIP.setStatus("current")
_LcsSNMPCommunityConfSNMPv3SourceMask_Type = IpAddress
_LcsSNMPCommunityConfSNMPv3SourceMask_Object = MibTableColumn
lcsSNMPCommunityConfSNMPv3SourceMask = _LcsSNMPCommunityConfSNMPv3SourceMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1, 4),
    _LcsSNMPCommunityConfSNMPv3SourceMask_Type()
)
lcsSNMPCommunityConfSNMPv3SourceMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfSNMPv3SourceMask.setStatus("current")
_LcsSNMPCommunityConfSNMPv3RowStatus_Type = Integer32
_LcsSNMPCommunityConfSNMPv3RowStatus_Object = MibTableColumn
lcsSNMPCommunityConfSNMPv3RowStatus = _LcsSNMPCommunityConfSNMPv3RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 5, 1, 5),
    _LcsSNMPCommunityConfSNMPv3RowStatus_Type()
)
lcsSNMPCommunityConfSNMPv3RowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPCommunityConfSNMPv3RowStatus.setStatus("current")
_LcsSNMPv3UserConfTable_Object = MibTable
lcsSNMPv3UserConfTable = _LcsSNMPv3UserConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6)
)
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfTable.setStatus("current")
_LcsSNMPv3UserConfEntry_Object = MibTableRow
lcsSNMPv3UserConfEntry = _LcsSNMPv3UserConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1)
)
lcsSNMPv3UserConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSNMPv3UserConfIndex"),
)
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfEntry.setStatus("current")


class _LcsSNMPv3UserConfIndex_Type(Integer32):
    """Custom type lcsSNMPv3UserConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSNMPv3UserConfIndex_Type.__name__ = "Integer32"
_LcsSNMPv3UserConfIndex_Object = MibTableColumn
lcsSNMPv3UserConfIndex = _LcsSNMPv3UserConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 1),
    _LcsSNMPv3UserConfIndex_Type()
)
lcsSNMPv3UserConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfIndex.setStatus("current")
_LcsSNMPv3UserConfEngineID_Type = DisplayString
_LcsSNMPv3UserConfEngineID_Object = MibTableColumn
lcsSNMPv3UserConfEngineID = _LcsSNMPv3UserConfEngineID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 2),
    _LcsSNMPv3UserConfEngineID_Type()
)
lcsSNMPv3UserConfEngineID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfEngineID.setStatus("current")
_LcsSNMPv3UserConfUserName_Type = DisplayString
_LcsSNMPv3UserConfUserName_Object = MibTableColumn
lcsSNMPv3UserConfUserName = _LcsSNMPv3UserConfUserName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 3),
    _LcsSNMPv3UserConfUserName_Type()
)
lcsSNMPv3UserConfUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfUserName.setStatus("current")
_LcsSNMPv3UserConfSecurityLevel_Type = SNMPv3SecurityLevel
_LcsSNMPv3UserConfSecurityLevel_Object = MibTableColumn
lcsSNMPv3UserConfSecurityLevel = _LcsSNMPv3UserConfSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 4),
    _LcsSNMPv3UserConfSecurityLevel_Type()
)
lcsSNMPv3UserConfSecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfSecurityLevel.setStatus("current")
_LcsSNMPv3UserConfAuthenticationProtocol_Type = SNMPv3AuthenticationProtocol
_LcsSNMPv3UserConfAuthenticationProtocol_Object = MibTableColumn
lcsSNMPv3UserConfAuthenticationProtocol = _LcsSNMPv3UserConfAuthenticationProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 5),
    _LcsSNMPv3UserConfAuthenticationProtocol_Type()
)
lcsSNMPv3UserConfAuthenticationProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfAuthenticationProtocol.setStatus("current")
_LcsSNMPv3UserConfAuthenticationPassword_Type = DisplayString
_LcsSNMPv3UserConfAuthenticationPassword_Object = MibTableColumn
lcsSNMPv3UserConfAuthenticationPassword = _LcsSNMPv3UserConfAuthenticationPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 6),
    _LcsSNMPv3UserConfAuthenticationPassword_Type()
)
lcsSNMPv3UserConfAuthenticationPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfAuthenticationPassword.setStatus("current")
_LcsSNMPv3UserConfPrivacyProtocol_Type = SNMPv3PrivacyProtocol
_LcsSNMPv3UserConfPrivacyProtocol_Object = MibTableColumn
lcsSNMPv3UserConfPrivacyProtocol = _LcsSNMPv3UserConfPrivacyProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 7),
    _LcsSNMPv3UserConfPrivacyProtocol_Type()
)
lcsSNMPv3UserConfPrivacyProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfPrivacyProtocol.setStatus("current")
_LcsSNMPv3UserConfPrivacyPassword_Type = DisplayString
_LcsSNMPv3UserConfPrivacyPassword_Object = MibTableColumn
lcsSNMPv3UserConfPrivacyPassword = _LcsSNMPv3UserConfPrivacyPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 8),
    _LcsSNMPv3UserConfPrivacyPassword_Type()
)
lcsSNMPv3UserConfPrivacyPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfPrivacyPassword.setStatus("current")
_LcsSNMPv3UserConfRowStatus_Type = RowStatus
_LcsSNMPv3UserConfRowStatus_Object = MibTableColumn
lcsSNMPv3UserConfRowStatus = _LcsSNMPv3UserConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 6, 1, 9),
    _LcsSNMPv3UserConfRowStatus_Type()
)
lcsSNMPv3UserConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsSNMPv3UserConfRowStatus.setStatus("current")
_LcsSNMPv3GroupConfTable_Object = MibTable
lcsSNMPv3GroupConfTable = _LcsSNMPv3GroupConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7)
)
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfTable.setStatus("current")
_LcsSNMPv3GroupConfEntry_Object = MibTableRow
lcsSNMPv3GroupConfEntry = _LcsSNMPv3GroupConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1)
)
lcsSNMPv3GroupConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSNMPv3GroupConfIndex"),
)
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfEntry.setStatus("current")


class _LcsSNMPv3GroupConfIndex_Type(Integer32):
    """Custom type lcsSNMPv3GroupConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSNMPv3GroupConfIndex_Type.__name__ = "Integer32"
_LcsSNMPv3GroupConfIndex_Object = MibTableColumn
lcsSNMPv3GroupConfIndex = _LcsSNMPv3GroupConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1, 1),
    _LcsSNMPv3GroupConfIndex_Type()
)
lcsSNMPv3GroupConfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfIndex.setStatus("current")
_LcsSNMPv3GroupConfSecurityModel_Type = Integer32
_LcsSNMPv3GroupConfSecurityModel_Object = MibTableColumn
lcsSNMPv3GroupConfSecurityModel = _LcsSNMPv3GroupConfSecurityModel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1, 2),
    _LcsSNMPv3GroupConfSecurityModel_Type()
)
lcsSNMPv3GroupConfSecurityModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfSecurityModel.setStatus("current")
_LcsSNMPv3GroupConfSecurityName_Type = DisplayString
_LcsSNMPv3GroupConfSecurityName_Object = MibTableColumn
lcsSNMPv3GroupConfSecurityName = _LcsSNMPv3GroupConfSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1, 3),
    _LcsSNMPv3GroupConfSecurityName_Type()
)
lcsSNMPv3GroupConfSecurityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfSecurityName.setStatus("current")
_LcsSNMPv3GroupConfGroupName_Type = DisplayString
_LcsSNMPv3GroupConfGroupName_Object = MibTableColumn
lcsSNMPv3GroupConfGroupName = _LcsSNMPv3GroupConfGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1, 4),
    _LcsSNMPv3GroupConfGroupName_Type()
)
lcsSNMPv3GroupConfGroupName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfGroupName.setStatus("current")
_LcsSNMPv3GroupConfRowStatus_Type = RowStatus
_LcsSNMPv3GroupConfRowStatus_Object = MibTableColumn
lcsSNMPv3GroupConfRowStatus = _LcsSNMPv3GroupConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 7, 1, 5),
    _LcsSNMPv3GroupConfRowStatus_Type()
)
lcsSNMPv3GroupConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsSNMPv3GroupConfRowStatus.setStatus("current")
_LcsSNMPv3ViewsConfTable_Object = MibTable
lcsSNMPv3ViewsConfTable = _LcsSNMPv3ViewsConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8)
)
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfTable.setStatus("current")
_LcsSNMPv3ViewsConfEntry_Object = MibTableRow
lcsSNMPv3ViewsConfEntry = _LcsSNMPv3ViewsConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1)
)
lcsSNMPv3ViewsConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSNMPv3ViewsConfIndex"),
)
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfEntry.setStatus("current")


class _LcsSNMPv3ViewsConfIndex_Type(Integer32):
    """Custom type lcsSNMPv3ViewsConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSNMPv3ViewsConfIndex_Type.__name__ = "Integer32"
_LcsSNMPv3ViewsConfIndex_Object = MibTableColumn
lcsSNMPv3ViewsConfIndex = _LcsSNMPv3ViewsConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1, 1),
    _LcsSNMPv3ViewsConfIndex_Type()
)
lcsSNMPv3ViewsConfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfIndex.setStatus("current")
_LcsSNMPv3ViewsConfViewName_Type = DisplayString
_LcsSNMPv3ViewsConfViewName_Object = MibTableColumn
lcsSNMPv3ViewsConfViewName = _LcsSNMPv3ViewsConfViewName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1, 2),
    _LcsSNMPv3ViewsConfViewName_Type()
)
lcsSNMPv3ViewsConfViewName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfViewName.setStatus("current")
_LcsSNMPv3ViewsConfViewType_Type = Integer32
_LcsSNMPv3ViewsConfViewType_Object = MibTableColumn
lcsSNMPv3ViewsConfViewType = _LcsSNMPv3ViewsConfViewType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1, 3),
    _LcsSNMPv3ViewsConfViewType_Type()
)
lcsSNMPv3ViewsConfViewType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfViewType.setStatus("current")
_LcsSNMPv3ViewsConfOIDSubtree_Type = DisplayString
_LcsSNMPv3ViewsConfOIDSubtree_Object = MibTableColumn
lcsSNMPv3ViewsConfOIDSubtree = _LcsSNMPv3ViewsConfOIDSubtree_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1, 4),
    _LcsSNMPv3ViewsConfOIDSubtree_Type()
)
lcsSNMPv3ViewsConfOIDSubtree.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfOIDSubtree.setStatus("current")
_LcsSNMPv3ViewsConfRowStatus_Type = RowStatus
_LcsSNMPv3ViewsConfRowStatus_Object = MibTableColumn
lcsSNMPv3ViewsConfRowStatus = _LcsSNMPv3ViewsConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 8, 1, 5),
    _LcsSNMPv3ViewsConfRowStatus_Type()
)
lcsSNMPv3ViewsConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsSNMPv3ViewsConfRowStatus.setStatus("current")
_LcsSNMPv3AccessConfTable_Object = MibTable
lcsSNMPv3AccessConfTable = _LcsSNMPv3AccessConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9)
)
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfTable.setStatus("current")
_LcsSNMPv3AccessConfEntry_Object = MibTableRow
lcsSNMPv3AccessConfEntry = _LcsSNMPv3AccessConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1)
)
lcsSNMPv3AccessConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSNMPv3AccessConfIndex"),
)
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfEntry.setStatus("current")


class _LcsSNMPv3AccessConfIndex_Type(Integer32):
    """Custom type lcsSNMPv3AccessConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsSNMPv3AccessConfIndex_Type.__name__ = "Integer32"
_LcsSNMPv3AccessConfIndex_Object = MibTableColumn
lcsSNMPv3AccessConfIndex = _LcsSNMPv3AccessConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 1),
    _LcsSNMPv3AccessConfIndex_Type()
)
lcsSNMPv3AccessConfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfIndex.setStatus("current")
_LcsSNMPv3AccessConfGroupName_Type = DisplayString
_LcsSNMPv3AccessConfGroupName_Object = MibTableColumn
lcsSNMPv3AccessConfGroupName = _LcsSNMPv3AccessConfGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 2),
    _LcsSNMPv3AccessConfGroupName_Type()
)
lcsSNMPv3AccessConfGroupName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfGroupName.setStatus("current")
_LcsSNMPv3AccessConfSecurityModel_Type = Integer32
_LcsSNMPv3AccessConfSecurityModel_Object = MibTableColumn
lcsSNMPv3AccessConfSecurityModel = _LcsSNMPv3AccessConfSecurityModel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 3),
    _LcsSNMPv3AccessConfSecurityModel_Type()
)
lcsSNMPv3AccessConfSecurityModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfSecurityModel.setStatus("current")
_LcsSNMPv3AccessConfSecurityLevel_Type = SNMPv3SecurityLevel
_LcsSNMPv3AccessConfSecurityLevel_Object = MibTableColumn
lcsSNMPv3AccessConfSecurityLevel = _LcsSNMPv3AccessConfSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 4),
    _LcsSNMPv3AccessConfSecurityLevel_Type()
)
lcsSNMPv3AccessConfSecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfSecurityLevel.setStatus("current")
_LcsSNMPv3AccessConfReadViewName_Type = DisplayString
_LcsSNMPv3AccessConfReadViewName_Object = MibTableColumn
lcsSNMPv3AccessConfReadViewName = _LcsSNMPv3AccessConfReadViewName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 5),
    _LcsSNMPv3AccessConfReadViewName_Type()
)
lcsSNMPv3AccessConfReadViewName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfReadViewName.setStatus("current")
_LcsSNMPv3AccessConfWriteViewName_Type = DisplayString
_LcsSNMPv3AccessConfWriteViewName_Object = MibTableColumn
lcsSNMPv3AccessConfWriteViewName = _LcsSNMPv3AccessConfWriteViewName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 6),
    _LcsSNMPv3AccessConfWriteViewName_Type()
)
lcsSNMPv3AccessConfWriteViewName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfWriteViewName.setStatus("current")
_LcsSNMPv3AccessConfRowStatus_Type = RowStatus
_LcsSNMPv3AccessConfRowStatus_Object = MibTableColumn
lcsSNMPv3AccessConfRowStatus = _LcsSNMPv3AccessConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 6, 9, 1, 7),
    _LcsSNMPv3AccessConfRowStatus_Type()
)
lcsSNMPv3AccessConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsSNMPv3AccessConfRowStatus.setStatus("current")
_LcsDHCPServer_ObjectIdentity = ObjectIdentity
lcsDHCPServer = _LcsDHCPServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9)
)
_LcsDHCPServerConfig_ObjectIdentity = ObjectIdentity
lcsDHCPServerConfig = _LcsDHCPServerConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7)
)
_LcsDHCPServerConfigTable_Object = MibTable
lcsDHCPServerConfigTable = _LcsDHCPServerConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1)
)
if mibBuilder.loadTexts:
    lcsDHCPServerConfigTable.setStatus("current")
_LcsDHCPServerConfigEntry_Object = MibTableRow
lcsDHCPServerConfigEntry = _LcsDHCPServerConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1)
)
lcsDHCPServerConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDHCPServerConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsDHCPServerConfigEntry.setStatus("current")


class _LcsDHCPServerConfigIndex_Type(Integer32):
    """Custom type lcsDHCPServerConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPServerConfigIndex_Type.__name__ = "Integer32"
_LcsDHCPServerConfigIndex_Object = MibTableColumn
lcsDHCPServerConfigIndex = _LcsDHCPServerConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 1),
    _LcsDHCPServerConfigIndex_Type()
)
lcsDHCPServerConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigIndex.setStatus("current")


class _LcsDHCPServerConfigInterfaceVLAN_Type(Integer32):
    """Custom type lcsDHCPServerConfigInterfaceVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPServerConfigInterfaceVLAN_Type.__name__ = "Integer32"
_LcsDHCPServerConfigInterfaceVLAN_Object = MibTableColumn
lcsDHCPServerConfigInterfaceVLAN = _LcsDHCPServerConfigInterfaceVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 2),
    _LcsDHCPServerConfigInterfaceVLAN_Type()
)
lcsDHCPServerConfigInterfaceVLAN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceVLAN.setStatus("current")


class _LcsDHCPServerConfigInterfaceMode_Type(Integer32):
    """Custom type lcsDHCPServerConfigInterfaceMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPServerConfigInterfaceMode_Type.__name__ = "Integer32"
_LcsDHCPServerConfigInterfaceMode_Object = MibTableColumn
lcsDHCPServerConfigInterfaceMode = _LcsDHCPServerConfigInterfaceMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 3),
    _LcsDHCPServerConfigInterfaceMode_Type()
)
lcsDHCPServerConfigInterfaceMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceMode.setStatus("current")
_LcsDHCPServerConfigInterfaceStartIPEndIP_Type = DisplayString
_LcsDHCPServerConfigInterfaceStartIPEndIP_Object = MibTableColumn
lcsDHCPServerConfigInterfaceStartIPEndIP = _LcsDHCPServerConfigInterfaceStartIPEndIP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 4),
    _LcsDHCPServerConfigInterfaceStartIPEndIP_Type()
)
lcsDHCPServerConfigInterfaceStartIPEndIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceStartIPEndIP.setStatus("current")
_LcsDHCPServerConfigInterfaceLeaseTime_Type = Integer32
_LcsDHCPServerConfigInterfaceLeaseTime_Object = MibTableColumn
lcsDHCPServerConfigInterfaceLeaseTime = _LcsDHCPServerConfigInterfaceLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 6),
    _LcsDHCPServerConfigInterfaceLeaseTime_Type()
)
lcsDHCPServerConfigInterfaceLeaseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceLeaseTime.setStatus("current")
_LcsDHCPServerConfigInterfaceSubnetMask_Type = IpAddress
_LcsDHCPServerConfigInterfaceSubnetMask_Object = MibTableColumn
lcsDHCPServerConfigInterfaceSubnetMask = _LcsDHCPServerConfigInterfaceSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 7),
    _LcsDHCPServerConfigInterfaceSubnetMask_Type()
)
lcsDHCPServerConfigInterfaceSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceSubnetMask.setStatus("current")
_LcsDHCPServerConfigInterfaceDefaultRouter_Type = IpAddress
_LcsDHCPServerConfigInterfaceDefaultRouter_Object = MibTableColumn
lcsDHCPServerConfigInterfaceDefaultRouter = _LcsDHCPServerConfigInterfaceDefaultRouter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 8),
    _LcsDHCPServerConfigInterfaceDefaultRouter_Type()
)
lcsDHCPServerConfigInterfaceDefaultRouter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceDefaultRouter.setStatus("current")
_LcsDHCPServerConfigInterfaceDNSServer_Type = IpAddress
_LcsDHCPServerConfigInterfaceDNSServer_Object = MibTableColumn
lcsDHCPServerConfigInterfaceDNSServer = _LcsDHCPServerConfigInterfaceDNSServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 7, 1, 1, 9),
    _LcsDHCPServerConfigInterfaceDNSServer_Type()
)
lcsDHCPServerConfigInterfaceDNSServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPServerConfigInterfaceDNSServer.setStatus("current")
_LcsDHCPServerStatus_ObjectIdentity = ObjectIdentity
lcsDHCPServerStatus = _LcsDHCPServerStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8)
)
_LcsDHCPServerStatusTable_Object = MibTable
lcsDHCPServerStatusTable = _LcsDHCPServerStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1)
)
if mibBuilder.loadTexts:
    lcsDHCPServerStatusTable.setStatus("current")
_LcsDHCPServerStatusEntry_Object = MibTableRow
lcsDHCPServerStatusEntry = _LcsDHCPServerStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1)
)
lcsDHCPServerStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDHCPServerStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsDHCPServerStatusEntry.setStatus("current")


class _LcsDHCPServerStatusIndex_Type(Integer32):
    """Custom type lcsDHCPServerStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPServerStatusIndex_Type.__name__ = "Integer32"
_LcsDHCPServerStatusIndex_Object = MibTableColumn
lcsDHCPServerStatusIndex = _LcsDHCPServerStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 1),
    _LcsDHCPServerStatusIndex_Type()
)
lcsDHCPServerStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusIndex.setStatus("current")


class _LcsDHCPServerStatusInterfaceVLAN_Type(Integer32):
    """Custom type lcsDHCPServerStatusInterfaceVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPServerStatusInterfaceVLAN_Type.__name__ = "Integer32"
_LcsDHCPServerStatusInterfaceVLAN_Object = MibTableColumn
lcsDHCPServerStatusInterfaceVLAN = _LcsDHCPServerStatusInterfaceVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 2),
    _LcsDHCPServerStatusInterfaceVLAN_Type()
)
lcsDHCPServerStatusInterfaceVLAN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceVLAN.setStatus("current")
_LcsDHCPServerStatusInterfaceType_Type = DisplayString
_LcsDHCPServerStatusInterfaceType_Object = MibTableColumn
lcsDHCPServerStatusInterfaceType = _LcsDHCPServerStatusInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 3),
    _LcsDHCPServerStatusInterfaceType_Type()
)
lcsDHCPServerStatusInterfaceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceType.setStatus("current")
_LcsDHCPServerStatusInterfaceStartIP_Type = IpAddress
_LcsDHCPServerStatusInterfaceStartIP_Object = MibTableColumn
lcsDHCPServerStatusInterfaceStartIP = _LcsDHCPServerStatusInterfaceStartIP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 4),
    _LcsDHCPServerStatusInterfaceStartIP_Type()
)
lcsDHCPServerStatusInterfaceStartIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceStartIP.setStatus("current")
_LcsDHCPServerStatusInterfaceEndIP_Type = IpAddress
_LcsDHCPServerStatusInterfaceEndIP_Object = MibTableColumn
lcsDHCPServerStatusInterfaceEndIP = _LcsDHCPServerStatusInterfaceEndIP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 5),
    _LcsDHCPServerStatusInterfaceEndIP_Type()
)
lcsDHCPServerStatusInterfaceEndIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceEndIP.setStatus("current")
_LcsDHCPServerStatusInterfaceLeaseTime_Type = Integer32
_LcsDHCPServerStatusInterfaceLeaseTime_Object = MibTableColumn
lcsDHCPServerStatusInterfaceLeaseTime = _LcsDHCPServerStatusInterfaceLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 6),
    _LcsDHCPServerStatusInterfaceLeaseTime_Type()
)
lcsDHCPServerStatusInterfaceLeaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceLeaseTime.setStatus("current")
_LcsDHCPServerStatusInterfaceSubnetMask_Type = IpAddress
_LcsDHCPServerStatusInterfaceSubnetMask_Object = MibTableColumn
lcsDHCPServerStatusInterfaceSubnetMask = _LcsDHCPServerStatusInterfaceSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 7),
    _LcsDHCPServerStatusInterfaceSubnetMask_Type()
)
lcsDHCPServerStatusInterfaceSubnetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceSubnetMask.setStatus("current")
_LcsDHCPServerStatusInterfaceDefaultRouter_Type = IpAddress
_LcsDHCPServerStatusInterfaceDefaultRouter_Object = MibTableColumn
lcsDHCPServerStatusInterfaceDefaultRouter = _LcsDHCPServerStatusInterfaceDefaultRouter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 8),
    _LcsDHCPServerStatusInterfaceDefaultRouter_Type()
)
lcsDHCPServerStatusInterfaceDefaultRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceDefaultRouter.setStatus("current")
_LcsDHCPServerStatusInterfaceDNSServer_Type = IpAddress
_LcsDHCPServerStatusInterfaceDNSServer_Object = MibTableColumn
lcsDHCPServerStatusInterfaceDNSServer = _LcsDHCPServerStatusInterfaceDNSServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 9, 8, 1, 1, 9),
    _LcsDHCPServerStatusInterfaceDNSServer_Type()
)
lcsDHCPServerStatusInterfaceDNSServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPServerStatusInterfaceDNSServer.setStatus("current")
_LcsVLANConf_ObjectIdentity = ObjectIdentity
lcsVLANConf = _LcsVLANConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10)
)
_LcsVLAN_ObjectIdentity = ObjectIdentity
lcsVLAN = _LcsVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2)
)
_LcsVlanExistingVLANs_Type = DisplayString
_LcsVlanExistingVLANs_Object = MibScalar
lcsVlanExistingVLANs = _LcsVlanExistingVLANs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 1),
    _LcsVlanExistingVLANs_Type()
)
lcsVlanExistingVLANs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanExistingVLANs.setStatus("current")
_LcsVlanEthertypeforCustomSPorts_Type = DisplayString
_LcsVlanEthertypeforCustomSPorts_Object = MibScalar
lcsVlanEthertypeforCustomSPorts = _LcsVlanEthertypeforCustomSPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 2),
    _LcsVlanEthertypeforCustomSPorts_Type()
)
lcsVlanEthertypeforCustomSPorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanEthertypeforCustomSPorts.setStatus("current")
_LcsVlanTable_Object = MibTable
lcsVlanTable = _LcsVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3)
)
if mibBuilder.loadTexts:
    lcsVlanTable.setStatus("current")
_LcsVlanEntry_Object = MibTableRow
lcsVlanEntry = _LcsVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1)
)
lcsVlanEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsVlanEntry.setStatus("current")


class _LcsVlanMode_Type(Integer32):
    """Custom type lcsVlanMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("access", 0),
          ("trunk", 1),
          ("hybrid", 2))
    )


_LcsVlanMode_Type.__name__ = "Integer32"
_LcsVlanMode_Object = MibTableColumn
lcsVlanMode = _LcsVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 2),
    _LcsVlanMode_Type()
)
lcsVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanMode.setStatus("current")


class _LcsVlanPortVLAN_Type(Integer32):
    """Custom type lcsVlanPortVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVlanPortVLAN_Type.__name__ = "Integer32"
_LcsVlanPortVLAN_Object = MibTableColumn
lcsVlanPortVLAN = _LcsVlanPortVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 3),
    _LcsVlanPortVLAN_Type()
)
lcsVlanPortVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanPortVLAN.setStatus("current")


class _LcsVlanPortType_Type(Integer32):
    """Custom type lcsVlanPortType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unaware", 0),
          ("cPort", 1),
          ("sPort", 2),
          ("sCustomPort", 3))
    )


_LcsVlanPortType_Type.__name__ = "Integer32"
_LcsVlanPortType_Object = MibTableColumn
lcsVlanPortType = _LcsVlanPortType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 4),
    _LcsVlanPortType_Type()
)
lcsVlanPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanPortType.setStatus("current")
_LcsVlanIngressFiltering_Type = AdminMode
_LcsVlanIngressFiltering_Object = MibTableColumn
lcsVlanIngressFiltering = _LcsVlanIngressFiltering_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 5),
    _LcsVlanIngressFiltering_Type()
)
lcsVlanIngressFiltering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanIngressFiltering.setStatus("current")


class _LcsVlanIngressAcceptance_Type(Integer32):
    """Custom type lcsVlanIngressAcceptance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("taggedAndUntagged", 0),
          ("taggedOnly", 1),
          ("untaggedOnly", 2))
    )


_LcsVlanIngressAcceptance_Type.__name__ = "Integer32"
_LcsVlanIngressAcceptance_Object = MibTableColumn
lcsVlanIngressAcceptance = _LcsVlanIngressAcceptance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 7),
    _LcsVlanIngressAcceptance_Type()
)
lcsVlanIngressAcceptance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanIngressAcceptance.setStatus("current")


class _LcsVlanEgressTagging_Type(Integer32):
    """Custom type lcsVlanEgressTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("untagPortVlan", 0),
          ("tagAll", 1),
          ("untagAll", 2))
    )


_LcsVlanEgressTagging_Type.__name__ = "Integer32"
_LcsVlanEgressTagging_Object = MibTableColumn
lcsVlanEgressTagging = _LcsVlanEgressTagging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 8),
    _LcsVlanEgressTagging_Type()
)
lcsVlanEgressTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanEgressTagging.setStatus("current")
_LcsVlanAllowedVLANs_Type = DisplayString
_LcsVlanAllowedVLANs_Object = MibTableColumn
lcsVlanAllowedVLANs = _LcsVlanAllowedVLANs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 9),
    _LcsVlanAllowedVLANs_Type()
)
lcsVlanAllowedVLANs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanAllowedVLANs.setStatus("current")
_LcsVlanForbiddenVLANs_Type = DisplayString
_LcsVlanForbiddenVLANs_Object = MibTableColumn
lcsVlanForbiddenVLANs = _LcsVlanForbiddenVLANs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 3, 1, 10),
    _LcsVlanForbiddenVLANs_Type()
)
lcsVlanForbiddenVLANs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVlanForbiddenVLANs.setStatus("current")
_LcsVlanStatus_ObjectIdentity = ObjectIdentity
lcsVlanStatus = _LcsVlanStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6)
)
_LcsVLANMembershipStatusTable_Object = MibTable
lcsVLANMembershipStatusTable = _LcsVLANMembershipStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 1)
)
if mibBuilder.loadTexts:
    lcsVLANMembershipStatusTable.setStatus("current")
_LcsVLANMembershipStatusEntry_Object = MibTableRow
lcsVLANMembershipStatusEntry = _LcsVLANMembershipStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 1, 1)
)
lcsVLANMembershipStatusEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "LCOS-SX-MIB", "lcsVLANMembershipVlanID"),
)
if mibBuilder.loadTexts:
    lcsVLANMembershipStatusEntry.setStatus("current")


class _LcsVLANMembershipVlanID_Type(Integer32):
    """Custom type lcsVLANMembershipVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVLANMembershipVlanID_Type.__name__ = "Integer32"
_LcsVLANMembershipVlanID_Object = MibTableColumn
lcsVLANMembershipVlanID = _LcsVLANMembershipVlanID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 1, 1, 2),
    _LcsVLANMembershipVlanID_Type()
)
lcsVLANMembershipVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANMembershipVlanID.setStatus("current")


class _LcsVLANMembershipStatus_Type(Integer32):
    """Custom type lcsVLANMembershipStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("portIsNotInVlan", 0),
          ("portIncludedInVlan", 1),
          ("portInForbiddenPortList", 2),
          ("portInForbiddenPortListAndVlan", 3))
    )


_LcsVLANMembershipStatus_Type.__name__ = "Integer32"
_LcsVLANMembershipStatus_Object = MibTableColumn
lcsVLANMembershipStatus = _LcsVLANMembershipStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 1, 1, 3),
    _LcsVLANMembershipStatus_Type()
)
lcsVLANMembershipStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANMembershipStatus.setStatus("current")
_LcsVLANPortStatusTable_Object = MibTable
lcsVLANPortStatusTable = _LcsVLANPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2)
)
if mibBuilder.loadTexts:
    lcsVLANPortStatusTable.setStatus("current")
_LcsVLANPortStatusEntry_Object = MibTableRow
lcsVLANPortStatusEntry = _LcsVLANPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1)
)
lcsVLANPortStatusEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANPortStatusEntry.setStatus("current")
_LcsVLANPortStatusPortType_Type = DisplayString
_LcsVLANPortStatusPortType_Object = MibTableColumn
lcsVLANPortStatusPortType = _LcsVLANPortStatusPortType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 2),
    _LcsVLANPortStatusPortType_Type()
)
lcsVLANPortStatusPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusPortType.setStatus("current")
_LcsVLANPortStatusIngressFiltering_Type = AdminMode
_LcsVLANPortStatusIngressFiltering_Object = MibTableColumn
lcsVLANPortStatusIngressFiltering = _LcsVLANPortStatusIngressFiltering_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 3),
    _LcsVLANPortStatusIngressFiltering_Type()
)
lcsVLANPortStatusIngressFiltering.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusIngressFiltering.setStatus("current")
_LcsVLANPortStatusFrameType_Type = DisplayString
_LcsVLANPortStatusFrameType_Object = MibTableColumn
lcsVLANPortStatusFrameType = _LcsVLANPortStatusFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 4),
    _LcsVLANPortStatusFrameType_Type()
)
lcsVLANPortStatusFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusFrameType.setStatus("current")


class _LcsVLANPortStatusPortVLANID_Type(Integer32):
    """Custom type lcsVLANPortStatusPortVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVLANPortStatusPortVLANID_Type.__name__ = "Integer32"
_LcsVLANPortStatusPortVLANID_Object = MibTableColumn
lcsVLANPortStatusPortVLANID = _LcsVLANPortStatusPortVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 5),
    _LcsVLANPortStatusPortVLANID_Type()
)
lcsVLANPortStatusPortVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusPortVLANID.setStatus("current")
_LcsVLANPortStatusTxTag_Type = DisplayString
_LcsVLANPortStatusTxTag_Object = MibTableColumn
lcsVLANPortStatusTxTag = _LcsVLANPortStatusTxTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 6),
    _LcsVLANPortStatusTxTag_Type()
)
lcsVLANPortStatusTxTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusTxTag.setStatus("current")


class _LcsVLANPortStatusUntaggedVLANID_Type(Integer32):
    """Custom type lcsVLANPortStatusUntaggedVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVLANPortStatusUntaggedVLANID_Type.__name__ = "Integer32"
_LcsVLANPortStatusUntaggedVLANID_Object = MibTableColumn
lcsVLANPortStatusUntaggedVLANID = _LcsVLANPortStatusUntaggedVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 7),
    _LcsVLANPortStatusUntaggedVLANID_Type()
)
lcsVLANPortStatusUntaggedVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusUntaggedVLANID.setStatus("current")
_LcsVLANPortStatusConflicts_Type = DisplayString
_LcsVLANPortStatusConflicts_Object = MibTableColumn
lcsVLANPortStatusConflicts = _LcsVLANPortStatusConflicts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 6, 2, 1, 8),
    _LcsVLANPortStatusConflicts_Type()
)
lcsVLANPortStatusConflicts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsVLANPortStatusConflicts.setStatus("current")
_LcsMacBaesdVlanMembershipConfig_ObjectIdentity = ObjectIdentity
lcsMacBaesdVlanMembershipConfig = _LcsMacBaesdVlanMembershipConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7)
)
_LcsMacBaesdVlanMembershipConfigTable_Object = MibTable
lcsMacBaesdVlanMembershipConfigTable = _LcsMacBaesdVlanMembershipConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1)
)
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigTable.setStatus("current")
_LcsMacBaesdVlanMembershipConfigEntry_Object = MibTableRow
lcsMacBaesdVlanMembershipConfigEntry = _LcsMacBaesdVlanMembershipConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1)
)
lcsMacBaesdVlanMembershipConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMacBaesdVlanMembershipConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigEntry.setStatus("current")


class _LcsMacBaesdVlanMembershipConfigIndex_Type(Integer32):
    """Custom type lcsMacBaesdVlanMembershipConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMacBaesdVlanMembershipConfigIndex_Type.__name__ = "Integer32"
_LcsMacBaesdVlanMembershipConfigIndex_Object = MibTableColumn
lcsMacBaesdVlanMembershipConfigIndex = _LcsMacBaesdVlanMembershipConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1, 1),
    _LcsMacBaesdVlanMembershipConfigIndex_Type()
)
lcsMacBaesdVlanMembershipConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigIndex.setStatus("current")
_LcsMacBaesdVlanMembershipConfigMACAddress_Type = DisplayString
_LcsMacBaesdVlanMembershipConfigMACAddress_Object = MibTableColumn
lcsMacBaesdVlanMembershipConfigMACAddress = _LcsMacBaesdVlanMembershipConfigMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1, 2),
    _LcsMacBaesdVlanMembershipConfigMACAddress_Type()
)
lcsMacBaesdVlanMembershipConfigMACAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigMACAddress.setStatus("current")
_LcsMacBaesdVlanMembershipConfigVLANID_Type = Integer32
_LcsMacBaesdVlanMembershipConfigVLANID_Object = MibTableColumn
lcsMacBaesdVlanMembershipConfigVLANID = _LcsMacBaesdVlanMembershipConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1, 3),
    _LcsMacBaesdVlanMembershipConfigVLANID_Type()
)
lcsMacBaesdVlanMembershipConfigVLANID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigVLANID.setStatus("current")
_LcsMacBaesdVlanMembershipConfigPortMembers_Type = DisplayString
_LcsMacBaesdVlanMembershipConfigPortMembers_Object = MibTableColumn
lcsMacBaesdVlanMembershipConfigPortMembers = _LcsMacBaesdVlanMembershipConfigPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1, 4),
    _LcsMacBaesdVlanMembershipConfigPortMembers_Type()
)
lcsMacBaesdVlanMembershipConfigPortMembers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigPortMembers.setStatus("current")
_LcsMacBaesdVlanMembershipConfigRowStatus_Type = RowStatus
_LcsMacBaesdVlanMembershipConfigRowStatus_Object = MibTableColumn
lcsMacBaesdVlanMembershipConfigRowStatus = _LcsMacBaesdVlanMembershipConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 7, 1, 1, 5),
    _LcsMacBaesdVlanMembershipConfigRowStatus_Type()
)
lcsMacBaesdVlanMembershipConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipConfigRowStatus.setStatus("current")
_LcsMacBaesdVlanMembershipStatusUser_Type = Integer32
_LcsMacBaesdVlanMembershipStatusUser_Object = MibScalar
lcsMacBaesdVlanMembershipStatusUser = _LcsMacBaesdVlanMembershipStatusUser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 8),
    _LcsMacBaesdVlanMembershipStatusUser_Type()
)
lcsMacBaesdVlanMembershipStatusUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusUser.setStatus("current")
_LcsMacBaesdVlanMembershipStatus_ObjectIdentity = ObjectIdentity
lcsMacBaesdVlanMembershipStatus = _LcsMacBaesdVlanMembershipStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9)
)
_LcsMacBaesdVlanMembershipStatusTable_Object = MibTable
lcsMacBaesdVlanMembershipStatusTable = _LcsMacBaesdVlanMembershipStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1)
)
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusTable.setStatus("current")
_LcsMacBaesdVlanMembershipStatusEntry_Object = MibTableRow
lcsMacBaesdVlanMembershipStatusEntry = _LcsMacBaesdVlanMembershipStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1, 1)
)
lcsMacBaesdVlanMembershipStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMacBaesdVlanMembershipStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusEntry.setStatus("current")


class _LcsMacBaesdVlanMembershipStatusIndex_Type(Integer32):
    """Custom type lcsMacBaesdVlanMembershipStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMacBaesdVlanMembershipStatusIndex_Type.__name__ = "Integer32"
_LcsMacBaesdVlanMembershipStatusIndex_Object = MibTableColumn
lcsMacBaesdVlanMembershipStatusIndex = _LcsMacBaesdVlanMembershipStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1, 1, 1),
    _LcsMacBaesdVlanMembershipStatusIndex_Type()
)
lcsMacBaesdVlanMembershipStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusIndex.setStatus("current")
_LcsMacBaesdVlanMembershipStatusMACAddress_Type = DisplayString
_LcsMacBaesdVlanMembershipStatusMACAddress_Object = MibTableColumn
lcsMacBaesdVlanMembershipStatusMACAddress = _LcsMacBaesdVlanMembershipStatusMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1, 1, 2),
    _LcsMacBaesdVlanMembershipStatusMACAddress_Type()
)
lcsMacBaesdVlanMembershipStatusMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusMACAddress.setStatus("current")
_LcsMacBaesdVlanMembershipStatusVLANID_Type = Integer32
_LcsMacBaesdVlanMembershipStatusVLANID_Object = MibTableColumn
lcsMacBaesdVlanMembershipStatusVLANID = _LcsMacBaesdVlanMembershipStatusVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1, 1, 3),
    _LcsMacBaesdVlanMembershipStatusVLANID_Type()
)
lcsMacBaesdVlanMembershipStatusVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusVLANID.setStatus("current")
_LcsMacBaesdVlanMembershipStatusPortMembers_Type = DisplayString
_LcsMacBaesdVlanMembershipStatusPortMembers_Object = MibTableColumn
lcsMacBaesdVlanMembershipStatusPortMembers = _LcsMacBaesdVlanMembershipStatusPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 9, 1, 1, 4),
    _LcsMacBaesdVlanMembershipStatusPortMembers_Type()
)
lcsMacBaesdVlanMembershipStatusPortMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMacBaesdVlanMembershipStatusPortMembers.setStatus("current")
_LcsProtocolbasedVLANConfig_ObjectIdentity = ObjectIdentity
lcsProtocolbasedVLANConfig = _LcsProtocolbasedVLANConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10)
)
_LcsProtocolbasedVLANConfigTable_Object = MibTable
lcsProtocolbasedVLANConfigTable = _LcsProtocolbasedVLANConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1)
)
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigTable.setStatus("current")
_LcsProtocolbasedVLANConfigEntry_Object = MibTableRow
lcsProtocolbasedVLANConfigEntry = _LcsProtocolbasedVLANConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1)
)
lcsProtocolbasedVLANConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsProtocolbasedVLANConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigEntry.setStatus("current")


class _LcsProtocolbasedVLANConfigIndex_Type(Integer32):
    """Custom type lcsProtocolbasedVLANConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsProtocolbasedVLANConfigIndex_Type.__name__ = "Integer32"
_LcsProtocolbasedVLANConfigIndex_Object = MibTableColumn
lcsProtocolbasedVLANConfigIndex = _LcsProtocolbasedVLANConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 1),
    _LcsProtocolbasedVLANConfigIndex_Type()
)
lcsProtocolbasedVLANConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigIndex.setStatus("current")
_LcsProtocolbasedVLANConfigFrameType_Type = Integer32
_LcsProtocolbasedVLANConfigFrameType_Object = MibTableColumn
lcsProtocolbasedVLANConfigFrameType = _LcsProtocolbasedVLANConfigFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 2),
    _LcsProtocolbasedVLANConfigFrameType_Type()
)
lcsProtocolbasedVLANConfigFrameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigFrameType.setStatus("current")
_LcsProtocolbasedVLANConfigValueEthernetEtype_Type = DisplayString
_LcsProtocolbasedVLANConfigValueEthernetEtype_Object = MibTableColumn
lcsProtocolbasedVLANConfigValueEthernetEtype = _LcsProtocolbasedVLANConfigValueEthernetEtype_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 3),
    _LcsProtocolbasedVLANConfigValueEthernetEtype_Type()
)
lcsProtocolbasedVLANConfigValueEthernetEtype.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigValueEthernetEtype.setStatus("current")
_LcsProtocolbasedVLANConfigValueSNAPOUI_Type = DisplayString
_LcsProtocolbasedVLANConfigValueSNAPOUI_Object = MibTableColumn
lcsProtocolbasedVLANConfigValueSNAPOUI = _LcsProtocolbasedVLANConfigValueSNAPOUI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 4),
    _LcsProtocolbasedVLANConfigValueSNAPOUI_Type()
)
lcsProtocolbasedVLANConfigValueSNAPOUI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigValueSNAPOUI.setStatus("current")
_LcsProtocolbasedVLANConfigValueSNAPPID_Type = DisplayString
_LcsProtocolbasedVLANConfigValueSNAPPID_Object = MibTableColumn
lcsProtocolbasedVLANConfigValueSNAPPID = _LcsProtocolbasedVLANConfigValueSNAPPID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 5),
    _LcsProtocolbasedVLANConfigValueSNAPPID_Type()
)
lcsProtocolbasedVLANConfigValueSNAPPID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigValueSNAPPID.setStatus("current")
_LcsProtocolbasedVLANConfigValueLLCDSAP_Type = DisplayString
_LcsProtocolbasedVLANConfigValueLLCDSAP_Object = MibTableColumn
lcsProtocolbasedVLANConfigValueLLCDSAP = _LcsProtocolbasedVLANConfigValueLLCDSAP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 6),
    _LcsProtocolbasedVLANConfigValueLLCDSAP_Type()
)
lcsProtocolbasedVLANConfigValueLLCDSAP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigValueLLCDSAP.setStatus("current")
_LcsProtocolbasedVLANConfigValueLLCSSAP_Type = DisplayString
_LcsProtocolbasedVLANConfigValueLLCSSAP_Object = MibTableColumn
lcsProtocolbasedVLANConfigValueLLCSSAP = _LcsProtocolbasedVLANConfigValueLLCSSAP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 7),
    _LcsProtocolbasedVLANConfigValueLLCSSAP_Type()
)
lcsProtocolbasedVLANConfigValueLLCSSAP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigValueLLCSSAP.setStatus("current")
_LcsProtocolbasedVLANConfigGroupName_Type = DisplayString
_LcsProtocolbasedVLANConfigGroupName_Object = MibTableColumn
lcsProtocolbasedVLANConfigGroupName = _LcsProtocolbasedVLANConfigGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 8),
    _LcsProtocolbasedVLANConfigGroupName_Type()
)
lcsProtocolbasedVLANConfigGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigGroupName.setStatus("current")
_LcsProtocolbasedVLANConfigRowStatus_Type = RowStatus
_LcsProtocolbasedVLANConfigRowStatus_Object = MibTableColumn
lcsProtocolbasedVLANConfigRowStatus = _LcsProtocolbasedVLANConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 1, 1, 9),
    _LcsProtocolbasedVLANConfigRowStatus_Type()
)
lcsProtocolbasedVLANConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsProtocolbasedVLANConfigRowStatus.setStatus("current")
_LcsGroupNameToVLANMappingConfigTable_Object = MibTable
lcsGroupNameToVLANMappingConfigTable = _LcsGroupNameToVLANMappingConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2)
)
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigTable.setStatus("current")
_LcsGroupNameToVLANMappingConfigEntry_Object = MibTableRow
lcsGroupNameToVLANMappingConfigEntry = _LcsGroupNameToVLANMappingConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1)
)
lcsGroupNameToVLANMappingConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsGroupNameToVLANMappingConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigEntry.setStatus("current")


class _LcsGroupNameToVLANMappingConfigIndex_Type(Integer32):
    """Custom type lcsGroupNameToVLANMappingConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsGroupNameToVLANMappingConfigIndex_Type.__name__ = "Integer32"
_LcsGroupNameToVLANMappingConfigIndex_Object = MibTableColumn
lcsGroupNameToVLANMappingConfigIndex = _LcsGroupNameToVLANMappingConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1, 1),
    _LcsGroupNameToVLANMappingConfigIndex_Type()
)
lcsGroupNameToVLANMappingConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigIndex.setStatus("current")
_LcsGroupNameToVLANMappingConfigGroupName_Type = DisplayString
_LcsGroupNameToVLANMappingConfigGroupName_Object = MibTableColumn
lcsGroupNameToVLANMappingConfigGroupName = _LcsGroupNameToVLANMappingConfigGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1, 2),
    _LcsGroupNameToVLANMappingConfigGroupName_Type()
)
lcsGroupNameToVLANMappingConfigGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigGroupName.setStatus("current")
_LcsGroupNameToVLANMappingConfigVLANID_Type = Integer32
_LcsGroupNameToVLANMappingConfigVLANID_Object = MibTableColumn
lcsGroupNameToVLANMappingConfigVLANID = _LcsGroupNameToVLANMappingConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1, 3),
    _LcsGroupNameToVLANMappingConfigVLANID_Type()
)
lcsGroupNameToVLANMappingConfigVLANID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigVLANID.setStatus("current")
_LcsGroupNameToVLANMappingConfigPortMembers_Type = DisplayString
_LcsGroupNameToVLANMappingConfigPortMembers_Object = MibTableColumn
lcsGroupNameToVLANMappingConfigPortMembers = _LcsGroupNameToVLANMappingConfigPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1, 4),
    _LcsGroupNameToVLANMappingConfigPortMembers_Type()
)
lcsGroupNameToVLANMappingConfigPortMembers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigPortMembers.setStatus("current")
_LcsGroupNameToVLANMappingConfigRowStatus_Type = RowStatus
_LcsGroupNameToVLANMappingConfigRowStatus_Object = MibTableColumn
lcsGroupNameToVLANMappingConfigRowStatus = _LcsGroupNameToVLANMappingConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 10, 2, 1, 5),
    _LcsGroupNameToVLANMappingConfigRowStatus_Type()
)
lcsGroupNameToVLANMappingConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsGroupNameToVLANMappingConfigRowStatus.setStatus("current")
_LcsIPSubnetBasedVLANConfig_ObjectIdentity = ObjectIdentity
lcsIPSubnetBasedVLANConfig = _LcsIPSubnetBasedVLANConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11)
)
_LcsIPSubnetBasedVLANConfigTable_Object = MibTable
lcsIPSubnetBasedVLANConfigTable = _LcsIPSubnetBasedVLANConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1)
)
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigTable.setStatus("current")
_LcsIPSubnetBasedVLANConfigEntry_Object = MibTableRow
lcsIPSubnetBasedVLANConfigEntry = _LcsIPSubnetBasedVLANConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1)
)
lcsIPSubnetBasedVLANConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPSubnetBasedVLANConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigEntry.setStatus("current")


class _LcsIPSubnetBasedVLANConfigIndex_Type(Integer32):
    """Custom type lcsIPSubnetBasedVLANConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIPSubnetBasedVLANConfigIndex_Type.__name__ = "Integer32"
_LcsIPSubnetBasedVLANConfigIndex_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigIndex = _LcsIPSubnetBasedVLANConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 1),
    _LcsIPSubnetBasedVLANConfigIndex_Type()
)
lcsIPSubnetBasedVLANConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigIndex.setStatus("current")
_LcsIPSubnetBasedVLANConfigIPAddress_Type = IpAddress
_LcsIPSubnetBasedVLANConfigIPAddress_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigIPAddress = _LcsIPSubnetBasedVLANConfigIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 2),
    _LcsIPSubnetBasedVLANConfigIPAddress_Type()
)
lcsIPSubnetBasedVLANConfigIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigIPAddress.setStatus("current")
_LcsIPSubnetBasedVLANConfigMaskLength_Type = Integer32
_LcsIPSubnetBasedVLANConfigMaskLength_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigMaskLength = _LcsIPSubnetBasedVLANConfigMaskLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 3),
    _LcsIPSubnetBasedVLANConfigMaskLength_Type()
)
lcsIPSubnetBasedVLANConfigMaskLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigMaskLength.setStatus("current")
_LcsIPSubnetBasedVLANConfigVLANID_Type = Integer32
_LcsIPSubnetBasedVLANConfigVLANID_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigVLANID = _LcsIPSubnetBasedVLANConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 4),
    _LcsIPSubnetBasedVLANConfigVLANID_Type()
)
lcsIPSubnetBasedVLANConfigVLANID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigVLANID.setStatus("current")
_LcsIPSubnetBasedVLANConfigPortMembers_Type = DisplayString
_LcsIPSubnetBasedVLANConfigPortMembers_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigPortMembers = _LcsIPSubnetBasedVLANConfigPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 5),
    _LcsIPSubnetBasedVLANConfigPortMembers_Type()
)
lcsIPSubnetBasedVLANConfigPortMembers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigPortMembers.setStatus("current")
_LcsIPSubnetBasedVLANConfigRowStatus_Type = RowStatus
_LcsIPSubnetBasedVLANConfigRowStatus_Object = MibTableColumn
lcsIPSubnetBasedVLANConfigRowStatus = _LcsIPSubnetBasedVLANConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 11, 1, 1, 6),
    _LcsIPSubnetBasedVLANConfigRowStatus_Type()
)
lcsIPSubnetBasedVLANConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSubnetBasedVLANConfigRowStatus.setStatus("current")
_LcsVLANNameConfig_ObjectIdentity = ObjectIdentity
lcsVLANNameConfig = _LcsVLANNameConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 12)
)
_LcsVLANNameConfigTable_Object = MibTable
lcsVLANNameConfigTable = _LcsVLANNameConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 12, 1)
)
if mibBuilder.loadTexts:
    lcsVLANNameConfigTable.setStatus("current")
_LcsVLANNameConfigEntry_Object = MibTableRow
lcsVLANNameConfigEntry = _LcsVLANNameConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 12, 1, 1)
)
lcsVLANNameConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVLANNameConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANNameConfigEntry.setStatus("current")


class _LcsVLANNameConfigIndex_Type(Integer32):
    """Custom type lcsVLANNameConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVLANNameConfigIndex_Type.__name__ = "Integer32"
_LcsVLANNameConfigIndex_Object = MibTableColumn
lcsVLANNameConfigIndex = _LcsVLANNameConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 12, 1, 1, 1),
    _LcsVLANNameConfigIndex_Type()
)
lcsVLANNameConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANNameConfigIndex.setStatus("current")
_LcsVLANNameConfigVLANName_Type = DisplayString
_LcsVLANNameConfigVLANName_Object = MibTableColumn
lcsVLANNameConfigVLANName = _LcsVLANNameConfigVLANName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 10, 2, 12, 1, 1, 2),
    _LcsVLANNameConfigVLANName_Type()
)
lcsVLANNameConfigVLANName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVLANNameConfigVLANName.setStatus("current")
_LcsNTPConf_ObjectIdentity = ObjectIdentity
lcsNTPConf = _LcsNTPConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12)
)


class _LcsNTPConfigMode_Type(Integer32):
    """Custom type lcsNTPConfigMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("useLocal", 0),
          ("useNTP", 1))
    )


_LcsNTPConfigMode_Type.__name__ = "Integer32"
_LcsNTPConfigMode_Object = MibScalar
lcsNTPConfigMode = _LcsNTPConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 1),
    _LcsNTPConfigMode_Type()
)
lcsNTPConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigMode.setStatus("current")


class _LcsNTPConfigTimeSyncInterval_Type(Integer32):
    """Custom type lcsNTPConfigTimeSyncInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 5),
        ValueRangeConstraint(10, 10),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(30, 30),
        ValueRangeConstraint(60, 60),
        ValueRangeConstraint(120, 120),
    )


_LcsNTPConfigTimeSyncInterval_Type.__name__ = "Integer32"
_LcsNTPConfigTimeSyncInterval_Object = MibScalar
lcsNTPConfigTimeSyncInterval = _LcsNTPConfigTimeSyncInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 3),
    _LcsNTPConfigTimeSyncInterval_Type()
)
lcsNTPConfigTimeSyncInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigTimeSyncInterval.setStatus("current")
_LcsNTPConfigServerAddress1_Type = DisplayString
_LcsNTPConfigServerAddress1_Object = MibScalar
lcsNTPConfigServerAddress1 = _LcsNTPConfigServerAddress1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 4),
    _LcsNTPConfigServerAddress1_Type()
)
lcsNTPConfigServerAddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigServerAddress1.setStatus("current")
_LcsNTPConfigServerAddress2_Type = DisplayString
_LcsNTPConfigServerAddress2_Object = MibScalar
lcsNTPConfigServerAddress2 = _LcsNTPConfigServerAddress2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 5),
    _LcsNTPConfigServerAddress2_Type()
)
lcsNTPConfigServerAddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigServerAddress2.setStatus("current")
_LcsNTPConfigServerAddress3_Type = DisplayString
_LcsNTPConfigServerAddress3_Object = MibScalar
lcsNTPConfigServerAddress3 = _LcsNTPConfigServerAddress3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 6),
    _LcsNTPConfigServerAddress3_Type()
)
lcsNTPConfigServerAddress3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigServerAddress3.setStatus("current")
_LcsNTPConfigServerAddress4_Type = DisplayString
_LcsNTPConfigServerAddress4_Object = MibScalar
lcsNTPConfigServerAddress4 = _LcsNTPConfigServerAddress4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 7),
    _LcsNTPConfigServerAddress4_Type()
)
lcsNTPConfigServerAddress4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigServerAddress4.setStatus("current")
_LcsNTPConfigServerAddress5_Type = DisplayString
_LcsNTPConfigServerAddress5_Object = MibScalar
lcsNTPConfigServerAddress5 = _LcsNTPConfigServerAddress5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 1, 12, 8),
    _LcsNTPConfigServerAddress5_Type()
)
lcsNTPConfigServerAddress5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNTPConfigServerAddress5.setStatus("current")
_LcsConfiguration_ObjectIdentity = ObjectIdentity
lcsConfiguration = _LcsConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2)
)
_LcsPort_ObjectIdentity = ObjectIdentity
lcsPort = _LcsPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1)
)
_LcsPortConfigurationTable_Object = MibTable
lcsPortConfigurationTable = _LcsPortConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1)
)
if mibBuilder.loadTexts:
    lcsPortConfigurationTable.setStatus("current")
_LcsPortConfigurationEntry_Object = MibTableRow
lcsPortConfigurationEntry = _LcsPortConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1)
)
lcsPortConfigurationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortConfPort"),
)
if mibBuilder.loadTexts:
    lcsPortConfigurationEntry.setStatus("current")


class _LcsPortConfPort_Type(Integer32):
    """Custom type lcsPortConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPortConfPort_Type.__name__ = "Integer32"
_LcsPortConfPort_Object = MibTableColumn
lcsPortConfPort = _LcsPortConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 1),
    _LcsPortConfPort_Type()
)
lcsPortConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortConfPort.setStatus("current")
_LcsPortConfDescription_Type = DisplayString
_LcsPortConfDescription_Object = MibTableColumn
lcsPortConfDescription = _LcsPortConfDescription_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 2),
    _LcsPortConfDescription_Type()
)
lcsPortConfDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortConfDescription.setStatus("current")


class _LcsPortConfLink_Type(DisplayString):
    """Custom type lcsPortConfLink based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 4),
    )


_LcsPortConfLink_Type.__name__ = "DisplayString"
_LcsPortConfLink_Object = MibTableColumn
lcsPortConfLink = _LcsPortConfLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 3),
    _LcsPortConfLink_Type()
)
lcsPortConfLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortConfLink.setStatus("current")


class _LcsPortConfSpeedStatus_Type(DisplayString):
    """Custom type lcsPortConfSpeedStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 12),
    )


_LcsPortConfSpeedStatus_Type.__name__ = "DisplayString"
_LcsPortConfSpeedStatus_Object = MibTableColumn
lcsPortConfSpeedStatus = _LcsPortConfSpeedStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 4),
    _LcsPortConfSpeedStatus_Type()
)
lcsPortConfSpeedStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortConfSpeedStatus.setStatus("current")


class _LcsPortConfSpeedMode_Type(Integer32):
    """Custom type lcsPortConfSpeedMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 19),
    )


_LcsPortConfSpeedMode_Type.__name__ = "Integer32"
_LcsPortConfSpeedMode_Object = MibTableColumn
lcsPortConfSpeedMode = _LcsPortConfSpeedMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 5),
    _LcsPortConfSpeedMode_Type()
)
lcsPortConfSpeedMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortConfSpeedMode.setStatus("current")


class _LcsPortConfFlowControlRxStatus_Type(Integer32):
    """Custom type lcsPortConfFlowControlRxStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortConfFlowControlRxStatus_Type.__name__ = "Integer32"
_LcsPortConfFlowControlRxStatus_Object = MibTableColumn
lcsPortConfFlowControlRxStatus = _LcsPortConfFlowControlRxStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 6),
    _LcsPortConfFlowControlRxStatus_Type()
)
lcsPortConfFlowControlRxStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortConfFlowControlRxStatus.setStatus("current")


class _LcsPortConfFlowControlTxStatus_Type(Integer32):
    """Custom type lcsPortConfFlowControlTxStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortConfFlowControlTxStatus_Type.__name__ = "Integer32"
_LcsPortConfFlowControlTxStatus_Object = MibTableColumn
lcsPortConfFlowControlTxStatus = _LcsPortConfFlowControlTxStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 7),
    _LcsPortConfFlowControlTxStatus_Type()
)
lcsPortConfFlowControlTxStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortConfFlowControlTxStatus.setStatus("current")


class _LcsPortConfFlowControlMode_Type(Integer32):
    """Custom type lcsPortConfFlowControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortConfFlowControlMode_Type.__name__ = "Integer32"
_LcsPortConfFlowControlMode_Object = MibTableColumn
lcsPortConfFlowControlMode = _LcsPortConfFlowControlMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 8),
    _LcsPortConfFlowControlMode_Type()
)
lcsPortConfFlowControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortConfFlowControlMode.setStatus("current")


class _LcsPortConfMaximumFrameSize_Type(Integer32):
    """Custom type lcsPortConfMaximumFrameSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 10240),
    )


_LcsPortConfMaximumFrameSize_Type.__name__ = "Integer32"
_LcsPortConfMaximumFrameSize_Object = MibTableColumn
lcsPortConfMaximumFrameSize = _LcsPortConfMaximumFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 1, 1, 9),
    _LcsPortConfMaximumFrameSize_Type()
)
lcsPortConfMaximumFrameSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortConfMaximumFrameSize.setStatus("current")
_LcsPortTrafficStatisticsTable_Object = MibTable
lcsPortTrafficStatisticsTable = _LcsPortTrafficStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2)
)
if mibBuilder.loadTexts:
    lcsPortTrafficStatisticsTable.setStatus("current")
_LcsPortTrafficStatisticsEntry_Object = MibTableRow
lcsPortTrafficStatisticsEntry = _LcsPortTrafficStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1)
)
lcsPortTrafficStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortTrafficStatisticsPort"),
)
if mibBuilder.loadTexts:
    lcsPortTrafficStatisticsEntry.setStatus("current")


class _LcsPortTrafficStatisticsPort_Type(Integer32):
    """Custom type lcsPortTrafficStatisticsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPortTrafficStatisticsPort_Type.__name__ = "Integer32"
_LcsPortTrafficStatisticsPort_Object = MibTableColumn
lcsPortTrafficStatisticsPort = _LcsPortTrafficStatisticsPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 1),
    _LcsPortTrafficStatisticsPort_Type()
)
lcsPortTrafficStatisticsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortTrafficStatisticsPort.setStatus("current")


class _LcsPortTrafficStatisticsClear_Type(Integer32):
    """Custom type lcsPortTrafficStatisticsClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortTrafficStatisticsClear_Type.__name__ = "Integer32"
_LcsPortTrafficStatisticsClear_Object = MibTableColumn
lcsPortTrafficStatisticsClear = _LcsPortTrafficStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 2),
    _LcsPortTrafficStatisticsClear_Type()
)
lcsPortTrafficStatisticsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortTrafficStatisticsClear.setStatus("current")
_LcsPortTrafficRxPackets_Type = Counter64
_LcsPortTrafficRxPackets_Object = MibTableColumn
lcsPortTrafficRxPackets = _LcsPortTrafficRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 3),
    _LcsPortTrafficRxPackets_Type()
)
lcsPortTrafficRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxPackets.setStatus("current")
_LcsPortTrafficRxOctets_Type = Counter64
_LcsPortTrafficRxOctets_Object = MibTableColumn
lcsPortTrafficRxOctets = _LcsPortTrafficRxOctets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 4),
    _LcsPortTrafficRxOctets_Type()
)
lcsPortTrafficRxOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxOctets.setStatus("current")
_LcsPortTrafficRxUnicast_Type = Counter64
_LcsPortTrafficRxUnicast_Object = MibTableColumn
lcsPortTrafficRxUnicast = _LcsPortTrafficRxUnicast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 5),
    _LcsPortTrafficRxUnicast_Type()
)
lcsPortTrafficRxUnicast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxUnicast.setStatus("current")
_LcsPortTrafficRxMulticast_Type = Counter64
_LcsPortTrafficRxMulticast_Object = MibTableColumn
lcsPortTrafficRxMulticast = _LcsPortTrafficRxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 6),
    _LcsPortTrafficRxMulticast_Type()
)
lcsPortTrafficRxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxMulticast.setStatus("current")
_LcsPortTrafficRxBroadcast_Type = Counter64
_LcsPortTrafficRxBroadcast_Object = MibTableColumn
lcsPortTrafficRxBroadcast = _LcsPortTrafficRxBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 7),
    _LcsPortTrafficRxBroadcast_Type()
)
lcsPortTrafficRxBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxBroadcast.setStatus("current")
_LcsPortTrafficRxPause_Type = Counter64
_LcsPortTrafficRxPause_Object = MibTableColumn
lcsPortTrafficRxPause = _LcsPortTrafficRxPause_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 8),
    _LcsPortTrafficRxPause_Type()
)
lcsPortTrafficRxPause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxPause.setStatus("current")
_LcsPortTrafficRx64Bytes_Type = Counter64
_LcsPortTrafficRx64Bytes_Object = MibTableColumn
lcsPortTrafficRx64Bytes = _LcsPortTrafficRx64Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 9),
    _LcsPortTrafficRx64Bytes_Type()
)
lcsPortTrafficRx64Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx64Bytes.setStatus("current")
_LcsPortTrafficRx65to127Bytes_Type = Counter64
_LcsPortTrafficRx65to127Bytes_Object = MibTableColumn
lcsPortTrafficRx65to127Bytes = _LcsPortTrafficRx65to127Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 10),
    _LcsPortTrafficRx65to127Bytes_Type()
)
lcsPortTrafficRx65to127Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx65to127Bytes.setStatus("current")
_LcsPortTrafficRx128to255Bytes_Type = Counter64
_LcsPortTrafficRx128to255Bytes_Object = MibTableColumn
lcsPortTrafficRx128to255Bytes = _LcsPortTrafficRx128to255Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 11),
    _LcsPortTrafficRx128to255Bytes_Type()
)
lcsPortTrafficRx128to255Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx128to255Bytes.setStatus("current")
_LcsPortTrafficRx256to511Bytes_Type = Counter64
_LcsPortTrafficRx256to511Bytes_Object = MibTableColumn
lcsPortTrafficRx256to511Bytes = _LcsPortTrafficRx256to511Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 12),
    _LcsPortTrafficRx256to511Bytes_Type()
)
lcsPortTrafficRx256to511Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx256to511Bytes.setStatus("current")
_LcsPortTrafficRx512to1023Bytes_Type = Counter64
_LcsPortTrafficRx512to1023Bytes_Object = MibTableColumn
lcsPortTrafficRx512to1023Bytes = _LcsPortTrafficRx512to1023Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 13),
    _LcsPortTrafficRx512to1023Bytes_Type()
)
lcsPortTrafficRx512to1023Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx512to1023Bytes.setStatus("current")
_LcsPortTrafficRx1024to1526Bytes_Type = Counter64
_LcsPortTrafficRx1024to1526Bytes_Object = MibTableColumn
lcsPortTrafficRx1024to1526Bytes = _LcsPortTrafficRx1024to1526Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 14),
    _LcsPortTrafficRx1024to1526Bytes_Type()
)
lcsPortTrafficRx1024to1526Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRx1024to1526Bytes.setStatus("current")
_LcsPortTrafficRxExceecd1527Bytes_Type = Counter64
_LcsPortTrafficRxExceecd1527Bytes_Object = MibTableColumn
lcsPortTrafficRxExceecd1527Bytes = _LcsPortTrafficRxExceecd1527Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 15),
    _LcsPortTrafficRxExceecd1527Bytes_Type()
)
lcsPortTrafficRxExceecd1527Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxExceecd1527Bytes.setStatus("current")
_LcsPortTrafficRxQ0_Type = Counter64
_LcsPortTrafficRxQ0_Object = MibTableColumn
lcsPortTrafficRxQ0 = _LcsPortTrafficRxQ0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 16),
    _LcsPortTrafficRxQ0_Type()
)
lcsPortTrafficRxQ0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ0.setStatus("current")
_LcsPortTrafficRxQ1_Type = Counter64
_LcsPortTrafficRxQ1_Object = MibTableColumn
lcsPortTrafficRxQ1 = _LcsPortTrafficRxQ1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 17),
    _LcsPortTrafficRxQ1_Type()
)
lcsPortTrafficRxQ1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ1.setStatus("current")
_LcsPortTrafficRxQ2_Type = Counter64
_LcsPortTrafficRxQ2_Object = MibTableColumn
lcsPortTrafficRxQ2 = _LcsPortTrafficRxQ2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 18),
    _LcsPortTrafficRxQ2_Type()
)
lcsPortTrafficRxQ2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ2.setStatus("current")
_LcsPortTrafficRxQ3_Type = Counter64
_LcsPortTrafficRxQ3_Object = MibTableColumn
lcsPortTrafficRxQ3 = _LcsPortTrafficRxQ3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 19),
    _LcsPortTrafficRxQ3_Type()
)
lcsPortTrafficRxQ3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ3.setStatus("current")
_LcsPortTrafficRxQ4_Type = Counter64
_LcsPortTrafficRxQ4_Object = MibTableColumn
lcsPortTrafficRxQ4 = _LcsPortTrafficRxQ4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 20),
    _LcsPortTrafficRxQ4_Type()
)
lcsPortTrafficRxQ4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ4.setStatus("current")
_LcsPortTrafficRxQ5_Type = Counter64
_LcsPortTrafficRxQ5_Object = MibTableColumn
lcsPortTrafficRxQ5 = _LcsPortTrafficRxQ5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 21),
    _LcsPortTrafficRxQ5_Type()
)
lcsPortTrafficRxQ5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ5.setStatus("current")
_LcsPortTrafficRxQ6_Type = Counter64
_LcsPortTrafficRxQ6_Object = MibTableColumn
lcsPortTrafficRxQ6 = _LcsPortTrafficRxQ6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 22),
    _LcsPortTrafficRxQ6_Type()
)
lcsPortTrafficRxQ6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ6.setStatus("current")
_LcsPortTrafficRxQ7_Type = Counter64
_LcsPortTrafficRxQ7_Object = MibTableColumn
lcsPortTrafficRxQ7 = _LcsPortTrafficRxQ7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 23),
    _LcsPortTrafficRxQ7_Type()
)
lcsPortTrafficRxQ7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxQ7.setStatus("current")
_LcsPortTrafficRxDrops_Type = Counter64
_LcsPortTrafficRxDrops_Object = MibTableColumn
lcsPortTrafficRxDrops = _LcsPortTrafficRxDrops_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 24),
    _LcsPortTrafficRxDrops_Type()
)
lcsPortTrafficRxDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxDrops.setStatus("current")
_LcsPortTrafficRxCRCorAlignment_Type = Counter64
_LcsPortTrafficRxCRCorAlignment_Object = MibTableColumn
lcsPortTrafficRxCRCorAlignment = _LcsPortTrafficRxCRCorAlignment_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 25),
    _LcsPortTrafficRxCRCorAlignment_Type()
)
lcsPortTrafficRxCRCorAlignment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxCRCorAlignment.setStatus("current")
_LcsPortTrafficRxUndersize_Type = Counter64
_LcsPortTrafficRxUndersize_Object = MibTableColumn
lcsPortTrafficRxUndersize = _LcsPortTrafficRxUndersize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 26),
    _LcsPortTrafficRxUndersize_Type()
)
lcsPortTrafficRxUndersize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxUndersize.setStatus("current")
_LcsPortTrafficRxOversize_Type = Counter64
_LcsPortTrafficRxOversize_Object = MibTableColumn
lcsPortTrafficRxOversize = _LcsPortTrafficRxOversize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 27),
    _LcsPortTrafficRxOversize_Type()
)
lcsPortTrafficRxOversize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxOversize.setStatus("current")
_LcsPortTrafficRxFragments_Type = Counter64
_LcsPortTrafficRxFragments_Object = MibTableColumn
lcsPortTrafficRxFragments = _LcsPortTrafficRxFragments_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 28),
    _LcsPortTrafficRxFragments_Type()
)
lcsPortTrafficRxFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxFragments.setStatus("current")
_LcsPortTrafficRxJabber_Type = Counter64
_LcsPortTrafficRxJabber_Object = MibTableColumn
lcsPortTrafficRxJabber = _LcsPortTrafficRxJabber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 29),
    _LcsPortTrafficRxJabber_Type()
)
lcsPortTrafficRxJabber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxJabber.setStatus("current")
_LcsPortTrafficRxFiltered_Type = Counter64
_LcsPortTrafficRxFiltered_Object = MibTableColumn
lcsPortTrafficRxFiltered = _LcsPortTrafficRxFiltered_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 30),
    _LcsPortTrafficRxFiltered_Type()
)
lcsPortTrafficRxFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficRxFiltered.setStatus("current")
_LcsPortTrafficTxPackets_Type = Counter64
_LcsPortTrafficTxPackets_Object = MibTableColumn
lcsPortTrafficTxPackets = _LcsPortTrafficTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 31),
    _LcsPortTrafficTxPackets_Type()
)
lcsPortTrafficTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxPackets.setStatus("current")
_LcsPortTrafficTxOctets_Type = Counter64
_LcsPortTrafficTxOctets_Object = MibTableColumn
lcsPortTrafficTxOctets = _LcsPortTrafficTxOctets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 32),
    _LcsPortTrafficTxOctets_Type()
)
lcsPortTrafficTxOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxOctets.setStatus("current")
_LcsPortTrafficTxUnicast_Type = Counter64
_LcsPortTrafficTxUnicast_Object = MibTableColumn
lcsPortTrafficTxUnicast = _LcsPortTrafficTxUnicast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 33),
    _LcsPortTrafficTxUnicast_Type()
)
lcsPortTrafficTxUnicast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxUnicast.setStatus("current")
_LcsPortTrafficTxMulticast_Type = Counter64
_LcsPortTrafficTxMulticast_Object = MibTableColumn
lcsPortTrafficTxMulticast = _LcsPortTrafficTxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 34),
    _LcsPortTrafficTxMulticast_Type()
)
lcsPortTrafficTxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxMulticast.setStatus("current")
_LcsPortTrafficTxBroadcast_Type = Counter64
_LcsPortTrafficTxBroadcast_Object = MibTableColumn
lcsPortTrafficTxBroadcast = _LcsPortTrafficTxBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 35),
    _LcsPortTrafficTxBroadcast_Type()
)
lcsPortTrafficTxBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxBroadcast.setStatus("current")
_LcsPortTrafficTxPause_Type = Counter64
_LcsPortTrafficTxPause_Object = MibTableColumn
lcsPortTrafficTxPause = _LcsPortTrafficTxPause_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 36),
    _LcsPortTrafficTxPause_Type()
)
lcsPortTrafficTxPause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxPause.setStatus("current")
_LcsPortTrafficTx64Bytes_Type = Counter64
_LcsPortTrafficTx64Bytes_Object = MibTableColumn
lcsPortTrafficTx64Bytes = _LcsPortTrafficTx64Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 37),
    _LcsPortTrafficTx64Bytes_Type()
)
lcsPortTrafficTx64Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx64Bytes.setStatus("current")
_LcsPortTrafficTx65to127Bytes_Type = Counter64
_LcsPortTrafficTx65to127Bytes_Object = MibTableColumn
lcsPortTrafficTx65to127Bytes = _LcsPortTrafficTx65to127Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 38),
    _LcsPortTrafficTx65to127Bytes_Type()
)
lcsPortTrafficTx65to127Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx65to127Bytes.setStatus("current")
_LcsPortTrafficTx128to255Bytes_Type = Counter64
_LcsPortTrafficTx128to255Bytes_Object = MibTableColumn
lcsPortTrafficTx128to255Bytes = _LcsPortTrafficTx128to255Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 39),
    _LcsPortTrafficTx128to255Bytes_Type()
)
lcsPortTrafficTx128to255Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx128to255Bytes.setStatus("current")
_LcsPortTrafficTx256to511Bytes_Type = Counter64
_LcsPortTrafficTx256to511Bytes_Object = MibTableColumn
lcsPortTrafficTx256to511Bytes = _LcsPortTrafficTx256to511Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 40),
    _LcsPortTrafficTx256to511Bytes_Type()
)
lcsPortTrafficTx256to511Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx256to511Bytes.setStatus("current")
_LcsPortTrafficTx512to1023Bytes_Type = Counter64
_LcsPortTrafficTx512to1023Bytes_Object = MibTableColumn
lcsPortTrafficTx512to1023Bytes = _LcsPortTrafficTx512to1023Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 41),
    _LcsPortTrafficTx512to1023Bytes_Type()
)
lcsPortTrafficTx512to1023Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx512to1023Bytes.setStatus("current")
_LcsPortTrafficTx1024to1526Bytes_Type = Counter64
_LcsPortTrafficTx1024to1526Bytes_Object = MibTableColumn
lcsPortTrafficTx1024to1526Bytes = _LcsPortTrafficTx1024to1526Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 42),
    _LcsPortTrafficTx1024to1526Bytes_Type()
)
lcsPortTrafficTx1024to1526Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTx1024to1526Bytes.setStatus("current")
_LcsPortTrafficTxExceecd1527Bytes_Type = Counter64
_LcsPortTrafficTxExceecd1527Bytes_Object = MibTableColumn
lcsPortTrafficTxExceecd1527Bytes = _LcsPortTrafficTxExceecd1527Bytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 43),
    _LcsPortTrafficTxExceecd1527Bytes_Type()
)
lcsPortTrafficTxExceecd1527Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxExceecd1527Bytes.setStatus("current")
_LcsPortTrafficTxQ0_Type = Counter64
_LcsPortTrafficTxQ0_Object = MibTableColumn
lcsPortTrafficTxQ0 = _LcsPortTrafficTxQ0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 44),
    _LcsPortTrafficTxQ0_Type()
)
lcsPortTrafficTxQ0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ0.setStatus("current")
_LcsPortTrafficTxQ1_Type = Counter64
_LcsPortTrafficTxQ1_Object = MibTableColumn
lcsPortTrafficTxQ1 = _LcsPortTrafficTxQ1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 45),
    _LcsPortTrafficTxQ1_Type()
)
lcsPortTrafficTxQ1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ1.setStatus("current")
_LcsPortTrafficTxQ2_Type = Counter64
_LcsPortTrafficTxQ2_Object = MibTableColumn
lcsPortTrafficTxQ2 = _LcsPortTrafficTxQ2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 46),
    _LcsPortTrafficTxQ2_Type()
)
lcsPortTrafficTxQ2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ2.setStatus("current")
_LcsPortTrafficTxQ3_Type = Counter64
_LcsPortTrafficTxQ3_Object = MibTableColumn
lcsPortTrafficTxQ3 = _LcsPortTrafficTxQ3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 47),
    _LcsPortTrafficTxQ3_Type()
)
lcsPortTrafficTxQ3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ3.setStatus("current")
_LcsPortTrafficTxQ4_Type = Counter64
_LcsPortTrafficTxQ4_Object = MibTableColumn
lcsPortTrafficTxQ4 = _LcsPortTrafficTxQ4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 48),
    _LcsPortTrafficTxQ4_Type()
)
lcsPortTrafficTxQ4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ4.setStatus("current")
_LcsPortTrafficTxQ5_Type = Counter64
_LcsPortTrafficTxQ5_Object = MibTableColumn
lcsPortTrafficTxQ5 = _LcsPortTrafficTxQ5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 49),
    _LcsPortTrafficTxQ5_Type()
)
lcsPortTrafficTxQ5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ5.setStatus("current")
_LcsPortTrafficTxQ6_Type = Counter64
_LcsPortTrafficTxQ6_Object = MibTableColumn
lcsPortTrafficTxQ6 = _LcsPortTrafficTxQ6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 50),
    _LcsPortTrafficTxQ6_Type()
)
lcsPortTrafficTxQ6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ6.setStatus("current")
_LcsPortTrafficTxQ7_Type = Counter64
_LcsPortTrafficTxQ7_Object = MibTableColumn
lcsPortTrafficTxQ7 = _LcsPortTrafficTxQ7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 51),
    _LcsPortTrafficTxQ7_Type()
)
lcsPortTrafficTxQ7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxQ7.setStatus("current")
_LcsPortTrafficTxDrops_Type = Counter64
_LcsPortTrafficTxDrops_Object = MibTableColumn
lcsPortTrafficTxDrops = _LcsPortTrafficTxDrops_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 52),
    _LcsPortTrafficTxDrops_Type()
)
lcsPortTrafficTxDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxDrops.setStatus("current")
_LcsPortTrafficTxLateOrExcColl_Type = Counter64
_LcsPortTrafficTxLateOrExcColl_Object = MibTableColumn
lcsPortTrafficTxLateOrExcColl = _LcsPortTrafficTxLateOrExcColl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 2, 1, 53),
    _LcsPortTrafficTxLateOrExcColl_Type()
)
lcsPortTrafficTxLateOrExcColl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortTrafficTxLateOrExcColl.setStatus("current")
_LcsPortQoSStatistics_ObjectIdentity = ObjectIdentity
lcsPortQoSStatistics = _LcsPortQoSStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3)
)


class _LcsPortQoSStatisticsClear_Type(Integer32):
    """Custom type lcsPortQoSStatisticsClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortQoSStatisticsClear_Type.__name__ = "Integer32"
_LcsPortQoSStatisticsClear_Object = MibScalar
lcsPortQoSStatisticsClear = _LcsPortQoSStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 1),
    _LcsPortQoSStatisticsClear_Type()
)
lcsPortQoSStatisticsClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSStatisticsClear.setStatus("current")
_LcsPortQoSStatisticsTable_Object = MibTable
lcsPortQoSStatisticsTable = _LcsPortQoSStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2)
)
if mibBuilder.loadTexts:
    lcsPortQoSStatisticsTable.setStatus("current")
_LcsPortQoSStatisticsEntry_Object = MibTableRow
lcsPortQoSStatisticsEntry = _LcsPortQoSStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1)
)
lcsPortQoSStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortQoSStatisticsPort"),
)
if mibBuilder.loadTexts:
    lcsPortQoSStatisticsEntry.setStatus("current")


class _LcsPortQoSStatisticsPort_Type(Integer32):
    """Custom type lcsPortQoSStatisticsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPortQoSStatisticsPort_Type.__name__ = "Integer32"
_LcsPortQoSStatisticsPort_Object = MibTableColumn
lcsPortQoSStatisticsPort = _LcsPortQoSStatisticsPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 1),
    _LcsPortQoSStatisticsPort_Type()
)
lcsPortQoSStatisticsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortQoSStatisticsPort.setStatus("current")
_LcsPortQoSQ0Rx_Type = Counter64
_LcsPortQoSQ0Rx_Object = MibTableColumn
lcsPortQoSQ0Rx = _LcsPortQoSQ0Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 2),
    _LcsPortQoSQ0Rx_Type()
)
lcsPortQoSQ0Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ0Rx.setStatus("current")
_LcsPortQoSQ0Tx_Type = Counter64
_LcsPortQoSQ0Tx_Object = MibTableColumn
lcsPortQoSQ0Tx = _LcsPortQoSQ0Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 3),
    _LcsPortQoSQ0Tx_Type()
)
lcsPortQoSQ0Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ0Tx.setStatus("current")
_LcsPortQoSQ1Rx_Type = Counter64
_LcsPortQoSQ1Rx_Object = MibTableColumn
lcsPortQoSQ1Rx = _LcsPortQoSQ1Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 4),
    _LcsPortQoSQ1Rx_Type()
)
lcsPortQoSQ1Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ1Rx.setStatus("current")
_LcsPortQoSQ1Tx_Type = Counter64
_LcsPortQoSQ1Tx_Object = MibTableColumn
lcsPortQoSQ1Tx = _LcsPortQoSQ1Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 5),
    _LcsPortQoSQ1Tx_Type()
)
lcsPortQoSQ1Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ1Tx.setStatus("current")
_LcsPortQoSQ2Rx_Type = Counter64
_LcsPortQoSQ2Rx_Object = MibTableColumn
lcsPortQoSQ2Rx = _LcsPortQoSQ2Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 6),
    _LcsPortQoSQ2Rx_Type()
)
lcsPortQoSQ2Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ2Rx.setStatus("current")
_LcsPortQoSQ2Tx_Type = Counter64
_LcsPortQoSQ2Tx_Object = MibTableColumn
lcsPortQoSQ2Tx = _LcsPortQoSQ2Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 7),
    _LcsPortQoSQ2Tx_Type()
)
lcsPortQoSQ2Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ2Tx.setStatus("current")
_LcsPortQoSQ3Rx_Type = Counter64
_LcsPortQoSQ3Rx_Object = MibTableColumn
lcsPortQoSQ3Rx = _LcsPortQoSQ3Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 8),
    _LcsPortQoSQ3Rx_Type()
)
lcsPortQoSQ3Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ3Rx.setStatus("current")
_LcsPortQoSQ3Tx_Type = Counter64
_LcsPortQoSQ3Tx_Object = MibTableColumn
lcsPortQoSQ3Tx = _LcsPortQoSQ3Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 9),
    _LcsPortQoSQ3Tx_Type()
)
lcsPortQoSQ3Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ3Tx.setStatus("current")
_LcsPortQoSQ4Rx_Type = Counter64
_LcsPortQoSQ4Rx_Object = MibTableColumn
lcsPortQoSQ4Rx = _LcsPortQoSQ4Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 10),
    _LcsPortQoSQ4Rx_Type()
)
lcsPortQoSQ4Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ4Rx.setStatus("current")
_LcsPortQoSQ4Tx_Type = Counter64
_LcsPortQoSQ4Tx_Object = MibTableColumn
lcsPortQoSQ4Tx = _LcsPortQoSQ4Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 11),
    _LcsPortQoSQ4Tx_Type()
)
lcsPortQoSQ4Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ4Tx.setStatus("current")
_LcsPortQoSQ5Rx_Type = Counter64
_LcsPortQoSQ5Rx_Object = MibTableColumn
lcsPortQoSQ5Rx = _LcsPortQoSQ5Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 12),
    _LcsPortQoSQ5Rx_Type()
)
lcsPortQoSQ5Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ5Rx.setStatus("current")
_LcsPortQoSQ5Tx_Type = Counter64
_LcsPortQoSQ5Tx_Object = MibTableColumn
lcsPortQoSQ5Tx = _LcsPortQoSQ5Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 13),
    _LcsPortQoSQ5Tx_Type()
)
lcsPortQoSQ5Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ5Tx.setStatus("current")
_LcsPortQoSQ6Rx_Type = Counter64
_LcsPortQoSQ6Rx_Object = MibTableColumn
lcsPortQoSQ6Rx = _LcsPortQoSQ6Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 14),
    _LcsPortQoSQ6Rx_Type()
)
lcsPortQoSQ6Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ6Rx.setStatus("current")
_LcsPortQoSQ6Tx_Type = Counter64
_LcsPortQoSQ6Tx_Object = MibTableColumn
lcsPortQoSQ6Tx = _LcsPortQoSQ6Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 15),
    _LcsPortQoSQ6Tx_Type()
)
lcsPortQoSQ6Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ6Tx.setStatus("current")
_LcsPortQoSQ7Rx_Type = Counter64
_LcsPortQoSQ7Rx_Object = MibTableColumn
lcsPortQoSQ7Rx = _LcsPortQoSQ7Rx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 16),
    _LcsPortQoSQ7Rx_Type()
)
lcsPortQoSQ7Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ7Rx.setStatus("current")
_LcsPortQoSQ7Tx_Type = Counter64
_LcsPortQoSQ7Tx_Object = MibTableColumn
lcsPortQoSQ7Tx = _LcsPortQoSQ7Tx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 3, 2, 1, 17),
    _LcsPortQoSQ7Tx_Type()
)
lcsPortQoSQ7Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortQoSQ7Tx.setStatus("current")
_LcsSFPInfoTable_Object = MibTable
lcsSFPInfoTable = _LcsSFPInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4)
)
if mibBuilder.loadTexts:
    lcsSFPInfoTable.setStatus("current")
_LcsSFPInfoEntry_Object = MibTableRow
lcsSFPInfoEntry = _LcsSFPInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1)
)
lcsSFPInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSFPInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsSFPInfoEntry.setStatus("current")


class _LcsSFPInfoIndex_Type(Integer32):
    """Custom type lcsSFPInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsSFPInfoIndex_Type.__name__ = "Integer32"
_LcsSFPInfoIndex_Object = MibTableColumn
lcsSFPInfoIndex = _LcsSFPInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 1),
    _LcsSFPInfoIndex_Type()
)
lcsSFPInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsSFPInfoIndex.setStatus("current")
_LcsSFPInfoPort_Type = DisplayString
_LcsSFPInfoPort_Object = MibTableColumn
lcsSFPInfoPort = _LcsSFPInfoPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 2),
    _LcsSFPInfoPort_Type()
)
lcsSFPInfoPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPInfoPort.setStatus("current")
_LcsSFPConnectorType_Type = DisplayString
_LcsSFPConnectorType_Object = MibTableColumn
lcsSFPConnectorType = _LcsSFPConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 3),
    _LcsSFPConnectorType_Type()
)
lcsSFPConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPConnectorType.setStatus("current")
_LcsSFPFiberType_Type = DisplayString
_LcsSFPFiberType_Object = MibTableColumn
lcsSFPFiberType = _LcsSFPFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 4),
    _LcsSFPFiberType_Type()
)
lcsSFPFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPFiberType.setStatus("current")
_LcsSFPTxCentralWavelength_Type = DisplayString
_LcsSFPTxCentralWavelength_Object = MibTableColumn
lcsSFPTxCentralWavelength = _LcsSFPTxCentralWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 5),
    _LcsSFPTxCentralWavelength_Type()
)
lcsSFPTxCentralWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPTxCentralWavelength.setStatus("current")
_LcsSFPBaudRate_Type = DisplayString
_LcsSFPBaudRate_Object = MibTableColumn
lcsSFPBaudRate = _LcsSFPBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 6),
    _LcsSFPBaudRate_Type()
)
lcsSFPBaudRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPBaudRate.setStatus("current")
_LcsSFPVendorOUI_Type = DisplayString
_LcsSFPVendorOUI_Object = MibTableColumn
lcsSFPVendorOUI = _LcsSFPVendorOUI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 7),
    _LcsSFPVendorOUI_Type()
)
lcsSFPVendorOUI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVendorOUI.setStatus("current")
_LcsSFPVendorName_Type = DisplayString
_LcsSFPVendorName_Object = MibTableColumn
lcsSFPVendorName = _LcsSFPVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 8),
    _LcsSFPVendorName_Type()
)
lcsSFPVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVendorName.setStatus("current")
_LcsSFPVendorPN_Type = DisplayString
_LcsSFPVendorPN_Object = MibTableColumn
lcsSFPVendorPN = _LcsSFPVendorPN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 9),
    _LcsSFPVendorPN_Type()
)
lcsSFPVendorPN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVendorPN.setStatus("current")
_LcsSFPVendorRev_Type = DisplayString
_LcsSFPVendorRev_Object = MibTableColumn
lcsSFPVendorRev = _LcsSFPVendorRev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 10),
    _LcsSFPVendorRev_Type()
)
lcsSFPVendorRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVendorRev.setStatus("current")
_LcsSFPVendorSN_Type = DisplayString
_LcsSFPVendorSN_Object = MibTableColumn
lcsSFPVendorSN = _LcsSFPVendorSN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 11),
    _LcsSFPVendorSN_Type()
)
lcsSFPVendorSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVendorSN.setStatus("current")
_LcsSFPDateCode_Type = DisplayString
_LcsSFPDateCode_Object = MibTableColumn
lcsSFPDateCode = _LcsSFPDateCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 12),
    _LcsSFPDateCode_Type()
)
lcsSFPDateCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPDateCode.setStatus("current")
_LcsSFPTemperature_Type = DisplayString
_LcsSFPTemperature_Object = MibTableColumn
lcsSFPTemperature = _LcsSFPTemperature_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 13),
    _LcsSFPTemperature_Type()
)
lcsSFPTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPTemperature.setStatus("current")
_LcsSFPVcc_Type = DisplayString
_LcsSFPVcc_Object = MibTableColumn
lcsSFPVcc = _LcsSFPVcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 14),
    _LcsSFPVcc_Type()
)
lcsSFPVcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPVcc.setStatus("current")
_LcsSFPMon1Bias_Type = DisplayString
_LcsSFPMon1Bias_Object = MibTableColumn
lcsSFPMon1Bias = _LcsSFPMon1Bias_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 15),
    _LcsSFPMon1Bias_Type()
)
lcsSFPMon1Bias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPMon1Bias.setStatus("current")
_LcsSFPMon2TxPWR_Type = DisplayString
_LcsSFPMon2TxPWR_Object = MibTableColumn
lcsSFPMon2TxPWR = _LcsSFPMon2TxPWR_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 16),
    _LcsSFPMon2TxPWR_Type()
)
lcsSFPMon2TxPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPMon2TxPWR.setStatus("current")
_LcsSFPMon3RxPWR_Type = DisplayString
_LcsSFPMon3RxPWR_Object = MibTableColumn
lcsSFPMon3RxPWR = _LcsSFPMon3RxPWR_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1, 4, 1, 17),
    _LcsSFPMon3RxPWR_Type()
)
lcsSFPMon3RxPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsSFPMon3RxPWR.setStatus("current")
_LcsVoiceVLAN_ObjectIdentity = ObjectIdentity
lcsVoiceVLAN = _LcsVoiceVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2)
)
_LcsVoiceVLANConf_ObjectIdentity = ObjectIdentity
lcsVoiceVLANConf = _LcsVoiceVLANConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1)
)


class _LcsVoiceVLANMode_Type(Integer32):
    """Custom type lcsVoiceVLANMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsVoiceVLANMode_Type.__name__ = "Integer32"
_LcsVoiceVLANMode_Object = MibScalar
lcsVoiceVLANMode = _LcsVoiceVLANMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 1),
    _LcsVoiceVLANMode_Type()
)
lcsVoiceVLANMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANMode.setStatus("current")


class _LcsVoiceVLANVLANId_Type(Integer32):
    """Custom type lcsVoiceVLANVLANId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVoiceVLANVLANId_Type.__name__ = "Integer32"
_LcsVoiceVLANVLANId_Object = MibScalar
lcsVoiceVLANVLANId = _LcsVoiceVLANVLANId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 2),
    _LcsVoiceVLANVLANId_Type()
)
lcsVoiceVLANVLANId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANVLANId.setStatus("current")


class _LcsVoiceVLANAgingTime_Type(Integer32):
    """Custom type lcsVoiceVLANAgingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 10000000),
    )


_LcsVoiceVLANAgingTime_Type.__name__ = "Integer32"
_LcsVoiceVLANAgingTime_Object = MibScalar
lcsVoiceVLANAgingTime = _LcsVoiceVLANAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 3),
    _LcsVoiceVLANAgingTime_Type()
)
lcsVoiceVLANAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANAgingTime.setStatus("current")


class _LcsVoiceVLANTrafficClass_Type(Integer32):
    """Custom type lcsVoiceVLANTrafficClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsVoiceVLANTrafficClass_Type.__name__ = "Integer32"
_LcsVoiceVLANTrafficClass_Object = MibScalar
lcsVoiceVLANTrafficClass = _LcsVoiceVLANTrafficClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 4),
    _LcsVoiceVLANTrafficClass_Type()
)
lcsVoiceVLANTrafficClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANTrafficClass.setStatus("current")
_LcsVoiceVLANPortTable_Object = MibTable
lcsVoiceVLANPortTable = _LcsVoiceVLANPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5)
)
if mibBuilder.loadTexts:
    lcsVoiceVLANPortTable.setStatus("current")
_LcsVoiceVLANPortEntry_Object = MibTableRow
lcsVoiceVLANPortEntry = _LcsVoiceVLANPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5, 1)
)
lcsVoiceVLANPortEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVoiceVLANPort"),
)
if mibBuilder.loadTexts:
    lcsVoiceVLANPortEntry.setStatus("current")


class _LcsVoiceVLANPort_Type(Integer32):
    """Custom type lcsVoiceVLANPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsVoiceVLANPort_Type.__name__ = "Integer32"
_LcsVoiceVLANPort_Object = MibTableColumn
lcsVoiceVLANPort = _LcsVoiceVLANPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5, 1, 1),
    _LcsVoiceVLANPort_Type()
)
lcsVoiceVLANPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVoiceVLANPort.setStatus("current")


class _LcsVoiceVLANPortMode_Type(Integer32):
    """Custom type lcsVoiceVLANPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsVoiceVLANPortMode_Type.__name__ = "Integer32"
_LcsVoiceVLANPortMode_Object = MibTableColumn
lcsVoiceVLANPortMode = _LcsVoiceVLANPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5, 1, 2),
    _LcsVoiceVLANPortMode_Type()
)
lcsVoiceVLANPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANPortMode.setStatus("current")


class _LcsVoiceVLANPortSecurity_Type(Integer32):
    """Custom type lcsVoiceVLANPortSecurity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsVoiceVLANPortSecurity_Type.__name__ = "Integer32"
_LcsVoiceVLANPortSecurity_Object = MibTableColumn
lcsVoiceVLANPortSecurity = _LcsVoiceVLANPortSecurity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5, 1, 3),
    _LcsVoiceVLANPortSecurity_Type()
)
lcsVoiceVLANPortSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANPortSecurity.setStatus("current")


class _LcsVoiceVLANPortDiscoveryProtocol_Type(Integer32):
    """Custom type lcsVoiceVLANPortDiscoveryProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsVoiceVLANPortDiscoveryProtocol_Type.__name__ = "Integer32"
_LcsVoiceVLANPortDiscoveryProtocol_Object = MibTableColumn
lcsVoiceVLANPortDiscoveryProtocol = _LcsVoiceVLANPortDiscoveryProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 1, 5, 1, 4),
    _LcsVoiceVLANPortDiscoveryProtocol_Type()
)
lcsVoiceVLANPortDiscoveryProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANPortDiscoveryProtocol.setStatus("current")
_LcsVoiceVLANOUI_ObjectIdentity = ObjectIdentity
lcsVoiceVLANOUI = _LcsVoiceVLANOUI_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2)
)


class _LcsVoiceVLANOUICreate_Type(Integer32):
    """Custom type lcsVoiceVLANOUICreate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsVoiceVLANOUICreate_Type.__name__ = "Integer32"
_LcsVoiceVLANOUICreate_Object = MibScalar
lcsVoiceVLANOUICreate = _LcsVoiceVLANOUICreate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 1),
    _LcsVoiceVLANOUICreate_Type()
)
lcsVoiceVLANOUICreate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVoiceVLANOUICreate.setStatus("current")
_LcsVoiceVLANOUITable_Object = MibTable
lcsVoiceVLANOUITable = _LcsVoiceVLANOUITable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2)
)
if mibBuilder.loadTexts:
    lcsVoiceVLANOUITable.setStatus("current")
_LcsVoiceVLANOUIEntry_Object = MibTableRow
lcsVoiceVLANOUIEntry = _LcsVoiceVLANOUIEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2, 1)
)
lcsVoiceVLANOUIEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVoiceVLANOUIIndex"),
)
if mibBuilder.loadTexts:
    lcsVoiceVLANOUIEntry.setStatus("current")


class _LcsVoiceVLANOUIIndex_Type(Integer32):
    """Custom type lcsVoiceVLANOUIIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsVoiceVLANOUIIndex_Type.__name__ = "Integer32"
_LcsVoiceVLANOUIIndex_Object = MibTableColumn
lcsVoiceVLANOUIIndex = _LcsVoiceVLANOUIIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2, 1, 1),
    _LcsVoiceVLANOUIIndex_Type()
)
lcsVoiceVLANOUIIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVoiceVLANOUIIndex.setStatus("current")


class _LcsVoiceVLANTelephonyOUI_Type(DisplayString):
    """Custom type lcsVoiceVLANTelephonyOUI based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_LcsVoiceVLANTelephonyOUI_Type.__name__ = "DisplayString"
_LcsVoiceVLANTelephonyOUI_Object = MibTableColumn
lcsVoiceVLANTelephonyOUI = _LcsVoiceVLANTelephonyOUI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2, 1, 2),
    _LcsVoiceVLANTelephonyOUI_Type()
)
lcsVoiceVLANTelephonyOUI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVoiceVLANTelephonyOUI.setStatus("current")


class _LcsVoiceVLANDescription_Type(DisplayString):
    """Custom type lcsVoiceVLANDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_LcsVoiceVLANDescription_Type.__name__ = "DisplayString"
_LcsVoiceVLANDescription_Object = MibTableColumn
lcsVoiceVLANDescription = _LcsVoiceVLANDescription_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2, 1, 3),
    _LcsVoiceVLANDescription_Type()
)
lcsVoiceVLANDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVoiceVLANDescription.setStatus("current")
_LcsVoiceVLANOUIRowStatus_Type = RowStatus
_LcsVoiceVLANOUIRowStatus_Object = MibTableColumn
lcsVoiceVLANOUIRowStatus = _LcsVoiceVLANOUIRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 2, 2, 2, 1, 4),
    _LcsVoiceVLANOUIRowStatus_Type()
)
lcsVoiceVLANOUIRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVoiceVLANOUIRowStatus.setStatus("current")
_LcsGVRP_ObjectIdentity = ObjectIdentity
lcsGVRP = _LcsGVRP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4)
)
_LcsGVRPConf_ObjectIdentity = ObjectIdentity
lcsGVRPConf = _LcsGVRPConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1)
)


class _LcsGVRPMode_Type(Integer32):
    """Custom type lcsGVRPMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsGVRPMode_Type.__name__ = "Integer32"
_LcsGVRPMode_Object = MibScalar
lcsGVRPMode = _LcsGVRPMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 1),
    _LcsGVRPMode_Type()
)
lcsGVRPMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPMode.setStatus("current")


class _LcsGVRPMaxVlan_Type(Integer32):
    """Custom type lcsGVRPMaxVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsGVRPMaxVlan_Type.__name__ = "Integer32"
_LcsGVRPMaxVlan_Object = MibScalar
lcsGVRPMaxVlan = _LcsGVRPMaxVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 2),
    _LcsGVRPMaxVlan_Type()
)
lcsGVRPMaxVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPMaxVlan.setStatus("current")


class _LcsGVRPJoinTime_Type(Integer32):
    """Custom type lcsGVRPJoinTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_LcsGVRPJoinTime_Type.__name__ = "Integer32"
_LcsGVRPJoinTime_Object = MibScalar
lcsGVRPJoinTime = _LcsGVRPJoinTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 3),
    _LcsGVRPJoinTime_Type()
)
lcsGVRPJoinTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPJoinTime.setStatus("current")


class _LcsGVRPLeaveTime_Type(Integer32):
    """Custom type lcsGVRPLeaveTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_LcsGVRPLeaveTime_Type.__name__ = "Integer32"
_LcsGVRPLeaveTime_Object = MibScalar
lcsGVRPLeaveTime = _LcsGVRPLeaveTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 4),
    _LcsGVRPLeaveTime_Type()
)
lcsGVRPLeaveTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPLeaveTime.setStatus("current")


class _LcsGVRPLeaveAllTime_Type(Integer32):
    """Custom type lcsGVRPLeaveAllTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 5000),
    )


_LcsGVRPLeaveAllTime_Type.__name__ = "Integer32"
_LcsGVRPLeaveAllTime_Object = MibScalar
lcsGVRPLeaveAllTime = _LcsGVRPLeaveAllTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 5),
    _LcsGVRPLeaveAllTime_Type()
)
lcsGVRPLeaveAllTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPLeaveAllTime.setStatus("current")
_LcsGVRPConfTable_Object = MibTable
lcsGVRPConfTable = _LcsGVRPConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 6)
)
if mibBuilder.loadTexts:
    lcsGVRPConfTable.setStatus("current")
_LcsGVRPConfEntry_Object = MibTableRow
lcsGVRPConfEntry = _LcsGVRPConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 6, 1)
)
lcsGVRPConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsGVRPConfPort"),
)
if mibBuilder.loadTexts:
    lcsGVRPConfEntry.setStatus("current")


class _LcsGVRPConfPort_Type(Integer32):
    """Custom type lcsGVRPConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsGVRPConfPort_Type.__name__ = "Integer32"
_LcsGVRPConfPort_Object = MibTableColumn
lcsGVRPConfPort = _LcsGVRPConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 6, 1, 1),
    _LcsGVRPConfPort_Type()
)
lcsGVRPConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsGVRPConfPort.setStatus("current")


class _LcsGVRPConfPortMode_Type(Integer32):
    """Custom type lcsGVRPConfPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsGVRPConfPortMode_Type.__name__ = "Integer32"
_LcsGVRPConfPortMode_Object = MibTableColumn
lcsGVRPConfPortMode = _LcsGVRPConfPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 4, 1, 6, 1, 2),
    _LcsGVRPConfPortMode_Type()
)
lcsGVRPConfPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsGVRPConfPortMode.setStatus("current")
_LcsMirroring_ObjectIdentity = ObjectIdentity
lcsMirroring = _LcsMirroring_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6)
)


class _LcsMonitorSession_Type(Integer32):
    """Custom type lcsMonitorSession based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsMonitorSession_Type.__name__ = "Integer32"
_LcsMonitorSession_Object = MibScalar
lcsMonitorSession = _LcsMonitorSession_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 1),
    _LcsMonitorSession_Type()
)
lcsMonitorSession.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMonitorSession.setStatus("current")


class _LcsPortToMirrorOn_Type(Integer32):
    """Custom type lcsPortToMirrorOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_LcsPortToMirrorOn_Type.__name__ = "Integer32"
_LcsPortToMirrorOn_Object = MibScalar
lcsPortToMirrorOn = _LcsPortToMirrorOn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 2),
    _LcsPortToMirrorOn_Type()
)
lcsPortToMirrorOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortToMirrorOn.setStatus("current")
_LcsMirrorTable_Object = MibTable
lcsMirrorTable = _LcsMirrorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 3)
)
if mibBuilder.loadTexts:
    lcsMirrorTable.setStatus("current")
_LcsMirrorEntry_Object = MibTableRow
lcsMirrorEntry = _LcsMirrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 3, 1)
)
lcsMirrorEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMirrorPort"),
)
if mibBuilder.loadTexts:
    lcsMirrorEntry.setStatus("current")


class _LcsMirrorPort_Type(Integer32):
    """Custom type lcsMirrorPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsMirrorPort_Type.__name__ = "Integer32"
_LcsMirrorPort_Object = MibTableColumn
lcsMirrorPort = _LcsMirrorPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 3, 1, 1),
    _LcsMirrorPort_Type()
)
lcsMirrorPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMirrorPort.setStatus("current")


class _LcsMirrorMode_Type(Integer32):
    """Custom type lcsMirrorMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_LcsMirrorMode_Type.__name__ = "Integer32"
_LcsMirrorMode_Object = MibTableColumn
lcsMirrorMode = _LcsMirrorMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 6, 3, 1, 2),
    _LcsMirrorMode_Type()
)
lcsMirrorMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMirrorMode.setStatus("current")
_LcsTrapEventSeverity_ObjectIdentity = ObjectIdentity
lcsTrapEventSeverity = _LcsTrapEventSeverity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7)
)
_LcsTrapEventSeverityTable_Object = MibTable
lcsTrapEventSeverityTable = _LcsTrapEventSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1)
)
if mibBuilder.loadTexts:
    lcsTrapEventSeverityTable.setStatus("current")
_LcsTrapEventSeverityEntry_Object = MibTableRow
lcsTrapEventSeverityEntry = _LcsTrapEventSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1)
)
lcsTrapEventSeverityEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsTrapEventSeverityIndex"),
)
if mibBuilder.loadTexts:
    lcsTrapEventSeverityEntry.setStatus("current")


class _LcsTrapEventSeverityIndex_Type(Integer32):
    """Custom type lcsTrapEventSeverityIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsTrapEventSeverityIndex_Type.__name__ = "Integer32"
_LcsTrapEventSeverityIndex_Object = MibTableColumn
lcsTrapEventSeverityIndex = _LcsTrapEventSeverityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 1),
    _LcsTrapEventSeverityIndex_Type()
)
lcsTrapEventSeverityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsTrapEventSeverityIndex.setStatus("current")
_LcsTrapEventSeverityGroupName_Type = DisplayString
_LcsTrapEventSeverityGroupName_Object = MibTableColumn
lcsTrapEventSeverityGroupName = _LcsTrapEventSeverityGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 2),
    _LcsTrapEventSeverityGroupName_Type()
)
lcsTrapEventSeverityGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTrapEventSeverityGroupName.setStatus("current")
_LcsTrapEventSeverityLevel_Type = Integer32
_LcsTrapEventSeverityLevel_Object = MibTableColumn
lcsTrapEventSeverityLevel = _LcsTrapEventSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 3),
    _LcsTrapEventSeverityLevel_Type()
)
lcsTrapEventSeverityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapEventSeverityLevel.setStatus("current")
_LcsTrapEventSeveritySyslog_Type = Integer32
_LcsTrapEventSeveritySyslog_Object = MibTableColumn
lcsTrapEventSeveritySyslog = _LcsTrapEventSeveritySyslog_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 4),
    _LcsTrapEventSeveritySyslog_Type()
)
lcsTrapEventSeveritySyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapEventSeveritySyslog.setStatus("current")
_LcsTrapEventSeverityTrap_Type = Integer32
_LcsTrapEventSeverityTrap_Object = MibTableColumn
lcsTrapEventSeverityTrap = _LcsTrapEventSeverityTrap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 5),
    _LcsTrapEventSeverityTrap_Type()
)
lcsTrapEventSeverityTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapEventSeverityTrap.setStatus("current")
_LcsTrapEventSeveritySMTP_Type = Integer32
_LcsTrapEventSeveritySMTP_Object = MibTableColumn
lcsTrapEventSeveritySMTP = _LcsTrapEventSeveritySMTP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 7, 1, 1, 6),
    _LcsTrapEventSeveritySMTP_Type()
)
lcsTrapEventSeveritySMTP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTrapEventSeveritySMTP.setStatus("current")
_LcsSMTP_ObjectIdentity = ObjectIdentity
lcsSMTP = _LcsSMTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8)
)
_LcsSMTPMailServer_Type = DisplayString
_LcsSMTPMailServer_Object = MibScalar
lcsSMTPMailServer = _LcsSMTPMailServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 1),
    _LcsSMTPMailServer_Type()
)
lcsSMTPMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPMailServer.setStatus("current")
_LcsSMTPUserName_Type = DisplayString
_LcsSMTPUserName_Object = MibScalar
lcsSMTPUserName = _LcsSMTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 2),
    _LcsSMTPUserName_Type()
)
lcsSMTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPUserName.setStatus("current")
_LcsSMTPPassword_Type = DisplayString
_LcsSMTPPassword_Object = MibScalar
lcsSMTPPassword = _LcsSMTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 3),
    _LcsSMTPPassword_Type()
)
lcsSMTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPPassword.setStatus("current")
_LcsSMTPSender_Type = DisplayString
_LcsSMTPSender_Object = MibScalar
lcsSMTPSender = _LcsSMTPSender_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 5),
    _LcsSMTPSender_Type()
)
lcsSMTPSender.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPSender.setStatus("current")
_LcsSMTPReturnPath_Type = DisplayString
_LcsSMTPReturnPath_Object = MibScalar
lcsSMTPReturnPath = _LcsSMTPReturnPath_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 6),
    _LcsSMTPReturnPath_Type()
)
lcsSMTPReturnPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPReturnPath.setStatus("current")
_LcsSMTPEmailAddress1_Type = DisplayString
_LcsSMTPEmailAddress1_Object = MibScalar
lcsSMTPEmailAddress1 = _LcsSMTPEmailAddress1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 7),
    _LcsSMTPEmailAddress1_Type()
)
lcsSMTPEmailAddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress1.setStatus("current")
_LcsSMTPEmailAddress2_Type = DisplayString
_LcsSMTPEmailAddress2_Object = MibScalar
lcsSMTPEmailAddress2 = _LcsSMTPEmailAddress2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 8),
    _LcsSMTPEmailAddress2_Type()
)
lcsSMTPEmailAddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress2.setStatus("current")
_LcsSMTPEmailAddress3_Type = DisplayString
_LcsSMTPEmailAddress3_Object = MibScalar
lcsSMTPEmailAddress3 = _LcsSMTPEmailAddress3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 9),
    _LcsSMTPEmailAddress3_Type()
)
lcsSMTPEmailAddress3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress3.setStatus("current")
_LcsSMTPEmailAddress4_Type = DisplayString
_LcsSMTPEmailAddress4_Object = MibScalar
lcsSMTPEmailAddress4 = _LcsSMTPEmailAddress4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 10),
    _LcsSMTPEmailAddress4_Type()
)
lcsSMTPEmailAddress4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress4.setStatus("current")
_LcsSMTPEmailAddress5_Type = DisplayString
_LcsSMTPEmailAddress5_Object = MibScalar
lcsSMTPEmailAddress5 = _LcsSMTPEmailAddress5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 11),
    _LcsSMTPEmailAddress5_Type()
)
lcsSMTPEmailAddress5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress5.setStatus("current")
_LcsSMTPEmailAddress6_Type = DisplayString
_LcsSMTPEmailAddress6_Object = MibScalar
lcsSMTPEmailAddress6 = _LcsSMTPEmailAddress6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 8, 12),
    _LcsSMTPEmailAddress6_Type()
)
lcsSMTPEmailAddress6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSMTPEmailAddress6.setStatus("current")
_LcsACLConf_ObjectIdentity = ObjectIdentity
lcsACLConf = _LcsACLConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9)
)
_LcsACL_ObjectIdentity = ObjectIdentity
lcsACL = _LcsACL_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1)
)
_LcsACLPortConfTable_Object = MibTable
lcsACLPortConfTable = _LcsACLPortConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1)
)
if mibBuilder.loadTexts:
    lcsACLPortConfTable.setStatus("current")
_LcsACLPortConfEntry_Object = MibTableRow
lcsACLPortConfEntry = _LcsACLPortConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1)
)
lcsACLPortConfEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsACLPortConfEntry.setStatus("current")


class _LcsACLPortConfPolicyID_Type(Integer32):
    """Custom type lcsACLPortConfPolicyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_LcsACLPortConfPolicyID_Type.__name__ = "Integer32"
_LcsACLPortConfPolicyID_Object = MibTableColumn
lcsACLPortConfPolicyID = _LcsACLPortConfPolicyID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 2),
    _LcsACLPortConfPolicyID_Type()
)
lcsACLPortConfPolicyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfPolicyID.setStatus("current")


class _LcsACLPortConfAction_Type(Integer32):
    """Custom type lcsACLPortConfAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_LcsACLPortConfAction_Type.__name__ = "Integer32"
_LcsACLPortConfAction_Object = MibTableColumn
lcsACLPortConfAction = _LcsACLPortConfAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 3),
    _LcsACLPortConfAction_Type()
)
lcsACLPortConfAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfAction.setStatus("current")


class _LcsACLPortConfRateLimiterID_Type(Integer32):
    """Custom type lcsACLPortConfRateLimiterID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_LcsACLPortConfRateLimiterID_Type.__name__ = "Integer32"
_LcsACLPortConfRateLimiterID_Object = MibTableColumn
lcsACLPortConfRateLimiterID = _LcsACLPortConfRateLimiterID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 4),
    _LcsACLPortConfRateLimiterID_Type()
)
lcsACLPortConfRateLimiterID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfRateLimiterID.setStatus("current")


class _LcsACLPortConfPortRedirect_Type(Integer32):
    """Custom type lcsACLPortConfPortRedirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_LcsACLPortConfPortRedirect_Type.__name__ = "Integer32"
_LcsACLPortConfPortRedirect_Object = MibTableColumn
lcsACLPortConfPortRedirect = _LcsACLPortConfPortRedirect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 5),
    _LcsACLPortConfPortRedirect_Type()
)
lcsACLPortConfPortRedirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfPortRedirect.setStatus("current")
_LcsACLPortConfMirror_Type = AdminMode
_LcsACLPortConfMirror_Object = MibTableColumn
lcsACLPortConfMirror = _LcsACLPortConfMirror_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 6),
    _LcsACLPortConfMirror_Type()
)
lcsACLPortConfMirror.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfMirror.setStatus("current")
_LcsACLPortConfLogging_Type = AdminMode
_LcsACLPortConfLogging_Object = MibTableColumn
lcsACLPortConfLogging = _LcsACLPortConfLogging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 7),
    _LcsACLPortConfLogging_Type()
)
lcsACLPortConfLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfLogging.setStatus("current")


class _LcsACLPortConfShutdown_Type(AdminMode):
    """Custom type lcsACLPortConfShutdown based on AdminMode"""
    defaultValue = 0


_LcsACLPortConfShutdown_Type.__name__ = "AdminMode"
_LcsACLPortConfShutdown_Object = MibTableColumn
lcsACLPortConfShutdown = _LcsACLPortConfShutdown_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 8),
    _LcsACLPortConfShutdown_Type()
)
lcsACLPortConfShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfShutdown.setStatus("current")


class _LcsACLPortConfState_Type(AdminMode):
    """Custom type lcsACLPortConfState based on AdminMode"""
    defaultValue = 1


_LcsACLPortConfState_Type.__name__ = "AdminMode"
_LcsACLPortConfState_Object = MibTableColumn
lcsACLPortConfState = _LcsACLPortConfState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 9),
    _LcsACLPortConfState_Type()
)
lcsACLPortConfState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLPortConfState.setStatus("current")
_LcsACLPortConfCounter_Type = Counter32
_LcsACLPortConfCounter_Object = MibTableColumn
lcsACLPortConfCounter = _LcsACLPortConfCounter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 1, 1, 10),
    _LcsACLPortConfCounter_Type()
)
lcsACLPortConfCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLPortConfCounter.setStatus("current")
_LcsACLRateLimiterTable_Object = MibTable
lcsACLRateLimiterTable = _LcsACLRateLimiterTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 2)
)
if mibBuilder.loadTexts:
    lcsACLRateLimiterTable.setStatus("current")
_LcsACLRateLimiterEntry_Object = MibTableRow
lcsACLRateLimiterEntry = _LcsACLRateLimiterEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 2, 1)
)
lcsACLRateLimiterEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsACLRateLimiterID"),
)
if mibBuilder.loadTexts:
    lcsACLRateLimiterEntry.setStatus("current")


class _LcsACLRateLimiterID_Type(Integer32):
    """Custom type lcsACLRateLimiterID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsACLRateLimiterID_Type.__name__ = "Integer32"
_LcsACLRateLimiterID_Object = MibTableColumn
lcsACLRateLimiterID = _LcsACLRateLimiterID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 2, 1, 1),
    _LcsACLRateLimiterID_Type()
)
lcsACLRateLimiterID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsACLRateLimiterID.setStatus("current")


class _LcsACLRateLimiterRate_Type(Integer32):
    """Custom type lcsACLRateLimiterRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500000),
    )


_LcsACLRateLimiterRate_Type.__name__ = "Integer32"
_LcsACLRateLimiterRate_Object = MibTableColumn
lcsACLRateLimiterRate = _LcsACLRateLimiterRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 2, 1, 2),
    _LcsACLRateLimiterRate_Type()
)
lcsACLRateLimiterRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLRateLimiterRate.setStatus("current")


class _LcsACLRateLimiterUnit_Type(Integer32):
    """Custom type lcsACLRateLimiterUnit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsACLRateLimiterUnit_Type.__name__ = "Integer32"
_LcsACLRateLimiterUnit_Object = MibTableColumn
lcsACLRateLimiterUnit = _LcsACLRateLimiterUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 2, 1, 3),
    _LcsACLRateLimiterUnit_Type()
)
lcsACLRateLimiterUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLRateLimiterUnit.setStatus("current")
_LcsACLStatusTable_Object = MibTable
lcsACLStatusTable = _LcsACLStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4)
)
if mibBuilder.loadTexts:
    lcsACLStatusTable.setStatus("current")
_LcsACLStatusEntry_Object = MibTableRow
lcsACLStatusEntry = _LcsACLStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1)
)
lcsACLStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsACLStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsACLStatusEntry.setStatus("current")


class _LcsACLStatusIndex_Type(Integer32):
    """Custom type lcsACLStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsACLStatusIndex_Type.__name__ = "Integer32"
_LcsACLStatusIndex_Object = MibTableColumn
lcsACLStatusIndex = _LcsACLStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 1),
    _LcsACLStatusIndex_Type()
)
lcsACLStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsACLStatusIndex.setStatus("current")
_LcsACLStatusUser_Type = DisplayString
_LcsACLStatusUser_Object = MibTableColumn
lcsACLStatusUser = _LcsACLStatusUser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 2),
    _LcsACLStatusUser_Type()
)
lcsACLStatusUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusUser.setStatus("current")


class _LcsACLStatusID_Type(Integer32):
    """Custom type lcsACLStatusID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsACLStatusID_Type.__name__ = "Integer32"
_LcsACLStatusID_Object = MibTableColumn
lcsACLStatusID = _LcsACLStatusID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 3),
    _LcsACLStatusID_Type()
)
lcsACLStatusID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusID.setStatus("current")
_LcsACLStatusIngressPort_Type = DisplayString
_LcsACLStatusIngressPort_Object = MibTableColumn
lcsACLStatusIngressPort = _LcsACLStatusIngressPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 4),
    _LcsACLStatusIngressPort_Type()
)
lcsACLStatusIngressPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusIngressPort.setStatus("current")
_LcsACLStatusFrameType_Type = DisplayString
_LcsACLStatusFrameType_Object = MibTableColumn
lcsACLStatusFrameType = _LcsACLStatusFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 5),
    _LcsACLStatusFrameType_Type()
)
lcsACLStatusFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusFrameType.setStatus("current")
_LcsACLStatusAction_Type = DisplayString
_LcsACLStatusAction_Object = MibTableColumn
lcsACLStatusAction = _LcsACLStatusAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 6),
    _LcsACLStatusAction_Type()
)
lcsACLStatusAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusAction.setStatus("current")
_LcsACLStatusRateLimiter_Type = DisplayString
_LcsACLStatusRateLimiter_Object = MibTableColumn
lcsACLStatusRateLimiter = _LcsACLStatusRateLimiter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 7),
    _LcsACLStatusRateLimiter_Type()
)
lcsACLStatusRateLimiter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusRateLimiter.setStatus("current")
_LcsACLStatusPortRedirect_Type = DisplayString
_LcsACLStatusPortRedirect_Object = MibTableColumn
lcsACLStatusPortRedirect = _LcsACLStatusPortRedirect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 8),
    _LcsACLStatusPortRedirect_Type()
)
lcsACLStatusPortRedirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusPortRedirect.setStatus("current")
_LcsACLStatusMirror_Type = DisplayString
_LcsACLStatusMirror_Object = MibTableColumn
lcsACLStatusMirror = _LcsACLStatusMirror_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 9),
    _LcsACLStatusMirror_Type()
)
lcsACLStatusMirror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusMirror.setStatus("current")
_LcsACLStatusCPU_Type = DisplayString
_LcsACLStatusCPU_Object = MibTableColumn
lcsACLStatusCPU = _LcsACLStatusCPU_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 10),
    _LcsACLStatusCPU_Type()
)
lcsACLStatusCPU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusCPU.setStatus("current")
_LcsACLStatusCPUOnce_Type = DisplayString
_LcsACLStatusCPUOnce_Object = MibTableColumn
lcsACLStatusCPUOnce = _LcsACLStatusCPUOnce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 11),
    _LcsACLStatusCPUOnce_Type()
)
lcsACLStatusCPUOnce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusCPUOnce.setStatus("current")
_LcsACLStatusCounter_Type = Counter32
_LcsACLStatusCounter_Object = MibTableColumn
lcsACLStatusCounter = _LcsACLStatusCounter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 12),
    _LcsACLStatusCounter_Type()
)
lcsACLStatusCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusCounter.setStatus("current")
_LcsACLStatusConflict_Type = DisplayString
_LcsACLStatusConflict_Object = MibTableColumn
lcsACLStatusConflict = _LcsACLStatusConflict_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 4, 1, 13),
    _LcsACLStatusConflict_Type()
)
lcsACLStatusConflict.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLStatusConflict.setStatus("current")
_LcsAclConformance_ObjectIdentity = ObjectIdentity
lcsAclConformance = _LcsAclConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200)
)
_LcsAclCompliances_ObjectIdentity = ObjectIdentity
lcsAclCompliances = _LcsAclCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 1)
)
_LcsAclGroups_ObjectIdentity = ObjectIdentity
lcsAclGroups = _LcsAclGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 2)
)
_LcsACLACE_ObjectIdentity = ObjectIdentity
lcsACLACE = _LcsACLACE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3)
)
_LcsACLACEClear_Type = ActivateCmd
_LcsACLACEClear_Object = MibScalar
lcsACLACEClear = _LcsACLACEClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 1),
    _LcsACLACEClear_Type()
)
lcsACLACEClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsACLACEClear.setStatus("current")
_LcsACLACETable_Object = MibTable
lcsACLACETable = _LcsACLACETable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2)
)
if mibBuilder.loadTexts:
    lcsACLACETable.setStatus("current")
_LcsACLACEEntry_Object = MibTableRow
lcsACLACEEntry = _LcsACLACEEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1)
)
lcsACLACEEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsACLACEIndex"),
)
if mibBuilder.loadTexts:
    lcsACLACEEntry.setStatus("current")


class _LcsACLACEIndex_Type(Integer32):
    """Custom type lcsACLACEIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsACLACEIndex_Type.__name__ = "Integer32"
_LcsACLACEIndex_Object = MibTableColumn
lcsACLACEIndex = _LcsACLACEIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 1),
    _LcsACLACEIndex_Type()
)
lcsACLACEIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsACLACEIndex.setStatus("current")


class _LcsACLACEID_Type(Integer32):
    """Custom type lcsACLACEID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsACLACEID_Type.__name__ = "Integer32"
_LcsACLACEID_Object = MibTableColumn
lcsACLACEID = _LcsACLACEID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 2),
    _LcsACLACEID_Type()
)
lcsACLACEID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEID.setStatus("current")


class _LcsACLACENextID_Type(Integer32):
    """Custom type lcsACLACENextID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_LcsACLACENextID_Type.__name__ = "Integer32"
_LcsACLACENextID_Object = MibTableColumn
lcsACLACENextID = _LcsACLACENextID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 3),
    _LcsACLACENextID_Type()
)
lcsACLACENextID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACENextID.setStatus("current")
_LcsACLACEIngressPort_Type = DisplayString
_LcsACLACEIngressPort_Object = MibTableColumn
lcsACLACEIngressPort = _LcsACLACEIngressPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 5),
    _LcsACLACEIngressPort_Type()
)
lcsACLACEIngressPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIngressPort.setStatus("current")


class _LcsACLACEPortPolicyNumber_Type(Integer32):
    """Custom type lcsACLACEPortPolicyNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_LcsACLACEPortPolicyNumber_Type.__name__ = "Integer32"
_LcsACLACEPortPolicyNumber_Object = MibTableColumn
lcsACLACEPortPolicyNumber = _LcsACLACEPortPolicyNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 6),
    _LcsACLACEPortPolicyNumber_Type()
)
lcsACLACEPortPolicyNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEPortPolicyNumber.setStatus("current")


class _LcsACLACEPortPolicyBitmask_Type(Integer32):
    """Custom type lcsACLACEPortPolicyBitmask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_LcsACLACEPortPolicyBitmask_Type.__name__ = "Integer32"
_LcsACLACEPortPolicyBitmask_Object = MibTableColumn
lcsACLACEPortPolicyBitmask = _LcsACLACEPortPolicyBitmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 7),
    _LcsACLACEPortPolicyBitmask_Type()
)
lcsACLACEPortPolicyBitmask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEPortPolicyBitmask.setStatus("current")


class _LcsACLACEFrameType_Type(Integer32):
    """Custom type lcsACLACEFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("etype", 1),
          ("arp", 2),
          ("ipv4", 3),
          ("ipv6", 4))
    )


_LcsACLACEFrameType_Type.__name__ = "Integer32"
_LcsACLACEFrameType_Object = MibTableColumn
lcsACLACEFrameType = _LcsACLACEFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 8),
    _LcsACLACEFrameType_Type()
)
lcsACLACEFrameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEFrameType.setStatus("current")


class _LcsACLACEAction_Type(Integer32):
    """Custom type lcsACLACEAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1),
          ("filter", 2))
    )


_LcsACLACEAction_Type.__name__ = "Integer32"
_LcsACLACEAction_Object = MibTableColumn
lcsACLACEAction = _LcsACLACEAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 9),
    _LcsACLACEAction_Type()
)
lcsACLACEAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEAction.setStatus("current")
_LcsACLACEFilterPort_Type = DisplayString
_LcsACLACEFilterPort_Object = MibTableColumn
lcsACLACEFilterPort = _LcsACLACEFilterPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 10),
    _LcsACLACEFilterPort_Type()
)
lcsACLACEFilterPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEFilterPort.setStatus("current")
_LcsACLACEDenyPortRedirect_Type = DisplayString
_LcsACLACEDenyPortRedirect_Object = MibTableColumn
lcsACLACEDenyPortRedirect = _LcsACLACEDenyPortRedirect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 11),
    _LcsACLACEDenyPortRedirect_Type()
)
lcsACLACEDenyPortRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDenyPortRedirect.setStatus("current")


class _LcsACLACERateLimiter_Type(Integer32):
    """Custom type lcsACLACERateLimiter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_LcsACLACERateLimiter_Type.__name__ = "Integer32"
_LcsACLACERateLimiter_Object = MibTableColumn
lcsACLACERateLimiter = _LcsACLACERateLimiter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 12),
    _LcsACLACERateLimiter_Type()
)
lcsACLACERateLimiter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACERateLimiter.setStatus("current")
_LcsACLACEMirror_Type = AdminMode
_LcsACLACEMirror_Object = MibTableColumn
lcsACLACEMirror = _LcsACLACEMirror_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 13),
    _LcsACLACEMirror_Type()
)
lcsACLACEMirror.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEMirror.setStatus("current")
_LcsACLACELogging_Type = AdminMode
_LcsACLACELogging_Object = MibTableColumn
lcsACLACELogging = _LcsACLACELogging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 14),
    _LcsACLACELogging_Type()
)
lcsACLACELogging.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACELogging.setStatus("current")
_LcsACLACEShutdown_Type = AdminMode
_LcsACLACEShutdown_Object = MibTableColumn
lcsACLACEShutdown = _LcsACLACEShutdown_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 15),
    _LcsACLACEShutdown_Type()
)
lcsACLACEShutdown.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEShutdown.setStatus("current")
_LcsACLACECounter_Type = Counter32
_LcsACLACECounter_Object = MibTableColumn
lcsACLACECounter = _LcsACLACECounter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 16),
    _LcsACLACECounter_Type()
)
lcsACLACECounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsACLACECounter.setStatus("current")


class _LcsACLACEVLAN8021QTagged_Type(Integer32):
    """Custom type lcsACLACEVLAN8021QTagged based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("any", 2))
    )


_LcsACLACEVLAN8021QTagged_Type.__name__ = "Integer32"
_LcsACLACEVLAN8021QTagged_Object = MibTableColumn
lcsACLACEVLAN8021QTagged = _LcsACLACEVLAN8021QTagged_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 17),
    _LcsACLACEVLAN8021QTagged_Type()
)
lcsACLACEVLAN8021QTagged.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEVLAN8021QTagged.setStatus("current")


class _LcsACLACEVLANVID_Type(Integer32):
    """Custom type lcsACLACEVLANVID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_LcsACLACEVLANVID_Type.__name__ = "Integer32"
_LcsACLACEVLANVID_Object = MibTableColumn
lcsACLACEVLANVID = _LcsACLACEVLANVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 18),
    _LcsACLACEVLANVID_Type()
)
lcsACLACEVLANVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEVLANVID.setStatus("current")


class _LcsACLACEVLANTagPriority_Type(Integer32):
    """Custom type lcsACLACEVLANTagPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 14),
    )


_LcsACLACEVLANTagPriority_Type.__name__ = "Integer32"
_LcsACLACEVLANTagPriority_Object = MibTableColumn
lcsACLACEVLANTagPriority = _LcsACLACEVLANTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 19),
    _LcsACLACEVLANTagPriority_Type()
)
lcsACLACEVLANTagPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEVLANTagPriority.setStatus("current")
_LcsACLACESMAC_Type = DisplayString
_LcsACLACESMAC_Object = MibTableColumn
lcsACLACESMAC = _LcsACLACESMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 20),
    _LcsACLACESMAC_Type()
)
lcsACLACESMAC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESMAC.setStatus("current")


class _LcsACLACEDMACType_Type(Integer32):
    """Custom type lcsACLACEDMACType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("mc", 1),
          ("bc", 2),
          ("uc", 3),
          ("macAddress", 4),
          ("noData", 5))
    )


_LcsACLACEDMACType_Type.__name__ = "Integer32"
_LcsACLACEDMACType_Object = MibTableColumn
lcsACLACEDMACType = _LcsACLACEDMACType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 21),
    _LcsACLACEDMACType_Type()
)
lcsACLACEDMACType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDMACType.setStatus("current")
_LcsACLACEDMAC_Type = DisplayString
_LcsACLACEDMAC_Object = MibTableColumn
lcsACLACEDMAC = _LcsACLACEDMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 22),
    _LcsACLACEDMAC_Type()
)
lcsACLACEDMAC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDMAC.setStatus("current")


class _LcsACLACEEtherType_Type(Integer32):
    """Custom type lcsACLACEEtherType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_LcsACLACEEtherType_Type.__name__ = "Integer32"
_LcsACLACEEtherType_Object = MibTableColumn
lcsACLACEEtherType = _LcsACLACEEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 23),
    _LcsACLACEEtherType_Type()
)
lcsACLACEEtherType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEEtherType.setStatus("current")


class _LcsACLACEArpOpCode_Type(Integer32):
    """Custom type lcsACLACEArpOpCode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("arp", 1),
          ("rarp", 2),
          ("other", 3),
          ("noData", 4))
    )


_LcsACLACEArpOpCode_Type.__name__ = "Integer32"
_LcsACLACEArpOpCode_Object = MibTableColumn
lcsACLACEArpOpCode = _LcsACLACEArpOpCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 24),
    _LcsACLACEArpOpCode_Type()
)
lcsACLACEArpOpCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpOpCode.setStatus("current")


class _LcsACLACEArpFlagsRequestReply_Type(Integer32):
    """Custom type lcsACLACEArpFlagsRequestReply based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("reply", 0),
          ("request", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsRequestReply_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsRequestReply_Object = MibTableColumn
lcsACLACEArpFlagsRequestReply = _LcsACLACEArpFlagsRequestReply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 25),
    _LcsACLACEArpFlagsRequestReply_Type()
)
lcsACLACEArpFlagsRequestReply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsRequestReply.setStatus("current")


class _LcsACLACEArpFlagsArpSMac_Type(Integer32):
    """Custom type lcsACLACEArpFlagsArpSMac based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notEqualSMAC", 0),
          ("equalSMAC", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsArpSMac_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsArpSMac_Object = MibTableColumn
lcsACLACEArpFlagsArpSMac = _LcsACLACEArpFlagsArpSMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 26),
    _LcsACLACEArpFlagsArpSMac_Type()
)
lcsACLACEArpFlagsArpSMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsArpSMac.setStatus("current")


class _LcsACLACEArpFlagsRarpDmac_Type(Integer32):
    """Custom type lcsACLACEArpFlagsRarpDmac based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notEqualDMAC", 0),
          ("equalDMAC", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsRarpDmac_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsRarpDmac_Object = MibTableColumn
lcsACLACEArpFlagsRarpDmac = _LcsACLACEArpFlagsRarpDmac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 27),
    _LcsACLACEArpFlagsRarpDmac_Type()
)
lcsACLACEArpFlagsRarpDmac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsRarpDmac.setStatus("current")


class _LcsACLACEArpFlagsLength_Type(Integer32):
    """Custom type lcsACLACEArpFlagsLength based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notEqualEthIpV4", 0),
          ("equalEthIpV4", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsLength_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsLength_Object = MibTableColumn
lcsACLACEArpFlagsLength = _LcsACLACEArpFlagsLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 28),
    _LcsACLACEArpFlagsLength_Type()
)
lcsACLACEArpFlagsLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsLength.setStatus("current")


class _LcsACLACEArpFlagsIp_Type(Integer32):
    """Custom type lcsACLACEArpFlagsIp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notEqualEth", 0),
          ("equalEth", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsIp_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsIp_Object = MibTableColumn
lcsACLACEArpFlagsIp = _LcsACLACEArpFlagsIp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 29),
    _LcsACLACEArpFlagsIp_Type()
)
lcsACLACEArpFlagsIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsIp.setStatus("current")


class _LcsACLACEArpFlagsEthernet_Type(Integer32):
    """Custom type lcsACLACEArpFlagsEthernet based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notEqualIp", 0),
          ("equalIp", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEArpFlagsEthernet_Type.__name__ = "Integer32"
_LcsACLACEArpFlagsEthernet_Object = MibTableColumn
lcsACLACEArpFlagsEthernet = _LcsACLACEArpFlagsEthernet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 30),
    _LcsACLACEArpFlagsEthernet_Type()
)
lcsACLACEArpFlagsEthernet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEArpFlagsEthernet.setStatus("current")


class _LcsACLACESIPType_Type(Integer32):
    """Custom type lcsACLACESIPType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("ip", 1),
          ("network", 2),
          ("noData", 3))
    )


_LcsACLACESIPType_Type.__name__ = "Integer32"
_LcsACLACESIPType_Object = MibTableColumn
lcsACLACESIPType = _LcsACLACESIPType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 31),
    _LcsACLACESIPType_Type()
)
lcsACLACESIPType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESIPType.setStatus("current")
_LcsACLACESIPIPAddress_Type = IpAddress
_LcsACLACESIPIPAddress_Object = MibTableColumn
lcsACLACESIPIPAddress = _LcsACLACESIPIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 32),
    _LcsACLACESIPIPAddress_Type()
)
lcsACLACESIPIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESIPIPAddress.setStatus("current")
_LcsACLACESIPIPMask_Type = IpAddress
_LcsACLACESIPIPMask_Object = MibTableColumn
lcsACLACESIPIPMask = _LcsACLACESIPIPMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 33),
    _LcsACLACESIPIPMask_Type()
)
lcsACLACESIPIPMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESIPIPMask.setStatus("current")


class _LcsACLACEDIPType_Type(Integer32):
    """Custom type lcsACLACEDIPType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("ip", 1),
          ("network", 2),
          ("noData", 3))
    )


_LcsACLACEDIPType_Type.__name__ = "Integer32"
_LcsACLACEDIPType_Object = MibTableColumn
lcsACLACEDIPType = _LcsACLACEDIPType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 34),
    _LcsACLACEDIPType_Type()
)
lcsACLACEDIPType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDIPType.setStatus("current")
_LcsACLACEDIPIPAddress_Type = IpAddress
_LcsACLACEDIPIPAddress_Object = MibTableColumn
lcsACLACEDIPIPAddress = _LcsACLACEDIPIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 35),
    _LcsACLACEDIPIPAddress_Type()
)
lcsACLACEDIPIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDIPIPAddress.setStatus("current")
_LcsACLACEDIPIPMask_Type = IpAddress
_LcsACLACEDIPIPMask_Object = MibTableColumn
lcsACLACEDIPIPMask = _LcsACLACEDIPIPMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 36),
    _LcsACLACEDIPIPMask_Type()
)
lcsACLACEDIPIPMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDIPIPMask.setStatus("current")


class _LcsACLACEIPProtocol_Type(Integer32):
    """Custom type lcsACLACEIPProtocol based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("icmp", 1),
          ("udp", 2),
          ("tcp", 3),
          ("other", 4),
          ("noData", 5))
    )


_LcsACLACEIPProtocol_Type.__name__ = "Integer32"
_LcsACLACEIPProtocol_Object = MibTableColumn
lcsACLACEIPProtocol = _LcsACLACEIPProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 37),
    _LcsACLACEIPProtocol_Type()
)
lcsACLACEIPProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPProtocol.setStatus("current")


class _LcsACLACEIPProtocolValue_Type(Integer32):
    """Custom type lcsACLACEIPProtocolValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_LcsACLACEIPProtocolValue_Type.__name__ = "Integer32"
_LcsACLACEIPProtocolValue_Object = MibTableColumn
lcsACLACEIPProtocolValue = _LcsACLACEIPProtocolValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 38),
    _LcsACLACEIPProtocolValue_Type()
)
lcsACLACEIPProtocolValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPProtocolValue.setStatus("current")


class _LcsACLACEIPFlagsTTL_Type(Integer32):
    """Custom type lcsACLACEIPFlagsTTL based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nonZero", 0),
          ("zero", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEIPFlagsTTL_Type.__name__ = "Integer32"
_LcsACLACEIPFlagsTTL_Object = MibTableColumn
lcsACLACEIPFlagsTTL = _LcsACLACEIPFlagsTTL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 39),
    _LcsACLACEIPFlagsTTL_Type()
)
lcsACLACEIPFlagsTTL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPFlagsTTL.setStatus("current")


class _LcsACLACEIPFlagsFragment_Type(Integer32):
    """Custom type lcsACLACEIPFlagsFragment based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("yes", 0),
          ("no", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEIPFlagsFragment_Type.__name__ = "Integer32"
_LcsACLACEIPFlagsFragment_Object = MibTableColumn
lcsACLACEIPFlagsFragment = _LcsACLACEIPFlagsFragment_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 40),
    _LcsACLACEIPFlagsFragment_Type()
)
lcsACLACEIPFlagsFragment.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPFlagsFragment.setStatus("current")


class _LcsACLACEIPFlagsOptions_Type(Integer32):
    """Custom type lcsACLACEIPFlagsOptions based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("yes", 0),
          ("no", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEIPFlagsOptions_Type.__name__ = "Integer32"
_LcsACLACEIPFlagsOptions_Object = MibTableColumn
lcsACLACEIPFlagsOptions = _LcsACLACEIPFlagsOptions_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 41),
    _LcsACLACEIPFlagsOptions_Type()
)
lcsACLACEIPFlagsOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPFlagsOptions.setStatus("current")


class _LcsACLACEICMPType_Type(Integer32):
    """Custom type lcsACLACEICMPType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 257),
    )


_LcsACLACEICMPType_Type.__name__ = "Integer32"
_LcsACLACEICMPType_Object = MibTableColumn
lcsACLACEICMPType = _LcsACLACEICMPType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 42),
    _LcsACLACEICMPType_Type()
)
lcsACLACEICMPType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEICMPType.setStatus("current")


class _LcsACLACEICMPCode_Type(Integer32):
    """Custom type lcsACLACEICMPCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 257),
    )


_LcsACLACEICMPCode_Type.__name__ = "Integer32"
_LcsACLACEICMPCode_Object = MibTableColumn
lcsACLACEICMPCode = _LcsACLACEICMPCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 43),
    _LcsACLACEICMPCode_Type()
)
lcsACLACEICMPCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEICMPCode.setStatus("current")
_LcsACLACESourcePort_Type = DisplayString
_LcsACLACESourcePort_Object = MibTableColumn
lcsACLACESourcePort = _LcsACLACESourcePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 44),
    _LcsACLACESourcePort_Type()
)
lcsACLACESourcePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESourcePort.setStatus("current")
_LcsACLACEDestPort_Type = DisplayString
_LcsACLACEDestPort_Object = MibTableColumn
lcsACLACEDestPort = _LcsACLACEDestPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 45),
    _LcsACLACEDestPort_Type()
)
lcsACLACEDestPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDestPort.setStatus("current")


class _LcsACLACETCPFlagsFin_Type(Integer32):
    """Custom type lcsACLACETCPFlagsFin based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsFin_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsFin_Object = MibTableColumn
lcsACLACETCPFlagsFin = _LcsACLACETCPFlagsFin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 46),
    _LcsACLACETCPFlagsFin_Type()
)
lcsACLACETCPFlagsFin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsFin.setStatus("current")


class _LcsACLACETCPFlagsSyn_Type(Integer32):
    """Custom type lcsACLACETCPFlagsSyn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsSyn_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsSyn_Object = MibTableColumn
lcsACLACETCPFlagsSyn = _LcsACLACETCPFlagsSyn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 47),
    _LcsACLACETCPFlagsSyn_Type()
)
lcsACLACETCPFlagsSyn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsSyn.setStatus("current")


class _LcsACLACETCPFlagsRst_Type(Integer32):
    """Custom type lcsACLACETCPFlagsRst based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsRst_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsRst_Object = MibTableColumn
lcsACLACETCPFlagsRst = _LcsACLACETCPFlagsRst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 48),
    _LcsACLACETCPFlagsRst_Type()
)
lcsACLACETCPFlagsRst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsRst.setStatus("current")


class _LcsACLACETCPFlagsPsh_Type(Integer32):
    """Custom type lcsACLACETCPFlagsPsh based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsPsh_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsPsh_Object = MibTableColumn
lcsACLACETCPFlagsPsh = _LcsACLACETCPFlagsPsh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 49),
    _LcsACLACETCPFlagsPsh_Type()
)
lcsACLACETCPFlagsPsh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsPsh.setStatus("current")


class _LcsACLACETCPFlagsAck_Type(Integer32):
    """Custom type lcsACLACETCPFlagsAck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsAck_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsAck_Object = MibTableColumn
lcsACLACETCPFlagsAck = _LcsACLACETCPFlagsAck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 50),
    _LcsACLACETCPFlagsAck_Type()
)
lcsACLACETCPFlagsAck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsAck.setStatus("current")


class _LcsACLACETCPFlagsUrg_Type(Integer32):
    """Custom type lcsACLACETCPFlagsUrg based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACETCPFlagsUrg_Type.__name__ = "Integer32"
_LcsACLACETCPFlagsUrg_Object = MibTableColumn
lcsACLACETCPFlagsUrg = _LcsACLACETCPFlagsUrg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 51),
    _LcsACLACETCPFlagsUrg_Type()
)
lcsACLACETCPFlagsUrg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACETCPFlagsUrg.setStatus("current")
_LcsACLACEIPv6SIPAddress_Type = DisplayString
_LcsACLACEIPv6SIPAddress_Object = MibTableColumn
lcsACLACEIPv6SIPAddress = _LcsACLACEIPv6SIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 52),
    _LcsACLACEIPv6SIPAddress_Type()
)
lcsACLACEIPv6SIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPv6SIPAddress.setStatus("current")
_LcsACLACEIPv6SIPBitmask_Type = DisplayString
_LcsACLACEIPv6SIPBitmask_Object = MibTableColumn
lcsACLACEIPv6SIPBitmask = _LcsACLACEIPv6SIPBitmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 53),
    _LcsACLACEIPv6SIPBitmask_Type()
)
lcsACLACEIPv6SIPBitmask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPv6SIPBitmask.setStatus("current")


class _LcsACLACEIPv6HopLimit_Type(Integer32):
    """Custom type lcsACLACEIPv6HopLimit based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unset", 0),
          ("set", 1),
          ("any", 2),
          ("noData", 3))
    )


_LcsACLACEIPv6HopLimit_Type.__name__ = "Integer32"
_LcsACLACEIPv6HopLimit_Object = MibTableColumn
lcsACLACEIPv6HopLimit = _LcsACLACEIPv6HopLimit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 54),
    _LcsACLACEIPv6HopLimit_Type()
)
lcsACLACEIPv6HopLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEIPv6HopLimit.setStatus("current")
_LcsACLACESMACMask_Type = DisplayString
_LcsACLACESMACMask_Object = MibTableColumn
lcsACLACESMACMask = _LcsACLACESMACMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 56),
    _LcsACLACESMACMask_Type()
)
lcsACLACESMACMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACESMACMask.setStatus("current")
_LcsACLACEDMACMask_Type = DisplayString
_LcsACLACEDMACMask_Object = MibTableColumn
lcsACLACEDMACMask = _LcsACLACEDMACMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 57),
    _LcsACLACEDMACMask_Type()
)
lcsACLACEDMACMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACEDMACMask.setStatus("current")
_LcsACLACERowStatus_Type = RowStatus
_LcsACLACERowStatus_Object = MibTableColumn
lcsACLACERowStatus = _LcsACLACERowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 3, 2, 1, 58),
    _LcsACLACERowStatus_Type()
)
lcsACLACERowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsACLACERowStatus.setStatus("current")
_LcsQosConf_ObjectIdentity = ObjectIdentity
lcsQosConf = _LcsQosConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10)
)
_LcsQos_ObjectIdentity = ObjectIdentity
lcsQos = _LcsQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1)
)
_LcsQosPortClassification_ObjectIdentity = ObjectIdentity
lcsQosPortClassification = _LcsQosPortClassification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1)
)
_LcsQosPortClassificationTable_Object = MibTable
lcsQosPortClassificationTable = _LcsQosPortClassificationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortClassificationTable.setStatus("current")
_LcsQosPortClassificationEntry_Object = MibTableRow
lcsQosPortClassificationEntry = _LcsQosPortClassificationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1)
)
lcsQosPortClassificationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortClassificationEntry.setStatus("current")


class _LcsQosPortClassificationQoSClass_Type(Integer32):
    """Custom type lcsQosPortClassificationQoSClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQosPortClassificationQoSClass_Type.__name__ = "Integer32"
_LcsQosPortClassificationQoSClass_Object = MibTableColumn
lcsQosPortClassificationQoSClass = _LcsQosPortClassificationQoSClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 2),
    _LcsQosPortClassificationQoSClass_Type()
)
lcsQosPortClassificationQoSClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationQoSClass.setStatus("current")


class _LcsQosPortClassificationDPlevel_Type(Integer32):
    """Custom type lcsQosPortClassificationDPlevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_LcsQosPortClassificationDPlevel_Type.__name__ = "Integer32"
_LcsQosPortClassificationDPlevel_Object = MibTableColumn
lcsQosPortClassificationDPlevel = _LcsQosPortClassificationDPlevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 3),
    _LcsQosPortClassificationDPlevel_Type()
)
lcsQosPortClassificationDPlevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationDPlevel.setStatus("current")


class _LcsQosPortClassificationPCP_Type(Integer32):
    """Custom type lcsQosPortClassificationPCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQosPortClassificationPCP_Type.__name__ = "Integer32"
_LcsQosPortClassificationPCP_Object = MibTableColumn
lcsQosPortClassificationPCP = _LcsQosPortClassificationPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 4),
    _LcsQosPortClassificationPCP_Type()
)
lcsQosPortClassificationPCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationPCP.setStatus("current")


class _LcsQosPortClassificationDEI_Type(Integer32):
    """Custom type lcsQosPortClassificationDEI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortClassificationDEI_Type.__name__ = "Integer32"
_LcsQosPortClassificationDEI_Object = MibTableColumn
lcsQosPortClassificationDEI = _LcsQosPortClassificationDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 5),
    _LcsQosPortClassificationDEI_Type()
)
lcsQosPortClassificationDEI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationDEI.setStatus("current")


class _LcsQosPortClassificationPCPClassification_Type(AdminMode):
    """Custom type lcsQosPortClassificationPCPClassification based on AdminMode"""
    defaultValue = 0


_LcsQosPortClassificationPCPClassification_Type.__name__ = "AdminMode"
_LcsQosPortClassificationPCPClassification_Object = MibTableColumn
lcsQosPortClassificationPCPClassification = _LcsQosPortClassificationPCPClassification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 6),
    _LcsQosPortClassificationPCPClassification_Type()
)
lcsQosPortClassificationPCPClassification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationPCPClassification.setStatus("current")


class _LcsQosPortClassificationDSCPBased_Type(AdminMode):
    """Custom type lcsQosPortClassificationDSCPBased based on AdminMode"""
    defaultValue = 0


_LcsQosPortClassificationDSCPBased_Type.__name__ = "AdminMode"
_LcsQosPortClassificationDSCPBased_Object = MibTableColumn
lcsQosPortClassificationDSCPBased = _LcsQosPortClassificationDSCPBased_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 7),
    _LcsQosPortClassificationDSCPBased_Type()
)
lcsQosPortClassificationDSCPBased.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationDSCPBased.setStatus("current")
_LcsQosPortClassificationWredGroup_Type = Integer32
_LcsQosPortClassificationWredGroup_Object = MibTableColumn
lcsQosPortClassificationWredGroup = _LcsQosPortClassificationWredGroup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 1, 1, 10),
    _LcsQosPortClassificationWredGroup_Type()
)
lcsQosPortClassificationWredGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortClassificationWredGroup.setStatus("current")
_LcsQoSIngressPortTagClassificationTable_Object = MibTable
lcsQoSIngressPortTagClassificationTable = _LcsQoSIngressPortTagClassificationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2)
)
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagClassificationTable.setStatus("current")
_LcsQoSIngressPortTagClassificationEntry_Object = MibTableRow
lcsQoSIngressPortTagClassificationEntry = _LcsQoSIngressPortTagClassificationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2, 1)
)
lcsQoSIngressPortTagClassificationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "LCOS-SX-MIB", "lcsQoSIngressPortTagPCP"),
    (0, "LCOS-SX-MIB", "lcsQoSIngressPortTagDEI"),
)
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagClassificationEntry.setStatus("current")


class _LcsQoSIngressPortTagPCP_Type(Integer32):
    """Custom type lcsQoSIngressPortTagPCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("pcp0", 1),
          ("pcp1", 2),
          ("pcp2", 3),
          ("pcp3", 4),
          ("pcp4", 5),
          ("pcp5", 6),
          ("pcp6", 7),
          ("pcp7", 8))
    )


_LcsQoSIngressPortTagPCP_Type.__name__ = "Integer32"
_LcsQoSIngressPortTagPCP_Object = MibTableColumn
lcsQoSIngressPortTagPCP = _LcsQoSIngressPortTagPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2, 1, 2),
    _LcsQoSIngressPortTagPCP_Type()
)
lcsQoSIngressPortTagPCP.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagPCP.setStatus("current")


class _LcsQoSIngressPortTagDEI_Type(Integer32):
    """Custom type lcsQoSIngressPortTagDEI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dei0", 1),
          ("dei1", 2))
    )


_LcsQoSIngressPortTagDEI_Type.__name__ = "Integer32"
_LcsQoSIngressPortTagDEI_Object = MibTableColumn
lcsQoSIngressPortTagDEI = _LcsQoSIngressPortTagDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2, 1, 3),
    _LcsQoSIngressPortTagDEI_Type()
)
lcsQoSIngressPortTagDEI.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagDEI.setStatus("current")


class _LcsQoSIngressPortTagQosClass_Type(Integer32):
    """Custom type lcsQoSIngressPortTagQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQoSIngressPortTagQosClass_Type.__name__ = "Integer32"
_LcsQoSIngressPortTagQosClass_Object = MibTableColumn
lcsQoSIngressPortTagQosClass = _LcsQoSIngressPortTagQosClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2, 1, 4),
    _LcsQoSIngressPortTagQosClass_Type()
)
lcsQoSIngressPortTagQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagQosClass.setStatus("current")


class _LcsQoSIngressPortTagDPLevel_Type(Integer32):
    """Custom type lcsQoSIngressPortTagDPLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_LcsQoSIngressPortTagDPLevel_Type.__name__ = "Integer32"
_LcsQoSIngressPortTagDPLevel_Object = MibTableColumn
lcsQoSIngressPortTagDPLevel = _LcsQoSIngressPortTagDPLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 1, 2, 1, 5),
    _LcsQoSIngressPortTagDPLevel_Type()
)
lcsQoSIngressPortTagDPLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQoSIngressPortTagDPLevel.setStatus("current")
_LcsQosPortPolicing_ObjectIdentity = ObjectIdentity
lcsQosPortPolicing = _LcsQosPortPolicing_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2)
)
_LcsQosPortPolicingTable_Object = MibTable
lcsQosPortPolicingTable = _LcsQosPortPolicingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortPolicingTable.setStatus("current")
_LcsQosPortPolicingEntry_Object = MibTableRow
lcsQosPortPolicingEntry = _LcsQosPortPolicingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1, 1)
)
lcsQosPortPolicingEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortPolicingEntry.setStatus("current")


class _LcsQosPortPolicingEnabled_Type(AdminMode):
    """Custom type lcsQosPortPolicingEnabled based on AdminMode"""
    defaultValue = 0


_LcsQosPortPolicingEnabled_Type.__name__ = "AdminMode"
_LcsQosPortPolicingEnabled_Object = MibTableColumn
lcsQosPortPolicingEnabled = _LcsQosPortPolicingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1, 1, 2),
    _LcsQosPortPolicingEnabled_Type()
)
lcsQosPortPolicingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortPolicingEnabled.setStatus("current")
_LcsQosPortPolicingRate_Type = Integer32
_LcsQosPortPolicingRate_Object = MibTableColumn
lcsQosPortPolicingRate = _LcsQosPortPolicingRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1, 1, 3),
    _LcsQosPortPolicingRate_Type()
)
lcsQosPortPolicingRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortPolicingRate.setStatus("current")
_LcsQosPortPolicingUnit_Type = Integer32
_LcsQosPortPolicingUnit_Object = MibTableColumn
lcsQosPortPolicingUnit = _LcsQosPortPolicingUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1, 1, 4),
    _LcsQosPortPolicingUnit_Type()
)
lcsQosPortPolicingUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortPolicingUnit.setStatus("current")


class _LcsQosPortPolicingFlowControl_Type(AdminMode):
    """Custom type lcsQosPortPolicingFlowControl based on AdminMode"""
    defaultValue = 0


_LcsQosPortPolicingFlowControl_Type.__name__ = "AdminMode"
_LcsQosPortPolicingFlowControl_Object = MibTableColumn
lcsQosPortPolicingFlowControl = _LcsQosPortPolicingFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 2, 1, 1, 5),
    _LcsQosPortPolicingFlowControl_Type()
)
lcsQosPortPolicingFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortPolicingFlowControl.setStatus("current")
_LcsQosEgressPortPCPRemarking_ObjectIdentity = ObjectIdentity
lcsQosEgressPortPCPRemarking = _LcsQosEgressPortPCPRemarking_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6)
)
_LcsQosEgressPortPCPRemarkingTable_Object = MibTable
lcsQosEgressPortPCPRemarkingTable = _LcsQosEgressPortPCPRemarkingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 1)
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingTable.setStatus("current")
_LcsQosEgressPortPCPRemarkingEntry_Object = MibTableRow
lcsQosEgressPortPCPRemarkingEntry = _LcsQosEgressPortPCPRemarkingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 1, 1)
)
lcsQosEgressPortPCPRemarkingEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingEntry.setStatus("current")


class _LcsQosEgressPortPCPRemarkingMode_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("keep", 0),
          ("specific", 1),
          ("mapped", 2))
    )


_LcsQosEgressPortPCPRemarkingMode_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingMode_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingMode = _LcsQosEgressPortPCPRemarkingMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 1, 1, 2),
    _LcsQosEgressPortPCPRemarkingMode_Type()
)
lcsQosEgressPortPCPRemarkingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMode.setStatus("current")
_LcsQosEgressPortPCPRemarkingSpecificTable_Object = MibTable
lcsQosEgressPortPCPRemarkingSpecificTable = _LcsQosEgressPortPCPRemarkingSpecificTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 2)
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingSpecificTable.setStatus("current")
_LcsQosEgressPortPCPRemarkingSpecificEntry_Object = MibTableRow
lcsQosEgressPortPCPRemarkingSpecificEntry = _LcsQosEgressPortPCPRemarkingSpecificEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 2, 1)
)
lcsQosEgressPortPCPRemarkingSpecificEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingSpecificEntry.setStatus("current")


class _LcsQosEgressPortPCPRemarkingSpecificPCP_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingSpecificPCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQosEgressPortPCPRemarkingSpecificPCP_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingSpecificPCP_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingSpecificPCP = _LcsQosEgressPortPCPRemarkingSpecificPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 2, 1, 2),
    _LcsQosEgressPortPCPRemarkingSpecificPCP_Type()
)
lcsQosEgressPortPCPRemarkingSpecificPCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingSpecificPCP.setStatus("current")
_LcsQosEgressPortPCPRemarkingSpecificDEI_Type = AdminMode
_LcsQosEgressPortPCPRemarkingSpecificDEI_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingSpecificDEI = _LcsQosEgressPortPCPRemarkingSpecificDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 2, 1, 3),
    _LcsQosEgressPortPCPRemarkingSpecificDEI_Type()
)
lcsQosEgressPortPCPRemarkingSpecificDEI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingSpecificDEI.setStatus("current")
_LcsQosEgressPortPCPRemarkingMappedTable_Object = MibTable
lcsQosEgressPortPCPRemarkingMappedTable = _LcsQosEgressPortPCPRemarkingMappedTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4)
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedTable.setStatus("current")
_LcsQosEgressPortPCPRemarkingMappedEntry_Object = MibTableRow
lcsQosEgressPortPCPRemarkingMappedEntry = _LcsQosEgressPortPCPRemarkingMappedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4, 1)
)
lcsQosEgressPortPCPRemarkingMappedEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "LCOS-SX-MIB", "lcsQosEgressPortPCPRemarkingMappedQueuePriority"),
    (0, "LCOS-SX-MIB", "lcsQosEgressPortPCPRemarkingMappedDPLevel"),
)
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedEntry.setStatus("current")


class _LcsQosEgressPortPCPRemarkingMappedQueuePriority_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingMappedQueuePriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("class0", 1),
          ("class1", 2),
          ("class2", 3),
          ("class3", 4),
          ("class4", 5),
          ("class5", 6),
          ("class6", 7),
          ("class7", 8))
    )


_LcsQosEgressPortPCPRemarkingMappedQueuePriority_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingMappedQueuePriority_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingMappedQueuePriority = _LcsQosEgressPortPCPRemarkingMappedQueuePriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4, 1, 2),
    _LcsQosEgressPortPCPRemarkingMappedQueuePriority_Type()
)
lcsQosEgressPortPCPRemarkingMappedQueuePriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedQueuePriority.setStatus("current")


class _LcsQosEgressPortPCPRemarkingMappedDPLevel_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingMappedDPLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("level0", 1),
          ("level1", 2))
    )


_LcsQosEgressPortPCPRemarkingMappedDPLevel_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingMappedDPLevel_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingMappedDPLevel = _LcsQosEgressPortPCPRemarkingMappedDPLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4, 1, 3),
    _LcsQosEgressPortPCPRemarkingMappedDPLevel_Type()
)
lcsQosEgressPortPCPRemarkingMappedDPLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedDPLevel.setStatus("current")


class _LcsQosEgressPortPCPRemarkingMappedPCP_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingMappedPCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQosEgressPortPCPRemarkingMappedPCP_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingMappedPCP_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingMappedPCP = _LcsQosEgressPortPCPRemarkingMappedPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4, 1, 4),
    _LcsQosEgressPortPCPRemarkingMappedPCP_Type()
)
lcsQosEgressPortPCPRemarkingMappedPCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedPCP.setStatus("current")


class _LcsQosEgressPortPCPRemarkingMappedDEI_Type(Integer32):
    """Custom type lcsQosEgressPortPCPRemarkingMappedDEI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosEgressPortPCPRemarkingMappedDEI_Type.__name__ = "Integer32"
_LcsQosEgressPortPCPRemarkingMappedDEI_Object = MibTableColumn
lcsQosEgressPortPCPRemarkingMappedDEI = _LcsQosEgressPortPCPRemarkingMappedDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 6, 4, 1, 5),
    _LcsQosEgressPortPCPRemarkingMappedDEI_Type()
)
lcsQosEgressPortPCPRemarkingMappedDEI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosEgressPortPCPRemarkingMappedDEI.setStatus("current")
_LcsQosPortDSCP_ObjectIdentity = ObjectIdentity
lcsQosPortDSCP = _LcsQosPortDSCP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7)
)
_LcsQosPortDSCPTable_Object = MibTable
lcsQosPortDSCPTable = _LcsQosPortDSCPTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortDSCPTable.setStatus("current")
_LcsQosPortDSCPEntry_Object = MibTableRow
lcsQosPortDSCPEntry = _LcsQosPortDSCPEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7, 1, 1)
)
lcsQosPortDSCPEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortDSCPEntry.setStatus("current")


class _LcsQosPortDSCPIngressTranslate_Type(AdminMode):
    """Custom type lcsQosPortDSCPIngressTranslate based on AdminMode"""
    defaultValue = 0


_LcsQosPortDSCPIngressTranslate_Type.__name__ = "AdminMode"
_LcsQosPortDSCPIngressTranslate_Object = MibTableColumn
lcsQosPortDSCPIngressTranslate = _LcsQosPortDSCPIngressTranslate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7, 1, 1, 2),
    _LcsQosPortDSCPIngressTranslate_Type()
)
lcsQosPortDSCPIngressTranslate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortDSCPIngressTranslate.setStatus("current")


class _LcsQosPortDSCPIngressClassify_Type(Integer32):
    """Custom type lcsQosPortDSCPIngressClassify based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("dscp", 1),
          ("selected", 2),
          ("all", 3))
    )


_LcsQosPortDSCPIngressClassify_Type.__name__ = "Integer32"
_LcsQosPortDSCPIngressClassify_Object = MibTableColumn
lcsQosPortDSCPIngressClassify = _LcsQosPortDSCPIngressClassify_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7, 1, 1, 3),
    _LcsQosPortDSCPIngressClassify_Type()
)
lcsQosPortDSCPIngressClassify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortDSCPIngressClassify.setStatus("current")


class _LcsQosPortDSCPEgressRewrite_Type(Integer32):
    """Custom type lcsQosPortDSCPEgressRewrite based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("remap", 2))
    )


_LcsQosPortDSCPEgressRewrite_Type.__name__ = "Integer32"
_LcsQosPortDSCPEgressRewrite_Object = MibTableColumn
lcsQosPortDSCPEgressRewrite = _LcsQosPortDSCPEgressRewrite_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 7, 1, 1, 4),
    _LcsQosPortDSCPEgressRewrite_Type()
)
lcsQosPortDSCPEgressRewrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortDSCPEgressRewrite.setStatus("current")
_LcsQosDSCPBasedQoS_ObjectIdentity = ObjectIdentity
lcsQosDSCPBasedQoS = _LcsQosDSCPBasedQoS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8)
)
_LcsQosDSCPBasedQoSTable_Object = MibTable
lcsQosDSCPBasedQoSTable = _LcsQosDSCPBasedQoSTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1)
)
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSTable.setStatus("current")
_LcsQosDSCPBasedQoSEntry_Object = MibTableRow
lcsQosDSCPBasedQoSEntry = _LcsQosDSCPBasedQoSEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1)
)
lcsQosDSCPBasedQoSEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosDSCPBasedQoSList"),
)
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSEntry.setStatus("current")


class _LcsQosDSCPBasedQoSList_Type(Integer32):
    """Custom type lcsQosDSCPBasedQoSList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_LcsQosDSCPBasedQoSList_Type.__name__ = "Integer32"
_LcsQosDSCPBasedQoSList_Object = MibTableColumn
lcsQosDSCPBasedQoSList = _LcsQosDSCPBasedQoSList_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1, 1),
    _LcsQosDSCPBasedQoSList_Type()
)
lcsQosDSCPBasedQoSList.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSList.setStatus("current")
_LcsQosDSCPBasedQoSDSCP_Type = DisplayString
_LcsQosDSCPBasedQoSDSCP_Object = MibTableColumn
lcsQosDSCPBasedQoSDSCP = _LcsQosDSCPBasedQoSDSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1, 2),
    _LcsQosDSCPBasedQoSDSCP_Type()
)
lcsQosDSCPBasedQoSDSCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSDSCP.setStatus("current")


class _LcsQosDSCPBasedQoSTrust_Type(AdminMode):
    """Custom type lcsQosDSCPBasedQoSTrust based on AdminMode"""
    defaultValue = 0


_LcsQosDSCPBasedQoSTrust_Type.__name__ = "AdminMode"
_LcsQosDSCPBasedQoSTrust_Object = MibTableColumn
lcsQosDSCPBasedQoSTrust = _LcsQosDSCPBasedQoSTrust_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1, 3),
    _LcsQosDSCPBasedQoSTrust_Type()
)
lcsQosDSCPBasedQoSTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSTrust.setStatus("current")


class _LcsQosDSCPBasedQoSQueuePriority_Type(Integer32):
    """Custom type lcsQosDSCPBasedQoSQueuePriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsQosDSCPBasedQoSQueuePriority_Type.__name__ = "Integer32"
_LcsQosDSCPBasedQoSQueuePriority_Object = MibTableColumn
lcsQosDSCPBasedQoSQueuePriority = _LcsQosDSCPBasedQoSQueuePriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1, 4),
    _LcsQosDSCPBasedQoSQueuePriority_Type()
)
lcsQosDSCPBasedQoSQueuePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSQueuePriority.setStatus("current")


class _LcsQosDSCPBasedQoSDPL_Type(Integer32):
    """Custom type lcsQosDSCPBasedQoSDPL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosDSCPBasedQoSDPL_Type.__name__ = "Integer32"
_LcsQosDSCPBasedQoSDPL_Object = MibTableColumn
lcsQosDSCPBasedQoSDPL = _LcsQosDSCPBasedQoSDPL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 8, 1, 1, 5),
    _LcsQosDSCPBasedQoSDPL_Type()
)
lcsQosDSCPBasedQoSDPL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPBasedQoSDPL.setStatus("current")
_LcsQosDSCPTranslation_ObjectIdentity = ObjectIdentity
lcsQosDSCPTranslation = _LcsQosDSCPTranslation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9)
)
_LcsQosDSCPTranslationTable_Object = MibTable
lcsQosDSCPTranslationTable = _LcsQosDSCPTranslationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1)
)
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationTable.setStatus("current")
_LcsQosDSCPTranslationEntry_Object = MibTableRow
lcsQosDSCPTranslationEntry = _LcsQosDSCPTranslationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1)
)
lcsQosDSCPTranslationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosDSCPTranslationList"),
)
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationEntry.setStatus("current")


class _LcsQosDSCPTranslationList_Type(Integer32):
    """Custom type lcsQosDSCPTranslationList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_LcsQosDSCPTranslationList_Type.__name__ = "Integer32"
_LcsQosDSCPTranslationList_Object = MibTableColumn
lcsQosDSCPTranslationList = _LcsQosDSCPTranslationList_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1, 1),
    _LcsQosDSCPTranslationList_Type()
)
lcsQosDSCPTranslationList.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationList.setStatus("current")
_LcsQosDSCPTranslationDSCPBasedId_Type = DisplayString
_LcsQosDSCPTranslationDSCPBasedId_Object = MibTableColumn
lcsQosDSCPTranslationDSCPBasedId = _LcsQosDSCPTranslationDSCPBasedId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1, 2),
    _LcsQosDSCPTranslationDSCPBasedId_Type()
)
lcsQosDSCPTranslationDSCPBasedId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationDSCPBasedId.setStatus("current")


class _LcsQosDSCPTranslationIngressTranslate_Type(Integer32):
    """Custom type lcsQosDSCPTranslationIngressTranslate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPTranslationIngressTranslate_Type.__name__ = "Integer32"
_LcsQosDSCPTranslationIngressTranslate_Object = MibTableColumn
lcsQosDSCPTranslationIngressTranslate = _LcsQosDSCPTranslationIngressTranslate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1, 3),
    _LcsQosDSCPTranslationIngressTranslate_Type()
)
lcsQosDSCPTranslationIngressTranslate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationIngressTranslate.setStatus("current")


class _LcsQosDSCPTranslationIngressClassify_Type(AdminMode):
    """Custom type lcsQosDSCPTranslationIngressClassify based on AdminMode"""
    defaultValue = 0


_LcsQosDSCPTranslationIngressClassify_Type.__name__ = "AdminMode"
_LcsQosDSCPTranslationIngressClassify_Object = MibTableColumn
lcsQosDSCPTranslationIngressClassify = _LcsQosDSCPTranslationIngressClassify_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1, 4),
    _LcsQosDSCPTranslationIngressClassify_Type()
)
lcsQosDSCPTranslationIngressClassify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationIngressClassify.setStatus("current")


class _LcsQosDSCPTranslationEgressRemap_Type(Integer32):
    """Custom type lcsQosDSCPTranslationEgressRemap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPTranslationEgressRemap_Type.__name__ = "Integer32"
_LcsQosDSCPTranslationEgressRemap_Object = MibTableColumn
lcsQosDSCPTranslationEgressRemap = _LcsQosDSCPTranslationEgressRemap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 9, 1, 1, 5),
    _LcsQosDSCPTranslationEgressRemap_Type()
)
lcsQosDSCPTranslationEgressRemap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPTranslationEgressRemap.setStatus("current")
_LcsQosDSCPClassification_ObjectIdentity = ObjectIdentity
lcsQosDSCPClassification = _LcsQosDSCPClassification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10)
)
_LcsQosDSCPClassificationTable_Object = MibTable
lcsQosDSCPClassificationTable = _LcsQosDSCPClassificationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1)
)
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationTable.setStatus("current")
_LcsQosDSCPClassificationEntry_Object = MibTableRow
lcsQosDSCPClassificationEntry = _LcsQosDSCPClassificationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1)
)
lcsQosDSCPClassificationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosDSCPClassificationQoSClass"),
)
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationEntry.setStatus("current")


class _LcsQosDSCPClassificationQoSClass_Type(Integer32):
    """Custom type lcsQosDSCPClassificationQoSClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_LcsQosDSCPClassificationQoSClass_Type.__name__ = "Integer32"
_LcsQosDSCPClassificationQoSClass_Object = MibTableColumn
lcsQosDSCPClassificationQoSClass = _LcsQosDSCPClassificationQoSClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1, 1),
    _LcsQosDSCPClassificationQoSClass_Type()
)
lcsQosDSCPClassificationQoSClass.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationQoSClass.setStatus("current")


class _LcsQosDSCPClassificationDSCPDP0_Type(Integer32):
    """Custom type lcsQosDSCPClassificationDSCPDP0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPClassificationDSCPDP0_Type.__name__ = "Integer32"
_LcsQosDSCPClassificationDSCPDP0_Object = MibTableColumn
lcsQosDSCPClassificationDSCPDP0 = _LcsQosDSCPClassificationDSCPDP0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1, 2),
    _LcsQosDSCPClassificationDSCPDP0_Type()
)
lcsQosDSCPClassificationDSCPDP0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationDSCPDP0.setStatus("current")


class _LcsQosDSCPClassificationDSCPDP1_Type(Integer32):
    """Custom type lcsQosDSCPClassificationDSCPDP1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPClassificationDSCPDP1_Type.__name__ = "Integer32"
_LcsQosDSCPClassificationDSCPDP1_Object = MibTableColumn
lcsQosDSCPClassificationDSCPDP1 = _LcsQosDSCPClassificationDSCPDP1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1, 3),
    _LcsQosDSCPClassificationDSCPDP1_Type()
)
lcsQosDSCPClassificationDSCPDP1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationDSCPDP1.setStatus("current")


class _LcsQosDSCPClassificationDSCPDP2_Type(Integer32):
    """Custom type lcsQosDSCPClassificationDSCPDP2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPClassificationDSCPDP2_Type.__name__ = "Integer32"
_LcsQosDSCPClassificationDSCPDP2_Object = MibTableColumn
lcsQosDSCPClassificationDSCPDP2 = _LcsQosDSCPClassificationDSCPDP2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1, 4),
    _LcsQosDSCPClassificationDSCPDP2_Type()
)
lcsQosDSCPClassificationDSCPDP2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationDSCPDP2.setStatus("current")


class _LcsQosDSCPClassificationDSCPDP3_Type(Integer32):
    """Custom type lcsQosDSCPClassificationDSCPDP3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsQosDSCPClassificationDSCPDP3_Type.__name__ = "Integer32"
_LcsQosDSCPClassificationDSCPDP3_Object = MibTableColumn
lcsQosDSCPClassificationDSCPDP3 = _LcsQosDSCPClassificationDSCPDP3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 10, 1, 1, 5),
    _LcsQosDSCPClassificationDSCPDP3_Type()
)
lcsQosDSCPClassificationDSCPDP3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosDSCPClassificationDSCPDP3.setStatus("current")
_LcsQosControlList_ObjectIdentity = ObjectIdentity
lcsQosControlList = _LcsQosControlList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11)
)
_LcsQosQceTable_Object = MibTable
lcsQosQceTable = _LcsQosQceTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1)
)
if mibBuilder.loadTexts:
    lcsQosQceTable.setStatus("current")
_LcsQosQceEntry_Object = MibTableRow
lcsQosQceEntry = _LcsQosQceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1)
)
lcsQosQceEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosQceIndex"),
)
if mibBuilder.loadTexts:
    lcsQosQceEntry.setStatus("current")


class _LcsQosQceIndex_Type(Integer32):
    """Custom type lcsQosQceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsQosQceIndex_Type.__name__ = "Integer32"
_LcsQosQceIndex_Object = MibTableColumn
lcsQosQceIndex = _LcsQosQceIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 1),
    _LcsQosQceIndex_Type()
)
lcsQosQceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosQceIndex.setStatus("current")


class _LcsQosQceID_Type(Integer32):
    """Custom type lcsQosQceID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_LcsQosQceID_Type.__name__ = "Integer32"
_LcsQosQceID_Object = MibTableColumn
lcsQosQceID = _LcsQosQceID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 2),
    _LcsQosQceID_Type()
)
lcsQosQceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQceID.setStatus("current")


class _LcsQosQceList_Type(Integer32):
    """Custom type lcsQosQceList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_LcsQosQceList_Type.__name__ = "Integer32"
_LcsQosQceList_Object = MibTableColumn
lcsQosQceList = _LcsQosQceList_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 3),
    _LcsQosQceList_Type()
)
lcsQosQceList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceList.setStatus("current")
_LcsQosQcePortMembers_Type = DisplayString
_LcsQosQcePortMembers_Object = MibTableColumn
lcsQosQcePortMembers = _LcsQosQcePortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 5),
    _LcsQosQcePortMembers_Type()
)
lcsQosQcePortMembers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQcePortMembers.setStatus("current")
_LcsQosQceTag_Type = DisplayString
_LcsQosQceTag_Object = MibTableColumn
lcsQosQceTag = _LcsQosQceTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 6),
    _LcsQosQceTag_Type()
)
lcsQosQceTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceTag.setStatus("current")
_LcsQosQceVID_Type = DisplayString
_LcsQosQceVID_Object = MibTableColumn
lcsQosQceVID = _LcsQosQceVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 7),
    _LcsQosQceVID_Type()
)
lcsQosQceVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceVID.setStatus("current")
_LcsQosPCP_Type = DisplayString
_LcsQosPCP_Object = MibTableColumn
lcsQosPCP = _LcsQosPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 8),
    _LcsQosPCP_Type()
)
lcsQosPCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosPCP.setStatus("current")
_LcsQosDEI_Type = DisplayString
_LcsQosDEI_Object = MibTableColumn
lcsQosDEI = _LcsQosDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 9),
    _LcsQosDEI_Type()
)
lcsQosDEI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosDEI.setStatus("current")
_LcsQosSMAC_Type = DisplayString
_LcsQosSMAC_Object = MibTableColumn
lcsQosSMAC = _LcsQosSMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 10),
    _LcsQosSMAC_Type()
)
lcsQosSMAC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosSMAC.setStatus("current")
_LcsQosDMACType_Type = DisplayString
_LcsQosDMACType_Object = MibTableColumn
lcsQosDMACType = _LcsQosDMACType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 11),
    _LcsQosDMACType_Type()
)
lcsQosDMACType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosDMACType.setStatus("current")
_LcsQosDMACValue_Type = DisplayString
_LcsQosDMACValue_Object = MibTableColumn
lcsQosDMACValue = _LcsQosDMACValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 12),
    _LcsQosDMACValue_Type()
)
lcsQosDMACValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosDMACValue.setStatus("current")
_LcsQosQceInnerTag_Type = DisplayString
_LcsQosQceInnerTag_Object = MibTableColumn
lcsQosQceInnerTag = _LcsQosQceInnerTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 13),
    _LcsQosQceInnerTag_Type()
)
lcsQosQceInnerTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceInnerTag.setStatus("current")
_LcsQosQceInnerVID_Type = DisplayString
_LcsQosQceInnerVID_Object = MibTableColumn
lcsQosQceInnerVID = _LcsQosQceInnerVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 14),
    _LcsQosQceInnerVID_Type()
)
lcsQosQceInnerVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceInnerVID.setStatus("current")
_LcsQosInnerPCP_Type = DisplayString
_LcsQosInnerPCP_Object = MibTableColumn
lcsQosInnerPCP = _LcsQosInnerPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 15),
    _LcsQosInnerPCP_Type()
)
lcsQosInnerPCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosInnerPCP.setStatus("current")
_LcsQosInnerDEI_Type = DisplayString
_LcsQosInnerDEI_Object = MibTableColumn
lcsQosInnerDEI = _LcsQosInnerDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 16),
    _LcsQosInnerDEI_Type()
)
lcsQosInnerDEI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosInnerDEI.setStatus("current")


class _LcsQosFrameType_Type(Integer32):
    """Custom type lcsQosFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("ethernet", 2),
          ("llc", 3),
          ("snap", 4),
          ("ipv4", 5),
          ("ipv6", 6))
    )


_LcsQosFrameType_Type.__name__ = "Integer32"
_LcsQosFrameType_Object = MibTableColumn
lcsQosFrameType = _LcsQosFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 17),
    _LcsQosFrameType_Type()
)
lcsQosFrameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosFrameType.setStatus("current")
_LcsQosMacEtherType_Type = DisplayString
_LcsQosMacEtherType_Object = MibTableColumn
lcsQosMacEtherType = _LcsQosMacEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 18),
    _LcsQosMacEtherType_Type()
)
lcsQosMacEtherType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosMacEtherType.setStatus("current")
_LcsQosLLCSSAPAddr_Type = DisplayString
_LcsQosLLCSSAPAddr_Object = MibTableColumn
lcsQosLLCSSAPAddr = _LcsQosLLCSSAPAddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 19),
    _LcsQosLLCSSAPAddr_Type()
)
lcsQosLLCSSAPAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosLLCSSAPAddr.setStatus("current")
_LcsQosLLCDSAPAddr_Type = DisplayString
_LcsQosLLCDSAPAddr_Object = MibTableColumn
lcsQosLLCDSAPAddr = _LcsQosLLCDSAPAddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 20),
    _LcsQosLLCDSAPAddr_Type()
)
lcsQosLLCDSAPAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosLLCDSAPAddr.setStatus("current")
_LcsQosLLCControl_Type = DisplayString
_LcsQosLLCControl_Object = MibTableColumn
lcsQosLLCControl = _LcsQosLLCControl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 21),
    _LcsQosLLCControl_Type()
)
lcsQosLLCControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosLLCControl.setStatus("current")
_LcsQosSNAPPID_Type = DisplayString
_LcsQosSNAPPID_Object = MibTableColumn
lcsQosSNAPPID = _LcsQosSNAPPID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 22),
    _LcsQosSNAPPID_Type()
)
lcsQosSNAPPID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosSNAPPID.setStatus("current")
_LcsQosIpv4Protocol_Type = DisplayString
_LcsQosIpv4Protocol_Object = MibTableColumn
lcsQosIpv4Protocol = _LcsQosIpv4Protocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 23),
    _LcsQosIpv4Protocol_Type()
)
lcsQosIpv4Protocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4Protocol.setStatus("current")


class _LcsQosIpv4ProtocolValue_Type(Integer32):
    """Custom type lcsQosIpv4ProtocolValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_LcsQosIpv4ProtocolValue_Type.__name__ = "Integer32"
_LcsQosIpv4ProtocolValue_Object = MibTableColumn
lcsQosIpv4ProtocolValue = _LcsQosIpv4ProtocolValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 24),
    _LcsQosIpv4ProtocolValue_Type()
)
lcsQosIpv4ProtocolValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4ProtocolValue.setStatus("current")
_LcsQosIpv4ProtocolUDPSPort_Type = DisplayString
_LcsQosIpv4ProtocolUDPSPort_Object = MibTableColumn
lcsQosIpv4ProtocolUDPSPort = _LcsQosIpv4ProtocolUDPSPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 25),
    _LcsQosIpv4ProtocolUDPSPort_Type()
)
lcsQosIpv4ProtocolUDPSPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4ProtocolUDPSPort.setStatus("current")
_LcsQosIpv4ProtocolUDPDPort_Type = DisplayString
_LcsQosIpv4ProtocolUDPDPort_Object = MibTableColumn
lcsQosIpv4ProtocolUDPDPort = _LcsQosIpv4ProtocolUDPDPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 26),
    _LcsQosIpv4ProtocolUDPDPort_Type()
)
lcsQosIpv4ProtocolUDPDPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4ProtocolUDPDPort.setStatus("current")
_LcsQosIpv4ProtocolTCPSPort_Type = DisplayString
_LcsQosIpv4ProtocolTCPSPort_Object = MibTableColumn
lcsQosIpv4ProtocolTCPSPort = _LcsQosIpv4ProtocolTCPSPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 27),
    _LcsQosIpv4ProtocolTCPSPort_Type()
)
lcsQosIpv4ProtocolTCPSPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4ProtocolTCPSPort.setStatus("current")
_LcsQosIpv4ProtocolTCPDPort_Type = DisplayString
_LcsQosIpv4ProtocolTCPDPort_Object = MibTableColumn
lcsQosIpv4ProtocolTCPDPort = _LcsQosIpv4ProtocolTCPDPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 28),
    _LcsQosIpv4ProtocolTCPDPort_Type()
)
lcsQosIpv4ProtocolTCPDPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4ProtocolTCPDPort.setStatus("current")
_LcsQosIpv4SourceIp_Type = DisplayString
_LcsQosIpv4SourceIp_Object = MibTableColumn
lcsQosIpv4SourceIp = _LcsQosIpv4SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 29),
    _LcsQosIpv4SourceIp_Type()
)
lcsQosIpv4SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4SourceIp.setStatus("current")
_LcsQosIpv4SourceMask_Type = DisplayString
_LcsQosIpv4SourceMask_Object = MibTableColumn
lcsQosIpv4SourceMask = _LcsQosIpv4SourceMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 30),
    _LcsQosIpv4SourceMask_Type()
)
lcsQosIpv4SourceMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4SourceMask.setStatus("current")
_LcsQosIpv4DestIp_Type = DisplayString
_LcsQosIpv4DestIp_Object = MibTableColumn
lcsQosIpv4DestIp = _LcsQosIpv4DestIp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 31),
    _LcsQosIpv4DestIp_Type()
)
lcsQosIpv4DestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4DestIp.setStatus("current")
_LcsQosIpv4DestMask_Type = DisplayString
_LcsQosIpv4DestMask_Object = MibTableColumn
lcsQosIpv4DestMask = _LcsQosIpv4DestMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 32),
    _LcsQosIpv4DestMask_Type()
)
lcsQosIpv4DestMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4DestMask.setStatus("current")


class _LcsQosIpv4IPFragment_Type(Integer32):
    """Custom type lcsQosIpv4IPFragment based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("no", 1),
          ("yes", 2))
    )


_LcsQosIpv4IPFragment_Type.__name__ = "Integer32"
_LcsQosIpv4IPFragment_Object = MibTableColumn
lcsQosIpv4IPFragment = _LcsQosIpv4IPFragment_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 33),
    _LcsQosIpv4IPFragment_Type()
)
lcsQosIpv4IPFragment.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4IPFragment.setStatus("current")
_LcsQosIpv4DSCP_Type = DisplayString
_LcsQosIpv4DSCP_Object = MibTableColumn
lcsQosIpv4DSCP = _LcsQosIpv4DSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 34),
    _LcsQosIpv4DSCP_Type()
)
lcsQosIpv4DSCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv4DSCP.setStatus("current")
_LcsQosIpv6Protocol_Type = DisplayString
_LcsQosIpv6Protocol_Object = MibTableColumn
lcsQosIpv6Protocol = _LcsQosIpv6Protocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 35),
    _LcsQosIpv6Protocol_Type()
)
lcsQosIpv6Protocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6Protocol.setStatus("current")


class _LcsQosIpv6ProtocolValue_Type(Integer32):
    """Custom type lcsQosIpv6ProtocolValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_LcsQosIpv6ProtocolValue_Type.__name__ = "Integer32"
_LcsQosIpv6ProtocolValue_Object = MibTableColumn
lcsQosIpv6ProtocolValue = _LcsQosIpv6ProtocolValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 36),
    _LcsQosIpv6ProtocolValue_Type()
)
lcsQosIpv6ProtocolValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6ProtocolValue.setStatus("current")
_LcsQosIpv6ProtocolUDPSPort_Type = DisplayString
_LcsQosIpv6ProtocolUDPSPort_Object = MibTableColumn
lcsQosIpv6ProtocolUDPSPort = _LcsQosIpv6ProtocolUDPSPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 37),
    _LcsQosIpv6ProtocolUDPSPort_Type()
)
lcsQosIpv6ProtocolUDPSPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6ProtocolUDPSPort.setStatus("current")
_LcsQosIpv6ProtocolUDPDPort_Type = DisplayString
_LcsQosIpv6ProtocolUDPDPort_Object = MibTableColumn
lcsQosIpv6ProtocolUDPDPort = _LcsQosIpv6ProtocolUDPDPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 38),
    _LcsQosIpv6ProtocolUDPDPort_Type()
)
lcsQosIpv6ProtocolUDPDPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6ProtocolUDPDPort.setStatus("current")
_LcsQosIpv6ProtocolTCPSPort_Type = DisplayString
_LcsQosIpv6ProtocolTCPSPort_Object = MibTableColumn
lcsQosIpv6ProtocolTCPSPort = _LcsQosIpv6ProtocolTCPSPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 39),
    _LcsQosIpv6ProtocolTCPSPort_Type()
)
lcsQosIpv6ProtocolTCPSPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6ProtocolTCPSPort.setStatus("current")
_LcsQosIpv6ProtocolTCPDPort_Type = DisplayString
_LcsQosIpv6ProtocolTCPDPort_Object = MibTableColumn
lcsQosIpv6ProtocolTCPDPort = _LcsQosIpv6ProtocolTCPDPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 40),
    _LcsQosIpv6ProtocolTCPDPort_Type()
)
lcsQosIpv6ProtocolTCPDPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6ProtocolTCPDPort.setStatus("current")
_LcsQosIpv6SourceIp_Type = DisplayString
_LcsQosIpv6SourceIp_Object = MibTableColumn
lcsQosIpv6SourceIp = _LcsQosIpv6SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 41),
    _LcsQosIpv6SourceIp_Type()
)
lcsQosIpv6SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6SourceIp.setStatus("current")
_LcsQosIpv6SourceMask_Type = DisplayString
_LcsQosIpv6SourceMask_Object = MibTableColumn
lcsQosIpv6SourceMask = _LcsQosIpv6SourceMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 42),
    _LcsQosIpv6SourceMask_Type()
)
lcsQosIpv6SourceMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6SourceMask.setStatus("current")
_LcsQosIpv6DestIp_Type = DisplayString
_LcsQosIpv6DestIp_Object = MibTableColumn
lcsQosIpv6DestIp = _LcsQosIpv6DestIp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 43),
    _LcsQosIpv6DestIp_Type()
)
lcsQosIpv6DestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6DestIp.setStatus("current")
_LcsQosIpv6DestMask_Type = DisplayString
_LcsQosIpv6DestMask_Object = MibTableColumn
lcsQosIpv6DestMask = _LcsQosIpv6DestMask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 44),
    _LcsQosIpv6DestMask_Type()
)
lcsQosIpv6DestMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6DestMask.setStatus("current")
_LcsQosIpv6DSCP_Type = DisplayString
_LcsQosIpv6DSCP_Object = MibTableColumn
lcsQosIpv6DSCP = _LcsQosIpv6DSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 45),
    _LcsQosIpv6DSCP_Type()
)
lcsQosIpv6DSCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosIpv6DSCP.setStatus("current")


class _LcsQosActionQueuePriority_Type(Integer32):
    """Custom type lcsQosActionQueuePriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_LcsQosActionQueuePriority_Type.__name__ = "Integer32"
_LcsQosActionQueuePriority_Object = MibTableColumn
lcsQosActionQueuePriority = _LcsQosActionQueuePriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 46),
    _LcsQosActionQueuePriority_Type()
)
lcsQosActionQueuePriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionQueuePriority.setStatus("current")


class _LcsQosActionDPL_Type(Integer32):
    """Custom type lcsQosActionDPL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_LcsQosActionDPL_Type.__name__ = "Integer32"
_LcsQosActionDPL_Object = MibTableColumn
lcsQosActionDPL = _LcsQosActionDPL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 47),
    _LcsQosActionDPL_Type()
)
lcsQosActionDPL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionDPL.setStatus("current")


class _LcsQosActionDSCP_Type(Integer32):
    """Custom type lcsQosActionDSCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_LcsQosActionDSCP_Type.__name__ = "Integer32"
_LcsQosActionDSCP_Object = MibTableColumn
lcsQosActionDSCP = _LcsQosActionDSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 48),
    _LcsQosActionDSCP_Type()
)
lcsQosActionDSCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionDSCP.setStatus("current")


class _LcsQosActionPCP_Type(Integer32):
    """Custom type lcsQosActionPCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_LcsQosActionPCP_Type.__name__ = "Integer32"
_LcsQosActionPCP_Object = MibTableColumn
lcsQosActionPCP = _LcsQosActionPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 49),
    _LcsQosActionPCP_Type()
)
lcsQosActionPCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionPCP.setStatus("current")


class _LcsQosActionDEI_Type(Integer32):
    """Custom type lcsQosActionDEI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsQosActionDEI_Type.__name__ = "Integer32"
_LcsQosActionDEI_Object = MibTableColumn
lcsQosActionDEI = _LcsQosActionDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 50),
    _LcsQosActionDEI_Type()
)
lcsQosActionDEI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionDEI.setStatus("current")


class _LcsQosActionPolicy_Type(Integer32):
    """Custom type lcsQosActionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_LcsQosActionPolicy_Type.__name__ = "Integer32"
_LcsQosActionPolicy_Object = MibTableColumn
lcsQosActionPolicy = _LcsQosActionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 51),
    _LcsQosActionPolicy_Type()
)
lcsQosActionPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionPolicy.setStatus("current")


class _LcsQosActionIngressMapID_Type(Integer32):
    """Custom type lcsQosActionIngressMapID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_LcsQosActionIngressMapID_Type.__name__ = "Integer32"
_LcsQosActionIngressMapID_Object = MibTableColumn
lcsQosActionIngressMapID = _LcsQosActionIngressMapID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 52),
    _LcsQosActionIngressMapID_Type()
)
lcsQosActionIngressMapID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosActionIngressMapID.setStatus("current")
_LcsQosQceRowStatus_Type = RowStatus
_LcsQosQceRowStatus_Object = MibTableColumn
lcsQosQceRowStatus = _LcsQosQceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 11, 1, 1, 53),
    _LcsQosQceRowStatus_Type()
)
lcsQosQceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsQosQceRowStatus.setStatus("current")
_LcsQosStormControl_ObjectIdentity = ObjectIdentity
lcsQosStormControl = _LcsQosStormControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12)
)
_LcsQosStormControlTable_Object = MibTable
lcsQosStormControlTable = _LcsQosStormControlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1)
)
if mibBuilder.loadTexts:
    lcsQosStormControlTable.setStatus("current")
_LcsQosStormControlEntry_Object = MibTableRow
lcsQosStormControlEntry = _LcsQosStormControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1, 1)
)
lcsQosStormControlEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosStormControlFrameType"),
)
if mibBuilder.loadTexts:
    lcsQosStormControlEntry.setStatus("current")


class _LcsQosStormControlFrameType_Type(Integer32):
    """Custom type lcsQosStormControlFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2),
          ("broadcast", 3))
    )


_LcsQosStormControlFrameType_Type.__name__ = "Integer32"
_LcsQosStormControlFrameType_Object = MibTableColumn
lcsQosStormControlFrameType = _LcsQosStormControlFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1, 1, 1),
    _LcsQosStormControlFrameType_Type()
)
lcsQosStormControlFrameType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosStormControlFrameType.setStatus("current")
_LcsQosStormControlEnabled_Type = AdminMode
_LcsQosStormControlEnabled_Object = MibTableColumn
lcsQosStormControlEnabled = _LcsQosStormControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1, 1, 2),
    _LcsQosStormControlEnabled_Type()
)
lcsQosStormControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosStormControlEnabled.setStatus("current")
_LcsQosStormControlRate_Type = Integer32
_LcsQosStormControlRate_Object = MibTableColumn
lcsQosStormControlRate = _LcsQosStormControlRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1, 1, 3),
    _LcsQosStormControlRate_Type()
)
lcsQosStormControlRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosStormControlRate.setStatus("current")
_LcsQosStormControlUnit_Type = Integer32
_LcsQosStormControlUnit_Object = MibTableColumn
lcsQosStormControlUnit = _LcsQosStormControlUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 12, 1, 1, 4),
    _LcsQosStormControlUnit_Type()
)
lcsQosStormControlUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosStormControlUnit.setStatus("current")
_LcsQosPortStormControl_ObjectIdentity = ObjectIdentity
lcsQosPortStormControl = _LcsQosPortStormControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13)
)
_LcsQosPortStormControlTable_Object = MibTable
lcsQosPortStormControlTable = _LcsQosPortStormControlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortStormControlTable.setStatus("current")
_LcsQosPortStormControlEntry_Object = MibTableRow
lcsQosPortStormControlEntry = _LcsQosPortStormControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1)
)
lcsQosPortStormControlEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortStormControlEntry.setStatus("current")
_LcsQosPortStormControlUnicastEnabled_Type = AdminMode
_LcsQosPortStormControlUnicastEnabled_Object = MibTableColumn
lcsQosPortStormControlUnicastEnabled = _LcsQosPortStormControlUnicastEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 2),
    _LcsQosPortStormControlUnicastEnabled_Type()
)
lcsQosPortStormControlUnicastEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnicastEnabled.setStatus("current")
_LcsQosPortStormControlUnicastRate_Type = Integer32
_LcsQosPortStormControlUnicastRate_Object = MibTableColumn
lcsQosPortStormControlUnicastRate = _LcsQosPortStormControlUnicastRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 3),
    _LcsQosPortStormControlUnicastRate_Type()
)
lcsQosPortStormControlUnicastRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnicastRate.setStatus("current")
_LcsQosPortStormControlUnicastUnit_Type = Integer32
_LcsQosPortStormControlUnicastUnit_Object = MibTableColumn
lcsQosPortStormControlUnicastUnit = _LcsQosPortStormControlUnicastUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 4),
    _LcsQosPortStormControlUnicastUnit_Type()
)
lcsQosPortStormControlUnicastUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnicastUnit.setStatus("current")
_LcsQosPortStormControlBroadcastEnabled_Type = AdminMode
_LcsQosPortStormControlBroadcastEnabled_Object = MibTableColumn
lcsQosPortStormControlBroadcastEnabled = _LcsQosPortStormControlBroadcastEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 5),
    _LcsQosPortStormControlBroadcastEnabled_Type()
)
lcsQosPortStormControlBroadcastEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlBroadcastEnabled.setStatus("current")
_LcsQosPortStormControlBroadcastRate_Type = Integer32
_LcsQosPortStormControlBroadcastRate_Object = MibTableColumn
lcsQosPortStormControlBroadcastRate = _LcsQosPortStormControlBroadcastRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 6),
    _LcsQosPortStormControlBroadcastRate_Type()
)
lcsQosPortStormControlBroadcastRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlBroadcastRate.setStatus("current")
_LcsQosPortStormControlBroadcastUnit_Type = Integer32
_LcsQosPortStormControlBroadcastUnit_Object = MibTableColumn
lcsQosPortStormControlBroadcastUnit = _LcsQosPortStormControlBroadcastUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 7),
    _LcsQosPortStormControlBroadcastUnit_Type()
)
lcsQosPortStormControlBroadcastUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlBroadcastUnit.setStatus("current")
_LcsQosPortStormControlUnknownEnabled_Type = AdminMode
_LcsQosPortStormControlUnknownEnabled_Object = MibTableColumn
lcsQosPortStormControlUnknownEnabled = _LcsQosPortStormControlUnknownEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 8),
    _LcsQosPortStormControlUnknownEnabled_Type()
)
lcsQosPortStormControlUnknownEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnknownEnabled.setStatus("current")
_LcsQosPortStormControlUnknownRate_Type = Integer32
_LcsQosPortStormControlUnknownRate_Object = MibTableColumn
lcsQosPortStormControlUnknownRate = _LcsQosPortStormControlUnknownRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 9),
    _LcsQosPortStormControlUnknownRate_Type()
)
lcsQosPortStormControlUnknownRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnknownRate.setStatus("current")
_LcsQosPortStormControlUnknownUnit_Type = Integer32
_LcsQosPortStormControlUnknownUnit_Object = MibTableColumn
lcsQosPortStormControlUnknownUnit = _LcsQosPortStormControlUnknownUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 13, 1, 1, 10),
    _LcsQosPortStormControlUnknownUnit_Type()
)
lcsQosPortStormControlUnknownUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortStormControlUnknownUnit.setStatus("current")
_LcsQosWRED_ObjectIdentity = ObjectIdentity
lcsQosWRED = _LcsQosWRED_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14)
)
_LcsQosWREDTable_Object = MibTable
lcsQosWREDTable = _LcsQosWREDTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1)
)
if mibBuilder.loadTexts:
    lcsQosWREDTable.setStatus("current")
_LcsQosWREDEntry_Object = MibTableRow
lcsQosWREDEntry = _LcsQosWREDEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1)
)
lcsQosWREDEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosWREDQueue"),
)
if mibBuilder.loadTexts:
    lcsQosWREDEntry.setStatus("current")
_LcsQosWREDGroupIndex_Type = Integer32
_LcsQosWREDGroupIndex_Object = MibTableColumn
lcsQosWREDGroupIndex = _LcsQosWREDGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 1),
    _LcsQosWREDGroupIndex_Type()
)
lcsQosWREDGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosWREDGroupIndex.setStatus("current")


class _LcsQosWREDQueue_Type(Integer32):
    """Custom type lcsQosWREDQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsQosWREDQueue_Type.__name__ = "Integer32"
_LcsQosWREDQueue_Object = MibTableColumn
lcsQosWREDQueue = _LcsQosWREDQueue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 2),
    _LcsQosWREDQueue_Type()
)
lcsQosWREDQueue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosWREDQueue.setStatus("current")
_LcsQosWREDDPL_Type = Integer32
_LcsQosWREDDPL_Object = MibTableColumn
lcsQosWREDDPL = _LcsQosWREDDPL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 3),
    _LcsQosWREDDPL_Type()
)
lcsQosWREDDPL.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosWREDDPL.setStatus("current")


class _LcsQosWREDEnable_Type(AdminMode):
    """Custom type lcsQosWREDEnable based on AdminMode"""
    defaultValue = 0


_LcsQosWREDEnable_Type.__name__ = "AdminMode"
_LcsQosWREDEnable_Object = MibTableColumn
lcsQosWREDEnable = _LcsQosWREDEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 4),
    _LcsQosWREDEnable_Type()
)
lcsQosWREDEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosWREDEnable.setStatus("current")


class _LcsQosWREDMinThreshold_Type(Integer32):
    """Custom type lcsQosWREDMinThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_LcsQosWREDMinThreshold_Type.__name__ = "Integer32"
_LcsQosWREDMinThreshold_Object = MibTableColumn
lcsQosWREDMinThreshold = _LcsQosWREDMinThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 5),
    _LcsQosWREDMinThreshold_Type()
)
lcsQosWREDMinThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosWREDMinThreshold.setStatus("current")


class _LcsQosWREDMaxThreshold_Type(Integer32):
    """Custom type lcsQosWREDMaxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_LcsQosWREDMaxThreshold_Type.__name__ = "Integer32"
_LcsQosWREDMaxThreshold_Object = MibTableColumn
lcsQosWREDMaxThreshold = _LcsQosWREDMaxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 6),
    _LcsQosWREDMaxThreshold_Type()
)
lcsQosWREDMaxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosWREDMaxThreshold.setStatus("current")


class _LcsQosWREDMaxUnit_Type(Integer32):
    """Custom type lcsQosWREDMaxUnit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dropProbability", 0),
          ("fillLevel", 1))
    )


_LcsQosWREDMaxUnit_Type.__name__ = "Integer32"
_LcsQosWREDMaxUnit_Object = MibTableColumn
lcsQosWREDMaxUnit = _LcsQosWREDMaxUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 14, 1, 1, 7),
    _LcsQosWREDMaxUnit_Type()
)
lcsQosWREDMaxUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosWREDMaxUnit.setStatus("current")
_LcsQosQCLStatus_ObjectIdentity = ObjectIdentity
lcsQosQCLStatus = _LcsQosQCLStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15)
)
_LcsQosQCLStatusTable_Object = MibTable
lcsQosQCLStatusTable = _LcsQosQCLStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1)
)
if mibBuilder.loadTexts:
    lcsQosQCLStatusTable.setStatus("current")
_LcsQosQCLStatusEntry_Object = MibTableRow
lcsQosQCLStatusEntry = _LcsQosQCLStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1)
)
lcsQosQCLStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsQosQCLStatusList"),
)
if mibBuilder.loadTexts:
    lcsQosQCLStatusEntry.setStatus("current")


class _LcsQosQCLStatusList_Type(Integer32):
    """Custom type lcsQosQCLStatusList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsQosQCLStatusList_Type.__name__ = "Integer32"
_LcsQosQCLStatusList_Object = MibTableColumn
lcsQosQCLStatusList = _LcsQosQCLStatusList_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 1),
    _LcsQosQCLStatusList_Type()
)
lcsQosQCLStatusList.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsQosQCLStatusList.setStatus("current")
_LcsQosQCLStatusUser_Type = DisplayString
_LcsQosQCLStatusUser_Object = MibTableColumn
lcsQosQCLStatusUser = _LcsQosQCLStatusUser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 2),
    _LcsQosQCLStatusUser_Type()
)
lcsQosQCLStatusUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusUser.setStatus("current")
_LcsQosQCLStatusQCEId_Type = DisplayString
_LcsQosQCLStatusQCEId_Object = MibTableColumn
lcsQosQCLStatusQCEId = _LcsQosQCLStatusQCEId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 3),
    _LcsQosQCLStatusQCEId_Type()
)
lcsQosQCLStatusQCEId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusQCEId.setStatus("current")
_LcsQosQCLStatusFrameType_Type = DisplayString
_LcsQosQCLStatusFrameType_Object = MibTableColumn
lcsQosQCLStatusFrameType = _LcsQosQCLStatusFrameType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 4),
    _LcsQosQCLStatusFrameType_Type()
)
lcsQosQCLStatusFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusFrameType.setStatus("current")
_LcsQosQCLStatusPortlist_Type = DisplayString
_LcsQosQCLStatusPortlist_Object = MibTableColumn
lcsQosQCLStatusPortlist = _LcsQosQCLStatusPortlist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 5),
    _LcsQosQCLStatusPortlist_Type()
)
lcsQosQCLStatusPortlist.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusPortlist.setStatus("current")
_LcsQosQCLStatusActionQueuePriority_Type = DisplayString
_LcsQosQCLStatusActionQueuePriority_Object = MibTableColumn
lcsQosQCLStatusActionQueuePriority = _LcsQosQCLStatusActionQueuePriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 6),
    _LcsQosQCLStatusActionQueuePriority_Type()
)
lcsQosQCLStatusActionQueuePriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionQueuePriority.setStatus("current")
_LcsQosQCLStatusActionDPL_Type = DisplayString
_LcsQosQCLStatusActionDPL_Object = MibTableColumn
lcsQosQCLStatusActionDPL = _LcsQosQCLStatusActionDPL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 7),
    _LcsQosQCLStatusActionDPL_Type()
)
lcsQosQCLStatusActionDPL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionDPL.setStatus("current")
_LcsQosQCLStatusActionDSCP_Type = DisplayString
_LcsQosQCLStatusActionDSCP_Object = MibTableColumn
lcsQosQCLStatusActionDSCP = _LcsQosQCLStatusActionDSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 8),
    _LcsQosQCLStatusActionDSCP_Type()
)
lcsQosQCLStatusActionDSCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionDSCP.setStatus("current")
_LcsQosQCLStatusActionPCP_Type = DisplayString
_LcsQosQCLStatusActionPCP_Object = MibTableColumn
lcsQosQCLStatusActionPCP = _LcsQosQCLStatusActionPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 9),
    _LcsQosQCLStatusActionPCP_Type()
)
lcsQosQCLStatusActionPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionPCP.setStatus("current")
_LcsQosQCLStatusActionDEL_Type = DisplayString
_LcsQosQCLStatusActionDEL_Object = MibTableColumn
lcsQosQCLStatusActionDEL = _LcsQosQCLStatusActionDEL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 10),
    _LcsQosQCLStatusActionDEL_Type()
)
lcsQosQCLStatusActionDEL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionDEL.setStatus("current")
_LcsQosQCLStatusActionPolicy_Type = DisplayString
_LcsQosQCLStatusActionPolicy_Object = MibTableColumn
lcsQosQCLStatusActionPolicy = _LcsQosQCLStatusActionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 11),
    _LcsQosQCLStatusActionPolicy_Type()
)
lcsQosQCLStatusActionPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusActionPolicy.setStatus("current")
_LcsQosQCLStatusConflict_Type = DisplayString
_LcsQosQCLStatusConflict_Object = MibTableColumn
lcsQosQCLStatusConflict = _LcsQosQCLStatusConflict_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 12),
    _LcsQosQCLStatusConflict_Type()
)
lcsQosQCLStatusConflict.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusConflict.setStatus("current")
_LcsQosQCLStatusDMAC_Type = DisplayString
_LcsQosQCLStatusDMAC_Object = MibTableColumn
lcsQosQCLStatusDMAC = _LcsQosQCLStatusDMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 14),
    _LcsQosQCLStatusDMAC_Type()
)
lcsQosQCLStatusDMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusDMAC.setStatus("current")
_LcsQosQCLStatusSMAC_Type = DisplayString
_LcsQosQCLStatusSMAC_Object = MibTableColumn
lcsQosQCLStatusSMAC = _LcsQosQCLStatusSMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 15),
    _LcsQosQCLStatusSMAC_Type()
)
lcsQosQCLStatusSMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusSMAC.setStatus("current")
_LcsQosQCLStatusTag_Type = DisplayString
_LcsQosQCLStatusTag_Object = MibTableColumn
lcsQosQCLStatusTag = _LcsQosQCLStatusTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 16),
    _LcsQosQCLStatusTag_Type()
)
lcsQosQCLStatusTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusTag.setStatus("current")
_LcsQosQCLStatusVID_Type = DisplayString
_LcsQosQCLStatusVID_Object = MibTableColumn
lcsQosQCLStatusVID = _LcsQosQCLStatusVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 17),
    _LcsQosQCLStatusVID_Type()
)
lcsQosQCLStatusVID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusVID.setStatus("current")
_LcsQosQCLStatusPCP_Type = DisplayString
_LcsQosQCLStatusPCP_Object = MibTableColumn
lcsQosQCLStatusPCP = _LcsQosQCLStatusPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 18),
    _LcsQosQCLStatusPCP_Type()
)
lcsQosQCLStatusPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusPCP.setStatus("current")
_LcsQosQCLStatusDEI_Type = DisplayString
_LcsQosQCLStatusDEI_Object = MibTableColumn
lcsQosQCLStatusDEI = _LcsQosQCLStatusDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 15, 1, 1, 19),
    _LcsQosQCLStatusDEI_Type()
)
lcsQosQCLStatusDEI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsQosQCLStatusDEI.setStatus("current")
_LcsQosPortShapers_ObjectIdentity = ObjectIdentity
lcsQosPortShapers = _LcsQosPortShapers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16)
)
_LcsQosPortShaperTable_Object = MibTable
lcsQosPortShaperTable = _LcsQosPortShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortShaperTable.setStatus("current")
_LcsQosPortShaperEntry_Object = MibTableRow
lcsQosPortShaperEntry = _LcsQosPortShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1)
)
lcsQosPortShaperEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortShaperEntry.setStatus("current")


class _LcsQosPortShaperQueue0Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue0Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue0Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue0Enable_Object = MibTableColumn
lcsQosPortShaperQueue0Enable = _LcsQosPortShaperQueue0Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 3),
    _LcsQosPortShaperQueue0Enable_Type()
)
lcsQosPortShaperQueue0Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue0Enable.setStatus("current")
_LcsQosPortShaperQueue0Rate_Type = Integer32
_LcsQosPortShaperQueue0Rate_Object = MibTableColumn
lcsQosPortShaperQueue0Rate = _LcsQosPortShaperQueue0Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 4),
    _LcsQosPortShaperQueue0Rate_Type()
)
lcsQosPortShaperQueue0Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue0Rate.setStatus("current")


class _LcsQosPortShaperQueue0Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue0Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue0Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue0Unit_Object = MibTableColumn
lcsQosPortShaperQueue0Unit = _LcsQosPortShaperQueue0Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 5),
    _LcsQosPortShaperQueue0Unit_Type()
)
lcsQosPortShaperQueue0Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue0Unit.setStatus("current")


class _LcsQosPortShaperQueue1Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue1Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue1Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue1Enable_Object = MibTableColumn
lcsQosPortShaperQueue1Enable = _LcsQosPortShaperQueue1Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 6),
    _LcsQosPortShaperQueue1Enable_Type()
)
lcsQosPortShaperQueue1Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue1Enable.setStatus("current")
_LcsQosPortShaperQueue1Rate_Type = Integer32
_LcsQosPortShaperQueue1Rate_Object = MibTableColumn
lcsQosPortShaperQueue1Rate = _LcsQosPortShaperQueue1Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 7),
    _LcsQosPortShaperQueue1Rate_Type()
)
lcsQosPortShaperQueue1Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue1Rate.setStatus("current")


class _LcsQosPortShaperQueue1Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue1Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue1Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue1Unit_Object = MibTableColumn
lcsQosPortShaperQueue1Unit = _LcsQosPortShaperQueue1Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 8),
    _LcsQosPortShaperQueue1Unit_Type()
)
lcsQosPortShaperQueue1Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue1Unit.setStatus("current")


class _LcsQosPortShaperQueue2Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue2Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue2Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue2Enable_Object = MibTableColumn
lcsQosPortShaperQueue2Enable = _LcsQosPortShaperQueue2Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 9),
    _LcsQosPortShaperQueue2Enable_Type()
)
lcsQosPortShaperQueue2Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue2Enable.setStatus("current")
_LcsQosPortShaperQueue2Rate_Type = Integer32
_LcsQosPortShaperQueue2Rate_Object = MibTableColumn
lcsQosPortShaperQueue2Rate = _LcsQosPortShaperQueue2Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 10),
    _LcsQosPortShaperQueue2Rate_Type()
)
lcsQosPortShaperQueue2Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue2Rate.setStatus("current")


class _LcsQosPortShaperQueue2Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue2Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue2Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue2Unit_Object = MibTableColumn
lcsQosPortShaperQueue2Unit = _LcsQosPortShaperQueue2Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 11),
    _LcsQosPortShaperQueue2Unit_Type()
)
lcsQosPortShaperQueue2Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue2Unit.setStatus("current")


class _LcsQosPortShaperQueue3Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue3Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue3Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue3Enable_Object = MibTableColumn
lcsQosPortShaperQueue3Enable = _LcsQosPortShaperQueue3Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 12),
    _LcsQosPortShaperQueue3Enable_Type()
)
lcsQosPortShaperQueue3Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue3Enable.setStatus("current")
_LcsQosPortShaperQueue3Rate_Type = Integer32
_LcsQosPortShaperQueue3Rate_Object = MibTableColumn
lcsQosPortShaperQueue3Rate = _LcsQosPortShaperQueue3Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 13),
    _LcsQosPortShaperQueue3Rate_Type()
)
lcsQosPortShaperQueue3Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue3Rate.setStatus("current")


class _LcsQosPortShaperQueue3Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue3Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue3Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue3Unit_Object = MibTableColumn
lcsQosPortShaperQueue3Unit = _LcsQosPortShaperQueue3Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 14),
    _LcsQosPortShaperQueue3Unit_Type()
)
lcsQosPortShaperQueue3Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue3Unit.setStatus("current")


class _LcsQosPortShaperQueue4Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue4Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue4Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue4Enable_Object = MibTableColumn
lcsQosPortShaperQueue4Enable = _LcsQosPortShaperQueue4Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 15),
    _LcsQosPortShaperQueue4Enable_Type()
)
lcsQosPortShaperQueue4Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue4Enable.setStatus("current")
_LcsQosPortShaperQueue4Rate_Type = Integer32
_LcsQosPortShaperQueue4Rate_Object = MibTableColumn
lcsQosPortShaperQueue4Rate = _LcsQosPortShaperQueue4Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 16),
    _LcsQosPortShaperQueue4Rate_Type()
)
lcsQosPortShaperQueue4Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue4Rate.setStatus("current")


class _LcsQosPortShaperQueue4Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue4Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue4Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue4Unit_Object = MibTableColumn
lcsQosPortShaperQueue4Unit = _LcsQosPortShaperQueue4Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 17),
    _LcsQosPortShaperQueue4Unit_Type()
)
lcsQosPortShaperQueue4Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue4Unit.setStatus("current")


class _LcsQosPortShaperQueue5Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue5Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue5Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue5Enable_Object = MibTableColumn
lcsQosPortShaperQueue5Enable = _LcsQosPortShaperQueue5Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 18),
    _LcsQosPortShaperQueue5Enable_Type()
)
lcsQosPortShaperQueue5Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue5Enable.setStatus("current")
_LcsQosPortShaperQueue5Rate_Type = Integer32
_LcsQosPortShaperQueue5Rate_Object = MibTableColumn
lcsQosPortShaperQueue5Rate = _LcsQosPortShaperQueue5Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 19),
    _LcsQosPortShaperQueue5Rate_Type()
)
lcsQosPortShaperQueue5Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue5Rate.setStatus("current")


class _LcsQosPortShaperQueue5Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue5Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue5Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue5Unit_Object = MibTableColumn
lcsQosPortShaperQueue5Unit = _LcsQosPortShaperQueue5Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 20),
    _LcsQosPortShaperQueue5Unit_Type()
)
lcsQosPortShaperQueue5Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue5Unit.setStatus("current")


class _LcsQosPortShaperQueue6Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue6Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue6Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue6Enable_Object = MibTableColumn
lcsQosPortShaperQueue6Enable = _LcsQosPortShaperQueue6Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 21),
    _LcsQosPortShaperQueue6Enable_Type()
)
lcsQosPortShaperQueue6Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue6Enable.setStatus("current")
_LcsQosPortShaperQueue6Rate_Type = Integer32
_LcsQosPortShaperQueue6Rate_Object = MibTableColumn
lcsQosPortShaperQueue6Rate = _LcsQosPortShaperQueue6Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 22),
    _LcsQosPortShaperQueue6Rate_Type()
)
lcsQosPortShaperQueue6Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue6Rate.setStatus("current")


class _LcsQosPortShaperQueue6Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue6Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue6Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue6Unit_Object = MibTableColumn
lcsQosPortShaperQueue6Unit = _LcsQosPortShaperQueue6Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 23),
    _LcsQosPortShaperQueue6Unit_Type()
)
lcsQosPortShaperQueue6Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue6Unit.setStatus("current")


class _LcsQosPortShaperQueue7Enable_Type(AdminMode):
    """Custom type lcsQosPortShaperQueue7Enable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperQueue7Enable_Type.__name__ = "AdminMode"
_LcsQosPortShaperQueue7Enable_Object = MibTableColumn
lcsQosPortShaperQueue7Enable = _LcsQosPortShaperQueue7Enable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 24),
    _LcsQosPortShaperQueue7Enable_Type()
)
lcsQosPortShaperQueue7Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue7Enable.setStatus("current")
_LcsQosPortShaperQueue7Rate_Type = Integer32
_LcsQosPortShaperQueue7Rate_Object = MibTableColumn
lcsQosPortShaperQueue7Rate = _LcsQosPortShaperQueue7Rate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 25),
    _LcsQosPortShaperQueue7Rate_Type()
)
lcsQosPortShaperQueue7Rate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue7Rate.setStatus("current")


class _LcsQosPortShaperQueue7Unit_Type(Integer32):
    """Custom type lcsQosPortShaperQueue7Unit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperQueue7Unit_Type.__name__ = "Integer32"
_LcsQosPortShaperQueue7Unit_Object = MibTableColumn
lcsQosPortShaperQueue7Unit = _LcsQosPortShaperQueue7Unit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 26),
    _LcsQosPortShaperQueue7Unit_Type()
)
lcsQosPortShaperQueue7Unit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperQueue7Unit.setStatus("current")


class _LcsQosPortShaperEnable_Type(AdminMode):
    """Custom type lcsQosPortShaperEnable based on AdminMode"""
    defaultValue = 0


_LcsQosPortShaperEnable_Type.__name__ = "AdminMode"
_LcsQosPortShaperEnable_Object = MibTableColumn
lcsQosPortShaperEnable = _LcsQosPortShaperEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 27),
    _LcsQosPortShaperEnable_Type()
)
lcsQosPortShaperEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperEnable.setStatus("current")
_LcsQosPortShaperRate_Type = Integer32
_LcsQosPortShaperRate_Object = MibTableColumn
lcsQosPortShaperRate = _LcsQosPortShaperRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 28),
    _LcsQosPortShaperRate_Type()
)
lcsQosPortShaperRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperRate.setStatus("current")


class _LcsQosPortShaperRateType_Type(Integer32):
    """Custom type lcsQosPortShaperRateType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsQosPortShaperRateType_Type.__name__ = "Integer32"
_LcsQosPortShaperRateType_Object = MibTableColumn
lcsQosPortShaperRateType = _LcsQosPortShaperRateType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 16, 1, 1, 29),
    _LcsQosPortShaperRateType_Type()
)
lcsQosPortShaperRateType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortShaperRateType.setStatus("current")
_LcsQosPortSchedulers_ObjectIdentity = ObjectIdentity
lcsQosPortSchedulers = _LcsQosPortSchedulers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17)
)
_LcsQosPortSchedulersTable_Object = MibTable
lcsQosPortSchedulersTable = _LcsQosPortSchedulersTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1)
)
if mibBuilder.loadTexts:
    lcsQosPortSchedulersTable.setStatus("current")
_LcsQosPortSchedulersEntry_Object = MibTableRow
lcsQosPortSchedulersEntry = _LcsQosPortSchedulersEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1)
)
lcsQosPortSchedulersEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsQosPortSchedulersEntry.setStatus("current")


class _LcsQosPortSchedulersMode_Type(Integer32):
    """Custom type lcsQosPortSchedulersMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(8, 8),
    )


_LcsQosPortSchedulersMode_Type.__name__ = "Integer32"
_LcsQosPortSchedulersMode_Object = MibTableColumn
lcsQosPortSchedulersMode = _LcsQosPortSchedulersMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 2),
    _LcsQosPortSchedulersMode_Type()
)
lcsQosPortSchedulersMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersMode.setStatus("current")


class _LcsQosPortSchedulersQ0Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ0Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ0Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ0Weight_Object = MibTableColumn
lcsQosPortSchedulersQ0Weight = _LcsQosPortSchedulersQ0Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 3),
    _LcsQosPortSchedulersQ0Weight_Type()
)
lcsQosPortSchedulersQ0Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ0Weight.setStatus("current")


class _LcsQosPortSchedulersQ1Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ1Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ1Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ1Weight_Object = MibTableColumn
lcsQosPortSchedulersQ1Weight = _LcsQosPortSchedulersQ1Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 4),
    _LcsQosPortSchedulersQ1Weight_Type()
)
lcsQosPortSchedulersQ1Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ1Weight.setStatus("current")


class _LcsQosPortSchedulersQ2Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ2Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ2Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ2Weight_Object = MibTableColumn
lcsQosPortSchedulersQ2Weight = _LcsQosPortSchedulersQ2Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 5),
    _LcsQosPortSchedulersQ2Weight_Type()
)
lcsQosPortSchedulersQ2Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ2Weight.setStatus("current")


class _LcsQosPortSchedulersQ3Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ3Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ3Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ3Weight_Object = MibTableColumn
lcsQosPortSchedulersQ3Weight = _LcsQosPortSchedulersQ3Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 6),
    _LcsQosPortSchedulersQ3Weight_Type()
)
lcsQosPortSchedulersQ3Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ3Weight.setStatus("current")


class _LcsQosPortSchedulersQ4Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ4Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ4Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ4Weight_Object = MibTableColumn
lcsQosPortSchedulersQ4Weight = _LcsQosPortSchedulersQ4Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 7),
    _LcsQosPortSchedulersQ4Weight_Type()
)
lcsQosPortSchedulersQ4Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ4Weight.setStatus("current")


class _LcsQosPortSchedulersQ5Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ5Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ5Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ5Weight_Object = MibTableColumn
lcsQosPortSchedulersQ5Weight = _LcsQosPortSchedulersQ5Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 8),
    _LcsQosPortSchedulersQ5Weight_Type()
)
lcsQosPortSchedulersQ5Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ5Weight.setStatus("current")


class _LcsQosPortSchedulersQ6Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ6Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ6Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ6Weight_Object = MibTableColumn
lcsQosPortSchedulersQ6Weight = _LcsQosPortSchedulersQ6Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 9),
    _LcsQosPortSchedulersQ6Weight_Type()
)
lcsQosPortSchedulersQ6Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ6Weight.setStatus("current")


class _LcsQosPortSchedulersQ7Weight_Type(Integer32):
    """Custom type lcsQosPortSchedulersQ7Weight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsQosPortSchedulersQ7Weight_Type.__name__ = "Integer32"
_LcsQosPortSchedulersQ7Weight_Object = MibTableColumn
lcsQosPortSchedulersQ7Weight = _LcsQosPortSchedulersQ7Weight_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 10, 1, 17, 1, 1, 10),
    _LcsQosPortSchedulersQ7Weight_Type()
)
lcsQosPortSchedulersQ7Weight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsQosPortSchedulersQ7Weight.setStatus("current")
_LcsLoopProtection_ObjectIdentity = ObjectIdentity
lcsLoopProtection = _LcsLoopProtection_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12)
)
_LcsLoopProtectionConfig_ObjectIdentity = ObjectIdentity
lcsLoopProtectionConfig = _LcsLoopProtectionConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1)
)


class _LcsLoopProtectionGlobalEnable_Type(Integer32):
    """Custom type lcsLoopProtectionGlobalEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLoopProtectionGlobalEnable_Type.__name__ = "Integer32"
_LcsLoopProtectionGlobalEnable_Object = MibScalar
lcsLoopProtectionGlobalEnable = _LcsLoopProtectionGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 1),
    _LcsLoopProtectionGlobalEnable_Type()
)
lcsLoopProtectionGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionGlobalEnable.setStatus("current")


class _LcsLoopProtectionTranmisstionTime_Type(Integer32):
    """Custom type lcsLoopProtectionTranmisstionTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_LcsLoopProtectionTranmisstionTime_Type.__name__ = "Integer32"
_LcsLoopProtectionTranmisstionTime_Object = MibScalar
lcsLoopProtectionTranmisstionTime = _LcsLoopProtectionTranmisstionTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 2),
    _LcsLoopProtectionTranmisstionTime_Type()
)
lcsLoopProtectionTranmisstionTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionTranmisstionTime.setStatus("current")


class _LcsLoopProtectionShutdownTime_Type(Integer32):
    """Custom type lcsLoopProtectionShutdownTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 604800),
    )


_LcsLoopProtectionShutdownTime_Type.__name__ = "Integer32"
_LcsLoopProtectionShutdownTime_Object = MibScalar
lcsLoopProtectionShutdownTime = _LcsLoopProtectionShutdownTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 3),
    _LcsLoopProtectionShutdownTime_Type()
)
lcsLoopProtectionShutdownTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionShutdownTime.setStatus("current")
_LcsLoopProtectionConfigurationTable_Object = MibTable
lcsLoopProtectionConfigurationTable = _LcsLoopProtectionConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4)
)
if mibBuilder.loadTexts:
    lcsLoopProtectionConfigurationTable.setStatus("current")
_LcsLoopProtectionConfigurationEntry_Object = MibTableRow
lcsLoopProtectionConfigurationEntry = _LcsLoopProtectionConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1)
)
lcsLoopProtectionConfigurationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLoopProtectionConfPort"),
)
if mibBuilder.loadTexts:
    lcsLoopProtectionConfigurationEntry.setStatus("current")


class _LcsLoopProtectionConfPort_Type(Integer32):
    """Custom type lcsLoopProtectionConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLoopProtectionConfPort_Type.__name__ = "Integer32"
_LcsLoopProtectionConfPort_Object = MibTableColumn
lcsLoopProtectionConfPort = _LcsLoopProtectionConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1, 1),
    _LcsLoopProtectionConfPort_Type()
)
lcsLoopProtectionConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLoopProtectionConfPort.setStatus("current")


class _LcsLoopProtectionConfEnable_Type(Integer32):
    """Custom type lcsLoopProtectionConfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLoopProtectionConfEnable_Type.__name__ = "Integer32"
_LcsLoopProtectionConfEnable_Object = MibTableColumn
lcsLoopProtectionConfEnable = _LcsLoopProtectionConfEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1, 2),
    _LcsLoopProtectionConfEnable_Type()
)
lcsLoopProtectionConfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionConfEnable.setStatus("current")


class _LcsLoopProtectionConfAction_Type(Integer32):
    """Custom type lcsLoopProtectionConfAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsLoopProtectionConfAction_Type.__name__ = "Integer32"
_LcsLoopProtectionConfAction_Object = MibTableColumn
lcsLoopProtectionConfAction = _LcsLoopProtectionConfAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1, 3),
    _LcsLoopProtectionConfAction_Type()
)
lcsLoopProtectionConfAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionConfAction.setStatus("current")


class _LcsLoopProtectionConfTxmode_Type(Integer32):
    """Custom type lcsLoopProtectionConfTxmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLoopProtectionConfTxmode_Type.__name__ = "Integer32"
_LcsLoopProtectionConfTxmode_Object = MibTableColumn
lcsLoopProtectionConfTxmode = _LcsLoopProtectionConfTxmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1, 4),
    _LcsLoopProtectionConfTxmode_Type()
)
lcsLoopProtectionConfTxmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionConfTxmode.setStatus("current")


class _LcsLoopProtectionConfActPort_Type(Integer32):
    """Custom type lcsLoopProtectionConfActPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsLoopProtectionConfActPort_Type.__name__ = "Integer32"
_LcsLoopProtectionConfActPort_Object = MibScalar
lcsLoopProtectionConfActPort = _LcsLoopProtectionConfActPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 1, 4, 1, 101),
    _LcsLoopProtectionConfActPort_Type()
)
lcsLoopProtectionConfActPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLoopProtectionConfActPort.setStatus("current")
_LcsLoopProtectionStatusTable_Object = MibTable
lcsLoopProtectionStatusTable = _LcsLoopProtectionStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2)
)
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusTable.setStatus("current")
_LcsLoopProtectionStatusEntry_Object = MibTableRow
lcsLoopProtectionStatusEntry = _LcsLoopProtectionStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1)
)
lcsLoopProtectionStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLoopProtectionStatusPort"),
)
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusEntry.setStatus("current")


class _LcsLoopProtectionStatusPort_Type(Integer32):
    """Custom type lcsLoopProtectionStatusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLoopProtectionStatusPort_Type.__name__ = "Integer32"
_LcsLoopProtectionStatusPort_Object = MibTableColumn
lcsLoopProtectionStatusPort = _LcsLoopProtectionStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 1),
    _LcsLoopProtectionStatusPort_Type()
)
lcsLoopProtectionStatusPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusPort.setStatus("current")
_LcsLoopProtectionStatusAction_Type = DisplayString
_LcsLoopProtectionStatusAction_Object = MibTableColumn
lcsLoopProtectionStatusAction = _LcsLoopProtectionStatusAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 2),
    _LcsLoopProtectionStatusAction_Type()
)
lcsLoopProtectionStatusAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusAction.setStatus("current")
_LcsLoopProtectionStatusTransmit_Type = DisplayString
_LcsLoopProtectionStatusTransmit_Object = MibTableColumn
lcsLoopProtectionStatusTransmit = _LcsLoopProtectionStatusTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 3),
    _LcsLoopProtectionStatusTransmit_Type()
)
lcsLoopProtectionStatusTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusTransmit.setStatus("current")
_LcsLoopProtectionStatusLoops_Type = Counter32
_LcsLoopProtectionStatusLoops_Object = MibTableColumn
lcsLoopProtectionStatusLoops = _LcsLoopProtectionStatusLoops_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 4),
    _LcsLoopProtectionStatusLoops_Type()
)
lcsLoopProtectionStatusLoops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusLoops.setStatus("current")
_LcsLoopProtectionStatusStatus_Type = DisplayString
_LcsLoopProtectionStatusStatus_Object = MibTableColumn
lcsLoopProtectionStatusStatus = _LcsLoopProtectionStatusStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 5),
    _LcsLoopProtectionStatusStatus_Type()
)
lcsLoopProtectionStatusStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusStatus.setStatus("current")
_LcsLoopProtectionStatusLoop_Type = DisplayString
_LcsLoopProtectionStatusLoop_Object = MibTableColumn
lcsLoopProtectionStatusLoop = _LcsLoopProtectionStatusLoop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 6),
    _LcsLoopProtectionStatusLoop_Type()
)
lcsLoopProtectionStatusLoop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusLoop.setStatus("current")
_LcsLoopProtectionStatusTimeLastLoop_Type = DisplayString
_LcsLoopProtectionStatusTimeLastLoop_Object = MibTableColumn
lcsLoopProtectionStatusTimeLastLoop = _LcsLoopProtectionStatusTimeLastLoop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 7),
    _LcsLoopProtectionStatusTimeLastLoop_Type()
)
lcsLoopProtectionStatusTimeLastLoop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusTimeLastLoop.setStatus("current")
_LcsLoopProtectionStatusActPort_Type = DisplayString
_LcsLoopProtectionStatusActPort_Object = MibScalar
lcsLoopProtectionStatusActPort = _LcsLoopProtectionStatusActPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 12, 2, 1, 101),
    _LcsLoopProtectionStatusActPort_Type()
)
lcsLoopProtectionStatusActPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLoopProtectionStatusActPort.setStatus("current")
_LcsPoe_ObjectIdentity = ObjectIdentity
lcsPoe = _LcsPoe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13)
)
_LcsPoeStatus_ObjectIdentity = ObjectIdentity
lcsPoeStatus = _LcsPoeStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1)
)
_LcsPoeStatusTable_Object = MibTable
lcsPoeStatusTable = _LcsPoeStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1)
)
if mibBuilder.loadTexts:
    lcsPoeStatusTable.setStatus("current")
_LcsPoeStatusEntry_Object = MibTableRow
lcsPoeStatusEntry = _LcsPoeStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1)
)
lcsPoeStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeStatusLocalPort"),
)
if mibBuilder.loadTexts:
    lcsPoeStatusEntry.setStatus("current")


class _LcsPoeStatusLocalPort_Type(Integer32):
    """Custom type lcsPoeStatusLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_LcsPoeStatusLocalPort_Type.__name__ = "Integer32"
_LcsPoeStatusLocalPort_Object = MibTableColumn
lcsPoeStatusLocalPort = _LcsPoeStatusLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 1),
    _LcsPoeStatusLocalPort_Type()
)
lcsPoeStatusLocalPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeStatusLocalPort.setStatus("current")
_LcsPoeStatusPDclass_Type = DisplayString
_LcsPoeStatusPDclass_Object = MibTableColumn
lcsPoeStatusPDclass = _LcsPoeStatusPDclass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 2),
    _LcsPoeStatusPDclass_Type()
)
lcsPoeStatusPDclass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPDclass.setStatus("current")
_LcsPoeStatusPowerRequested_Type = DisplayString
_LcsPoeStatusPowerRequested_Object = MibTableColumn
lcsPoeStatusPowerRequested = _LcsPoeStatusPowerRequested_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 3),
    _LcsPoeStatusPowerRequested_Type()
)
lcsPoeStatusPowerRequested.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPowerRequested.setStatus("current")
_LcsPoeStatusPowerAllocated_Type = DisplayString
_LcsPoeStatusPowerAllocated_Object = MibTableColumn
lcsPoeStatusPowerAllocated = _LcsPoeStatusPowerAllocated_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 4),
    _LcsPoeStatusPowerAllocated_Type()
)
lcsPoeStatusPowerAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPowerAllocated.setStatus("current")
_LcsPoeStatusPowerUsed_Type = DisplayString
_LcsPoeStatusPowerUsed_Object = MibTableColumn
lcsPoeStatusPowerUsed = _LcsPoeStatusPowerUsed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 5),
    _LcsPoeStatusPowerUsed_Type()
)
lcsPoeStatusPowerUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPowerUsed.setStatus("current")
_LcsPoeStatusCurrentUsed_Type = DisplayString
_LcsPoeStatusCurrentUsed_Object = MibTableColumn
lcsPoeStatusCurrentUsed = _LcsPoeStatusCurrentUsed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 6),
    _LcsPoeStatusCurrentUsed_Type()
)
lcsPoeStatusCurrentUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusCurrentUsed.setStatus("current")
_LcsPoeStatusPriority_Type = DisplayString
_LcsPoeStatusPriority_Object = MibTableColumn
lcsPoeStatusPriority = _LcsPoeStatusPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 7),
    _LcsPoeStatusPriority_Type()
)
lcsPoeStatusPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPriority.setStatus("current")
_LcsPoeStatusPortStatus_Type = DisplayString
_LcsPoeStatusPortStatus_Object = MibTableColumn
lcsPoeStatusPortStatus = _LcsPoeStatusPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 1, 1, 8),
    _LcsPoeStatusPortStatus_Type()
)
lcsPoeStatusPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusPortStatus.setStatus("current")
_LcsPoeStatusTotalTable_Object = MibTable
lcsPoeStatusTotalTable = _LcsPoeStatusTotalTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2)
)
if mibBuilder.loadTexts:
    lcsPoeStatusTotalTable.setStatus("current")
_LcsPoeStatusTotalEntry_Object = MibTableRow
lcsPoeStatusTotalEntry = _LcsPoeStatusTotalEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1)
)
lcsPoeStatusTotalEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeStatusSwitchIndex"),
)
if mibBuilder.loadTexts:
    lcsPoeStatusTotalEntry.setStatus("current")


class _LcsPoeStatusSwitchIndex_Type(Integer32):
    """Custom type lcsPoeStatusSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsPoeStatusSwitchIndex_Type.__name__ = "Integer32"
_LcsPoeStatusSwitchIndex_Object = MibTableColumn
lcsPoeStatusSwitchIndex = _LcsPoeStatusSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1, 1),
    _LcsPoeStatusSwitchIndex_Type()
)
lcsPoeStatusSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeStatusSwitchIndex.setStatus("current")
_LcsPoeStatusTotalPowerRequested_Type = DisplayString
_LcsPoeStatusTotalPowerRequested_Object = MibTableColumn
lcsPoeStatusTotalPowerRequested = _LcsPoeStatusTotalPowerRequested_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1, 2),
    _LcsPoeStatusTotalPowerRequested_Type()
)
lcsPoeStatusTotalPowerRequested.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusTotalPowerRequested.setStatus("current")
_LcsPoeStatusTotalPowerAllocated_Type = DisplayString
_LcsPoeStatusTotalPowerAllocated_Object = MibTableColumn
lcsPoeStatusTotalPowerAllocated = _LcsPoeStatusTotalPowerAllocated_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1, 3),
    _LcsPoeStatusTotalPowerAllocated_Type()
)
lcsPoeStatusTotalPowerAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusTotalPowerAllocated.setStatus("current")
_LcsPoeStatusTotalPowerUsed_Type = DisplayString
_LcsPoeStatusTotalPowerUsed_Object = MibTableColumn
lcsPoeStatusTotalPowerUsed = _LcsPoeStatusTotalPowerUsed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1, 4),
    _LcsPoeStatusTotalPowerUsed_Type()
)
lcsPoeStatusTotalPowerUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusTotalPowerUsed.setStatus("current")
_LcsPoeStatusTotalCurrentUsed_Type = DisplayString
_LcsPoeStatusTotalCurrentUsed_Object = MibTableColumn
lcsPoeStatusTotalCurrentUsed = _LcsPoeStatusTotalCurrentUsed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 1, 2, 1, 5),
    _LcsPoeStatusTotalCurrentUsed_Type()
)
lcsPoeStatusTotalCurrentUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeStatusTotalCurrentUsed.setStatus("current")
_LcsPoePowerDelay_ObjectIdentity = ObjectIdentity
lcsPoePowerDelay = _LcsPoePowerDelay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2)
)
_LcsPoePowerDelayTable_Object = MibTable
lcsPoePowerDelayTable = _LcsPoePowerDelayTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2, 1)
)
if mibBuilder.loadTexts:
    lcsPoePowerDelayTable.setStatus("current")
_LcsPoePowerDelayEntry_Object = MibTableRow
lcsPoePowerDelayEntry = _LcsPoePowerDelayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2, 1, 1)
)
lcsPoePowerDelayEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoePowerDelayPort"),
)
if mibBuilder.loadTexts:
    lcsPoePowerDelayEntry.setStatus("current")


class _LcsPoePowerDelayPort_Type(Integer32):
    """Custom type lcsPoePowerDelayPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPoePowerDelayPort_Type.__name__ = "Integer32"
_LcsPoePowerDelayPort_Object = MibTableColumn
lcsPoePowerDelayPort = _LcsPoePowerDelayPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2, 1, 1, 1),
    _LcsPoePowerDelayPort_Type()
)
lcsPoePowerDelayPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoePowerDelayPort.setStatus("current")


class _LcsPoePowerDelayMode_Type(Integer32):
    """Custom type lcsPoePowerDelayMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPoePowerDelayMode_Type.__name__ = "Integer32"
_LcsPoePowerDelayMode_Object = MibTableColumn
lcsPoePowerDelayMode = _LcsPoePowerDelayMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2, 1, 1, 2),
    _LcsPoePowerDelayMode_Type()
)
lcsPoePowerDelayMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoePowerDelayMode.setStatus("current")


class _LcsPoePowerDelayTime_Type(Integer32):
    """Custom type lcsPoePowerDelayTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_LcsPoePowerDelayTime_Type.__name__ = "Integer32"
_LcsPoePowerDelayTime_Object = MibTableColumn
lcsPoePowerDelayTime = _LcsPoePowerDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 2, 1, 1, 3),
    _LcsPoePowerDelayTime_Type()
)
lcsPoePowerDelayTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoePowerDelayTime.setStatus("current")
_LcsPoeAutoCheck_ObjectIdentity = ObjectIdentity
lcsPoeAutoCheck = _LcsPoeAutoCheck_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3)
)


class _LcsPoeAutoCheckPingCheck_Type(Integer32):
    """Custom type lcsPoeAutoCheckPingCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LcsPoeAutoCheckPingCheck_Type.__name__ = "Integer32"
_LcsPoeAutoCheckPingCheck_Object = MibScalar
lcsPoeAutoCheckPingCheck = _LcsPoeAutoCheckPingCheck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 1),
    _LcsPoeAutoCheckPingCheck_Type()
)
lcsPoeAutoCheckPingCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckPingCheck.setStatus("current")
_LcsPoeAutoCheckTable_Object = MibTable
lcsPoeAutoCheckTable = _LcsPoeAutoCheckTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2)
)
if mibBuilder.loadTexts:
    lcsPoeAutoCheckTable.setStatus("current")
_LcsPoeAutoCheckEntry_Object = MibTableRow
lcsPoeAutoCheckEntry = _LcsPoeAutoCheckEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1)
)
lcsPoeAutoCheckEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeAutoCheckPort"),
)
if mibBuilder.loadTexts:
    lcsPoeAutoCheckEntry.setStatus("current")


class _LcsPoeAutoCheckPort_Type(Integer32):
    """Custom type lcsPoeAutoCheckPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPoeAutoCheckPort_Type.__name__ = "Integer32"
_LcsPoeAutoCheckPort_Object = MibTableColumn
lcsPoeAutoCheckPort = _LcsPoeAutoCheckPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 1),
    _LcsPoeAutoCheckPort_Type()
)
lcsPoeAutoCheckPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckPort.setStatus("current")
_LcsPoeAutoCheckPingIPAddress_Type = DisplayString
_LcsPoeAutoCheckPingIPAddress_Object = MibTableColumn
lcsPoeAutoCheckPingIPAddress = _LcsPoeAutoCheckPingIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 2),
    _LcsPoeAutoCheckPingIPAddress_Type()
)
lcsPoeAutoCheckPingIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckPingIPAddress.setStatus("current")


class _LcsPoeAutoCheckStartupTime_Type(Integer32):
    """Custom type lcsPoeAutoCheckStartupTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 600),
    )


_LcsPoeAutoCheckStartupTime_Type.__name__ = "Integer32"
_LcsPoeAutoCheckStartupTime_Object = MibTableColumn
lcsPoeAutoCheckStartupTime = _LcsPoeAutoCheckStartupTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 3),
    _LcsPoeAutoCheckStartupTime_Type()
)
lcsPoeAutoCheckStartupTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckStartupTime.setStatus("current")


class _LcsPoeAutoCheckIntervalTime_Type(Integer32):
    """Custom type lcsPoeAutoCheckIntervalTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 120),
    )


_LcsPoeAutoCheckIntervalTime_Type.__name__ = "Integer32"
_LcsPoeAutoCheckIntervalTime_Object = MibTableColumn
lcsPoeAutoCheckIntervalTime = _LcsPoeAutoCheckIntervalTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 4),
    _LcsPoeAutoCheckIntervalTime_Type()
)
lcsPoeAutoCheckIntervalTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckIntervalTime.setStatus("current")


class _LcsPoeAutoCheckRetryTime_Type(Integer32):
    """Custom type lcsPoeAutoCheckRetryTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsPoeAutoCheckRetryTime_Type.__name__ = "Integer32"
_LcsPoeAutoCheckRetryTime_Object = MibTableColumn
lcsPoeAutoCheckRetryTime = _LcsPoeAutoCheckRetryTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 5),
    _LcsPoeAutoCheckRetryTime_Type()
)
lcsPoeAutoCheckRetryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckRetryTime.setStatus("current")
_LcsPoeAutoCheckFailureLog_Type = DisplayString
_LcsPoeAutoCheckFailureLog_Object = MibTableColumn
lcsPoeAutoCheckFailureLog = _LcsPoeAutoCheckFailureLog_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 6),
    _LcsPoeAutoCheckFailureLog_Type()
)
lcsPoeAutoCheckFailureLog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckFailureLog.setStatus("current")


class _LcsPoeAutoCheckFailureAction_Type(Integer32):
    """Custom type lcsPoeAutoCheckFailureAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("nothing", 0),
          ("reboot", 1))
    )


_LcsPoeAutoCheckFailureAction_Type.__name__ = "Integer32"
_LcsPoeAutoCheckFailureAction_Object = MibTableColumn
lcsPoeAutoCheckFailureAction = _LcsPoeAutoCheckFailureAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 7),
    _LcsPoeAutoCheckFailureAction_Type()
)
lcsPoeAutoCheckFailureAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckFailureAction.setStatus("current")


class _LcsPoeAutoCheckRebootTime_Type(Integer32):
    """Custom type lcsPoeAutoCheckRebootTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 120),
    )


_LcsPoeAutoCheckRebootTime_Type.__name__ = "Integer32"
_LcsPoeAutoCheckRebootTime_Object = MibTableColumn
lcsPoeAutoCheckRebootTime = _LcsPoeAutoCheckRebootTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 8),
    _LcsPoeAutoCheckRebootTime_Type()
)
lcsPoeAutoCheckRebootTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckRebootTime.setStatus("current")


class _LcsPoeAutoCheckMaxRebootTimes_Type(Integer32):
    """Custom type lcsPoeAutoCheckMaxRebootTimes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_LcsPoeAutoCheckMaxRebootTimes_Type.__name__ = "Integer32"
_LcsPoeAutoCheckMaxRebootTimes_Object = MibTableColumn
lcsPoeAutoCheckMaxRebootTimes = _LcsPoeAutoCheckMaxRebootTimes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 3, 2, 1, 10),
    _LcsPoeAutoCheckMaxRebootTimes_Type()
)
lcsPoeAutoCheckMaxRebootTimes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeAutoCheckMaxRebootTimes.setStatus("current")
_LcsPoeScheduling_ObjectIdentity = ObjectIdentity
lcsPoeScheduling = _LcsPoeScheduling_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4)
)
_LcsPoeSchedulingProfileNumber_Type = Integer32
_LcsPoeSchedulingProfileNumber_Object = MibScalar
lcsPoeSchedulingProfileNumber = _LcsPoeSchedulingProfileNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 1),
    _LcsPoeSchedulingProfileNumber_Type()
)
lcsPoeSchedulingProfileNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeSchedulingProfileNumber.setStatus("current")
_LcsPoeSchedulingPorofileName_Type = DisplayString
_LcsPoeSchedulingPorofileName_Object = MibScalar
lcsPoeSchedulingPorofileName = _LcsPoeSchedulingPorofileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 2),
    _LcsPoeSchedulingPorofileName_Type()
)
lcsPoeSchedulingPorofileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeSchedulingPorofileName.setStatus("current")
_LcsPoeSchedulingTimeTable_Object = MibTable
lcsPoeSchedulingTimeTable = _LcsPoeSchedulingTimeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 3)
)
if mibBuilder.loadTexts:
    lcsPoeSchedulingTimeTable.setStatus("current")
_LcsPoeSchedulingTimeEntry_Object = MibTableRow
lcsPoeSchedulingTimeEntry = _LcsPoeSchedulingTimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 3, 1)
)
lcsPoeSchedulingTimeEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeSchedulingTimeWeekIndex"),
)
if mibBuilder.loadTexts:
    lcsPoeSchedulingTimeEntry.setStatus("current")


class _LcsPoeSchedulingTimeWeekIndex_Type(Integer32):
    """Custom type lcsPoeSchedulingTimeWeekIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_LcsPoeSchedulingTimeWeekIndex_Type.__name__ = "Integer32"
_LcsPoeSchedulingTimeWeekIndex_Object = MibTableColumn
lcsPoeSchedulingTimeWeekIndex = _LcsPoeSchedulingTimeWeekIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 3, 1, 1),
    _LcsPoeSchedulingTimeWeekIndex_Type()
)
lcsPoeSchedulingTimeWeekIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeSchedulingTimeWeekIndex.setStatus("current")
_LcsPoeSchedulingTimeStartTimeHourMinute_Type = DisplayString
_LcsPoeSchedulingTimeStartTimeHourMinute_Object = MibTableColumn
lcsPoeSchedulingTimeStartTimeHourMinute = _LcsPoeSchedulingTimeStartTimeHourMinute_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 3, 1, 2),
    _LcsPoeSchedulingTimeStartTimeHourMinute_Type()
)
lcsPoeSchedulingTimeStartTimeHourMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeSchedulingTimeStartTimeHourMinute.setStatus("current")
_LcsPoeSchedulingTimeEndTimeHourMinute_Type = DisplayString
_LcsPoeSchedulingTimeEndTimeHourMinute_Object = MibTableColumn
lcsPoeSchedulingTimeEndTimeHourMinute = _LcsPoeSchedulingTimeEndTimeHourMinute_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 4, 3, 1, 3),
    _LcsPoeSchedulingTimeEndTimeHourMinute_Type()
)
lcsPoeSchedulingTimeEndTimeHourMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeSchedulingTimeEndTimeHourMinute.setStatus("current")
_LcsPoeConfiguration_ObjectIdentity = ObjectIdentity
lcsPoeConfiguration = _LcsPoeConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5)
)


class _LcsPoeConfigurationPowerManagementMode_Type(Integer32):
    """Custom type lcsPoeConfigurationPowerManagementMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_LcsPoeConfigurationPowerManagementMode_Type.__name__ = "Integer32"
_LcsPoeConfigurationPowerManagementMode_Object = MibScalar
lcsPoeConfigurationPowerManagementMode = _LcsPoeConfigurationPowerManagementMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 1),
    _LcsPoeConfigurationPowerManagementMode_Type()
)
lcsPoeConfigurationPowerManagementMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPowerManagementMode.setStatus("current")


class _LcsPoeConfigurationLegacyPDDetection_Type(Integer32):
    """Custom type lcsPoeConfigurationLegacyPDDetection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_LcsPoeConfigurationLegacyPDDetection_Type.__name__ = "Integer32"
_LcsPoeConfigurationLegacyPDDetection_Object = MibScalar
lcsPoeConfigurationLegacyPDDetection = _LcsPoeConfigurationLegacyPDDetection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 2),
    _LcsPoeConfigurationLegacyPDDetection_Type()
)
lcsPoeConfigurationLegacyPDDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationLegacyPDDetection.setStatus("current")
_LcsPoeConfigurationTable_Object = MibTable
lcsPoeConfigurationTable = _LcsPoeConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 4)
)
if mibBuilder.loadTexts:
    lcsPoeConfigurationTable.setStatus("current")
_LcsPoeConfigurationEntry_Object = MibTableRow
lcsPoeConfigurationEntry = _LcsPoeConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 4, 1)
)
lcsPoeConfigurationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeConfigurationSwitch"),
)
if mibBuilder.loadTexts:
    lcsPoeConfigurationEntry.setStatus("current")


class _LcsPoeConfigurationSwitch_Type(Integer32):
    """Custom type lcsPoeConfigurationSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsPoeConfigurationSwitch_Type.__name__ = "Integer32"
_LcsPoeConfigurationSwitch_Object = MibTableColumn
lcsPoeConfigurationSwitch = _LcsPoeConfigurationSwitch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 4, 1, 1),
    _LcsPoeConfigurationSwitch_Type()
)
lcsPoeConfigurationSwitch.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeConfigurationSwitch.setStatus("current")
_LcsPoeConfigurationPoEFirmwareVersion_Type = DisplayString
_LcsPoeConfigurationPoEFirmwareVersion_Object = MibTableColumn
lcsPoeConfigurationPoEFirmwareVersion = _LcsPoeConfigurationPoEFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 4, 1, 2),
    _LcsPoeConfigurationPoEFirmwareVersion_Type()
)
lcsPoeConfigurationPoEFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPoEFirmwareVersion.setStatus("current")


class _LcsPoeConfigurationPrimaryPowerSupply_Type(Integer32):
    """Custom type lcsPoeConfigurationPrimaryPowerSupply based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2000),
    )


_LcsPoeConfigurationPrimaryPowerSupply_Type.__name__ = "Integer32"
_LcsPoeConfigurationPrimaryPowerSupply_Object = MibTableColumn
lcsPoeConfigurationPrimaryPowerSupply = _LcsPoeConfigurationPrimaryPowerSupply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 4, 1, 3),
    _LcsPoeConfigurationPrimaryPowerSupply_Type()
)
lcsPoeConfigurationPrimaryPowerSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPrimaryPowerSupply.setStatus("current")
_LcsPoeConfigurationPortTable_Object = MibTable
lcsPoeConfigurationPortTable = _LcsPoeConfigurationPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5)
)
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortTable.setStatus("current")
_LcsPoeConfigurationPortEntry_Object = MibTableRow
lcsPoeConfigurationPortEntry = _LcsPoeConfigurationPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1)
)
lcsPoeConfigurationPortEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeConfigurationPort"),
)
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortEntry.setStatus("current")


class _LcsPoeConfigurationPort_Type(Integer32):
    """Custom type lcsPoeConfigurationPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPoeConfigurationPort_Type.__name__ = "Integer32"
_LcsPoeConfigurationPort_Object = MibTableColumn
lcsPoeConfigurationPort = _LcsPoeConfigurationPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 1),
    _LcsPoeConfigurationPort_Type()
)
lcsPoeConfigurationPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPort.setStatus("current")


class _LcsPoeConfigurationPortPoEMode_Type(Integer32):
    """Custom type lcsPoeConfigurationPortPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("poe", 1),
          ("4pair60W", 2),
          ("4pair90W", 3),
          ("8023bt", 4))
    )


_LcsPoeConfigurationPortPoEMode_Type.__name__ = "Integer32"
_LcsPoeConfigurationPortPoEMode_Object = MibTableColumn
lcsPoeConfigurationPortPoEMode = _LcsPoeConfigurationPortPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 2),
    _LcsPoeConfigurationPortPoEMode_Type()
)
lcsPoeConfigurationPortPoEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortPoEMode.setStatus("current")


class _LcsPoeConfigurationPortPriority_Type(Integer32):
    """Custom type lcsPoeConfigurationPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("low", 0),
          ("high", 1),
          ("critical", 2))
    )


_LcsPoeConfigurationPortPriority_Type.__name__ = "Integer32"
_LcsPoeConfigurationPortPriority_Object = MibTableColumn
lcsPoeConfigurationPortPriority = _LcsPoeConfigurationPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 3),
    _LcsPoeConfigurationPortPriority_Type()
)
lcsPoeConfigurationPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortPriority.setStatus("current")
_LcsPoeConfigurationPortMaximumPower_Type = DisplayString
_LcsPoeConfigurationPortMaximumPower_Object = MibTableColumn
lcsPoeConfigurationPortMaximumPower = _LcsPoeConfigurationPortMaximumPower_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 4),
    _LcsPoeConfigurationPortMaximumPower_Type()
)
lcsPoeConfigurationPortMaximumPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortMaximumPower.setStatus("current")


class _LcsPoeConfigurationPortDetection_Type(Integer32):
    """Custom type lcsPoeConfigurationPortDetection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsPoeConfigurationPortDetection_Type.__name__ = "Integer32"
_LcsPoeConfigurationPortDetection_Object = MibTableColumn
lcsPoeConfigurationPortDetection = _LcsPoeConfigurationPortDetection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 5),
    _LcsPoeConfigurationPortDetection_Type()
)
lcsPoeConfigurationPortDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortDetection.setStatus("current")
_LcsPoeConfigurationPortPoEScheduleByProfileName_Type = DisplayString
_LcsPoeConfigurationPortPoEScheduleByProfileName_Object = MibTableColumn
lcsPoeConfigurationPortPoEScheduleByProfileName = _LcsPoeConfigurationPortPoEScheduleByProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 7),
    _LcsPoeConfigurationPortPoEScheduleByProfileName_Type()
)
lcsPoeConfigurationPortPoEScheduleByProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortPoEScheduleByProfileName.setStatus("current")


class _LcsPoeConfigurationPortDelayMode_Type(Integer32):
    """Custom type lcsPoeConfigurationPortDelayMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_LcsPoeConfigurationPortDelayMode_Type.__name__ = "Integer32"
_LcsPoeConfigurationPortDelayMode_Object = MibTableColumn
lcsPoeConfigurationPortDelayMode = _LcsPoeConfigurationPortDelayMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 8),
    _LcsPoeConfigurationPortDelayMode_Type()
)
lcsPoeConfigurationPortDelayMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortDelayMode.setStatus("current")


class _LcsPoeConfigurationPortDelayTime_Type(Integer32):
    """Custom type lcsPoeConfigurationPortDelayTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_LcsPoeConfigurationPortDelayTime_Type.__name__ = "Integer32"
_LcsPoeConfigurationPortDelayTime_Object = MibTableColumn
lcsPoeConfigurationPortDelayTime = _LcsPoeConfigurationPortDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 5, 5, 1, 9),
    _LcsPoeConfigurationPortDelayTime_Type()
)
lcsPoeConfigurationPortDelayTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeConfigurationPortDelayTime.setStatus("current")
_LcsPoeChipsetRebootSchedule_ObjectIdentity = ObjectIdentity
lcsPoeChipsetRebootSchedule = _LcsPoeChipsetRebootSchedule_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6)
)
_LcsPoeChipsetRebootMode_Type = Integer32
_LcsPoeChipsetRebootMode_Object = MibScalar
lcsPoeChipsetRebootMode = _LcsPoeChipsetRebootMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 1),
    _LcsPoeChipsetRebootMode_Type()
)
lcsPoeChipsetRebootMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootMode.setStatus("current")
_LcsPoeChipsetRebootTimeTable_Object = MibTable
lcsPoeChipsetRebootTimeTable = _LcsPoeChipsetRebootTimeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 2)
)
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootTimeTable.setStatus("current")
_LcsPoeChipsetRebootTimeEntry_Object = MibTableRow
lcsPoeChipsetRebootTimeEntry = _LcsPoeChipsetRebootTimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 2, 1)
)
lcsPoeChipsetRebootTimeEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPoeChipsetRebootWeekIndex"),
)
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootTimeEntry.setStatus("current")


class _LcsPoeChipsetRebootWeekIndex_Type(Integer32):
    """Custom type lcsPoeChipsetRebootWeekIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_LcsPoeChipsetRebootWeekIndex_Type.__name__ = "Integer32"
_LcsPoeChipsetRebootWeekIndex_Object = MibTableColumn
lcsPoeChipsetRebootWeekIndex = _LcsPoeChipsetRebootWeekIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 2, 1, 1),
    _LcsPoeChipsetRebootWeekIndex_Type()
)
lcsPoeChipsetRebootWeekIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootWeekIndex.setStatus("current")


class _LcsPoeChipsetRebootTimeHour_Type(Integer32):
    """Custom type lcsPoeChipsetRebootTimeHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 23),
    )


_LcsPoeChipsetRebootTimeHour_Type.__name__ = "Integer32"
_LcsPoeChipsetRebootTimeHour_Object = MibTableColumn
lcsPoeChipsetRebootTimeHour = _LcsPoeChipsetRebootTimeHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 2, 1, 2),
    _LcsPoeChipsetRebootTimeHour_Type()
)
lcsPoeChipsetRebootTimeHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootTimeHour.setStatus("current")


class _LcsPoeChipsetRebootTimeMinute_Type(Integer32):
    """Custom type lcsPoeChipsetRebootTimeMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 55),
    )


_LcsPoeChipsetRebootTimeMinute_Type.__name__ = "Integer32"
_LcsPoeChipsetRebootTimeMinute_Object = MibTableColumn
lcsPoeChipsetRebootTimeMinute = _LcsPoeChipsetRebootTimeMinute_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 13, 6, 2, 1, 3),
    _LcsPoeChipsetRebootTimeMinute_Type()
)
lcsPoeChipsetRebootTimeMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPoeChipsetRebootTimeMinute.setStatus("current")
_LcsAAAMIB_ObjectIdentity = ObjectIdentity
lcsAAAMIB = _LcsAAAMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15)
)
_LcsAAA_ObjectIdentity = ObjectIdentity
lcsAAA = _LcsAAA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1)
)
_LcsRADIUS_ObjectIdentity = ObjectIdentity
lcsRADIUS = _LcsRADIUS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1)
)
_LcsRADIUSGlobalConfig_ObjectIdentity = ObjectIdentity
lcsRADIUSGlobalConfig = _LcsRADIUSGlobalConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1)
)


class _LcsRADIUSGlobalConfigTimeout_Type(Integer32):
    """Custom type lcsRADIUSGlobalConfigTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_LcsRADIUSGlobalConfigTimeout_Type.__name__ = "Integer32"
_LcsRADIUSGlobalConfigTimeout_Object = MibScalar
lcsRADIUSGlobalConfigTimeout = _LcsRADIUSGlobalConfigTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 1),
    _LcsRADIUSGlobalConfigTimeout_Type()
)
lcsRADIUSGlobalConfigTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigTimeout.setStatus("current")


class _LcsRADIUSGlobalConfigRetransmit_Type(Integer32):
    """Custom type lcsRADIUSGlobalConfigRetransmit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_LcsRADIUSGlobalConfigRetransmit_Type.__name__ = "Integer32"
_LcsRADIUSGlobalConfigRetransmit_Object = MibScalar
lcsRADIUSGlobalConfigRetransmit = _LcsRADIUSGlobalConfigRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 2),
    _LcsRADIUSGlobalConfigRetransmit_Type()
)
lcsRADIUSGlobalConfigRetransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigRetransmit.setStatus("current")


class _LcsRADIUSGlobalConfigDeadtime_Type(Integer32):
    """Custom type lcsRADIUSGlobalConfigDeadtime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1440),
    )


_LcsRADIUSGlobalConfigDeadtime_Type.__name__ = "Integer32"
_LcsRADIUSGlobalConfigDeadtime_Object = MibScalar
lcsRADIUSGlobalConfigDeadtime = _LcsRADIUSGlobalConfigDeadtime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 3),
    _LcsRADIUSGlobalConfigDeadtime_Type()
)
lcsRADIUSGlobalConfigDeadtime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigDeadtime.setStatus("current")
_LcsRADIUSGlobalConfigKey_Type = DisplayString
_LcsRADIUSGlobalConfigKey_Object = MibScalar
lcsRADIUSGlobalConfigKey = _LcsRADIUSGlobalConfigKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 4),
    _LcsRADIUSGlobalConfigKey_Type()
)
lcsRADIUSGlobalConfigKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigKey.setStatus("current")
_LcsRADIUSGlobalConfigNASIPv4_Type = IpAddress
_LcsRADIUSGlobalConfigNASIPv4_Object = MibScalar
lcsRADIUSGlobalConfigNASIPv4 = _LcsRADIUSGlobalConfigNASIPv4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 5),
    _LcsRADIUSGlobalConfigNASIPv4_Type()
)
lcsRADIUSGlobalConfigNASIPv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigNASIPv4.setStatus("current")
_LcsRADIUSGlobalConfigNASIPv6_Type = DisplayString
_LcsRADIUSGlobalConfigNASIPv6_Object = MibScalar
lcsRADIUSGlobalConfigNASIPv6 = _LcsRADIUSGlobalConfigNASIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 6),
    _LcsRADIUSGlobalConfigNASIPv6_Type()
)
lcsRADIUSGlobalConfigNASIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigNASIPv6.setStatus("current")
_LcsRADIUSGlobalConfigNASIdentifier_Type = DisplayString
_LcsRADIUSGlobalConfigNASIdentifier_Object = MibScalar
lcsRADIUSGlobalConfigNASIdentifier = _LcsRADIUSGlobalConfigNASIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 7),
    _LcsRADIUSGlobalConfigNASIdentifier_Type()
)
lcsRADIUSGlobalConfigNASIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigNASIdentifier.setStatus("current")
_LcsRADIUSGlobalConfigKeyHashed_Type = DisplayString
_LcsRADIUSGlobalConfigKeyHashed_Object = MibScalar
lcsRADIUSGlobalConfigKeyHashed = _LcsRADIUSGlobalConfigKeyHashed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 50),
    _LcsRADIUSGlobalConfigKeyHashed_Type()
)
lcsRADIUSGlobalConfigKeyHashed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigKeyHashed.setStatus("current")
_LcsRADIUSGlobalConfigKeyWrite_Type = DisplayString
_LcsRADIUSGlobalConfigKeyWrite_Object = MibScalar
lcsRADIUSGlobalConfigKeyWrite = _LcsRADIUSGlobalConfigKeyWrite_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 51),
    _LcsRADIUSGlobalConfigKeyWrite_Type()
)
lcsRADIUSGlobalConfigKeyWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSGlobalConfigKeyWrite.setStatus("current")
_LcsRADIUSMacformatTable_Object = MibTable
lcsRADIUSMacformatTable = _LcsRADIUSMacformatTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100)
)
if mibBuilder.loadTexts:
    lcsRADIUSMacformatTable.setStatus("current")
_LcsRADIUSMacformatEntry_Object = MibTableRow
lcsRADIUSMacformatEntry = _LcsRADIUSMacformatEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100, 1)
)
lcsRADIUSMacformatEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsRADIUSMacformatIndex"),
)
if mibBuilder.loadTexts:
    lcsRADIUSMacformatEntry.setStatus("current")


class _LcsRADIUSMacformatIndex_Type(Integer32):
    """Custom type lcsRADIUSMacformatIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("called-station", 1),
          ("calling-station", 2),
          ("macbased-identity", 3))
    )


_LcsRADIUSMacformatIndex_Type.__name__ = "Integer32"
_LcsRADIUSMacformatIndex_Object = MibTableColumn
lcsRADIUSMacformatIndex = _LcsRADIUSMacformatIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100, 1, 1),
    _LcsRADIUSMacformatIndex_Type()
)
lcsRADIUSMacformatIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsRADIUSMacformatIndex.setStatus("current")


class _LcsRADIUSMacformatGroupsize_Type(Integer32):
    """Custom type lcsRADIUSMacformatGroupsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(12, 12),
    )


_LcsRADIUSMacformatGroupsize_Type.__name__ = "Integer32"
_LcsRADIUSMacformatGroupsize_Object = MibTableColumn
lcsRADIUSMacformatGroupsize = _LcsRADIUSMacformatGroupsize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100, 1, 2),
    _LcsRADIUSMacformatGroupsize_Type()
)
lcsRADIUSMacformatGroupsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSMacformatGroupsize.setStatus("current")


class _LcsRADIUSMacformatSeparator_Type(Integer32):
    """Custom type lcsRADIUSMacformatSeparator based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hypen", 0),
          ("colon", 1),
          ("dot", 2))
    )


_LcsRADIUSMacformatSeparator_Type.__name__ = "Integer32"
_LcsRADIUSMacformatSeparator_Object = MibTableColumn
lcsRADIUSMacformatSeparator = _LcsRADIUSMacformatSeparator_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100, 1, 3),
    _LcsRADIUSMacformatSeparator_Type()
)
lcsRADIUSMacformatSeparator.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSMacformatSeparator.setStatus("current")


class _LcsRADIUSMacformatCase_Type(Integer32):
    """Custom type lcsRADIUSMacformatCase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lowercase", 0),
          ("uppercase", 1))
    )


_LcsRADIUSMacformatCase_Type.__name__ = "Integer32"
_LcsRADIUSMacformatCase_Object = MibTableColumn
lcsRADIUSMacformatCase = _LcsRADIUSMacformatCase_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 1, 100, 1, 4),
    _LcsRADIUSMacformatCase_Type()
)
lcsRADIUSMacformatCase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRADIUSMacformatCase.setStatus("current")
_LcsRADIUSServerConfigTable_Object = MibTable
lcsRADIUSServerConfigTable = _LcsRADIUSServerConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2)
)
if mibBuilder.loadTexts:
    lcsRADIUSServerConfigTable.setStatus("current")
_LcsRADIUSServerConfigEntry_Object = MibTableRow
lcsRADIUSServerConfigEntry = _LcsRADIUSServerConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1)
)
lcsRADIUSServerConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsRADIUSServerConfServerNo"),
)
if mibBuilder.loadTexts:
    lcsRADIUSServerConfigEntry.setStatus("current")


class _LcsRADIUSServerConfServerNo_Type(Integer32):
    """Custom type lcsRADIUSServerConfServerNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsRADIUSServerConfServerNo_Type.__name__ = "Integer32"
_LcsRADIUSServerConfServerNo_Object = MibTableColumn
lcsRADIUSServerConfServerNo = _LcsRADIUSServerConfServerNo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 1),
    _LcsRADIUSServerConfServerNo_Type()
)
lcsRADIUSServerConfServerNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfServerNo.setStatus("current")
_LcsRADIUSServerConfHostname_Type = DisplayString
_LcsRADIUSServerConfHostname_Object = MibTableColumn
lcsRADIUSServerConfHostname = _LcsRADIUSServerConfHostname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 2),
    _LcsRADIUSServerConfHostname_Type()
)
lcsRADIUSServerConfHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfHostname.setStatus("current")


class _LcsRADIUSServerConfAuthPort_Type(Integer32):
    """Custom type lcsRADIUSServerConfAuthPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LcsRADIUSServerConfAuthPort_Type.__name__ = "Integer32"
_LcsRADIUSServerConfAuthPort_Object = MibTableColumn
lcsRADIUSServerConfAuthPort = _LcsRADIUSServerConfAuthPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 3),
    _LcsRADIUSServerConfAuthPort_Type()
)
lcsRADIUSServerConfAuthPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfAuthPort.setStatus("current")


class _LcsRADIUSServerConfAcctPort_Type(Integer32):
    """Custom type lcsRADIUSServerConfAcctPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LcsRADIUSServerConfAcctPort_Type.__name__ = "Integer32"
_LcsRADIUSServerConfAcctPort_Object = MibTableColumn
lcsRADIUSServerConfAcctPort = _LcsRADIUSServerConfAcctPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 4),
    _LcsRADIUSServerConfAcctPort_Type()
)
lcsRADIUSServerConfAcctPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfAcctPort.setStatus("current")


class _LcsRADIUSServerConfTimeout_Type(Integer32):
    """Custom type lcsRADIUSServerConfTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_LcsRADIUSServerConfTimeout_Type.__name__ = "Integer32"
_LcsRADIUSServerConfTimeout_Object = MibTableColumn
lcsRADIUSServerConfTimeout = _LcsRADIUSServerConfTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 5),
    _LcsRADIUSServerConfTimeout_Type()
)
lcsRADIUSServerConfTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfTimeout.setStatus("current")


class _LcsRADIUSServerConfRetransmit_Type(Integer32):
    """Custom type lcsRADIUSServerConfRetransmit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_LcsRADIUSServerConfRetransmit_Type.__name__ = "Integer32"
_LcsRADIUSServerConfRetransmit_Object = MibTableColumn
lcsRADIUSServerConfRetransmit = _LcsRADIUSServerConfRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 6),
    _LcsRADIUSServerConfRetransmit_Type()
)
lcsRADIUSServerConfRetransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfRetransmit.setStatus("current")
_LcsRADIUSServerConfKey_Type = DisplayString
_LcsRADIUSServerConfKey_Object = MibTableColumn
lcsRADIUSServerConfKey = _LcsRADIUSServerConfKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 7),
    _LcsRADIUSServerConfKey_Type()
)
lcsRADIUSServerConfKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfKey.setStatus("current")
_LcsRADIUSServerConfRowStatus_Type = RowStatus
_LcsRADIUSServerConfRowStatus_Object = MibTableColumn
lcsRADIUSServerConfRowStatus = _LcsRADIUSServerConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 8),
    _LcsRADIUSServerConfRowStatus_Type()
)
lcsRADIUSServerConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfRowStatus.setStatus("current")
_LcsRADIUSServerConfKeyHashed_Type = DisplayString
_LcsRADIUSServerConfKeyHashed_Object = MibScalar
lcsRADIUSServerConfKeyHashed = _LcsRADIUSServerConfKeyHashed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 50),
    _LcsRADIUSServerConfKeyHashed_Type()
)
lcsRADIUSServerConfKeyHashed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfKeyHashed.setStatus("current")
_LcsRADIUSServerConfKeyWrite_Type = DisplayString
_LcsRADIUSServerConfKeyWrite_Object = MibScalar
lcsRADIUSServerConfKeyWrite = _LcsRADIUSServerConfKeyWrite_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 2, 1, 51),
    _LcsRADIUSServerConfKeyWrite_Type()
)
lcsRADIUSServerConfKeyWrite.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsRADIUSServerConfKeyWrite.setStatus("current")
_LcsRADIUSDetailTable_Object = MibTable
lcsRADIUSDetailTable = _LcsRADIUSDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3)
)
if mibBuilder.loadTexts:
    lcsRADIUSDetailTable.setStatus("current")
_LcsRADIUSDetailEntry_Object = MibTableRow
lcsRADIUSDetailEntry = _LcsRADIUSDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1)
)
lcsRADIUSDetailEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsRADIUSServerConfServerNo"),
)
if mibBuilder.loadTexts:
    lcsRADIUSDetailEntry.setStatus("current")
_LcsRADIUSAuthIPAddress_Type = DisplayString
_LcsRADIUSAuthIPAddress_Object = MibTableColumn
lcsRADIUSAuthIPAddress = _LcsRADIUSAuthIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 2),
    _LcsRADIUSAuthIPAddress_Type()
)
lcsRADIUSAuthIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthIPAddress.setStatus("current")
_LcsRADIUSAuthStatus_Type = DisplayString
_LcsRADIUSAuthStatus_Object = MibTableColumn
lcsRADIUSAuthStatus = _LcsRADIUSAuthStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 3),
    _LcsRADIUSAuthStatus_Type()
)
lcsRADIUSAuthStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthStatus.setStatus("current")


class _LcsRADIUSAuthRoundTripTime_Type(Integer32):
    """Custom type lcsRADIUSAuthRoundTripTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_LcsRADIUSAuthRoundTripTime_Type.__name__ = "Integer32"
_LcsRADIUSAuthRoundTripTime_Object = MibTableColumn
lcsRADIUSAuthRoundTripTime = _LcsRADIUSAuthRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 4),
    _LcsRADIUSAuthRoundTripTime_Type()
)
lcsRADIUSAuthRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRoundTripTime.setStatus("current")
_LcsRADIUSAuthRxAccessAccept_Type = Counter32
_LcsRADIUSAuthRxAccessAccept_Object = MibTableColumn
lcsRADIUSAuthRxAccessAccept = _LcsRADIUSAuthRxAccessAccept_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 5),
    _LcsRADIUSAuthRxAccessAccept_Type()
)
lcsRADIUSAuthRxAccessAccept.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxAccessAccept.setStatus("current")
_LcsRADIUSAuthRxAccessReject_Type = Counter32
_LcsRADIUSAuthRxAccessReject_Object = MibTableColumn
lcsRADIUSAuthRxAccessReject = _LcsRADIUSAuthRxAccessReject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 6),
    _LcsRADIUSAuthRxAccessReject_Type()
)
lcsRADIUSAuthRxAccessReject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxAccessReject.setStatus("current")
_LcsRADIUSAuthRxAccessChallenge_Type = Counter32
_LcsRADIUSAuthRxAccessChallenge_Object = MibTableColumn
lcsRADIUSAuthRxAccessChallenge = _LcsRADIUSAuthRxAccessChallenge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 7),
    _LcsRADIUSAuthRxAccessChallenge_Type()
)
lcsRADIUSAuthRxAccessChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxAccessChallenge.setStatus("current")
_LcsRADIUSAuthRxAccessResponse_Type = Counter32
_LcsRADIUSAuthRxAccessResponse_Object = MibTableColumn
lcsRADIUSAuthRxAccessResponse = _LcsRADIUSAuthRxAccessResponse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 8),
    _LcsRADIUSAuthRxAccessResponse_Type()
)
lcsRADIUSAuthRxAccessResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxAccessResponse.setStatus("current")
_LcsRADIUSAuthRxBadAuth_Type = Counter32
_LcsRADIUSAuthRxBadAuth_Object = MibTableColumn
lcsRADIUSAuthRxBadAuth = _LcsRADIUSAuthRxBadAuth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 9),
    _LcsRADIUSAuthRxBadAuth_Type()
)
lcsRADIUSAuthRxBadAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxBadAuth.setStatus("current")
_LcsRADIUSAuthRxUnknownType_Type = Counter32
_LcsRADIUSAuthRxUnknownType_Object = MibTableColumn
lcsRADIUSAuthRxUnknownType = _LcsRADIUSAuthRxUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 10),
    _LcsRADIUSAuthRxUnknownType_Type()
)
lcsRADIUSAuthRxUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxUnknownType.setStatus("current")
_LcsRADIUSAuthRxPacketsDropped_Type = Counter32
_LcsRADIUSAuthRxPacketsDropped_Object = MibTableColumn
lcsRADIUSAuthRxPacketsDropped = _LcsRADIUSAuthRxPacketsDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 11),
    _LcsRADIUSAuthRxPacketsDropped_Type()
)
lcsRADIUSAuthRxPacketsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthRxPacketsDropped.setStatus("current")
_LcsRADIUSAuthTxAccessRequest_Type = Counter32
_LcsRADIUSAuthTxAccessRequest_Object = MibTableColumn
lcsRADIUSAuthTxAccessRequest = _LcsRADIUSAuthTxAccessRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 12),
    _LcsRADIUSAuthTxAccessRequest_Type()
)
lcsRADIUSAuthTxAccessRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthTxAccessRequest.setStatus("current")
_LcsRADIUSAuthTxAccessRetransmission_Type = Counter32
_LcsRADIUSAuthTxAccessRetransmission_Object = MibTableColumn
lcsRADIUSAuthTxAccessRetransmission = _LcsRADIUSAuthTxAccessRetransmission_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 13),
    _LcsRADIUSAuthTxAccessRetransmission_Type()
)
lcsRADIUSAuthTxAccessRetransmission.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthTxAccessRetransmission.setStatus("current")
_LcsRADIUSAuthTxPendingRequest_Type = Counter32
_LcsRADIUSAuthTxPendingRequest_Object = MibTableColumn
lcsRADIUSAuthTxPendingRequest = _LcsRADIUSAuthTxPendingRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 14),
    _LcsRADIUSAuthTxPendingRequest_Type()
)
lcsRADIUSAuthTxPendingRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthTxPendingRequest.setStatus("current")
_LcsRADIUSAuthTxTimeout_Type = Counter32
_LcsRADIUSAuthTxTimeout_Object = MibTableColumn
lcsRADIUSAuthTxTimeout = _LcsRADIUSAuthTxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 15),
    _LcsRADIUSAuthTxTimeout_Type()
)
lcsRADIUSAuthTxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAuthTxTimeout.setStatus("current")
_LcsRADIUSAccountIPAddress_Type = IpAddress
_LcsRADIUSAccountIPAddress_Object = MibTableColumn
lcsRADIUSAccountIPAddress = _LcsRADIUSAccountIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 16),
    _LcsRADIUSAccountIPAddress_Type()
)
lcsRADIUSAccountIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountIPAddress.setStatus("current")
_LcsRADIUSAccountStatus_Type = DisplayString
_LcsRADIUSAccountStatus_Object = MibTableColumn
lcsRADIUSAccountStatus = _LcsRADIUSAccountStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 17),
    _LcsRADIUSAccountStatus_Type()
)
lcsRADIUSAccountStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountStatus.setStatus("current")


class _LcsRADIUSAccountRoundTripTime_Type(Integer32):
    """Custom type lcsRADIUSAccountRoundTripTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_LcsRADIUSAccountRoundTripTime_Type.__name__ = "Integer32"
_LcsRADIUSAccountRoundTripTime_Object = MibTableColumn
lcsRADIUSAccountRoundTripTime = _LcsRADIUSAccountRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 18),
    _LcsRADIUSAccountRoundTripTime_Type()
)
lcsRADIUSAccountRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRoundTripTime.setStatus("current")
_LcsRADIUSAccountRxResponses_Type = Counter32
_LcsRADIUSAccountRxResponses_Object = MibTableColumn
lcsRADIUSAccountRxResponses = _LcsRADIUSAccountRxResponses_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 19),
    _LcsRADIUSAccountRxResponses_Type()
)
lcsRADIUSAccountRxResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRxResponses.setStatus("current")
_LcsRADIUSAccountRxMalformedResponse_Type = Counter32
_LcsRADIUSAccountRxMalformedResponse_Object = MibTableColumn
lcsRADIUSAccountRxMalformedResponse = _LcsRADIUSAccountRxMalformedResponse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 20),
    _LcsRADIUSAccountRxMalformedResponse_Type()
)
lcsRADIUSAccountRxMalformedResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRxMalformedResponse.setStatus("current")
_LcsRADIUSAccountRxBadAuth_Type = Counter32
_LcsRADIUSAccountRxBadAuth_Object = MibTableColumn
lcsRADIUSAccountRxBadAuth = _LcsRADIUSAccountRxBadAuth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 21),
    _LcsRADIUSAccountRxBadAuth_Type()
)
lcsRADIUSAccountRxBadAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRxBadAuth.setStatus("current")
_LcsRADIUSAccountRxUnknownType_Type = Counter32
_LcsRADIUSAccountRxUnknownType_Object = MibTableColumn
lcsRADIUSAccountRxUnknownType = _LcsRADIUSAccountRxUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 22),
    _LcsRADIUSAccountRxUnknownType_Type()
)
lcsRADIUSAccountRxUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRxUnknownType.setStatus("current")
_LcsRADIUSAccountRxPacketsDrop_Type = Counter32
_LcsRADIUSAccountRxPacketsDrop_Object = MibTableColumn
lcsRADIUSAccountRxPacketsDrop = _LcsRADIUSAccountRxPacketsDrop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 23),
    _LcsRADIUSAccountRxPacketsDrop_Type()
)
lcsRADIUSAccountRxPacketsDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountRxPacketsDrop.setStatus("current")
_LcsRADIUSAccountTxRequest_Type = Counter32
_LcsRADIUSAccountTxRequest_Object = MibTableColumn
lcsRADIUSAccountTxRequest = _LcsRADIUSAccountTxRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 24),
    _LcsRADIUSAccountTxRequest_Type()
)
lcsRADIUSAccountTxRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountTxRequest.setStatus("current")
_LcsRADIUSAccountTxRetransmission_Type = Counter32
_LcsRADIUSAccountTxRetransmission_Object = MibTableColumn
lcsRADIUSAccountTxRetransmission = _LcsRADIUSAccountTxRetransmission_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 25),
    _LcsRADIUSAccountTxRetransmission_Type()
)
lcsRADIUSAccountTxRetransmission.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountTxRetransmission.setStatus("current")
_LcsRADIUSAccountTxPendingRequest_Type = Counter32
_LcsRADIUSAccountTxPendingRequest_Object = MibTableColumn
lcsRADIUSAccountTxPendingRequest = _LcsRADIUSAccountTxPendingRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 26),
    _LcsRADIUSAccountTxPendingRequest_Type()
)
lcsRADIUSAccountTxPendingRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountTxPendingRequest.setStatus("current")
_LcsRADIUSAccountTxTimeout_Type = Counter32
_LcsRADIUSAccountTxTimeout_Object = MibTableColumn
lcsRADIUSAccountTxTimeout = _LcsRADIUSAccountTxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 27),
    _LcsRADIUSAccountTxTimeout_Type()
)
lcsRADIUSAccountTxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSAccountTxTimeout.setStatus("current")
_LcsRADIUSDetailClearCmd_Type = ActivateCmd
_LcsRADIUSDetailClearCmd_Object = MibTableColumn
lcsRADIUSDetailClearCmd = _LcsRADIUSDetailClearCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 1, 3, 1, 28),
    _LcsRADIUSDetailClearCmd_Type()
)
lcsRADIUSDetailClearCmd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRADIUSDetailClearCmd.setStatus("current")
_LcsTACACS_ObjectIdentity = ObjectIdentity
lcsTACACS = _LcsTACACS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2)
)


class _LcsTACACSGlobalConfigTimeout_Type(Integer32):
    """Custom type lcsTACACSGlobalConfigTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_LcsTACACSGlobalConfigTimeout_Type.__name__ = "Integer32"
_LcsTACACSGlobalConfigTimeout_Object = MibScalar
lcsTACACSGlobalConfigTimeout = _LcsTACACSGlobalConfigTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 1),
    _LcsTACACSGlobalConfigTimeout_Type()
)
lcsTACACSGlobalConfigTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTACACSGlobalConfigTimeout.setStatus("current")


class _LcsTACACSGlobalConfigDeadtime_Type(Integer32):
    """Custom type lcsTACACSGlobalConfigDeadtime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1440),
    )


_LcsTACACSGlobalConfigDeadtime_Type.__name__ = "Integer32"
_LcsTACACSGlobalConfigDeadtime_Object = MibScalar
lcsTACACSGlobalConfigDeadtime = _LcsTACACSGlobalConfigDeadtime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 2),
    _LcsTACACSGlobalConfigDeadtime_Type()
)
lcsTACACSGlobalConfigDeadtime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTACACSGlobalConfigDeadtime.setStatus("current")
_LcsTACACSGlobalConfigKey_Type = DisplayString
_LcsTACACSGlobalConfigKey_Object = MibScalar
lcsTACACSGlobalConfigKey = _LcsTACACSGlobalConfigKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 3),
    _LcsTACACSGlobalConfigKey_Type()
)
lcsTACACSGlobalConfigKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTACACSGlobalConfigKey.setStatus("current")
_LcsTACACSServerConfigTable_Object = MibTable
lcsTACACSServerConfigTable = _LcsTACACSServerConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4)
)
if mibBuilder.loadTexts:
    lcsTACACSServerConfigTable.setStatus("current")
_LcsTACACSServerConfigEntry_Object = MibTableRow
lcsTACACSServerConfigEntry = _LcsTACACSServerConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1)
)
lcsTACACSServerConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsTACACSServerConfigServerNo"),
)
if mibBuilder.loadTexts:
    lcsTACACSServerConfigEntry.setStatus("current")


class _LcsTACACSServerConfigServerNo_Type(Integer32):
    """Custom type lcsTACACSServerConfigServerNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsTACACSServerConfigServerNo_Type.__name__ = "Integer32"
_LcsTACACSServerConfigServerNo_Object = MibTableColumn
lcsTACACSServerConfigServerNo = _LcsTACACSServerConfigServerNo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 1),
    _LcsTACACSServerConfigServerNo_Type()
)
lcsTACACSServerConfigServerNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigServerNo.setStatus("current")
_LcsTACACSServerConfigHostname_Type = DisplayString
_LcsTACACSServerConfigHostname_Object = MibTableColumn
lcsTACACSServerConfigHostname = _LcsTACACSServerConfigHostname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 2),
    _LcsTACACSServerConfigHostname_Type()
)
lcsTACACSServerConfigHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigHostname.setStatus("current")


class _LcsTACACSServerConfigPort_Type(Integer32):
    """Custom type lcsTACACSServerConfigPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LcsTACACSServerConfigPort_Type.__name__ = "Integer32"
_LcsTACACSServerConfigPort_Object = MibTableColumn
lcsTACACSServerConfigPort = _LcsTACACSServerConfigPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 3),
    _LcsTACACSServerConfigPort_Type()
)
lcsTACACSServerConfigPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigPort.setStatus("current")


class _LcsTACACSServerConfigTimeout_Type(Integer32):
    """Custom type lcsTACACSServerConfigTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_LcsTACACSServerConfigTimeout_Type.__name__ = "Integer32"
_LcsTACACSServerConfigTimeout_Object = MibTableColumn
lcsTACACSServerConfigTimeout = _LcsTACACSServerConfigTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 4),
    _LcsTACACSServerConfigTimeout_Type()
)
lcsTACACSServerConfigTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigTimeout.setStatus("current")
_LcsTACACSServerConfigKey_Type = DisplayString
_LcsTACACSServerConfigKey_Object = MibTableColumn
lcsTACACSServerConfigKey = _LcsTACACSServerConfigKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 5),
    _LcsTACACSServerConfigKey_Type()
)
lcsTACACSServerConfigKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigKey.setStatus("current")
_LcsTACACSServerConfigRowStatus_Type = RowStatus
_LcsTACACSServerConfigRowStatus_Object = MibTableColumn
lcsTACACSServerConfigRowStatus = _LcsTACACSServerConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 15, 1, 2, 4, 1, 6),
    _LcsTACACSServerConfigRowStatus_Type()
)
lcsTACACSServerConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsTACACSServerConfigRowStatus.setStatus("current")
_LcsNasMIB_ObjectIdentity = ObjectIdentity
lcsNasMIB = _LcsNasMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16)
)
_LcsNAS_ObjectIdentity = ObjectIdentity
lcsNAS = _LcsNAS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1)
)
_LcsNASConf_ObjectIdentity = ObjectIdentity
lcsNASConf = _LcsNASConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1)
)


class _LcsNASConfMode_Type(AdminMode):
    """Custom type lcsNASConfMode based on AdminMode"""
    defaultValue = 0


_LcsNASConfMode_Type.__name__ = "AdminMode"
_LcsNASConfMode_Object = MibScalar
lcsNASConfMode = _LcsNASConfMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 1),
    _LcsNASConfMode_Type()
)
lcsNASConfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfMode.setStatus("current")


class _LcsNASConfReauthenticationEnabled_Type(AdminMode):
    """Custom type lcsNASConfReauthenticationEnabled based on AdminMode"""
    defaultValue = 0


_LcsNASConfReauthenticationEnabled_Type.__name__ = "AdminMode"
_LcsNASConfReauthenticationEnabled_Object = MibScalar
lcsNASConfReauthenticationEnabled = _LcsNASConfReauthenticationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 2),
    _LcsNASConfReauthenticationEnabled_Type()
)
lcsNASConfReauthenticationEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfReauthenticationEnabled.setStatus("current")


class _LcsNASConfReauthenticationPeriod_Type(Integer32):
    """Custom type lcsNASConfReauthenticationPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_LcsNASConfReauthenticationPeriod_Type.__name__ = "Integer32"
_LcsNASConfReauthenticationPeriod_Object = MibScalar
lcsNASConfReauthenticationPeriod = _LcsNASConfReauthenticationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 3),
    _LcsNASConfReauthenticationPeriod_Type()
)
lcsNASConfReauthenticationPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfReauthenticationPeriod.setStatus("current")


class _LcsNASConfEAPOLTimeout_Type(Integer32):
    """Custom type lcsNASConfEAPOLTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsNASConfEAPOLTimeout_Type.__name__ = "Integer32"
_LcsNASConfEAPOLTimeout_Object = MibScalar
lcsNASConfEAPOLTimeout = _LcsNASConfEAPOLTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 4),
    _LcsNASConfEAPOLTimeout_Type()
)
lcsNASConfEAPOLTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfEAPOLTimeout.setStatus("current")


class _LcsNASConfAgingPeriod_Type(Integer32):
    """Custom type lcsNASConfAgingPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 1000000),
    )


_LcsNASConfAgingPeriod_Type.__name__ = "Integer32"
_LcsNASConfAgingPeriod_Object = MibScalar
lcsNASConfAgingPeriod = _LcsNASConfAgingPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 5),
    _LcsNASConfAgingPeriod_Type()
)
lcsNASConfAgingPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfAgingPeriod.setStatus("current")


class _LcsNASConfHoldTime_Type(Integer32):
    """Custom type lcsNASConfHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 1000000),
    )


_LcsNASConfHoldTime_Type.__name__ = "Integer32"
_LcsNASConfHoldTime_Object = MibScalar
lcsNASConfHoldTime = _LcsNASConfHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 6),
    _LcsNASConfHoldTime_Type()
)
lcsNASConfHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfHoldTime.setStatus("current")


class _LcsNASConfRADIUSQoSEnabled_Type(AdminMode):
    """Custom type lcsNASConfRADIUSQoSEnabled based on AdminMode"""
    defaultValue = 0


_LcsNASConfRADIUSQoSEnabled_Type.__name__ = "AdminMode"
_LcsNASConfRADIUSQoSEnabled_Object = MibScalar
lcsNASConfRADIUSQoSEnabled = _LcsNASConfRADIUSQoSEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 7),
    _LcsNASConfRADIUSQoSEnabled_Type()
)
lcsNASConfRADIUSQoSEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfRADIUSQoSEnabled.setStatus("current")


class _LcsNASConfRADIUSVLANEnabled_Type(AdminMode):
    """Custom type lcsNASConfRADIUSVLANEnabled based on AdminMode"""
    defaultValue = 0


_LcsNASConfRADIUSVLANEnabled_Type.__name__ = "AdminMode"
_LcsNASConfRADIUSVLANEnabled_Object = MibScalar
lcsNASConfRADIUSVLANEnabled = _LcsNASConfRADIUSVLANEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 8),
    _LcsNASConfRADIUSVLANEnabled_Type()
)
lcsNASConfRADIUSVLANEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfRADIUSVLANEnabled.setStatus("current")


class _LcsNASConfGuestVLANEnabled_Type(AdminMode):
    """Custom type lcsNASConfGuestVLANEnabled based on AdminMode"""
    defaultValue = 0


_LcsNASConfGuestVLANEnabled_Type.__name__ = "AdminMode"
_LcsNASConfGuestVLANEnabled_Object = MibScalar
lcsNASConfGuestVLANEnabled = _LcsNASConfGuestVLANEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 9),
    _LcsNASConfGuestVLANEnabled_Type()
)
lcsNASConfGuestVLANEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfGuestVLANEnabled.setStatus("current")


class _LcsNASConfGuestVLANID_Type(Integer32):
    """Custom type lcsNASConfGuestVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsNASConfGuestVLANID_Type.__name__ = "Integer32"
_LcsNASConfGuestVLANID_Object = MibScalar
lcsNASConfGuestVLANID = _LcsNASConfGuestVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 10),
    _LcsNASConfGuestVLANID_Type()
)
lcsNASConfGuestVLANID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfGuestVLANID.setStatus("current")


class _LcsNASConfMaxReauthCount_Type(Integer32):
    """Custom type lcsNASConfMaxReauthCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsNASConfMaxReauthCount_Type.__name__ = "Integer32"
_LcsNASConfMaxReauthCount_Object = MibScalar
lcsNASConfMaxReauthCount = _LcsNASConfMaxReauthCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 11),
    _LcsNASConfMaxReauthCount_Type()
)
lcsNASConfMaxReauthCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfMaxReauthCount.setStatus("current")


class _LcsNASConfAllowGuestVLAN_Type(AdminMode):
    """Custom type lcsNASConfAllowGuestVLAN based on AdminMode"""
    defaultValue = 0


_LcsNASConfAllowGuestVLAN_Type.__name__ = "AdminMode"
_LcsNASConfAllowGuestVLAN_Object = MibScalar
lcsNASConfAllowGuestVLAN = _LcsNASConfAllowGuestVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 12),
    _LcsNASConfAllowGuestVLAN_Type()
)
lcsNASConfAllowGuestVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfAllowGuestVLAN.setStatus("current")
_LcsNASPortConfTable_Object = MibTable
lcsNASPortConfTable = _LcsNASPortConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13)
)
if mibBuilder.loadTexts:
    lcsNASPortConfTable.setStatus("current")
_LcsNASPortConfEntry_Object = MibTableRow
lcsNASPortConfEntry = _LcsNASPortConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1)
)
lcsNASPortConfEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsNASPortConfEntry.setStatus("current")


class _LcsNASPortConfAdminState_Type(Integer32):
    """Custom type lcsNASPortConfAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 6),
    )


_LcsNASPortConfAdminState_Type.__name__ = "Integer32"
_LcsNASPortConfAdminState_Object = MibTableColumn
lcsNASPortConfAdminState = _LcsNASPortConfAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 2),
    _LcsNASPortConfAdminState_Type()
)
lcsNASPortConfAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfAdminState.setStatus("current")
_LcsNASPortConfRADIUSQoSEnabled_Type = AdminMode
_LcsNASPortConfRADIUSQoSEnabled_Object = MibTableColumn
lcsNASPortConfRADIUSQoSEnabled = _LcsNASPortConfRADIUSQoSEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 3),
    _LcsNASPortConfRADIUSQoSEnabled_Type()
)
lcsNASPortConfRADIUSQoSEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfRADIUSQoSEnabled.setStatus("current")
_LcsNASPortConfRADIUSVLANEnabled_Type = AdminMode
_LcsNASPortConfRADIUSVLANEnabled_Object = MibTableColumn
lcsNASPortConfRADIUSVLANEnabled = _LcsNASPortConfRADIUSVLANEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 4),
    _LcsNASPortConfRADIUSVLANEnabled_Type()
)
lcsNASPortConfRADIUSVLANEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfRADIUSVLANEnabled.setStatus("current")
_LcsNASPortConfGuestVLANEnabled_Type = AdminMode
_LcsNASPortConfGuestVLANEnabled_Object = MibTableColumn
lcsNASPortConfGuestVLANEnabled = _LcsNASPortConfGuestVLANEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 5),
    _LcsNASPortConfGuestVLANEnabled_Type()
)
lcsNASPortConfGuestVLANEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfGuestVLANEnabled.setStatus("current")
_LcsNASPortConfPortState_Type = DisplayString
_LcsNASPortConfPortState_Object = MibTableColumn
lcsNASPortConfPortState = _LcsNASPortConfPortState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 6),
    _LcsNASPortConfPortState_Type()
)
lcsNASPortConfPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortConfPortState.setStatus("current")


class _LcsNASPortConfReauthenticateCmd_Type(ActivateCmd):
    """Custom type lcsNASPortConfReauthenticateCmd based on ActivateCmd"""
    defaultValue = 0


_LcsNASPortConfReauthenticateCmd_Type.__name__ = "ActivateCmd"
_LcsNASPortConfReauthenticateCmd_Object = MibTableColumn
lcsNASPortConfReauthenticateCmd = _LcsNASPortConfReauthenticateCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 7),
    _LcsNASPortConfReauthenticateCmd_Type()
)
lcsNASPortConfReauthenticateCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfReauthenticateCmd.setStatus("current")


class _LcsNASPortConfReinitializeCmd_Type(ActivateCmd):
    """Custom type lcsNASPortConfReinitializeCmd based on ActivateCmd"""
    defaultValue = 0


_LcsNASPortConfReinitializeCmd_Type.__name__ = "ActivateCmd"
_LcsNASPortConfReinitializeCmd_Object = MibTableColumn
lcsNASPortConfReinitializeCmd = _LcsNASPortConfReinitializeCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 8),
    _LcsNASPortConfReinitializeCmd_Type()
)
lcsNASPortConfReinitializeCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfReinitializeCmd.setStatus("current")
_LcsNASPortConfFallbackEnabled_Type = AdminMode
_LcsNASPortConfFallbackEnabled_Object = MibTableColumn
lcsNASPortConfFallbackEnabled = _LcsNASPortConfFallbackEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 13, 1, 101),
    _LcsNASPortConfFallbackEnabled_Type()
)
lcsNASPortConfFallbackEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortConfFallbackEnabled.setStatus("current")
_LcsNASConfMacBasedUseEAP_Type = AdminMode
_LcsNASConfMacBasedUseEAP_Object = MibScalar
lcsNASConfMacBasedUseEAP = _LcsNASConfMacBasedUseEAP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 1, 101),
    _LcsNASConfMacBasedUseEAP_Type()
)
lcsNASConfMacBasedUseEAP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASConfMacBasedUseEAP.setStatus("current")
_LcsNASStatus_ObjectIdentity = ObjectIdentity
lcsNASStatus = _LcsNASStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2)
)
_LcsNASSwitchStatusTable_Object = MibTable
lcsNASSwitchStatusTable = _LcsNASSwitchStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1)
)
if mibBuilder.loadTexts:
    lcsNASSwitchStatusTable.setStatus("current")
_LcsNASSwitchStatusEntry_Object = MibTableRow
lcsNASSwitchStatusEntry = _LcsNASSwitchStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1)
)
lcsNASSwitchStatusEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsNASSwitchStatusEntry.setStatus("current")
_LcsNASSwitchStatusAdminState_Type = DisplayString
_LcsNASSwitchStatusAdminState_Object = MibTableColumn
lcsNASSwitchStatusAdminState = _LcsNASSwitchStatusAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 2),
    _LcsNASSwitchStatusAdminState_Type()
)
lcsNASSwitchStatusAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusAdminState.setStatus("current")
_LcsNASSwitchStatusPortState_Type = DisplayString
_LcsNASSwitchStatusPortState_Object = MibTableColumn
lcsNASSwitchStatusPortState = _LcsNASSwitchStatusPortState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 3),
    _LcsNASSwitchStatusPortState_Type()
)
lcsNASSwitchStatusPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusPortState.setStatus("current")
_LcsNASSwitchStatusLastSource_Type = DisplayString
_LcsNASSwitchStatusLastSource_Object = MibTableColumn
lcsNASSwitchStatusLastSource = _LcsNASSwitchStatusLastSource_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 4),
    _LcsNASSwitchStatusLastSource_Type()
)
lcsNASSwitchStatusLastSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusLastSource.setStatus("current")
_LcsNASSwitchStatusLastID_Type = DisplayString
_LcsNASSwitchStatusLastID_Object = MibTableColumn
lcsNASSwitchStatusLastID = _LcsNASSwitchStatusLastID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 5),
    _LcsNASSwitchStatusLastID_Type()
)
lcsNASSwitchStatusLastID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusLastID.setStatus("current")
_LcsNASSwitchStatusQoSClass_Type = DisplayString
_LcsNASSwitchStatusQoSClass_Object = MibTableColumn
lcsNASSwitchStatusQoSClass = _LcsNASSwitchStatusQoSClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 6),
    _LcsNASSwitchStatusQoSClass_Type()
)
lcsNASSwitchStatusQoSClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusQoSClass.setStatus("current")
_LcsNASSwitchStatusPortVLANID_Type = DisplayString
_LcsNASSwitchStatusPortVLANID_Object = MibTableColumn
lcsNASSwitchStatusPortVLANID = _LcsNASSwitchStatusPortVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 1, 1, 7),
    _LcsNASSwitchStatusPortVLANID_Type()
)
lcsNASSwitchStatusPortVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSwitchStatusPortVLANID.setStatus("current")
_LcsNASPortCounterTable_Object = MibTable
lcsNASPortCounterTable = _LcsNASPortCounterTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2)
)
if mibBuilder.loadTexts:
    lcsNASPortCounterTable.setStatus("current")
_LcsNASPortCounterEntry_Object = MibTableRow
lcsNASPortCounterEntry = _LcsNASPortCounterEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1)
)
lcsNASPortCounterEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsNASPortCounterEntry.setStatus("current")


class _LcsNASReceiveEAPOLTotal_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLTotal_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLTotal_Object = MibTableColumn
lcsNASReceiveEAPOLTotal = _LcsNASReceiveEAPOLTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 2),
    _LcsNASReceiveEAPOLTotal_Type()
)
lcsNASReceiveEAPOLTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLTotal.setStatus("current")


class _LcsNASReceiveEAPOLResponseID_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLResponseID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLResponseID_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLResponseID_Object = MibTableColumn
lcsNASReceiveEAPOLResponseID = _LcsNASReceiveEAPOLResponseID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 3),
    _LcsNASReceiveEAPOLResponseID_Type()
)
lcsNASReceiveEAPOLResponseID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLResponseID.setStatus("current")


class _LcsNASReceiveEAPOLResponses_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLResponses based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLResponses_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLResponses_Object = MibTableColumn
lcsNASReceiveEAPOLResponses = _LcsNASReceiveEAPOLResponses_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 4),
    _LcsNASReceiveEAPOLResponses_Type()
)
lcsNASReceiveEAPOLResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLResponses.setStatus("current")


class _LcsNASReceiveEAPOLStart_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLStart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLStart_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLStart_Object = MibTableColumn
lcsNASReceiveEAPOLStart = _LcsNASReceiveEAPOLStart_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 5),
    _LcsNASReceiveEAPOLStart_Type()
)
lcsNASReceiveEAPOLStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLStart.setStatus("current")


class _LcsNASReceiveEAPOLLogoff_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLLogoff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLLogoff_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLLogoff_Object = MibTableColumn
lcsNASReceiveEAPOLLogoff = _LcsNASReceiveEAPOLLogoff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 6),
    _LcsNASReceiveEAPOLLogoff_Type()
)
lcsNASReceiveEAPOLLogoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLLogoff.setStatus("current")


class _LcsNASReceiveEAPOLInvalidType_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLInvalidType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLInvalidType_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLInvalidType_Object = MibTableColumn
lcsNASReceiveEAPOLInvalidType = _LcsNASReceiveEAPOLInvalidType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 7),
    _LcsNASReceiveEAPOLInvalidType_Type()
)
lcsNASReceiveEAPOLInvalidType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLInvalidType.setStatus("current")


class _LcsNASReceiveEAPOLInvalidLength_Type(Integer32):
    """Custom type lcsNASReceiveEAPOLInvalidLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASReceiveEAPOLInvalidLength_Type.__name__ = "Integer32"
_LcsNASReceiveEAPOLInvalidLength_Object = MibTableColumn
lcsNASReceiveEAPOLInvalidLength = _LcsNASReceiveEAPOLInvalidLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 8),
    _LcsNASReceiveEAPOLInvalidLength_Type()
)
lcsNASReceiveEAPOLInvalidLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASReceiveEAPOLInvalidLength.setStatus("current")


class _LcsNASTransmitEAPOLTotal_Type(Integer32):
    """Custom type lcsNASTransmitEAPOLTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASTransmitEAPOLTotal_Type.__name__ = "Integer32"
_LcsNASTransmitEAPOLTotal_Object = MibTableColumn
lcsNASTransmitEAPOLTotal = _LcsNASTransmitEAPOLTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 9),
    _LcsNASTransmitEAPOLTotal_Type()
)
lcsNASTransmitEAPOLTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASTransmitEAPOLTotal.setStatus("current")


class _LcsNASTransmitEAPOLRequestID_Type(Integer32):
    """Custom type lcsNASTransmitEAPOLRequestID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASTransmitEAPOLRequestID_Type.__name__ = "Integer32"
_LcsNASTransmitEAPOLRequestID_Object = MibTableColumn
lcsNASTransmitEAPOLRequestID = _LcsNASTransmitEAPOLRequestID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 10),
    _LcsNASTransmitEAPOLRequestID_Type()
)
lcsNASTransmitEAPOLRequestID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASTransmitEAPOLRequestID.setStatus("current")


class _LcsNASTransmitEAPOLRequests_Type(Integer32):
    """Custom type lcsNASTransmitEAPOLRequests based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASTransmitEAPOLRequests_Type.__name__ = "Integer32"
_LcsNASTransmitEAPOLRequests_Object = MibTableColumn
lcsNASTransmitEAPOLRequests = _LcsNASTransmitEAPOLRequests_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 11),
    _LcsNASTransmitEAPOLRequests_Type()
)
lcsNASTransmitEAPOLRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASTransmitEAPOLRequests.setStatus("current")


class _LcsNASPortReceiveBackendServerAccessChallenges_Type(Integer32):
    """Custom type lcsNASPortReceiveBackendServerAccessChallenges based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASPortReceiveBackendServerAccessChallenges_Type.__name__ = "Integer32"
_LcsNASPortReceiveBackendServerAccessChallenges_Object = MibTableColumn
lcsNASPortReceiveBackendServerAccessChallenges = _LcsNASPortReceiveBackendServerAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 12),
    _LcsNASPortReceiveBackendServerAccessChallenges_Type()
)
lcsNASPortReceiveBackendServerAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortReceiveBackendServerAccessChallenges.setStatus("current")


class _LcsNASPortReceiveBackendServerOtherRequests_Type(Integer32):
    """Custom type lcsNASPortReceiveBackendServerOtherRequests based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASPortReceiveBackendServerOtherRequests_Type.__name__ = "Integer32"
_LcsNASPortReceiveBackendServerOtherRequests_Object = MibTableColumn
lcsNASPortReceiveBackendServerOtherRequests = _LcsNASPortReceiveBackendServerOtherRequests_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 13),
    _LcsNASPortReceiveBackendServerOtherRequests_Type()
)
lcsNASPortReceiveBackendServerOtherRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortReceiveBackendServerOtherRequests.setStatus("current")


class _LcsNASPortReceiveBackendServerAuthSuccesses_Type(Integer32):
    """Custom type lcsNASPortReceiveBackendServerAuthSuccesses based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASPortReceiveBackendServerAuthSuccesses_Type.__name__ = "Integer32"
_LcsNASPortReceiveBackendServerAuthSuccesses_Object = MibTableColumn
lcsNASPortReceiveBackendServerAuthSuccesses = _LcsNASPortReceiveBackendServerAuthSuccesses_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 14),
    _LcsNASPortReceiveBackendServerAuthSuccesses_Type()
)
lcsNASPortReceiveBackendServerAuthSuccesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortReceiveBackendServerAuthSuccesses.setStatus("current")


class _LcsNASPortReceiveBackendServerAuthFailures_Type(Integer32):
    """Custom type lcsNASPortReceiveBackendServerAuthFailures based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASPortReceiveBackendServerAuthFailures_Type.__name__ = "Integer32"
_LcsNASPortReceiveBackendServerAuthFailures_Object = MibTableColumn
lcsNASPortReceiveBackendServerAuthFailures = _LcsNASPortReceiveBackendServerAuthFailures_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 15),
    _LcsNASPortReceiveBackendServerAuthFailures_Type()
)
lcsNASPortReceiveBackendServerAuthFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortReceiveBackendServerAuthFailures.setStatus("current")


class _LcsNASPortTransmitBackendServerResponses_Type(Integer32):
    """Custom type lcsNASPortTransmitBackendServerResponses based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASPortTransmitBackendServerResponses_Type.__name__ = "Integer32"
_LcsNASPortTransmitBackendServerResponses_Object = MibTableColumn
lcsNASPortTransmitBackendServerResponses = _LcsNASPortTransmitBackendServerResponses_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 16),
    _LcsNASPortTransmitBackendServerResponses_Type()
)
lcsNASPortTransmitBackendServerResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASPortTransmitBackendServerResponses.setStatus("current")
_LcsNASSupplicantInfoMAC_Type = DisplayString
_LcsNASSupplicantInfoMAC_Object = MibTableColumn
lcsNASSupplicantInfoMAC = _LcsNASSupplicantInfoMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 17),
    _LcsNASSupplicantInfoMAC_Type()
)
lcsNASSupplicantInfoMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSupplicantInfoMAC.setStatus("current")


class _LcsNASSupplicantInfoVlanID_Type(Integer32):
    """Custom type lcsNASSupplicantInfoVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASSupplicantInfoVlanID_Type.__name__ = "Integer32"
_LcsNASSupplicantInfoVlanID_Object = MibTableColumn
lcsNASSupplicantInfoVlanID = _LcsNASSupplicantInfoVlanID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 18),
    _LcsNASSupplicantInfoVlanID_Type()
)
lcsNASSupplicantInfoVlanID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSupplicantInfoVlanID.setStatus("current")


class _LcsNASSupplicantInfoVersion_Type(Integer32):
    """Custom type lcsNASSupplicantInfoVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_LcsNASSupplicantInfoVersion_Type.__name__ = "Integer32"
_LcsNASSupplicantInfoVersion_Object = MibTableColumn
lcsNASSupplicantInfoVersion = _LcsNASSupplicantInfoVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 19),
    _LcsNASSupplicantInfoVersion_Type()
)
lcsNASSupplicantInfoVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSupplicantInfoVersion.setStatus("current")
_LcsNASSupplicantInfoIdentity_Type = DisplayString
_LcsNASSupplicantInfoIdentity_Object = MibTableColumn
lcsNASSupplicantInfoIdentity = _LcsNASSupplicantInfoIdentity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 20),
    _LcsNASSupplicantInfoIdentity_Type()
)
lcsNASSupplicantInfoIdentity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsNASSupplicantInfoIdentity.setStatus("current")
_LcsNASPortCounterClearCmd_Type = ActivateCmd
_LcsNASPortCounterClearCmd_Object = MibTableColumn
lcsNASPortCounterClearCmd = _LcsNASPortCounterClearCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 16, 1, 2, 2, 1, 21),
    _LcsNASPortCounterClearCmd_Type()
)
lcsNASPortCounterClearCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsNASPortCounterClearCmd.setStatus("current")
_LcsMACConf_ObjectIdentity = ObjectIdentity
lcsMACConf = _LcsMACConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17)
)
_LcsMAC_ObjectIdentity = ObjectIdentity
lcsMAC = _LcsMAC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1)
)
_LcsMACDisableAutomaticAging_Type = AdminMode
_LcsMACDisableAutomaticAging_Object = MibScalar
lcsMACDisableAutomaticAging = _LcsMACDisableAutomaticAging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 1),
    _LcsMACDisableAutomaticAging_Type()
)
lcsMACDisableAutomaticAging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMACDisableAutomaticAging.setStatus("current")


class _LcsMACAgingTime_Type(Integer32):
    """Custom type lcsMACAgingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(10, 1000000),
    )


_LcsMACAgingTime_Type.__name__ = "Integer32"
_LcsMACAgingTime_Object = MibScalar
lcsMACAgingTime = _LcsMACAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 2),
    _LcsMACAgingTime_Type()
)
lcsMACAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMACAgingTime.setStatus("current")
_LcsMACLearningTable_Object = MibTable
lcsMACLearningTable = _LcsMACLearningTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 3)
)
if mibBuilder.loadTexts:
    lcsMACLearningTable.setStatus("current")
_LcsMACLearningEntry_Object = MibTableRow
lcsMACLearningEntry = _LcsMACLearningEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 3, 1)
)
lcsMACLearningEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsMACLearningEntry.setStatus("current")


class _LcsMACTableLearning_Type(Integer32):
    """Custom type lcsMACTableLearning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("disable", 1),
          ("secure", 2))
    )


_LcsMACTableLearning_Type.__name__ = "Integer32"
_LcsMACTableLearning_Object = MibTableColumn
lcsMACTableLearning = _LcsMACTableLearning_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 3, 1, 2),
    _LcsMACTableLearning_Type()
)
lcsMACTableLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMACTableLearning.setStatus("current")
_LcsLearningDisabledVLANs_Type = DisplayString
_LcsLearningDisabledVLANs_Object = MibScalar
lcsLearningDisabledVLANs = _LcsLearningDisabledVLANs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 4),
    _LcsLearningDisabledVLANs_Type()
)
lcsLearningDisabledVLANs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLearningDisabledVLANs.setStatus("current")
_LcsMACStaticConfigTable_Object = MibTable
lcsMACStaticConfigTable = _LcsMACStaticConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5)
)
if mibBuilder.loadTexts:
    lcsMACStaticConfigTable.setStatus("current")
_LcsMACStaticConfigEntry_Object = MibTableRow
lcsMACStaticConfigEntry = _LcsMACStaticConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1)
)
lcsMACStaticConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMACStaticConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsMACStaticConfigEntry.setStatus("current")


class _LcsMACStaticConfigSwitchIndex_Type(Integer32):
    """Custom type lcsMACStaticConfigSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsMACStaticConfigSwitchIndex_Type.__name__ = "Integer32"
_LcsMACStaticConfigSwitchIndex_Object = MibTableColumn
lcsMACStaticConfigSwitchIndex = _LcsMACStaticConfigSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 1),
    _LcsMACStaticConfigSwitchIndex_Type()
)
lcsMACStaticConfigSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMACStaticConfigSwitchIndex.setStatus("current")


class _LcsMACStaticConfigIndex_Type(Integer32):
    """Custom type lcsMACStaticConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_LcsMACStaticConfigIndex_Type.__name__ = "Integer32"
_LcsMACStaticConfigIndex_Object = MibTableColumn
lcsMACStaticConfigIndex = _LcsMACStaticConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 2),
    _LcsMACStaticConfigIndex_Type()
)
lcsMACStaticConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMACStaticConfigIndex.setStatus("current")


class _LcsMACStaticConfigVID_Type(Integer32):
    """Custom type lcsMACStaticConfigVID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsMACStaticConfigVID_Type.__name__ = "Integer32"
_LcsMACStaticConfigVID_Object = MibTableColumn
lcsMACStaticConfigVID = _LcsMACStaticConfigVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 3),
    _LcsMACStaticConfigVID_Type()
)
lcsMACStaticConfigVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMACStaticConfigVID.setStatus("current")
_LcsMACStaticConfigMACaddress_Type = DisplayString
_LcsMACStaticConfigMACaddress_Object = MibTableColumn
lcsMACStaticConfigMACaddress = _LcsMACStaticConfigMACaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 4),
    _LcsMACStaticConfigMACaddress_Type()
)
lcsMACStaticConfigMACaddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMACStaticConfigMACaddress.setStatus("current")
_LcsMACStaticConfigPortList_Type = DisplayString
_LcsMACStaticConfigPortList_Object = MibTableColumn
lcsMACStaticConfigPortList = _LcsMACStaticConfigPortList_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 5),
    _LcsMACStaticConfigPortList_Type()
)
lcsMACStaticConfigPortList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMACStaticConfigPortList.setStatus("current")
_LcsMACStaticConfigRowStatus_Type = RowStatus
_LcsMACStaticConfigRowStatus_Object = MibTableColumn
lcsMACStaticConfigRowStatus = _LcsMACStaticConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 17, 1, 5, 1, 6),
    _LcsMACStaticConfigRowStatus_Type()
)
lcsMACStaticConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMACStaticConfigRowStatus.setStatus("current")
_LcsSpanningTree_ObjectIdentity = ObjectIdentity
lcsSpanningTree = _LcsSpanningTree_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18)
)
_LcsBridgeSettings_ObjectIdentity = ObjectIdentity
lcsBridgeSettings = _LcsBridgeSettings_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1)
)
_LcsSTPProtocolVersion_Type = Integer32
_LcsSTPProtocolVersion_Object = MibScalar
lcsSTPProtocolVersion = _LcsSTPProtocolVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 1),
    _LcsSTPProtocolVersion_Type()
)
lcsSTPProtocolVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSTPProtocolVersion.setStatus("current")
_LcsBridgePriority_Type = Integer32
_LcsBridgePriority_Object = MibScalar
lcsBridgePriority = _LcsBridgePriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 2),
    _LcsBridgePriority_Type()
)
lcsBridgePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgePriority.setStatus("current")
_LcsBridgeForwardDelay_Type = Integer32
_LcsBridgeForwardDelay_Object = MibScalar
lcsBridgeForwardDelay = _LcsBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 3),
    _LcsBridgeForwardDelay_Type()
)
lcsBridgeForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeForwardDelay.setStatus("current")
_LcsBridgeMaxAge_Type = Integer32
_LcsBridgeMaxAge_Object = MibScalar
lcsBridgeMaxAge = _LcsBridgeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 4),
    _LcsBridgeMaxAge_Type()
)
lcsBridgeMaxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeMaxAge.setStatus("current")
_LcsBridgeMaxHops_Type = Integer32
_LcsBridgeMaxHops_Object = MibScalar
lcsBridgeMaxHops = _LcsBridgeMaxHops_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 5),
    _LcsBridgeMaxHops_Type()
)
lcsBridgeMaxHops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeMaxHops.setStatus("current")
_LcsBridgetxHoldCount_Type = Integer32
_LcsBridgetxHoldCount_Object = MibScalar
lcsBridgetxHoldCount = _LcsBridgetxHoldCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 6),
    _LcsBridgetxHoldCount_Type()
)
lcsBridgetxHoldCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgetxHoldCount.setStatus("current")
_LcsBridgeBPDUFilter_Type = Integer32
_LcsBridgeBPDUFilter_Object = MibScalar
lcsBridgeBPDUFilter = _LcsBridgeBPDUFilter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 7),
    _LcsBridgeBPDUFilter_Type()
)
lcsBridgeBPDUFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeBPDUFilter.setStatus("current")
_LcsBridgeBPDUGuard_Type = Integer32
_LcsBridgeBPDUGuard_Object = MibScalar
lcsBridgeBPDUGuard = _LcsBridgeBPDUGuard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 8),
    _LcsBridgeBPDUGuard_Type()
)
lcsBridgeBPDUGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeBPDUGuard.setStatus("current")
_LcsBridgeerrorRecoveryDelay_Type = Integer32
_LcsBridgeerrorRecoveryDelay_Object = MibScalar
lcsBridgeerrorRecoveryDelay = _LcsBridgeerrorRecoveryDelay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 9),
    _LcsBridgeerrorRecoveryDelay_Type()
)
lcsBridgeerrorRecoveryDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeerrorRecoveryDelay.setStatus("current")
_LcsBridgeHelloTime_Type = Integer32
_LcsBridgeHelloTime_Object = MibScalar
lcsBridgeHelloTime = _LcsBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 1, 10),
    _LcsBridgeHelloTime_Type()
)
lcsBridgeHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsBridgeHelloTime.setStatus("current")
_LcsMSTIMapping_ObjectIdentity = ObjectIdentity
lcsMSTIMapping = _LcsMSTIMapping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 2)
)
_LcsConfigName_Type = DisplayString
_LcsConfigName_Object = MibScalar
lcsConfigName = _LcsConfigName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 2, 1),
    _LcsConfigName_Type()
)
lcsConfigName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigName.setStatus("current")
_LcsConfigRevision_Type = Integer32
_LcsConfigRevision_Object = MibScalar
lcsConfigRevision = _LcsConfigRevision_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 2, 2),
    _LcsConfigRevision_Type()
)
lcsConfigRevision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigRevision.setStatus("current")
_LcsMSTIMappingVLAN_ObjectIdentity = ObjectIdentity
lcsMSTIMappingVLAN = _LcsMSTIMappingVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3)
)
_LcsConfigMstiName1_Type = DisplayString
_LcsConfigMstiName1_Object = MibScalar
lcsConfigMstiName1 = _LcsConfigMstiName1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 1),
    _LcsConfigMstiName1_Type()
)
lcsConfigMstiName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName1.setStatus("current")
_LcsConfigMstiName2_Type = DisplayString
_LcsConfigMstiName2_Object = MibScalar
lcsConfigMstiName2 = _LcsConfigMstiName2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 2),
    _LcsConfigMstiName2_Type()
)
lcsConfigMstiName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName2.setStatus("current")
_LcsConfigMstiName3_Type = DisplayString
_LcsConfigMstiName3_Object = MibScalar
lcsConfigMstiName3 = _LcsConfigMstiName3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 3),
    _LcsConfigMstiName3_Type()
)
lcsConfigMstiName3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName3.setStatus("current")
_LcsConfigMstiName4_Type = DisplayString
_LcsConfigMstiName4_Object = MibScalar
lcsConfigMstiName4 = _LcsConfigMstiName4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 4),
    _LcsConfigMstiName4_Type()
)
lcsConfigMstiName4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName4.setStatus("current")
_LcsConfigMstiName5_Type = DisplayString
_LcsConfigMstiName5_Object = MibScalar
lcsConfigMstiName5 = _LcsConfigMstiName5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 5),
    _LcsConfigMstiName5_Type()
)
lcsConfigMstiName5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName5.setStatus("current")
_LcsConfigMstiName6_Type = DisplayString
_LcsConfigMstiName6_Object = MibScalar
lcsConfigMstiName6 = _LcsConfigMstiName6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 6),
    _LcsConfigMstiName6_Type()
)
lcsConfigMstiName6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName6.setStatus("current")
_LcsConfigMstiName7_Type = DisplayString
_LcsConfigMstiName7_Object = MibScalar
lcsConfigMstiName7 = _LcsConfigMstiName7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 3, 7),
    _LcsConfigMstiName7_Type()
)
lcsConfigMstiName7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigMstiName7.setStatus("current")
_LcsMSTIPriorities_ObjectIdentity = ObjectIdentity
lcsMSTIPriorities = _LcsMSTIPriorities_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4)
)
_LcsCSTIPriority_Type = Integer32
_LcsCSTIPriority_Object = MibScalar
lcsCSTIPriority = _LcsCSTIPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 1),
    _LcsCSTIPriority_Type()
)
lcsCSTIPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCSTIPriority.setStatus("current")
_LcsMSTI1Priority_Type = Integer32
_LcsMSTI1Priority_Object = MibScalar
lcsMSTI1Priority = _LcsMSTI1Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 2),
    _LcsMSTI1Priority_Type()
)
lcsMSTI1Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI1Priority.setStatus("current")
_LcsMSTI2Priority_Type = Integer32
_LcsMSTI2Priority_Object = MibScalar
lcsMSTI2Priority = _LcsMSTI2Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 3),
    _LcsMSTI2Priority_Type()
)
lcsMSTI2Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI2Priority.setStatus("current")
_LcsMSTI3Priority_Type = Integer32
_LcsMSTI3Priority_Object = MibScalar
lcsMSTI3Priority = _LcsMSTI3Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 4),
    _LcsMSTI3Priority_Type()
)
lcsMSTI3Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI3Priority.setStatus("current")
_LcsMSTI4Priority_Type = Integer32
_LcsMSTI4Priority_Object = MibScalar
lcsMSTI4Priority = _LcsMSTI4Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 5),
    _LcsMSTI4Priority_Type()
)
lcsMSTI4Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI4Priority.setStatus("current")
_LcsMSTI5Priority_Type = Integer32
_LcsMSTI5Priority_Object = MibScalar
lcsMSTI5Priority = _LcsMSTI5Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 6),
    _LcsMSTI5Priority_Type()
)
lcsMSTI5Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI5Priority.setStatus("current")
_LcsMSTI6Priority_Type = Integer32
_LcsMSTI6Priority_Object = MibScalar
lcsMSTI6Priority = _LcsMSTI6Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 7),
    _LcsMSTI6Priority_Type()
)
lcsMSTI6Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI6Priority.setStatus("current")
_LcsMSTI7Priority_Type = Integer32
_LcsMSTI7Priority_Object = MibScalar
lcsMSTI7Priority = _LcsMSTI7Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 4, 8),
    _LcsMSTI7Priority_Type()
)
lcsMSTI7Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTI7Priority.setStatus("current")
_LcsCISTPorts_ObjectIdentity = ObjectIdentity
lcsCISTPorts = _LcsCISTPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5)
)


class _LcsCISTAggregatedEnable_Type(Integer32):
    """Custom type lcsCISTAggregatedEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedEnable_Type.__name__ = "Integer32"
_LcsCISTAggregatedEnable_Object = MibScalar
lcsCISTAggregatedEnable = _LcsCISTAggregatedEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 1),
    _LcsCISTAggregatedEnable_Type()
)
lcsCISTAggregatedEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedEnable.setStatus("current")


class _LcsCISTAggregatedPathCost_Type(Integer32):
    """Custom type lcsCISTAggregatedPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000000),
    )


_LcsCISTAggregatedPathCost_Type.__name__ = "Integer32"
_LcsCISTAggregatedPathCost_Object = MibScalar
lcsCISTAggregatedPathCost = _LcsCISTAggregatedPathCost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 2),
    _LcsCISTAggregatedPathCost_Type()
)
lcsCISTAggregatedPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedPathCost.setStatus("current")


class _LcsCISTAggregatedPortPriority_Type(Integer32):
    """Custom type lcsCISTAggregatedPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_LcsCISTAggregatedPortPriority_Type.__name__ = "Integer32"
_LcsCISTAggregatedPortPriority_Object = MibScalar
lcsCISTAggregatedPortPriority = _LcsCISTAggregatedPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 3),
    _LcsCISTAggregatedPortPriority_Type()
)
lcsCISTAggregatedPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedPortPriority.setStatus("current")


class _LcsCISTAggregatedAdminEdge_Type(Integer32):
    """Custom type lcsCISTAggregatedAdminEdge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedAdminEdge_Type.__name__ = "Integer32"
_LcsCISTAggregatedAdminEdge_Object = MibScalar
lcsCISTAggregatedAdminEdge = _LcsCISTAggregatedAdminEdge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 4),
    _LcsCISTAggregatedAdminEdge_Type()
)
lcsCISTAggregatedAdminEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedAdminEdge.setStatus("current")


class _LcsCISTAggregatedAutoEdge_Type(Integer32):
    """Custom type lcsCISTAggregatedAutoEdge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedAutoEdge_Type.__name__ = "Integer32"
_LcsCISTAggregatedAutoEdge_Object = MibScalar
lcsCISTAggregatedAutoEdge = _LcsCISTAggregatedAutoEdge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 5),
    _LcsCISTAggregatedAutoEdge_Type()
)
lcsCISTAggregatedAutoEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedAutoEdge.setStatus("current")


class _LcsCISTAggregatedrestrictedRole_Type(Integer32):
    """Custom type lcsCISTAggregatedrestrictedRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedrestrictedRole_Type.__name__ = "Integer32"
_LcsCISTAggregatedrestrictedRole_Object = MibScalar
lcsCISTAggregatedrestrictedRole = _LcsCISTAggregatedrestrictedRole_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 6),
    _LcsCISTAggregatedrestrictedRole_Type()
)
lcsCISTAggregatedrestrictedRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedrestrictedRole.setStatus("current")


class _LcsCISTAggregatedrestrictedTcn_Type(Integer32):
    """Custom type lcsCISTAggregatedrestrictedTcn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedrestrictedTcn_Type.__name__ = "Integer32"
_LcsCISTAggregatedrestrictedTcn_Object = MibScalar
lcsCISTAggregatedrestrictedTcn = _LcsCISTAggregatedrestrictedTcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 7),
    _LcsCISTAggregatedrestrictedTcn_Type()
)
lcsCISTAggregatedrestrictedTcn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedrestrictedTcn.setStatus("current")


class _LcsCISTAggregatedbpduGuard_Type(Integer32):
    """Custom type lcsCISTAggregatedbpduGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTAggregatedbpduGuard_Type.__name__ = "Integer32"
_LcsCISTAggregatedbpduGuard_Object = MibScalar
lcsCISTAggregatedbpduGuard = _LcsCISTAggregatedbpduGuard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 8),
    _LcsCISTAggregatedbpduGuard_Type()
)
lcsCISTAggregatedbpduGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedbpduGuard.setStatus("current")


class _LcsCISTAggregatedPointToPoint_Type(Integer32):
    """Custom type lcsCISTAggregatedPointToPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsCISTAggregatedPointToPoint_Type.__name__ = "Integer32"
_LcsCISTAggregatedPointToPoint_Object = MibScalar
lcsCISTAggregatedPointToPoint = _LcsCISTAggregatedPointToPoint_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 9),
    _LcsCISTAggregatedPointToPoint_Type()
)
lcsCISTAggregatedPointToPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTAggregatedPointToPoint.setStatus("current")
_LcsCISTPortsTable_Object = MibTable
lcsCISTPortsTable = _LcsCISTPortsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10)
)
if mibBuilder.loadTexts:
    lcsCISTPortsTable.setStatus("current")
_LcsCISTPortsEntry_Object = MibTableRow
lcsCISTPortsEntry = _LcsCISTPortsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1)
)
lcsCISTPortsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsCISTPortIndex"),
)
if mibBuilder.loadTexts:
    lcsCISTPortsEntry.setStatus("current")


class _LcsCISTPortIndex_Type(Integer32):
    """Custom type lcsCISTPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 53),
    )


_LcsCISTPortIndex_Type.__name__ = "Integer32"
_LcsCISTPortIndex_Object = MibTableColumn
lcsCISTPortIndex = _LcsCISTPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 1),
    _LcsCISTPortIndex_Type()
)
lcsCISTPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsCISTPortIndex.setStatus("current")


class _LcsCISTPortEnable_Type(Integer32):
    """Custom type lcsCISTPortEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortEnable_Type.__name__ = "Integer32"
_LcsCISTPortEnable_Object = MibTableColumn
lcsCISTPortEnable = _LcsCISTPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 2),
    _LcsCISTPortEnable_Type()
)
lcsCISTPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortEnable.setStatus("current")


class _LcsCISTPortPathCost_Type(Integer32):
    """Custom type lcsCISTPortPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000000),
    )


_LcsCISTPortPathCost_Type.__name__ = "Integer32"
_LcsCISTPortPathCost_Object = MibTableColumn
lcsCISTPortPathCost = _LcsCISTPortPathCost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 3),
    _LcsCISTPortPathCost_Type()
)
lcsCISTPortPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortPathCost.setStatus("current")


class _LcsCISTPortPortPriority_Type(Integer32):
    """Custom type lcsCISTPortPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_LcsCISTPortPortPriority_Type.__name__ = "Integer32"
_LcsCISTPortPortPriority_Object = MibTableColumn
lcsCISTPortPortPriority = _LcsCISTPortPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 4),
    _LcsCISTPortPortPriority_Type()
)
lcsCISTPortPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortPortPriority.setStatus("current")


class _LcsCISTPortAdminEdge_Type(Integer32):
    """Custom type lcsCISTPortAdminEdge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortAdminEdge_Type.__name__ = "Integer32"
_LcsCISTPortAdminEdge_Object = MibTableColumn
lcsCISTPortAdminEdge = _LcsCISTPortAdminEdge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 5),
    _LcsCISTPortAdminEdge_Type()
)
lcsCISTPortAdminEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortAdminEdge.setStatus("current")


class _LcsCISTPortAutoEdge_Type(Integer32):
    """Custom type lcsCISTPortAutoEdge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortAutoEdge_Type.__name__ = "Integer32"
_LcsCISTPortAutoEdge_Object = MibTableColumn
lcsCISTPortAutoEdge = _LcsCISTPortAutoEdge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 6),
    _LcsCISTPortAutoEdge_Type()
)
lcsCISTPortAutoEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortAutoEdge.setStatus("current")


class _LcsCISTPortrestrictedRole_Type(Integer32):
    """Custom type lcsCISTPortrestrictedRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortrestrictedRole_Type.__name__ = "Integer32"
_LcsCISTPortrestrictedRole_Object = MibTableColumn
lcsCISTPortrestrictedRole = _LcsCISTPortrestrictedRole_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 7),
    _LcsCISTPortrestrictedRole_Type()
)
lcsCISTPortrestrictedRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortrestrictedRole.setStatus("current")


class _LcsCISTPortrestrictedTcn_Type(Integer32):
    """Custom type lcsCISTPortrestrictedTcn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortrestrictedTcn_Type.__name__ = "Integer32"
_LcsCISTPortrestrictedTcn_Object = MibTableColumn
lcsCISTPortrestrictedTcn = _LcsCISTPortrestrictedTcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 8),
    _LcsCISTPortrestrictedTcn_Type()
)
lcsCISTPortrestrictedTcn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortrestrictedTcn.setStatus("current")


class _LcsCISTPortbpduGuard_Type(Integer32):
    """Custom type lcsCISTPortbpduGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortbpduGuard_Type.__name__ = "Integer32"
_LcsCISTPortbpduGuard_Object = MibTableColumn
lcsCISTPortbpduGuard = _LcsCISTPortbpduGuard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 9),
    _LcsCISTPortbpduGuard_Type()
)
lcsCISTPortbpduGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortbpduGuard.setStatus("current")


class _LcsCISTPortPointToPoint_Type(Integer32):
    """Custom type lcsCISTPortPointToPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsCISTPortPointToPoint_Type.__name__ = "Integer32"
_LcsCISTPortPointToPoint_Object = MibTableColumn
lcsCISTPortPointToPoint = _LcsCISTPortPointToPoint_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 10),
    _LcsCISTPortPointToPoint_Type()
)
lcsCISTPortPointToPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortPointToPoint.setStatus("current")


class _LcsCISTPortRootGuard_Type(Integer32):
    """Custom type lcsCISTPortRootGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsCISTPortRootGuard_Type.__name__ = "Integer32"
_LcsCISTPortRootGuard_Object = MibTableColumn
lcsCISTPortRootGuard = _LcsCISTPortRootGuard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 5, 10, 1, 11),
    _LcsCISTPortRootGuard_Type()
)
lcsCISTPortRootGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCISTPortRootGuard.setStatus("current")
_LcsMSTIPorts_ObjectIdentity = ObjectIdentity
lcsMSTIPorts = _LcsMSTIPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6)
)
_LcsMSTIAggregatedPortsTable_Object = MibTable
lcsMSTIAggregatedPortsTable = _LcsMSTIAggregatedPortsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 1)
)
if mibBuilder.loadTexts:
    lcsMSTIAggregatedPortsTable.setStatus("current")
_LcsMSTIAggregatedPortsEntry_Object = MibTableRow
lcsMSTIAggregatedPortsEntry = _LcsMSTIAggregatedPortsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 1, 1)
)
lcsMSTIAggregatedPortsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMSTIAggregatedPortsMSTIndex"),
)
if mibBuilder.loadTexts:
    lcsMSTIAggregatedPortsEntry.setStatus("current")


class _LcsMSTIAggregatedPortsMSTIndex_Type(Integer32):
    """Custom type lcsMSTIAggregatedPortsMSTIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_LcsMSTIAggregatedPortsMSTIndex_Type.__name__ = "Integer32"
_LcsMSTIAggregatedPortsMSTIndex_Object = MibTableColumn
lcsMSTIAggregatedPortsMSTIndex = _LcsMSTIAggregatedPortsMSTIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 1, 1, 1),
    _LcsMSTIAggregatedPortsMSTIndex_Type()
)
lcsMSTIAggregatedPortsMSTIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMSTIAggregatedPortsMSTIndex.setStatus("current")


class _LcsMSTIAggregatedPortsPathCost_Type(Integer32):
    """Custom type lcsMSTIAggregatedPortsPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000000),
    )


_LcsMSTIAggregatedPortsPathCost_Type.__name__ = "Integer32"
_LcsMSTIAggregatedPortsPathCost_Object = MibTableColumn
lcsMSTIAggregatedPortsPathCost = _LcsMSTIAggregatedPortsPathCost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 1, 1, 3),
    _LcsMSTIAggregatedPortsPathCost_Type()
)
lcsMSTIAggregatedPortsPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTIAggregatedPortsPathCost.setStatus("current")


class _LcsMSTIAggregatedPortsPortPriority_Type(Integer32):
    """Custom type lcsMSTIAggregatedPortsPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_LcsMSTIAggregatedPortsPortPriority_Type.__name__ = "Integer32"
_LcsMSTIAggregatedPortsPortPriority_Object = MibTableColumn
lcsMSTIAggregatedPortsPortPriority = _LcsMSTIAggregatedPortsPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 1, 1, 4),
    _LcsMSTIAggregatedPortsPortPriority_Type()
)
lcsMSTIAggregatedPortsPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTIAggregatedPortsPortPriority.setStatus("current")
_LcsMSTIPortsTable_Object = MibTable
lcsMSTIPortsTable = _LcsMSTIPortsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2)
)
if mibBuilder.loadTexts:
    lcsMSTIPortsTable.setStatus("current")
_LcsMSTIPortsEntry_Object = MibTableRow
lcsMSTIPortsEntry = _LcsMSTIPortsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2, 1)
)
lcsMSTIPortsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMSTIPortsMSTIndex"),
    (0, "LCOS-SX-MIB", "lcsMSTIPortsPortIndex"),
)
if mibBuilder.loadTexts:
    lcsMSTIPortsEntry.setStatus("current")


class _LcsMSTIPortsMSTIndex_Type(Integer32):
    """Custom type lcsMSTIPortsMSTIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_LcsMSTIPortsMSTIndex_Type.__name__ = "Integer32"
_LcsMSTIPortsMSTIndex_Object = MibTableColumn
lcsMSTIPortsMSTIndex = _LcsMSTIPortsMSTIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2, 1, 1),
    _LcsMSTIPortsMSTIndex_Type()
)
lcsMSTIPortsMSTIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMSTIPortsMSTIndex.setStatus("current")


class _LcsMSTIPortsPortIndex_Type(Integer32):
    """Custom type lcsMSTIPortsPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 53),
    )


_LcsMSTIPortsPortIndex_Type.__name__ = "Integer32"
_LcsMSTIPortsPortIndex_Object = MibTableColumn
lcsMSTIPortsPortIndex = _LcsMSTIPortsPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2, 1, 2),
    _LcsMSTIPortsPortIndex_Type()
)
lcsMSTIPortsPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMSTIPortsPortIndex.setStatus("current")


class _LcsMSTIPortsPathCost_Type(Integer32):
    """Custom type lcsMSTIPortsPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000000),
    )


_LcsMSTIPortsPathCost_Type.__name__ = "Integer32"
_LcsMSTIPortsPathCost_Object = MibTableColumn
lcsMSTIPortsPathCost = _LcsMSTIPortsPathCost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2, 1, 3),
    _LcsMSTIPortsPathCost_Type()
)
lcsMSTIPortsPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTIPortsPathCost.setStatus("current")


class _LcsMSTIPortsPortPriority_Type(Integer32):
    """Custom type lcsMSTIPortsPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_LcsMSTIPortsPortPriority_Type.__name__ = "Integer32"
_LcsMSTIPortsPortPriority_Object = MibTableColumn
lcsMSTIPortsPortPriority = _LcsMSTIPortsPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 18, 6, 2, 1, 4),
    _LcsMSTIPortsPortPriority_Type()
)
lcsMSTIPortsPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMSTIPortsPortPriority.setStatus("current")
_LcsPrivateVLANs_ObjectIdentity = ObjectIdentity
lcsPrivateVLANs = _LcsPrivateVLANs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19)
)
_LcsPVLANMembershipTable_Object = MibTable
lcsPVLANMembershipTable = _LcsPVLANMembershipTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1)
)
if mibBuilder.loadTexts:
    lcsPVLANMembershipTable.setStatus("current")
_LcsPVLANMembershipEntry_Object = MibTableRow
lcsPVLANMembershipEntry = _LcsPVLANMembershipEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1, 1)
)
lcsPVLANMembershipEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPVLANMembershipIndex"),
)
if mibBuilder.loadTexts:
    lcsPVLANMembershipEntry.setStatus("current")


class _LcsPVLANMembershipIndex_Type(Integer32):
    """Custom type lcsPVLANMembershipIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_LcsPVLANMembershipIndex_Type.__name__ = "Integer32"
_LcsPVLANMembershipIndex_Object = MibTableColumn
lcsPVLANMembershipIndex = _LcsPVLANMembershipIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1, 1, 1),
    _LcsPVLANMembershipIndex_Type()
)
lcsPVLANMembershipIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPVLANMembershipIndex.setStatus("current")


class _LcsPVLANID_Type(Integer32):
    """Custom type lcsPVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_LcsPVLANID_Type.__name__ = "Integer32"
_LcsPVLANID_Object = MibTableColumn
lcsPVLANID = _LcsPVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1, 1, 2),
    _LcsPVLANID_Type()
)
lcsPVLANID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPVLANID.setStatus("current")
_LcsPVLANMembers_Type = DisplayString
_LcsPVLANMembers_Object = MibTableColumn
lcsPVLANMembers = _LcsPVLANMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1, 1, 3),
    _LcsPVLANMembers_Type()
)
lcsPVLANMembers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPVLANMembers.setStatus("current")
_LcsPVLANRowStatus_Type = RowStatus
_LcsPVLANRowStatus_Object = MibTableColumn
lcsPVLANRowStatus = _LcsPVLANRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 1, 1, 4),
    _LcsPVLANRowStatus_Type()
)
lcsPVLANRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPVLANRowStatus.setStatus("current")
_LcsPVLANPortIsolationTable_Object = MibTable
lcsPVLANPortIsolationTable = _LcsPVLANPortIsolationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 2)
)
if mibBuilder.loadTexts:
    lcsPVLANPortIsolationTable.setStatus("current")
_LcsPVLANPortIsolationEntry_Object = MibTableRow
lcsPVLANPortIsolationEntry = _LcsPVLANPortIsolationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 2, 1)
)
lcsPVLANPortIsolationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPVLANPortIsolationIndex"),
)
if mibBuilder.loadTexts:
    lcsPVLANPortIsolationEntry.setStatus("current")


class _LcsPVLANPortIsolationIndex_Type(Integer32):
    """Custom type lcsPVLANPortIsolationIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_LcsPVLANPortIsolationIndex_Type.__name__ = "Integer32"
_LcsPVLANPortIsolationIndex_Object = MibTableColumn
lcsPVLANPortIsolationIndex = _LcsPVLANPortIsolationIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 2, 1, 1),
    _LcsPVLANPortIsolationIndex_Type()
)
lcsPVLANPortIsolationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPVLANPortIsolationIndex.setStatus("current")


class _LcsPVLANPortIsolationPortMembers_Type(Integer32):
    """Custom type lcsPVLANPortIsolationPortMembers based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPVLANPortIsolationPortMembers_Type.__name__ = "Integer32"
_LcsPVLANPortIsolationPortMembers_Object = MibTableColumn
lcsPVLANPortIsolationPortMembers = _LcsPVLANPortIsolationPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 19, 2, 1, 2),
    _LcsPVLANPortIsolationPortMembers_Type()
)
lcsPVLANPortIsolationPortMembers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPVLANPortIsolationPortMembers.setStatus("current")
_LcssFlow_ObjectIdentity = ObjectIdentity
lcssFlow = _LcssFlow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20)
)


class _LcssFlowVersion_Type(SnmpAdminString):
    """Custom type lcssFlowVersion based on SnmpAdminString"""
    defaultValue = OctetString("1.3;;")


_LcssFlowVersion_Type.__name__ = "SnmpAdminString"
_LcssFlowVersion_Object = MibScalar
lcssFlowVersion = _LcssFlowVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 1),
    _LcssFlowVersion_Type()
)
lcssFlowVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcssFlowVersion.setStatus("current")
_LcssFlowAgentAddressType_Type = InetAddressType
_LcssFlowAgentAddressType_Object = MibScalar
lcssFlowAgentAddressType = _LcssFlowAgentAddressType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 2),
    _LcssFlowAgentAddressType_Type()
)
lcssFlowAgentAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcssFlowAgentAddressType.setStatus("current")
_LcssFlowAgentAddress_Type = IpAddress
_LcssFlowAgentAddress_Object = MibScalar
lcssFlowAgentAddress = _LcssFlowAgentAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 3),
    _LcssFlowAgentAddress_Type()
)
lcssFlowAgentAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowAgentAddress.setStatus("current")
_LcssFlowRcvrTable_Object = MibTable
lcssFlowRcvrTable = _LcssFlowRcvrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4)
)
if mibBuilder.loadTexts:
    lcssFlowRcvrTable.setStatus("current")
_LcssFlowRcvrEntry_Object = MibTableRow
lcssFlowRcvrEntry = _LcssFlowRcvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1)
)
lcssFlowRcvrEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcssFlowRcvrIndex"),
)
if mibBuilder.loadTexts:
    lcssFlowRcvrEntry.setStatus("current")


class _LcssFlowRcvrIndex_Type(Integer32):
    """Custom type lcssFlowRcvrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcssFlowRcvrIndex_Type.__name__ = "Integer32"
_LcssFlowRcvrIndex_Object = MibTableColumn
lcssFlowRcvrIndex = _LcssFlowRcvrIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 1),
    _LcssFlowRcvrIndex_Type()
)
lcssFlowRcvrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcssFlowRcvrIndex.setStatus("current")


class _LcssFlowRcvrOwner_Type(OwnerString):
    """Custom type lcssFlowRcvrOwner based on OwnerString"""
    defaultValue = OctetString("")


_LcssFlowRcvrOwner_Type.__name__ = "OwnerString"
_LcssFlowRcvrOwner_Object = MibTableColumn
lcssFlowRcvrOwner = _LcssFlowRcvrOwner_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 2),
    _LcssFlowRcvrOwner_Type()
)
lcssFlowRcvrOwner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrOwner.setStatus("current")


class _LcssFlowRcvrTimeout_Type(Integer32):
    """Custom type lcssFlowRcvrTimeout based on Integer32"""
    defaultValue = 0


_LcssFlowRcvrTimeout_Type.__name__ = "Integer32"
_LcssFlowRcvrTimeout_Object = MibTableColumn
lcssFlowRcvrTimeout = _LcssFlowRcvrTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 3),
    _LcssFlowRcvrTimeout_Type()
)
lcssFlowRcvrTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrTimeout.setStatus("current")


class _LcssFlowRcvrMaximumDatagramSize_Type(Integer32):
    """Custom type lcssFlowRcvrMaximumDatagramSize based on Integer32"""
    defaultValue = 1400


_LcssFlowRcvrMaximumDatagramSize_Type.__name__ = "Integer32"
_LcssFlowRcvrMaximumDatagramSize_Object = MibTableColumn
lcssFlowRcvrMaximumDatagramSize = _LcssFlowRcvrMaximumDatagramSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 4),
    _LcssFlowRcvrMaximumDatagramSize_Type()
)
lcssFlowRcvrMaximumDatagramSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrMaximumDatagramSize.setStatus("current")


class _LcssFlowRcvrAddressType_Type(InetAddressType):
    """Custom type lcssFlowRcvrAddressType based on InetAddressType"""
    defaultValue = 1


_LcssFlowRcvrAddressType_Type.__name__ = "InetAddressType"
_LcssFlowRcvrAddressType_Object = MibTableColumn
lcssFlowRcvrAddressType = _LcssFlowRcvrAddressType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 5),
    _LcssFlowRcvrAddressType_Type()
)
lcssFlowRcvrAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrAddressType.setStatus("current")


class _LcssFlowRcvrAddress_Type(IpAddress):
    """Custom type lcssFlowRcvrAddress based on IpAddress"""
    defaultHexValue = "00000000"


_LcssFlowRcvrAddress_Type.__name__ = "IpAddress"
_LcssFlowRcvrAddress_Object = MibTableColumn
lcssFlowRcvrAddress = _LcssFlowRcvrAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 6),
    _LcssFlowRcvrAddress_Type()
)
lcssFlowRcvrAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrAddress.setStatus("current")


class _LcssFlowRcvrPort_Type(Integer32):
    """Custom type lcssFlowRcvrPort based on Integer32"""
    defaultValue = 6343


_LcssFlowRcvrPort_Type.__name__ = "Integer32"
_LcssFlowRcvrPort_Object = MibTableColumn
lcssFlowRcvrPort = _LcssFlowRcvrPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 7),
    _LcssFlowRcvrPort_Type()
)
lcssFlowRcvrPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrPort.setStatus("current")


class _LcssFlowRcvrDatagramVersion_Type(Integer32):
    """Custom type lcssFlowRcvrDatagramVersion based on Integer32"""
    defaultValue = 5


_LcssFlowRcvrDatagramVersion_Type.__name__ = "Integer32"
_LcssFlowRcvrDatagramVersion_Object = MibTableColumn
lcssFlowRcvrDatagramVersion = _LcssFlowRcvrDatagramVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 8),
    _LcssFlowRcvrDatagramVersion_Type()
)
lcssFlowRcvrDatagramVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrDatagramVersion.setStatus("current")


class _LcssFlowRcvrMode_Type(Integer32):
    """Custom type lcssFlowRcvrMode based on Integer32"""
    defaultValue = 0


_LcssFlowRcvrMode_Type.__name__ = "Integer32"
_LcssFlowRcvrMode_Object = MibTableColumn
lcssFlowRcvrMode = _LcssFlowRcvrMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 4, 1, 9),
    _LcssFlowRcvrMode_Type()
)
lcssFlowRcvrMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowRcvrMode.setStatus("current")
_LcssFlowFsTable_Object = MibTable
lcssFlowFsTable = _LcssFlowFsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5)
)
if mibBuilder.loadTexts:
    lcssFlowFsTable.setStatus("current")
_LcssFlowFsEntry_Object = MibTableRow
lcssFlowFsEntry = _LcssFlowFsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1)
)
lcssFlowFsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcssFlowFsDataSource"),
    (0, "LCOS-SX-MIB", "lcssFlowFsInstance"),
)
if mibBuilder.loadTexts:
    lcssFlowFsEntry.setStatus("current")


class _LcssFlowFsDataSource_Type(Integer32):
    """Custom type lcssFlowFsDataSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcssFlowFsDataSource_Type.__name__ = "Integer32"
_LcssFlowFsDataSource_Object = MibTableColumn
lcssFlowFsDataSource = _LcssFlowFsDataSource_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 1),
    _LcssFlowFsDataSource_Type()
)
lcssFlowFsDataSource.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcssFlowFsDataSource.setStatus("current")


class _LcssFlowFsInstance_Type(Integer32):
    """Custom type lcssFlowFsInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcssFlowFsInstance_Type.__name__ = "Integer32"
_LcssFlowFsInstance_Object = MibTableColumn
lcssFlowFsInstance = _LcssFlowFsInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 2),
    _LcssFlowFsInstance_Type()
)
lcssFlowFsInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcssFlowFsInstance.setStatus("current")


class _LcssFlowFsReceiver_Type(Integer32):
    """Custom type lcssFlowFsReceiver based on Integer32"""
    defaultValue = 0


_LcssFlowFsReceiver_Type.__name__ = "Integer32"
_LcssFlowFsReceiver_Object = MibTableColumn
lcssFlowFsReceiver = _LcssFlowFsReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 3),
    _LcssFlowFsReceiver_Type()
)
lcssFlowFsReceiver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowFsReceiver.setStatus("current")


class _LcssFlowFsPacketSamplingRate_Type(Integer32):
    """Custom type lcssFlowFsPacketSamplingRate based on Integer32"""
    defaultValue = 0


_LcssFlowFsPacketSamplingRate_Type.__name__ = "Integer32"
_LcssFlowFsPacketSamplingRate_Object = MibTableColumn
lcssFlowFsPacketSamplingRate = _LcssFlowFsPacketSamplingRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 4),
    _LcssFlowFsPacketSamplingRate_Type()
)
lcssFlowFsPacketSamplingRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowFsPacketSamplingRate.setStatus("current")


class _LcssFlowFsMaximumHeaderSize_Type(Integer32):
    """Custom type lcssFlowFsMaximumHeaderSize based on Integer32"""
    defaultValue = 128


_LcssFlowFsMaximumHeaderSize_Type.__name__ = "Integer32"
_LcssFlowFsMaximumHeaderSize_Object = MibTableColumn
lcssFlowFsMaximumHeaderSize = _LcssFlowFsMaximumHeaderSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 5),
    _LcssFlowFsMaximumHeaderSize_Type()
)
lcssFlowFsMaximumHeaderSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowFsMaximumHeaderSize.setStatus("current")


class _LcssFlowFsType_Type(Integer32):
    """Custom type lcssFlowFsType based on Integer32"""
    defaultValue = 2


_LcssFlowFsType_Type.__name__ = "Integer32"
_LcssFlowFsType_Object = MibTableColumn
lcssFlowFsType = _LcssFlowFsType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 5, 1, 6),
    _LcssFlowFsType_Type()
)
lcssFlowFsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowFsType.setStatus("current")
_LcssFlowCpTable_Object = MibTable
lcssFlowCpTable = _LcssFlowCpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6)
)
if mibBuilder.loadTexts:
    lcssFlowCpTable.setStatus("current")
_LcssFlowCpEntry_Object = MibTableRow
lcssFlowCpEntry = _LcssFlowCpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6, 1)
)
lcssFlowCpEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcssFlowCpDataSource"),
    (0, "LCOS-SX-MIB", "lcssFlowCpInstance"),
)
if mibBuilder.loadTexts:
    lcssFlowCpEntry.setStatus("current")


class _LcssFlowCpDataSource_Type(Integer32):
    """Custom type lcssFlowCpDataSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcssFlowCpDataSource_Type.__name__ = "Integer32"
_LcssFlowCpDataSource_Object = MibTableColumn
lcssFlowCpDataSource = _LcssFlowCpDataSource_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6, 1, 1),
    _LcssFlowCpDataSource_Type()
)
lcssFlowCpDataSource.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcssFlowCpDataSource.setStatus("current")


class _LcssFlowCpInstance_Type(Integer32):
    """Custom type lcssFlowCpInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcssFlowCpInstance_Type.__name__ = "Integer32"
_LcssFlowCpInstance_Object = MibTableColumn
lcssFlowCpInstance = _LcssFlowCpInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6, 1, 2),
    _LcssFlowCpInstance_Type()
)
lcssFlowCpInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcssFlowCpInstance.setStatus("current")


class _LcssFlowCpReceiver_Type(Integer32):
    """Custom type lcssFlowCpReceiver based on Integer32"""
    defaultValue = 0


_LcssFlowCpReceiver_Type.__name__ = "Integer32"
_LcssFlowCpReceiver_Object = MibTableColumn
lcssFlowCpReceiver = _LcssFlowCpReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6, 1, 3),
    _LcssFlowCpReceiver_Type()
)
lcssFlowCpReceiver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowCpReceiver.setStatus("current")


class _LcssFlowCpInterval_Type(Integer32):
    """Custom type lcssFlowCpInterval based on Integer32"""
    defaultValue = 0


_LcssFlowCpInterval_Type.__name__ = "Integer32"
_LcssFlowCpInterval_Object = MibTableColumn
lcssFlowCpInterval = _LcssFlowCpInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 20, 6, 1, 4),
    _LcssFlowCpInterval_Type()
)
lcssFlowCpInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcssFlowCpInterval.setStatus("current")
_LcsLLDP_ObjectIdentity = ObjectIdentity
lcsLLDP = _LcsLLDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21)
)
_LcsLLDPConfTable_Object = MibTable
lcsLLDPConfTable = _LcsLLDPConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1)
)
if mibBuilder.loadTexts:
    lcsLLDPConfTable.setStatus("current")
_LcsLLDPConfEntry_Object = MibTableRow
lcsLLDPConfEntry = _LcsLLDPConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1)
)
lcsLLDPConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLLDPIndex"),
)
if mibBuilder.loadTexts:
    lcsLLDPConfEntry.setStatus("current")


class _LcsLLDPIndex_Type(Integer32):
    """Custom type lcsLLDPIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsLLDPIndex_Type.__name__ = "Integer32"
_LcsLLDPIndex_Object = MibTableColumn
lcsLLDPIndex = _LcsLLDPIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 1),
    _LcsLLDPIndex_Type()
)
lcsLLDPIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPIndex.setStatus("current")
_LcsLLDPMode_Type = Integer32
_LcsLLDPMode_Object = MibTableColumn
lcsLLDPMode = _LcsLLDPMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 2),
    _LcsLLDPMode_Type()
)
lcsLLDPMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMode.setStatus("current")
_LcsLLDPCDPAware_Type = Integer32
_LcsLLDPCDPAware_Object = MibTableColumn
lcsLLDPCDPAware = _LcsLLDPCDPAware_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 3),
    _LcsLLDPCDPAware_Type()
)
lcsLLDPCDPAware.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPCDPAware.setStatus("current")
_LcsLLDPTrap_Type = Integer32
_LcsLLDPTrap_Object = MibTableColumn
lcsLLDPTrap = _LcsLLDPTrap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 4),
    _LcsLLDPTrap_Type()
)
lcsLLDPTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPTrap.setStatus("current")
_LcsLLDPPortDescr_Type = Integer32
_LcsLLDPPortDescr_Object = MibTableColumn
lcsLLDPPortDescr = _LcsLLDPPortDescr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 5),
    _LcsLLDPPortDescr_Type()
)
lcsLLDPPortDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPPortDescr.setStatus("current")
_LcsLLDPSysName_Type = Integer32
_LcsLLDPSysName_Object = MibTableColumn
lcsLLDPSysName = _LcsLLDPSysName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 6),
    _LcsLLDPSysName_Type()
)
lcsLLDPSysName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPSysName.setStatus("current")
_LcsLLDPSysDescr_Type = Integer32
_LcsLLDPSysDescr_Object = MibTableColumn
lcsLLDPSysDescr = _LcsLLDPSysDescr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 7),
    _LcsLLDPSysDescr_Type()
)
lcsLLDPSysDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPSysDescr.setStatus("current")
_LcsLLDPSysCapa_Type = Integer32
_LcsLLDPSysCapa_Object = MibTableColumn
lcsLLDPSysCapa = _LcsLLDPSysCapa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 8),
    _LcsLLDPSysCapa_Type()
)
lcsLLDPSysCapa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPSysCapa.setStatus("current")
_LcsLLDPMgmtAddr_Type = Integer32
_LcsLLDPMgmtAddr_Object = MibTableColumn
lcsLLDPMgmtAddr = _LcsLLDPMgmtAddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 1, 1, 9),
    _LcsLLDPMgmtAddr_Type()
)
lcsLLDPMgmtAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMgmtAddr.setStatus("current")
_LcsLLDPMEDCoordinatesLocation_ObjectIdentity = ObjectIdentity
lcsLLDPMEDCoordinatesLocation = _LcsLLDPMEDCoordinatesLocation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2)
)
_LcsLLDPMEDLatitude_Type = DisplayString
_LcsLLDPMEDLatitude_Object = MibScalar
lcsLLDPMEDLatitude = _LcsLLDPMEDLatitude_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 2),
    _LcsLLDPMEDLatitude_Type()
)
lcsLLDPMEDLatitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDLatitude.setStatus("current")


class _LcsLLDPMEDLatitudeDirection_Type(Integer32):
    """Custom type lcsLLDPMEDLatitudeDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLLDPMEDLatitudeDirection_Type.__name__ = "Integer32"
_LcsLLDPMEDLatitudeDirection_Object = MibScalar
lcsLLDPMEDLatitudeDirection = _LcsLLDPMEDLatitudeDirection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 3),
    _LcsLLDPMEDLatitudeDirection_Type()
)
lcsLLDPMEDLatitudeDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDLatitudeDirection.setStatus("current")
_LcsLLDPMEDLongitude_Type = DisplayString
_LcsLLDPMEDLongitude_Object = MibScalar
lcsLLDPMEDLongitude = _LcsLLDPMEDLongitude_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 4),
    _LcsLLDPMEDLongitude_Type()
)
lcsLLDPMEDLongitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDLongitude.setStatus("current")


class _LcsLLDPMEDLongitudeDirection_Type(Integer32):
    """Custom type lcsLLDPMEDLongitudeDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLLDPMEDLongitudeDirection_Type.__name__ = "Integer32"
_LcsLLDPMEDLongitudeDirection_Object = MibScalar
lcsLLDPMEDLongitudeDirection = _LcsLLDPMEDLongitudeDirection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 5),
    _LcsLLDPMEDLongitudeDirection_Type()
)
lcsLLDPMEDLongitudeDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDLongitudeDirection.setStatus("current")
_LcsLLDPMEDAltitude_Type = DisplayString
_LcsLLDPMEDAltitude_Object = MibScalar
lcsLLDPMEDAltitude = _LcsLLDPMEDAltitude_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 6),
    _LcsLLDPMEDAltitude_Type()
)
lcsLLDPMEDAltitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDAltitude.setStatus("current")


class _LcsLLDPMEDAltitudeType_Type(Integer32):
    """Custom type lcsLLDPMEDAltitudeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
    )


_LcsLLDPMEDAltitudeType_Type.__name__ = "Integer32"
_LcsLLDPMEDAltitudeType_Object = MibScalar
lcsLLDPMEDAltitudeType = _LcsLLDPMEDAltitudeType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 7),
    _LcsLLDPMEDAltitudeType_Type()
)
lcsLLDPMEDAltitudeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDAltitudeType.setStatus("current")


class _LcsLLDPMEDMapDatum_Type(Integer32):
    """Custom type lcsLLDPMEDMapDatum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsLLDPMEDMapDatum_Type.__name__ = "Integer32"
_LcsLLDPMEDMapDatum_Object = MibScalar
lcsLLDPMEDMapDatum = _LcsLLDPMEDMapDatum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 2, 8),
    _LcsLLDPMEDMapDatum_Type()
)
lcsLLDPMEDMapDatum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDMapDatum.setStatus("current")
_LcsLLDPMEDCivicAddressLocation_ObjectIdentity = ObjectIdentity
lcsLLDPMEDCivicAddressLocation = _LcsLLDPMEDCivicAddressLocation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4)
)
_LcsLLDPMEDCivicAddressLocationCountryCode_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationCountryCode_Object = MibScalar
lcsLLDPMEDCivicAddressLocationCountryCode = _LcsLLDPMEDCivicAddressLocationCountryCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 2),
    _LcsLLDPMEDCivicAddressLocationCountryCode_Type()
)
lcsLLDPMEDCivicAddressLocationCountryCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationCountryCode.setStatus("current")
_LcsLLDPMEDCivicAddressLocationStateProvince_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationStateProvince_Object = MibScalar
lcsLLDPMEDCivicAddressLocationStateProvince = _LcsLLDPMEDCivicAddressLocationStateProvince_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 3),
    _LcsLLDPMEDCivicAddressLocationStateProvince_Type()
)
lcsLLDPMEDCivicAddressLocationStateProvince.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationStateProvince.setStatus("current")
_LcsLLDPMEDCivicAddressLocationCounty_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationCounty_Object = MibScalar
lcsLLDPMEDCivicAddressLocationCounty = _LcsLLDPMEDCivicAddressLocationCounty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 4),
    _LcsLLDPMEDCivicAddressLocationCounty_Type()
)
lcsLLDPMEDCivicAddressLocationCounty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationCounty.setStatus("current")
_LcsLLDPMEDCivicAddressLocationCity_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationCity_Object = MibScalar
lcsLLDPMEDCivicAddressLocationCity = _LcsLLDPMEDCivicAddressLocationCity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 5),
    _LcsLLDPMEDCivicAddressLocationCity_Type()
)
lcsLLDPMEDCivicAddressLocationCity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationCity.setStatus("current")
_LcsLLDPMEDCivicAddressLocationCityDistrict_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationCityDistrict_Object = MibScalar
lcsLLDPMEDCivicAddressLocationCityDistrict = _LcsLLDPMEDCivicAddressLocationCityDistrict_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 6),
    _LcsLLDPMEDCivicAddressLocationCityDistrict_Type()
)
lcsLLDPMEDCivicAddressLocationCityDistrict.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationCityDistrict.setStatus("current")
_LcsLLDPMEDCivicAddressLocationBlockNeighborhood_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationBlockNeighborhood_Object = MibScalar
lcsLLDPMEDCivicAddressLocationBlockNeighborhood = _LcsLLDPMEDCivicAddressLocationBlockNeighborhood_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 7),
    _LcsLLDPMEDCivicAddressLocationBlockNeighborhood_Type()
)
lcsLLDPMEDCivicAddressLocationBlockNeighborhood.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationBlockNeighborhood.setStatus("current")
_LcsLLDPMEDCivicAddressLocationStreet_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationStreet_Object = MibScalar
lcsLLDPMEDCivicAddressLocationStreet = _LcsLLDPMEDCivicAddressLocationStreet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 8),
    _LcsLLDPMEDCivicAddressLocationStreet_Type()
)
lcsLLDPMEDCivicAddressLocationStreet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationStreet.setStatus("current")
_LcsLLDPMEDCivicAddressLocationLeadingStreetDirection_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationLeadingStreetDirection_Object = MibScalar
lcsLLDPMEDCivicAddressLocationLeadingStreetDirection = _LcsLLDPMEDCivicAddressLocationLeadingStreetDirection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 9),
    _LcsLLDPMEDCivicAddressLocationLeadingStreetDirection_Type()
)
lcsLLDPMEDCivicAddressLocationLeadingStreetDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationLeadingStreetDirection.setStatus("current")
_LcsLLDPMEDCivicAddressLocationTrailingStreetSuffix_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationTrailingStreetSuffix_Object = MibScalar
lcsLLDPMEDCivicAddressLocationTrailingStreetSuffix = _LcsLLDPMEDCivicAddressLocationTrailingStreetSuffix_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 10),
    _LcsLLDPMEDCivicAddressLocationTrailingStreetSuffix_Type()
)
lcsLLDPMEDCivicAddressLocationTrailingStreetSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationTrailingStreetSuffix.setStatus("current")
_LcsLLDPMEDCivicAddressLocationStreetSuffix_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationStreetSuffix_Object = MibScalar
lcsLLDPMEDCivicAddressLocationStreetSuffix = _LcsLLDPMEDCivicAddressLocationStreetSuffix_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 11),
    _LcsLLDPMEDCivicAddressLocationStreetSuffix_Type()
)
lcsLLDPMEDCivicAddressLocationStreetSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationStreetSuffix.setStatus("current")
_LcsLLDPMEDCivicAddressLocationHouseNo_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationHouseNo_Object = MibScalar
lcsLLDPMEDCivicAddressLocationHouseNo = _LcsLLDPMEDCivicAddressLocationHouseNo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 12),
    _LcsLLDPMEDCivicAddressLocationHouseNo_Type()
)
lcsLLDPMEDCivicAddressLocationHouseNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationHouseNo.setStatus("current")
_LcsLLDPMEDCivicAddressLocationHouseNoSuffix_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationHouseNoSuffix_Object = MibScalar
lcsLLDPMEDCivicAddressLocationHouseNoSuffix = _LcsLLDPMEDCivicAddressLocationHouseNoSuffix_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 13),
    _LcsLLDPMEDCivicAddressLocationHouseNoSuffix_Type()
)
lcsLLDPMEDCivicAddressLocationHouseNoSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationHouseNoSuffix.setStatus("current")
_LcsLLDPMEDCivicAddressLocationLandmark_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationLandmark_Object = MibScalar
lcsLLDPMEDCivicAddressLocationLandmark = _LcsLLDPMEDCivicAddressLocationLandmark_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 14),
    _LcsLLDPMEDCivicAddressLocationLandmark_Type()
)
lcsLLDPMEDCivicAddressLocationLandmark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationLandmark.setStatus("current")
_LcsLLDPMEDCivicAddressLocationAdditionalLocationInfo_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationAdditionalLocationInfo_Object = MibScalar
lcsLLDPMEDCivicAddressLocationAdditionalLocationInfo = _LcsLLDPMEDCivicAddressLocationAdditionalLocationInfo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 15),
    _LcsLLDPMEDCivicAddressLocationAdditionalLocationInfo_Type()
)
lcsLLDPMEDCivicAddressLocationAdditionalLocationInfo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationAdditionalLocationInfo.setStatus("current")
_LcsLLDPMEDCivicAddressLocationName_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationName_Object = MibScalar
lcsLLDPMEDCivicAddressLocationName = _LcsLLDPMEDCivicAddressLocationName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 16),
    _LcsLLDPMEDCivicAddressLocationName_Type()
)
lcsLLDPMEDCivicAddressLocationName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationName.setStatus("current")
_LcsLLDPMEDCivicAddressLocationZipCode_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationZipCode_Object = MibScalar
lcsLLDPMEDCivicAddressLocationZipCode = _LcsLLDPMEDCivicAddressLocationZipCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 17),
    _LcsLLDPMEDCivicAddressLocationZipCode_Type()
)
lcsLLDPMEDCivicAddressLocationZipCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationZipCode.setStatus("current")
_LcsLLDPMEDCivicAddressLocationBuilding_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationBuilding_Object = MibScalar
lcsLLDPMEDCivicAddressLocationBuilding = _LcsLLDPMEDCivicAddressLocationBuilding_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 18),
    _LcsLLDPMEDCivicAddressLocationBuilding_Type()
)
lcsLLDPMEDCivicAddressLocationBuilding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationBuilding.setStatus("current")
_LcsLLDPMEDCivicAddressLocationApartment_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationApartment_Object = MibScalar
lcsLLDPMEDCivicAddressLocationApartment = _LcsLLDPMEDCivicAddressLocationApartment_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 19),
    _LcsLLDPMEDCivicAddressLocationApartment_Type()
)
lcsLLDPMEDCivicAddressLocationApartment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationApartment.setStatus("current")
_LcsLLDPMEDCivicAddressLocationFloor_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationFloor_Object = MibScalar
lcsLLDPMEDCivicAddressLocationFloor = _LcsLLDPMEDCivicAddressLocationFloor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 20),
    _LcsLLDPMEDCivicAddressLocationFloor_Type()
)
lcsLLDPMEDCivicAddressLocationFloor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationFloor.setStatus("current")
_LcsLLDPMEDCivicAddressLocationRoomNo_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationRoomNo_Object = MibScalar
lcsLLDPMEDCivicAddressLocationRoomNo = _LcsLLDPMEDCivicAddressLocationRoomNo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 21),
    _LcsLLDPMEDCivicAddressLocationRoomNo_Type()
)
lcsLLDPMEDCivicAddressLocationRoomNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationRoomNo.setStatus("current")
_LcsLLDPMEDCivicAddressLocationPlaceType_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationPlaceType_Object = MibScalar
lcsLLDPMEDCivicAddressLocationPlaceType = _LcsLLDPMEDCivicAddressLocationPlaceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 22),
    _LcsLLDPMEDCivicAddressLocationPlaceType_Type()
)
lcsLLDPMEDCivicAddressLocationPlaceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationPlaceType.setStatus("current")
_LcsLLDPMEDCivicAddressLocationPostalCommunityName_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationPostalCommunityName_Object = MibScalar
lcsLLDPMEDCivicAddressLocationPostalCommunityName = _LcsLLDPMEDCivicAddressLocationPostalCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 23),
    _LcsLLDPMEDCivicAddressLocationPostalCommunityName_Type()
)
lcsLLDPMEDCivicAddressLocationPostalCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationPostalCommunityName.setStatus("current")
_LcsLLDPMEDCivicAddressLocationPOBox_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationPOBox_Object = MibScalar
lcsLLDPMEDCivicAddressLocationPOBox = _LcsLLDPMEDCivicAddressLocationPOBox_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 24),
    _LcsLLDPMEDCivicAddressLocationPOBox_Type()
)
lcsLLDPMEDCivicAddressLocationPOBox.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationPOBox.setStatus("current")
_LcsLLDPMEDCivicAddressLocationAdditionalCode_Type = DisplayString
_LcsLLDPMEDCivicAddressLocationAdditionalCode_Object = MibScalar
lcsLLDPMEDCivicAddressLocationAdditionalCode = _LcsLLDPMEDCivicAddressLocationAdditionalCode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 4, 25),
    _LcsLLDPMEDCivicAddressLocationAdditionalCode_Type()
)
lcsLLDPMEDCivicAddressLocationAdditionalCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDCivicAddressLocationAdditionalCode.setStatus("current")
_LcsLLDPMEDPoliciesTable_Object = MibTable
lcsLLDPMEDPoliciesTable = _LcsLLDPMEDPoliciesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5)
)
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesTable.setStatus("current")
_LcsLLDPMEDPoliciesEntry_Object = MibTableRow
lcsLLDPMEDPoliciesEntry = _LcsLLDPMEDPoliciesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1)
)
lcsLLDPMEDPoliciesEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLLDPMEDPoliciesIndex"),
)
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesEntry.setStatus("current")


class _LcsLLDPMEDPoliciesIndex_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsLLDPMEDPoliciesIndex_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesIndex_Object = MibTableColumn
lcsLLDPMEDPoliciesIndex = _LcsLLDPMEDPoliciesIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 1),
    _LcsLLDPMEDPoliciesIndex_Type()
)
lcsLLDPMEDPoliciesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesIndex.setStatus("current")
_LcsLLDPMEDPoliciesPolicyID_Type = Integer32
_LcsLLDPMEDPoliciesPolicyID_Object = MibTableColumn
lcsLLDPMEDPoliciesPolicyID = _LcsLLDPMEDPoliciesPolicyID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 2),
    _LcsLLDPMEDPoliciesPolicyID_Type()
)
lcsLLDPMEDPoliciesPolicyID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesPolicyID.setStatus("current")


class _LcsLLDPMEDPoliciesApplicationType_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesApplicationType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_LcsLLDPMEDPoliciesApplicationType_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesApplicationType_Object = MibTableColumn
lcsLLDPMEDPoliciesApplicationType = _LcsLLDPMEDPoliciesApplicationType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 3),
    _LcsLLDPMEDPoliciesApplicationType_Type()
)
lcsLLDPMEDPoliciesApplicationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesApplicationType.setStatus("current")


class _LcsLLDPMEDPoliciesTag_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLLDPMEDPoliciesTag_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesTag_Object = MibTableColumn
lcsLLDPMEDPoliciesTag = _LcsLLDPMEDPoliciesTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 4),
    _LcsLLDPMEDPoliciesTag_Type()
)
lcsLLDPMEDPoliciesTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesTag.setStatus("current")


class _LcsLLDPMEDPoliciesVLANID_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLLDPMEDPoliciesVLANID_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesVLANID_Object = MibTableColumn
lcsLLDPMEDPoliciesVLANID = _LcsLLDPMEDPoliciesVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 5),
    _LcsLLDPMEDPoliciesVLANID_Type()
)
lcsLLDPMEDPoliciesVLANID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesVLANID.setStatus("current")


class _LcsLLDPMEDPoliciesL2Priority_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesL2Priority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsLLDPMEDPoliciesL2Priority_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesL2Priority_Object = MibTableColumn
lcsLLDPMEDPoliciesL2Priority = _LcsLLDPMEDPoliciesL2Priority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 6),
    _LcsLLDPMEDPoliciesL2Priority_Type()
)
lcsLLDPMEDPoliciesL2Priority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesL2Priority.setStatus("current")


class _LcsLLDPMEDPoliciesDSCP_Type(Integer32):
    """Custom type lcsLLDPMEDPoliciesDSCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LcsLLDPMEDPoliciesDSCP_Type.__name__ = "Integer32"
_LcsLLDPMEDPoliciesDSCP_Object = MibTableColumn
lcsLLDPMEDPoliciesDSCP = _LcsLLDPMEDPoliciesDSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 7),
    _LcsLLDPMEDPoliciesDSCP_Type()
)
lcsLLDPMEDPoliciesDSCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesDSCP.setStatus("current")
_LcsLLDPMEDPoliciesRowStatus_Type = RowStatus
_LcsLLDPMEDPoliciesRowStatus_Object = MibTableColumn
lcsLLDPMEDPoliciesRowStatus = _LcsLLDPMEDPoliciesRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 5, 1, 8),
    _LcsLLDPMEDPoliciesRowStatus_Type()
)
lcsLLDPMEDPoliciesRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsLLDPMEDPoliciesRowStatus.setStatus("current")
_LcsLLDPMEDPolicyPortConfTable_Object = MibTable
lcsLLDPMEDPolicyPortConfTable = _LcsLLDPMEDPolicyPortConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 6)
)
if mibBuilder.loadTexts:
    lcsLLDPMEDPolicyPortConfTable.setStatus("current")
_LcsLLDPMEDPolicyPortConfEntry_Object = MibTableRow
lcsLLDPMEDPolicyPortConfEntry = _LcsLLDPMEDPolicyPortConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 6, 1)
)
lcsLLDPMEDPolicyPortConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLLDPMEDPolicyPortConfPort"),
)
if mibBuilder.loadTexts:
    lcsLLDPMEDPolicyPortConfEntry.setStatus("current")


class _LcsLLDPMEDPolicyPortConfPort_Type(Integer32):
    """Custom type lcsLLDPMEDPolicyPortConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsLLDPMEDPolicyPortConfPort_Type.__name__ = "Integer32"
_LcsLLDPMEDPolicyPortConfPort_Object = MibTableColumn
lcsLLDPMEDPolicyPortConfPort = _LcsLLDPMEDPolicyPortConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 6, 1, 1),
    _LcsLLDPMEDPolicyPortConfPort_Type()
)
lcsLLDPMEDPolicyPortConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLLDPMEDPolicyPortConfPort.setStatus("current")


class _LcsLLDPMEDPolicyPortConf_Type(Integer32):
    """Custom type lcsLLDPMEDPolicyPortConf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLLDPMEDPolicyPortConf_Type.__name__ = "Integer32"
_LcsLLDPMEDPolicyPortConf_Object = MibTableColumn
lcsLLDPMEDPolicyPortConf = _LcsLLDPMEDPolicyPortConf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 6, 1, 2),
    _LcsLLDPMEDPolicyPortConf_Type()
)
lcsLLDPMEDPolicyPortConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDPolicyPortConf.setStatus("current")


class _LcsLLDPMEDFastStartRepeatCount_Type(Integer32):
    """Custom type lcsLLDPMEDFastStartRepeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_LcsLLDPMEDFastStartRepeatCount_Type.__name__ = "Integer32"
_LcsLLDPMEDFastStartRepeatCount_Object = MibScalar
lcsLLDPMEDFastStartRepeatCount = _LcsLLDPMEDFastStartRepeatCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 7),
    _LcsLLDPMEDFastStartRepeatCount_Type()
)
lcsLLDPMEDFastStartRepeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDFastStartRepeatCount.setStatus("current")
_LcsLLDPMEDEmergencyCallService_Type = DisplayString
_LcsLLDPMEDEmergencyCallService_Object = MibScalar
lcsLLDPMEDEmergencyCallService = _LcsLLDPMEDEmergencyCallService_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 21, 8),
    _LcsLLDPMEDEmergencyCallService_Type()
)
lcsLLDPMEDEmergencyCallService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLLDPMEDEmergencyCallService.setStatus("current")
_LcsUDLD_ObjectIdentity = ObjectIdentity
lcsUDLD = _LcsUDLD_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22)
)
_LcsUDLDPortConfigTable_Object = MibTable
lcsUDLDPortConfigTable = _LcsUDLDPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 1)
)
if mibBuilder.loadTexts:
    lcsUDLDPortConfigTable.setStatus("current")
_LcsUDLDPortConfigEntry_Object = MibTableRow
lcsUDLDPortConfigEntry = _LcsUDLDPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 1, 1)
)
lcsUDLDPortConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsUDLDPort"),
)
if mibBuilder.loadTexts:
    lcsUDLDPortConfigEntry.setStatus("current")


class _LcsUDLDPort_Type(Integer32):
    """Custom type lcsUDLDPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsUDLDPort_Type.__name__ = "Integer32"
_LcsUDLDPort_Object = MibTableColumn
lcsUDLDPort = _LcsUDLDPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 1, 1, 1),
    _LcsUDLDPort_Type()
)
lcsUDLDPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsUDLDPort.setStatus("current")


class _LcsUDLDPortMode_Type(Integer32):
    """Custom type lcsUDLDPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
    )


_LcsUDLDPortMode_Type.__name__ = "Integer32"
_LcsUDLDPortMode_Object = MibTableColumn
lcsUDLDPortMode = _LcsUDLDPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 1, 1, 2),
    _LcsUDLDPortMode_Type()
)
lcsUDLDPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsUDLDPortMode.setStatus("current")


class _LcsUDLDPortMessageInterval_Type(Integer32):
    """Custom type lcsUDLDPortMessageInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(7, 90),
    )


_LcsUDLDPortMessageInterval_Type.__name__ = "Integer32"
_LcsUDLDPortMessageInterval_Object = MibTableColumn
lcsUDLDPortMessageInterval = _LcsUDLDPortMessageInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 1, 1, 3),
    _LcsUDLDPortMessageInterval_Type()
)
lcsUDLDPortMessageInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsUDLDPortMessageInterval.setStatus("current")
_LcsUDLDPortStatusTable_Object = MibTable
lcsUDLDPortStatusTable = _LcsUDLDPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2)
)
if mibBuilder.loadTexts:
    lcsUDLDPortStatusTable.setStatus("current")
_LcsUDLDPortStatusEntry_Object = MibTableRow
lcsUDLDPortStatusEntry = _LcsUDLDPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1)
)
lcsUDLDPortStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsUDLDPortStatusPort"),
)
if mibBuilder.loadTexts:
    lcsUDLDPortStatusEntry.setStatus("current")


class _LcsUDLDPortStatusPort_Type(Integer32):
    """Custom type lcsUDLDPortStatusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsUDLDPortStatusPort_Type.__name__ = "Integer32"
_LcsUDLDPortStatusPort_Object = MibTableColumn
lcsUDLDPortStatusPort = _LcsUDLDPortStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1, 1),
    _LcsUDLDPortStatusPort_Type()
)
lcsUDLDPortStatusPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsUDLDPortStatusPort.setStatus("current")
_LcsUDLDStatusAdminState_Type = Integer32
_LcsUDLDStatusAdminState_Object = MibTableColumn
lcsUDLDStatusAdminState = _LcsUDLDStatusAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1, 2),
    _LcsUDLDStatusAdminState_Type()
)
lcsUDLDStatusAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDStatusAdminState.setStatus("current")
_LcsUDLDStatusDeviceIDLocal_Type = DisplayString
_LcsUDLDStatusDeviceIDLocal_Object = MibTableColumn
lcsUDLDStatusDeviceIDLocal = _LcsUDLDStatusDeviceIDLocal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1, 3),
    _LcsUDLDStatusDeviceIDLocal_Type()
)
lcsUDLDStatusDeviceIDLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDStatusDeviceIDLocal.setStatus("current")
_LcsUDLDStatusDeviceNameLocal_Type = DisplayString
_LcsUDLDStatusDeviceNameLocal_Object = MibTableColumn
lcsUDLDStatusDeviceNameLocal = _LcsUDLDStatusDeviceNameLocal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1, 4),
    _LcsUDLDStatusDeviceNameLocal_Type()
)
lcsUDLDStatusDeviceNameLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDStatusDeviceNameLocal.setStatus("current")
_LcsUDLDStatusBidirectionalState_Type = DisplayString
_LcsUDLDStatusBidirectionalState_Object = MibTableColumn
lcsUDLDStatusBidirectionalState = _LcsUDLDStatusBidirectionalState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 2, 1, 5),
    _LcsUDLDStatusBidirectionalState_Type()
)
lcsUDLDStatusBidirectionalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDStatusBidirectionalState.setStatus("current")
_LcsUDLDStatusPort_Type = Integer32
_LcsUDLDStatusPort_Object = MibScalar
lcsUDLDStatusPort = _LcsUDLDStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 3),
    _LcsUDLDStatusPort_Type()
)
lcsUDLDStatusPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsUDLDStatusPort.setStatus("current")
_LcsUDLDPortNeighbourStatusTable_Object = MibTable
lcsUDLDPortNeighbourStatusTable = _LcsUDLDPortNeighbourStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4)
)
if mibBuilder.loadTexts:
    lcsUDLDPortNeighbourStatusTable.setStatus("current")
_LcsUDLDPortNeighbourStatusEntry_Object = MibTableRow
lcsUDLDPortNeighbourStatusEntry = _LcsUDLDPortNeighbourStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1)
)
lcsUDLDPortNeighbourStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsUDLDNeighbourPort"),
)
if mibBuilder.loadTexts:
    lcsUDLDPortNeighbourStatusEntry.setStatus("current")


class _LcsUDLDNeighbourPort_Type(Integer32):
    """Custom type lcsUDLDNeighbourPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsUDLDNeighbourPort_Type.__name__ = "Integer32"
_LcsUDLDNeighbourPort_Object = MibTableColumn
lcsUDLDNeighbourPort = _LcsUDLDNeighbourPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1, 1),
    _LcsUDLDNeighbourPort_Type()
)
lcsUDLDNeighbourPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsUDLDNeighbourPort.setStatus("current")
_LcsUDLDNeighbourStatusPort_Type = DisplayString
_LcsUDLDNeighbourStatusPort_Object = MibTableColumn
lcsUDLDNeighbourStatusPort = _LcsUDLDNeighbourStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1, 2),
    _LcsUDLDNeighbourStatusPort_Type()
)
lcsUDLDNeighbourStatusPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDNeighbourStatusPort.setStatus("current")
_LcsUDLDNeighbourStatusDeviceId_Type = DisplayString
_LcsUDLDNeighbourStatusDeviceId_Object = MibTableColumn
lcsUDLDNeighbourStatusDeviceId = _LcsUDLDNeighbourStatusDeviceId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1, 3),
    _LcsUDLDNeighbourStatusDeviceId_Type()
)
lcsUDLDNeighbourStatusDeviceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDNeighbourStatusDeviceId.setStatus("current")
_LcsUDLDNeighbourStatusLinkStatus_Type = DisplayString
_LcsUDLDNeighbourStatusLinkStatus_Object = MibTableColumn
lcsUDLDNeighbourStatusLinkStatus = _LcsUDLDNeighbourStatusLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1, 4),
    _LcsUDLDNeighbourStatusLinkStatus_Type()
)
lcsUDLDNeighbourStatusLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDNeighbourStatusLinkStatus.setStatus("current")
_LcsUDLDNeighbourStatusDeviceName_Type = DisplayString
_LcsUDLDNeighbourStatusDeviceName_Object = MibTableColumn
lcsUDLDNeighbourStatusDeviceName = _LcsUDLDNeighbourStatusDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 22, 4, 1, 5),
    _LcsUDLDNeighbourStatusDeviceName_Type()
)
lcsUDLDNeighbourStatusDeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsUDLDNeighbourStatusDeviceName.setStatus("current")
_LcsEPS_ObjectIdentity = ObjectIdentity
lcsEPS = _LcsEPS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23)
)
_LcsEPSTable_Object = MibTable
lcsEPSTable = _LcsEPSTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1)
)
if mibBuilder.loadTexts:
    lcsEPSTable.setStatus("current")
_LcsEPSEntry_Object = MibTableRow
lcsEPSEntry = _LcsEPSEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1)
)
lcsEPSEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsEPSIndex"),
)
if mibBuilder.loadTexts:
    lcsEPSEntry.setStatus("current")


class _LcsEPSIndex_Type(Integer32):
    """Custom type lcsEPSIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsEPSIndex_Type.__name__ = "Integer32"
_LcsEPSIndex_Object = MibTableColumn
lcsEPSIndex = _LcsEPSIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 1),
    _LcsEPSIndex_Type()
)
lcsEPSIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsEPSIndex.setStatus("current")


class _LcsEpsID_Type(Integer32):
    """Custom type lcsEpsID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_LcsEpsID_Type.__name__ = "Integer32"
_LcsEpsID_Object = MibTableColumn
lcsEpsID = _LcsEpsID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 2),
    _LcsEpsID_Type()
)
lcsEpsID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsID.setStatus("current")
_LcsEpsDomain_Type = Integer32
_LcsEpsDomain_Object = MibTableColumn
lcsEpsDomain = _LcsEpsDomain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 3),
    _LcsEpsDomain_Type()
)
lcsEpsDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsDomain.setStatus("current")
_LcsEpsArchitecture_Type = Integer32
_LcsEpsArchitecture_Object = MibTableColumn
lcsEpsArchitecture = _LcsEpsArchitecture_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 4),
    _LcsEpsArchitecture_Type()
)
lcsEpsArchitecture.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsArchitecture.setStatus("current")
_LcsEpsWFlow_Type = Integer32
_LcsEpsWFlow_Object = MibTableColumn
lcsEpsWFlow = _LcsEpsWFlow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 5),
    _LcsEpsWFlow_Type()
)
lcsEpsWFlow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsWFlow.setStatus("current")
_LcsEpsPFlow_Type = Integer32
_LcsEpsPFlow_Object = MibTableColumn
lcsEpsPFlow = _LcsEpsPFlow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 6),
    _LcsEpsPFlow_Type()
)
lcsEpsPFlow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsPFlow.setStatus("current")
_LcsEpsWSFMEP_Type = Integer32
_LcsEpsWSFMEP_Object = MibTableColumn
lcsEpsWSFMEP = _LcsEpsWSFMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 7),
    _LcsEpsWSFMEP_Type()
)
lcsEpsWSFMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsWSFMEP.setStatus("current")
_LcsEpsPSFMEP_Type = Integer32
_LcsEpsPSFMEP_Object = MibTableColumn
lcsEpsPSFMEP = _LcsEpsPSFMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 8),
    _LcsEpsPSFMEP_Type()
)
lcsEpsPSFMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsPSFMEP.setStatus("current")
_LcsEpsAPSMEP_Type = Integer32
_LcsEpsAPSMEP_Object = MibTableColumn
lcsEpsAPSMEP = _LcsEpsAPSMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 9),
    _LcsEpsAPSMEP_Type()
)
lcsEpsAPSMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsAPSMEP.setStatus("current")
_LcsEpsAlarm_Type = Integer32
_LcsEpsAlarm_Object = MibTableColumn
lcsEpsAlarm = _LcsEpsAlarm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 10),
    _LcsEpsAlarm_Type()
)
lcsEpsAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsAlarm.setStatus("current")
_LcsEpsRowStatus_Type = RowStatus
_LcsEpsRowStatus_Object = MibTableColumn
lcsEpsRowStatus = _LcsEpsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 1, 1, 11),
    _LcsEpsRowStatus_Type()
)
lcsEpsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsEpsRowStatus.setStatus("current")
_LcsEpsConfigInstanceEpsID_Type = Integer32
_LcsEpsConfigInstanceEpsID_Object = MibScalar
lcsEpsConfigInstanceEpsID = _LcsEpsConfigInstanceEpsID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 2),
    _LcsEpsConfigInstanceEpsID_Type()
)
lcsEpsConfigInstanceEpsID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceEpsID.setStatus("current")
_LcsEPSConfigInstanceEntry_ObjectIdentity = ObjectIdentity
lcsEPSConfigInstanceEntry = _LcsEPSConfigInstanceEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3)
)
_LcsEpsConfigInstanceProtectionType_Type = Integer32
_LcsEpsConfigInstanceProtectionType_Object = MibScalar
lcsEpsConfigInstanceProtectionType = _LcsEpsConfigInstanceProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 2),
    _LcsEpsConfigInstanceProtectionType_Type()
)
lcsEpsConfigInstanceProtectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceProtectionType.setStatus("current")
_LcsEpsConfigInstanceAPS_Type = Integer32
_LcsEpsConfigInstanceAPS_Object = MibScalar
lcsEpsConfigInstanceAPS = _LcsEpsConfigInstanceAPS_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 3),
    _LcsEpsConfigInstanceAPS_Type()
)
lcsEpsConfigInstanceAPS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceAPS.setStatus("current")
_LcsEpsConfigInstanceRevertive_Type = Integer32
_LcsEpsConfigInstanceRevertive_Object = MibScalar
lcsEpsConfigInstanceRevertive = _LcsEpsConfigInstanceRevertive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 4),
    _LcsEpsConfigInstanceRevertive_Type()
)
lcsEpsConfigInstanceRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceRevertive.setStatus("current")
_LcsEpsConfigInstanceWTRTime_Type = Integer32
_LcsEpsConfigInstanceWTRTime_Object = MibScalar
lcsEpsConfigInstanceWTRTime = _LcsEpsConfigInstanceWTRTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 5),
    _LcsEpsConfigInstanceWTRTime_Type()
)
lcsEpsConfigInstanceWTRTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceWTRTime.setStatus("current")
_LcsEpsConfigInstanceHoldOffTime_Type = Integer32
_LcsEpsConfigInstanceHoldOffTime_Object = MibScalar
lcsEpsConfigInstanceHoldOffTime = _LcsEpsConfigInstanceHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 6),
    _LcsEpsConfigInstanceHoldOffTime_Type()
)
lcsEpsConfigInstanceHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceHoldOffTime.setStatus("current")
_LcsEpsConfigInstanceCommand_Type = Integer32
_LcsEpsConfigInstanceCommand_Object = MibScalar
lcsEpsConfigInstanceCommand = _LcsEpsConfigInstanceCommand_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 7),
    _LcsEpsConfigInstanceCommand_Type()
)
lcsEpsConfigInstanceCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEpsConfigInstanceCommand.setStatus("current")
_LcsEpsStatusProtectionState_Type = DisplayString
_LcsEpsStatusProtectionState_Object = MibScalar
lcsEpsStatusProtectionState = _LcsEpsStatusProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 8),
    _LcsEpsStatusProtectionState_Type()
)
lcsEpsStatusProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusProtectionState.setStatus("current")
_LcsEpsStatusWorkingFlowState_Type = DisplayString
_LcsEpsStatusWorkingFlowState_Object = MibScalar
lcsEpsStatusWorkingFlowState = _LcsEpsStatusWorkingFlowState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 9),
    _LcsEpsStatusWorkingFlowState_Type()
)
lcsEpsStatusWorkingFlowState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusWorkingFlowState.setStatus("current")
_LcsEpsStatusProtectingFlowState_Type = DisplayString
_LcsEpsStatusProtectingFlowState_Object = MibScalar
lcsEpsStatusProtectingFlowState = _LcsEpsStatusProtectingFlowState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 10),
    _LcsEpsStatusProtectingFlowState_Type()
)
lcsEpsStatusProtectingFlowState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusProtectingFlowState.setStatus("current")
_LcsEpsStatusTransmittedApsRequest_Type = DisplayString
_LcsEpsStatusTransmittedApsRequest_Object = MibScalar
lcsEpsStatusTransmittedApsRequest = _LcsEpsStatusTransmittedApsRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 11),
    _LcsEpsStatusTransmittedApsRequest_Type()
)
lcsEpsStatusTransmittedApsRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusTransmittedApsRequest.setStatus("current")
_LcsEpsStatusTransmittedApsReSignal_Type = Integer32
_LcsEpsStatusTransmittedApsReSignal_Object = MibScalar
lcsEpsStatusTransmittedApsReSignal = _LcsEpsStatusTransmittedApsReSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 12),
    _LcsEpsStatusTransmittedApsReSignal_Type()
)
lcsEpsStatusTransmittedApsReSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusTransmittedApsReSignal.setStatus("current")
_LcsEpsStatusTransmittedApsBrSignal_Type = Integer32
_LcsEpsStatusTransmittedApsBrSignal_Object = MibScalar
lcsEpsStatusTransmittedApsBrSignal = _LcsEpsStatusTransmittedApsBrSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 13),
    _LcsEpsStatusTransmittedApsBrSignal_Type()
)
lcsEpsStatusTransmittedApsBrSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusTransmittedApsBrSignal.setStatus("current")
_LcsEpsStatusReceivedApsRequest_Type = DisplayString
_LcsEpsStatusReceivedApsRequest_Object = MibScalar
lcsEpsStatusReceivedApsRequest = _LcsEpsStatusReceivedApsRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 14),
    _LcsEpsStatusReceivedApsRequest_Type()
)
lcsEpsStatusReceivedApsRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusReceivedApsRequest.setStatus("current")
_LcsEpsStatusReceivedApsReSignal_Type = Integer32
_LcsEpsStatusReceivedApsReSignal_Object = MibScalar
lcsEpsStatusReceivedApsReSignal = _LcsEpsStatusReceivedApsReSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 15),
    _LcsEpsStatusReceivedApsReSignal_Type()
)
lcsEpsStatusReceivedApsReSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusReceivedApsReSignal.setStatus("current")
_LcsEpsStatusReceivedApsBrSignal_Type = Integer32
_LcsEpsStatusReceivedApsBrSignal_Object = MibScalar
lcsEpsStatusReceivedApsBrSignal = _LcsEpsStatusReceivedApsBrSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 16),
    _LcsEpsStatusReceivedApsBrSignal_Type()
)
lcsEpsStatusReceivedApsBrSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusReceivedApsBrSignal.setStatus("current")
_LcsEpsStatusArchitectureMismatch_Type = DisplayString
_LcsEpsStatusArchitectureMismatch_Object = MibScalar
lcsEpsStatusArchitectureMismatch = _LcsEpsStatusArchitectureMismatch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 17),
    _LcsEpsStatusArchitectureMismatch_Type()
)
lcsEpsStatusArchitectureMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusArchitectureMismatch.setStatus("current")
_LcsEpsStatusAPSOnWorking_Type = DisplayString
_LcsEpsStatusAPSOnWorking_Object = MibScalar
lcsEpsStatusAPSOnWorking = _LcsEpsStatusAPSOnWorking_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 18),
    _LcsEpsStatusAPSOnWorking_Type()
)
lcsEpsStatusAPSOnWorking.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusAPSOnWorking.setStatus("current")
_LcsEpsStatusSwitchingIncomplete_Type = DisplayString
_LcsEpsStatusSwitchingIncomplete_Object = MibScalar
lcsEpsStatusSwitchingIncomplete = _LcsEpsStatusSwitchingIncomplete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 19),
    _LcsEpsStatusSwitchingIncomplete_Type()
)
lcsEpsStatusSwitchingIncomplete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusSwitchingIncomplete.setStatus("current")
_LcsEpsStatusNoApsReceived_Type = DisplayString
_LcsEpsStatusNoApsReceived_Object = MibScalar
lcsEpsStatusNoApsReceived = _LcsEpsStatusNoApsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 23, 3, 20),
    _LcsEpsStatusNoApsReceived_Type()
)
lcsEpsStatusNoApsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEpsStatusNoApsReceived.setStatus("current")
_LcsERPS_ObjectIdentity = ObjectIdentity
lcsERPS = _LcsERPS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24)
)
_LcsERPSTable_Object = MibTable
lcsERPSTable = _LcsERPSTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1)
)
if mibBuilder.loadTexts:
    lcsERPSTable.setStatus("current")
_LcsERPSEntry_Object = MibTableRow
lcsERPSEntry = _LcsERPSEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1)
)
lcsERPSEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsErpsIndex"),
)
if mibBuilder.loadTexts:
    lcsERPSEntry.setStatus("current")


class _LcsErpsIndex_Type(Integer32):
    """Custom type lcsErpsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsErpsIndex_Type.__name__ = "Integer32"
_LcsErpsIndex_Object = MibTableColumn
lcsErpsIndex = _LcsErpsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 1),
    _LcsErpsIndex_Type()
)
lcsErpsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsErpsIndex.setStatus("current")


class _LcsErpsID_Type(Integer32):
    """Custom type lcsErpsID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_LcsErpsID_Type.__name__ = "Integer32"
_LcsErpsID_Object = MibTableColumn
lcsErpsID = _LcsErpsID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 2),
    _LcsErpsID_Type()
)
lcsErpsID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsID.setStatus("current")
_LcsErpsPort0_Type = Integer32
_LcsErpsPort0_Object = MibTableColumn
lcsErpsPort0 = _LcsErpsPort0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 3),
    _LcsErpsPort0_Type()
)
lcsErpsPort0.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort0.setStatus("current")
_LcsErpsPort1_Type = Integer32
_LcsErpsPort1_Object = MibTableColumn
lcsErpsPort1 = _LcsErpsPort1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 4),
    _LcsErpsPort1_Type()
)
lcsErpsPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort1.setStatus("current")
_LcsErpsPort0APSMEP_Type = Integer32
_LcsErpsPort0APSMEP_Object = MibTableColumn
lcsErpsPort0APSMEP = _LcsErpsPort0APSMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 5),
    _LcsErpsPort0APSMEP_Type()
)
lcsErpsPort0APSMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort0APSMEP.setStatus("current")
_LcsErpsPort1APSMEP_Type = Integer32
_LcsErpsPort1APSMEP_Object = MibTableColumn
lcsErpsPort1APSMEP = _LcsErpsPort1APSMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 6),
    _LcsErpsPort1APSMEP_Type()
)
lcsErpsPort1APSMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort1APSMEP.setStatus("current")
_LcsErpsPort0SFMEP_Type = Integer32
_LcsErpsPort0SFMEP_Object = MibTableColumn
lcsErpsPort0SFMEP = _LcsErpsPort0SFMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 7),
    _LcsErpsPort0SFMEP_Type()
)
lcsErpsPort0SFMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort0SFMEP.setStatus("current")
_LcsErpsPort1SFMEP_Type = Integer32
_LcsErpsPort1SFMEP_Object = MibTableColumn
lcsErpsPort1SFMEP = _LcsErpsPort1SFMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 8),
    _LcsErpsPort1SFMEP_Type()
)
lcsErpsPort1SFMEP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsPort1SFMEP.setStatus("current")
_LcsErpsRingType_Type = Integer32
_LcsErpsRingType_Object = MibTableColumn
lcsErpsRingType = _LcsErpsRingType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 9),
    _LcsErpsRingType_Type()
)
lcsErpsRingType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsRingType.setStatus("current")
_LcsErpsInterconnectedNode_Type = Integer32
_LcsErpsInterconnectedNode_Object = MibTableColumn
lcsErpsInterconnectedNode = _LcsErpsInterconnectedNode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 10),
    _LcsErpsInterconnectedNode_Type()
)
lcsErpsInterconnectedNode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsInterconnectedNode.setStatus("current")
_LcsErpsVirtualChannel_Type = Integer32
_LcsErpsVirtualChannel_Object = MibTableColumn
lcsErpsVirtualChannel = _LcsErpsVirtualChannel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 11),
    _LcsErpsVirtualChannel_Type()
)
lcsErpsVirtualChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsVirtualChannel.setStatus("current")
_LcsErpsMajorRingID_Type = Integer32
_LcsErpsMajorRingID_Object = MibTableColumn
lcsErpsMajorRingID = _LcsErpsMajorRingID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 12),
    _LcsErpsMajorRingID_Type()
)
lcsErpsMajorRingID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsMajorRingID.setStatus("current")
_LcsErpsAlarm_Type = Integer32
_LcsErpsAlarm_Object = MibTableColumn
lcsErpsAlarm = _LcsErpsAlarm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 13),
    _LcsErpsAlarm_Type()
)
lcsErpsAlarm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsAlarm.setStatus("current")
_LcsErpsRowStatus_Type = RowStatus
_LcsErpsRowStatus_Object = MibTableColumn
lcsErpsRowStatus = _LcsErpsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 1, 1, 14),
    _LcsErpsRowStatus_Type()
)
lcsErpsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsRowStatus.setStatus("current")
_LcsErpsConfigInstanceErpsID_Type = Integer32
_LcsErpsConfigInstanceErpsID_Object = MibScalar
lcsErpsConfigInstanceErpsID = _LcsErpsConfigInstanceErpsID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 2),
    _LcsErpsConfigInstanceErpsID_Type()
)
lcsErpsConfigInstanceErpsID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceErpsID.setStatus("current")
_LcsERPSConfigInstanceEntry_ObjectIdentity = ObjectIdentity
lcsERPSConfigInstanceEntry = _LcsERPSConfigInstanceEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3)
)
_LcsErpsConfigInstanceConfigured_Type = DisplayString
_LcsErpsConfigInstanceConfigured_Object = MibScalar
lcsErpsConfigInstanceConfigured = _LcsErpsConfigInstanceConfigured_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 2),
    _LcsErpsConfigInstanceConfigured_Type()
)
lcsErpsConfigInstanceConfigured.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceConfigured.setStatus("current")
_LcsErpsConfigInstanceGuardTime_Type = Integer32
_LcsErpsConfigInstanceGuardTime_Object = MibScalar
lcsErpsConfigInstanceGuardTime = _LcsErpsConfigInstanceGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 3),
    _LcsErpsConfigInstanceGuardTime_Type()
)
lcsErpsConfigInstanceGuardTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceGuardTime.setStatus("current")
_LcsErpsConfigInstanceWTRTime_Type = Integer32
_LcsErpsConfigInstanceWTRTime_Object = MibScalar
lcsErpsConfigInstanceWTRTime = _LcsErpsConfigInstanceWTRTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 4),
    _LcsErpsConfigInstanceWTRTime_Type()
)
lcsErpsConfigInstanceWTRTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceWTRTime.setStatus("current")
_LcsErpsConfigInstanceHoldOffTime_Type = Integer32
_LcsErpsConfigInstanceHoldOffTime_Object = MibScalar
lcsErpsConfigInstanceHoldOffTime = _LcsErpsConfigInstanceHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 5),
    _LcsErpsConfigInstanceHoldOffTime_Type()
)
lcsErpsConfigInstanceHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceHoldOffTime.setStatus("current")
_LcsErpsConfigInstanceVersion_Type = Integer32
_LcsErpsConfigInstanceVersion_Object = MibScalar
lcsErpsConfigInstanceVersion = _LcsErpsConfigInstanceVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 6),
    _LcsErpsConfigInstanceVersion_Type()
)
lcsErpsConfigInstanceVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVersion.setStatus("current")
_LcsErpsConfigInstanceRevertive_Type = Integer32
_LcsErpsConfigInstanceRevertive_Object = MibScalar
lcsErpsConfigInstanceRevertive = _LcsErpsConfigInstanceRevertive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 7),
    _LcsErpsConfigInstanceRevertive_Type()
)
lcsErpsConfigInstanceRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceRevertive.setStatus("current")
_LcsErpsConfigInstanceRPLRole_Type = Integer32
_LcsErpsConfigInstanceRPLRole_Object = MibScalar
lcsErpsConfigInstanceRPLRole = _LcsErpsConfigInstanceRPLRole_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 8),
    _LcsErpsConfigInstanceRPLRole_Type()
)
lcsErpsConfigInstanceRPLRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceRPLRole.setStatus("current")
_LcsErpsConfigInstanceRPLPort_Type = Integer32
_LcsErpsConfigInstanceRPLPort_Object = MibScalar
lcsErpsConfigInstanceRPLPort = _LcsErpsConfigInstanceRPLPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 9),
    _LcsErpsConfigInstanceRPLPort_Type()
)
lcsErpsConfigInstanceRPLPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceRPLPort.setStatus("current")
_LcsErpsConfigInstanceClear_Type = Integer32
_LcsErpsConfigInstanceClear_Object = MibScalar
lcsErpsConfigInstanceClear = _LcsErpsConfigInstanceClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 10),
    _LcsErpsConfigInstanceClear_Type()
)
lcsErpsConfigInstanceClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceClear.setStatus("current")
_LcsErpsConfigInstanceTopologyChange_Type = Integer32
_LcsErpsConfigInstanceTopologyChange_Object = MibScalar
lcsErpsConfigInstanceTopologyChange = _LcsErpsConfigInstanceTopologyChange_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 11),
    _LcsErpsConfigInstanceTopologyChange_Type()
)
lcsErpsConfigInstanceTopologyChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceTopologyChange.setStatus("current")
_LcsErpsConfigInstanceCommand_Type = Integer32
_LcsErpsConfigInstanceCommand_Object = MibScalar
lcsErpsConfigInstanceCommand = _LcsErpsConfigInstanceCommand_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 12),
    _LcsErpsConfigInstanceCommand_Type()
)
lcsErpsConfigInstanceCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceCommand.setStatus("current")
_LcsErpsConfigInstancePort_Type = Integer32
_LcsErpsConfigInstancePort_Object = MibScalar
lcsErpsConfigInstancePort = _LcsErpsConfigInstancePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 13),
    _LcsErpsConfigInstancePort_Type()
)
lcsErpsConfigInstancePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsErpsConfigInstancePort.setStatus("current")
_LcsErpsStatusProtectionState_Type = DisplayString
_LcsErpsStatusProtectionState_Object = MibScalar
lcsErpsStatusProtectionState = _LcsErpsStatusProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 14),
    _LcsErpsStatusProtectionState_Type()
)
lcsErpsStatusProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusProtectionState.setStatus("current")
_LcsErpsStatusPort0_Type = DisplayString
_LcsErpsStatusPort0_Object = MibScalar
lcsErpsStatusPort0 = _LcsErpsStatusPort0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 15),
    _LcsErpsStatusPort0_Type()
)
lcsErpsStatusPort0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort0.setStatus("current")
_LcsErpsStatusPort1_Type = DisplayString
_LcsErpsStatusPort1_Object = MibScalar
lcsErpsStatusPort1 = _LcsErpsStatusPort1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 16),
    _LcsErpsStatusPort1_Type()
)
lcsErpsStatusPort1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort1.setStatus("current")
_LcsErpsStatusTransmitAPS_Type = DisplayString
_LcsErpsStatusTransmitAPS_Object = MibScalar
lcsErpsStatusTransmitAPS = _LcsErpsStatusTransmitAPS_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 17),
    _LcsErpsStatusTransmitAPS_Type()
)
lcsErpsStatusTransmitAPS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusTransmitAPS.setStatus("current")
_LcsErpsStatusPort0ReceiveAPS_Type = DisplayString
_LcsErpsStatusPort0ReceiveAPS_Object = MibScalar
lcsErpsStatusPort0ReceiveAPS = _LcsErpsStatusPort0ReceiveAPS_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 18),
    _LcsErpsStatusPort0ReceiveAPS_Type()
)
lcsErpsStatusPort0ReceiveAPS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort0ReceiveAPS.setStatus("current")
_LcsErpsStatusPort1ReceiveAPS_Type = DisplayString
_LcsErpsStatusPort1ReceiveAPS_Object = MibScalar
lcsErpsStatusPort1ReceiveAPS = _LcsErpsStatusPort1ReceiveAPS_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 19),
    _LcsErpsStatusPort1ReceiveAPS_Type()
)
lcsErpsStatusPort1ReceiveAPS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort1ReceiveAPS.setStatus("current")
_LcsErpsStatusWTRRemaining_Type = Integer32
_LcsErpsStatusWTRRemaining_Object = MibScalar
lcsErpsStatusWTRRemaining = _LcsErpsStatusWTRRemaining_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 20),
    _LcsErpsStatusWTRRemaining_Type()
)
lcsErpsStatusWTRRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusWTRRemaining.setStatus("current")
_LcsErpsStatusRPLUnblocked_Type = DisplayString
_LcsErpsStatusRPLUnblocked_Object = MibScalar
lcsErpsStatusRPLUnblocked = _LcsErpsStatusRPLUnblocked_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 21),
    _LcsErpsStatusRPLUnblocked_Type()
)
lcsErpsStatusRPLUnblocked.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusRPLUnblocked.setStatus("current")
_LcsErpsStatusNoAPSReceived_Type = DisplayString
_LcsErpsStatusNoAPSReceived_Object = MibScalar
lcsErpsStatusNoAPSReceived = _LcsErpsStatusNoAPSReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 22),
    _LcsErpsStatusNoAPSReceived_Type()
)
lcsErpsStatusNoAPSReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusNoAPSReceived.setStatus("current")
_LcsErpsStatusPort0BlockStatus_Type = DisplayString
_LcsErpsStatusPort0BlockStatus_Object = MibScalar
lcsErpsStatusPort0BlockStatus = _LcsErpsStatusPort0BlockStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 23),
    _LcsErpsStatusPort0BlockStatus_Type()
)
lcsErpsStatusPort0BlockStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort0BlockStatus.setStatus("current")
_LcsErpsStatusPort1BlockStatus_Type = DisplayString
_LcsErpsStatusPort1BlockStatus_Object = MibScalar
lcsErpsStatusPort1BlockStatus = _LcsErpsStatusPort1BlockStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 24),
    _LcsErpsStatusPort1BlockStatus_Type()
)
lcsErpsStatusPort1BlockStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusPort1BlockStatus.setStatus("current")
_LcsErpsStatusFOPAlarm_Type = DisplayString
_LcsErpsStatusFOPAlarm_Object = MibScalar
lcsErpsStatusFOPAlarm = _LcsErpsStatusFOPAlarm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 3, 25),
    _LcsErpsStatusFOPAlarm_Type()
)
lcsErpsStatusFOPAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsErpsStatusFOPAlarm.setStatus("current")
_LcsErpsConfigInstanceVLANConfigTable_Object = MibTable
lcsErpsConfigInstanceVLANConfigTable = _LcsErpsConfigInstanceVLANConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 4)
)
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVLANConfigTable.setStatus("current")
_LcsErpsConfigInstanceVLANConfigEntry_Object = MibTableRow
lcsErpsConfigInstanceVLANConfigEntry = _LcsErpsConfigInstanceVLANConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 4, 1)
)
lcsErpsConfigInstanceVLANConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsErpsConfigInstanceVLANConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVLANConfigEntry.setStatus("current")


class _LcsErpsConfigInstanceVLANConfigIndex_Type(Integer32):
    """Custom type lcsErpsConfigInstanceVLANConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsErpsConfigInstanceVLANConfigIndex_Type.__name__ = "Integer32"
_LcsErpsConfigInstanceVLANConfigIndex_Object = MibTableColumn
lcsErpsConfigInstanceVLANConfigIndex = _LcsErpsConfigInstanceVLANConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 4, 1, 1),
    _LcsErpsConfigInstanceVLANConfigIndex_Type()
)
lcsErpsConfigInstanceVLANConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVLANConfigIndex.setStatus("current")


class _LcsErpsConfigInstanceVLANConfigVLANID_Type(Integer32):
    """Custom type lcsErpsConfigInstanceVLANConfigVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsErpsConfigInstanceVLANConfigVLANID_Type.__name__ = "Integer32"
_LcsErpsConfigInstanceVLANConfigVLANID_Object = MibTableColumn
lcsErpsConfigInstanceVLANConfigVLANID = _LcsErpsConfigInstanceVLANConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 4, 1, 2),
    _LcsErpsConfigInstanceVLANConfigVLANID_Type()
)
lcsErpsConfigInstanceVLANConfigVLANID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVLANConfigVLANID.setStatus("current")
_LcsErpsConfigInstanceVLANConfigRowStatus_Type = RowStatus
_LcsErpsConfigInstanceVLANConfigRowStatus_Object = MibTableColumn
lcsErpsConfigInstanceVLANConfigRowStatus = _LcsErpsConfigInstanceVLANConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 24, 4, 1, 3),
    _LcsErpsConfigInstanceVLANConfigRowStatus_Type()
)
lcsErpsConfigInstanceVLANConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsErpsConfigInstanceVLANConfigRowStatus.setStatus("current")
_LcsVLANTranslation_ObjectIdentity = ObjectIdentity
lcsVLANTranslation = _LcsVLANTranslation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25)
)
_LcsVLANTranslationPortTable_Object = MibTable
lcsVLANTranslationPortTable = _LcsVLANTranslationPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 1)
)
if mibBuilder.loadTexts:
    lcsVLANTranslationPortTable.setStatus("current")
_LcsVLANTranslationPortEntry_Object = MibTableRow
lcsVLANTranslationPortEntry = _LcsVLANTranslationPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 1, 1)
)
lcsVLANTranslationPortEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVLANTranslationPortIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANTranslationPortEntry.setStatus("current")


class _LcsVLANTranslationPortIndex_Type(Integer32):
    """Custom type lcsVLANTranslationPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsVLANTranslationPortIndex_Type.__name__ = "Integer32"
_LcsVLANTranslationPortIndex_Object = MibTableColumn
lcsVLANTranslationPortIndex = _LcsVLANTranslationPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 1, 1, 1),
    _LcsVLANTranslationPortIndex_Type()
)
lcsVLANTranslationPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANTranslationPortIndex.setStatus("current")
_LcsVLANTranslationPortDefault_Type = Integer32
_LcsVLANTranslationPortDefault_Object = MibTableColumn
lcsVLANTranslationPortDefault = _LcsVLANTranslationPortDefault_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 1, 1, 2),
    _LcsVLANTranslationPortDefault_Type()
)
lcsVLANTranslationPortDefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVLANTranslationPortDefault.setStatus("current")
_LcsVLANTranslationPortGroupID_Type = Integer32
_LcsVLANTranslationPortGroupID_Object = MibTableColumn
lcsVLANTranslationPortGroupID = _LcsVLANTranslationPortGroupID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 1, 1, 3),
    _LcsVLANTranslationPortGroupID_Type()
)
lcsVLANTranslationPortGroupID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVLANTranslationPortGroupID.setStatus("current")
_LcsVLANTranslationMappingTable_Object = MibTable
lcsVLANTranslationMappingTable = _LcsVLANTranslationMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2)
)
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingTable.setStatus("current")
_LcsVLANTranslationMappingEntry_Object = MibTableRow
lcsVLANTranslationMappingEntry = _LcsVLANTranslationMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1)
)
lcsVLANTranslationMappingEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVLANTranslationMappingIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingEntry.setStatus("current")


class _LcsVLANTranslationMappingIndex_Type(Integer32):
    """Custom type lcsVLANTranslationMappingIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsVLANTranslationMappingIndex_Type.__name__ = "Integer32"
_LcsVLANTranslationMappingIndex_Object = MibTableColumn
lcsVLANTranslationMappingIndex = _LcsVLANTranslationMappingIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1, 1),
    _LcsVLANTranslationMappingIndex_Type()
)
lcsVLANTranslationMappingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingIndex.setStatus("current")
_LcsVLANTranslationMappingGroupID_Type = Integer32
_LcsVLANTranslationMappingGroupID_Object = MibTableColumn
lcsVLANTranslationMappingGroupID = _LcsVLANTranslationMappingGroupID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1, 2),
    _LcsVLANTranslationMappingGroupID_Type()
)
lcsVLANTranslationMappingGroupID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingGroupID.setStatus("current")
_LcsVLANTranslationMappingVID_Type = Integer32
_LcsVLANTranslationMappingVID_Object = MibTableColumn
lcsVLANTranslationMappingVID = _LcsVLANTranslationMappingVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1, 3),
    _LcsVLANTranslationMappingVID_Type()
)
lcsVLANTranslationMappingVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingVID.setStatus("current")
_LcsVLANTranslationMappingTVID_Type = Integer32
_LcsVLANTranslationMappingTVID_Object = MibTableColumn
lcsVLANTranslationMappingTVID = _LcsVLANTranslationMappingTVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1, 4),
    _LcsVLANTranslationMappingTVID_Type()
)
lcsVLANTranslationMappingTVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingTVID.setStatus("current")
_LcsVLANTranslationMappingRowStatus_Type = RowStatus
_LcsVLANTranslationMappingRowStatus_Object = MibTableColumn
lcsVLANTranslationMappingRowStatus = _LcsVLANTranslationMappingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 25, 2, 1, 5),
    _LcsVLANTranslationMappingRowStatus_Type()
)
lcsVLANTranslationMappingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANTranslationMappingRowStatus.setStatus("current")
_LcsMEP_ObjectIdentity = ObjectIdentity
lcsMEP = _LcsMEP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26)
)
_LcsMEPTable_Object = MibTable
lcsMEPTable = _LcsMEPTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1)
)
if mibBuilder.loadTexts:
    lcsMEPTable.setStatus("current")
_LcsMEPEntry_Object = MibTableRow
lcsMEPEntry = _LcsMEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1)
)
lcsMEPEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMEPIndex"),
)
if mibBuilder.loadTexts:
    lcsMEPEntry.setStatus("current")


class _LcsMEPIndex_Type(Integer32):
    """Custom type lcsMEPIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMEPIndex_Type.__name__ = "Integer32"
_LcsMEPIndex_Object = MibTableColumn
lcsMEPIndex = _LcsMEPIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 1),
    _LcsMEPIndex_Type()
)
lcsMEPIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMEPIndex.setStatus("current")
_LcsMepInstance_Type = Integer32
_LcsMepInstance_Object = MibTableColumn
lcsMepInstance = _LcsMepInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 2),
    _LcsMepInstance_Type()
)
lcsMepInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepInstance.setStatus("current")
_LcsMepDomain_Type = Integer32
_LcsMepDomain_Object = MibTableColumn
lcsMepDomain = _LcsMepDomain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 3),
    _LcsMepDomain_Type()
)
lcsMepDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepDomain.setStatus("current")
_LcsMepMode_Type = Integer32
_LcsMepMode_Object = MibTableColumn
lcsMepMode = _LcsMepMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 4),
    _LcsMepMode_Type()
)
lcsMepMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepMode.setStatus("current")
_LcsMepDirection_Type = Integer32
_LcsMepDirection_Object = MibTableColumn
lcsMepDirection = _LcsMepDirection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 5),
    _LcsMepDirection_Type()
)
lcsMepDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepDirection.setStatus("current")
_LcsMepResidencePort_Type = Integer32
_LcsMepResidencePort_Object = MibTableColumn
lcsMepResidencePort = _LcsMepResidencePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 6),
    _LcsMepResidencePort_Type()
)
lcsMepResidencePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepResidencePort.setStatus("current")
_LcsMepLevel_Type = Integer32
_LcsMepLevel_Object = MibTableColumn
lcsMepLevel = _LcsMepLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 7),
    _LcsMepLevel_Type()
)
lcsMepLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepLevel.setStatus("current")
_LcsMepFlowInstance_Type = Integer32
_LcsMepFlowInstance_Object = MibTableColumn
lcsMepFlowInstance = _LcsMepFlowInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 8),
    _LcsMepFlowInstance_Type()
)
lcsMepFlowInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepFlowInstance.setStatus("current")
_LcsMepTaggedVID_Type = Integer32
_LcsMepTaggedVID_Object = MibTableColumn
lcsMepTaggedVID = _LcsMepTaggedVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 9),
    _LcsMepTaggedVID_Type()
)
lcsMepTaggedVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepTaggedVID.setStatus("current")
_LcsMepEPSInstance_Type = DisplayString
_LcsMepEPSInstance_Object = MibTableColumn
lcsMepEPSInstance = _LcsMepEPSInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 10),
    _LcsMepEPSInstance_Type()
)
lcsMepEPSInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepEPSInstance.setStatus("current")
_LcsMepThisMAC_Type = DisplayString
_LcsMepThisMAC_Object = MibTableColumn
lcsMepThisMAC = _LcsMepThisMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 11),
    _LcsMepThisMAC_Type()
)
lcsMepThisMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepThisMAC.setStatus("current")
_LcsMepAlarm_Type = DisplayString
_LcsMepAlarm_Object = MibTableColumn
lcsMepAlarm = _LcsMepAlarm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 12),
    _LcsMepAlarm_Type()
)
lcsMepAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepAlarm.setStatus("current")
_LcsMepRowStatus_Type = RowStatus
_LcsMepRowStatus_Object = MibTableColumn
lcsMepRowStatus = _LcsMepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 1, 1, 13),
    _LcsMepRowStatus_Type()
)
lcsMepRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMepRowStatus.setStatus("current")
_LcsMepInstanceID_Type = Integer32
_LcsMepInstanceID_Object = MibScalar
lcsMepInstanceID = _LcsMepInstanceID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 2),
    _LcsMepInstanceID_Type()
)
lcsMepInstanceID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceID.setStatus("current")
_LcsMepInstanceConfEntry_ObjectIdentity = ObjectIdentity
lcsMepInstanceConfEntry = _LcsMepInstanceConfEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3)
)
_LcsMepInstanceConfLevel_Type = Integer32
_LcsMepInstanceConfLevel_Object = MibScalar
lcsMepInstanceConfLevel = _LcsMepInstanceConfLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 2),
    _LcsMepInstanceConfLevel_Type()
)
lcsMepInstanceConfLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfLevel.setStatus("current")
_LcsMepInstanceConfFormat_Type = Integer32
_LcsMepInstanceConfFormat_Object = MibScalar
lcsMepInstanceConfFormat = _LcsMepInstanceConfFormat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 3),
    _LcsMepInstanceConfFormat_Type()
)
lcsMepInstanceConfFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfFormat.setStatus("current")
_LcsMepInstanceConfDomainName_Type = DisplayString
_LcsMepInstanceConfDomainName_Object = MibScalar
lcsMepInstanceConfDomainName = _LcsMepInstanceConfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 4),
    _LcsMepInstanceConfDomainName_Type()
)
lcsMepInstanceConfDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfDomainName.setStatus("current")
_LcsMepInstanceConfMEGid_Type = DisplayString
_LcsMepInstanceConfMEGid_Object = MibScalar
lcsMepInstanceConfMEGid = _LcsMepInstanceConfMEGid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 5),
    _LcsMepInstanceConfMEGid_Type()
)
lcsMepInstanceConfMEGid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfMEGid.setStatus("current")
_LcsMepInstanceConfMEPid_Type = Integer32
_LcsMepInstanceConfMEPid_Object = MibScalar
lcsMepInstanceConfMEPid = _LcsMepInstanceConfMEPid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 6),
    _LcsMepInstanceConfMEPid_Type()
)
lcsMepInstanceConfMEPid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfMEPid.setStatus("current")
_LcsMepInstanceConfTaggedVID_Type = Integer32
_LcsMepInstanceConfTaggedVID_Object = MibScalar
lcsMepInstanceConfTaggedVID = _LcsMepInstanceConfTaggedVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 7),
    _LcsMepInstanceConfTaggedVID_Type()
)
lcsMepInstanceConfTaggedVID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfTaggedVID.setStatus("current")
_LcsMepInstanceConfSyslog_Type = Integer32
_LcsMepInstanceConfSyslog_Object = MibScalar
lcsMepInstanceConfSyslog = _LcsMepInstanceConfSyslog_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 8),
    _LcsMepInstanceConfSyslog_Type()
)
lcsMepInstanceConfSyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMepInstanceConfSyslog.setStatus("current")
_LcsMepInstanceConfcLevel_Type = DisplayString
_LcsMepInstanceConfcLevel_Object = MibScalar
lcsMepInstanceConfcLevel = _LcsMepInstanceConfcLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 9),
    _LcsMepInstanceConfcLevel_Type()
)
lcsMepInstanceConfcLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcLevel.setStatus("current")
_LcsMepInstanceConfcMEG_Type = DisplayString
_LcsMepInstanceConfcMEG_Object = MibScalar
lcsMepInstanceConfcMEG = _LcsMepInstanceConfcMEG_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 10),
    _LcsMepInstanceConfcMEG_Type()
)
lcsMepInstanceConfcMEG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcMEG.setStatus("current")
_LcsMepInstanceConfcMEP_Type = DisplayString
_LcsMepInstanceConfcMEP_Object = MibScalar
lcsMepInstanceConfcMEP = _LcsMepInstanceConfcMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 11),
    _LcsMepInstanceConfcMEP_Type()
)
lcsMepInstanceConfcMEP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcMEP.setStatus("current")
_LcsMepInstanceConfcAIS_Type = DisplayString
_LcsMepInstanceConfcAIS_Object = MibScalar
lcsMepInstanceConfcAIS = _LcsMepInstanceConfcAIS_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 12),
    _LcsMepInstanceConfcAIS_Type()
)
lcsMepInstanceConfcAIS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcAIS.setStatus("current")
_LcsMepInstanceConfcLCK_Type = DisplayString
_LcsMepInstanceConfcLCK_Object = MibScalar
lcsMepInstanceConfcLCK = _LcsMepInstanceConfcLCK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 13),
    _LcsMepInstanceConfcLCK_Type()
)
lcsMepInstanceConfcLCK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcLCK.setStatus("current")
_LcsMepInstanceConfcLoop_Type = DisplayString
_LcsMepInstanceConfcLoop_Object = MibScalar
lcsMepInstanceConfcLoop = _LcsMepInstanceConfcLoop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 14),
    _LcsMepInstanceConfcLoop_Type()
)
lcsMepInstanceConfcLoop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcLoop.setStatus("current")
_LcsMepInstanceConfcConfig_Type = DisplayString
_LcsMepInstanceConfcConfig_Object = MibScalar
lcsMepInstanceConfcConfig = _LcsMepInstanceConfcConfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 15),
    _LcsMepInstanceConfcConfig_Type()
)
lcsMepInstanceConfcConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcConfig.setStatus("current")
_LcsMepInstanceConfcDEG_Type = DisplayString
_LcsMepInstanceConfcDEG_Object = MibScalar
lcsMepInstanceConfcDEG = _LcsMepInstanceConfcDEG_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 16),
    _LcsMepInstanceConfcDEG_Type()
)
lcsMepInstanceConfcDEG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcDEG.setStatus("current")
_LcsMepInstanceConfcSSF_Type = DisplayString
_LcsMepInstanceConfcSSF_Object = MibScalar
lcsMepInstanceConfcSSF = _LcsMepInstanceConfcSSF_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 17),
    _LcsMepInstanceConfcSSF_Type()
)
lcsMepInstanceConfcSSF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfcSSF.setStatus("current")
_LcsMepInstanceConfaBLK_Type = DisplayString
_LcsMepInstanceConfaBLK_Object = MibScalar
lcsMepInstanceConfaBLK = _LcsMepInstanceConfaBLK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 18),
    _LcsMepInstanceConfaBLK_Type()
)
lcsMepInstanceConfaBLK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfaBLK.setStatus("current")
_LcsMepInstanceConfaTSD_Type = DisplayString
_LcsMepInstanceConfaTSD_Object = MibScalar
lcsMepInstanceConfaTSD = _LcsMepInstanceConfaTSD_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 19),
    _LcsMepInstanceConfaTSD_Type()
)
lcsMepInstanceConfaTSD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfaTSD.setStatus("current")
_LcsMepInstanceConfaTSF_Type = DisplayString
_LcsMepInstanceConfaTSF_Object = MibScalar
lcsMepInstanceConfaTSF = _LcsMepInstanceConfaTSF_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 3, 20),
    _LcsMepInstanceConfaTSF_Type()
)
lcsMepInstanceConfaTSF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMepInstanceConfaTSF.setStatus("current")
_LcsPeerMepConfTable_Object = MibTable
lcsPeerMepConfTable = _LcsPeerMepConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4)
)
if mibBuilder.loadTexts:
    lcsPeerMepConfTable.setStatus("current")
_LcsPeerMepConfEntry_Object = MibTableRow
lcsPeerMepConfEntry = _LcsPeerMepConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1)
)
lcsPeerMepConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPeerMepConfIndex"),
)
if mibBuilder.loadTexts:
    lcsPeerMepConfEntry.setStatus("current")


class _LcsPeerMepConfIndex_Type(Integer32):
    """Custom type lcsPeerMepConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPeerMepConfIndex_Type.__name__ = "Integer32"
_LcsPeerMepConfIndex_Object = MibTableColumn
lcsPeerMepConfIndex = _LcsPeerMepConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 1),
    _LcsPeerMepConfIndex_Type()
)
lcsPeerMepConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPeerMepConfIndex.setStatus("current")
_LcsPeerMepConfPeerMEPID_Type = Integer32
_LcsPeerMepConfPeerMEPID_Object = MibTableColumn
lcsPeerMepConfPeerMEPID = _LcsPeerMepConfPeerMEPID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 2),
    _LcsPeerMepConfPeerMEPID_Type()
)
lcsPeerMepConfPeerMEPID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfPeerMEPID.setStatus("current")
_LcsPeerMepConfUnicastPeerMAC_Type = DisplayString
_LcsPeerMepConfUnicastPeerMAC_Object = MibTableColumn
lcsPeerMepConfUnicastPeerMAC = _LcsPeerMepConfUnicastPeerMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 3),
    _LcsPeerMepConfUnicastPeerMAC_Type()
)
lcsPeerMepConfUnicastPeerMAC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfUnicastPeerMAC.setStatus("current")
_LcsPeerMepConfcLOC_Type = DisplayString
_LcsPeerMepConfcLOC_Object = MibTableColumn
lcsPeerMepConfcLOC = _LcsPeerMepConfcLOC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 4),
    _LcsPeerMepConfcLOC_Type()
)
lcsPeerMepConfcLOC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfcLOC.setStatus("current")
_LcsPeerMepConfcRDI_Type = DisplayString
_LcsPeerMepConfcRDI_Object = MibTableColumn
lcsPeerMepConfcRDI = _LcsPeerMepConfcRDI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 5),
    _LcsPeerMepConfcRDI_Type()
)
lcsPeerMepConfcRDI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfcRDI.setStatus("current")
_LcsPeerMepConfcPeriod_Type = DisplayString
_LcsPeerMepConfcPeriod_Object = MibTableColumn
lcsPeerMepConfcPeriod = _LcsPeerMepConfcPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 6),
    _LcsPeerMepConfcPeriod_Type()
)
lcsPeerMepConfcPeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfcPeriod.setStatus("current")
_LcsPeerMepConfcPriority_Type = DisplayString
_LcsPeerMepConfcPriority_Object = MibTableColumn
lcsPeerMepConfcPriority = _LcsPeerMepConfcPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 7),
    _LcsPeerMepConfcPriority_Type()
)
lcsPeerMepConfcPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfcPriority.setStatus("current")
_LcsPeerMepConfRowStatus_Type = RowStatus
_LcsPeerMepConfRowStatus_Object = MibTableColumn
lcsPeerMepConfRowStatus = _LcsPeerMepConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 4, 1, 8),
    _LcsPeerMepConfRowStatus_Type()
)
lcsPeerMepConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPeerMepConfRowStatus.setStatus("current")
_LcsFunctionalConf_ObjectIdentity = ObjectIdentity
lcsFunctionalConf = _LcsFunctionalConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5)
)
_LcsFunctionalConfContinuityCheckEnable_Type = Integer32
_LcsFunctionalConfContinuityCheckEnable_Object = MibScalar
lcsFunctionalConfContinuityCheckEnable = _LcsFunctionalConfContinuityCheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 2),
    _LcsFunctionalConfContinuityCheckEnable_Type()
)
lcsFunctionalConfContinuityCheckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfContinuityCheckEnable.setStatus("current")
_LcsFunctionalConfContinuityCheckPriority_Type = Integer32
_LcsFunctionalConfContinuityCheckPriority_Object = MibScalar
lcsFunctionalConfContinuityCheckPriority = _LcsFunctionalConfContinuityCheckPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 3),
    _LcsFunctionalConfContinuityCheckPriority_Type()
)
lcsFunctionalConfContinuityCheckPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfContinuityCheckPriority.setStatus("current")
_LcsFunctionalConfContinuityCheckFrameRate_Type = Integer32
_LcsFunctionalConfContinuityCheckFrameRate_Object = MibScalar
lcsFunctionalConfContinuityCheckFrameRate = _LcsFunctionalConfContinuityCheckFrameRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 4),
    _LcsFunctionalConfContinuityCheckFrameRate_Type()
)
lcsFunctionalConfContinuityCheckFrameRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfContinuityCheckFrameRate.setStatus("current")
_LcsFunctionalConfContinuityCheckTLV_Type = Integer32
_LcsFunctionalConfContinuityCheckTLV_Object = MibScalar
lcsFunctionalConfContinuityCheckTLV = _LcsFunctionalConfContinuityCheckTLV_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 5),
    _LcsFunctionalConfContinuityCheckTLV_Type()
)
lcsFunctionalConfContinuityCheckTLV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfContinuityCheckTLV.setStatus("current")
_LcsFunctionalConfAPSProtocolEnable_Type = Integer32
_LcsFunctionalConfAPSProtocolEnable_Object = MibScalar
lcsFunctionalConfAPSProtocolEnable = _LcsFunctionalConfAPSProtocolEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 6),
    _LcsFunctionalConfAPSProtocolEnable_Type()
)
lcsFunctionalConfAPSProtocolEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfAPSProtocolEnable.setStatus("current")
_LcsFunctionalConfAPSProtocolPriority_Type = Integer32
_LcsFunctionalConfAPSProtocolPriority_Object = MibScalar
lcsFunctionalConfAPSProtocolPriority = _LcsFunctionalConfAPSProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 7),
    _LcsFunctionalConfAPSProtocolPriority_Type()
)
lcsFunctionalConfAPSProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfAPSProtocolPriority.setStatus("current")
_LcsFunctionalConfAPSProtocolCast_Type = Integer32
_LcsFunctionalConfAPSProtocolCast_Object = MibScalar
lcsFunctionalConfAPSProtocolCast = _LcsFunctionalConfAPSProtocolCast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 8),
    _LcsFunctionalConfAPSProtocolCast_Type()
)
lcsFunctionalConfAPSProtocolCast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfAPSProtocolCast.setStatus("current")
_LcsFunctionalConfAPSProtocolType_Type = Integer32
_LcsFunctionalConfAPSProtocolType_Object = MibScalar
lcsFunctionalConfAPSProtocolType = _LcsFunctionalConfAPSProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 9),
    _LcsFunctionalConfAPSProtocolType_Type()
)
lcsFunctionalConfAPSProtocolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfAPSProtocolType.setStatus("current")
_LcsFunctionalConfAPSProtocolLastOctet_Type = Integer32
_LcsFunctionalConfAPSProtocolLastOctet_Object = MibScalar
lcsFunctionalConfAPSProtocolLastOctet = _LcsFunctionalConfAPSProtocolLastOctet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 5, 10),
    _LcsFunctionalConfAPSProtocolLastOctet_Type()
)
lcsFunctionalConfAPSProtocolLastOctet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFunctionalConfAPSProtocolLastOctet.setStatus("current")
_LcsTLVConf_ObjectIdentity = ObjectIdentity
lcsTLVConf = _LcsTLVConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6)
)
_LcsTLVConfOUIFirst_Type = Integer32
_LcsTLVConfOUIFirst_Object = MibScalar
lcsTLVConfOUIFirst = _LcsTLVConfOUIFirst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6, 2),
    _LcsTLVConfOUIFirst_Type()
)
lcsTLVConfOUIFirst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTLVConfOUIFirst.setStatus("current")
_LcsTLVConfOUISecond_Type = Integer32
_LcsTLVConfOUISecond_Object = MibScalar
lcsTLVConfOUISecond = _LcsTLVConfOUISecond_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6, 3),
    _LcsTLVConfOUISecond_Type()
)
lcsTLVConfOUISecond.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTLVConfOUISecond.setStatus("current")
_LcsTLVConfOUIThird_Type = Integer32
_LcsTLVConfOUIThird_Object = MibScalar
lcsTLVConfOUIThird = _LcsTLVConfOUIThird_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6, 4),
    _LcsTLVConfOUIThird_Type()
)
lcsTLVConfOUIThird.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTLVConfOUIThird.setStatus("current")
_LcsTLVConfSubType_Type = Integer32
_LcsTLVConfSubType_Object = MibScalar
lcsTLVConfSubType = _LcsTLVConfSubType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6, 5),
    _LcsTLVConfSubType_Type()
)
lcsTLVConfSubType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTLVConfSubType.setStatus("current")
_LcsTLVConfValue_Type = Integer32
_LcsTLVConfValue_Object = MibScalar
lcsTLVConfValue = _LcsTLVConfValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 6, 6),
    _LcsTLVConfValue_Type()
)
lcsTLVConfValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsTLVConfValue.setStatus("current")
_LcsTLVConfStateTable_Object = MibTable
lcsTLVConfStateTable = _LcsTLVConfStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7)
)
if mibBuilder.loadTexts:
    lcsTLVConfStateTable.setStatus("current")
_LcsTLVConfStateEntry_Object = MibTableRow
lcsTLVConfStateEntry = _LcsTLVConfStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1)
)
lcsTLVConfStateEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsTLVConfStateIndex"),
)
if mibBuilder.loadTexts:
    lcsTLVConfStateEntry.setStatus("current")


class _LcsTLVConfStateIndex_Type(Integer32):
    """Custom type lcsTLVConfStateIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsTLVConfStateIndex_Type.__name__ = "Integer32"
_LcsTLVConfStateIndex_Object = MibTableColumn
lcsTLVConfStateIndex = _LcsTLVConfStateIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 1),
    _LcsTLVConfStateIndex_Type()
)
lcsTLVConfStateIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsTLVConfStateIndex.setStatus("current")
_LcsTLVConfStatePeerMEPID_Type = Integer32
_LcsTLVConfStatePeerMEPID_Object = MibTableColumn
lcsTLVConfStatePeerMEPID = _LcsTLVConfStatePeerMEPID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 2),
    _LcsTLVConfStatePeerMEPID_Type()
)
lcsTLVConfStatePeerMEPID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStatePeerMEPID.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificOUIFirst_Type = Integer32
_LcsTLVConfStateCCOrganizationSpecificOUIFirst_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificOUIFirst = _LcsTLVConfStateCCOrganizationSpecificOUIFirst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 3),
    _LcsTLVConfStateCCOrganizationSpecificOUIFirst_Type()
)
lcsTLVConfStateCCOrganizationSpecificOUIFirst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificOUIFirst.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificOUISecond_Type = Integer32
_LcsTLVConfStateCCOrganizationSpecificOUISecond_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificOUISecond = _LcsTLVConfStateCCOrganizationSpecificOUISecond_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 4),
    _LcsTLVConfStateCCOrganizationSpecificOUISecond_Type()
)
lcsTLVConfStateCCOrganizationSpecificOUISecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificOUISecond.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificOUIThird_Type = Integer32
_LcsTLVConfStateCCOrganizationSpecificOUIThird_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificOUIThird = _LcsTLVConfStateCCOrganizationSpecificOUIThird_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 5),
    _LcsTLVConfStateCCOrganizationSpecificOUIThird_Type()
)
lcsTLVConfStateCCOrganizationSpecificOUIThird.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificOUIThird.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificSubType_Type = Integer32
_LcsTLVConfStateCCOrganizationSpecificSubType_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificSubType = _LcsTLVConfStateCCOrganizationSpecificSubType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 6),
    _LcsTLVConfStateCCOrganizationSpecificSubType_Type()
)
lcsTLVConfStateCCOrganizationSpecificSubType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificSubType.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificValue_Type = Integer32
_LcsTLVConfStateCCOrganizationSpecificValue_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificValue = _LcsTLVConfStateCCOrganizationSpecificValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 7),
    _LcsTLVConfStateCCOrganizationSpecificValue_Type()
)
lcsTLVConfStateCCOrganizationSpecificValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificValue.setStatus("current")
_LcsTLVConfStateCCOrganizationSpecificLastRX_Type = DisplayString
_LcsTLVConfStateCCOrganizationSpecificLastRX_Object = MibTableColumn
lcsTLVConfStateCCOrganizationSpecificLastRX = _LcsTLVConfStateCCOrganizationSpecificLastRX_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 8),
    _LcsTLVConfStateCCOrganizationSpecificLastRX_Type()
)
lcsTLVConfStateCCOrganizationSpecificLastRX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCOrganizationSpecificLastRX.setStatus("current")
_LcsTLVConfStateCCPortStatusValue_Type = Integer32
_LcsTLVConfStateCCPortStatusValue_Object = MibTableColumn
lcsTLVConfStateCCPortStatusValue = _LcsTLVConfStateCCPortStatusValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 9),
    _LcsTLVConfStateCCPortStatusValue_Type()
)
lcsTLVConfStateCCPortStatusValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCPortStatusValue.setStatus("current")
_LcsTLVConfStateCCPortStatusLastRX_Type = DisplayString
_LcsTLVConfStateCCPortStatusLastRX_Object = MibTableColumn
lcsTLVConfStateCCPortStatusLastRX = _LcsTLVConfStateCCPortStatusLastRX_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 10),
    _LcsTLVConfStateCCPortStatusLastRX_Type()
)
lcsTLVConfStateCCPortStatusLastRX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCPortStatusLastRX.setStatus("current")
_LcsTLVConfStateCCInterfaceStatusValue_Type = Integer32
_LcsTLVConfStateCCInterfaceStatusValue_Object = MibTableColumn
lcsTLVConfStateCCInterfaceStatusValue = _LcsTLVConfStateCCInterfaceStatusValue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 11),
    _LcsTLVConfStateCCInterfaceStatusValue_Type()
)
lcsTLVConfStateCCInterfaceStatusValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCInterfaceStatusValue.setStatus("current")
_LcsTLVConfStateCCInterfaceStatusLastRX_Type = DisplayString
_LcsTLVConfStateCCInterfaceStatusLastRX_Object = MibTableColumn
lcsTLVConfStateCCInterfaceStatusLastRX = _LcsTLVConfStateCCInterfaceStatusLastRX_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 7, 1, 12),
    _LcsTLVConfStateCCInterfaceStatusLastRX_Type()
)
lcsTLVConfStateCCInterfaceStatusLastRX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsTLVConfStateCCInterfaceStatusLastRX.setStatus("current")
_LcsLinkStateTracking_Type = Integer32
_LcsLinkStateTracking_Object = MibScalar
lcsLinkStateTracking = _LcsLinkStateTracking_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 8),
    _LcsLinkStateTracking_Type()
)
lcsLinkStateTracking.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLinkStateTracking.setStatus("current")
_LcsFaultManagement_ObjectIdentity = ObjectIdentity
lcsFaultManagement = _LcsFaultManagement_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9)
)
_LcsFaultMgmtLoopBackConfEnable_Type = Integer32
_LcsFaultMgmtLoopBackConfEnable_Object = MibScalar
lcsFaultMgmtLoopBackConfEnable = _LcsFaultMgmtLoopBackConfEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 2),
    _LcsFaultMgmtLoopBackConfEnable_Type()
)
lcsFaultMgmtLoopBackConfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfEnable.setStatus("current")
_LcsFaultMgmtLoopBackConfDEI_Type = Integer32
_LcsFaultMgmtLoopBackConfDEI_Object = MibScalar
lcsFaultMgmtLoopBackConfDEI = _LcsFaultMgmtLoopBackConfDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 3),
    _LcsFaultMgmtLoopBackConfDEI_Type()
)
lcsFaultMgmtLoopBackConfDEI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfDEI.setStatus("current")
_LcsFaultMgmtLoopBackConfPriority_Type = Integer32
_LcsFaultMgmtLoopBackConfPriority_Object = MibScalar
lcsFaultMgmtLoopBackConfPriority = _LcsFaultMgmtLoopBackConfPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 4),
    _LcsFaultMgmtLoopBackConfPriority_Type()
)
lcsFaultMgmtLoopBackConfPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfPriority.setStatus("current")
_LcsFaultMgmtLoopBackConfCast_Type = Integer32
_LcsFaultMgmtLoopBackConfCast_Object = MibScalar
lcsFaultMgmtLoopBackConfCast = _LcsFaultMgmtLoopBackConfCast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 5),
    _LcsFaultMgmtLoopBackConfCast_Type()
)
lcsFaultMgmtLoopBackConfCast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfCast.setStatus("current")
_LcsFaultMgmtLoopBackConfPeerMEP_Type = Integer32
_LcsFaultMgmtLoopBackConfPeerMEP_Object = MibScalar
lcsFaultMgmtLoopBackConfPeerMEP = _LcsFaultMgmtLoopBackConfPeerMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 6),
    _LcsFaultMgmtLoopBackConfPeerMEP_Type()
)
lcsFaultMgmtLoopBackConfPeerMEP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfPeerMEP.setStatus("current")
_LcsFaultMgmtLoopBackConfUnicastMAC_Type = DisplayString
_LcsFaultMgmtLoopBackConfUnicastMAC_Object = MibScalar
lcsFaultMgmtLoopBackConfUnicastMAC = _LcsFaultMgmtLoopBackConfUnicastMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 7),
    _LcsFaultMgmtLoopBackConfUnicastMAC_Type()
)
lcsFaultMgmtLoopBackConfUnicastMAC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfUnicastMAC.setStatus("current")
_LcsFaultMgmtLoopBackConfToSend_Type = Integer32
_LcsFaultMgmtLoopBackConfToSend_Object = MibScalar
lcsFaultMgmtLoopBackConfToSend = _LcsFaultMgmtLoopBackConfToSend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 8),
    _LcsFaultMgmtLoopBackConfToSend_Type()
)
lcsFaultMgmtLoopBackConfToSend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfToSend.setStatus("current")
_LcsFaultMgmtLoopBackConfSize_Type = Integer32
_LcsFaultMgmtLoopBackConfSize_Object = MibScalar
lcsFaultMgmtLoopBackConfSize = _LcsFaultMgmtLoopBackConfSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 9),
    _LcsFaultMgmtLoopBackConfSize_Type()
)
lcsFaultMgmtLoopBackConfSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfSize.setStatus("current")
_LcsFaultMgmtLoopBackConfInterval_Type = Integer32
_LcsFaultMgmtLoopBackConfInterval_Object = MibScalar
lcsFaultMgmtLoopBackConfInterval = _LcsFaultMgmtLoopBackConfInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 9, 10),
    _LcsFaultMgmtLoopBackConfInterval_Type()
)
lcsFaultMgmtLoopBackConfInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLoopBackConfInterval.setStatus("current")
_LcsFaultManagementState_ObjectIdentity = ObjectIdentity
lcsFaultManagementState = _LcsFaultManagementState_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10)
)
_LcsFaultMgmtStateTransactionID_Type = Integer32
_LcsFaultMgmtStateTransactionID_Object = MibScalar
lcsFaultMgmtStateTransactionID = _LcsFaultMgmtStateTransactionID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 1),
    _LcsFaultMgmtStateTransactionID_Type()
)
lcsFaultMgmtStateTransactionID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateTransactionID.setStatus("current")
_LcsFaultMgmtStateTransmitted_Type = Integer32
_LcsFaultMgmtStateTransmitted_Object = MibScalar
lcsFaultMgmtStateTransmitted = _LcsFaultMgmtStateTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 2),
    _LcsFaultMgmtStateTransmitted_Type()
)
lcsFaultMgmtStateTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateTransmitted.setStatus("current")
_LcsFaultMgmtStateTable_Object = MibTable
lcsFaultMgmtStateTable = _LcsFaultMgmtStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3)
)
if mibBuilder.loadTexts:
    lcsFaultMgmtStateTable.setStatus("current")
_LcsFaultMgmtStateEntry_Object = MibTableRow
lcsFaultMgmtStateEntry = _LcsFaultMgmtStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3, 1)
)
lcsFaultMgmtStateEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsFaultMgmtStateIndex"),
)
if mibBuilder.loadTexts:
    lcsFaultMgmtStateEntry.setStatus("current")


class _LcsFaultMgmtStateIndex_Type(Integer32):
    """Custom type lcsFaultMgmtStateIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsFaultMgmtStateIndex_Type.__name__ = "Integer32"
_LcsFaultMgmtStateIndex_Object = MibTableColumn
lcsFaultMgmtStateIndex = _LcsFaultMgmtStateIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3, 1, 1),
    _LcsFaultMgmtStateIndex_Type()
)
lcsFaultMgmtStateIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateIndex.setStatus("current")
_LcsFaultMgmtStateReplyMAC_Type = DisplayString
_LcsFaultMgmtStateReplyMAC_Object = MibTableColumn
lcsFaultMgmtStateReplyMAC = _LcsFaultMgmtStateReplyMAC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3, 1, 2),
    _LcsFaultMgmtStateReplyMAC_Type()
)
lcsFaultMgmtStateReplyMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateReplyMAC.setStatus("current")
_LcsFaultMgmtStateReceived_Type = Integer32
_LcsFaultMgmtStateReceived_Object = MibTableColumn
lcsFaultMgmtStateReceived = _LcsFaultMgmtStateReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3, 1, 3),
    _LcsFaultMgmtStateReceived_Type()
)
lcsFaultMgmtStateReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateReceived.setStatus("current")
_LcsFaultMgmtStateOutOfOrder_Type = Integer32
_LcsFaultMgmtStateOutOfOrder_Object = MibTableColumn
lcsFaultMgmtStateOutOfOrder = _LcsFaultMgmtStateOutOfOrder_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 10, 3, 1, 4),
    _LcsFaultMgmtStateOutOfOrder_Type()
)
lcsFaultMgmtStateOutOfOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtStateOutOfOrder.setStatus("current")
_LcsFaultMgmtTestSignal_ObjectIdentity = ObjectIdentity
lcsFaultMgmtTestSignal = _LcsFaultMgmtTestSignal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11)
)
_LcsFaultMgmtTestSignalTx_Type = Integer32
_LcsFaultMgmtTestSignalTx_Object = MibScalar
lcsFaultMgmtTestSignalTx = _LcsFaultMgmtTestSignalTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 2),
    _LcsFaultMgmtTestSignalTx_Type()
)
lcsFaultMgmtTestSignalTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalTx.setStatus("current")
_LcsFaultMgmtTestSignalRx_Type = Integer32
_LcsFaultMgmtTestSignalRx_Object = MibScalar
lcsFaultMgmtTestSignalRx = _LcsFaultMgmtTestSignalRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 3),
    _LcsFaultMgmtTestSignalRx_Type()
)
lcsFaultMgmtTestSignalRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalRx.setStatus("current")
_LcsFaultMgmtTestSignalDEI_Type = Integer32
_LcsFaultMgmtTestSignalDEI_Object = MibScalar
lcsFaultMgmtTestSignalDEI = _LcsFaultMgmtTestSignalDEI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 4),
    _LcsFaultMgmtTestSignalDEI_Type()
)
lcsFaultMgmtTestSignalDEI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalDEI.setStatus("current")
_LcsFaultMgmtTestSignalPriority_Type = Integer32
_LcsFaultMgmtTestSignalPriority_Object = MibScalar
lcsFaultMgmtTestSignalPriority = _LcsFaultMgmtTestSignalPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 5),
    _LcsFaultMgmtTestSignalPriority_Type()
)
lcsFaultMgmtTestSignalPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalPriority.setStatus("current")
_LcsFaultMgmtTestSignalPeerMEP_Type = Integer32
_LcsFaultMgmtTestSignalPeerMEP_Object = MibScalar
lcsFaultMgmtTestSignalPeerMEP = _LcsFaultMgmtTestSignalPeerMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 6),
    _LcsFaultMgmtTestSignalPeerMEP_Type()
)
lcsFaultMgmtTestSignalPeerMEP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalPeerMEP.setStatus("current")
_LcsFaultMgmtTestSignalRate_Type = Integer32
_LcsFaultMgmtTestSignalRate_Object = MibScalar
lcsFaultMgmtTestSignalRate = _LcsFaultMgmtTestSignalRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 7),
    _LcsFaultMgmtTestSignalRate_Type()
)
lcsFaultMgmtTestSignalRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalRate.setStatus("current")
_LcsFaultMgmtTestSignalSize_Type = Integer32
_LcsFaultMgmtTestSignalSize_Object = MibScalar
lcsFaultMgmtTestSignalSize = _LcsFaultMgmtTestSignalSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 8),
    _LcsFaultMgmtTestSignalSize_Type()
)
lcsFaultMgmtTestSignalSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalSize.setStatus("current")
_LcsFaultMgmtTestSignalPattern_Type = Integer32
_LcsFaultMgmtTestSignalPattern_Object = MibScalar
lcsFaultMgmtTestSignalPattern = _LcsFaultMgmtTestSignalPattern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 9),
    _LcsFaultMgmtTestSignalPattern_Type()
)
lcsFaultMgmtTestSignalPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalPattern.setStatus("current")
_LcsFaultMgmtTestSignalSequenceNumber_Type = Integer32
_LcsFaultMgmtTestSignalSequenceNumber_Object = MibScalar
lcsFaultMgmtTestSignalSequenceNumber = _LcsFaultMgmtTestSignalSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 11, 10),
    _LcsFaultMgmtTestSignalSequenceNumber_Type()
)
lcsFaultMgmtTestSignalSequenceNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalSequenceNumber.setStatus("current")
_LcsFaultMgmtTestSignalState_ObjectIdentity = ObjectIdentity
lcsFaultMgmtTestSignalState = _LcsFaultMgmtTestSignalState_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12)
)
_LcsFaultMgmtTestSignalStateTXFrameCount_Type = Integer32
_LcsFaultMgmtTestSignalStateTXFrameCount_Object = MibScalar
lcsFaultMgmtTestSignalStateTXFrameCount = _LcsFaultMgmtTestSignalStateTXFrameCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12, 2),
    _LcsFaultMgmtTestSignalStateTXFrameCount_Type()
)
lcsFaultMgmtTestSignalStateTXFrameCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalStateTXFrameCount.setStatus("current")
_LcsFaultMgmtTestSignalStateRXFrameCount_Type = Integer32
_LcsFaultMgmtTestSignalStateRXFrameCount_Object = MibScalar
lcsFaultMgmtTestSignalStateRXFrameCount = _LcsFaultMgmtTestSignalStateRXFrameCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12, 3),
    _LcsFaultMgmtTestSignalStateRXFrameCount_Type()
)
lcsFaultMgmtTestSignalStateRXFrameCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalStateRXFrameCount.setStatus("current")
_LcsFaultMgmtTestSignalStateRXRate_Type = Integer32
_LcsFaultMgmtTestSignalStateRXRate_Object = MibScalar
lcsFaultMgmtTestSignalStateRXRate = _LcsFaultMgmtTestSignalStateRXRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12, 4),
    _LcsFaultMgmtTestSignalStateRXRate_Type()
)
lcsFaultMgmtTestSignalStateRXRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalStateRXRate.setStatus("current")
_LcsFaultMgmtTestSignalStateTestTime_Type = Integer32
_LcsFaultMgmtTestSignalStateTestTime_Object = MibScalar
lcsFaultMgmtTestSignalStateTestTime = _LcsFaultMgmtTestSignalStateTestTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12, 5),
    _LcsFaultMgmtTestSignalStateTestTime_Type()
)
lcsFaultMgmtTestSignalStateTestTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalStateTestTime.setStatus("current")
_LcsFaultMgmtTestSignalStateClear_Type = Integer32
_LcsFaultMgmtTestSignalStateClear_Object = MibScalar
lcsFaultMgmtTestSignalStateClear = _LcsFaultMgmtTestSignalStateClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 12, 6),
    _LcsFaultMgmtTestSignalStateClear_Type()
)
lcsFaultMgmtTestSignalStateClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtTestSignalStateClear.setStatus("current")
_LcsFaultMgmtClientConfigFlow_ObjectIdentity = ObjectIdentity
lcsFaultMgmtClientConfigFlow = _LcsFaultMgmtClientConfigFlow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13)
)
_LcsFaultMgmtClientConfigFlowTable_Object = MibTable
lcsFaultMgmtClientConfigFlowTable = _LcsFaultMgmtClientConfigFlowTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1)
)
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowTable.setStatus("current")
_LcsFaultMgmtClientConfigFlowEntry_Object = MibTableRow
lcsFaultMgmtClientConfigFlowEntry = _LcsFaultMgmtClientConfigFlowEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1)
)
lcsFaultMgmtClientConfigFlowEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsFaultMgmtClientConfigFlowIndex"),
)
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowEntry.setStatus("current")


class _LcsFaultMgmtClientConfigFlowIndex_Type(Integer32):
    """Custom type lcsFaultMgmtClientConfigFlowIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsFaultMgmtClientConfigFlowIndex_Type.__name__ = "Integer32"
_LcsFaultMgmtClientConfigFlowIndex_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowIndex = _LcsFaultMgmtClientConfigFlowIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 1),
    _LcsFaultMgmtClientConfigFlowIndex_Type()
)
lcsFaultMgmtClientConfigFlowIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowIndex.setStatus("current")
_LcsFaultMgmtClientConfigFlowDomain_Type = Integer32
_LcsFaultMgmtClientConfigFlowDomain_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowDomain = _LcsFaultMgmtClientConfigFlowDomain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 2),
    _LcsFaultMgmtClientConfigFlowDomain_Type()
)
lcsFaultMgmtClientConfigFlowDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowDomain.setStatus("current")
_LcsFaultMgmtClientConfigFlowInstance_Type = Integer32
_LcsFaultMgmtClientConfigFlowInstance_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowInstance = _LcsFaultMgmtClientConfigFlowInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 3),
    _LcsFaultMgmtClientConfigFlowInstance_Type()
)
lcsFaultMgmtClientConfigFlowInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowInstance.setStatus("current")
_LcsFaultMgmtClientConfigFlowLevel_Type = Integer32
_LcsFaultMgmtClientConfigFlowLevel_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowLevel = _LcsFaultMgmtClientConfigFlowLevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 4),
    _LcsFaultMgmtClientConfigFlowLevel_Type()
)
lcsFaultMgmtClientConfigFlowLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowLevel.setStatus("current")
_LcsFaultMgmtClientConfigFlowAISprio_Type = Integer32
_LcsFaultMgmtClientConfigFlowAISprio_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowAISprio = _LcsFaultMgmtClientConfigFlowAISprio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 5),
    _LcsFaultMgmtClientConfigFlowAISprio_Type()
)
lcsFaultMgmtClientConfigFlowAISprio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowAISprio.setStatus("current")
_LcsFaultMgmtClientConfigFlowLCKprio_Type = Integer32
_LcsFaultMgmtClientConfigFlowLCKprio_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowLCKprio = _LcsFaultMgmtClientConfigFlowLCKprio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 6),
    _LcsFaultMgmtClientConfigFlowLCKprio_Type()
)
lcsFaultMgmtClientConfigFlowLCKprio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowLCKprio.setStatus("current")
_LcsFaultMgmtClientConfigFlowRowStatus_Type = RowStatus
_LcsFaultMgmtClientConfigFlowRowStatus_Object = MibTableColumn
lcsFaultMgmtClientConfigFlowRowStatus = _LcsFaultMgmtClientConfigFlowRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 13, 1, 1, 7),
    _LcsFaultMgmtClientConfigFlowRowStatus_Type()
)
lcsFaultMgmtClientConfigFlowRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsFaultMgmtClientConfigFlowRowStatus.setStatus("current")
_LcsFaultMgmtAISLOCK_ObjectIdentity = ObjectIdentity
lcsFaultMgmtAISLOCK = _LcsFaultMgmtAISLOCK_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14)
)
_LcsFaultMgmtAISEnable_Type = Integer32
_LcsFaultMgmtAISEnable_Object = MibScalar
lcsFaultMgmtAISEnable = _LcsFaultMgmtAISEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14, 2),
    _LcsFaultMgmtAISEnable_Type()
)
lcsFaultMgmtAISEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtAISEnable.setStatus("current")
_LcsFaultMgmtAISFrameRate_Type = Integer32
_LcsFaultMgmtAISFrameRate_Object = MibScalar
lcsFaultMgmtAISFrameRate = _LcsFaultMgmtAISFrameRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14, 3),
    _LcsFaultMgmtAISFrameRate_Type()
)
lcsFaultMgmtAISFrameRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtAISFrameRate.setStatus("current")
_LcsFaultMgmtAISProtection_Type = Integer32
_LcsFaultMgmtAISProtection_Object = MibScalar
lcsFaultMgmtAISProtection = _LcsFaultMgmtAISProtection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14, 4),
    _LcsFaultMgmtAISProtection_Type()
)
lcsFaultMgmtAISProtection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtAISProtection.setStatus("current")
_LcsFaultMgmtLOCKEnable_Type = Integer32
_LcsFaultMgmtLOCKEnable_Object = MibScalar
lcsFaultMgmtLOCKEnable = _LcsFaultMgmtLOCKEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14, 5),
    _LcsFaultMgmtLOCKEnable_Type()
)
lcsFaultMgmtLOCKEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLOCKEnable.setStatus("current")
_LcsFaultMgmtLOCKFrameRate_Type = Integer32
_LcsFaultMgmtLOCKFrameRate_Object = MibScalar
lcsFaultMgmtLOCKFrameRate = _LcsFaultMgmtLOCKFrameRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 14, 6),
    _LcsFaultMgmtLOCKFrameRate_Type()
)
lcsFaultMgmtLOCKFrameRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFaultMgmtLOCKFrameRate.setStatus("current")
_LcsPerformanceMonitor_ObjectIdentity = ObjectIdentity
lcsPerformanceMonitor = _LcsPerformanceMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15)
)
_LcsDataSetEnable_Type = Integer32
_LcsDataSetEnable_Object = MibScalar
lcsDataSetEnable = _LcsDataSetEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 2),
    _LcsDataSetEnable_Type()
)
lcsDataSetEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDataSetEnable.setStatus("current")
_LcsLossMeasurementEnable_Type = Integer32
_LcsLossMeasurementEnable_Object = MibScalar
lcsLossMeasurementEnable = _LcsLossMeasurementEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 3),
    _LcsLossMeasurementEnable_Type()
)
lcsLossMeasurementEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementEnable.setStatus("current")
_LcsLossMeasurementPriority_Type = Integer32
_LcsLossMeasurementPriority_Object = MibScalar
lcsLossMeasurementPriority = _LcsLossMeasurementPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 4),
    _LcsLossMeasurementPriority_Type()
)
lcsLossMeasurementPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementPriority.setStatus("current")
_LcsLossMeasurementFrameRate_Type = Integer32
_LcsLossMeasurementFrameRate_Object = MibScalar
lcsLossMeasurementFrameRate = _LcsLossMeasurementFrameRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 5),
    _LcsLossMeasurementFrameRate_Type()
)
lcsLossMeasurementFrameRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementFrameRate.setStatus("current")
_LcsLossMeasurementCast_Type = Integer32
_LcsLossMeasurementCast_Object = MibScalar
lcsLossMeasurementCast = _LcsLossMeasurementCast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 6),
    _LcsLossMeasurementCast_Type()
)
lcsLossMeasurementCast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementCast.setStatus("current")
_LcsLossMeasurementEnded_Type = Integer32
_LcsLossMeasurementEnded_Object = MibScalar
lcsLossMeasurementEnded = _LcsLossMeasurementEnded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 7),
    _LcsLossMeasurementEnded_Type()
)
lcsLossMeasurementEnded.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementEnded.setStatus("current")
_LcsLossMeasurementFLRInterval_Type = Integer32
_LcsLossMeasurementFLRInterval_Object = MibScalar
lcsLossMeasurementFLRInterval = _LcsLossMeasurementFLRInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 8),
    _LcsLossMeasurementFLRInterval_Type()
)
lcsLossMeasurementFLRInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementFLRInterval.setStatus("current")
_LcsLossMeasurementLossThreshold_Type = Integer32
_LcsLossMeasurementLossThreshold_Object = MibScalar
lcsLossMeasurementLossThreshold = _LcsLossMeasurementLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 9),
    _LcsLossMeasurementLossThreshold_Type()
)
lcsLossMeasurementLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementLossThreshold.setStatus("current")
_LcsLossMeasurementStateTx_Type = Integer32
_LcsLossMeasurementStateTx_Object = MibScalar
lcsLossMeasurementStateTx = _LcsLossMeasurementStateTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 10),
    _LcsLossMeasurementStateTx_Type()
)
lcsLossMeasurementStateTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateTx.setStatus("current")
_LcsLossMeasurementStateRx_Type = Integer32
_LcsLossMeasurementStateRx_Object = MibScalar
lcsLossMeasurementStateRx = _LcsLossMeasurementStateRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 11),
    _LcsLossMeasurementStateRx_Type()
)
lcsLossMeasurementStateRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateRx.setStatus("current")
_LcsLossMeasurementStateNearEndLossCount_Type = Integer32
_LcsLossMeasurementStateNearEndLossCount_Object = MibScalar
lcsLossMeasurementStateNearEndLossCount = _LcsLossMeasurementStateNearEndLossCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 12),
    _LcsLossMeasurementStateNearEndLossCount_Type()
)
lcsLossMeasurementStateNearEndLossCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateNearEndLossCount.setStatus("current")
_LcsLossMeasurementStateFarEndLossCount_Type = Integer32
_LcsLossMeasurementStateFarEndLossCount_Object = MibScalar
lcsLossMeasurementStateFarEndLossCount = _LcsLossMeasurementStateFarEndLossCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 13),
    _LcsLossMeasurementStateFarEndLossCount_Type()
)
lcsLossMeasurementStateFarEndLossCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateFarEndLossCount.setStatus("current")
_LcsLossMeasurementStateNearEndLossRatio_Type = Integer32
_LcsLossMeasurementStateNearEndLossRatio_Object = MibScalar
lcsLossMeasurementStateNearEndLossRatio = _LcsLossMeasurementStateNearEndLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 14),
    _LcsLossMeasurementStateNearEndLossRatio_Type()
)
lcsLossMeasurementStateNearEndLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateNearEndLossRatio.setStatus("current")
_LcsLossMeasurementStateFarEndLossRatio_Type = Integer32
_LcsLossMeasurementStateFarEndLossRatio_Object = MibScalar
lcsLossMeasurementStateFarEndLossRatio = _LcsLossMeasurementStateFarEndLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 15),
    _LcsLossMeasurementStateFarEndLossRatio_Type()
)
lcsLossMeasurementStateFarEndLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateFarEndLossRatio.setStatus("current")
_LcsLossMeasurementStateClear_Type = Integer32
_LcsLossMeasurementStateClear_Object = MibScalar
lcsLossMeasurementStateClear = _LcsLossMeasurementStateClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 16),
    _LcsLossMeasurementStateClear_Type()
)
lcsLossMeasurementStateClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementStateClear.setStatus("current")
_LcsLossMeasurementAvailabilityEnable_Type = Integer32
_LcsLossMeasurementAvailabilityEnable_Object = MibScalar
lcsLossMeasurementAvailabilityEnable = _LcsLossMeasurementAvailabilityEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 17),
    _LcsLossMeasurementAvailabilityEnable_Type()
)
lcsLossMeasurementAvailabilityEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityEnable.setStatus("current")
_LcsLossMeasurementAvailabilityInterval_Type = Integer32
_LcsLossMeasurementAvailabilityInterval_Object = MibScalar
lcsLossMeasurementAvailabilityInterval = _LcsLossMeasurementAvailabilityInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 18),
    _LcsLossMeasurementAvailabilityInterval_Type()
)
lcsLossMeasurementAvailabilityInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityInterval.setStatus("current")
_LcsLossMeasurementAvailabilityFLRThreshold_Type = Integer32
_LcsLossMeasurementAvailabilityFLRThreshold_Object = MibScalar
lcsLossMeasurementAvailabilityFLRThreshold = _LcsLossMeasurementAvailabilityFLRThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 19),
    _LcsLossMeasurementAvailabilityFLRThreshold_Type()
)
lcsLossMeasurementAvailabilityFLRThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityFLRThreshold.setStatus("current")
_LcsLossMeasurementAvailabilityMaintenance_Type = Integer32
_LcsLossMeasurementAvailabilityMaintenance_Object = MibScalar
lcsLossMeasurementAvailabilityMaintenance = _LcsLossMeasurementAvailabilityMaintenance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 20),
    _LcsLossMeasurementAvailabilityMaintenance_Type()
)
lcsLossMeasurementAvailabilityMaintenance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityMaintenance.setStatus("current")
_LcsLossMeasurementAvailabilityStateNearAvailabilityCount_Type = Integer32
_LcsLossMeasurementAvailabilityStateNearAvailabilityCount_Object = MibScalar
lcsLossMeasurementAvailabilityStateNearAvailabilityCount = _LcsLossMeasurementAvailabilityStateNearAvailabilityCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 21),
    _LcsLossMeasurementAvailabilityStateNearAvailabilityCount_Type()
)
lcsLossMeasurementAvailabilityStateNearAvailabilityCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateNearAvailabilityCount.setStatus("current")
_LcsLossMeasurementAvailabilityStateFarAvailabilityCount_Type = Integer32
_LcsLossMeasurementAvailabilityStateFarAvailabilityCount_Object = MibScalar
lcsLossMeasurementAvailabilityStateFarAvailabilityCount = _LcsLossMeasurementAvailabilityStateFarAvailabilityCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 22),
    _LcsLossMeasurementAvailabilityStateFarAvailabilityCount_Type()
)
lcsLossMeasurementAvailabilityStateFarAvailabilityCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateFarAvailabilityCount.setStatus("current")
_LcsLossMeasurementAvailabilityStateNearUnavailabilityCount_Type = Integer32
_LcsLossMeasurementAvailabilityStateNearUnavailabilityCount_Object = MibScalar
lcsLossMeasurementAvailabilityStateNearUnavailabilityCount = _LcsLossMeasurementAvailabilityStateNearUnavailabilityCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 23),
    _LcsLossMeasurementAvailabilityStateNearUnavailabilityCount_Type()
)
lcsLossMeasurementAvailabilityStateNearUnavailabilityCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateNearUnavailabilityCount.setStatus("current")
_LcsLossMeasurementAvailabilityStateFarUnavailabilityCount_Type = Integer32
_LcsLossMeasurementAvailabilityStateFarUnavailabilityCount_Object = MibScalar
lcsLossMeasurementAvailabilityStateFarUnavailabilityCount = _LcsLossMeasurementAvailabilityStateFarUnavailabilityCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 24),
    _LcsLossMeasurementAvailabilityStateFarUnavailabilityCount_Type()
)
lcsLossMeasurementAvailabilityStateFarUnavailabilityCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateFarUnavailabilityCount.setStatus("current")
_LcsLossMeasurementAvailabilityStateNearState_Type = Integer32
_LcsLossMeasurementAvailabilityStateNearState_Object = MibScalar
lcsLossMeasurementAvailabilityStateNearState = _LcsLossMeasurementAvailabilityStateNearState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 25),
    _LcsLossMeasurementAvailabilityStateNearState_Type()
)
lcsLossMeasurementAvailabilityStateNearState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateNearState.setStatus("current")
_LcsLossMeasurementAvailabilityStateFarState_Type = Integer32
_LcsLossMeasurementAvailabilityStateFarState_Object = MibScalar
lcsLossMeasurementAvailabilityStateFarState = _LcsLossMeasurementAvailabilityStateFarState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 26),
    _LcsLossMeasurementAvailabilityStateFarState_Type()
)
lcsLossMeasurementAvailabilityStateFarState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementAvailabilityStateFarState.setStatus("current")
_LcsLossMeasurementHighLossIntervalEnable_Type = Integer32
_LcsLossMeasurementHighLossIntervalEnable_Object = MibScalar
lcsLossMeasurementHighLossIntervalEnable = _LcsLossMeasurementHighLossIntervalEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 27),
    _LcsLossMeasurementHighLossIntervalEnable_Type()
)
lcsLossMeasurementHighLossIntervalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalEnable.setStatus("current")
_LcsLossMeasurementHighLossIntervalFLRThreshold_Type = Integer32
_LcsLossMeasurementHighLossIntervalFLRThreshold_Object = MibScalar
lcsLossMeasurementHighLossIntervalFLRThreshold = _LcsLossMeasurementHighLossIntervalFLRThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 28),
    _LcsLossMeasurementHighLossIntervalFLRThreshold_Type()
)
lcsLossMeasurementHighLossIntervalFLRThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalFLRThreshold.setStatus("current")
_LcsLossMeasurementHighLossIntervalConsecutiveInterval_Type = Integer32
_LcsLossMeasurementHighLossIntervalConsecutiveInterval_Object = MibScalar
lcsLossMeasurementHighLossIntervalConsecutiveInterval = _LcsLossMeasurementHighLossIntervalConsecutiveInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 29),
    _LcsLossMeasurementHighLossIntervalConsecutiveInterval_Type()
)
lcsLossMeasurementHighLossIntervalConsecutiveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalConsecutiveInterval.setStatus("current")
_LcsLossMeasurementHighLossIntervalStateNearCount_Type = Integer32
_LcsLossMeasurementHighLossIntervalStateNearCount_Object = MibScalar
lcsLossMeasurementHighLossIntervalStateNearCount = _LcsLossMeasurementHighLossIntervalStateNearCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 30),
    _LcsLossMeasurementHighLossIntervalStateNearCount_Type()
)
lcsLossMeasurementHighLossIntervalStateNearCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalStateNearCount.setStatus("current")
_LcsLossMeasurementHighLossIntervalStateFarCount_Type = Integer32
_LcsLossMeasurementHighLossIntervalStateFarCount_Object = MibScalar
lcsLossMeasurementHighLossIntervalStateFarCount = _LcsLossMeasurementHighLossIntervalStateFarCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 31),
    _LcsLossMeasurementHighLossIntervalStateFarCount_Type()
)
lcsLossMeasurementHighLossIntervalStateFarCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalStateFarCount.setStatus("current")
_LcsLossMeasurementHighLossIntervalStateNearConsecutiveCount_Type = Integer32
_LcsLossMeasurementHighLossIntervalStateNearConsecutiveCount_Object = MibScalar
lcsLossMeasurementHighLossIntervalStateNearConsecutiveCount = _LcsLossMeasurementHighLossIntervalStateNearConsecutiveCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 32),
    _LcsLossMeasurementHighLossIntervalStateNearConsecutiveCount_Type()
)
lcsLossMeasurementHighLossIntervalStateNearConsecutiveCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalStateNearConsecutiveCount.setStatus("current")
_LcsLossMeasurementHighLossIntervalStateFarConsecutiveCount_Type = Integer32
_LcsLossMeasurementHighLossIntervalStateFarConsecutiveCount_Object = MibScalar
lcsLossMeasurementHighLossIntervalStateFarConsecutiveCount = _LcsLossMeasurementHighLossIntervalStateFarConsecutiveCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 33),
    _LcsLossMeasurementHighLossIntervalStateFarConsecutiveCount_Type()
)
lcsLossMeasurementHighLossIntervalStateFarConsecutiveCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLossMeasurementHighLossIntervalStateFarConsecutiveCount.setStatus("current")
_LcsLossMeasurementSignalDegradeEnable_Type = Integer32
_LcsLossMeasurementSignalDegradeEnable_Object = MibScalar
lcsLossMeasurementSignalDegradeEnable = _LcsLossMeasurementSignalDegradeEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 34),
    _LcsLossMeasurementSignalDegradeEnable_Type()
)
lcsLossMeasurementSignalDegradeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementSignalDegradeEnable.setStatus("current")
_LcsLossMeasurementSignalDegradeTXMinimum_Type = Integer32
_LcsLossMeasurementSignalDegradeTXMinimum_Object = MibScalar
lcsLossMeasurementSignalDegradeTXMinimum = _LcsLossMeasurementSignalDegradeTXMinimum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 35),
    _LcsLossMeasurementSignalDegradeTXMinimum_Type()
)
lcsLossMeasurementSignalDegradeTXMinimum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementSignalDegradeTXMinimum.setStatus("current")
_LcsLossMeasurementSignalDegradeFLRThreshold_Type = Integer32
_LcsLossMeasurementSignalDegradeFLRThreshold_Object = MibScalar
lcsLossMeasurementSignalDegradeFLRThreshold = _LcsLossMeasurementSignalDegradeFLRThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 36),
    _LcsLossMeasurementSignalDegradeFLRThreshold_Type()
)
lcsLossMeasurementSignalDegradeFLRThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementSignalDegradeFLRThreshold.setStatus("current")
_LcsLossMeasurementSignalDegradeBadThreshold_Type = Integer32
_LcsLossMeasurementSignalDegradeBadThreshold_Object = MibScalar
lcsLossMeasurementSignalDegradeBadThreshold = _LcsLossMeasurementSignalDegradeBadThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 37),
    _LcsLossMeasurementSignalDegradeBadThreshold_Type()
)
lcsLossMeasurementSignalDegradeBadThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementSignalDegradeBadThreshold.setStatus("current")
_LcsLossMeasurementSignalDegradeGoodThreshold_Type = Integer32
_LcsLossMeasurementSignalDegradeGoodThreshold_Object = MibScalar
lcsLossMeasurementSignalDegradeGoodThreshold = _LcsLossMeasurementSignalDegradeGoodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 38),
    _LcsLossMeasurementSignalDegradeGoodThreshold_Type()
)
lcsLossMeasurementSignalDegradeGoodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLossMeasurementSignalDegradeGoodThreshold.setStatus("current")
_LcsDelayMeasurementEnable_Type = Integer32
_LcsDelayMeasurementEnable_Object = MibScalar
lcsDelayMeasurementEnable = _LcsDelayMeasurementEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 39),
    _LcsDelayMeasurementEnable_Type()
)
lcsDelayMeasurementEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementEnable.setStatus("current")
_LcsDelayMeasurementPriority_Type = Integer32
_LcsDelayMeasurementPriority_Object = MibScalar
lcsDelayMeasurementPriority = _LcsDelayMeasurementPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 40),
    _LcsDelayMeasurementPriority_Type()
)
lcsDelayMeasurementPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementPriority.setStatus("current")
_LcsDelayMeasurementCast_Type = Integer32
_LcsDelayMeasurementCast_Object = MibScalar
lcsDelayMeasurementCast = _LcsDelayMeasurementCast_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 41),
    _LcsDelayMeasurementCast_Type()
)
lcsDelayMeasurementCast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementCast.setStatus("current")
_LcsDelayMeasurementPeerMEP_Type = Integer32
_LcsDelayMeasurementPeerMEP_Object = MibScalar
lcsDelayMeasurementPeerMEP = _LcsDelayMeasurementPeerMEP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 42),
    _LcsDelayMeasurementPeerMEP_Type()
)
lcsDelayMeasurementPeerMEP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementPeerMEP.setStatus("current")
_LcsDelayMeasurementEnded_Type = Integer32
_LcsDelayMeasurementEnded_Object = MibScalar
lcsDelayMeasurementEnded = _LcsDelayMeasurementEnded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 43),
    _LcsDelayMeasurementEnded_Type()
)
lcsDelayMeasurementEnded.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementEnded.setStatus("current")
_LcsDelayMeasurementTxMode_Type = Integer32
_LcsDelayMeasurementTxMode_Object = MibScalar
lcsDelayMeasurementTxMode = _LcsDelayMeasurementTxMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 44),
    _LcsDelayMeasurementTxMode_Type()
)
lcsDelayMeasurementTxMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementTxMode.setStatus("current")
_LcsDelayMeasurementCalc_Type = Integer32
_LcsDelayMeasurementCalc_Object = MibScalar
lcsDelayMeasurementCalc = _LcsDelayMeasurementCalc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 45),
    _LcsDelayMeasurementCalc_Type()
)
lcsDelayMeasurementCalc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementCalc.setStatus("current")
_LcsDelayMeasurementGap_Type = Integer32
_LcsDelayMeasurementGap_Object = MibScalar
lcsDelayMeasurementGap = _LcsDelayMeasurementGap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 46),
    _LcsDelayMeasurementGap_Type()
)
lcsDelayMeasurementGap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementGap.setStatus("current")
_LcsDelayMeasurementCount_Type = Integer32
_LcsDelayMeasurementCount_Object = MibScalar
lcsDelayMeasurementCount = _LcsDelayMeasurementCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 47),
    _LcsDelayMeasurementCount_Type()
)
lcsDelayMeasurementCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementCount.setStatus("current")
_LcsDelayMeasurementUnit_Type = Integer32
_LcsDelayMeasurementUnit_Object = MibScalar
lcsDelayMeasurementUnit = _LcsDelayMeasurementUnit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 48),
    _LcsDelayMeasurementUnit_Type()
)
lcsDelayMeasurementUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementUnit.setStatus("current")
_LcsDelayMeasurementD2forD1_Type = Integer32
_LcsDelayMeasurementD2forD1_Object = MibScalar
lcsDelayMeasurementD2forD1 = _LcsDelayMeasurementD2forD1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 49),
    _LcsDelayMeasurementD2forD1_Type()
)
lcsDelayMeasurementD2forD1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementD2forD1.setStatus("current")
_LcsDelayMeasurementCounterOverflowAction_Type = Integer32
_LcsDelayMeasurementCounterOverflowAction_Object = MibScalar
lcsDelayMeasurementCounterOverflowAction = _LcsDelayMeasurementCounterOverflowAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 50),
    _LcsDelayMeasurementCounterOverflowAction_Type()
)
lcsDelayMeasurementCounterOverflowAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementCounterOverflowAction.setStatus("current")
_LcsDelayMeasurementStateOnewayTx_Type = DisplayString
_LcsDelayMeasurementStateOnewayTx_Object = MibScalar
lcsDelayMeasurementStateOnewayTx = _LcsDelayMeasurementStateOnewayTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 51),
    _LcsDelayMeasurementStateOnewayTx_Type()
)
lcsDelayMeasurementStateOnewayTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayTx.setStatus("current")
_LcsDelayMeasurementStateOnewayRx_Type = DisplayString
_LcsDelayMeasurementStateOnewayRx_Object = MibScalar
lcsDelayMeasurementStateOnewayRx = _LcsDelayMeasurementStateOnewayRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 52),
    _LcsDelayMeasurementStateOnewayRx_Type()
)
lcsDelayMeasurementStateOnewayRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayRx.setStatus("current")
_LcsDelayMeasurementStateOnewayRxTimeout_Type = DisplayString
_LcsDelayMeasurementStateOnewayRxTimeout_Object = MibScalar
lcsDelayMeasurementStateOnewayRxTimeout = _LcsDelayMeasurementStateOnewayRxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 53),
    _LcsDelayMeasurementStateOnewayRxTimeout_Type()
)
lcsDelayMeasurementStateOnewayRxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayRxTimeout.setStatus("current")
_LcsDelayMeasurementStateOnewayRxError_Type = DisplayString
_LcsDelayMeasurementStateOnewayRxError_Object = MibScalar
lcsDelayMeasurementStateOnewayRxError = _LcsDelayMeasurementStateOnewayRxError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 54),
    _LcsDelayMeasurementStateOnewayRxError_Type()
)
lcsDelayMeasurementStateOnewayRxError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayRxError.setStatus("current")
_LcsDelayMeasurementStateOnewayAvDelayTot_Type = DisplayString
_LcsDelayMeasurementStateOnewayAvDelayTot_Object = MibScalar
lcsDelayMeasurementStateOnewayAvDelayTot = _LcsDelayMeasurementStateOnewayAvDelayTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 55),
    _LcsDelayMeasurementStateOnewayAvDelayTot_Type()
)
lcsDelayMeasurementStateOnewayAvDelayTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayAvDelayTot.setStatus("current")
_LcsDelayMeasurementStateOnewayAvDelaylastN_Type = DisplayString
_LcsDelayMeasurementStateOnewayAvDelaylastN_Object = MibScalar
lcsDelayMeasurementStateOnewayAvDelaylastN = _LcsDelayMeasurementStateOnewayAvDelaylastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 56),
    _LcsDelayMeasurementStateOnewayAvDelaylastN_Type()
)
lcsDelayMeasurementStateOnewayAvDelaylastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayAvDelaylastN.setStatus("current")
_LcsDelayMeasurementStateOnewayDelayMin_Type = DisplayString
_LcsDelayMeasurementStateOnewayDelayMin_Object = MibScalar
lcsDelayMeasurementStateOnewayDelayMin = _LcsDelayMeasurementStateOnewayDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 57),
    _LcsDelayMeasurementStateOnewayDelayMin_Type()
)
lcsDelayMeasurementStateOnewayDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayDelayMin.setStatus("current")
_LcsDelayMeasurementStateOnewayDelayMax_Type = DisplayString
_LcsDelayMeasurementStateOnewayDelayMax_Object = MibScalar
lcsDelayMeasurementStateOnewayDelayMax = _LcsDelayMeasurementStateOnewayDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 58),
    _LcsDelayMeasurementStateOnewayDelayMax_Type()
)
lcsDelayMeasurementStateOnewayDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayDelayMax.setStatus("current")
_LcsDelayMeasurementStateOnewayAvDelayVarTot_Type = DisplayString
_LcsDelayMeasurementStateOnewayAvDelayVarTot_Object = MibScalar
lcsDelayMeasurementStateOnewayAvDelayVarTot = _LcsDelayMeasurementStateOnewayAvDelayVarTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 59),
    _LcsDelayMeasurementStateOnewayAvDelayVarTot_Type()
)
lcsDelayMeasurementStateOnewayAvDelayVarTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayAvDelayVarTot.setStatus("current")
_LcsDelayMeasurementStateOnewayAvDelayVarlastN_Type = DisplayString
_LcsDelayMeasurementStateOnewayAvDelayVarlastN_Object = MibScalar
lcsDelayMeasurementStateOnewayAvDelayVarlastN = _LcsDelayMeasurementStateOnewayAvDelayVarlastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 60),
    _LcsDelayMeasurementStateOnewayAvDelayVarlastN_Type()
)
lcsDelayMeasurementStateOnewayAvDelayVarlastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayAvDelayVarlastN.setStatus("current")
_LcsDelayMeasurementStateOnewayDelayVarMin_Type = DisplayString
_LcsDelayMeasurementStateOnewayDelayVarMin_Object = MibScalar
lcsDelayMeasurementStateOnewayDelayVarMin = _LcsDelayMeasurementStateOnewayDelayVarMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 61),
    _LcsDelayMeasurementStateOnewayDelayVarMin_Type()
)
lcsDelayMeasurementStateOnewayDelayVarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayDelayVarMin.setStatus("current")
_LcsDelayMeasurementStateOnewayDelayVarMax_Type = DisplayString
_LcsDelayMeasurementStateOnewayDelayVarMax_Object = MibScalar
lcsDelayMeasurementStateOnewayDelayVarMax = _LcsDelayMeasurementStateOnewayDelayVarMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 62),
    _LcsDelayMeasurementStateOnewayDelayVarMax_Type()
)
lcsDelayMeasurementStateOnewayDelayVarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayDelayVarMax.setStatus("current")
_LcsDelayMeasurementStateOnewayOverflow_Type = DisplayString
_LcsDelayMeasurementStateOnewayOverflow_Object = MibScalar
lcsDelayMeasurementStateOnewayOverflow = _LcsDelayMeasurementStateOnewayOverflow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 63),
    _LcsDelayMeasurementStateOnewayOverflow_Type()
)
lcsDelayMeasurementStateOnewayOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateOnewayOverflow.setStatus("current")
_LcsDelayMeasurementStateFtoNTx_Type = Integer32
_LcsDelayMeasurementStateFtoNTx_Object = MibScalar
lcsDelayMeasurementStateFtoNTx = _LcsDelayMeasurementStateFtoNTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 64),
    _LcsDelayMeasurementStateFtoNTx_Type()
)
lcsDelayMeasurementStateFtoNTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNTx.setStatus("current")
_LcsDelayMeasurementStateFtoNRx_Type = Integer32
_LcsDelayMeasurementStateFtoNRx_Object = MibScalar
lcsDelayMeasurementStateFtoNRx = _LcsDelayMeasurementStateFtoNRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 65),
    _LcsDelayMeasurementStateFtoNRx_Type()
)
lcsDelayMeasurementStateFtoNRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNRx.setStatus("current")
_LcsDelayMeasurementStateFtoNRxTimeout_Type = Integer32
_LcsDelayMeasurementStateFtoNRxTimeout_Object = MibScalar
lcsDelayMeasurementStateFtoNRxTimeout = _LcsDelayMeasurementStateFtoNRxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 66),
    _LcsDelayMeasurementStateFtoNRxTimeout_Type()
)
lcsDelayMeasurementStateFtoNRxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNRxTimeout.setStatus("current")
_LcsDelayMeasurementStateFtoNRxError_Type = Integer32
_LcsDelayMeasurementStateFtoNRxError_Object = MibScalar
lcsDelayMeasurementStateFtoNRxError = _LcsDelayMeasurementStateFtoNRxError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 67),
    _LcsDelayMeasurementStateFtoNRxError_Type()
)
lcsDelayMeasurementStateFtoNRxError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNRxError.setStatus("current")
_LcsDelayMeasurementStateFtoNAvDelayTot_Type = Integer32
_LcsDelayMeasurementStateFtoNAvDelayTot_Object = MibScalar
lcsDelayMeasurementStateFtoNAvDelayTot = _LcsDelayMeasurementStateFtoNAvDelayTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 68),
    _LcsDelayMeasurementStateFtoNAvDelayTot_Type()
)
lcsDelayMeasurementStateFtoNAvDelayTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNAvDelayTot.setStatus("current")
_LcsDelayMeasurementStateFtoNAvDelaylastN_Type = Integer32
_LcsDelayMeasurementStateFtoNAvDelaylastN_Object = MibScalar
lcsDelayMeasurementStateFtoNAvDelaylastN = _LcsDelayMeasurementStateFtoNAvDelaylastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 69),
    _LcsDelayMeasurementStateFtoNAvDelaylastN_Type()
)
lcsDelayMeasurementStateFtoNAvDelaylastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNAvDelaylastN.setStatus("current")
_LcsDelayMeasurementStateFtoNDelayMin_Type = Integer32
_LcsDelayMeasurementStateFtoNDelayMin_Object = MibScalar
lcsDelayMeasurementStateFtoNDelayMin = _LcsDelayMeasurementStateFtoNDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 70),
    _LcsDelayMeasurementStateFtoNDelayMin_Type()
)
lcsDelayMeasurementStateFtoNDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNDelayMin.setStatus("current")
_LcsDelayMeasurementStateFtoNDelayMax_Type = Integer32
_LcsDelayMeasurementStateFtoNDelayMax_Object = MibScalar
lcsDelayMeasurementStateFtoNDelayMax = _LcsDelayMeasurementStateFtoNDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 71),
    _LcsDelayMeasurementStateFtoNDelayMax_Type()
)
lcsDelayMeasurementStateFtoNDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNDelayMax.setStatus("current")
_LcsDelayMeasurementStateFtoNAvDelayVarTot_Type = Integer32
_LcsDelayMeasurementStateFtoNAvDelayVarTot_Object = MibScalar
lcsDelayMeasurementStateFtoNAvDelayVarTot = _LcsDelayMeasurementStateFtoNAvDelayVarTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 72),
    _LcsDelayMeasurementStateFtoNAvDelayVarTot_Type()
)
lcsDelayMeasurementStateFtoNAvDelayVarTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNAvDelayVarTot.setStatus("current")
_LcsDelayMeasurementStateFtoNAvDelayVarlastN_Type = Integer32
_LcsDelayMeasurementStateFtoNAvDelayVarlastN_Object = MibScalar
lcsDelayMeasurementStateFtoNAvDelayVarlastN = _LcsDelayMeasurementStateFtoNAvDelayVarlastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 73),
    _LcsDelayMeasurementStateFtoNAvDelayVarlastN_Type()
)
lcsDelayMeasurementStateFtoNAvDelayVarlastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNAvDelayVarlastN.setStatus("current")
_LcsDelayMeasurementStateFtoNDelayVarMin_Type = Integer32
_LcsDelayMeasurementStateFtoNDelayVarMin_Object = MibScalar
lcsDelayMeasurementStateFtoNDelayVarMin = _LcsDelayMeasurementStateFtoNDelayVarMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 74),
    _LcsDelayMeasurementStateFtoNDelayVarMin_Type()
)
lcsDelayMeasurementStateFtoNDelayVarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNDelayVarMin.setStatus("current")
_LcsDelayMeasurementStateFtoNDelayVarMax_Type = Integer32
_LcsDelayMeasurementStateFtoNDelayVarMax_Object = MibScalar
lcsDelayMeasurementStateFtoNDelayVarMax = _LcsDelayMeasurementStateFtoNDelayVarMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 75),
    _LcsDelayMeasurementStateFtoNDelayVarMax_Type()
)
lcsDelayMeasurementStateFtoNDelayVarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNDelayVarMax.setStatus("current")
_LcsDelayMeasurementStateFtoNOverflow_Type = Integer32
_LcsDelayMeasurementStateFtoNOverflow_Object = MibScalar
lcsDelayMeasurementStateFtoNOverflow = _LcsDelayMeasurementStateFtoNOverflow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 76),
    _LcsDelayMeasurementStateFtoNOverflow_Type()
)
lcsDelayMeasurementStateFtoNOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateFtoNOverflow.setStatus("current")
_LcsDelayMeasurementStateNtoFTx_Type = Integer32
_LcsDelayMeasurementStateNtoFTx_Object = MibScalar
lcsDelayMeasurementStateNtoFTx = _LcsDelayMeasurementStateNtoFTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 77),
    _LcsDelayMeasurementStateNtoFTx_Type()
)
lcsDelayMeasurementStateNtoFTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFTx.setStatus("current")
_LcsDelayMeasurementStateNtoFRx_Type = Integer32
_LcsDelayMeasurementStateNtoFRx_Object = MibScalar
lcsDelayMeasurementStateNtoFRx = _LcsDelayMeasurementStateNtoFRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 78),
    _LcsDelayMeasurementStateNtoFRx_Type()
)
lcsDelayMeasurementStateNtoFRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFRx.setStatus("current")
_LcsDelayMeasurementStateNtoFRxTimeout_Type = Integer32
_LcsDelayMeasurementStateNtoFRxTimeout_Object = MibScalar
lcsDelayMeasurementStateNtoFRxTimeout = _LcsDelayMeasurementStateNtoFRxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 79),
    _LcsDelayMeasurementStateNtoFRxTimeout_Type()
)
lcsDelayMeasurementStateNtoFRxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFRxTimeout.setStatus("current")
_LcsDelayMeasurementStateNtoFRxError_Type = Integer32
_LcsDelayMeasurementStateNtoFRxError_Object = MibScalar
lcsDelayMeasurementStateNtoFRxError = _LcsDelayMeasurementStateNtoFRxError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 80),
    _LcsDelayMeasurementStateNtoFRxError_Type()
)
lcsDelayMeasurementStateNtoFRxError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFRxError.setStatus("current")
_LcsDelayMeasurementStateNtoFAvDelayTot_Type = Integer32
_LcsDelayMeasurementStateNtoFAvDelayTot_Object = MibScalar
lcsDelayMeasurementStateNtoFAvDelayTot = _LcsDelayMeasurementStateNtoFAvDelayTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 81),
    _LcsDelayMeasurementStateNtoFAvDelayTot_Type()
)
lcsDelayMeasurementStateNtoFAvDelayTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFAvDelayTot.setStatus("current")
_LcsDelayMeasurementStateNtoFAvDelaylastN_Type = Integer32
_LcsDelayMeasurementStateNtoFAvDelaylastN_Object = MibScalar
lcsDelayMeasurementStateNtoFAvDelaylastN = _LcsDelayMeasurementStateNtoFAvDelaylastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 82),
    _LcsDelayMeasurementStateNtoFAvDelaylastN_Type()
)
lcsDelayMeasurementStateNtoFAvDelaylastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFAvDelaylastN.setStatus("current")
_LcsDelayMeasurementStateNtoFDelayMin_Type = Integer32
_LcsDelayMeasurementStateNtoFDelayMin_Object = MibScalar
lcsDelayMeasurementStateNtoFDelayMin = _LcsDelayMeasurementStateNtoFDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 83),
    _LcsDelayMeasurementStateNtoFDelayMin_Type()
)
lcsDelayMeasurementStateNtoFDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFDelayMin.setStatus("current")
_LcsDelayMeasurementStateNtoFDelayMax_Type = Integer32
_LcsDelayMeasurementStateNtoFDelayMax_Object = MibScalar
lcsDelayMeasurementStateNtoFDelayMax = _LcsDelayMeasurementStateNtoFDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 84),
    _LcsDelayMeasurementStateNtoFDelayMax_Type()
)
lcsDelayMeasurementStateNtoFDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFDelayMax.setStatus("current")
_LcsDelayMeasurementStateNtoFAvDelayVarTot_Type = Integer32
_LcsDelayMeasurementStateNtoFAvDelayVarTot_Object = MibScalar
lcsDelayMeasurementStateNtoFAvDelayVarTot = _LcsDelayMeasurementStateNtoFAvDelayVarTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 85),
    _LcsDelayMeasurementStateNtoFAvDelayVarTot_Type()
)
lcsDelayMeasurementStateNtoFAvDelayVarTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFAvDelayVarTot.setStatus("current")
_LcsDelayMeasurementStateNtoFAvDelayVarlastN_Type = Integer32
_LcsDelayMeasurementStateNtoFAvDelayVarlastN_Object = MibScalar
lcsDelayMeasurementStateNtoFAvDelayVarlastN = _LcsDelayMeasurementStateNtoFAvDelayVarlastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 86),
    _LcsDelayMeasurementStateNtoFAvDelayVarlastN_Type()
)
lcsDelayMeasurementStateNtoFAvDelayVarlastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFAvDelayVarlastN.setStatus("current")
_LcsDelayMeasurementStateNtoFDelayVarMin_Type = Integer32
_LcsDelayMeasurementStateNtoFDelayVarMin_Object = MibScalar
lcsDelayMeasurementStateNtoFDelayVarMin = _LcsDelayMeasurementStateNtoFDelayVarMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 87),
    _LcsDelayMeasurementStateNtoFDelayVarMin_Type()
)
lcsDelayMeasurementStateNtoFDelayVarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFDelayVarMin.setStatus("current")
_LcsDelayMeasurementStateNtoFDelayVarMax_Type = Integer32
_LcsDelayMeasurementStateNtoFDelayVarMax_Object = MibScalar
lcsDelayMeasurementStateNtoFDelayVarMax = _LcsDelayMeasurementStateNtoFDelayVarMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 88),
    _LcsDelayMeasurementStateNtoFDelayVarMax_Type()
)
lcsDelayMeasurementStateNtoFDelayVarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFDelayVarMax.setStatus("current")
_LcsDelayMeasurementStateNtoFOverflow_Type = Integer32
_LcsDelayMeasurementStateNtoFOverflow_Object = MibScalar
lcsDelayMeasurementStateNtoFOverflow = _LcsDelayMeasurementStateNtoFOverflow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 89),
    _LcsDelayMeasurementStateNtoFOverflow_Type()
)
lcsDelayMeasurementStateNtoFOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateNtoFOverflow.setStatus("current")
_LcsDelayMeasurementStateTwowayTx_Type = Integer32
_LcsDelayMeasurementStateTwowayTx_Object = MibScalar
lcsDelayMeasurementStateTwowayTx = _LcsDelayMeasurementStateTwowayTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 90),
    _LcsDelayMeasurementStateTwowayTx_Type()
)
lcsDelayMeasurementStateTwowayTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayTx.setStatus("current")
_LcsDelayMeasurementStateTwowayRx_Type = Integer32
_LcsDelayMeasurementStateTwowayRx_Object = MibScalar
lcsDelayMeasurementStateTwowayRx = _LcsDelayMeasurementStateTwowayRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 91),
    _LcsDelayMeasurementStateTwowayRx_Type()
)
lcsDelayMeasurementStateTwowayRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayRx.setStatus("current")
_LcsDelayMeasurementStateTwowayRxTimeout_Type = Integer32
_LcsDelayMeasurementStateTwowayRxTimeout_Object = MibScalar
lcsDelayMeasurementStateTwowayRxTimeout = _LcsDelayMeasurementStateTwowayRxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 92),
    _LcsDelayMeasurementStateTwowayRxTimeout_Type()
)
lcsDelayMeasurementStateTwowayRxTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayRxTimeout.setStatus("current")
_LcsDelayMeasurementStateTwowayRxError_Type = Integer32
_LcsDelayMeasurementStateTwowayRxError_Object = MibScalar
lcsDelayMeasurementStateTwowayRxError = _LcsDelayMeasurementStateTwowayRxError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 93),
    _LcsDelayMeasurementStateTwowayRxError_Type()
)
lcsDelayMeasurementStateTwowayRxError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayRxError.setStatus("current")
_LcsDelayMeasurementStateTwowayAvDelayTot_Type = Integer32
_LcsDelayMeasurementStateTwowayAvDelayTot_Object = MibScalar
lcsDelayMeasurementStateTwowayAvDelayTot = _LcsDelayMeasurementStateTwowayAvDelayTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 94),
    _LcsDelayMeasurementStateTwowayAvDelayTot_Type()
)
lcsDelayMeasurementStateTwowayAvDelayTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayAvDelayTot.setStatus("current")
_LcsDelayMeasurementStateTwowayAvDelaylastN_Type = Integer32
_LcsDelayMeasurementStateTwowayAvDelaylastN_Object = MibScalar
lcsDelayMeasurementStateTwowayAvDelaylastN = _LcsDelayMeasurementStateTwowayAvDelaylastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 95),
    _LcsDelayMeasurementStateTwowayAvDelaylastN_Type()
)
lcsDelayMeasurementStateTwowayAvDelaylastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayAvDelaylastN.setStatus("current")
_LcsDelayMeasurementStateTwowayDelayMin_Type = Integer32
_LcsDelayMeasurementStateTwowayDelayMin_Object = MibScalar
lcsDelayMeasurementStateTwowayDelayMin = _LcsDelayMeasurementStateTwowayDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 96),
    _LcsDelayMeasurementStateTwowayDelayMin_Type()
)
lcsDelayMeasurementStateTwowayDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayDelayMin.setStatus("current")
_LcsDelayMeasurementStateTwowayDelayMax_Type = Integer32
_LcsDelayMeasurementStateTwowayDelayMax_Object = MibScalar
lcsDelayMeasurementStateTwowayDelayMax = _LcsDelayMeasurementStateTwowayDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 97),
    _LcsDelayMeasurementStateTwowayDelayMax_Type()
)
lcsDelayMeasurementStateTwowayDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayDelayMax.setStatus("current")
_LcsDelayMeasurementStateTwowayAvDelayVarTot_Type = Integer32
_LcsDelayMeasurementStateTwowayAvDelayVarTot_Object = MibScalar
lcsDelayMeasurementStateTwowayAvDelayVarTot = _LcsDelayMeasurementStateTwowayAvDelayVarTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 98),
    _LcsDelayMeasurementStateTwowayAvDelayVarTot_Type()
)
lcsDelayMeasurementStateTwowayAvDelayVarTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayAvDelayVarTot.setStatus("current")
_LcsDelayMeasurementStateTwowayAvDelayVarlastN_Type = Integer32
_LcsDelayMeasurementStateTwowayAvDelayVarlastN_Object = MibScalar
lcsDelayMeasurementStateTwowayAvDelayVarlastN = _LcsDelayMeasurementStateTwowayAvDelayVarlastN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 99),
    _LcsDelayMeasurementStateTwowayAvDelayVarlastN_Type()
)
lcsDelayMeasurementStateTwowayAvDelayVarlastN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayAvDelayVarlastN.setStatus("current")
_LcsDelayMeasurementStateTwowayDelayVarMin_Type = Integer32
_LcsDelayMeasurementStateTwowayDelayVarMin_Object = MibScalar
lcsDelayMeasurementStateTwowayDelayVarMin = _LcsDelayMeasurementStateTwowayDelayVarMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 100),
    _LcsDelayMeasurementStateTwowayDelayVarMin_Type()
)
lcsDelayMeasurementStateTwowayDelayVarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayDelayVarMin.setStatus("current")
_LcsDelayMeasurementStateTwowayDelayVarMax_Type = Integer32
_LcsDelayMeasurementStateTwowayDelayVarMax_Object = MibScalar
lcsDelayMeasurementStateTwowayDelayVarMax = _LcsDelayMeasurementStateTwowayDelayVarMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 101),
    _LcsDelayMeasurementStateTwowayDelayVarMax_Type()
)
lcsDelayMeasurementStateTwowayDelayVarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayDelayVarMax.setStatus("current")
_LcsDelayMeasurementStateTwowayOverflow_Type = Integer32
_LcsDelayMeasurementStateTwowayOverflow_Object = MibScalar
lcsDelayMeasurementStateTwowayOverflow = _LcsDelayMeasurementStateTwowayOverflow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 102),
    _LcsDelayMeasurementStateTwowayOverflow_Type()
)
lcsDelayMeasurementStateTwowayOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateTwowayOverflow.setStatus("current")
_LcsDelayMeasurementStateClear_Type = Integer32
_LcsDelayMeasurementStateClear_Object = MibScalar
lcsDelayMeasurementStateClear = _LcsDelayMeasurementStateClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 103),
    _LcsDelayMeasurementStateClear_Type()
)
lcsDelayMeasurementStateClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementStateClear.setStatus("current")
_LcsDelayMeasurementBinsMeasurementBinsforFD_Type = Integer32
_LcsDelayMeasurementBinsMeasurementBinsforFD_Object = MibScalar
lcsDelayMeasurementBinsMeasurementBinsforFD = _LcsDelayMeasurementBinsMeasurementBinsforFD_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 104),
    _LcsDelayMeasurementBinsMeasurementBinsforFD_Type()
)
lcsDelayMeasurementBinsMeasurementBinsforFD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementBinsMeasurementBinsforFD.setStatus("current")
_LcsDelayMeasurementBinsMeasurementBinsforIFDV_Type = Integer32
_LcsDelayMeasurementBinsMeasurementBinsforIFDV_Object = MibScalar
lcsDelayMeasurementBinsMeasurementBinsforIFDV = _LcsDelayMeasurementBinsMeasurementBinsforIFDV_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 105),
    _LcsDelayMeasurementBinsMeasurementBinsforIFDV_Type()
)
lcsDelayMeasurementBinsMeasurementBinsforIFDV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementBinsMeasurementBinsforIFDV.setStatus("current")
_LcsDelayMeasurementBinsMeasurementThreshold_Type = Integer32
_LcsDelayMeasurementBinsMeasurementThreshold_Object = MibScalar
lcsDelayMeasurementBinsMeasurementThreshold = _LcsDelayMeasurementBinsMeasurementThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 15, 106),
    _LcsDelayMeasurementBinsMeasurementThreshold_Type()
)
lcsDelayMeasurementBinsMeasurementThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDelayMeasurementBinsMeasurementThreshold.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDTable_Object = MibTable
lcsPerformanceMonitorDelayMeasurementBinsforFDTable = _LcsPerformanceMonitorDelayMeasurementBinsforFDTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16)
)
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDTable.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDEntry_Object = MibTableRow
lcsPerformanceMonitorDelayMeasurementBinsforFDEntry = _LcsPerformanceMonitorDelayMeasurementBinsforFDEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1)
)
lcsPerformanceMonitorDelayMeasurementBinsforFDEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPerformanceMonitorDelayMeasurementBinsforFDIndex"),
)
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDEntry.setStatus("current")


class _LcsPerformanceMonitorDelayMeasurementBinsforFDIndex_Type(Integer32):
    """Custom type lcsPerformanceMonitorDelayMeasurementBinsforFDIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPerformanceMonitorDelayMeasurementBinsforFDIndex_Type.__name__ = "Integer32"
_LcsPerformanceMonitorDelayMeasurementBinsforFDIndex_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforFDIndex = _LcsPerformanceMonitorDelayMeasurementBinsforFDIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1, 1),
    _LcsPerformanceMonitorDelayMeasurementBinsforFDIndex_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforFDIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDIndex.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDOneway_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforFDOneway_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforFDOneway = _LcsPerformanceMonitorDelayMeasurementBinsforFDOneway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1, 2),
    _LcsPerformanceMonitorDelayMeasurementBinsforFDOneway_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforFDOneway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDOneway.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDFtoN_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforFDFtoN_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforFDFtoN = _LcsPerformanceMonitorDelayMeasurementBinsforFDFtoN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1, 3),
    _LcsPerformanceMonitorDelayMeasurementBinsforFDFtoN_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforFDFtoN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDFtoN.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDNtoF_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforFDNtoF_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforFDNtoF = _LcsPerformanceMonitorDelayMeasurementBinsforFDNtoF_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1, 4),
    _LcsPerformanceMonitorDelayMeasurementBinsforFDNtoF_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforFDNtoF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDNtoF.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforFDTwoway_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforFDTwoway_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforFDTwoway = _LcsPerformanceMonitorDelayMeasurementBinsforFDTwoway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 16, 1, 5),
    _LcsPerformanceMonitorDelayMeasurementBinsforFDTwoway_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforFDTwoway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforFDTwoway.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVTable_Object = MibTable
lcsPerformanceMonitorDelayMeasurementBinsforIFDVTable = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17)
)
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVTable.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry_Object = MibTableRow
lcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1)
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex"),
)
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry.setStatus("current")


class _LcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex_Type(Integer32):
    """Custom type lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex_Type.__name__ = "Integer32"
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1, 1),
    _LcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1, 2),
    _LcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1, 3),
    _LcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1, 4),
    _LcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF.setStatus("current")
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway_Type = Integer32
_LcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway_Object = MibTableColumn
lcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway = _LcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 26, 17, 1, 5),
    _LcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway_Type()
)
lcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway.setStatus("current")
_LcsPTP_ObjectIdentity = ObjectIdentity
lcsPTP = _LcsPTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28)
)
_LcsPTPExternalEnable_Type = Integer32
_LcsPTPExternalEnable_Object = MibScalar
lcsPTPExternalEnable = _LcsPTPExternalEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 1),
    _LcsPTPExternalEnable_Type()
)
lcsPTPExternalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPExternalEnable.setStatus("current")
_LcsPTPAdjustMethod_Type = Integer32
_LcsPTPAdjustMethod_Object = MibScalar
lcsPTPAdjustMethod = _LcsPTPAdjustMethod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 2),
    _LcsPTPAdjustMethod_Type()
)
lcsPTPAdjustMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPAdjustMethod.setStatus("current")
_LcsPTPClockFrequency_Type = Integer32
_LcsPTPClockFrequency_Object = MibScalar
lcsPTPClockFrequency = _LcsPTPClockFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 3),
    _LcsPTPClockFrequency_Type()
)
lcsPTPClockFrequency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockFrequency.setStatus("current")
_LcsPTPClockConfTable_Object = MibTable
lcsPTPClockConfTable = _LcsPTPClockConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5)
)
if mibBuilder.loadTexts:
    lcsPTPClockConfTable.setStatus("current")
_LcsPTPClockConfEntry_Object = MibTableRow
lcsPTPClockConfEntry = _LcsPTPClockConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1)
)
lcsPTPClockConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPTPClockConfIndex"),
)
if mibBuilder.loadTexts:
    lcsPTPClockConfEntry.setStatus("current")


class _LcsPTPClockConfIndex_Type(Integer32):
    """Custom type lcsPTPClockConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPTPClockConfIndex_Type.__name__ = "Integer32"
_LcsPTPClockConfIndex_Object = MibTableColumn
lcsPTPClockConfIndex = _LcsPTPClockConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1, 1),
    _LcsPTPClockConfIndex_Type()
)
lcsPTPClockConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPTPClockConfIndex.setStatus("current")
_LcsPTPClockConfClockInstance_Type = Integer32
_LcsPTPClockConfClockInstance_Object = MibTableColumn
lcsPTPClockConfClockInstance = _LcsPTPClockConfClockInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1, 2),
    _LcsPTPClockConfClockInstance_Type()
)
lcsPTPClockConfClockInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPTPClockConfClockInstance.setStatus("current")
_LcsPTPClockConfDeviceType_Type = Integer32
_LcsPTPClockConfDeviceType_Object = MibTableColumn
lcsPTPClockConfDeviceType = _LcsPTPClockConfDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1, 3),
    _LcsPTPClockConfDeviceType_Type()
)
lcsPTPClockConfDeviceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPTPClockConfDeviceType.setStatus("current")
_LcsPTPClockConfProfile_Type = Integer32
_LcsPTPClockConfProfile_Object = MibTableColumn
lcsPTPClockConfProfile = _LcsPTPClockConfProfile_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1, 4),
    _LcsPTPClockConfProfile_Type()
)
lcsPTPClockConfProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPTPClockConfProfile.setStatus("current")
_LcsPTPClockConfRowStatus_Type = RowStatus
_LcsPTPClockConfRowStatus_Object = MibTableColumn
lcsPTPClockConfRowStatus = _LcsPTPClockConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 5, 1, 5),
    _LcsPTPClockConfRowStatus_Type()
)
lcsPTPClockConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsPTPClockConfRowStatus.setStatus("current")
_LcsPTPClockInstance_Type = Integer32
_LcsPTPClockInstance_Object = MibScalar
lcsPTPClockInstance = _LcsPTPClockInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 6),
    _LcsPTPClockInstance_Type()
)
lcsPTPClockInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockInstance.setStatus("current")
_LcsPTPClockConfAndStatus_ObjectIdentity = ObjectIdentity
lcsPTPClockConfAndStatus = _LcsPTPClockConfAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7)
)
_LcsPTPClockConfEntryClockInstance_Type = Integer32
_LcsPTPClockConfEntryClockInstance_Object = MibScalar
lcsPTPClockConfEntryClockInstance = _LcsPTPClockConfEntryClockInstance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 2),
    _LcsPTPClockConfEntryClockInstance_Type()
)
lcsPTPClockConfEntryClockInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockInstance.setStatus("current")
_LcsPTPClockConfEntryDeviceType_Type = DisplayString
_LcsPTPClockConfEntryDeviceType_Object = MibScalar
lcsPTPClockConfEntryDeviceType = _LcsPTPClockConfEntryDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 3),
    _LcsPTPClockConfEntryDeviceType_Type()
)
lcsPTPClockConfEntryDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryDeviceType.setStatus("current")
_LcsPTPClockConfEntryProfile_Type = DisplayString
_LcsPTPClockConfEntryProfile_Object = MibScalar
lcsPTPClockConfEntryProfile = _LcsPTPClockConfEntryProfile_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 4),
    _LcsPTPClockConfEntryProfile_Type()
)
lcsPTPClockConfEntryProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryProfile.setStatus("current")
_LcsPTPClockConfEntryApplyProfileDefaults_Type = Integer32
_LcsPTPClockConfEntryApplyProfileDefaults_Object = MibScalar
lcsPTPClockConfEntryApplyProfileDefaults = _LcsPTPClockConfEntryApplyProfileDefaults_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 5),
    _LcsPTPClockConfEntryApplyProfileDefaults_Type()
)
lcsPTPClockConfEntryApplyProfileDefaults.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryApplyProfileDefaults.setStatus("current")
_LcsPTPClockConfEntryPTPTime_Type = DisplayString
_LcsPTPClockConfEntryPTPTime_Object = MibScalar
lcsPTPClockConfEntryPTPTime = _LcsPTPClockConfEntryPTPTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 6),
    _LcsPTPClockConfEntryPTPTime_Type()
)
lcsPTPClockConfEntryPTPTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPTPTime.setStatus("current")
_LcsPTPClockConfEntryClockAdjustmentMethod_Type = DisplayString
_LcsPTPClockConfEntryClockAdjustmentMethod_Object = MibScalar
lcsPTPClockConfEntryClockAdjustmentMethod = _LcsPTPClockConfEntryClockAdjustmentMethod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 7),
    _LcsPTPClockConfEntryClockAdjustmentMethod_Type()
)
lcsPTPClockConfEntryClockAdjustmentMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockAdjustmentMethod.setStatus("current")
_LcsPTPClockConfEntrySynchronizeToSystemClock_Type = Integer32
_LcsPTPClockConfEntrySynchronizeToSystemClock_Object = MibScalar
lcsPTPClockConfEntrySynchronizeToSystemClock = _LcsPTPClockConfEntrySynchronizeToSystemClock_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 8),
    _LcsPTPClockConfEntrySynchronizeToSystemClock_Type()
)
lcsPTPClockConfEntrySynchronizeToSystemClock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntrySynchronizeToSystemClock.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetstpRm_Type = Integer32
_LcsPTPClockConfEntryClockCurrentDataSetstpRm_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetstpRm = _LcsPTPClockConfEntryClockCurrentDataSetstpRm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 9),
    _LcsPTPClockConfEntryClockCurrentDataSetstpRm_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetstpRm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetstpRm.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster_Type = DisplayString
_LcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster = _LcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 10),
    _LcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay_Type = DisplayString
_LcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay = _LcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 11),
    _LcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetSlavePort_Type = Integer32
_LcsPTPClockConfEntryClockCurrentDataSetSlavePort_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetSlavePort = _LcsPTPClockConfEntryClockCurrentDataSetSlavePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 12),
    _LcsPTPClockConfEntryClockCurrentDataSetSlavePort_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetSlavePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetSlavePort.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetSlaveState_Type = DisplayString
_LcsPTPClockConfEntryClockCurrentDataSetSlaveState_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetSlaveState = _LcsPTPClockConfEntryClockCurrentDataSetSlaveState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 13),
    _LcsPTPClockConfEntryClockCurrentDataSetSlaveState_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetSlaveState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetSlaveState.setStatus("current")
_LcsPTPClockConfEntryClockCurrentDataSetHoldover_Type = DisplayString
_LcsPTPClockConfEntryClockCurrentDataSetHoldover_Object = MibScalar
lcsPTPClockConfEntryClockCurrentDataSetHoldover = _LcsPTPClockConfEntryClockCurrentDataSetHoldover_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 14),
    _LcsPTPClockConfEntryClockCurrentDataSetHoldover_Type()
)
lcsPTPClockConfEntryClockCurrentDataSetHoldover.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockCurrentDataSetHoldover.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetParentPortID_Type = DisplayString
_LcsPTPClockConfEntryClockParentDataSetParentPortID_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetParentPortID = _LcsPTPClockConfEntryClockParentDataSetParentPortID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 15),
    _LcsPTPClockConfEntryClockParentDataSetParentPortID_Type()
)
lcsPTPClockConfEntryClockParentDataSetParentPortID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetParentPortID.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetPort_Type = Integer32
_LcsPTPClockConfEntryClockParentDataSetPort_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetPort = _LcsPTPClockConfEntryClockParentDataSetPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 16),
    _LcsPTPClockConfEntryClockParentDataSetPort_Type()
)
lcsPTPClockConfEntryClockParentDataSetPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetPort.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetPStat_Type = DisplayString
_LcsPTPClockConfEntryClockParentDataSetPStat_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetPStat = _LcsPTPClockConfEntryClockParentDataSetPStat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 17),
    _LcsPTPClockConfEntryClockParentDataSetPStat_Type()
)
lcsPTPClockConfEntryClockParentDataSetPStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetPStat.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetVar_Type = Integer32
_LcsPTPClockConfEntryClockParentDataSetVar_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetVar = _LcsPTPClockConfEntryClockParentDataSetVar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 18),
    _LcsPTPClockConfEntryClockParentDataSetVar_Type()
)
lcsPTPClockConfEntryClockParentDataSetVar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetVar.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetRate_Type = Integer32
_LcsPTPClockConfEntryClockParentDataSetRate_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetRate = _LcsPTPClockConfEntryClockParentDataSetRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 19),
    _LcsPTPClockConfEntryClockParentDataSetRate_Type()
)
lcsPTPClockConfEntryClockParentDataSetRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetRate.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetGrandMasterID_Type = DisplayString
_LcsPTPClockConfEntryClockParentDataSetGrandMasterID_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetGrandMasterID = _LcsPTPClockConfEntryClockParentDataSetGrandMasterID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 20),
    _LcsPTPClockConfEntryClockParentDataSetGrandMasterID_Type()
)
lcsPTPClockConfEntryClockParentDataSetGrandMasterID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetGrandMasterID.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality_Type = DisplayString
_LcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality = _LcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 21),
    _LcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality_Type()
)
lcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetPri1_Type = Integer32
_LcsPTPClockConfEntryClockParentDataSetPri1_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetPri1 = _LcsPTPClockConfEntryClockParentDataSetPri1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 22),
    _LcsPTPClockConfEntryClockParentDataSetPri1_Type()
)
lcsPTPClockConfEntryClockParentDataSetPri1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetPri1.setStatus("current")
_LcsPTPClockConfEntryClockParentDataSetPri2_Type = Integer32
_LcsPTPClockConfEntryClockParentDataSetPri2_Object = MibScalar
lcsPTPClockConfEntryClockParentDataSetPri2 = _LcsPTPClockConfEntryClockParentDataSetPri2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 23),
    _LcsPTPClockConfEntryClockParentDataSetPri2_Type()
)
lcsPTPClockConfEntryClockParentDataSetPri2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockParentDataSetPri2.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetClockID_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetClockID_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetClockID = _LcsPTPClockConfEntryClockDefaultDataSetClockID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 24),
    _LcsPTPClockConfEntryClockDefaultDataSetClockID_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetClockID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetClockID.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetDeviceType_Type = DisplayString
_LcsPTPClockConfEntryClockDefaultDataSetDeviceType_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetDeviceType = _LcsPTPClockConfEntryClockDefaultDataSetDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 25),
    _LcsPTPClockConfEntryClockDefaultDataSetDeviceType_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetDeviceType.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSet2StepFlag_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSet2StepFlag_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSet2StepFlag = _LcsPTPClockConfEntryClockDefaultDataSet2StepFlag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 26),
    _LcsPTPClockConfEntryClockDefaultDataSet2StepFlag_Type()
)
lcsPTPClockConfEntryClockDefaultDataSet2StepFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSet2StepFlag.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetPorts_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetPorts_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetPorts = _LcsPTPClockConfEntryClockDefaultDataSetPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 27),
    _LcsPTPClockConfEntryClockDefaultDataSetPorts_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetPorts.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetClockIdentity_Type = DisplayString
_LcsPTPClockConfEntryClockDefaultDataSetClockIdentity_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetClockIdentity = _LcsPTPClockConfEntryClockDefaultDataSetClockIdentity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 28),
    _LcsPTPClockConfEntryClockDefaultDataSetClockIdentity_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetClockIdentity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetClockIdentity.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetDom_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetDom_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetDom = _LcsPTPClockConfEntryClockDefaultDataSetDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 29),
    _LcsPTPClockConfEntryClockDefaultDataSetDom_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetDom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetDom.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetClockQuality_Type = DisplayString
_LcsPTPClockConfEntryClockDefaultDataSetClockQuality_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetClockQuality = _LcsPTPClockConfEntryClockDefaultDataSetClockQuality_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 30),
    _LcsPTPClockConfEntryClockDefaultDataSetClockQuality_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetClockQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetClockQuality.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetPri1_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetPri1_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetPri1 = _LcsPTPClockConfEntryClockDefaultDataSetPri1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 31),
    _LcsPTPClockConfEntryClockDefaultDataSetPri1_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetPri1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetPri1.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetPri2_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetPri2_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetPri2 = _LcsPTPClockConfEntryClockDefaultDataSetPri2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 32),
    _LcsPTPClockConfEntryClockDefaultDataSetPri2_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetPri2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetPri2.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetProtocol_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetProtocol_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetProtocol = _LcsPTPClockConfEntryClockDefaultDataSetProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 33),
    _LcsPTPClockConfEntryClockDefaultDataSetProtocol_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetProtocol.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetOneWay_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetOneWay_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetOneWay = _LcsPTPClockConfEntryClockDefaultDataSetOneWay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 34),
    _LcsPTPClockConfEntryClockDefaultDataSetOneWay_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetOneWay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetOneWay.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable = _LcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 35),
    _LcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetVID_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetVID_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetVID = _LcsPTPClockConfEntryClockDefaultDataSetVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 36),
    _LcsPTPClockConfEntryClockDefaultDataSetVID_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetVID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetVID.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetPCP_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetPCP_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetPCP = _LcsPTPClockConfEntryClockDefaultDataSetPCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 37),
    _LcsPTPClockConfEntryClockDefaultDataSetPCP_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetPCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetPCP.setStatus("current")
_LcsPTPClockConfEntryClockDefaultDataSetDSCP_Type = Integer32
_LcsPTPClockConfEntryClockDefaultDataSetDSCP_Object = MibScalar
lcsPTPClockConfEntryClockDefaultDataSetDSCP = _LcsPTPClockConfEntryClockDefaultDataSetDSCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 38),
    _LcsPTPClockConfEntryClockDefaultDataSetDSCP_Type()
)
lcsPTPClockConfEntryClockDefaultDataSetDSCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockDefaultDataSetDSCP.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset = _LcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 39),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetValid_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetValid_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetValid = _LcsPTPClockConfEntryClockTimePropertiesDataSetValid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 40),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetValid_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetValid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetValid.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetLeap59_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetLeap59_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetLeap59 = _LcsPTPClockConfEntryClockTimePropertiesDataSetLeap59_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 41),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetLeap59_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetLeap59.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetLeap59.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetLeap61_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetLeap61_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetLeap61 = _LcsPTPClockConfEntryClockTimePropertiesDataSetLeap61_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 42),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetLeap61_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetLeap61.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetLeap61.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac = _LcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 43),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac = _LcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 44),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale = _LcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 45),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale.setStatus("current")
_LcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource_Type = Integer32
_LcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource_Object = MibScalar
lcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource = _LcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 46),
    _LcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource_Type()
)
lcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource.setStatus("current")
_LcsPTPClockConfEntryFilterParametersFilterType_Type = Integer32
_LcsPTPClockConfEntryFilterParametersFilterType_Object = MibScalar
lcsPTPClockConfEntryFilterParametersFilterType = _LcsPTPClockConfEntryFilterParametersFilterType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 47),
    _LcsPTPClockConfEntryFilterParametersFilterType_Type()
)
lcsPTPClockConfEntryFilterParametersFilterType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryFilterParametersFilterType.setStatus("current")
_LcsPTPClockConfEntryFilterParametersDelayFilter_Type = Integer32
_LcsPTPClockConfEntryFilterParametersDelayFilter_Object = MibScalar
lcsPTPClockConfEntryFilterParametersDelayFilter = _LcsPTPClockConfEntryFilterParametersDelayFilter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 48),
    _LcsPTPClockConfEntryFilterParametersDelayFilter_Type()
)
lcsPTPClockConfEntryFilterParametersDelayFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryFilterParametersDelayFilter.setStatus("current")
_LcsPTPClockConfEntryFilterParametersPeriod_Type = Integer32
_LcsPTPClockConfEntryFilterParametersPeriod_Object = MibScalar
lcsPTPClockConfEntryFilterParametersPeriod = _LcsPTPClockConfEntryFilterParametersPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 49),
    _LcsPTPClockConfEntryFilterParametersPeriod_Type()
)
lcsPTPClockConfEntryFilterParametersPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryFilterParametersPeriod.setStatus("current")
_LcsPTPClockConfEntryFilterParametersDist_Type = Integer32
_LcsPTPClockConfEntryFilterParametersDist_Object = MibScalar
lcsPTPClockConfEntryFilterParametersDist = _LcsPTPClockConfEntryFilterParametersDist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 50),
    _LcsPTPClockConfEntryFilterParametersDist_Type()
)
lcsPTPClockConfEntryFilterParametersDist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryFilterParametersDist.setStatus("current")
_LcsPTPClockConfEntryServoParametersDisplay_Type = Integer32
_LcsPTPClockConfEntryServoParametersDisplay_Object = MibScalar
lcsPTPClockConfEntryServoParametersDisplay = _LcsPTPClockConfEntryServoParametersDisplay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 51),
    _LcsPTPClockConfEntryServoParametersDisplay_Type()
)
lcsPTPClockConfEntryServoParametersDisplay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersDisplay.setStatus("current")
_LcsPTPClockConfEntryServoParametersPEnable_Type = Integer32
_LcsPTPClockConfEntryServoParametersPEnable_Object = MibScalar
lcsPTPClockConfEntryServoParametersPEnable = _LcsPTPClockConfEntryServoParametersPEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 52),
    _LcsPTPClockConfEntryServoParametersPEnable_Type()
)
lcsPTPClockConfEntryServoParametersPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersPEnable.setStatus("current")
_LcsPTPClockConfEntryServoParametersIEnable_Type = Integer32
_LcsPTPClockConfEntryServoParametersIEnable_Object = MibScalar
lcsPTPClockConfEntryServoParametersIEnable = _LcsPTPClockConfEntryServoParametersIEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 53),
    _LcsPTPClockConfEntryServoParametersIEnable_Type()
)
lcsPTPClockConfEntryServoParametersIEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersIEnable.setStatus("current")
_LcsPTPClockConfEntryServoParametersDEnable_Type = Integer32
_LcsPTPClockConfEntryServoParametersDEnable_Object = MibScalar
lcsPTPClockConfEntryServoParametersDEnable = _LcsPTPClockConfEntryServoParametersDEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 54),
    _LcsPTPClockConfEntryServoParametersDEnable_Type()
)
lcsPTPClockConfEntryServoParametersDEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersDEnable.setStatus("current")
_LcsPTPClockConfEntryServoParametersPConstant_Type = Integer32
_LcsPTPClockConfEntryServoParametersPConstant_Object = MibScalar
lcsPTPClockConfEntryServoParametersPConstant = _LcsPTPClockConfEntryServoParametersPConstant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 55),
    _LcsPTPClockConfEntryServoParametersPConstant_Type()
)
lcsPTPClockConfEntryServoParametersPConstant.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersPConstant.setStatus("current")
_LcsPTPClockConfEntryServoParametersIConstant_Type = Integer32
_LcsPTPClockConfEntryServoParametersIConstant_Object = MibScalar
lcsPTPClockConfEntryServoParametersIConstant = _LcsPTPClockConfEntryServoParametersIConstant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 56),
    _LcsPTPClockConfEntryServoParametersIConstant_Type()
)
lcsPTPClockConfEntryServoParametersIConstant.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersIConstant.setStatus("current")
_LcsPTPClockConfEntryServoParametersDConstant_Type = Integer32
_LcsPTPClockConfEntryServoParametersDConstant_Object = MibScalar
lcsPTPClockConfEntryServoParametersDConstant = _LcsPTPClockConfEntryServoParametersDConstant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 7, 57),
    _LcsPTPClockConfEntryServoParametersDConstant_Type()
)
lcsPTPClockConfEntryServoParametersDConstant.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryServoParametersDConstant.setStatus("current")
_LcsPTPClockPortDataSetConfTable_Object = MibTable
lcsPTPClockPortDataSetConfTable = _LcsPTPClockPortDataSetConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8)
)
if mibBuilder.loadTexts:
    lcsPTPClockPortDataSetConfTable.setStatus("current")
_LcsPTPClockPortDataSetConfEntry_Object = MibTableRow
lcsPTPClockPortDataSetConfEntry = _LcsPTPClockPortDataSetConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1)
)
lcsPTPClockPortDataSetConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPTPClockPortDataSetConfPort"),
)
if mibBuilder.loadTexts:
    lcsPTPClockPortDataSetConfEntry.setStatus("current")


class _LcsPTPClockPortDataSetConfPort_Type(Integer32):
    """Custom type lcsPTPClockPortDataSetConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPTPClockPortDataSetConfPort_Type.__name__ = "Integer32"
_LcsPTPClockPortDataSetConfPort_Object = MibTableColumn
lcsPTPClockPortDataSetConfPort = _LcsPTPClockPortDataSetConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 1),
    _LcsPTPClockPortDataSetConfPort_Type()
)
lcsPTPClockPortDataSetConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPTPClockPortDataSetConfPort.setStatus("current")
_LcsPTPClockConfEntryPortConfEnable_Type = Integer32
_LcsPTPClockConfEntryPortConfEnable_Object = MibTableColumn
lcsPTPClockConfEntryPortConfEnable = _LcsPTPClockConfEntryPortConfEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 2),
    _LcsPTPClockConfEntryPortConfEnable_Type()
)
lcsPTPClockConfEntryPortConfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfEnable.setStatus("current")
_LcsPTPClockConfEntryPortConfStat_Type = DisplayString
_LcsPTPClockConfEntryPortConfStat_Object = MibTableColumn
lcsPTPClockConfEntryPortConfStat = _LcsPTPClockConfEntryPortConfStat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 3),
    _LcsPTPClockConfEntryPortConfStat_Type()
)
lcsPTPClockConfEntryPortConfStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfStat.setStatus("current")
_LcsPTPClockConfEntryPortConfMDR_Type = Integer32
_LcsPTPClockConfEntryPortConfMDR_Object = MibTableColumn
lcsPTPClockConfEntryPortConfMDR = _LcsPTPClockConfEntryPortConfMDR_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 4),
    _LcsPTPClockConfEntryPortConfMDR_Type()
)
lcsPTPClockConfEntryPortConfMDR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfMDR.setStatus("current")
_LcsPTPClockConfEntryPortConfPeerMeanPathDel_Type = DisplayString
_LcsPTPClockConfEntryPortConfPeerMeanPathDel_Object = MibTableColumn
lcsPTPClockConfEntryPortConfPeerMeanPathDel = _LcsPTPClockConfEntryPortConfPeerMeanPathDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 5),
    _LcsPTPClockConfEntryPortConfPeerMeanPathDel_Type()
)
lcsPTPClockConfEntryPortConfPeerMeanPathDel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfPeerMeanPathDel.setStatus("current")
_LcsPTPClockConfEntryPortConfAnv_Type = Integer32
_LcsPTPClockConfEntryPortConfAnv_Object = MibTableColumn
lcsPTPClockConfEntryPortConfAnv = _LcsPTPClockConfEntryPortConfAnv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 6),
    _LcsPTPClockConfEntryPortConfAnv_Type()
)
lcsPTPClockConfEntryPortConfAnv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfAnv.setStatus("current")
_LcsPTPClockConfEntryPortConfATo_Type = Integer32
_LcsPTPClockConfEntryPortConfATo_Object = MibTableColumn
lcsPTPClockConfEntryPortConfATo = _LcsPTPClockConfEntryPortConfATo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 7),
    _LcsPTPClockConfEntryPortConfATo_Type()
)
lcsPTPClockConfEntryPortConfATo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfATo.setStatus("current")
_LcsPTPClockConfEntryPortConfSyv_Type = Integer32
_LcsPTPClockConfEntryPortConfSyv_Object = MibTableColumn
lcsPTPClockConfEntryPortConfSyv = _LcsPTPClockConfEntryPortConfSyv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 8),
    _LcsPTPClockConfEntryPortConfSyv_Type()
)
lcsPTPClockConfEntryPortConfSyv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfSyv.setStatus("current")
_LcsPTPClockConfEntryPortConfDlm_Type = Integer32
_LcsPTPClockConfEntryPortConfDlm_Object = MibTableColumn
lcsPTPClockConfEntryPortConfDlm = _LcsPTPClockConfEntryPortConfDlm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 9),
    _LcsPTPClockConfEntryPortConfDlm_Type()
)
lcsPTPClockConfEntryPortConfDlm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfDlm.setStatus("current")
_LcsPTPClockConfEntryPortConfMPR_Type = Integer32
_LcsPTPClockConfEntryPortConfMPR_Object = MibTableColumn
lcsPTPClockConfEntryPortConfMPR = _LcsPTPClockConfEntryPortConfMPR_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 10),
    _LcsPTPClockConfEntryPortConfMPR_Type()
)
lcsPTPClockConfEntryPortConfMPR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfMPR.setStatus("current")
_LcsPTPClockConfEntryPortConfDelayAsymmetry_Type = Integer32
_LcsPTPClockConfEntryPortConfDelayAsymmetry_Object = MibTableColumn
lcsPTPClockConfEntryPortConfDelayAsymmetry = _LcsPTPClockConfEntryPortConfDelayAsymmetry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 11),
    _LcsPTPClockConfEntryPortConfDelayAsymmetry_Type()
)
lcsPTPClockConfEntryPortConfDelayAsymmetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfDelayAsymmetry.setStatus("current")
_LcsPTPClockConfEntryPortConfIngressLatency_Type = Integer32
_LcsPTPClockConfEntryPortConfIngressLatency_Object = MibTableColumn
lcsPTPClockConfEntryPortConfIngressLatency = _LcsPTPClockConfEntryPortConfIngressLatency_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 12),
    _LcsPTPClockConfEntryPortConfIngressLatency_Type()
)
lcsPTPClockConfEntryPortConfIngressLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfIngressLatency.setStatus("current")
_LcsPTPClockConfEntryPortConfEgressLatency_Type = Integer32
_LcsPTPClockConfEntryPortConfEgressLatency_Object = MibTableColumn
lcsPTPClockConfEntryPortConfEgressLatency = _LcsPTPClockConfEntryPortConfEgressLatency_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 13),
    _LcsPTPClockConfEntryPortConfEgressLatency_Type()
)
lcsPTPClockConfEntryPortConfEgressLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfEgressLatency.setStatus("current")
_LcsPTPClockConfEntryPortConfVersion_Type = Integer32
_LcsPTPClockConfEntryPortConfVersion_Object = MibTableColumn
lcsPTPClockConfEntryPortConfVersion = _LcsPTPClockConfEntryPortConfVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 8, 1, 14),
    _LcsPTPClockConfEntryPortConfVersion_Type()
)
lcsPTPClockConfEntryPortConfVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryPortConfVersion.setStatus("current")
_LcsPTPClockUnicastSlaveConfTable_Object = MibTable
lcsPTPClockUnicastSlaveConfTable = _LcsPTPClockUnicastSlaveConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9)
)
if mibBuilder.loadTexts:
    lcsPTPClockUnicastSlaveConfTable.setStatus("current")
_LcsPTPClockUnicastSlaveConfEntry_Object = MibTableRow
lcsPTPClockUnicastSlaveConfEntry = _LcsPTPClockUnicastSlaveConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1)
)
lcsPTPClockUnicastSlaveConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPTPClockConfEntryUnicastSlaveConfIndex"),
)
if mibBuilder.loadTexts:
    lcsPTPClockUnicastSlaveConfEntry.setStatus("current")


class _LcsPTPClockConfEntryUnicastSlaveConfIndex_Type(Integer32):
    """Custom type lcsPTPClockConfEntryUnicastSlaveConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPTPClockConfEntryUnicastSlaveConfIndex_Type.__name__ = "Integer32"
_LcsPTPClockConfEntryUnicastSlaveConfIndex_Object = MibTableColumn
lcsPTPClockConfEntryUnicastSlaveConfIndex = _LcsPTPClockConfEntryUnicastSlaveConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1, 1),
    _LcsPTPClockConfEntryUnicastSlaveConfIndex_Type()
)
lcsPTPClockConfEntryUnicastSlaveConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryUnicastSlaveConfIndex.setStatus("current")
_LcsPTPClockConfEntryUnicastSlaveConfDuration_Type = Integer32
_LcsPTPClockConfEntryUnicastSlaveConfDuration_Object = MibTableColumn
lcsPTPClockConfEntryUnicastSlaveConfDuration = _LcsPTPClockConfEntryUnicastSlaveConfDuration_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1, 2),
    _LcsPTPClockConfEntryUnicastSlaveConfDuration_Type()
)
lcsPTPClockConfEntryUnicastSlaveConfDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryUnicastSlaveConfDuration.setStatus("current")
_LcsPTPClockConfEntryUnicastSlaveConfIPAddress_Type = IpAddress
_LcsPTPClockConfEntryUnicastSlaveConfIPAddress_Object = MibTableColumn
lcsPTPClockConfEntryUnicastSlaveConfIPAddress = _LcsPTPClockConfEntryUnicastSlaveConfIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1, 3),
    _LcsPTPClockConfEntryUnicastSlaveConfIPAddress_Type()
)
lcsPTPClockConfEntryUnicastSlaveConfIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryUnicastSlaveConfIPAddress.setStatus("current")
_LcsPTPClockConfEntryUnicastSlaveConfGrant_Type = Integer32
_LcsPTPClockConfEntryUnicastSlaveConfGrant_Object = MibTableColumn
lcsPTPClockConfEntryUnicastSlaveConfGrant = _LcsPTPClockConfEntryUnicastSlaveConfGrant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1, 4),
    _LcsPTPClockConfEntryUnicastSlaveConfGrant_Type()
)
lcsPTPClockConfEntryUnicastSlaveConfGrant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryUnicastSlaveConfGrant.setStatus("current")
_LcsPTPClockConfEntryUnicastSlaveConfCommState_Type = DisplayString
_LcsPTPClockConfEntryUnicastSlaveConfCommState_Object = MibTableColumn
lcsPTPClockConfEntryUnicastSlaveConfCommState = _LcsPTPClockConfEntryUnicastSlaveConfCommState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 28, 9, 1, 5),
    _LcsPTPClockConfEntryUnicastSlaveConfCommState_Type()
)
lcsPTPClockConfEntryUnicastSlaveConfCommState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPTPClockConfEntryUnicastSlaveConfCommState.setStatus("current")
_LcsETHLINKOAM_ObjectIdentity = ObjectIdentity
lcsETHLINKOAM = _LcsETHLINKOAM_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29)
)
_LcsEthLinkOAMPortConfTable_Object = MibTable
lcsEthLinkOAMPortConfTable = _LcsEthLinkOAMPortConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1)
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfTable.setStatus("current")
_LcsEthLinkOAMPortConfEntry_Object = MibTableRow
lcsEthLinkOAMPortConfEntry = _LcsEthLinkOAMPortConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1)
)
lcsEthLinkOAMPortConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsEthLinkOAMPortConfIndex"),
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfEntry.setStatus("current")


class _LcsEthLinkOAMPortConfIndex_Type(Integer32):
    """Custom type lcsEthLinkOAMPortConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsEthLinkOAMPortConfIndex_Type.__name__ = "Integer32"
_LcsEthLinkOAMPortConfIndex_Object = MibTableColumn
lcsEthLinkOAMPortConfIndex = _LcsEthLinkOAMPortConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 1),
    _LcsEthLinkOAMPortConfIndex_Type()
)
lcsEthLinkOAMPortConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfIndex.setStatus("current")
_LcsEthLinkOAMPortConfOAMEnable_Type = Integer32
_LcsEthLinkOAMPortConfOAMEnable_Object = MibTableColumn
lcsEthLinkOAMPortConfOAMEnable = _LcsEthLinkOAMPortConfOAMEnable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 2),
    _LcsEthLinkOAMPortConfOAMEnable_Type()
)
lcsEthLinkOAMPortConfOAMEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfOAMEnable.setStatus("current")
_LcsEthLinkOAMPortConfOAMMode_Type = Integer32
_LcsEthLinkOAMPortConfOAMMode_Object = MibTableColumn
lcsEthLinkOAMPortConfOAMMode = _LcsEthLinkOAMPortConfOAMMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 3),
    _LcsEthLinkOAMPortConfOAMMode_Type()
)
lcsEthLinkOAMPortConfOAMMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfOAMMode.setStatus("current")
_LcsEthLinkOAMPortConfLoopbackSupport_Type = Integer32
_LcsEthLinkOAMPortConfLoopbackSupport_Object = MibTableColumn
lcsEthLinkOAMPortConfLoopbackSupport = _LcsEthLinkOAMPortConfLoopbackSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 4),
    _LcsEthLinkOAMPortConfLoopbackSupport_Type()
)
lcsEthLinkOAMPortConfLoopbackSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfLoopbackSupport.setStatus("current")
_LcsEthLinkOAMPortConfLinkMonitorSupport_Type = Integer32
_LcsEthLinkOAMPortConfLinkMonitorSupport_Object = MibTableColumn
lcsEthLinkOAMPortConfLinkMonitorSupport = _LcsEthLinkOAMPortConfLinkMonitorSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 5),
    _LcsEthLinkOAMPortConfLinkMonitorSupport_Type()
)
lcsEthLinkOAMPortConfLinkMonitorSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfLinkMonitorSupport.setStatus("current")
_LcsEthLinkOAMPortConfMIBRetrievalSupport_Type = Integer32
_LcsEthLinkOAMPortConfMIBRetrievalSupport_Object = MibTableColumn
lcsEthLinkOAMPortConfMIBRetrievalSupport = _LcsEthLinkOAMPortConfMIBRetrievalSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 6),
    _LcsEthLinkOAMPortConfMIBRetrievalSupport_Type()
)
lcsEthLinkOAMPortConfMIBRetrievalSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfMIBRetrievalSupport.setStatus("current")
_LcsEthLinkOAMPortConfLoopbackOperation_Type = Integer32
_LcsEthLinkOAMPortConfLoopbackOperation_Object = MibTableColumn
lcsEthLinkOAMPortConfLoopbackOperation = _LcsEthLinkOAMPortConfLoopbackOperation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 1, 1, 7),
    _LcsEthLinkOAMPortConfLoopbackOperation_Type()
)
lcsEthLinkOAMPortConfLoopbackOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortConfLoopbackOperation.setStatus("current")
_LcsEthLinkOAMPortDetailStatusTable_Object = MibTable
lcsEthLinkOAMPortDetailStatusTable = _LcsEthLinkOAMPortDetailStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2)
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDetailStatusTable.setStatus("current")
_LcsEthLinkOAMPortDetailStatusEntry_Object = MibTableRow
lcsEthLinkOAMPortDetailStatusEntry = _LcsEthLinkOAMPortDetailStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1)
)
lcsEthLinkOAMPortDetailStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsEthLinkOAMPortDetailStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDetailStatusEntry.setStatus("current")


class _LcsEthLinkOAMPortDetailStatusIndex_Type(Integer32):
    """Custom type lcsEthLinkOAMPortDetailStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsEthLinkOAMPortDetailStatusIndex_Type.__name__ = "Integer32"
_LcsEthLinkOAMPortDetailStatusIndex_Object = MibTableColumn
lcsEthLinkOAMPortDetailStatusIndex = _LcsEthLinkOAMPortDetailStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 1),
    _LcsEthLinkOAMPortDetailStatusIndex_Type()
)
lcsEthLinkOAMPortDetailStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDetailStatusIndex.setStatus("current")
_LcsEthLinkOAMPortPDUPermission_Type = DisplayString
_LcsEthLinkOAMPortPDUPermission_Object = MibTableColumn
lcsEthLinkOAMPortPDUPermission = _LcsEthLinkOAMPortPDUPermission_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 2),
    _LcsEthLinkOAMPortPDUPermission_Type()
)
lcsEthLinkOAMPortPDUPermission.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPDUPermission.setStatus("current")
_LcsEthLinkOAMPortDiscoveryState_Type = DisplayString
_LcsEthLinkOAMPortDiscoveryState_Object = MibTableColumn
lcsEthLinkOAMPortDiscoveryState = _LcsEthLinkOAMPortDiscoveryState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 3),
    _LcsEthLinkOAMPortDiscoveryState_Type()
)
lcsEthLinkOAMPortDiscoveryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDiscoveryState.setStatus("current")
_LcsEthLinkOAMPortPeerMACAddress_Type = DisplayString
_LcsEthLinkOAMPortPeerMACAddress_Object = MibTableColumn
lcsEthLinkOAMPortPeerMACAddress = _LcsEthLinkOAMPortPeerMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 4),
    _LcsEthLinkOAMPortPeerMACAddress_Type()
)
lcsEthLinkOAMPortPeerMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerMACAddress.setStatus("current")
_LcsEthLinkOAMPortLocalMode_Type = DisplayString
_LcsEthLinkOAMPortLocalMode_Object = MibTableColumn
lcsEthLinkOAMPortLocalMode = _LcsEthLinkOAMPortLocalMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 5),
    _LcsEthLinkOAMPortLocalMode_Type()
)
lcsEthLinkOAMPortLocalMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalMode.setStatus("current")
_LcsEthLinkOAMPortLocalUnidirectionalOperationSupport_Type = DisplayString
_LcsEthLinkOAMPortLocalUnidirectionalOperationSupport_Object = MibTableColumn
lcsEthLinkOAMPortLocalUnidirectionalOperationSupport = _LcsEthLinkOAMPortLocalUnidirectionalOperationSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 6),
    _LcsEthLinkOAMPortLocalUnidirectionalOperationSupport_Type()
)
lcsEthLinkOAMPortLocalUnidirectionalOperationSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalUnidirectionalOperationSupport.setStatus("current")
_LcsEthLinkOAMPortLocalRemoteLoopbackSupport_Type = DisplayString
_LcsEthLinkOAMPortLocalRemoteLoopbackSupport_Object = MibTableColumn
lcsEthLinkOAMPortLocalRemoteLoopbackSupport = _LcsEthLinkOAMPortLocalRemoteLoopbackSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 7),
    _LcsEthLinkOAMPortLocalRemoteLoopbackSupport_Type()
)
lcsEthLinkOAMPortLocalRemoteLoopbackSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalRemoteLoopbackSupport.setStatus("current")
_LcsEthLinkOAMPortLocalLinkMonitoringSupport_Type = DisplayString
_LcsEthLinkOAMPortLocalLinkMonitoringSupport_Object = MibTableColumn
lcsEthLinkOAMPortLocalLinkMonitoringSupport = _LcsEthLinkOAMPortLocalLinkMonitoringSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 8),
    _LcsEthLinkOAMPortLocalLinkMonitoringSupport_Type()
)
lcsEthLinkOAMPortLocalLinkMonitoringSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalLinkMonitoringSupport.setStatus("current")
_LcsEthLinkOAMPortLocalMIBRetrievalSupport_Type = DisplayString
_LcsEthLinkOAMPortLocalMIBRetrievalSupport_Object = MibTableColumn
lcsEthLinkOAMPortLocalMIBRetrievalSupport = _LcsEthLinkOAMPortLocalMIBRetrievalSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 9),
    _LcsEthLinkOAMPortLocalMIBRetrievalSupport_Type()
)
lcsEthLinkOAMPortLocalMIBRetrievalSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalMIBRetrievalSupport.setStatus("current")
_LcsEthLinkOAMPortLocalMTUSize_Type = Integer32
_LcsEthLinkOAMPortLocalMTUSize_Object = MibTableColumn
lcsEthLinkOAMPortLocalMTUSize = _LcsEthLinkOAMPortLocalMTUSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 10),
    _LcsEthLinkOAMPortLocalMTUSize_Type()
)
lcsEthLinkOAMPortLocalMTUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalMTUSize.setStatus("current")
_LcsEthLinkOAMPortLocalMultiplexerState_Type = DisplayString
_LcsEthLinkOAMPortLocalMultiplexerState_Object = MibTableColumn
lcsEthLinkOAMPortLocalMultiplexerState = _LcsEthLinkOAMPortLocalMultiplexerState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 11),
    _LcsEthLinkOAMPortLocalMultiplexerState_Type()
)
lcsEthLinkOAMPortLocalMultiplexerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalMultiplexerState.setStatus("current")
_LcsEthLinkOAMPortLocalParserState_Type = DisplayString
_LcsEthLinkOAMPortLocalParserState_Object = MibTableColumn
lcsEthLinkOAMPortLocalParserState = _LcsEthLinkOAMPortLocalParserState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 12),
    _LcsEthLinkOAMPortLocalParserState_Type()
)
lcsEthLinkOAMPortLocalParserState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalParserState.setStatus("current")
_LcsEthLinkOAMPortLocalOrganizationalUniqueIdentification_Type = DisplayString
_LcsEthLinkOAMPortLocalOrganizationalUniqueIdentification_Object = MibTableColumn
lcsEthLinkOAMPortLocalOrganizationalUniqueIdentification = _LcsEthLinkOAMPortLocalOrganizationalUniqueIdentification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 13),
    _LcsEthLinkOAMPortLocalOrganizationalUniqueIdentification_Type()
)
lcsEthLinkOAMPortLocalOrganizationalUniqueIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalOrganizationalUniqueIdentification.setStatus("current")
_LcsEthLinkOAMPortLocalPDURevision_Type = Integer32
_LcsEthLinkOAMPortLocalPDURevision_Object = MibTableColumn
lcsEthLinkOAMPortLocalPDURevision = _LcsEthLinkOAMPortLocalPDURevision_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 14),
    _LcsEthLinkOAMPortLocalPDURevision_Type()
)
lcsEthLinkOAMPortLocalPDURevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLocalPDURevision.setStatus("current")
_LcsEthLinkOAMPortPeerMode_Type = DisplayString
_LcsEthLinkOAMPortPeerMode_Object = MibTableColumn
lcsEthLinkOAMPortPeerMode = _LcsEthLinkOAMPortPeerMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 15),
    _LcsEthLinkOAMPortPeerMode_Type()
)
lcsEthLinkOAMPortPeerMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerMode.setStatus("current")
_LcsEthLinkOAMPortPeerUnidirectionalOperationSupport_Type = DisplayString
_LcsEthLinkOAMPortPeerUnidirectionalOperationSupport_Object = MibTableColumn
lcsEthLinkOAMPortPeerUnidirectionalOperationSupport = _LcsEthLinkOAMPortPeerUnidirectionalOperationSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 16),
    _LcsEthLinkOAMPortPeerUnidirectionalOperationSupport_Type()
)
lcsEthLinkOAMPortPeerUnidirectionalOperationSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerUnidirectionalOperationSupport.setStatus("current")
_LcsEthLinkOAMPortPeerRemoteLoopbackSupport_Type = DisplayString
_LcsEthLinkOAMPortPeerRemoteLoopbackSupport_Object = MibTableColumn
lcsEthLinkOAMPortPeerRemoteLoopbackSupport = _LcsEthLinkOAMPortPeerRemoteLoopbackSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 17),
    _LcsEthLinkOAMPortPeerRemoteLoopbackSupport_Type()
)
lcsEthLinkOAMPortPeerRemoteLoopbackSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerRemoteLoopbackSupport.setStatus("current")
_LcsEthLinkOAMPortPeerLinkMonitoringSupport_Type = DisplayString
_LcsEthLinkOAMPortPeerLinkMonitoringSupport_Object = MibTableColumn
lcsEthLinkOAMPortPeerLinkMonitoringSupport = _LcsEthLinkOAMPortPeerLinkMonitoringSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 18),
    _LcsEthLinkOAMPortPeerLinkMonitoringSupport_Type()
)
lcsEthLinkOAMPortPeerLinkMonitoringSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerLinkMonitoringSupport.setStatus("current")
_LcsEthLinkOAMPortPeerMIBRetrievalSupport_Type = DisplayString
_LcsEthLinkOAMPortPeerMIBRetrievalSupport_Object = MibTableColumn
lcsEthLinkOAMPortPeerMIBRetrievalSupport = _LcsEthLinkOAMPortPeerMIBRetrievalSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 19),
    _LcsEthLinkOAMPortPeerMIBRetrievalSupport_Type()
)
lcsEthLinkOAMPortPeerMIBRetrievalSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerMIBRetrievalSupport.setStatus("current")
_LcsEthLinkOAMPortPeerMTUSize_Type = DisplayString
_LcsEthLinkOAMPortPeerMTUSize_Object = MibTableColumn
lcsEthLinkOAMPortPeerMTUSize = _LcsEthLinkOAMPortPeerMTUSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 20),
    _LcsEthLinkOAMPortPeerMTUSize_Type()
)
lcsEthLinkOAMPortPeerMTUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerMTUSize.setStatus("current")
_LcsEthLinkOAMPortPeerMultiplexerState_Type = DisplayString
_LcsEthLinkOAMPortPeerMultiplexerState_Object = MibTableColumn
lcsEthLinkOAMPortPeerMultiplexerState = _LcsEthLinkOAMPortPeerMultiplexerState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 21),
    _LcsEthLinkOAMPortPeerMultiplexerState_Type()
)
lcsEthLinkOAMPortPeerMultiplexerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerMultiplexerState.setStatus("current")
_LcsEthLinkOAMPortPeerParserState_Type = DisplayString
_LcsEthLinkOAMPortPeerParserState_Object = MibTableColumn
lcsEthLinkOAMPortPeerParserState = _LcsEthLinkOAMPortPeerParserState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 22),
    _LcsEthLinkOAMPortPeerParserState_Type()
)
lcsEthLinkOAMPortPeerParserState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerParserState.setStatus("current")
_LcsEthLinkOAMPortPeerOrganizationalUniqueIdentification_Type = DisplayString
_LcsEthLinkOAMPortPeerOrganizationalUniqueIdentification_Object = MibTableColumn
lcsEthLinkOAMPortPeerOrganizationalUniqueIdentification = _LcsEthLinkOAMPortPeerOrganizationalUniqueIdentification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 23),
    _LcsEthLinkOAMPortPeerOrganizationalUniqueIdentification_Type()
)
lcsEthLinkOAMPortPeerOrganizationalUniqueIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPeerOrganizationalUniqueIdentification.setStatus("current")
_LcsEthLinkOAMPortPDURevision_Type = DisplayString
_LcsEthLinkOAMPortPDURevision_Object = MibTableColumn
lcsEthLinkOAMPortPDURevision = _LcsEthLinkOAMPortPDURevision_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 2, 1, 24),
    _LcsEthLinkOAMPortPDURevision_Type()
)
lcsEthLinkOAMPortPDURevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortPDURevision.setStatus("current")
_LcsEthLinkOAMPortLinkEventConfTable_Object = MibTable
lcsEthLinkOAMPortLinkEventConfTable = _LcsEthLinkOAMPortLinkEventConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3)
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLinkEventConfTable.setStatus("current")
_LcsEthLinkOAMPortLinkEventConfEntry_Object = MibTableRow
lcsEthLinkOAMPortLinkEventConfEntry = _LcsEthLinkOAMPortLinkEventConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1)
)
lcsEthLinkOAMPortLinkEventConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortLinkEventConfIndex"),
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortLinkEventConfEntry.setStatus("current")


class _LcsPortLinkEventConfIndex_Type(Integer32):
    """Custom type lcsPortLinkEventConfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPortLinkEventConfIndex_Type.__name__ = "Integer32"
_LcsPortLinkEventConfIndex_Object = MibTableColumn
lcsPortLinkEventConfIndex = _LcsPortLinkEventConfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 1),
    _LcsPortLinkEventConfIndex_Type()
)
lcsPortLinkEventConfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfIndex.setStatus("current")
_LcsPortLinkEventConfErrorFrameEventErrorWindow_Type = Integer32
_LcsPortLinkEventConfErrorFrameEventErrorWindow_Object = MibTableColumn
lcsPortLinkEventConfErrorFrameEventErrorWindow = _LcsPortLinkEventConfErrorFrameEventErrorWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 2),
    _LcsPortLinkEventConfErrorFrameEventErrorWindow_Type()
)
lcsPortLinkEventConfErrorFrameEventErrorWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfErrorFrameEventErrorWindow.setStatus("current")
_LcsPortLinkEventConfErrorFrameEventErrorThreshold_Type = Integer32
_LcsPortLinkEventConfErrorFrameEventErrorThreshold_Object = MibTableColumn
lcsPortLinkEventConfErrorFrameEventErrorThreshold = _LcsPortLinkEventConfErrorFrameEventErrorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 3),
    _LcsPortLinkEventConfErrorFrameEventErrorThreshold_Type()
)
lcsPortLinkEventConfErrorFrameEventErrorThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfErrorFrameEventErrorThreshold.setStatus("current")
_LcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow_Type = Integer32
_LcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow_Object = MibTableColumn
lcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow = _LcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 4),
    _LcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow_Type()
)
lcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow.setStatus("current")
_LcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold_Type = Integer32
_LcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold_Object = MibTableColumn
lcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold = _LcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 5),
    _LcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold_Type()
)
lcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold.setStatus("current")
_LcsPortLinkEventConfSecondsSummaryEventErrorWindow_Type = Integer32
_LcsPortLinkEventConfSecondsSummaryEventErrorWindow_Object = MibTableColumn
lcsPortLinkEventConfSecondsSummaryEventErrorWindow = _LcsPortLinkEventConfSecondsSummaryEventErrorWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 6),
    _LcsPortLinkEventConfSecondsSummaryEventErrorWindow_Type()
)
lcsPortLinkEventConfSecondsSummaryEventErrorWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfSecondsSummaryEventErrorWindow.setStatus("current")
_LcsPortLinkEventConfSecondsSummaryEventErrorThreshold_Type = Integer32
_LcsPortLinkEventConfSecondsSummaryEventErrorThreshold_Object = MibTableColumn
lcsPortLinkEventConfSecondsSummaryEventErrorThreshold = _LcsPortLinkEventConfSecondsSummaryEventErrorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 3, 1, 7),
    _LcsPortLinkEventConfSecondsSummaryEventErrorThreshold_Type()
)
lcsPortLinkEventConfSecondsSummaryEventErrorThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortLinkEventConfSecondsSummaryEventErrorThreshold.setStatus("current")
_LcsEthLinkOAMPortDetailedStatisticsTable_Object = MibTable
lcsEthLinkOAMPortDetailedStatisticsTable = _LcsEthLinkOAMPortDetailedStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4)
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDetailedStatisticsTable.setStatus("current")
_LcsEthLinkOAMPortDetailedStatisticsEntry_Object = MibTableRow
lcsEthLinkOAMPortDetailedStatisticsEntry = _LcsEthLinkOAMPortDetailedStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1)
)
lcsEthLinkOAMPortDetailedStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortDetailedStatisticsIndex"),
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortDetailedStatisticsEntry.setStatus("current")


class _LcsPortDetailedStatisticsIndex_Type(Integer32):
    """Custom type lcsPortDetailedStatisticsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPortDetailedStatisticsIndex_Type.__name__ = "Integer32"
_LcsPortDetailedStatisticsIndex_Object = MibTableColumn
lcsPortDetailedStatisticsIndex = _LcsPortDetailedStatisticsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 1),
    _LcsPortDetailedStatisticsIndex_Type()
)
lcsPortDetailedStatisticsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsIndex.setStatus("current")
_LcsPortDetailedStatisticsRxOAMInformationPDUs_Type = Integer32
_LcsPortDetailedStatisticsRxOAMInformationPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsRxOAMInformationPDUs = _LcsPortDetailedStatisticsRxOAMInformationPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 2),
    _LcsPortDetailedStatisticsRxOAMInformationPDUs_Type()
)
lcsPortDetailedStatisticsRxOAMInformationPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxOAMInformationPDUs.setStatus("current")
_LcsPortDetailedStatisticsRxUniqueErrorEventNotification_Type = Integer32
_LcsPortDetailedStatisticsRxUniqueErrorEventNotification_Object = MibTableColumn
lcsPortDetailedStatisticsRxUniqueErrorEventNotification = _LcsPortDetailedStatisticsRxUniqueErrorEventNotification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 3),
    _LcsPortDetailedStatisticsRxUniqueErrorEventNotification_Type()
)
lcsPortDetailedStatisticsRxUniqueErrorEventNotification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxUniqueErrorEventNotification.setStatus("current")
_LcsPortDetailedStatisticsRxDuplicateErrorEventNotification_Type = Integer32
_LcsPortDetailedStatisticsRxDuplicateErrorEventNotification_Object = MibTableColumn
lcsPortDetailedStatisticsRxDuplicateErrorEventNotification = _LcsPortDetailedStatisticsRxDuplicateErrorEventNotification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 4),
    _LcsPortDetailedStatisticsRxDuplicateErrorEventNotification_Type()
)
lcsPortDetailedStatisticsRxDuplicateErrorEventNotification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxDuplicateErrorEventNotification.setStatus("current")
_LcsPortDetailedStatisticsRxLoopbackControl_Type = Integer32
_LcsPortDetailedStatisticsRxLoopbackControl_Object = MibTableColumn
lcsPortDetailedStatisticsRxLoopbackControl = _LcsPortDetailedStatisticsRxLoopbackControl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 5),
    _LcsPortDetailedStatisticsRxLoopbackControl_Type()
)
lcsPortDetailedStatisticsRxLoopbackControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxLoopbackControl.setStatus("current")
_LcsPortDetailedStatisticsRxVariableRequest_Type = Integer32
_LcsPortDetailedStatisticsRxVariableRequest_Object = MibTableColumn
lcsPortDetailedStatisticsRxVariableRequest = _LcsPortDetailedStatisticsRxVariableRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 6),
    _LcsPortDetailedStatisticsRxVariableRequest_Type()
)
lcsPortDetailedStatisticsRxVariableRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxVariableRequest.setStatus("current")
_LcsPortDetailedStatisticsRxVariableResponse_Type = Integer32
_LcsPortDetailedStatisticsRxVariableResponse_Object = MibTableColumn
lcsPortDetailedStatisticsRxVariableResponse = _LcsPortDetailedStatisticsRxVariableResponse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 7),
    _LcsPortDetailedStatisticsRxVariableResponse_Type()
)
lcsPortDetailedStatisticsRxVariableResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxVariableResponse.setStatus("current")
_LcsPortDetailedStatisticsRxOrgSpecificPDUs_Type = Integer32
_LcsPortDetailedStatisticsRxOrgSpecificPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsRxOrgSpecificPDUs = _LcsPortDetailedStatisticsRxOrgSpecificPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 8),
    _LcsPortDetailedStatisticsRxOrgSpecificPDUs_Type()
)
lcsPortDetailedStatisticsRxOrgSpecificPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxOrgSpecificPDUs.setStatus("current")
_LcsPortDetailedStatisticsRxUnsupportedCodes_Type = Integer32
_LcsPortDetailedStatisticsRxUnsupportedCodes_Object = MibTableColumn
lcsPortDetailedStatisticsRxUnsupportedCodes = _LcsPortDetailedStatisticsRxUnsupportedCodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 9),
    _LcsPortDetailedStatisticsRxUnsupportedCodes_Type()
)
lcsPortDetailedStatisticsRxUnsupportedCodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxUnsupportedCodes.setStatus("current")
_LcsPortDetailedStatisticsRxLinkFaultPDUs_Type = Integer32
_LcsPortDetailedStatisticsRxLinkFaultPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsRxLinkFaultPDUs = _LcsPortDetailedStatisticsRxLinkFaultPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 10),
    _LcsPortDetailedStatisticsRxLinkFaultPDUs_Type()
)
lcsPortDetailedStatisticsRxLinkFaultPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxLinkFaultPDUs.setStatus("current")
_LcsPortDetailedStatisticsRxDyingGasp_Type = Integer32
_LcsPortDetailedStatisticsRxDyingGasp_Object = MibTableColumn
lcsPortDetailedStatisticsRxDyingGasp = _LcsPortDetailedStatisticsRxDyingGasp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 11),
    _LcsPortDetailedStatisticsRxDyingGasp_Type()
)
lcsPortDetailedStatisticsRxDyingGasp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxDyingGasp.setStatus("current")
_LcsPortDetailedStatisticsRxCriticalEventPDUs_Type = Integer32
_LcsPortDetailedStatisticsRxCriticalEventPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsRxCriticalEventPDUs = _LcsPortDetailedStatisticsRxCriticalEventPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 12),
    _LcsPortDetailedStatisticsRxCriticalEventPDUs_Type()
)
lcsPortDetailedStatisticsRxCriticalEventPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsRxCriticalEventPDUs.setStatus("current")
_LcsPortDetailedStatisticsTxOAMInformationPDUs_Type = Integer32
_LcsPortDetailedStatisticsTxOAMInformationPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsTxOAMInformationPDUs = _LcsPortDetailedStatisticsTxOAMInformationPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 13),
    _LcsPortDetailedStatisticsTxOAMInformationPDUs_Type()
)
lcsPortDetailedStatisticsTxOAMInformationPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxOAMInformationPDUs.setStatus("current")
_LcsPortDetailedStatisticsTxUniqueErrorEventNotification_Type = Integer32
_LcsPortDetailedStatisticsTxUniqueErrorEventNotification_Object = MibTableColumn
lcsPortDetailedStatisticsTxUniqueErrorEventNotification = _LcsPortDetailedStatisticsTxUniqueErrorEventNotification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 14),
    _LcsPortDetailedStatisticsTxUniqueErrorEventNotification_Type()
)
lcsPortDetailedStatisticsTxUniqueErrorEventNotification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxUniqueErrorEventNotification.setStatus("current")
_LcsPortDetailedStatisticsTxDuplicateErrorEventNotification_Type = Integer32
_LcsPortDetailedStatisticsTxDuplicateErrorEventNotification_Object = MibTableColumn
lcsPortDetailedStatisticsTxDuplicateErrorEventNotification = _LcsPortDetailedStatisticsTxDuplicateErrorEventNotification_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 15),
    _LcsPortDetailedStatisticsTxDuplicateErrorEventNotification_Type()
)
lcsPortDetailedStatisticsTxDuplicateErrorEventNotification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxDuplicateErrorEventNotification.setStatus("current")
_LcsPortDetailedStatisticsTxLoopbackControl_Type = Integer32
_LcsPortDetailedStatisticsTxLoopbackControl_Object = MibTableColumn
lcsPortDetailedStatisticsTxLoopbackControl = _LcsPortDetailedStatisticsTxLoopbackControl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 16),
    _LcsPortDetailedStatisticsTxLoopbackControl_Type()
)
lcsPortDetailedStatisticsTxLoopbackControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxLoopbackControl.setStatus("current")
_LcsPortDetailedStatisticsTxVariableRequest_Type = Integer32
_LcsPortDetailedStatisticsTxVariableRequest_Object = MibTableColumn
lcsPortDetailedStatisticsTxVariableRequest = _LcsPortDetailedStatisticsTxVariableRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 17),
    _LcsPortDetailedStatisticsTxVariableRequest_Type()
)
lcsPortDetailedStatisticsTxVariableRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxVariableRequest.setStatus("current")
_LcsPortDetailedStatisticsTxVariableResponse_Type = Integer32
_LcsPortDetailedStatisticsTxVariableResponse_Object = MibTableColumn
lcsPortDetailedStatisticsTxVariableResponse = _LcsPortDetailedStatisticsTxVariableResponse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 18),
    _LcsPortDetailedStatisticsTxVariableResponse_Type()
)
lcsPortDetailedStatisticsTxVariableResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxVariableResponse.setStatus("current")
_LcsPortDetailedStatisticsTxOrgSpecificPDUs_Type = Integer32
_LcsPortDetailedStatisticsTxOrgSpecificPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsTxOrgSpecificPDUs = _LcsPortDetailedStatisticsTxOrgSpecificPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 19),
    _LcsPortDetailedStatisticsTxOrgSpecificPDUs_Type()
)
lcsPortDetailedStatisticsTxOrgSpecificPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxOrgSpecificPDUs.setStatus("current")
_LcsPortDetailedStatisticsTxUnsupportedCodes_Type = Integer32
_LcsPortDetailedStatisticsTxUnsupportedCodes_Object = MibTableColumn
lcsPortDetailedStatisticsTxUnsupportedCodes = _LcsPortDetailedStatisticsTxUnsupportedCodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 20),
    _LcsPortDetailedStatisticsTxUnsupportedCodes_Type()
)
lcsPortDetailedStatisticsTxUnsupportedCodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxUnsupportedCodes.setStatus("current")
_LcsPortDetailedStatisticsTxLinkFaultPDUs_Type = Integer32
_LcsPortDetailedStatisticsTxLinkFaultPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsTxLinkFaultPDUs = _LcsPortDetailedStatisticsTxLinkFaultPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 21),
    _LcsPortDetailedStatisticsTxLinkFaultPDUs_Type()
)
lcsPortDetailedStatisticsTxLinkFaultPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxLinkFaultPDUs.setStatus("current")
_LcsPortDetailedStatisticsTxDyingGasp_Type = Integer32
_LcsPortDetailedStatisticsTxDyingGasp_Object = MibTableColumn
lcsPortDetailedStatisticsTxDyingGasp = _LcsPortDetailedStatisticsTxDyingGasp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 22),
    _LcsPortDetailedStatisticsTxDyingGasp_Type()
)
lcsPortDetailedStatisticsTxDyingGasp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxDyingGasp.setStatus("current")
_LcsPortDetailedStatisticsTxCriticalEventPDUs_Type = Integer32
_LcsPortDetailedStatisticsTxCriticalEventPDUs_Object = MibTableColumn
lcsPortDetailedStatisticsTxCriticalEventPDUs = _LcsPortDetailedStatisticsTxCriticalEventPDUs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 23),
    _LcsPortDetailedStatisticsTxCriticalEventPDUs_Type()
)
lcsPortDetailedStatisticsTxCriticalEventPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsTxCriticalEventPDUs.setStatus("current")
_LcsPortDetailedStatisticsClear_Type = Integer32
_LcsPortDetailedStatisticsClear_Object = MibTableColumn
lcsPortDetailedStatisticsClear = _LcsPortDetailedStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 4, 1, 24),
    _LcsPortDetailedStatisticsClear_Type()
)
lcsPortDetailedStatisticsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortDetailedStatisticsClear.setStatus("current")
_LcsEthLinkOAMPortEventDetailedStatisticsTable_Object = MibTable
lcsEthLinkOAMPortEventDetailedStatisticsTable = _LcsEthLinkOAMPortEventDetailedStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5)
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortEventDetailedStatisticsTable.setStatus("current")
_LcsEthLinkOAMPortEventDetailedStatisticsEntry_Object = MibTableRow
lcsEthLinkOAMPortEventDetailedStatisticsEntry = _LcsEthLinkOAMPortEventDetailedStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1)
)
lcsEthLinkOAMPortEventDetailedStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDetailedStatisticsIndex"),
)
if mibBuilder.loadTexts:
    lcsEthLinkOAMPortEventDetailedStatisticsEntry.setStatus("current")


class _LcsDetailedStatisticsIndex_Type(Integer32):
    """Custom type lcsDetailedStatisticsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsDetailedStatisticsIndex_Type.__name__ = "Integer32"
_LcsDetailedStatisticsIndex_Object = MibTableColumn
lcsDetailedStatisticsIndex = _LcsDetailedStatisticsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 1),
    _LcsDetailedStatisticsIndex_Type()
)
lcsDetailedStatisticsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsIndex.setStatus("current")
_LcsDetailedStatisticsLocalSequenceNumber_Type = Integer32
_LcsDetailedStatisticsLocalSequenceNumber_Object = MibTableColumn
lcsDetailedStatisticsLocalSequenceNumber = _LcsDetailedStatisticsLocalSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 2),
    _LcsDetailedStatisticsLocalSequenceNumber_Type()
)
lcsDetailedStatisticsLocalSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSequenceNumber.setStatus("current")
_LcsDetailedStatisticsLocalFrameErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsLocalFrameErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsLocalFrameErrorEventTimestamp = _LcsDetailedStatisticsLocalFrameErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 3),
    _LcsDetailedStatisticsLocalFrameErrorEventTimestamp_Type()
)
lcsDetailedStatisticsLocalFrameErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFrameErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsLocalFrameErrorEventWindow_Type = Integer32
_LcsDetailedStatisticsLocalFrameErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsLocalFrameErrorEventWindow = _LcsDetailedStatisticsLocalFrameErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 4),
    _LcsDetailedStatisticsLocalFrameErrorEventWindow_Type()
)
lcsDetailedStatisticsLocalFrameErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFrameErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsLocalFrameErrorEventThreshold_Type = Integer32
_LcsDetailedStatisticsLocalFrameErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsLocalFrameErrorEventThreshold = _LcsDetailedStatisticsLocalFrameErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 5),
    _LcsDetailedStatisticsLocalFrameErrorEventThreshold_Type()
)
lcsDetailedStatisticsLocalFrameErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFrameErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsLocalFrameErrors_Type = Integer32
_LcsDetailedStatisticsLocalFrameErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalFrameErrors = _LcsDetailedStatisticsLocalFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 6),
    _LcsDetailedStatisticsLocalFrameErrors_Type()
)
lcsDetailedStatisticsLocalFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFrameErrors.setStatus("current")
_LcsDetailedStatisticsLocalTotalFrameErrors_Type = Counter64
_LcsDetailedStatisticsLocalTotalFrameErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalTotalFrameErrors = _LcsDetailedStatisticsLocalTotalFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 7),
    _LcsDetailedStatisticsLocalTotalFrameErrors_Type()
)
lcsDetailedStatisticsLocalTotalFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalTotalFrameErrors.setStatus("current")
_LcsDetailedStatisticsLocalTotalFrameErrorEvents_Type = Integer32
_LcsDetailedStatisticsLocalTotalFrameErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsLocalTotalFrameErrorEvents = _LcsDetailedStatisticsLocalTotalFrameErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 8),
    _LcsDetailedStatisticsLocalTotalFrameErrorEvents_Type()
)
lcsDetailedStatisticsLocalTotalFrameErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalTotalFrameErrorEvents.setStatus("current")
_LcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp = _LcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 9),
    _LcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp_Type()
)
lcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsLocalFramePeriodErrorEventWindow_Type = Integer32
_LcsDetailedStatisticsLocalFramePeriodErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsLocalFramePeriodErrorEventWindow = _LcsDetailedStatisticsLocalFramePeriodErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 10),
    _LcsDetailedStatisticsLocalFramePeriodErrorEventWindow_Type()
)
lcsDetailedStatisticsLocalFramePeriodErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFramePeriodErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsLocalFramePeriodErrorEventThreshold_Type = Integer32
_LcsDetailedStatisticsLocalFramePeriodErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsLocalFramePeriodErrorEventThreshold = _LcsDetailedStatisticsLocalFramePeriodErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 11),
    _LcsDetailedStatisticsLocalFramePeriodErrorEventThreshold_Type()
)
lcsDetailedStatisticsLocalFramePeriodErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFramePeriodErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsLocalFramePeriodErrors_Type = Integer32
_LcsDetailedStatisticsLocalFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalFramePeriodErrors = _LcsDetailedStatisticsLocalFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 12),
    _LcsDetailedStatisticsLocalFramePeriodErrors_Type()
)
lcsDetailedStatisticsLocalFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsLocalTotalFramePeriodErrors_Type = Counter64
_LcsDetailedStatisticsLocalTotalFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalTotalFramePeriodErrors = _LcsDetailedStatisticsLocalTotalFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 13),
    _LcsDetailedStatisticsLocalTotalFramePeriodErrors_Type()
)
lcsDetailedStatisticsLocalTotalFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalTotalFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsLocalTotalFramePeriodErrorEvents_Type = Integer32
_LcsDetailedStatisticsLocalTotalFramePeriodErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsLocalTotalFramePeriodErrorEvents = _LcsDetailedStatisticsLocalTotalFramePeriodErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 14),
    _LcsDetailedStatisticsLocalTotalFramePeriodErrorEvents_Type()
)
lcsDetailedStatisticsLocalTotalFramePeriodErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalTotalFramePeriodErrorEvents.setStatus("current")
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp = _LcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 15),
    _LcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp_Type()
)
lcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow_Type = Counter64
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow = _LcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 16),
    _LcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow_Type()
)
lcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold_Type = Counter64
_LcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold = _LcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 17),
    _LcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold_Type()
)
lcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsLocalSymbolPeriodErrors_Type = Counter64
_LcsDetailedStatisticsLocalSymbolPeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolPeriodErrors = _LcsDetailedStatisticsLocalSymbolPeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 18),
    _LcsDetailedStatisticsLocalSymbolPeriodErrors_Type()
)
lcsDetailedStatisticsLocalSymbolPeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolPeriodErrors.setStatus("current")
_LcsDetailedStatisticsLocalSymbolFramePeriodErrors_Type = Counter64
_LcsDetailedStatisticsLocalSymbolFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolFramePeriodErrors = _LcsDetailedStatisticsLocalSymbolFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 19),
    _LcsDetailedStatisticsLocalSymbolFramePeriodErrors_Type()
)
lcsDetailedStatisticsLocalSymbolFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents_Type = Integer32
_LcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents = _LcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 20),
    _LcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents_Type()
)
lcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp = _LcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 21),
    _LcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryWindow_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryWindow_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryWindow = _LcsDetailedStatisticsLocalEventSecondsSummaryWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 22),
    _LcsDetailedStatisticsLocalEventSecondsSummaryWindow_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryWindow.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryThreshold_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryThreshold_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryThreshold = _LcsDetailedStatisticsLocalEventSecondsSummaryThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 23),
    _LcsDetailedStatisticsLocalEventSecondsSummaryThreshold_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryThreshold.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryEvents_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryEvents_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryEvents = _LcsDetailedStatisticsLocalEventSecondsSummaryEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 24),
    _LcsDetailedStatisticsLocalEventSecondsSummaryEvents_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryEvents.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal = _LcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 25),
    _LcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal.setStatus("current")
_LcsDetailedStatisticsLocalEventSecondsSummaryEventTotal_Type = Integer32
_LcsDetailedStatisticsLocalEventSecondsSummaryEventTotal_Object = MibTableColumn
lcsDetailedStatisticsLocalEventSecondsSummaryEventTotal = _LcsDetailedStatisticsLocalEventSecondsSummaryEventTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 26),
    _LcsDetailedStatisticsLocalEventSecondsSummaryEventTotal_Type()
)
lcsDetailedStatisticsLocalEventSecondsSummaryEventTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsLocalEventSecondsSummaryEventTotal.setStatus("current")
_LcsDetailedStatisticsRemoteFrameErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsRemoteFrameErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsRemoteFrameErrorEventTimestamp = _LcsDetailedStatisticsRemoteFrameErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 27),
    _LcsDetailedStatisticsRemoteFrameErrorEventTimestamp_Type()
)
lcsDetailedStatisticsRemoteFrameErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFrameErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsRemoteFrameErrorEventWindow_Type = Integer32
_LcsDetailedStatisticsRemoteFrameErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsRemoteFrameErrorEventWindow = _LcsDetailedStatisticsRemoteFrameErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 28),
    _LcsDetailedStatisticsRemoteFrameErrorEventWindow_Type()
)
lcsDetailedStatisticsRemoteFrameErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFrameErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsRemoteFrameErrorEventThreshold_Type = Integer32
_LcsDetailedStatisticsRemoteFrameErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsRemoteFrameErrorEventThreshold = _LcsDetailedStatisticsRemoteFrameErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 29),
    _LcsDetailedStatisticsRemoteFrameErrorEventThreshold_Type()
)
lcsDetailedStatisticsRemoteFrameErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFrameErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsRemoteFrameErrors_Type = Integer32
_LcsDetailedStatisticsRemoteFrameErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteFrameErrors = _LcsDetailedStatisticsRemoteFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 30),
    _LcsDetailedStatisticsRemoteFrameErrors_Type()
)
lcsDetailedStatisticsRemoteFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFrameErrors.setStatus("current")
_LcsDetailedStatisticsRemoteTotalFrameErrors_Type = Counter64
_LcsDetailedStatisticsRemoteTotalFrameErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteTotalFrameErrors = _LcsDetailedStatisticsRemoteTotalFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 31),
    _LcsDetailedStatisticsRemoteTotalFrameErrors_Type()
)
lcsDetailedStatisticsRemoteTotalFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteTotalFrameErrors.setStatus("current")
_LcsDetailedStatisticsRemoteTotalFrameErrorEvents_Type = Integer32
_LcsDetailedStatisticsRemoteTotalFrameErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsRemoteTotalFrameErrorEvents = _LcsDetailedStatisticsRemoteTotalFrameErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 32),
    _LcsDetailedStatisticsRemoteTotalFrameErrorEvents_Type()
)
lcsDetailedStatisticsRemoteTotalFrameErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteTotalFrameErrorEvents.setStatus("current")
_LcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp = _LcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 33),
    _LcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp_Type()
)
lcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsRemoteFramePeriodErrorEventWindow_Type = Integer32
_LcsDetailedStatisticsRemoteFramePeriodErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsRemoteFramePeriodErrorEventWindow = _LcsDetailedStatisticsRemoteFramePeriodErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 34),
    _LcsDetailedStatisticsRemoteFramePeriodErrorEventWindow_Type()
)
lcsDetailedStatisticsRemoteFramePeriodErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFramePeriodErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold_Type = Integer32
_LcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold = _LcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 35),
    _LcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold_Type()
)
lcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsRemoteFramePeriodErrors_Type = Integer32
_LcsDetailedStatisticsRemoteFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteFramePeriodErrors = _LcsDetailedStatisticsRemoteFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 36),
    _LcsDetailedStatisticsRemoteFramePeriodErrors_Type()
)
lcsDetailedStatisticsRemoteFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsRemoteTotalFramePeriodErrors_Type = Counter64
_LcsDetailedStatisticsRemoteTotalFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteTotalFramePeriodErrors = _LcsDetailedStatisticsRemoteTotalFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 37),
    _LcsDetailedStatisticsRemoteTotalFramePeriodErrors_Type()
)
lcsDetailedStatisticsRemoteTotalFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteTotalFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents_Type = Integer32
_LcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents = _LcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 38),
    _LcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents_Type()
)
lcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp_Type = Integer32
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp = _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 39),
    _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp_Type()
)
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow_Type = Counter64
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow = _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 40),
    _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow_Type()
)
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold_Type = Counter64
_LcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold = _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 41),
    _LcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold_Type()
)
lcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolPeriodErrors_Type = Counter64
_LcsDetailedStatisticsRemoteSymbolPeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolPeriodErrors = _LcsDetailedStatisticsRemoteSymbolPeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 42),
    _LcsDetailedStatisticsRemoteSymbolPeriodErrors_Type()
)
lcsDetailedStatisticsRemoteSymbolPeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolPeriodErrors.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolFramePeriodErrors_Type = Counter64
_LcsDetailedStatisticsRemoteSymbolFramePeriodErrors_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolFramePeriodErrors = _LcsDetailedStatisticsRemoteSymbolFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 43),
    _LcsDetailedStatisticsRemoteSymbolFramePeriodErrors_Type()
)
lcsDetailedStatisticsRemoteSymbolFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolFramePeriodErrors.setStatus("current")
_LcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents_Type = Integer32
_LcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents_Object = MibTableColumn
lcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents = _LcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 44),
    _LcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents_Type()
)
lcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp = _LcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 45),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryWindow_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryWindow_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryWindow = _LcsDetailedStatisticsRemoteEventSecondsSummaryWindow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 46),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryWindow_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryWindow.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryThreshold_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryThreshold_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryThreshold = _LcsDetailedStatisticsRemoteEventSecondsSummaryThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 47),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryThreshold_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryThreshold.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryEvents_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryEvents_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryEvents = _LcsDetailedStatisticsRemoteEventSecondsSummaryEvents_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 48),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryEvents_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryEvents.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal = _LcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 49),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal.setStatus("current")
_LcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal_Type = Integer32
_LcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal_Object = MibTableColumn
lcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal = _LcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 29, 5, 1, 50),
    _LcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal_Type()
)
lcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal.setStatus("current")
_LcsIPMC_ObjectIdentity = ObjectIdentity
lcsIPMC = _LcsIPMC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32)
)
_LcsIGMPSnooping_ObjectIdentity = ObjectIdentity
lcsIGMPSnooping = _LcsIGMPSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1)
)


class _LcsIGMPSnoopingBasicConfigSnoopingEnabled_Type(Integer32):
    """Custom type lcsIGMPSnoopingBasicConfigSnoopingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingBasicConfigSnoopingEnabled_Type.__name__ = "Integer32"
_LcsIGMPSnoopingBasicConfigSnoopingEnabled_Object = MibScalar
lcsIGMPSnoopingBasicConfigSnoopingEnabled = _LcsIGMPSnoopingBasicConfigSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 2),
    _LcsIGMPSnoopingBasicConfigSnoopingEnabled_Type()
)
lcsIGMPSnoopingBasicConfigSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigSnoopingEnabled.setStatus("current")


class _LcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled_Type(Integer32):
    """Custom type lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled_Type.__name__ = "Integer32"
_LcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled_Object = MibScalar
lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled = _LcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 3),
    _LcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled_Type()
)
lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled.setStatus("current")
_LcsIGMPSnoopingBasicConfigIGMPSSMRange_Type = IpAddress
_LcsIGMPSnoopingBasicConfigIGMPSSMRange_Object = MibScalar
lcsIGMPSnoopingBasicConfigIGMPSSMRange = _LcsIGMPSnoopingBasicConfigIGMPSSMRange_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 4),
    _LcsIGMPSnoopingBasicConfigIGMPSSMRange_Type()
)
lcsIGMPSnoopingBasicConfigIGMPSSMRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigIGMPSSMRange.setStatus("current")


class _LcsIGMPSnoopingBasicConfigIGMPSSMRangeLength_Type(Integer32):
    """Custom type lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 32),
    )


_LcsIGMPSnoopingBasicConfigIGMPSSMRangeLength_Type.__name__ = "Integer32"
_LcsIGMPSnoopingBasicConfigIGMPSSMRangeLength_Object = MibScalar
lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength = _LcsIGMPSnoopingBasicConfigIGMPSSMRangeLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 5),
    _LcsIGMPSnoopingBasicConfigIGMPSSMRangeLength_Type()
)
lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength.setStatus("current")


class _LcsIGMPSnoopingBasicConfigLeaveProxyEnabled_Type(Integer32):
    """Custom type lcsIGMPSnoopingBasicConfigLeaveProxyEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingBasicConfigLeaveProxyEnabled_Type.__name__ = "Integer32"
_LcsIGMPSnoopingBasicConfigLeaveProxyEnabled_Object = MibScalar
lcsIGMPSnoopingBasicConfigLeaveProxyEnabled = _LcsIGMPSnoopingBasicConfigLeaveProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 6),
    _LcsIGMPSnoopingBasicConfigLeaveProxyEnabled_Type()
)
lcsIGMPSnoopingBasicConfigLeaveProxyEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigLeaveProxyEnabled.setStatus("current")


class _LcsIGMPSnoopingBasicConfigProxyEnabled_Type(Integer32):
    """Custom type lcsIGMPSnoopingBasicConfigProxyEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingBasicConfigProxyEnabled_Type.__name__ = "Integer32"
_LcsIGMPSnoopingBasicConfigProxyEnabled_Object = MibScalar
lcsIGMPSnoopingBasicConfigProxyEnabled = _LcsIGMPSnoopingBasicConfigProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 7),
    _LcsIGMPSnoopingBasicConfigProxyEnabled_Type()
)
lcsIGMPSnoopingBasicConfigProxyEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingBasicConfigProxyEnabled.setStatus("current")
_LcsIGMPSnoopingPortRelatedTable_Object = MibTable
lcsIGMPSnoopingPortRelatedTable = _LcsIGMPSnoopingPortRelatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8)
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortRelatedTable.setStatus("current")
_LcsIGMPSnoopingPortRelatedEntry_Object = MibTableRow
lcsIGMPSnoopingPortRelatedEntry = _LcsIGMPSnoopingPortRelatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1)
)
lcsIGMPSnoopingPortRelatedEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSnoopingPortRelatedPort"),
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortRelatedEntry.setStatus("current")


class _LcsIGMPSnoopingPortRelatedPort_Type(Integer32):
    """Custom type lcsIGMPSnoopingPortRelatedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSnoopingPortRelatedPort_Type.__name__ = "Integer32"
_LcsIGMPSnoopingPortRelatedPort_Object = MibTableColumn
lcsIGMPSnoopingPortRelatedPort = _LcsIGMPSnoopingPortRelatedPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1, 1),
    _LcsIGMPSnoopingPortRelatedPort_Type()
)
lcsIGMPSnoopingPortRelatedPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortRelatedPort.setStatus("current")


class _LcsIGMPSnoopingPortRouterPort_Type(Integer32):
    """Custom type lcsIGMPSnoopingPortRouterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingPortRouterPort_Type.__name__ = "Integer32"
_LcsIGMPSnoopingPortRouterPort_Object = MibTableColumn
lcsIGMPSnoopingPortRouterPort = _LcsIGMPSnoopingPortRouterPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1, 2),
    _LcsIGMPSnoopingPortRouterPort_Type()
)
lcsIGMPSnoopingPortRouterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortRouterPort.setStatus("current")


class _LcsIGMPSnoopingPortFastLeave_Type(Integer32):
    """Custom type lcsIGMPSnoopingPortFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingPortFastLeave_Type.__name__ = "Integer32"
_LcsIGMPSnoopingPortFastLeave_Object = MibTableColumn
lcsIGMPSnoopingPortFastLeave = _LcsIGMPSnoopingPortFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1, 3),
    _LcsIGMPSnoopingPortFastLeave_Type()
)
lcsIGMPSnoopingPortFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortFastLeave.setStatus("current")


class _LcsIGMPSnoopingPortThrottling_Type(Integer32):
    """Custom type lcsIGMPSnoopingPortThrottling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_LcsIGMPSnoopingPortThrottling_Type.__name__ = "Integer32"
_LcsIGMPSnoopingPortThrottling_Object = MibTableColumn
lcsIGMPSnoopingPortThrottling = _LcsIGMPSnoopingPortThrottling_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1, 4),
    _LcsIGMPSnoopingPortThrottling_Type()
)
lcsIGMPSnoopingPortThrottling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortThrottling.setStatus("current")
_LcsIGMPSnoopingPortFilteringProfile_Type = DisplayString
_LcsIGMPSnoopingPortFilteringProfile_Object = MibTableColumn
lcsIGMPSnoopingPortFilteringProfile = _LcsIGMPSnoopingPortFilteringProfile_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 8, 1, 5),
    _LcsIGMPSnoopingPortFilteringProfile_Type()
)
lcsIGMPSnoopingPortFilteringProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingPortFilteringProfile.setStatus("current")
_LcsIGMPSnoopingVLANConfigTable_Object = MibTable
lcsIGMPSnoopingVLANConfigTable = _LcsIGMPSnoopingVLANConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9)
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigTable.setStatus("current")
_LcsIGMPSnoopingVLANConfigEntry_Object = MibTableRow
lcsIGMPSnoopingVLANConfigEntry = _LcsIGMPSnoopingVLANConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1)
)
lcsIGMPSnoopingVLANConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSnoopingVLANConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigEntry.setStatus("current")


class _LcsIGMPSnoopingVLANConfigIndex_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSnoopingVLANConfigIndex_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigIndex_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigIndex = _LcsIGMPSnoopingVLANConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 1),
    _LcsIGMPSnoopingVLANConfigIndex_Type()
)
lcsIGMPSnoopingVLANConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigIndex.setStatus("current")
_LcsIGMPSnoopingVLANConfigVLANID_Type = Integer32
_LcsIGMPSnoopingVLANConfigVLANID_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigVLANID = _LcsIGMPSnoopingVLANConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 2),
    _LcsIGMPSnoopingVLANConfigVLANID_Type()
)
lcsIGMPSnoopingVLANConfigVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigVLANID.setStatus("current")


class _LcsIGMPSnoopingVLANConfigSnoopingEnabled_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigSnoopingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingVLANConfigSnoopingEnabled_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigSnoopingEnabled_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigSnoopingEnabled = _LcsIGMPSnoopingVLANConfigSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 3),
    _LcsIGMPSnoopingVLANConfigSnoopingEnabled_Type()
)
lcsIGMPSnoopingVLANConfigSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigSnoopingEnabled.setStatus("current")


class _LcsIGMPSnoopingVLANConfigQuerierElection_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigQuerierElection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingVLANConfigQuerierElection_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigQuerierElection_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigQuerierElection = _LcsIGMPSnoopingVLANConfigQuerierElection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 4),
    _LcsIGMPSnoopingVLANConfigQuerierElection_Type()
)
lcsIGMPSnoopingVLANConfigQuerierElection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigQuerierElection.setStatus("current")
_LcsIGMPSnoopingVLANConfigQuerierAddress_Type = IpAddress
_LcsIGMPSnoopingVLANConfigQuerierAddress_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigQuerierAddress = _LcsIGMPSnoopingVLANConfigQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 5),
    _LcsIGMPSnoopingVLANConfigQuerierAddress_Type()
)
lcsIGMPSnoopingVLANConfigQuerierAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigQuerierAddress.setStatus("current")


class _LcsIGMPSnoopingVLANConfigCompatibility_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigCompatibility based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_LcsIGMPSnoopingVLANConfigCompatibility_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigCompatibility_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigCompatibility = _LcsIGMPSnoopingVLANConfigCompatibility_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 6),
    _LcsIGMPSnoopingVLANConfigCompatibility_Type()
)
lcsIGMPSnoopingVLANConfigCompatibility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigCompatibility.setStatus("current")


class _LcsIGMPSnoopingVLANConfigPRI_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigPRI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsIGMPSnoopingVLANConfigPRI_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigPRI_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigPRI = _LcsIGMPSnoopingVLANConfigPRI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 7),
    _LcsIGMPSnoopingVLANConfigPRI_Type()
)
lcsIGMPSnoopingVLANConfigPRI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigPRI.setStatus("current")


class _LcsIGMPSnoopingVLANConfigRV_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigRV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsIGMPSnoopingVLANConfigRV_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigRV_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigRV = _LcsIGMPSnoopingVLANConfigRV_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 8),
    _LcsIGMPSnoopingVLANConfigRV_Type()
)
lcsIGMPSnoopingVLANConfigRV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigRV.setStatus("current")


class _LcsIGMPSnoopingVLANConfigQI_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigQI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31744),
    )


_LcsIGMPSnoopingVLANConfigQI_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigQI_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigQI = _LcsIGMPSnoopingVLANConfigQI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 9),
    _LcsIGMPSnoopingVLANConfigQI_Type()
)
lcsIGMPSnoopingVLANConfigQI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigQI.setStatus("current")


class _LcsIGMPSnoopingVLANConfigQRI_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigQRI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsIGMPSnoopingVLANConfigQRI_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigQRI_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigQRI = _LcsIGMPSnoopingVLANConfigQRI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 10),
    _LcsIGMPSnoopingVLANConfigQRI_Type()
)
lcsIGMPSnoopingVLANConfigQRI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigQRI.setStatus("current")


class _LcsIGMPSnoopingVLANConfigLLQI_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigLLQI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsIGMPSnoopingVLANConfigLLQI_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigLLQI_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigLLQI = _LcsIGMPSnoopingVLANConfigLLQI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 11),
    _LcsIGMPSnoopingVLANConfigLLQI_Type()
)
lcsIGMPSnoopingVLANConfigLLQI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigLLQI.setStatus("current")


class _LcsIGMPSnoopingVLANConfigURI_Type(Integer32):
    """Custom type lcsIGMPSnoopingVLANConfigURI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsIGMPSnoopingVLANConfigURI_Type.__name__ = "Integer32"
_LcsIGMPSnoopingVLANConfigURI_Object = MibTableColumn
lcsIGMPSnoopingVLANConfigURI = _LcsIGMPSnoopingVLANConfigURI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 9, 1, 12),
    _LcsIGMPSnoopingVLANConfigURI_Type()
)
lcsIGMPSnoopingVLANConfigURI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingVLANConfigURI.setStatus("current")


class _LcsIGMPSnoopingStatusClear_Type(Integer32):
    """Custom type lcsIGMPSnoopingStatusClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsIGMPSnoopingStatusClear_Type.__name__ = "Integer32"
_LcsIGMPSnoopingStatusClear_Object = MibScalar
lcsIGMPSnoopingStatusClear = _LcsIGMPSnoopingStatusClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 10),
    _LcsIGMPSnoopingStatusClear_Type()
)
lcsIGMPSnoopingStatusClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusClear.setStatus("current")
_LcsIGMPSnoopingStatusTable_Object = MibTable
lcsIGMPSnoopingStatusTable = _LcsIGMPSnoopingStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11)
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusTable.setStatus("current")
_LcsIGMPSnoopingStatusEntry_Object = MibTableRow
lcsIGMPSnoopingStatusEntry = _LcsIGMPSnoopingStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1)
)
lcsIGMPSnoopingStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSnoopingStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusEntry.setStatus("current")


class _LcsIGMPSnoopingStatusIndex_Type(Integer32):
    """Custom type lcsIGMPSnoopingStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSnoopingStatusIndex_Type.__name__ = "Integer32"
_LcsIGMPSnoopingStatusIndex_Object = MibTableColumn
lcsIGMPSnoopingStatusIndex = _LcsIGMPSnoopingStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 1),
    _LcsIGMPSnoopingStatusIndex_Type()
)
lcsIGMPSnoopingStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusIndex.setStatus("current")
_LcsIGMPSnoopingStatusVLANID_Type = Integer32
_LcsIGMPSnoopingStatusVLANID_Object = MibTableColumn
lcsIGMPSnoopingStatusVLANID = _LcsIGMPSnoopingStatusVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 2),
    _LcsIGMPSnoopingStatusVLANID_Type()
)
lcsIGMPSnoopingStatusVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusVLANID.setStatus("current")
_LcsIGMPSnoopingStatusQuerierVersion_Type = DisplayString
_LcsIGMPSnoopingStatusQuerierVersion_Object = MibTableColumn
lcsIGMPSnoopingStatusQuerierVersion = _LcsIGMPSnoopingStatusQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 3),
    _LcsIGMPSnoopingStatusQuerierVersion_Type()
)
lcsIGMPSnoopingStatusQuerierVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusQuerierVersion.setStatus("current")
_LcsIGMPSnoopingStatusHostVersion_Type = DisplayString
_LcsIGMPSnoopingStatusHostVersion_Object = MibTableColumn
lcsIGMPSnoopingStatusHostVersion = _LcsIGMPSnoopingStatusHostVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 4),
    _LcsIGMPSnoopingStatusHostVersion_Type()
)
lcsIGMPSnoopingStatusHostVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusHostVersion.setStatus("current")
_LcsIGMPSnoopingStatusQuerierStatus_Type = Integer32
_LcsIGMPSnoopingStatusQuerierStatus_Object = MibTableColumn
lcsIGMPSnoopingStatusQuerierStatus = _LcsIGMPSnoopingStatusQuerierStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 5),
    _LcsIGMPSnoopingStatusQuerierStatus_Type()
)
lcsIGMPSnoopingStatusQuerierStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusQuerierStatus.setStatus("current")
_LcsIGMPSnoopingStatusQueriesTransmitted_Type = Integer32
_LcsIGMPSnoopingStatusQueriesTransmitted_Object = MibTableColumn
lcsIGMPSnoopingStatusQueriesTransmitted = _LcsIGMPSnoopingStatusQueriesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 6),
    _LcsIGMPSnoopingStatusQueriesTransmitted_Type()
)
lcsIGMPSnoopingStatusQueriesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusQueriesTransmitted.setStatus("current")
_LcsIGMPSnoopingStatusQueriesReceived_Type = Integer32
_LcsIGMPSnoopingStatusQueriesReceived_Object = MibTableColumn
lcsIGMPSnoopingStatusQueriesReceived = _LcsIGMPSnoopingStatusQueriesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 7),
    _LcsIGMPSnoopingStatusQueriesReceived_Type()
)
lcsIGMPSnoopingStatusQueriesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusQueriesReceived.setStatus("current")
_LcsIGMPSnoopingStatusV1ReportsReceived_Type = Integer32
_LcsIGMPSnoopingStatusV1ReportsReceived_Object = MibTableColumn
lcsIGMPSnoopingStatusV1ReportsReceived = _LcsIGMPSnoopingStatusV1ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 8),
    _LcsIGMPSnoopingStatusV1ReportsReceived_Type()
)
lcsIGMPSnoopingStatusV1ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusV1ReportsReceived.setStatus("current")
_LcsIGMPSnoopingStatusV2ReportsReceived_Type = Integer32
_LcsIGMPSnoopingStatusV2ReportsReceived_Object = MibTableColumn
lcsIGMPSnoopingStatusV2ReportsReceived = _LcsIGMPSnoopingStatusV2ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 9),
    _LcsIGMPSnoopingStatusV2ReportsReceived_Type()
)
lcsIGMPSnoopingStatusV2ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusV2ReportsReceived.setStatus("current")
_LcsIGMPSnoopingStatusV3ReportsReceived_Type = Integer32
_LcsIGMPSnoopingStatusV3ReportsReceived_Object = MibTableColumn
lcsIGMPSnoopingStatusV3ReportsReceived = _LcsIGMPSnoopingStatusV3ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 10),
    _LcsIGMPSnoopingStatusV3ReportsReceived_Type()
)
lcsIGMPSnoopingStatusV3ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusV3ReportsReceived.setStatus("current")
_LcsIGMPSnoopingStatusV2LeavesReceived_Type = Integer32
_LcsIGMPSnoopingStatusV2LeavesReceived_Object = MibTableColumn
lcsIGMPSnoopingStatusV2LeavesReceived = _LcsIGMPSnoopingStatusV2LeavesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 11, 1, 11),
    _LcsIGMPSnoopingStatusV2LeavesReceived_Type()
)
lcsIGMPSnoopingStatusV2LeavesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusV2LeavesReceived.setStatus("current")
_LcsIGMPSnoopingStatusRouterPortTable_Object = MibTable
lcsIGMPSnoopingStatusRouterPortTable = _LcsIGMPSnoopingStatusRouterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 12)
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusRouterPortTable.setStatus("current")
_LcsIGMPSnoopingStatusRouterPortEntry_Object = MibTableRow
lcsIGMPSnoopingStatusRouterPortEntry = _LcsIGMPSnoopingStatusRouterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 12, 1)
)
lcsIGMPSnoopingStatusRouterPortEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSnoopingStatusRouterPortIndex"),
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusRouterPortEntry.setStatus("current")


class _LcsIGMPSnoopingStatusRouterPortIndex_Type(Integer32):
    """Custom type lcsIGMPSnoopingStatusRouterPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSnoopingStatusRouterPortIndex_Type.__name__ = "Integer32"
_LcsIGMPSnoopingStatusRouterPortIndex_Object = MibTableColumn
lcsIGMPSnoopingStatusRouterPortIndex = _LcsIGMPSnoopingStatusRouterPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 12, 1, 1),
    _LcsIGMPSnoopingStatusRouterPortIndex_Type()
)
lcsIGMPSnoopingStatusRouterPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusRouterPortIndex.setStatus("current")
_LcsIGMPSnoopingStatusRouterPortPort_Type = Integer32
_LcsIGMPSnoopingStatusRouterPortPort_Object = MibTableColumn
lcsIGMPSnoopingStatusRouterPortPort = _LcsIGMPSnoopingStatusRouterPortPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 12, 1, 2),
    _LcsIGMPSnoopingStatusRouterPortPort_Type()
)
lcsIGMPSnoopingStatusRouterPortPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingStatusRouterPortPort.setStatus("current")
_LcsIGMPSnoopingGroupInfoTable_Object = MibTable
lcsIGMPSnoopingGroupInfoTable = _LcsIGMPSnoopingGroupInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13)
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoTable.setStatus("current")
_LcsIGMPSnoopingGroupInfoEntry_Object = MibTableRow
lcsIGMPSnoopingGroupInfoEntry = _LcsIGMPSnoopingGroupInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13, 1)
)
lcsIGMPSnoopingGroupInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSnoopingGroupInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoEntry.setStatus("current")


class _LcsIGMPSnoopingGroupInfoIndex_Type(Integer32):
    """Custom type lcsIGMPSnoopingGroupInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSnoopingGroupInfoIndex_Type.__name__ = "Integer32"
_LcsIGMPSnoopingGroupInfoIndex_Object = MibTableColumn
lcsIGMPSnoopingGroupInfoIndex = _LcsIGMPSnoopingGroupInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13, 1, 1),
    _LcsIGMPSnoopingGroupInfoIndex_Type()
)
lcsIGMPSnoopingGroupInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoIndex.setStatus("current")
_LcsIGMPSnoopingGroupInfoVLANID_Type = Integer32
_LcsIGMPSnoopingGroupInfoVLANID_Object = MibTableColumn
lcsIGMPSnoopingGroupInfoVLANID = _LcsIGMPSnoopingGroupInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13, 1, 2),
    _LcsIGMPSnoopingGroupInfoVLANID_Type()
)
lcsIGMPSnoopingGroupInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoVLANID.setStatus("current")
_LcsIGMPSnoopingGroupInfoGroups_Type = IpAddress
_LcsIGMPSnoopingGroupInfoGroups_Object = MibTableColumn
lcsIGMPSnoopingGroupInfoGroups = _LcsIGMPSnoopingGroupInfoGroups_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13, 1, 3),
    _LcsIGMPSnoopingGroupInfoGroups_Type()
)
lcsIGMPSnoopingGroupInfoGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoGroups.setStatus("current")
_LcsIGMPSnoopingGroupInfoPortMembers_Type = DisplayString
_LcsIGMPSnoopingGroupInfoPortMembers_Object = MibTableColumn
lcsIGMPSnoopingGroupInfoPortMembers = _LcsIGMPSnoopingGroupInfoPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 13, 1, 4),
    _LcsIGMPSnoopingGroupInfoPortMembers_Type()
)
lcsIGMPSnoopingGroupInfoPortMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSnoopingGroupInfoPortMembers.setStatus("current")
_LcsIGMPSFMInfoTable_Object = MibTable
lcsIGMPSFMInfoTable = _LcsIGMPSFMInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14)
)
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoTable.setStatus("current")
_LcsIGMPSFMInfoEntry_Object = MibTableRow
lcsIGMPSFMInfoEntry = _LcsIGMPSFMInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1)
)
lcsIGMPSFMInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIGMPSFMInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoEntry.setStatus("current")


class _LcsIGMPSFMInfoIndex_Type(Integer32):
    """Custom type lcsIGMPSFMInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsIGMPSFMInfoIndex_Type.__name__ = "Integer32"
_LcsIGMPSFMInfoIndex_Object = MibTableColumn
lcsIGMPSFMInfoIndex = _LcsIGMPSFMInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 1),
    _LcsIGMPSFMInfoIndex_Type()
)
lcsIGMPSFMInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoIndex.setStatus("current")
_LcsIGMPSFMInfoVLANID_Type = Integer32
_LcsIGMPSFMInfoVLANID_Object = MibTableColumn
lcsIGMPSFMInfoVLANID = _LcsIGMPSFMInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 2),
    _LcsIGMPSFMInfoVLANID_Type()
)
lcsIGMPSFMInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoVLANID.setStatus("current")
_LcsIGMPSFMInfoGroup_Type = IpAddress
_LcsIGMPSFMInfoGroup_Object = MibTableColumn
lcsIGMPSFMInfoGroup = _LcsIGMPSFMInfoGroup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 3),
    _LcsIGMPSFMInfoGroup_Type()
)
lcsIGMPSFMInfoGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoGroup.setStatus("current")
_LcsIGMPSFMInfoPort_Type = Integer32
_LcsIGMPSFMInfoPort_Object = MibTableColumn
lcsIGMPSFMInfoPort = _LcsIGMPSFMInfoPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 4),
    _LcsIGMPSFMInfoPort_Type()
)
lcsIGMPSFMInfoPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoPort.setStatus("current")
_LcsIGMPSFMInfoMode_Type = Integer32
_LcsIGMPSFMInfoMode_Object = MibTableColumn
lcsIGMPSFMInfoMode = _LcsIGMPSFMInfoMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 5),
    _LcsIGMPSFMInfoMode_Type()
)
lcsIGMPSFMInfoMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoMode.setStatus("current")
_LcsIGMPSFMInfoSourceAddress_Type = DisplayString
_LcsIGMPSFMInfoSourceAddress_Object = MibTableColumn
lcsIGMPSFMInfoSourceAddress = _LcsIGMPSFMInfoSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 6),
    _LcsIGMPSFMInfoSourceAddress_Type()
)
lcsIGMPSFMInfoSourceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoSourceAddress.setStatus("current")
_LcsIGMPSFMInfoType_Type = Integer32
_LcsIGMPSFMInfoType_Object = MibTableColumn
lcsIGMPSFMInfoType = _LcsIGMPSFMInfoType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 7),
    _LcsIGMPSFMInfoType_Type()
)
lcsIGMPSFMInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoType.setStatus("current")
_LcsIGMPSFMInfoHardwareFilterSwitch_Type = Integer32
_LcsIGMPSFMInfoHardwareFilterSwitch_Object = MibTableColumn
lcsIGMPSFMInfoHardwareFilterSwitch = _LcsIGMPSFMInfoHardwareFilterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 1, 14, 1, 8),
    _LcsIGMPSFMInfoHardwareFilterSwitch_Type()
)
lcsIGMPSFMInfoHardwareFilterSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIGMPSFMInfoHardwareFilterSwitch.setStatus("current")
_LcsMLDSnooping_ObjectIdentity = ObjectIdentity
lcsMLDSnooping = _LcsMLDSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2)
)


class _LcsMLDSnoopingBasicConfigSnoopingEnabled_Type(Integer32):
    """Custom type lcsMLDSnoopingBasicConfigSnoopingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingBasicConfigSnoopingEnabled_Type.__name__ = "Integer32"
_LcsMLDSnoopingBasicConfigSnoopingEnabled_Object = MibScalar
lcsMLDSnoopingBasicConfigSnoopingEnabled = _LcsMLDSnoopingBasicConfigSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 2),
    _LcsMLDSnoopingBasicConfigSnoopingEnabled_Type()
)
lcsMLDSnoopingBasicConfigSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigSnoopingEnabled.setStatus("current")


class _LcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled_Type(Integer32):
    """Custom type lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled_Type.__name__ = "Integer32"
_LcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled_Object = MibScalar
lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled = _LcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 3),
    _LcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled_Type()
)
lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled.setStatus("current")
_LcsMLDSnoopingBasicConfigMLDSSMRange_Type = DisplayString
_LcsMLDSnoopingBasicConfigMLDSSMRange_Object = MibScalar
lcsMLDSnoopingBasicConfigMLDSSMRange = _LcsMLDSnoopingBasicConfigMLDSSMRange_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 4),
    _LcsMLDSnoopingBasicConfigMLDSSMRange_Type()
)
lcsMLDSnoopingBasicConfigMLDSSMRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigMLDSSMRange.setStatus("current")


class _LcsMLDSnoopingBasicConfigMLDSSMRangeLength_Type(Integer32):
    """Custom type lcsMLDSnoopingBasicConfigMLDSSMRangeLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 128),
    )


_LcsMLDSnoopingBasicConfigMLDSSMRangeLength_Type.__name__ = "Integer32"
_LcsMLDSnoopingBasicConfigMLDSSMRangeLength_Object = MibScalar
lcsMLDSnoopingBasicConfigMLDSSMRangeLength = _LcsMLDSnoopingBasicConfigMLDSSMRangeLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 5),
    _LcsMLDSnoopingBasicConfigMLDSSMRangeLength_Type()
)
lcsMLDSnoopingBasicConfigMLDSSMRangeLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigMLDSSMRangeLength.setStatus("current")


class _LcsMLDSnoopingBasicConfigLeaveProxyEnabled_Type(Integer32):
    """Custom type lcsMLDSnoopingBasicConfigLeaveProxyEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingBasicConfigLeaveProxyEnabled_Type.__name__ = "Integer32"
_LcsMLDSnoopingBasicConfigLeaveProxyEnabled_Object = MibScalar
lcsMLDSnoopingBasicConfigLeaveProxyEnabled = _LcsMLDSnoopingBasicConfigLeaveProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 6),
    _LcsMLDSnoopingBasicConfigLeaveProxyEnabled_Type()
)
lcsMLDSnoopingBasicConfigLeaveProxyEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigLeaveProxyEnabled.setStatus("current")


class _LcsMLDSnoopingBasicConfigProxyEnabled_Type(Integer32):
    """Custom type lcsMLDSnoopingBasicConfigProxyEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingBasicConfigProxyEnabled_Type.__name__ = "Integer32"
_LcsMLDSnoopingBasicConfigProxyEnabled_Object = MibScalar
lcsMLDSnoopingBasicConfigProxyEnabled = _LcsMLDSnoopingBasicConfigProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 7),
    _LcsMLDSnoopingBasicConfigProxyEnabled_Type()
)
lcsMLDSnoopingBasicConfigProxyEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingBasicConfigProxyEnabled.setStatus("current")
_LcsMLDSnoopingPortRelatedTable_Object = MibTable
lcsMLDSnoopingPortRelatedTable = _LcsMLDSnoopingPortRelatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8)
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortRelatedTable.setStatus("current")
_LcsMLDSnoopingPortRelatedEntry_Object = MibTableRow
lcsMLDSnoopingPortRelatedEntry = _LcsMLDSnoopingPortRelatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1)
)
lcsMLDSnoopingPortRelatedEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSnoopingPortRelatedPort"),
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortRelatedEntry.setStatus("current")


class _LcsMLDSnoopingPortRelatedPort_Type(Integer32):
    """Custom type lcsMLDSnoopingPortRelatedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSnoopingPortRelatedPort_Type.__name__ = "Integer32"
_LcsMLDSnoopingPortRelatedPort_Object = MibTableColumn
lcsMLDSnoopingPortRelatedPort = _LcsMLDSnoopingPortRelatedPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1, 1),
    _LcsMLDSnoopingPortRelatedPort_Type()
)
lcsMLDSnoopingPortRelatedPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortRelatedPort.setStatus("current")


class _LcsMLDSnoopingPortRouterPort_Type(Integer32):
    """Custom type lcsMLDSnoopingPortRouterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingPortRouterPort_Type.__name__ = "Integer32"
_LcsMLDSnoopingPortRouterPort_Object = MibTableColumn
lcsMLDSnoopingPortRouterPort = _LcsMLDSnoopingPortRouterPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1, 2),
    _LcsMLDSnoopingPortRouterPort_Type()
)
lcsMLDSnoopingPortRouterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortRouterPort.setStatus("current")


class _LcsMLDSnoopingPortFastLeave_Type(Integer32):
    """Custom type lcsMLDSnoopingPortFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingPortFastLeave_Type.__name__ = "Integer32"
_LcsMLDSnoopingPortFastLeave_Object = MibTableColumn
lcsMLDSnoopingPortFastLeave = _LcsMLDSnoopingPortFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1, 3),
    _LcsMLDSnoopingPortFastLeave_Type()
)
lcsMLDSnoopingPortFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortFastLeave.setStatus("current")


class _LcsMLDSnoopingPortThrottling_Type(Integer32):
    """Custom type lcsMLDSnoopingPortThrottling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_LcsMLDSnoopingPortThrottling_Type.__name__ = "Integer32"
_LcsMLDSnoopingPortThrottling_Object = MibTableColumn
lcsMLDSnoopingPortThrottling = _LcsMLDSnoopingPortThrottling_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1, 4),
    _LcsMLDSnoopingPortThrottling_Type()
)
lcsMLDSnoopingPortThrottling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortThrottling.setStatus("current")
_LcsMLDSnoopingPortFilteringProfile_Type = DisplayString
_LcsMLDSnoopingPortFilteringProfile_Object = MibTableColumn
lcsMLDSnoopingPortFilteringProfile = _LcsMLDSnoopingPortFilteringProfile_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 8, 1, 5),
    _LcsMLDSnoopingPortFilteringProfile_Type()
)
lcsMLDSnoopingPortFilteringProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingPortFilteringProfile.setStatus("current")
_LcsMLDSnoopingVLANConfigTable_Object = MibTable
lcsMLDSnoopingVLANConfigTable = _LcsMLDSnoopingVLANConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9)
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigTable.setStatus("current")
_LcsMLDSnoopingVLANConfigEntry_Object = MibTableRow
lcsMLDSnoopingVLANConfigEntry = _LcsMLDSnoopingVLANConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1)
)
lcsMLDSnoopingVLANConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSnoopingVLANConfigIndex"),
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigEntry.setStatus("current")


class _LcsMLDSnoopingVLANConfigIndex_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSnoopingVLANConfigIndex_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigIndex_Object = MibTableColumn
lcsMLDSnoopingVLANConfigIndex = _LcsMLDSnoopingVLANConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 1),
    _LcsMLDSnoopingVLANConfigIndex_Type()
)
lcsMLDSnoopingVLANConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigIndex.setStatus("current")
_LcsMLDSnoopingVLANConfigVLANID_Type = Integer32
_LcsMLDSnoopingVLANConfigVLANID_Object = MibTableColumn
lcsMLDSnoopingVLANConfigVLANID = _LcsMLDSnoopingVLANConfigVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 2),
    _LcsMLDSnoopingVLANConfigVLANID_Type()
)
lcsMLDSnoopingVLANConfigVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigVLANID.setStatus("current")


class _LcsMLDSnoopingVLANConfigSnoopingEnabled_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigSnoopingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingVLANConfigSnoopingEnabled_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigSnoopingEnabled_Object = MibTableColumn
lcsMLDSnoopingVLANConfigSnoopingEnabled = _LcsMLDSnoopingVLANConfigSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 3),
    _LcsMLDSnoopingVLANConfigSnoopingEnabled_Type()
)
lcsMLDSnoopingVLANConfigSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigSnoopingEnabled.setStatus("current")


class _LcsMLDSnoopingVLANConfigQuerierElection_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigQuerierElection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingVLANConfigQuerierElection_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigQuerierElection_Object = MibTableColumn
lcsMLDSnoopingVLANConfigQuerierElection = _LcsMLDSnoopingVLANConfigQuerierElection_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 4),
    _LcsMLDSnoopingVLANConfigQuerierElection_Type()
)
lcsMLDSnoopingVLANConfigQuerierElection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigQuerierElection.setStatus("current")


class _LcsMLDSnoopingVLANConfigCompatibility_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigCompatibility based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsMLDSnoopingVLANConfigCompatibility_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigCompatibility_Object = MibTableColumn
lcsMLDSnoopingVLANConfigCompatibility = _LcsMLDSnoopingVLANConfigCompatibility_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 6),
    _LcsMLDSnoopingVLANConfigCompatibility_Type()
)
lcsMLDSnoopingVLANConfigCompatibility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigCompatibility.setStatus("current")


class _LcsMLDSnoopingVLANConfigPRI_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigPRI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsMLDSnoopingVLANConfigPRI_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigPRI_Object = MibTableColumn
lcsMLDSnoopingVLANConfigPRI = _LcsMLDSnoopingVLANConfigPRI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 7),
    _LcsMLDSnoopingVLANConfigPRI_Type()
)
lcsMLDSnoopingVLANConfigPRI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigPRI.setStatus("current")


class _LcsMLDSnoopingVLANConfigRV_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigRV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsMLDSnoopingVLANConfigRV_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigRV_Object = MibTableColumn
lcsMLDSnoopingVLANConfigRV = _LcsMLDSnoopingVLANConfigRV_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 8),
    _LcsMLDSnoopingVLANConfigRV_Type()
)
lcsMLDSnoopingVLANConfigRV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigRV.setStatus("current")


class _LcsMLDSnoopingVLANConfigQI_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigQI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31744),
    )


_LcsMLDSnoopingVLANConfigQI_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigQI_Object = MibTableColumn
lcsMLDSnoopingVLANConfigQI = _LcsMLDSnoopingVLANConfigQI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 9),
    _LcsMLDSnoopingVLANConfigQI_Type()
)
lcsMLDSnoopingVLANConfigQI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigQI.setStatus("current")


class _LcsMLDSnoopingVLANConfigQRI_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigQRI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsMLDSnoopingVLANConfigQRI_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigQRI_Object = MibTableColumn
lcsMLDSnoopingVLANConfigQRI = _LcsMLDSnoopingVLANConfigQRI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 10),
    _LcsMLDSnoopingVLANConfigQRI_Type()
)
lcsMLDSnoopingVLANConfigQRI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigQRI.setStatus("current")


class _LcsMLDSnoopingVLANConfigLLQI_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigLLQI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsMLDSnoopingVLANConfigLLQI_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigLLQI_Object = MibTableColumn
lcsMLDSnoopingVLANConfigLLQI = _LcsMLDSnoopingVLANConfigLLQI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 11),
    _LcsMLDSnoopingVLANConfigLLQI_Type()
)
lcsMLDSnoopingVLANConfigLLQI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigLLQI.setStatus("current")


class _LcsMLDSnoopingVLANConfigURI_Type(Integer32):
    """Custom type lcsMLDSnoopingVLANConfigURI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsMLDSnoopingVLANConfigURI_Type.__name__ = "Integer32"
_LcsMLDSnoopingVLANConfigURI_Object = MibTableColumn
lcsMLDSnoopingVLANConfigURI = _LcsMLDSnoopingVLANConfigURI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 9, 1, 12),
    _LcsMLDSnoopingVLANConfigURI_Type()
)
lcsMLDSnoopingVLANConfigURI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingVLANConfigURI.setStatus("current")


class _LcsMLDSnoopingStatusClear_Type(Integer32):
    """Custom type lcsMLDSnoopingStatusClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsMLDSnoopingStatusClear_Type.__name__ = "Integer32"
_LcsMLDSnoopingStatusClear_Object = MibScalar
lcsMLDSnoopingStatusClear = _LcsMLDSnoopingStatusClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 10),
    _LcsMLDSnoopingStatusClear_Type()
)
lcsMLDSnoopingStatusClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusClear.setStatus("current")
_LcsMLDSnoopingStatusTable_Object = MibTable
lcsMLDSnoopingStatusTable = _LcsMLDSnoopingStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11)
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusTable.setStatus("current")
_LcsMLDSnoopingStatusEntry_Object = MibTableRow
lcsMLDSnoopingStatusEntry = _LcsMLDSnoopingStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1)
)
lcsMLDSnoopingStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSnoopingStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusEntry.setStatus("current")


class _LcsMLDSnoopingStatusIndex_Type(Integer32):
    """Custom type lcsMLDSnoopingStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSnoopingStatusIndex_Type.__name__ = "Integer32"
_LcsMLDSnoopingStatusIndex_Object = MibTableColumn
lcsMLDSnoopingStatusIndex = _LcsMLDSnoopingStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 1),
    _LcsMLDSnoopingStatusIndex_Type()
)
lcsMLDSnoopingStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusIndex.setStatus("current")
_LcsMLDSnoopingStatusVLANID_Type = Integer32
_LcsMLDSnoopingStatusVLANID_Object = MibTableColumn
lcsMLDSnoopingStatusVLANID = _LcsMLDSnoopingStatusVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 2),
    _LcsMLDSnoopingStatusVLANID_Type()
)
lcsMLDSnoopingStatusVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusVLANID.setStatus("current")
_LcsMLDSnoopingStatusQuerierVersion_Type = DisplayString
_LcsMLDSnoopingStatusQuerierVersion_Object = MibTableColumn
lcsMLDSnoopingStatusQuerierVersion = _LcsMLDSnoopingStatusQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 3),
    _LcsMLDSnoopingStatusQuerierVersion_Type()
)
lcsMLDSnoopingStatusQuerierVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusQuerierVersion.setStatus("current")
_LcsMLDSnoopingStatusHostVersion_Type = DisplayString
_LcsMLDSnoopingStatusHostVersion_Object = MibTableColumn
lcsMLDSnoopingStatusHostVersion = _LcsMLDSnoopingStatusHostVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 4),
    _LcsMLDSnoopingStatusHostVersion_Type()
)
lcsMLDSnoopingStatusHostVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusHostVersion.setStatus("current")
_LcsMLDSnoopingStatusQuerierStatus_Type = Integer32
_LcsMLDSnoopingStatusQuerierStatus_Object = MibTableColumn
lcsMLDSnoopingStatusQuerierStatus = _LcsMLDSnoopingStatusQuerierStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 5),
    _LcsMLDSnoopingStatusQuerierStatus_Type()
)
lcsMLDSnoopingStatusQuerierStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusQuerierStatus.setStatus("current")
_LcsMLDSnoopingStatusQueriesTransmitted_Type = Integer32
_LcsMLDSnoopingStatusQueriesTransmitted_Object = MibTableColumn
lcsMLDSnoopingStatusQueriesTransmitted = _LcsMLDSnoopingStatusQueriesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 6),
    _LcsMLDSnoopingStatusQueriesTransmitted_Type()
)
lcsMLDSnoopingStatusQueriesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusQueriesTransmitted.setStatus("current")
_LcsMLDSnoopingStatusQueriesReceived_Type = Integer32
_LcsMLDSnoopingStatusQueriesReceived_Object = MibTableColumn
lcsMLDSnoopingStatusQueriesReceived = _LcsMLDSnoopingStatusQueriesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 7),
    _LcsMLDSnoopingStatusQueriesReceived_Type()
)
lcsMLDSnoopingStatusQueriesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusQueriesReceived.setStatus("current")
_LcsMLDSnoopingStatusV1ReportsReceived_Type = Integer32
_LcsMLDSnoopingStatusV1ReportsReceived_Object = MibTableColumn
lcsMLDSnoopingStatusV1ReportsReceived = _LcsMLDSnoopingStatusV1ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 8),
    _LcsMLDSnoopingStatusV1ReportsReceived_Type()
)
lcsMLDSnoopingStatusV1ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusV1ReportsReceived.setStatus("current")
_LcsMLDSnoopingStatusV2ReportsReceived_Type = Integer32
_LcsMLDSnoopingStatusV2ReportsReceived_Object = MibTableColumn
lcsMLDSnoopingStatusV2ReportsReceived = _LcsMLDSnoopingStatusV2ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 9),
    _LcsMLDSnoopingStatusV2ReportsReceived_Type()
)
lcsMLDSnoopingStatusV2ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusV2ReportsReceived.setStatus("current")
_LcsMLDSnoopingStatusV1LeavesReceived_Type = Integer32
_LcsMLDSnoopingStatusV1LeavesReceived_Object = MibTableColumn
lcsMLDSnoopingStatusV1LeavesReceived = _LcsMLDSnoopingStatusV1LeavesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 11, 1, 11),
    _LcsMLDSnoopingStatusV1LeavesReceived_Type()
)
lcsMLDSnoopingStatusV1LeavesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusV1LeavesReceived.setStatus("current")
_LcsMLDSnoopingStatusRouterPortTable_Object = MibTable
lcsMLDSnoopingStatusRouterPortTable = _LcsMLDSnoopingStatusRouterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 12)
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusRouterPortTable.setStatus("current")
_LcsMLDSnoopingStatusRouterPortEntry_Object = MibTableRow
lcsMLDSnoopingStatusRouterPortEntry = _LcsMLDSnoopingStatusRouterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 12, 1)
)
lcsMLDSnoopingStatusRouterPortEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSnoopingStatusRouterPortIndex"),
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusRouterPortEntry.setStatus("current")


class _LcsMLDSnoopingStatusRouterPortIndex_Type(Integer32):
    """Custom type lcsMLDSnoopingStatusRouterPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSnoopingStatusRouterPortIndex_Type.__name__ = "Integer32"
_LcsMLDSnoopingStatusRouterPortIndex_Object = MibTableColumn
lcsMLDSnoopingStatusRouterPortIndex = _LcsMLDSnoopingStatusRouterPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 12, 1, 1),
    _LcsMLDSnoopingStatusRouterPortIndex_Type()
)
lcsMLDSnoopingStatusRouterPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusRouterPortIndex.setStatus("current")
_LcsMLDSnoopingStatusRouterPortPort_Type = Integer32
_LcsMLDSnoopingStatusRouterPortPort_Object = MibTableColumn
lcsMLDSnoopingStatusRouterPortPort = _LcsMLDSnoopingStatusRouterPortPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 12, 1, 2),
    _LcsMLDSnoopingStatusRouterPortPort_Type()
)
lcsMLDSnoopingStatusRouterPortPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingStatusRouterPortPort.setStatus("current")
_LcsMLDSnoopingGroupInfoTable_Object = MibTable
lcsMLDSnoopingGroupInfoTable = _LcsMLDSnoopingGroupInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13)
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoTable.setStatus("current")
_LcsMLDSnoopingGroupInfoEntry_Object = MibTableRow
lcsMLDSnoopingGroupInfoEntry = _LcsMLDSnoopingGroupInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13, 1)
)
lcsMLDSnoopingGroupInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSnoopingGroupInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoEntry.setStatus("current")


class _LcsMLDSnoopingGroupInfoIndex_Type(Integer32):
    """Custom type lcsMLDSnoopingGroupInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSnoopingGroupInfoIndex_Type.__name__ = "Integer32"
_LcsMLDSnoopingGroupInfoIndex_Object = MibTableColumn
lcsMLDSnoopingGroupInfoIndex = _LcsMLDSnoopingGroupInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13, 1, 1),
    _LcsMLDSnoopingGroupInfoIndex_Type()
)
lcsMLDSnoopingGroupInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoIndex.setStatus("current")
_LcsMLDSnoopingGroupInfoVLANID_Type = Integer32
_LcsMLDSnoopingGroupInfoVLANID_Object = MibTableColumn
lcsMLDSnoopingGroupInfoVLANID = _LcsMLDSnoopingGroupInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13, 1, 2),
    _LcsMLDSnoopingGroupInfoVLANID_Type()
)
lcsMLDSnoopingGroupInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoVLANID.setStatus("current")
_LcsMLDSnoopingGroupInfoGroups_Type = IpAddress
_LcsMLDSnoopingGroupInfoGroups_Object = MibTableColumn
lcsMLDSnoopingGroupInfoGroups = _LcsMLDSnoopingGroupInfoGroups_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13, 1, 3),
    _LcsMLDSnoopingGroupInfoGroups_Type()
)
lcsMLDSnoopingGroupInfoGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoGroups.setStatus("current")
_LcsMLDSnoopingGroupInfoPortMembers_Type = DisplayString
_LcsMLDSnoopingGroupInfoPortMembers_Object = MibTableColumn
lcsMLDSnoopingGroupInfoPortMembers = _LcsMLDSnoopingGroupInfoPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 13, 1, 4),
    _LcsMLDSnoopingGroupInfoPortMembers_Type()
)
lcsMLDSnoopingGroupInfoPortMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSnoopingGroupInfoPortMembers.setStatus("current")
_LcsMLDSFMInfoTable_Object = MibTable
lcsMLDSFMInfoTable = _LcsMLDSFMInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14)
)
if mibBuilder.loadTexts:
    lcsMLDSFMInfoTable.setStatus("current")
_LcsMLDSFMInfoEntry_Object = MibTableRow
lcsMLDSFMInfoEntry = _LcsMLDSFMInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1)
)
lcsMLDSFMInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMLDSFMInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsMLDSFMInfoEntry.setStatus("current")


class _LcsMLDSFMInfoIndex_Type(Integer32):
    """Custom type lcsMLDSFMInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMLDSFMInfoIndex_Type.__name__ = "Integer32"
_LcsMLDSFMInfoIndex_Object = MibTableColumn
lcsMLDSFMInfoIndex = _LcsMLDSFMInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 1),
    _LcsMLDSFMInfoIndex_Type()
)
lcsMLDSFMInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoIndex.setStatus("current")
_LcsMLDSFMInfoVLANID_Type = Integer32
_LcsMLDSFMInfoVLANID_Object = MibTableColumn
lcsMLDSFMInfoVLANID = _LcsMLDSFMInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 2),
    _LcsMLDSFMInfoVLANID_Type()
)
lcsMLDSFMInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoVLANID.setStatus("current")
_LcsMLDSFMInfoGroup_Type = IpAddress
_LcsMLDSFMInfoGroup_Object = MibTableColumn
lcsMLDSFMInfoGroup = _LcsMLDSFMInfoGroup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 3),
    _LcsMLDSFMInfoGroup_Type()
)
lcsMLDSFMInfoGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoGroup.setStatus("current")
_LcsMLDSFMInfoPort_Type = Integer32
_LcsMLDSFMInfoPort_Object = MibTableColumn
lcsMLDSFMInfoPort = _LcsMLDSFMInfoPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 4),
    _LcsMLDSFMInfoPort_Type()
)
lcsMLDSFMInfoPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoPort.setStatus("current")
_LcsMLDSFMInfoMode_Type = Integer32
_LcsMLDSFMInfoMode_Object = MibTableColumn
lcsMLDSFMInfoMode = _LcsMLDSFMInfoMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 5),
    _LcsMLDSFMInfoMode_Type()
)
lcsMLDSFMInfoMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoMode.setStatus("current")
_LcsMLDSFMInfoSourceAddress_Type = DisplayString
_LcsMLDSFMInfoSourceAddress_Object = MibTableColumn
lcsMLDSFMInfoSourceAddress = _LcsMLDSFMInfoSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 6),
    _LcsMLDSFMInfoSourceAddress_Type()
)
lcsMLDSFMInfoSourceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoSourceAddress.setStatus("current")
_LcsMLDSFMInfoType_Type = Integer32
_LcsMLDSFMInfoType_Object = MibTableColumn
lcsMLDSFMInfoType = _LcsMLDSFMInfoType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 7),
    _LcsMLDSFMInfoType_Type()
)
lcsMLDSFMInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoType.setStatus("current")
_LcsMLDSFMInfoHardwareFilterSwitch_Type = Integer32
_LcsMLDSFMInfoHardwareFilterSwitch_Object = MibTableColumn
lcsMLDSFMInfoHardwareFilterSwitch = _LcsMLDSFMInfoHardwareFilterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 32, 2, 14, 1, 8),
    _LcsMLDSFMInfoHardwareFilterSwitch_Type()
)
lcsMLDSFMInfoHardwareFilterSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMLDSFMInfoHardwareFilterSwitch.setStatus("current")
_LcsMVR_ObjectIdentity = ObjectIdentity
lcsMVR = _LcsMVR_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33)
)
_LcsMVRConfig_ObjectIdentity = ObjectIdentity
lcsMVRConfig = _LcsMVRConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1)
)
_LcsMVRConfigMVRMode_Type = Integer32
_LcsMVRConfigMVRMode_Object = MibScalar
lcsMVRConfigMVRMode = _LcsMVRConfigMVRMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 2),
    _LcsMVRConfigMVRMode_Type()
)
lcsMVRConfigMVRMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMVRConfigMVRMode.setStatus("current")
_LcsVLANInterfaceSettingTable_Object = MibTable
lcsVLANInterfaceSettingTable = _LcsVLANInterfaceSettingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3)
)
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingTable.setStatus("current")
_LcsVLANInterfaceSettingEntry_Object = MibTableRow
lcsVLANInterfaceSettingEntry = _LcsVLANInterfaceSettingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1)
)
lcsVLANInterfaceSettingEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVLANInterfaceSettingIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingEntry.setStatus("current")


class _LcsVLANInterfaceSettingIndex_Type(Integer32):
    """Custom type lcsVLANInterfaceSettingIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsVLANInterfaceSettingIndex_Type.__name__ = "Integer32"
_LcsVLANInterfaceSettingIndex_Object = MibTableColumn
lcsVLANInterfaceSettingIndex = _LcsVLANInterfaceSettingIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 1),
    _LcsVLANInterfaceSettingIndex_Type()
)
lcsVLANInterfaceSettingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingIndex.setStatus("current")
_LcsVLANInterfaceSettingMVRVID_Type = Integer32
_LcsVLANInterfaceSettingMVRVID_Object = MibTableColumn
lcsVLANInterfaceSettingMVRVID = _LcsVLANInterfaceSettingMVRVID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 2),
    _LcsVLANInterfaceSettingMVRVID_Type()
)
lcsVLANInterfaceSettingMVRVID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingMVRVID.setStatus("current")
_LcsVLANInterfaceSettingMVRName_Type = DisplayString
_LcsVLANInterfaceSettingMVRName_Object = MibTableColumn
lcsVLANInterfaceSettingMVRName = _LcsVLANInterfaceSettingMVRName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 3),
    _LcsVLANInterfaceSettingMVRName_Type()
)
lcsVLANInterfaceSettingMVRName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingMVRName.setStatus("current")
_LcsVLANInterfaceSettingIGMPAddress_Type = IpAddress
_LcsVLANInterfaceSettingIGMPAddress_Object = MibTableColumn
lcsVLANInterfaceSettingIGMPAddress = _LcsVLANInterfaceSettingIGMPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 4),
    _LcsVLANInterfaceSettingIGMPAddress_Type()
)
lcsVLANInterfaceSettingIGMPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingIGMPAddress.setStatus("current")
_LcsVLANInterfaceSettingMode_Type = Integer32
_LcsVLANInterfaceSettingMode_Object = MibTableColumn
lcsVLANInterfaceSettingMode = _LcsVLANInterfaceSettingMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 5),
    _LcsVLANInterfaceSettingMode_Type()
)
lcsVLANInterfaceSettingMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingMode.setStatus("current")
_LcsVLANInterfaceSettingTagging_Type = Integer32
_LcsVLANInterfaceSettingTagging_Object = MibTableColumn
lcsVLANInterfaceSettingTagging = _LcsVLANInterfaceSettingTagging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 6),
    _LcsVLANInterfaceSettingTagging_Type()
)
lcsVLANInterfaceSettingTagging.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingTagging.setStatus("current")


class _LcsVLANInterfaceSettingPriority_Type(Integer32):
    """Custom type lcsVLANInterfaceSettingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LcsVLANInterfaceSettingPriority_Type.__name__ = "Integer32"
_LcsVLANInterfaceSettingPriority_Object = MibTableColumn
lcsVLANInterfaceSettingPriority = _LcsVLANInterfaceSettingPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 7),
    _LcsVLANInterfaceSettingPriority_Type()
)
lcsVLANInterfaceSettingPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingPriority.setStatus("current")


class _LcsVLANInterfaceSettingLLQI_Type(Integer32):
    """Custom type lcsVLANInterfaceSettingLLQI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31744),
    )


_LcsVLANInterfaceSettingLLQI_Type.__name__ = "Integer32"
_LcsVLANInterfaceSettingLLQI_Object = MibTableColumn
lcsVLANInterfaceSettingLLQI = _LcsVLANInterfaceSettingLLQI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 8),
    _LcsVLANInterfaceSettingLLQI_Type()
)
lcsVLANInterfaceSettingLLQI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingLLQI.setStatus("current")
_LcsVLANInterfaceSettingInterfaceChannelProfile_Type = DisplayString
_LcsVLANInterfaceSettingInterfaceChannelProfile_Object = MibTableColumn
lcsVLANInterfaceSettingInterfaceChannelProfile = _LcsVLANInterfaceSettingInterfaceChannelProfile_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 9),
    _LcsVLANInterfaceSettingInterfaceChannelProfile_Type()
)
lcsVLANInterfaceSettingInterfaceChannelProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingInterfaceChannelProfile.setStatus("current")
_LcsVLANInterfaceSettingRowStatus_Type = RowStatus
_LcsVLANInterfaceSettingRowStatus_Object = MibTableColumn
lcsVLANInterfaceSettingRowStatus = _LcsVLANInterfaceSettingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 3, 1, 10),
    _LcsVLANInterfaceSettingRowStatus_Type()
)
lcsVLANInterfaceSettingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingRowStatus.setStatus("current")
_LcsMVRVIDIndex_Type = Integer32
_LcsMVRVIDIndex_Object = MibScalar
lcsMVRVIDIndex = _LcsMVRVIDIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 4),
    _LcsMVRVIDIndex_Type()
)
lcsMVRVIDIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMVRVIDIndex.setStatus("current")
_LcsVLANInterfaceSettingPortRoleTable_Object = MibTable
lcsVLANInterfaceSettingPortRoleTable = _LcsVLANInterfaceSettingPortRoleTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 5)
)
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingPortRoleTable.setStatus("current")
_LcsVLANInterfaceSettingPortRoleEntry_Object = MibTableRow
lcsVLANInterfaceSettingPortRoleEntry = _LcsVLANInterfaceSettingPortRoleEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 5, 1)
)
lcsVLANInterfaceSettingPortRoleEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsVLANInterfaceSettingPortRoleIndex"),
)
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingPortRoleEntry.setStatus("current")


class _LcsVLANInterfaceSettingPortRoleIndex_Type(Integer32):
    """Custom type lcsVLANInterfaceSettingPortRoleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsVLANInterfaceSettingPortRoleIndex_Type.__name__ = "Integer32"
_LcsVLANInterfaceSettingPortRoleIndex_Object = MibTableColumn
lcsVLANInterfaceSettingPortRoleIndex = _LcsVLANInterfaceSettingPortRoleIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 5, 1, 1),
    _LcsVLANInterfaceSettingPortRoleIndex_Type()
)
lcsVLANInterfaceSettingPortRoleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingPortRoleIndex.setStatus("current")


class _LcsVLANInterfaceSettingPortRolePort_Type(Integer32):
    """Custom type lcsVLANInterfaceSettingPortRolePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsVLANInterfaceSettingPortRolePort_Type.__name__ = "Integer32"
_LcsVLANInterfaceSettingPortRolePort_Object = MibTableColumn
lcsVLANInterfaceSettingPortRolePort = _LcsVLANInterfaceSettingPortRolePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 5, 1, 2),
    _LcsVLANInterfaceSettingPortRolePort_Type()
)
lcsVLANInterfaceSettingPortRolePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsVLANInterfaceSettingPortRolePort.setStatus("current")
_LcsImmediateLeaveSettingTable_Object = MibTable
lcsImmediateLeaveSettingTable = _LcsImmediateLeaveSettingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 6)
)
if mibBuilder.loadTexts:
    lcsImmediateLeaveSettingTable.setStatus("current")
_LcsImmediateLeaveSettingEntry_Object = MibTableRow
lcsImmediateLeaveSettingEntry = _LcsImmediateLeaveSettingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 6, 1)
)
lcsImmediateLeaveSettingEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsImmediateLeaveSettingPort"),
)
if mibBuilder.loadTexts:
    lcsImmediateLeaveSettingEntry.setStatus("current")


class _LcsImmediateLeaveSettingPort_Type(Integer32):
    """Custom type lcsImmediateLeaveSettingPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsImmediateLeaveSettingPort_Type.__name__ = "Integer32"
_LcsImmediateLeaveSettingPort_Object = MibTableColumn
lcsImmediateLeaveSettingPort = _LcsImmediateLeaveSettingPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 6, 1, 1),
    _LcsImmediateLeaveSettingPort_Type()
)
lcsImmediateLeaveSettingPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsImmediateLeaveSettingPort.setStatus("current")


class _LcsImmediateLeaveSettingImmediateLeave_Type(Integer32):
    """Custom type lcsImmediateLeaveSettingImmediateLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsImmediateLeaveSettingImmediateLeave_Type.__name__ = "Integer32"
_LcsImmediateLeaveSettingImmediateLeave_Object = MibTableColumn
lcsImmediateLeaveSettingImmediateLeave = _LcsImmediateLeaveSettingImmediateLeave_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 1, 6, 1, 2),
    _LcsImmediateLeaveSettingImmediateLeave_Type()
)
lcsImmediateLeaveSettingImmediateLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsImmediateLeaveSettingImmediateLeave.setStatus("current")
_LcsStatistics_ObjectIdentity = ObjectIdentity
lcsStatistics = _LcsStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2)
)
_LcsMVRStatisticsClear_Type = Integer32
_LcsMVRStatisticsClear_Object = MibScalar
lcsMVRStatisticsClear = _LcsMVRStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 2),
    _LcsMVRStatisticsClear_Type()
)
lcsMVRStatisticsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMVRStatisticsClear.setStatus("current")
_LcsMVRStatisticsTable_Object = MibTable
lcsMVRStatisticsTable = _LcsMVRStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3)
)
if mibBuilder.loadTexts:
    lcsMVRStatisticsTable.setStatus("current")
_LcsMVRStatisticsEntry_Object = MibTableRow
lcsMVRStatisticsEntry = _LcsMVRStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1)
)
lcsMVRStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMVRStatisticsIndex"),
)
if mibBuilder.loadTexts:
    lcsMVRStatisticsEntry.setStatus("current")


class _LcsMVRStatisticsIndex_Type(Integer32):
    """Custom type lcsMVRStatisticsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMVRStatisticsIndex_Type.__name__ = "Integer32"
_LcsMVRStatisticsIndex_Object = MibTableColumn
lcsMVRStatisticsIndex = _LcsMVRStatisticsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 1),
    _LcsMVRStatisticsIndex_Type()
)
lcsMVRStatisticsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIndex.setStatus("current")
_LcsMVRStatisticsVLANID_Type = Integer32
_LcsMVRStatisticsVLANID_Object = MibTableColumn
lcsMVRStatisticsVLANID = _LcsMVRStatisticsVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 2),
    _LcsMVRStatisticsVLANID_Type()
)
lcsMVRStatisticsVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsVLANID.setStatus("current")
_LcsMVRStatisticsIGMPMLDQueriesReceived_Type = DisplayString
_LcsMVRStatisticsIGMPMLDQueriesReceived_Object = MibTableColumn
lcsMVRStatisticsIGMPMLDQueriesReceived = _LcsMVRStatisticsIGMPMLDQueriesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 3),
    _LcsMVRStatisticsIGMPMLDQueriesReceived_Type()
)
lcsMVRStatisticsIGMPMLDQueriesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPMLDQueriesReceived.setStatus("current")
_LcsMVRStatisticsIGMPMLDQueriesTransmitted_Type = DisplayString
_LcsMVRStatisticsIGMPMLDQueriesTransmitted_Object = MibTableColumn
lcsMVRStatisticsIGMPMLDQueriesTransmitted = _LcsMVRStatisticsIGMPMLDQueriesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 4),
    _LcsMVRStatisticsIGMPMLDQueriesTransmitted_Type()
)
lcsMVRStatisticsIGMPMLDQueriesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPMLDQueriesTransmitted.setStatus("current")
_LcsMVRStatisticsIGMPv1JoinsReceived_Type = DisplayString
_LcsMVRStatisticsIGMPv1JoinsReceived_Object = MibTableColumn
lcsMVRStatisticsIGMPv1JoinsReceived = _LcsMVRStatisticsIGMPv1JoinsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 5),
    _LcsMVRStatisticsIGMPv1JoinsReceived_Type()
)
lcsMVRStatisticsIGMPv1JoinsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPv1JoinsReceived.setStatus("current")
_LcsMVRStatisticsIGMPv2MLDv1ReportsReceived_Type = DisplayString
_LcsMVRStatisticsIGMPv2MLDv1ReportsReceived_Object = MibTableColumn
lcsMVRStatisticsIGMPv2MLDv1ReportsReceived = _LcsMVRStatisticsIGMPv2MLDv1ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 6),
    _LcsMVRStatisticsIGMPv2MLDv1ReportsReceived_Type()
)
lcsMVRStatisticsIGMPv2MLDv1ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPv2MLDv1ReportsReceived.setStatus("current")
_LcsMVRStatisticsIGMPv3MLDv2ReportsReceived_Type = DisplayString
_LcsMVRStatisticsIGMPv3MLDv2ReportsReceived_Object = MibTableColumn
lcsMVRStatisticsIGMPv3MLDv2ReportsReceived = _LcsMVRStatisticsIGMPv3MLDv2ReportsReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 7),
    _LcsMVRStatisticsIGMPv3MLDv2ReportsReceived_Type()
)
lcsMVRStatisticsIGMPv3MLDv2ReportsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPv3MLDv2ReportsReceived.setStatus("current")
_LcsMVRStatisticsIGMPv2MLDv1LeavesReceived_Type = DisplayString
_LcsMVRStatisticsIGMPv2MLDv1LeavesReceived_Object = MibTableColumn
lcsMVRStatisticsIGMPv2MLDv1LeavesReceived = _LcsMVRStatisticsIGMPv2MLDv1LeavesReceived_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 2, 3, 1, 8),
    _LcsMVRStatisticsIGMPv2MLDv1LeavesReceived_Type()
)
lcsMVRStatisticsIGMPv2MLDv1LeavesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRStatisticsIGMPv2MLDv1LeavesReceived.setStatus("current")
_LcsGroupInformation_ObjectIdentity = ObjectIdentity
lcsGroupInformation = _LcsGroupInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3)
)
_LcsMVRGroupInfoTable_Object = MibTable
lcsMVRGroupInfoTable = _LcsMVRGroupInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1)
)
if mibBuilder.loadTexts:
    lcsMVRGroupInfoTable.setStatus("current")
_LcsMVRGroupInfoEntry_Object = MibTableRow
lcsMVRGroupInfoEntry = _LcsMVRGroupInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1, 1)
)
lcsMVRGroupInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMVRGroupInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsMVRGroupInfoEntry.setStatus("current")


class _LcsMVRGroupInfoIndex_Type(Integer32):
    """Custom type lcsMVRGroupInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMVRGroupInfoIndex_Type.__name__ = "Integer32"
_LcsMVRGroupInfoIndex_Object = MibTableColumn
lcsMVRGroupInfoIndex = _LcsMVRGroupInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1, 1, 1),
    _LcsMVRGroupInfoIndex_Type()
)
lcsMVRGroupInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMVRGroupInfoIndex.setStatus("current")
_LcsMVRGroupInfoVLANID_Type = Integer32
_LcsMVRGroupInfoVLANID_Object = MibTableColumn
lcsMVRGroupInfoVLANID = _LcsMVRGroupInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1, 1, 2),
    _LcsMVRGroupInfoVLANID_Type()
)
lcsMVRGroupInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRGroupInfoVLANID.setStatus("current")
_LcsMVRGroupInfoGroups_Type = DisplayString
_LcsMVRGroupInfoGroups_Object = MibTableColumn
lcsMVRGroupInfoGroups = _LcsMVRGroupInfoGroups_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1, 1, 3),
    _LcsMVRGroupInfoGroups_Type()
)
lcsMVRGroupInfoGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRGroupInfoGroups.setStatus("current")
_LcsMVRGroupInfoPortMembers_Type = DisplayString
_LcsMVRGroupInfoPortMembers_Object = MibTableColumn
lcsMVRGroupInfoPortMembers = _LcsMVRGroupInfoPortMembers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 3, 1, 1, 4),
    _LcsMVRGroupInfoPortMembers_Type()
)
lcsMVRGroupInfoPortMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRGroupInfoPortMembers.setStatus("current")
_LcsMVRSFMInformation_ObjectIdentity = ObjectIdentity
lcsMVRSFMInformation = _LcsMVRSFMInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4)
)
_LcsMVRSFMInfoTable_Object = MibTable
lcsMVRSFMInfoTable = _LcsMVRSFMInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2)
)
if mibBuilder.loadTexts:
    lcsMVRSFMInfoTable.setStatus("current")
_LcsMVRSFMInfoEntry_Object = MibTableRow
lcsMVRSFMInfoEntry = _LcsMVRSFMInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1)
)
lcsMVRSFMInfoEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMVRSFMInfoIndex"),
)
if mibBuilder.loadTexts:
    lcsMVRSFMInfoEntry.setStatus("current")


class _LcsMVRSFMInfoIndex_Type(Integer32):
    """Custom type lcsMVRSFMInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMVRSFMInfoIndex_Type.__name__ = "Integer32"
_LcsMVRSFMInfoIndex_Object = MibTableColumn
lcsMVRSFMInfoIndex = _LcsMVRSFMInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 1),
    _LcsMVRSFMInfoIndex_Type()
)
lcsMVRSFMInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoIndex.setStatus("current")
_LcsMVRSFMInfoVLANID_Type = Integer32
_LcsMVRSFMInfoVLANID_Object = MibTableColumn
lcsMVRSFMInfoVLANID = _LcsMVRSFMInfoVLANID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 2),
    _LcsMVRSFMInfoVLANID_Type()
)
lcsMVRSFMInfoVLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoVLANID.setStatus("current")
_LcsMVRSFMInfoGroup_Type = DisplayString
_LcsMVRSFMInfoGroup_Object = MibTableColumn
lcsMVRSFMInfoGroup = _LcsMVRSFMInfoGroup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 3),
    _LcsMVRSFMInfoGroup_Type()
)
lcsMVRSFMInfoGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoGroup.setStatus("current")
_LcsMVRSFMInfoPort_Type = Integer32
_LcsMVRSFMInfoPort_Object = MibTableColumn
lcsMVRSFMInfoPort = _LcsMVRSFMInfoPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 4),
    _LcsMVRSFMInfoPort_Type()
)
lcsMVRSFMInfoPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoPort.setStatus("current")
_LcsMVRSFMInfoMode_Type = Integer32
_LcsMVRSFMInfoMode_Object = MibTableColumn
lcsMVRSFMInfoMode = _LcsMVRSFMInfoMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 5),
    _LcsMVRSFMInfoMode_Type()
)
lcsMVRSFMInfoMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoMode.setStatus("current")
_LcsMVRSFMInfoSourceAddress_Type = DisplayString
_LcsMVRSFMInfoSourceAddress_Object = MibTableColumn
lcsMVRSFMInfoSourceAddress = _LcsMVRSFMInfoSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 6),
    _LcsMVRSFMInfoSourceAddress_Type()
)
lcsMVRSFMInfoSourceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoSourceAddress.setStatus("current")
_LcsMVRSFMInfoType_Type = Integer32
_LcsMVRSFMInfoType_Object = MibTableColumn
lcsMVRSFMInfoType = _LcsMVRSFMInfoType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 7),
    _LcsMVRSFMInfoType_Type()
)
lcsMVRSFMInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoType.setStatus("current")
_LcsMVRSFMInfoHardwareFilterSwitch_Type = Integer32
_LcsMVRSFMInfoHardwareFilterSwitch_Object = MibTableColumn
lcsMVRSFMInfoHardwareFilterSwitch = _LcsMVRSFMInfoHardwareFilterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 33, 4, 2, 1, 8),
    _LcsMVRSFMInfoHardwareFilterSwitch_Type()
)
lcsMVRSFMInfoHardwareFilterSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMVRSFMInfoHardwareFilterSwitch.setStatus("current")
_LcsIPMCLIB_ObjectIdentity = ObjectIdentity
lcsIPMCLIB = _LcsIPMCLIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34)
)
_LcsMulticastFilteringProfileMode_Type = Integer32
_LcsMulticastFilteringProfileMode_Object = MibScalar
lcsMulticastFilteringProfileMode = _LcsMulticastFilteringProfileMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 1),
    _LcsMulticastFilteringProfileMode_Type()
)
lcsMulticastFilteringProfileMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileMode.setStatus("current")
_LcsMulticastFilteringProfileSettingTable_Object = MibTable
lcsMulticastFilteringProfileSettingTable = _LcsMulticastFilteringProfileSettingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2)
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingTable.setStatus("current")
_LcsMulticastFilteringProfileSettingEntry_Object = MibTableRow
lcsMulticastFilteringProfileSettingEntry = _LcsMulticastFilteringProfileSettingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2, 1)
)
lcsMulticastFilteringProfileSettingEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMulticastFilteringProfileSettingIndex"),
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingEntry.setStatus("current")


class _LcsMulticastFilteringProfileSettingIndex_Type(Integer32):
    """Custom type lcsMulticastFilteringProfileSettingIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMulticastFilteringProfileSettingIndex_Type.__name__ = "Integer32"
_LcsMulticastFilteringProfileSettingIndex_Object = MibTableColumn
lcsMulticastFilteringProfileSettingIndex = _LcsMulticastFilteringProfileSettingIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2, 1, 1),
    _LcsMulticastFilteringProfileSettingIndex_Type()
)
lcsMulticastFilteringProfileSettingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingIndex.setStatus("current")
_LcsMulticastFilteringProfileSettingProfileName_Type = DisplayString
_LcsMulticastFilteringProfileSettingProfileName_Object = MibTableColumn
lcsMulticastFilteringProfileSettingProfileName = _LcsMulticastFilteringProfileSettingProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2, 1, 2),
    _LcsMulticastFilteringProfileSettingProfileName_Type()
)
lcsMulticastFilteringProfileSettingProfileName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingProfileName.setStatus("current")
_LcsMulticastFilteringProfileSettingProfileDescription_Type = DisplayString
_LcsMulticastFilteringProfileSettingProfileDescription_Object = MibTableColumn
lcsMulticastFilteringProfileSettingProfileDescription = _LcsMulticastFilteringProfileSettingProfileDescription_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2, 1, 3),
    _LcsMulticastFilteringProfileSettingProfileDescription_Type()
)
lcsMulticastFilteringProfileSettingProfileDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingProfileDescription.setStatus("current")
_LcsMulticastFilteringProfileSettingRowStatus_Type = RowStatus
_LcsMulticastFilteringProfileSettingRowStatus_Object = MibTableColumn
lcsMulticastFilteringProfileSettingRowStatus = _LcsMulticastFilteringProfileSettingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 2, 1, 4),
    _LcsMulticastFilteringProfileSettingRowStatus_Type()
)
lcsMulticastFilteringProfileSettingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileSettingRowStatus.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsProfileNameIndex_Type = DisplayString
_LcsMulticastFilteringProfileRuleSettingsProfileNameIndex_Object = MibScalar
lcsMulticastFilteringProfileRuleSettingsProfileNameIndex = _LcsMulticastFilteringProfileRuleSettingsProfileNameIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 3),
    _LcsMulticastFilteringProfileRuleSettingsProfileNameIndex_Type()
)
lcsMulticastFilteringProfileRuleSettingsProfileNameIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsProfileNameIndex.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsTable_Object = MibTable
lcsMulticastFilteringProfileRuleSettingsTable = _LcsMulticastFilteringProfileRuleSettingsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4)
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsTable.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsEntry_Object = MibTableRow
lcsMulticastFilteringProfileRuleSettingsEntry = _LcsMulticastFilteringProfileRuleSettingsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1)
)
lcsMulticastFilteringProfileRuleSettingsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMulticastFilteringProfileRuleSettingsIndex"),
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsEntry.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsTableIndex_Type = Integer32
_LcsMulticastFilteringProfileRuleSettingsTableIndex_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsTableIndex = _LcsMulticastFilteringProfileRuleSettingsTableIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 1),
    _LcsMulticastFilteringProfileRuleSettingsTableIndex_Type()
)
lcsMulticastFilteringProfileRuleSettingsTableIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsTableIndex.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsProfileName_Type = DisplayString
_LcsMulticastFilteringProfileRuleSettingsProfileName_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsProfileName = _LcsMulticastFilteringProfileRuleSettingsProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 2),
    _LcsMulticastFilteringProfileRuleSettingsProfileName_Type()
)
lcsMulticastFilteringProfileRuleSettingsProfileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsProfileName.setStatus("current")


class _LcsMulticastFilteringProfileRuleSettingsIndex_Type(Integer32):
    """Custom type lcsMulticastFilteringProfileRuleSettingsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMulticastFilteringProfileRuleSettingsIndex_Type.__name__ = "Integer32"
_LcsMulticastFilteringProfileRuleSettingsIndex_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsIndex = _LcsMulticastFilteringProfileRuleSettingsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 3),
    _LcsMulticastFilteringProfileRuleSettingsIndex_Type()
)
lcsMulticastFilteringProfileRuleSettingsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsIndex.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsEntryName_Type = DisplayString
_LcsMulticastFilteringProfileRuleSettingsEntryName_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsEntryName = _LcsMulticastFilteringProfileRuleSettingsEntryName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 4),
    _LcsMulticastFilteringProfileRuleSettingsEntryName_Type()
)
lcsMulticastFilteringProfileRuleSettingsEntryName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsEntryName.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsAddressRange_Type = DisplayString
_LcsMulticastFilteringProfileRuleSettingsAddressRange_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsAddressRange = _LcsMulticastFilteringProfileRuleSettingsAddressRange_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 5),
    _LcsMulticastFilteringProfileRuleSettingsAddressRange_Type()
)
lcsMulticastFilteringProfileRuleSettingsAddressRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsAddressRange.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsAction_Type = Integer32
_LcsMulticastFilteringProfileRuleSettingsAction_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsAction = _LcsMulticastFilteringProfileRuleSettingsAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 6),
    _LcsMulticastFilteringProfileRuleSettingsAction_Type()
)
lcsMulticastFilteringProfileRuleSettingsAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsAction.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsLog_Type = Integer32
_LcsMulticastFilteringProfileRuleSettingsLog_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsLog = _LcsMulticastFilteringProfileRuleSettingsLog_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 7),
    _LcsMulticastFilteringProfileRuleSettingsLog_Type()
)
lcsMulticastFilteringProfileRuleSettingsLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsLog.setStatus("current")
_LcsMulticastFilteringProfileRuleSettingsRowStatus_Type = RowStatus
_LcsMulticastFilteringProfileRuleSettingsRowStatus_Object = MibTableColumn
lcsMulticastFilteringProfileRuleSettingsRowStatus = _LcsMulticastFilteringProfileRuleSettingsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 4, 1, 8),
    _LcsMulticastFilteringProfileRuleSettingsRowStatus_Type()
)
lcsMulticastFilteringProfileRuleSettingsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileRuleSettingsRowStatus.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigTable_Object = MibTable
lcsMulticastFilteringProfileAddressConfigTable = _LcsMulticastFilteringProfileAddressConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5)
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigTable.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigEntry_Object = MibTableRow
lcsMulticastFilteringProfileAddressConfigEntry = _LcsMulticastFilteringProfileAddressConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1)
)
lcsMulticastFilteringProfileAddressConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsMulticastFilteringProfileAddressConfigTableIndex"),
)
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigEntry.setStatus("current")


class _LcsMulticastFilteringProfileAddressConfigTableIndex_Type(Integer32):
    """Custom type lcsMulticastFilteringProfileAddressConfigTableIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsMulticastFilteringProfileAddressConfigTableIndex_Type.__name__ = "Integer32"
_LcsMulticastFilteringProfileAddressConfigTableIndex_Object = MibTableColumn
lcsMulticastFilteringProfileAddressConfigTableIndex = _LcsMulticastFilteringProfileAddressConfigTableIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1, 1),
    _LcsMulticastFilteringProfileAddressConfigTableIndex_Type()
)
lcsMulticastFilteringProfileAddressConfigTableIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigTableIndex.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigEntryName_Type = DisplayString
_LcsMulticastFilteringProfileAddressConfigEntryName_Object = MibTableColumn
lcsMulticastFilteringProfileAddressConfigEntryName = _LcsMulticastFilteringProfileAddressConfigEntryName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1, 2),
    _LcsMulticastFilteringProfileAddressConfigEntryName_Type()
)
lcsMulticastFilteringProfileAddressConfigEntryName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigEntryName.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigStartAddress_Type = DisplayString
_LcsMulticastFilteringProfileAddressConfigStartAddress_Object = MibTableColumn
lcsMulticastFilteringProfileAddressConfigStartAddress = _LcsMulticastFilteringProfileAddressConfigStartAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1, 3),
    _LcsMulticastFilteringProfileAddressConfigStartAddress_Type()
)
lcsMulticastFilteringProfileAddressConfigStartAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigStartAddress.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigEndAddress_Type = DisplayString
_LcsMulticastFilteringProfileAddressConfigEndAddress_Object = MibTableColumn
lcsMulticastFilteringProfileAddressConfigEndAddress = _LcsMulticastFilteringProfileAddressConfigEndAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1, 4),
    _LcsMulticastFilteringProfileAddressConfigEndAddress_Type()
)
lcsMulticastFilteringProfileAddressConfigEndAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigEndAddress.setStatus("current")
_LcsMulticastFilteringProfileAddressConfigRowStatus_Type = RowStatus
_LcsMulticastFilteringProfileAddressConfigRowStatus_Object = MibTableColumn
lcsMulticastFilteringProfileAddressConfigRowStatus = _LcsMulticastFilteringProfileAddressConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 34, 5, 1, 5),
    _LcsMulticastFilteringProfileAddressConfigRowStatus_Type()
)
lcsMulticastFilteringProfileAddressConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsMulticastFilteringProfileAddressConfigRowStatus.setStatus("current")
_LcsEEE_ObjectIdentity = ObjectIdentity
lcsEEE = _LcsEEE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35)
)
_LcsPortPowerSavings_ObjectIdentity = ObjectIdentity
lcsPortPowerSavings = _LcsPortPowerSavings_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35, 1)
)
_LcsEnergyEfficientEthernetConfigTable_Object = MibTable
lcsEnergyEfficientEthernetConfigTable = _LcsEnergyEfficientEthernetConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35, 1, 2)
)
if mibBuilder.loadTexts:
    lcsEnergyEfficientEthernetConfigTable.setStatus("current")
_LcsEnergyEfficientEthernetConfigEntry_Object = MibTableRow
lcsEnergyEfficientEthernetConfigEntry = _LcsEnergyEfficientEthernetConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35, 1, 2, 1)
)
lcsEnergyEfficientEthernetConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsEnergyEfficientEthernetConfigPort"),
)
if mibBuilder.loadTexts:
    lcsEnergyEfficientEthernetConfigEntry.setStatus("current")


class _LcsEnergyEfficientEthernetConfigPort_Type(Integer32):
    """Custom type lcsEnergyEfficientEthernetConfigPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsEnergyEfficientEthernetConfigPort_Type.__name__ = "Integer32"
_LcsEnergyEfficientEthernetConfigPort_Object = MibTableColumn
lcsEnergyEfficientEthernetConfigPort = _LcsEnergyEfficientEthernetConfigPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35, 1, 2, 1, 1),
    _LcsEnergyEfficientEthernetConfigPort_Type()
)
lcsEnergyEfficientEthernetConfigPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsEnergyEfficientEthernetConfigPort.setStatus("current")
_LcsEnergyEfficientEthernetConfigPortConfig_Type = Integer32
_LcsEnergyEfficientEthernetConfigPortConfig_Object = MibTableColumn
lcsEnergyEfficientEthernetConfigPortConfig = _LcsEnergyEfficientEthernetConfigPortConfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 35, 1, 2, 1, 2),
    _LcsEnergyEfficientEthernetConfigPortConfig_Type()
)
lcsEnergyEfficientEthernetConfigPortConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsEnergyEfficientEthernetConfigPortConfig.setStatus("current")
_LcsAggregation_ObjectIdentity = ObjectIdentity
lcsAggregation = _LcsAggregation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36)
)
_LcsAggregationStatic_ObjectIdentity = ObjectIdentity
lcsAggregationStatic = _LcsAggregationStatic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1)
)


class _LcsAggrSourceMACAddress_Type(Integer32):
    """Custom type lcsAggrSourceMACAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsAggrSourceMACAddress_Type.__name__ = "Integer32"
_LcsAggrSourceMACAddress_Object = MibScalar
lcsAggrSourceMACAddress = _LcsAggrSourceMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 2),
    _LcsAggrSourceMACAddress_Type()
)
lcsAggrSourceMACAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAggrSourceMACAddress.setStatus("current")


class _LcsAggrDestinationMACAddress_Type(Integer32):
    """Custom type lcsAggrDestinationMACAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsAggrDestinationMACAddress_Type.__name__ = "Integer32"
_LcsAggrDestinationMACAddress_Object = MibScalar
lcsAggrDestinationMACAddress = _LcsAggrDestinationMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 3),
    _LcsAggrDestinationMACAddress_Type()
)
lcsAggrDestinationMACAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAggrDestinationMACAddress.setStatus("current")


class _LcsAggrIPAddress_Type(Integer32):
    """Custom type lcsAggrIPAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsAggrIPAddress_Type.__name__ = "Integer32"
_LcsAggrIPAddress_Object = MibScalar
lcsAggrIPAddress = _LcsAggrIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 4),
    _LcsAggrIPAddress_Type()
)
lcsAggrIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAggrIPAddress.setStatus("current")


class _LcsAggrTCPUDPPortNumber_Type(Integer32):
    """Custom type lcsAggrTCPUDPPortNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsAggrTCPUDPPortNumber_Type.__name__ = "Integer32"
_LcsAggrTCPUDPPortNumber_Object = MibScalar
lcsAggrTCPUDPPortNumber = _LcsAggrTCPUDPPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 5),
    _LcsAggrTCPUDPPortNumber_Type()
)
lcsAggrTCPUDPPortNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAggrTCPUDPPortNumber.setStatus("current")
_LcsAggrGroupConfigTable_Object = MibTable
lcsAggrGroupConfigTable = _LcsAggrGroupConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 6)
)
if mibBuilder.loadTexts:
    lcsAggrGroupConfigTable.setStatus("current")
_LcsAggrGroupConfigEntry_Object = MibTableRow
lcsAggrGroupConfigEntry = _LcsAggrGroupConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 6, 1)
)
lcsAggrGroupConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsAggrGroupConfigPort"),
)
if mibBuilder.loadTexts:
    lcsAggrGroupConfigEntry.setStatus("current")


class _LcsAggrGroupConfigPort_Type(Integer32):
    """Custom type lcsAggrGroupConfigPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsAggrGroupConfigPort_Type.__name__ = "Integer32"
_LcsAggrGroupConfigPort_Object = MibTableColumn
lcsAggrGroupConfigPort = _LcsAggrGroupConfigPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 6, 1, 1),
    _LcsAggrGroupConfigPort_Type()
)
lcsAggrGroupConfigPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAggrGroupConfigPort.setStatus("current")
_LcsAggrGroupConfigGroup_Type = Integer32
_LcsAggrGroupConfigGroup_Object = MibTableColumn
lcsAggrGroupConfigGroup = _LcsAggrGroupConfigGroup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 6, 1, 2),
    _LcsAggrGroupConfigGroup_Type()
)
lcsAggrGroupConfigGroup.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAggrGroupConfigGroup.setStatus("current")


class _LcsAggrGroupConfig_Type(Integer32):
    """Custom type lcsAggrGroupConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsAggrGroupConfig_Type.__name__ = "Integer32"
_LcsAggrGroupConfig_Object = MibTableColumn
lcsAggrGroupConfig = _LcsAggrGroupConfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 1, 6, 1, 3),
    _LcsAggrGroupConfig_Type()
)
lcsAggrGroupConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAggrGroupConfig.setStatus("current")
_LcsLACPConfiguration_ObjectIdentity = ObjectIdentity
lcsLACPConfiguration = _LcsLACPConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2)
)
_LcsLACPPortConfigTable_Object = MibTable
lcsLACPPortConfigTable = _LcsLACPPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1)
)
if mibBuilder.loadTexts:
    lcsLACPPortConfigTable.setStatus("current")
_LcsLACPPortConfigEntry_Object = MibTableRow
lcsLACPPortConfigEntry = _LcsLACPPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1)
)
lcsLACPPortConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLACPPortConfigPort"),
)
if mibBuilder.loadTexts:
    lcsLACPPortConfigEntry.setStatus("current")


class _LcsLACPPortConfigPort_Type(Integer32):
    """Custom type lcsLACPPortConfigPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLACPPortConfigPort_Type.__name__ = "Integer32"
_LcsLACPPortConfigPort_Object = MibTableColumn
lcsLACPPortConfigPort = _LcsLACPPortConfigPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 1),
    _LcsLACPPortConfigPort_Type()
)
lcsLACPPortConfigPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLACPPortConfigPort.setStatus("current")


class _LcsLACPPortConfigEnabled_Type(Integer32):
    """Custom type lcsLACPPortConfigEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLACPPortConfigEnabled_Type.__name__ = "Integer32"
_LcsLACPPortConfigEnabled_Object = MibTableColumn
lcsLACPPortConfigEnabled = _LcsLACPPortConfigEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 2),
    _LcsLACPPortConfigEnabled_Type()
)
lcsLACPPortConfigEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLACPPortConfigEnabled.setStatus("current")
_LcsLACPPortConfigKey_Type = Integer32
_LcsLACPPortConfigKey_Object = MibTableColumn
lcsLACPPortConfigKey = _LcsLACPPortConfigKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 3),
    _LcsLACPPortConfigKey_Type()
)
lcsLACPPortConfigKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLACPPortConfigKey.setStatus("current")


class _LcsLACPPortConfigRole_Type(Integer32):
    """Custom type lcsLACPPortConfigRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLACPPortConfigRole_Type.__name__ = "Integer32"
_LcsLACPPortConfigRole_Object = MibTableColumn
lcsLACPPortConfigRole = _LcsLACPPortConfigRole_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 4),
    _LcsLACPPortConfigRole_Type()
)
lcsLACPPortConfigRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLACPPortConfigRole.setStatus("current")


class _LcsLACPPortConfigTimeout_Type(Integer32):
    """Custom type lcsLACPPortConfigTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsLACPPortConfigTimeout_Type.__name__ = "Integer32"
_LcsLACPPortConfigTimeout_Object = MibTableColumn
lcsLACPPortConfigTimeout = _LcsLACPPortConfigTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 5),
    _LcsLACPPortConfigTimeout_Type()
)
lcsLACPPortConfigTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLACPPortConfigTimeout.setStatus("current")


class _LcsLACPPortConfigPrio_Type(Integer32):
    """Custom type lcsLACPPortConfigPrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsLACPPortConfigPrio_Type.__name__ = "Integer32"
_LcsLACPPortConfigPrio_Object = MibTableColumn
lcsLACPPortConfigPrio = _LcsLACPPortConfigPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 2, 1, 1, 6),
    _LcsLACPPortConfigPrio_Type()
)
lcsLACPPortConfigPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLACPPortConfigPrio.setStatus("current")
_LcsLacpSystemStatus_ObjectIdentity = ObjectIdentity
lcsLacpSystemStatus = _LcsLacpSystemStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3)
)
_LcsLacpSystemStatusTable_Object = MibTable
lcsLacpSystemStatusTable = _LcsLacpSystemStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1)
)
if mibBuilder.loadTexts:
    lcsLacpSystemStatusTable.setStatus("current")
_LcsLacpSystemStatusEntry_Object = MibTableRow
lcsLacpSystemStatusEntry = _LcsLacpSystemStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1)
)
lcsLacpSystemStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLacpSystemStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsLacpSystemStatusEntry.setStatus("current")


class _LcsLacpSystemStatusIndex_Type(Integer32):
    """Custom type lcsLacpSystemStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65536),
    )


_LcsLacpSystemStatusIndex_Type.__name__ = "Integer32"
_LcsLacpSystemStatusIndex_Object = MibTableColumn
lcsLacpSystemStatusIndex = _LcsLacpSystemStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 1),
    _LcsLacpSystemStatusIndex_Type()
)
lcsLacpSystemStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusIndex.setStatus("current")
_LcsLacpSystemStatusAggrID_Type = DisplayString
_LcsLacpSystemStatusAggrID_Object = MibTableColumn
lcsLacpSystemStatusAggrID = _LcsLacpSystemStatusAggrID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 2),
    _LcsLacpSystemStatusAggrID_Type()
)
lcsLacpSystemStatusAggrID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusAggrID.setStatus("current")
_LcsLacpSystemStatusPartnerSystemID_Type = DisplayString
_LcsLacpSystemStatusPartnerSystemID_Object = MibTableColumn
lcsLacpSystemStatusPartnerSystemID = _LcsLacpSystemStatusPartnerSystemID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 3),
    _LcsLacpSystemStatusPartnerSystemID_Type()
)
lcsLacpSystemStatusPartnerSystemID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusPartnerSystemID.setStatus("current")
_LcsLacpSystemStatusPartnerKey_Type = DisplayString
_LcsLacpSystemStatusPartnerKey_Object = MibTableColumn
lcsLacpSystemStatusPartnerKey = _LcsLacpSystemStatusPartnerKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 4),
    _LcsLacpSystemStatusPartnerKey_Type()
)
lcsLacpSystemStatusPartnerKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusPartnerKey.setStatus("current")
_LcsLacpSystemStatusPartnerPrio_Type = DisplayString
_LcsLacpSystemStatusPartnerPrio_Object = MibTableColumn
lcsLacpSystemStatusPartnerPrio = _LcsLacpSystemStatusPartnerPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 5),
    _LcsLacpSystemStatusPartnerPrio_Type()
)
lcsLacpSystemStatusPartnerPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusPartnerPrio.setStatus("current")
_LcsLacpSystemStatusLastChanged_Type = DisplayString
_LcsLacpSystemStatusLastChanged_Object = MibTableColumn
lcsLacpSystemStatusLastChanged = _LcsLacpSystemStatusLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 6),
    _LcsLacpSystemStatusLastChanged_Type()
)
lcsLacpSystemStatusLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusLastChanged.setStatus("current")
_LcsLacpSystemStatusLocalPorts_Type = DisplayString
_LcsLacpSystemStatusLocalPorts_Object = MibTableColumn
lcsLacpSystemStatusLocalPorts = _LcsLacpSystemStatusLocalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 3, 1, 1, 7),
    _LcsLacpSystemStatusLocalPorts_Type()
)
lcsLacpSystemStatusLocalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLacpSystemStatusLocalPorts.setStatus("current")
_LcsLACPInternalPortStatus_ObjectIdentity = ObjectIdentity
lcsLACPInternalPortStatus = _LcsLACPInternalPortStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4)
)
_LcsLACPInternalPortStatusTable_Object = MibTable
lcsLACPInternalPortStatusTable = _LcsLACPInternalPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1)
)
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusTable.setStatus("current")
_LcsLACPInternalPortStatusEntry_Object = MibTableRow
lcsLACPInternalPortStatusEntry = _LcsLACPInternalPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1)
)
lcsLACPInternalPortStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLACPInternalPortStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusEntry.setStatus("current")


class _LcsLACPInternalPortStatusIndex_Type(Integer32):
    """Custom type lcsLACPInternalPortStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLACPInternalPortStatusIndex_Type.__name__ = "Integer32"
_LcsLACPInternalPortStatusIndex_Object = MibTableColumn
lcsLACPInternalPortStatusIndex = _LcsLACPInternalPortStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 1),
    _LcsLACPInternalPortStatusIndex_Type()
)
lcsLACPInternalPortStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusIndex.setStatus("current")
_LcsLACPInternalPortStatusPort_Type = DisplayString
_LcsLACPInternalPortStatusPort_Object = MibTableColumn
lcsLACPInternalPortStatusPort = _LcsLACPInternalPortStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 2),
    _LcsLACPInternalPortStatusPort_Type()
)
lcsLACPInternalPortStatusPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusPort.setStatus("current")
_LcsLACPInternalPortStatusState_Type = DisplayString
_LcsLACPInternalPortStatusState_Object = MibTableColumn
lcsLACPInternalPortStatusState = _LcsLACPInternalPortStatusState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 3),
    _LcsLACPInternalPortStatusState_Type()
)
lcsLACPInternalPortStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusState.setStatus("current")
_LcsLACPInternalPortStatusKey_Type = DisplayString
_LcsLACPInternalPortStatusKey_Object = MibTableColumn
lcsLACPInternalPortStatusKey = _LcsLACPInternalPortStatusKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 4),
    _LcsLACPInternalPortStatusKey_Type()
)
lcsLACPInternalPortStatusKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusKey.setStatus("current")
_LcsLACPInternalPortStatusPriority_Type = DisplayString
_LcsLACPInternalPortStatusPriority_Object = MibTableColumn
lcsLACPInternalPortStatusPriority = _LcsLACPInternalPortStatusPriority_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 5),
    _LcsLACPInternalPortStatusPriority_Type()
)
lcsLACPInternalPortStatusPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusPriority.setStatus("current")
_LcsLACPInternalPortStatusActivity_Type = DisplayString
_LcsLACPInternalPortStatusActivity_Object = MibTableColumn
lcsLACPInternalPortStatusActivity = _LcsLACPInternalPortStatusActivity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 6),
    _LcsLACPInternalPortStatusActivity_Type()
)
lcsLACPInternalPortStatusActivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusActivity.setStatus("current")
_LcsLACPInternalPortStatusTimeout_Type = DisplayString
_LcsLACPInternalPortStatusTimeout_Object = MibTableColumn
lcsLACPInternalPortStatusTimeout = _LcsLACPInternalPortStatusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 7),
    _LcsLACPInternalPortStatusTimeout_Type()
)
lcsLACPInternalPortStatusTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusTimeout.setStatus("current")
_LcsLACPInternalPortStatusAggregation_Type = DisplayString
_LcsLACPInternalPortStatusAggregation_Object = MibTableColumn
lcsLACPInternalPortStatusAggregation = _LcsLACPInternalPortStatusAggregation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 8),
    _LcsLACPInternalPortStatusAggregation_Type()
)
lcsLACPInternalPortStatusAggregation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusAggregation.setStatus("current")
_LcsLACPInternalPortStatusSynchronization_Type = DisplayString
_LcsLACPInternalPortStatusSynchronization_Object = MibTableColumn
lcsLACPInternalPortStatusSynchronization = _LcsLACPInternalPortStatusSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 9),
    _LcsLACPInternalPortStatusSynchronization_Type()
)
lcsLACPInternalPortStatusSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusSynchronization.setStatus("current")
_LcsLACPInternalPortStatusCollecting_Type = DisplayString
_LcsLACPInternalPortStatusCollecting_Object = MibTableColumn
lcsLACPInternalPortStatusCollecting = _LcsLACPInternalPortStatusCollecting_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 10),
    _LcsLACPInternalPortStatusCollecting_Type()
)
lcsLACPInternalPortStatusCollecting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusCollecting.setStatus("current")
_LcsLACPInternalPortStatusDistributing_Type = DisplayString
_LcsLACPInternalPortStatusDistributing_Object = MibTableColumn
lcsLACPInternalPortStatusDistributing = _LcsLACPInternalPortStatusDistributing_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 11),
    _LcsLACPInternalPortStatusDistributing_Type()
)
lcsLACPInternalPortStatusDistributing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusDistributing.setStatus("current")
_LcsLACPInternalPortStatusDefaulted_Type = DisplayString
_LcsLACPInternalPortStatusDefaulted_Object = MibTableColumn
lcsLACPInternalPortStatusDefaulted = _LcsLACPInternalPortStatusDefaulted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 12),
    _LcsLACPInternalPortStatusDefaulted_Type()
)
lcsLACPInternalPortStatusDefaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusDefaulted.setStatus("current")
_LcsLACPInternalPortStatusExpired_Type = DisplayString
_LcsLACPInternalPortStatusExpired_Object = MibTableColumn
lcsLACPInternalPortStatusExpired = _LcsLACPInternalPortStatusExpired_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 4, 1, 1, 13),
    _LcsLACPInternalPortStatusExpired_Type()
)
lcsLACPInternalPortStatusExpired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPInternalPortStatusExpired.setStatus("current")
_LcsLACPNeighborPortStatus_ObjectIdentity = ObjectIdentity
lcsLACPNeighborPortStatus = _LcsLACPNeighborPortStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5)
)
_LcsLACPNeighborPortStatusTable_Object = MibTable
lcsLACPNeighborPortStatusTable = _LcsLACPNeighborPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1)
)
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusTable.setStatus("current")
_LcsLACPNeighborPortStatusEntry_Object = MibTableRow
lcsLACPNeighborPortStatusEntry = _LcsLACPNeighborPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1)
)
lcsLACPNeighborPortStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLACPNeighborPortStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusEntry.setStatus("current")


class _LcsLACPNeighborPortStatusIndex_Type(Integer32):
    """Custom type lcsLACPNeighborPortStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLACPNeighborPortStatusIndex_Type.__name__ = "Integer32"
_LcsLACPNeighborPortStatusIndex_Object = MibTableColumn
lcsLACPNeighborPortStatusIndex = _LcsLACPNeighborPortStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 1),
    _LcsLACPNeighborPortStatusIndex_Type()
)
lcsLACPNeighborPortStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusIndex.setStatus("current")
_LcsLACPNeighborPortStatusPort_Type = DisplayString
_LcsLACPNeighborPortStatusPort_Object = MibTableColumn
lcsLACPNeighborPortStatusPort = _LcsLACPNeighborPortStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 2),
    _LcsLACPNeighborPortStatusPort_Type()
)
lcsLACPNeighborPortStatusPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusPort.setStatus("current")
_LcsLACPNeighborPortStatusState_Type = DisplayString
_LcsLACPNeighborPortStatusState_Object = MibTableColumn
lcsLACPNeighborPortStatusState = _LcsLACPNeighborPortStatusState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 3),
    _LcsLACPNeighborPortStatusState_Type()
)
lcsLACPNeighborPortStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusState.setStatus("current")
_LcsLACPNeighborPortStatusAggrID_Type = DisplayString
_LcsLACPNeighborPortStatusAggrID_Object = MibTableColumn
lcsLACPNeighborPortStatusAggrID = _LcsLACPNeighborPortStatusAggrID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 4),
    _LcsLACPNeighborPortStatusAggrID_Type()
)
lcsLACPNeighborPortStatusAggrID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusAggrID.setStatus("current")
_LcsLACPNeighborPortStatusPartnerKey_Type = DisplayString
_LcsLACPNeighborPortStatusPartnerKey_Object = MibTableColumn
lcsLACPNeighborPortStatusPartnerKey = _LcsLACPNeighborPortStatusPartnerKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 5),
    _LcsLACPNeighborPortStatusPartnerKey_Type()
)
lcsLACPNeighborPortStatusPartnerKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusPartnerKey.setStatus("current")
_LcsLACPNeighborPortStatusPartnerPort_Type = DisplayString
_LcsLACPNeighborPortStatusPartnerPort_Object = MibTableColumn
lcsLACPNeighborPortStatusPartnerPort = _LcsLACPNeighborPortStatusPartnerPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 6),
    _LcsLACPNeighborPortStatusPartnerPort_Type()
)
lcsLACPNeighborPortStatusPartnerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusPartnerPort.setStatus("current")
_LcsLACPNeighborPortStatusPartnerPortPrio_Type = DisplayString
_LcsLACPNeighborPortStatusPartnerPortPrio_Object = MibTableColumn
lcsLACPNeighborPortStatusPartnerPortPrio = _LcsLACPNeighborPortStatusPartnerPortPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 7),
    _LcsLACPNeighborPortStatusPartnerPortPrio_Type()
)
lcsLACPNeighborPortStatusPartnerPortPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusPartnerPortPrio.setStatus("current")
_LcsLACPNeighborPortStatusActivity_Type = DisplayString
_LcsLACPNeighborPortStatusActivity_Object = MibTableColumn
lcsLACPNeighborPortStatusActivity = _LcsLACPNeighborPortStatusActivity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 8),
    _LcsLACPNeighborPortStatusActivity_Type()
)
lcsLACPNeighborPortStatusActivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusActivity.setStatus("current")
_LcsLACPNeighborPortStatusTimeout_Type = DisplayString
_LcsLACPNeighborPortStatusTimeout_Object = MibTableColumn
lcsLACPNeighborPortStatusTimeout = _LcsLACPNeighborPortStatusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 9),
    _LcsLACPNeighborPortStatusTimeout_Type()
)
lcsLACPNeighborPortStatusTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusTimeout.setStatus("current")
_LcsLACPNeighborPortStatusAggregation_Type = DisplayString
_LcsLACPNeighborPortStatusAggregation_Object = MibTableColumn
lcsLACPNeighborPortStatusAggregation = _LcsLACPNeighborPortStatusAggregation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 10),
    _LcsLACPNeighborPortStatusAggregation_Type()
)
lcsLACPNeighborPortStatusAggregation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusAggregation.setStatus("current")
_LcsLACPNeighborPortStatusSynchronization_Type = DisplayString
_LcsLACPNeighborPortStatusSynchronization_Object = MibTableColumn
lcsLACPNeighborPortStatusSynchronization = _LcsLACPNeighborPortStatusSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 11),
    _LcsLACPNeighborPortStatusSynchronization_Type()
)
lcsLACPNeighborPortStatusSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusSynchronization.setStatus("current")
_LcsLACPNeighborPortStatusCollecting_Type = DisplayString
_LcsLACPNeighborPortStatusCollecting_Object = MibTableColumn
lcsLACPNeighborPortStatusCollecting = _LcsLACPNeighborPortStatusCollecting_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 12),
    _LcsLACPNeighborPortStatusCollecting_Type()
)
lcsLACPNeighborPortStatusCollecting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusCollecting.setStatus("current")
_LcsLACPNeighborPortStatusDistributing_Type = DisplayString
_LcsLACPNeighborPortStatusDistributing_Object = MibTableColumn
lcsLACPNeighborPortStatusDistributing = _LcsLACPNeighborPortStatusDistributing_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 13),
    _LcsLACPNeighborPortStatusDistributing_Type()
)
lcsLACPNeighborPortStatusDistributing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusDistributing.setStatus("current")
_LcsLACPNeighborPortStatusDefaulted_Type = DisplayString
_LcsLACPNeighborPortStatusDefaulted_Object = MibTableColumn
lcsLACPNeighborPortStatusDefaulted = _LcsLACPNeighborPortStatusDefaulted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 14),
    _LcsLACPNeighborPortStatusDefaulted_Type()
)
lcsLACPNeighborPortStatusDefaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusDefaulted.setStatus("current")
_LcsLACPNeighborPortStatusExpired_Type = DisplayString
_LcsLACPNeighborPortStatusExpired_Object = MibTableColumn
lcsLACPNeighborPortStatusExpired = _LcsLACPNeighborPortStatusExpired_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 5, 1, 1, 15),
    _LcsLACPNeighborPortStatusExpired_Type()
)
lcsLACPNeighborPortStatusExpired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPNeighborPortStatusExpired.setStatus("current")
_LcsLACPStatus_ObjectIdentity = ObjectIdentity
lcsLACPStatus = _LcsLACPStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6)
)
_LcsLACPStatusTable_Object = MibTable
lcsLACPStatusTable = _LcsLACPStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1)
)
if mibBuilder.loadTexts:
    lcsLACPStatusTable.setStatus("current")
_LcsLACPStatusEntry_Object = MibTableRow
lcsLACPStatusEntry = _LcsLACPStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1)
)
lcsLACPStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLACPStatusPort"),
)
if mibBuilder.loadTexts:
    lcsLACPStatusEntry.setStatus("current")


class _LcsLACPStatusPort_Type(Integer32):
    """Custom type lcsLACPStatusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsLACPStatusPort_Type.__name__ = "Integer32"
_LcsLACPStatusPort_Object = MibTableColumn
lcsLACPStatusPort = _LcsLACPStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 1),
    _LcsLACPStatusPort_Type()
)
lcsLACPStatusPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLACPStatusPort.setStatus("current")
_LcsLACPStatusLACP_Type = DisplayString
_LcsLACPStatusLACP_Object = MibTableColumn
lcsLACPStatusLACP = _LcsLACPStatusLACP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 2),
    _LcsLACPStatusLACP_Type()
)
lcsLACPStatusLACP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusLACP.setStatus("current")
_LcsLACPStatusKey_Type = DisplayString
_LcsLACPStatusKey_Object = MibTableColumn
lcsLACPStatusKey = _LcsLACPStatusKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 3),
    _LcsLACPStatusKey_Type()
)
lcsLACPStatusKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusKey.setStatus("current")
_LcsLACPStatusAggrID_Type = DisplayString
_LcsLACPStatusAggrID_Object = MibTableColumn
lcsLACPStatusAggrID = _LcsLACPStatusAggrID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 4),
    _LcsLACPStatusAggrID_Type()
)
lcsLACPStatusAggrID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusAggrID.setStatus("current")
_LcsLACPStatusPartnerSystemID_Type = DisplayString
_LcsLACPStatusPartnerSystemID_Object = MibTableColumn
lcsLACPStatusPartnerSystemID = _LcsLACPStatusPartnerSystemID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 5),
    _LcsLACPStatusPartnerSystemID_Type()
)
lcsLACPStatusPartnerSystemID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusPartnerSystemID.setStatus("current")
_LcsLACPStatusPartnerPort_Type = DisplayString
_LcsLACPStatusPartnerPort_Object = MibTableColumn
lcsLACPStatusPartnerPort = _LcsLACPStatusPartnerPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 6),
    _LcsLACPStatusPartnerPort_Type()
)
lcsLACPStatusPartnerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusPartnerPort.setStatus("current")
_LcsLACPStatusPartnerPrio_Type = DisplayString
_LcsLACPStatusPartnerPrio_Object = MibTableColumn
lcsLACPStatusPartnerPrio = _LcsLACPStatusPartnerPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 36, 6, 1, 1, 7),
    _LcsLACPStatusPartnerPrio_Type()
)
lcsLACPStatusPartnerPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLACPStatusPartnerPrio.setStatus("current")
_LcsLMC_ObjectIdentity = ObjectIdentity
lcsLMC = _LcsLMC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500)
)
_LcsLMCOperating_Type = Integer32
_LcsLMCOperating_Object = MibScalar
lcsLMCOperating = _LcsLMCOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 1),
    _LcsLMCOperating_Type()
)
lcsLMCOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCOperating.setStatus("current")
_LcsLMCConfigViaDHCP_Type = Integer32
_LcsLMCConfigViaDHCP_Object = MibScalar
lcsLMCConfigViaDHCP = _LcsLMCConfigViaDHCP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 2),
    _LcsLMCConfigViaDHCP_Type()
)
lcsLMCConfigViaDHCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCConfigViaDHCP.setStatus("current")
_LcsLMCDomain_Type = DisplayString
_LcsLMCDomain_Object = MibScalar
lcsLMCDomain = _LcsLMCDomain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 3),
    _LcsLMCDomain_Type()
)
lcsLMCDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCDomain.setStatus("current")
_LcsLMCAutoRenew_Type = Integer32
_LcsLMCAutoRenew_Object = MibScalar
lcsLMCAutoRenew = _LcsLMCAutoRenew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 4),
    _LcsLMCAutoRenew_Type()
)
lcsLMCAutoRenew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCAutoRenew.setStatus("current")
_LcsLMCRolloutProjectID_Type = DisplayString
_LcsLMCRolloutProjectID_Object = MibScalar
lcsLMCRolloutProjectID = _LcsLMCRolloutProjectID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 5),
    _LcsLMCRolloutProjectID_Type()
)
lcsLMCRolloutProjectID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCRolloutProjectID.setStatus("current")
_LcsLMCRolloutLocationID_Type = DisplayString
_LcsLMCRolloutLocationID_Object = MibScalar
lcsLMCRolloutLocationID = _LcsLMCRolloutLocationID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 6),
    _LcsLMCRolloutLocationID_Type()
)
lcsLMCRolloutLocationID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCRolloutLocationID.setStatus("current")
_LcsLMCRolloutRole_Type = DisplayString
_LcsLMCRolloutRole_Object = MibScalar
lcsLMCRolloutRole = _LcsLMCRolloutRole_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 7),
    _LcsLMCRolloutRole_Type()
)
lcsLMCRolloutRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsLMCRolloutRole.setStatus("current")
_LcsLMCZeroTouchSupport_Type = Integer32
_LcsLMCZeroTouchSupport_Object = MibScalar
lcsLMCZeroTouchSupport = _LcsLMCZeroTouchSupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 50),
    _LcsLMCZeroTouchSupport_Type()
)
lcsLMCZeroTouchSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCZeroTouchSupport.setStatus("current")
_LcsLMCPairingTokenPresent_Type = Integer32
_LcsLMCPairingTokenPresent_Object = MibScalar
lcsLMCPairingTokenPresent = _LcsLMCPairingTokenPresent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 51),
    _LcsLMCPairingTokenPresent_Type()
)
lcsLMCPairingTokenPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCPairingTokenPresent.setStatus("current")
_LcsLMCManagementStatus_Type = Integer32
_LcsLMCManagementStatus_Object = MibScalar
lcsLMCManagementStatus = _LcsLMCManagementStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 53),
    _LcsLMCManagementStatus_Type()
)
lcsLMCManagementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCManagementStatus.setStatus("current")
_LcsLMCControlStatus_Type = Integer32
_LcsLMCControlStatus_Object = MibScalar
lcsLMCControlStatus = _LcsLMCControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 54),
    _LcsLMCControlStatus_Type()
)
lcsLMCControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCControlStatus.setStatus("current")
_LcsLMCMonitoringStatus_Type = Integer32
_LcsLMCMonitoringStatus_Object = MibScalar
lcsLMCMonitoringStatus = _LcsLMCMonitoringStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 55),
    _LcsLMCMonitoringStatus_Type()
)
lcsLMCMonitoringStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCMonitoringStatus.setStatus("current")
_LcsLMCConfigModified_Type = Integer32
_LcsLMCConfigModified_Object = MibScalar
lcsLMCConfigModified = _LcsLMCConfigModified_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 57),
    _LcsLMCConfigModified_Type()
)
lcsLMCConfigModified.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCConfigModified.setStatus("current")
_LcsLMCDeviceID_Type = DisplayString
_LcsLMCDeviceID_Object = MibScalar
lcsLMCDeviceID = _LcsLMCDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 58),
    _LcsLMCDeviceID_Type()
)
lcsLMCDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCDeviceID.setStatus("current")
_LcsLMCStatusRTT_Type = Integer32
_LcsLMCStatusRTT_Object = MibScalar
lcsLMCStatusRTT = _LcsLMCStatusRTT_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 100),
    _LcsLMCStatusRTT_Type()
)
lcsLMCStatusRTT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCStatusRTT.setStatus("current")
_LcsLMCTransportStatusTable_Object = MibTable
lcsLMCTransportStatusTable = _LcsLMCTransportStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101)
)
if mibBuilder.loadTexts:
    lcsLMCTransportStatusTable.setStatus("current")
_LcsLMCTransportStatusTableEntry_Object = MibTableRow
lcsLMCTransportStatusTableEntry = _LcsLMCTransportStatusTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1)
)
lcsLMCTransportStatusTableEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsLMCTransportStatusTransportNumberIndex"),
)
if mibBuilder.loadTexts:
    lcsLMCTransportStatusTableEntry.setStatus("current")
_LcsLMCTransportStatusTransportNumberIndex_Type = Integer32
_LcsLMCTransportStatusTransportNumberIndex_Object = MibTableColumn
lcsLMCTransportStatusTransportNumberIndex = _LcsLMCTransportStatusTransportNumberIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 1),
    _LcsLMCTransportStatusTransportNumberIndex_Type()
)
lcsLMCTransportStatusTransportNumberIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusTransportNumberIndex.setStatus("current")
_LcsLMCTransportStatusServiceName_Type = DisplayString
_LcsLMCTransportStatusServiceName_Object = MibTableColumn
lcsLMCTransportStatusServiceName = _LcsLMCTransportStatusServiceName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 2),
    _LcsLMCTransportStatusServiceName_Type()
)
lcsLMCTransportStatusServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusServiceName.setStatus("current")
_LcsLMCTransportStatusHttpRequests_Type = Counter64
_LcsLMCTransportStatusHttpRequests_Object = MibTableColumn
lcsLMCTransportStatusHttpRequests = _LcsLMCTransportStatusHttpRequests_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 3),
    _LcsLMCTransportStatusHttpRequests_Type()
)
lcsLMCTransportStatusHttpRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusHttpRequests.setStatus("current")
_LcsLMCTransportStatusHttpRequestsErrors_Type = Counter64
_LcsLMCTransportStatusHttpRequestsErrors_Object = MibTableColumn
lcsLMCTransportStatusHttpRequestsErrors = _LcsLMCTransportStatusHttpRequestsErrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 4),
    _LcsLMCTransportStatusHttpRequestsErrors_Type()
)
lcsLMCTransportStatusHttpRequestsErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusHttpRequestsErrors.setStatus("current")
_LcsLMCTransportStatusTXBytes_Type = Counter64
_LcsLMCTransportStatusTXBytes_Object = MibTableColumn
lcsLMCTransportStatusTXBytes = _LcsLMCTransportStatusTXBytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 5),
    _LcsLMCTransportStatusTXBytes_Type()
)
lcsLMCTransportStatusTXBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusTXBytes.setStatus("current")
_LcsLMCTransportStatusRXBytes_Type = Counter64
_LcsLMCTransportStatusRXBytes_Object = MibTableColumn
lcsLMCTransportStatusRXBytes = _LcsLMCTransportStatusRXBytes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1500, 101, 1, 7),
    _LcsLMCTransportStatusRXBytes_Type()
)
lcsLMCTransportStatusRXBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsLMCTransportStatusRXBytes.setStatus("current")
_LcsRolloutAgent_ObjectIdentity = ObjectIdentity
lcsRolloutAgent = _LcsRolloutAgent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501)
)
_LcsRolloutAgentOperating_Type = Integer32
_LcsRolloutAgentOperating_Object = MibScalar
lcsRolloutAgentOperating = _LcsRolloutAgentOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 1),
    _LcsRolloutAgentOperating_Type()
)
lcsRolloutAgentOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRolloutAgentOperating.setStatus("current")
_LcsRolloutAgentActive_Type = Integer32
_LcsRolloutAgentActive_Object = MibScalar
lcsRolloutAgentActive = _LcsRolloutAgentActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 100),
    _LcsRolloutAgentActive_Type()
)
lcsRolloutAgentActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentActive.setStatus("current")
_LcsRolloutAgentLastRequestStatus_Type = Integer32
_LcsRolloutAgentLastRequestStatus_Object = MibScalar
lcsRolloutAgentLastRequestStatus = _LcsRolloutAgentLastRequestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 101),
    _LcsRolloutAgentLastRequestStatus_Type()
)
lcsRolloutAgentLastRequestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentLastRequestStatus.setStatus("current")
_LcsRolloutAgentLastRequestTimestamp_Type = Counter64
_LcsRolloutAgentLastRequestTimestamp_Object = MibScalar
lcsRolloutAgentLastRequestTimestamp = _LcsRolloutAgentLastRequestTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 102),
    _LcsRolloutAgentLastRequestTimestamp_Type()
)
lcsRolloutAgentLastRequestTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentLastRequestTimestamp.setStatus("current")
_LcsRolloutAgentActiveHeartbeatUrl_Type = DisplayString
_LcsRolloutAgentActiveHeartbeatUrl_Object = MibScalar
lcsRolloutAgentActiveHeartbeatUrl = _LcsRolloutAgentActiveHeartbeatUrl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 103),
    _LcsRolloutAgentActiveHeartbeatUrl_Type()
)
lcsRolloutAgentActiveHeartbeatUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentActiveHeartbeatUrl.setStatus("current")
_LcsRolloutAgentActiveProjectId_Type = DisplayString
_LcsRolloutAgentActiveProjectId_Object = MibScalar
lcsRolloutAgentActiveProjectId = _LcsRolloutAgentActiveProjectId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 104),
    _LcsRolloutAgentActiveProjectId_Type()
)
lcsRolloutAgentActiveProjectId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentActiveProjectId.setStatus("current")
_LcsRolloutAgentActiveLocationId_Type = DisplayString
_LcsRolloutAgentActiveLocationId_Object = MibScalar
lcsRolloutAgentActiveLocationId = _LcsRolloutAgentActiveLocationId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 105),
    _LcsRolloutAgentActiveLocationId_Type()
)
lcsRolloutAgentActiveLocationId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentActiveLocationId.setStatus("current")
_LcsRolloutAgentActiveTan_Type = DisplayString
_LcsRolloutAgentActiveTan_Object = MibScalar
lcsRolloutAgentActiveTan = _LcsRolloutAgentActiveTan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 1501, 106),
    _LcsRolloutAgentActiveTan_Type()
)
lcsRolloutAgentActiveTan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsRolloutAgentActiveTan.setStatus("current")
_LcsSecurity_ObjectIdentity = ObjectIdentity
lcsSecurity = _LcsSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3)
)
_LcsIPSourceGuard_ObjectIdentity = ObjectIdentity
lcsIPSourceGuard = _LcsIPSourceGuard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1)
)
_LcsIPSourceGuardConf_ObjectIdentity = ObjectIdentity
lcsIPSourceGuardConf = _LcsIPSourceGuardConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1)
)
_LcsIPSourceGuardMode_Type = AdminMode
_LcsIPSourceGuardMode_Object = MibScalar
lcsIPSourceGuardMode = _LcsIPSourceGuardMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 1),
    _LcsIPSourceGuardMode_Type()
)
lcsIPSourceGuardMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPSourceGuardMode.setStatus("current")


class _LcsIPSourceGuardDynamicToStaticCmd_Type(ActivateCmd):
    """Custom type lcsIPSourceGuardDynamicToStaticCmd based on ActivateCmd"""
    defaultValue = 0


_LcsIPSourceGuardDynamicToStaticCmd_Type.__name__ = "ActivateCmd"
_LcsIPSourceGuardDynamicToStaticCmd_Object = MibScalar
lcsIPSourceGuardDynamicToStaticCmd = _LcsIPSourceGuardDynamicToStaticCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 2),
    _LcsIPSourceGuardDynamicToStaticCmd_Type()
)
lcsIPSourceGuardDynamicToStaticCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicToStaticCmd.setStatus("current")
_LcsIPSourceGuardPortConfigTable_Object = MibTable
lcsIPSourceGuardPortConfigTable = _LcsIPSourceGuardPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 3)
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardPortConfigTable.setStatus("current")
_LcsIPSourceGuardPortConfigEntry_Object = MibTableRow
lcsIPSourceGuardPortConfigEntry = _LcsIPSourceGuardPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 3, 1)
)
lcsIPSourceGuardPortConfigEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardPortConfigEntry.setStatus("current")
_LcsIPSourceGuardPortConfigMode_Type = AdminMode
_LcsIPSourceGuardPortConfigMode_Object = MibTableColumn
lcsIPSourceGuardPortConfigMode = _LcsIPSourceGuardPortConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 3, 1, 2),
    _LcsIPSourceGuardPortConfigMode_Type()
)
lcsIPSourceGuardPortConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPSourceGuardPortConfigMode.setStatus("current")


class _LcsIPSourceGuardPortMaxDynamicClients_Type(Integer32):
    """Custom type lcsIPSourceGuardPortMaxDynamicClients based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
        ValueRangeConstraint(99, 99),
    )


_LcsIPSourceGuardPortMaxDynamicClients_Type.__name__ = "Integer32"
_LcsIPSourceGuardPortMaxDynamicClients_Object = MibTableColumn
lcsIPSourceGuardPortMaxDynamicClients = _LcsIPSourceGuardPortMaxDynamicClients_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 1, 3, 1, 3),
    _LcsIPSourceGuardPortMaxDynamicClients_Type()
)
lcsIPSourceGuardPortMaxDynamicClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsIPSourceGuardPortMaxDynamicClients.setStatus("current")
_LcsIPSourceGuardStaticTable_Object = MibTable
lcsIPSourceGuardStaticTable = _LcsIPSourceGuardStaticTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2)
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticTable.setStatus("current")
_LcsIPSourceGuardStaticEntry_Object = MibTableRow
lcsIPSourceGuardStaticEntry = _LcsIPSourceGuardStaticEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1)
)
lcsIPSourceGuardStaticEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPSourceGuardStaticIndex"),
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticEntry.setStatus("current")


class _LcsIPSourceGuardStaticSwitchIndex_Type(Integer32):
    """Custom type lcsIPSourceGuardStaticSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsIPSourceGuardStaticSwitchIndex_Type.__name__ = "Integer32"
_LcsIPSourceGuardStaticSwitchIndex_Object = MibTableColumn
lcsIPSourceGuardStaticSwitchIndex = _LcsIPSourceGuardStaticSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 1),
    _LcsIPSourceGuardStaticSwitchIndex_Type()
)
lcsIPSourceGuardStaticSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticSwitchIndex.setStatus("current")


class _LcsIPSourceGuardStaticIndex_Type(Integer32):
    """Custom type lcsIPSourceGuardStaticIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_LcsIPSourceGuardStaticIndex_Type.__name__ = "Integer32"
_LcsIPSourceGuardStaticIndex_Object = MibTableColumn
lcsIPSourceGuardStaticIndex = _LcsIPSourceGuardStaticIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 2),
    _LcsIPSourceGuardStaticIndex_Type()
)
lcsIPSourceGuardStaticIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticIndex.setStatus("current")


class _LcsIPSourceGuardStaticPort_Type(Integer32):
    """Custom type lcsIPSourceGuardStaticPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsIPSourceGuardStaticPort_Type.__name__ = "Integer32"
_LcsIPSourceGuardStaticPort_Object = MibTableColumn
lcsIPSourceGuardStaticPort = _LcsIPSourceGuardStaticPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 3),
    _LcsIPSourceGuardStaticPort_Type()
)
lcsIPSourceGuardStaticPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticPort.setStatus("current")


class _LcsIPSourceGuardStaticVLANId_Type(Integer32):
    """Custom type lcsIPSourceGuardStaticVLANId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsIPSourceGuardStaticVLANId_Type.__name__ = "Integer32"
_LcsIPSourceGuardStaticVLANId_Object = MibTableColumn
lcsIPSourceGuardStaticVLANId = _LcsIPSourceGuardStaticVLANId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 4),
    _LcsIPSourceGuardStaticVLANId_Type()
)
lcsIPSourceGuardStaticVLANId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticVLANId.setStatus("current")
_LcsIPSourceGuardStaticIPAddress_Type = IpAddress
_LcsIPSourceGuardStaticIPAddress_Object = MibTableColumn
lcsIPSourceGuardStaticIPAddress = _LcsIPSourceGuardStaticIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 5),
    _LcsIPSourceGuardStaticIPAddress_Type()
)
lcsIPSourceGuardStaticIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticIPAddress.setStatus("current")
_LcsIPSourceGuardStaticMACAddress_Type = DisplayString
_LcsIPSourceGuardStaticMACAddress_Object = MibTableColumn
lcsIPSourceGuardStaticMACAddress = _LcsIPSourceGuardStaticMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 7),
    _LcsIPSourceGuardStaticMACAddress_Type()
)
lcsIPSourceGuardStaticMACAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticMACAddress.setStatus("current")
_LcsIPSourceGuardStaticRowStatus_Type = RowStatus
_LcsIPSourceGuardStaticRowStatus_Object = MibTableColumn
lcsIPSourceGuardStaticRowStatus = _LcsIPSourceGuardStaticRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 2, 1, 8),
    _LcsIPSourceGuardStaticRowStatus_Type()
)
lcsIPSourceGuardStaticRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsIPSourceGuardStaticRowStatus.setStatus("current")
_LcsIPSourceGuardDynamicTable_Object = MibTable
lcsIPSourceGuardDynamicTable = _LcsIPSourceGuardDynamicTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3)
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicTable.setStatus("current")
_LcsIPSourceGuardDynamicEntry_Object = MibTableRow
lcsIPSourceGuardDynamicEntry = _LcsIPSourceGuardDynamicEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1)
)
lcsIPSourceGuardDynamicEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsIPSourceGuardDynamicIndex"),
)
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicEntry.setStatus("current")


class _LcsIPSourceGuardDynamicSwitchIndex_Type(Integer32):
    """Custom type lcsIPSourceGuardDynamicSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsIPSourceGuardDynamicSwitchIndex_Type.__name__ = "Integer32"
_LcsIPSourceGuardDynamicSwitchIndex_Object = MibTableColumn
lcsIPSourceGuardDynamicSwitchIndex = _LcsIPSourceGuardDynamicSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 1),
    _LcsIPSourceGuardDynamicSwitchIndex_Type()
)
lcsIPSourceGuardDynamicSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicSwitchIndex.setStatus("current")


class _LcsIPSourceGuardDynamicIndex_Type(Integer32):
    """Custom type lcsIPSourceGuardDynamicIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsIPSourceGuardDynamicIndex_Type.__name__ = "Integer32"
_LcsIPSourceGuardDynamicIndex_Object = MibTableColumn
lcsIPSourceGuardDynamicIndex = _LcsIPSourceGuardDynamicIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 2),
    _LcsIPSourceGuardDynamicIndex_Type()
)
lcsIPSourceGuardDynamicIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicIndex.setStatus("current")


class _LcsIPSourceGuardDynamicPort_Type(Integer32):
    """Custom type lcsIPSourceGuardDynamicPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsIPSourceGuardDynamicPort_Type.__name__ = "Integer32"
_LcsIPSourceGuardDynamicPort_Object = MibTableColumn
lcsIPSourceGuardDynamicPort = _LcsIPSourceGuardDynamicPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 3),
    _LcsIPSourceGuardDynamicPort_Type()
)
lcsIPSourceGuardDynamicPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicPort.setStatus("current")


class _LcsIPSourceGuardDynamicVLANId_Type(Integer32):
    """Custom type lcsIPSourceGuardDynamicVLANId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsIPSourceGuardDynamicVLANId_Type.__name__ = "Integer32"
_LcsIPSourceGuardDynamicVLANId_Object = MibTableColumn
lcsIPSourceGuardDynamicVLANId = _LcsIPSourceGuardDynamicVLANId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 4),
    _LcsIPSourceGuardDynamicVLANId_Type()
)
lcsIPSourceGuardDynamicVLANId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicVLANId.setStatus("current")
_LcsIPSourceGuardDynamicIPAddress_Type = IpAddress
_LcsIPSourceGuardDynamicIPAddress_Object = MibTableColumn
lcsIPSourceGuardDynamicIPAddress = _LcsIPSourceGuardDynamicIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 5),
    _LcsIPSourceGuardDynamicIPAddress_Type()
)
lcsIPSourceGuardDynamicIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicIPAddress.setStatus("current")
_LcsIPSourceGuardDynamicMACAddress_Type = DisplayString
_LcsIPSourceGuardDynamicMACAddress_Object = MibTableColumn
lcsIPSourceGuardDynamicMACAddress = _LcsIPSourceGuardDynamicMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1, 3, 1, 6),
    _LcsIPSourceGuardDynamicMACAddress_Type()
)
lcsIPSourceGuardDynamicMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsIPSourceGuardDynamicMACAddress.setStatus("current")
_LcsARPInspection_ObjectIdentity = ObjectIdentity
lcsARPInspection = _LcsARPInspection_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2)
)
_LcsARP_ObjectIdentity = ObjectIdentity
lcsARP = _LcsARP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1)
)
_LcsARPConfig_ObjectIdentity = ObjectIdentity
lcsARPConfig = _LcsARPConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1)
)
_LcsARPConfMode_Type = AdminMode
_LcsARPConfMode_Object = MibScalar
lcsARPConfMode = _LcsARPConfMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 1),
    _LcsARPConfMode_Type()
)
lcsARPConfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsARPConfMode.setStatus("current")
_LcsARPPortConfTable_Object = MibTable
lcsARPPortConfTable = _LcsARPPortConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3)
)
if mibBuilder.loadTexts:
    lcsARPPortConfTable.setStatus("current")
_LcsARPPortConfEntry_Object = MibTableRow
lcsARPPortConfEntry = _LcsARPPortConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3, 1)
)
lcsARPPortConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsARPPortConfPort"),
)
if mibBuilder.loadTexts:
    lcsARPPortConfEntry.setStatus("current")


class _LcsARPPortConfPort_Type(Integer32):
    """Custom type lcsARPPortConfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsARPPortConfPort_Type.__name__ = "Integer32"
_LcsARPPortConfPort_Object = MibTableColumn
lcsARPPortConfPort = _LcsARPPortConfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3, 1, 1),
    _LcsARPPortConfPort_Type()
)
lcsARPPortConfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsARPPortConfPort.setStatus("current")
_LcsARPPortConfMode_Type = AdminMode
_LcsARPPortConfMode_Object = MibTableColumn
lcsARPPortConfMode = _LcsARPPortConfMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3, 1, 2),
    _LcsARPPortConfMode_Type()
)
lcsARPPortConfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsARPPortConfMode.setStatus("current")
_LcsARPPortConfCheckVLAN_Type = AdminMode
_LcsARPPortConfCheckVLAN_Object = MibTableColumn
lcsARPPortConfCheckVLAN = _LcsARPPortConfCheckVLAN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3, 1, 3),
    _LcsARPPortConfCheckVLAN_Type()
)
lcsARPPortConfCheckVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsARPPortConfCheckVLAN.setStatus("current")


class _LcsARPPortConfLogType_Type(Integer32):
    """Custom type lcsARPPortConfLogType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("deny", 1),
          ("permit", 2),
          ("all", 3))
    )


_LcsARPPortConfLogType_Type.__name__ = "Integer32"
_LcsARPPortConfLogType_Object = MibTableColumn
lcsARPPortConfLogType = _LcsARPPortConfLogType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 1, 3, 1, 4),
    _LcsARPPortConfLogType_Type()
)
lcsARPPortConfLogType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsARPPortConfLogType.setStatus("current")
_LcsARPVlanConfigTable_Object = MibTable
lcsARPVlanConfigTable = _LcsARPVlanConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2)
)
if mibBuilder.loadTexts:
    lcsARPVlanConfigTable.setStatus("current")
_LcsARPVlanConfigEntry_Object = MibTableRow
lcsARPVlanConfigEntry = _LcsARPVlanConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2, 1)
)
lcsARPVlanConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsARPVlanConfigVlan"),
)
if mibBuilder.loadTexts:
    lcsARPVlanConfigEntry.setStatus("current")


class _LcsARPPortConfigIndex_Type(Integer32):
    """Custom type lcsARPPortConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsARPPortConfigIndex_Type.__name__ = "Integer32"
_LcsARPPortConfigIndex_Object = MibTableColumn
lcsARPPortConfigIndex = _LcsARPPortConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2, 1, 1),
    _LcsARPPortConfigIndex_Type()
)
lcsARPPortConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsARPPortConfigIndex.setStatus("current")


class _LcsARPVlanConfigVlan_Type(Integer32):
    """Custom type lcsARPVlanConfigVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsARPVlanConfigVlan_Type.__name__ = "Integer32"
_LcsARPVlanConfigVlan_Object = MibTableColumn
lcsARPVlanConfigVlan = _LcsARPVlanConfigVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2, 1, 2),
    _LcsARPVlanConfigVlan_Type()
)
lcsARPVlanConfigVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPVlanConfigVlan.setStatus("current")


class _LcsARPVlanConfigLogType_Type(Integer32):
    """Custom type lcsARPVlanConfigLogType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("deny", 1),
          ("permit", 2),
          ("all", 3))
    )


_LcsARPVlanConfigLogType_Type.__name__ = "Integer32"
_LcsARPVlanConfigLogType_Object = MibTableColumn
lcsARPVlanConfigLogType = _LcsARPVlanConfigLogType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2, 1, 3),
    _LcsARPVlanConfigLogType_Type()
)
lcsARPVlanConfigLogType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPVlanConfigLogType.setStatus("current")
_LcsARPVlanConfigRowStatus_Type = RowStatus
_LcsARPVlanConfigRowStatus_Object = MibTableColumn
lcsARPVlanConfigRowStatus = _LcsARPVlanConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 2, 1, 4),
    _LcsARPVlanConfigRowStatus_Type()
)
lcsARPVlanConfigRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPVlanConfigRowStatus.setStatus("current")
_LcsARPStaticTable_Object = MibTable
lcsARPStaticTable = _LcsARPStaticTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3)
)
if mibBuilder.loadTexts:
    lcsARPStaticTable.setStatus("current")
_LcsARPStaticEntry_Object = MibTableRow
lcsARPStaticEntry = _LcsARPStaticEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1)
)
lcsARPStaticEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsARPStaticIndex"),
)
if mibBuilder.loadTexts:
    lcsARPStaticEntry.setStatus("current")


class _LcsARPStaticSwitchIndex_Type(Integer32):
    """Custom type lcsARPStaticSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsARPStaticSwitchIndex_Type.__name__ = "Integer32"
_LcsARPStaticSwitchIndex_Object = MibTableColumn
lcsARPStaticSwitchIndex = _LcsARPStaticSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 1),
    _LcsARPStaticSwitchIndex_Type()
)
lcsARPStaticSwitchIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsARPStaticSwitchIndex.setStatus("current")


class _LcsARPStaticIndex_Type(Integer32):
    """Custom type lcsARPStaticIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsARPStaticIndex_Type.__name__ = "Integer32"
_LcsARPStaticIndex_Object = MibTableColumn
lcsARPStaticIndex = _LcsARPStaticIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 2),
    _LcsARPStaticIndex_Type()
)
lcsARPStaticIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsARPStaticIndex.setStatus("current")


class _LcsARPStaticPort_Type(Integer32):
    """Custom type lcsARPStaticPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsARPStaticPort_Type.__name__ = "Integer32"
_LcsARPStaticPort_Object = MibTableColumn
lcsARPStaticPort = _LcsARPStaticPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 3),
    _LcsARPStaticPort_Type()
)
lcsARPStaticPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPStaticPort.setStatus("current")


class _LcsARPStaticVlanID_Type(Integer32):
    """Custom type lcsARPStaticVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsARPStaticVlanID_Type.__name__ = "Integer32"
_LcsARPStaticVlanID_Object = MibTableColumn
lcsARPStaticVlanID = _LcsARPStaticVlanID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 4),
    _LcsARPStaticVlanID_Type()
)
lcsARPStaticVlanID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPStaticVlanID.setStatus("current")
_LcsARPStaticMACAddress_Type = DisplayString
_LcsARPStaticMACAddress_Object = MibTableColumn
lcsARPStaticMACAddress = _LcsARPStaticMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 5),
    _LcsARPStaticMACAddress_Type()
)
lcsARPStaticMACAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPStaticMACAddress.setStatus("current")
_LcsARPStaticIPAddress_Type = IpAddress
_LcsARPStaticIPAddress_Object = MibTableColumn
lcsARPStaticIPAddress = _LcsARPStaticIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 6),
    _LcsARPStaticIPAddress_Type()
)
lcsARPStaticIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPStaticIPAddress.setStatus("current")
_LcsARPStaticRowStatus_Type = RowStatus
_LcsARPStaticRowStatus_Object = MibTableColumn
lcsARPStaticRowStatus = _LcsARPStaticRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 3, 1, 7),
    _LcsARPStaticRowStatus_Type()
)
lcsARPStaticRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsARPStaticRowStatus.setStatus("current")
_LcsARPDynamicTable_Object = MibTable
lcsARPDynamicTable = _LcsARPDynamicTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4)
)
if mibBuilder.loadTexts:
    lcsARPDynamicTable.setStatus("current")
_LcsARPDynamicEntry_Object = MibTableRow
lcsARPDynamicEntry = _LcsARPDynamicEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1)
)
lcsARPDynamicEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsARPDynamicIndex"),
)
if mibBuilder.loadTexts:
    lcsARPDynamicEntry.setStatus("current")


class _LcsARPDynamicIndex_Type(Integer32):
    """Custom type lcsARPDynamicIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsARPDynamicIndex_Type.__name__ = "Integer32"
_LcsARPDynamicIndex_Object = MibTableColumn
lcsARPDynamicIndex = _LcsARPDynamicIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 1),
    _LcsARPDynamicIndex_Type()
)
lcsARPDynamicIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsARPDynamicIndex.setStatus("current")


class _LcsARPDynamicPort_Type(Integer32):
    """Custom type lcsARPDynamicPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsARPDynamicPort_Type.__name__ = "Integer32"
_LcsARPDynamicPort_Object = MibTableColumn
lcsARPDynamicPort = _LcsARPDynamicPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 2),
    _LcsARPDynamicPort_Type()
)
lcsARPDynamicPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsARPDynamicPort.setStatus("current")


class _LcsARPDynamicVLANId_Type(Integer32):
    """Custom type lcsARPDynamicVLANId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsARPDynamicVLANId_Type.__name__ = "Integer32"
_LcsARPDynamicVLANId_Object = MibTableColumn
lcsARPDynamicVLANId = _LcsARPDynamicVLANId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 3),
    _LcsARPDynamicVLANId_Type()
)
lcsARPDynamicVLANId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsARPDynamicVLANId.setStatus("current")
_LcsARPDynamicMACAddress_Type = MacAddress
_LcsARPDynamicMACAddress_Object = MibTableColumn
lcsARPDynamicMACAddress = _LcsARPDynamicMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 4),
    _LcsARPDynamicMACAddress_Type()
)
lcsARPDynamicMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsARPDynamicMACAddress.setStatus("current")
_LcsARPDynamicIPAddress_Type = IpAddress
_LcsARPDynamicIPAddress_Object = MibTableColumn
lcsARPDynamicIPAddress = _LcsARPDynamicIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 5),
    _LcsARPDynamicIPAddress_Type()
)
lcsARPDynamicIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsARPDynamicIPAddress.setStatus("current")
_LcsARPDynamicToStaticCmd_Type = ActivateCmd
_LcsARPDynamicToStaticCmd_Object = MibTableColumn
lcsARPDynamicToStaticCmd = _LcsARPDynamicToStaticCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 1, 4, 1, 6),
    _LcsARPDynamicToStaticCmd_Type()
)
lcsARPDynamicToStaticCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsARPDynamicToStaticCmd.setStatus("current")
_LcsARPConformance_ObjectIdentity = ObjectIdentity
lcsARPConformance = _LcsARPConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 200)
)
_LcsARPCompliances_ObjectIdentity = ObjectIdentity
lcsARPCompliances = _LcsARPCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 200, 1)
)
_LcsARPGroups_ObjectIdentity = ObjectIdentity
lcsARPGroups = _LcsARPGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 200, 2)
)
_LcsDHCPSnooping_ObjectIdentity = ObjectIdentity
lcsDHCPSnooping = _LcsDHCPSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3)
)
_LcsDHCPSnoopingConf_ObjectIdentity = ObjectIdentity
lcsDHCPSnoopingConf = _LcsDHCPSnoopingConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1)
)


class _LcsDHCPSnoopingMode_Type(Integer32):
    """Custom type lcsDHCPSnoopingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPSnoopingMode_Type.__name__ = "Integer32"
_LcsDHCPSnoopingMode_Object = MibScalar
lcsDHCPSnoopingMode = _LcsDHCPSnoopingMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1, 1),
    _LcsDHCPSnoopingMode_Type()
)
lcsDHCPSnoopingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingMode.setStatus("current")
_LcsDHCPSnoopingPortModeConfigurationTable_Object = MibTable
lcsDHCPSnoopingPortModeConfigurationTable = _LcsDHCPSnoopingPortModeConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1, 2)
)
if mibBuilder.loadTexts:
    lcsDHCPSnoopingPortModeConfigurationTable.setStatus("current")
_LcsDHCPSnoopingPortModeConfigurationEntry_Object = MibTableRow
lcsDHCPSnoopingPortModeConfigurationEntry = _LcsDHCPSnoopingPortModeConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1, 2, 1)
)
lcsDHCPSnoopingPortModeConfigurationEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDHCPSnoopingPortModeConfigurationPort"),
)
if mibBuilder.loadTexts:
    lcsDHCPSnoopingPortModeConfigurationEntry.setStatus("current")


class _LcsDHCPSnoopingPortModeConfigurationPort_Type(Integer32):
    """Custom type lcsDHCPSnoopingPortModeConfigurationPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPSnoopingPortModeConfigurationPort_Type.__name__ = "Integer32"
_LcsDHCPSnoopingPortModeConfigurationPort_Object = MibTableColumn
lcsDHCPSnoopingPortModeConfigurationPort = _LcsDHCPSnoopingPortModeConfigurationPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1, 2, 1, 1),
    _LcsDHCPSnoopingPortModeConfigurationPort_Type()
)
lcsDHCPSnoopingPortModeConfigurationPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingPortModeConfigurationPort.setStatus("current")


class _LcsDHCPSnoopingPortModeConfigurationMode_Type(Integer32):
    """Custom type lcsDHCPSnoopingPortModeConfigurationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPSnoopingPortModeConfigurationMode_Type.__name__ = "Integer32"
_LcsDHCPSnoopingPortModeConfigurationMode_Object = MibTableColumn
lcsDHCPSnoopingPortModeConfigurationMode = _LcsDHCPSnoopingPortModeConfigurationMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 1, 2, 1, 2),
    _LcsDHCPSnoopingPortModeConfigurationMode_Type()
)
lcsDHCPSnoopingPortModeConfigurationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingPortModeConfigurationMode.setStatus("current")
_LcsDHCPSnoopingStatisticsTable_Object = MibTable
lcsDHCPSnoopingStatisticsTable = _LcsDHCPSnoopingStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2)
)
if mibBuilder.loadTexts:
    lcsDHCPSnoopingStatisticsTable.setStatus("current")
_LcsDHCPSnoopingStatisticsEntry_Object = MibTableRow
lcsDHCPSnoopingStatisticsEntry = _LcsDHCPSnoopingStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1)
)
lcsDHCPSnoopingStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDHCPSnoopingStatisticsPort"),
)
if mibBuilder.loadTexts:
    lcsDHCPSnoopingStatisticsEntry.setStatus("current")


class _LcsDHCPSnoopingStatisticsPort_Type(Integer32):
    """Custom type lcsDHCPSnoopingStatisticsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsDHCPSnoopingStatisticsPort_Type.__name__ = "Integer32"
_LcsDHCPSnoopingStatisticsPort_Object = MibTableColumn
lcsDHCPSnoopingStatisticsPort = _LcsDHCPSnoopingStatisticsPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 1),
    _LcsDHCPSnoopingStatisticsPort_Type()
)
lcsDHCPSnoopingStatisticsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingStatisticsPort.setStatus("current")


class _LcsDHCPSnoopingStatisticsClear_Type(Integer32):
    """Custom type lcsDHCPSnoopingStatisticsClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPSnoopingStatisticsClear_Type.__name__ = "Integer32"
_LcsDHCPSnoopingStatisticsClear_Object = MibTableColumn
lcsDHCPSnoopingStatisticsClear = _LcsDHCPSnoopingStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 2),
    _LcsDHCPSnoopingStatisticsClear_Type()
)
lcsDHCPSnoopingStatisticsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingStatisticsClear.setStatus("current")
_LcsDHCPSnoopingRxDiscover_Type = Counter32
_LcsDHCPSnoopingRxDiscover_Object = MibTableColumn
lcsDHCPSnoopingRxDiscover = _LcsDHCPSnoopingRxDiscover_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 3),
    _LcsDHCPSnoopingRxDiscover_Type()
)
lcsDHCPSnoopingRxDiscover.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxDiscover.setStatus("current")
_LcsDHCPSnoopingRxOffer_Type = Counter32
_LcsDHCPSnoopingRxOffer_Object = MibTableColumn
lcsDHCPSnoopingRxOffer = _LcsDHCPSnoopingRxOffer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 4),
    _LcsDHCPSnoopingRxOffer_Type()
)
lcsDHCPSnoopingRxOffer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxOffer.setStatus("current")
_LcsDHCPSnoopingRxRequest_Type = Counter32
_LcsDHCPSnoopingRxRequest_Object = MibTableColumn
lcsDHCPSnoopingRxRequest = _LcsDHCPSnoopingRxRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 5),
    _LcsDHCPSnoopingRxRequest_Type()
)
lcsDHCPSnoopingRxRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxRequest.setStatus("current")
_LcsDHCPSnoopingRxDecline_Type = Counter32
_LcsDHCPSnoopingRxDecline_Object = MibTableColumn
lcsDHCPSnoopingRxDecline = _LcsDHCPSnoopingRxDecline_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 6),
    _LcsDHCPSnoopingRxDecline_Type()
)
lcsDHCPSnoopingRxDecline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxDecline.setStatus("current")
_LcsDHCPSnoopingRxACK_Type = Counter32
_LcsDHCPSnoopingRxACK_Object = MibTableColumn
lcsDHCPSnoopingRxACK = _LcsDHCPSnoopingRxACK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 7),
    _LcsDHCPSnoopingRxACK_Type()
)
lcsDHCPSnoopingRxACK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxACK.setStatus("current")
_LcsDHCPSnoopingRxNAK_Type = Counter32
_LcsDHCPSnoopingRxNAK_Object = MibTableColumn
lcsDHCPSnoopingRxNAK = _LcsDHCPSnoopingRxNAK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 8),
    _LcsDHCPSnoopingRxNAK_Type()
)
lcsDHCPSnoopingRxNAK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxNAK.setStatus("current")
_LcsDHCPSnoopingRxRelease_Type = Counter32
_LcsDHCPSnoopingRxRelease_Object = MibTableColumn
lcsDHCPSnoopingRxRelease = _LcsDHCPSnoopingRxRelease_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 9),
    _LcsDHCPSnoopingRxRelease_Type()
)
lcsDHCPSnoopingRxRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxRelease.setStatus("current")
_LcsDHCPSnoopingRxInform_Type = Counter32
_LcsDHCPSnoopingRxInform_Object = MibTableColumn
lcsDHCPSnoopingRxInform = _LcsDHCPSnoopingRxInform_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 10),
    _LcsDHCPSnoopingRxInform_Type()
)
lcsDHCPSnoopingRxInform.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxInform.setStatus("current")
_LcsDHCPSnoopingRxLeaseQuery_Type = Counter32
_LcsDHCPSnoopingRxLeaseQuery_Object = MibTableColumn
lcsDHCPSnoopingRxLeaseQuery = _LcsDHCPSnoopingRxLeaseQuery_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 11),
    _LcsDHCPSnoopingRxLeaseQuery_Type()
)
lcsDHCPSnoopingRxLeaseQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxLeaseQuery.setStatus("current")
_LcsDHCPSnoopingRxLeaseUnassigned_Type = Counter32
_LcsDHCPSnoopingRxLeaseUnassigned_Object = MibTableColumn
lcsDHCPSnoopingRxLeaseUnassigned = _LcsDHCPSnoopingRxLeaseUnassigned_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 12),
    _LcsDHCPSnoopingRxLeaseUnassigned_Type()
)
lcsDHCPSnoopingRxLeaseUnassigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxLeaseUnassigned.setStatus("current")
_LcsDHCPSnoopingRxLeaseUnknown_Type = Counter32
_LcsDHCPSnoopingRxLeaseUnknown_Object = MibTableColumn
lcsDHCPSnoopingRxLeaseUnknown = _LcsDHCPSnoopingRxLeaseUnknown_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 13),
    _LcsDHCPSnoopingRxLeaseUnknown_Type()
)
lcsDHCPSnoopingRxLeaseUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxLeaseUnknown.setStatus("current")
_LcsDHCPSnoopingRxLeaseActive_Type = Counter32
_LcsDHCPSnoopingRxLeaseActive_Object = MibTableColumn
lcsDHCPSnoopingRxLeaseActive = _LcsDHCPSnoopingRxLeaseActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 14),
    _LcsDHCPSnoopingRxLeaseActive_Type()
)
lcsDHCPSnoopingRxLeaseActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxLeaseActive.setStatus("current")
_LcsDHCPSnoopingTxDiscover_Type = Counter32
_LcsDHCPSnoopingTxDiscover_Object = MibTableColumn
lcsDHCPSnoopingTxDiscover = _LcsDHCPSnoopingTxDiscover_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 15),
    _LcsDHCPSnoopingTxDiscover_Type()
)
lcsDHCPSnoopingTxDiscover.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxDiscover.setStatus("current")
_LcsDHCPSnoopingTxOffer_Type = Counter32
_LcsDHCPSnoopingTxOffer_Object = MibTableColumn
lcsDHCPSnoopingTxOffer = _LcsDHCPSnoopingTxOffer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 16),
    _LcsDHCPSnoopingTxOffer_Type()
)
lcsDHCPSnoopingTxOffer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxOffer.setStatus("current")
_LcsDHCPSnoopingTxRequest_Type = Counter32
_LcsDHCPSnoopingTxRequest_Object = MibTableColumn
lcsDHCPSnoopingTxRequest = _LcsDHCPSnoopingTxRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 17),
    _LcsDHCPSnoopingTxRequest_Type()
)
lcsDHCPSnoopingTxRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxRequest.setStatus("current")
_LcsDHCPSnoopingTxDecline_Type = Counter32
_LcsDHCPSnoopingTxDecline_Object = MibTableColumn
lcsDHCPSnoopingTxDecline = _LcsDHCPSnoopingTxDecline_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 18),
    _LcsDHCPSnoopingTxDecline_Type()
)
lcsDHCPSnoopingTxDecline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxDecline.setStatus("current")
_LcsDHCPSnoopingTxACK_Type = Counter32
_LcsDHCPSnoopingTxACK_Object = MibTableColumn
lcsDHCPSnoopingTxACK = _LcsDHCPSnoopingTxACK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 19),
    _LcsDHCPSnoopingTxACK_Type()
)
lcsDHCPSnoopingTxACK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxACK.setStatus("current")
_LcsDHCPSnoopingTxNAK_Type = Counter32
_LcsDHCPSnoopingTxNAK_Object = MibTableColumn
lcsDHCPSnoopingTxNAK = _LcsDHCPSnoopingTxNAK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 20),
    _LcsDHCPSnoopingTxNAK_Type()
)
lcsDHCPSnoopingTxNAK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxNAK.setStatus("current")
_LcsDHCPSnoopingTxRelease_Type = Counter32
_LcsDHCPSnoopingTxRelease_Object = MibTableColumn
lcsDHCPSnoopingTxRelease = _LcsDHCPSnoopingTxRelease_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 21),
    _LcsDHCPSnoopingTxRelease_Type()
)
lcsDHCPSnoopingTxRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxRelease.setStatus("current")
_LcsDHCPSnoopingTxInform_Type = Counter32
_LcsDHCPSnoopingTxInform_Object = MibTableColumn
lcsDHCPSnoopingTxInform = _LcsDHCPSnoopingTxInform_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 22),
    _LcsDHCPSnoopingTxInform_Type()
)
lcsDHCPSnoopingTxInform.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxInform.setStatus("current")
_LcsDHCPSnoopingTxLeaseQuery_Type = Counter32
_LcsDHCPSnoopingTxLeaseQuery_Object = MibTableColumn
lcsDHCPSnoopingTxLeaseQuery = _LcsDHCPSnoopingTxLeaseQuery_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 23),
    _LcsDHCPSnoopingTxLeaseQuery_Type()
)
lcsDHCPSnoopingTxLeaseQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxLeaseQuery.setStatus("current")
_LcsDHCPSnoopingTxLeaseUnassigned_Type = Counter32
_LcsDHCPSnoopingTxLeaseUnassigned_Object = MibTableColumn
lcsDHCPSnoopingTxLeaseUnassigned = _LcsDHCPSnoopingTxLeaseUnassigned_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 24),
    _LcsDHCPSnoopingTxLeaseUnassigned_Type()
)
lcsDHCPSnoopingTxLeaseUnassigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxLeaseUnassigned.setStatus("current")
_LcsDHCPSnoopingTxLeaseUnknown_Type = Counter32
_LcsDHCPSnoopingTxLeaseUnknown_Object = MibTableColumn
lcsDHCPSnoopingTxLeaseUnknown = _LcsDHCPSnoopingTxLeaseUnknown_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 25),
    _LcsDHCPSnoopingTxLeaseUnknown_Type()
)
lcsDHCPSnoopingTxLeaseUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxLeaseUnknown.setStatus("current")
_LcsDHCPSnoopingTxLeaseActive_Type = Counter32
_LcsDHCPSnoopingTxLeaseActive_Object = MibTableColumn
lcsDHCPSnoopingTxLeaseActive = _LcsDHCPSnoopingTxLeaseActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 26),
    _LcsDHCPSnoopingTxLeaseActive_Type()
)
lcsDHCPSnoopingTxLeaseActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingTxLeaseActive.setStatus("current")
_LcsDHCPSnoopingRxDiscardedChecksumError_Type = Counter32
_LcsDHCPSnoopingRxDiscardedChecksumError_Object = MibTableColumn
lcsDHCPSnoopingRxDiscardedChecksumError = _LcsDHCPSnoopingRxDiscardedChecksumError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 27),
    _LcsDHCPSnoopingRxDiscardedChecksumError_Type()
)
lcsDHCPSnoopingRxDiscardedChecksumError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxDiscardedChecksumError.setStatus("current")
_LcsDHCPSnoopingRxDiscardedFromUntrusted_Type = Counter32
_LcsDHCPSnoopingRxDiscardedFromUntrusted_Object = MibTableColumn
lcsDHCPSnoopingRxDiscardedFromUntrusted = _LcsDHCPSnoopingRxDiscardedFromUntrusted_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 3, 2, 1, 28),
    _LcsDHCPSnoopingRxDiscardedFromUntrusted_Type()
)
lcsDHCPSnoopingRxDiscardedFromUntrusted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDHCPSnoopingRxDiscardedFromUntrusted.setStatus("current")
_LcsDHCPRelay_ObjectIdentity = ObjectIdentity
lcsDHCPRelay = _LcsDHCPRelay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4)
)
_LcsDHCPRelayConfiguration_ObjectIdentity = ObjectIdentity
lcsDHCPRelayConfiguration = _LcsDHCPRelayConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 1)
)


class _LcsDHCPRelayMode_Type(Integer32):
    """Custom type lcsDHCPRelayMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPRelayMode_Type.__name__ = "Integer32"
_LcsDHCPRelayMode_Object = MibScalar
lcsDHCPRelayMode = _LcsDHCPRelayMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 1, 1),
    _LcsDHCPRelayMode_Type()
)
lcsDHCPRelayMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPRelayMode.setStatus("current")
_LcsDHCPRelayServer_Type = IpAddress
_LcsDHCPRelayServer_Object = MibScalar
lcsDHCPRelayServer = _LcsDHCPRelayServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 1, 2),
    _LcsDHCPRelayServer_Type()
)
lcsDHCPRelayServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPRelayServer.setStatus("current")


class _LcsDHCPRelayInformationMode_Type(Integer32):
    """Custom type lcsDHCPRelayInformationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsDHCPRelayInformationMode_Type.__name__ = "Integer32"
_LcsDHCPRelayInformationMode_Object = MibScalar
lcsDHCPRelayInformationMode = _LcsDHCPRelayInformationMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 1, 3),
    _LcsDHCPRelayInformationMode_Type()
)
lcsDHCPRelayInformationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPRelayInformationMode.setStatus("current")


class _LcsDHCPRelayInformationPolicy_Type(Integer32):
    """Custom type lcsDHCPRelayInformationPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsDHCPRelayInformationPolicy_Type.__name__ = "Integer32"
_LcsDHCPRelayInformationPolicy_Object = MibScalar
lcsDHCPRelayInformationPolicy = _LcsDHCPRelayInformationPolicy_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 1, 4),
    _LcsDHCPRelayInformationPolicy_Type()
)
lcsDHCPRelayInformationPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDHCPRelayInformationPolicy.setStatus("current")
_LcsDHCPRelayStatistics_ObjectIdentity = ObjectIdentity
lcsDHCPRelayStatistics = _LcsDHCPRelayStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2)
)
_LcsDHCPRelayServerStatistics_ObjectIdentity = ObjectIdentity
lcsDHCPRelayServerStatistics = _LcsDHCPRelayServerStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1)
)
_LcsServerStatTransmitToServer_Type = Counter32
_LcsServerStatTransmitToServer_Object = MibScalar
lcsServerStatTransmitToServer = _LcsServerStatTransmitToServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 1),
    _LcsServerStatTransmitToServer_Type()
)
lcsServerStatTransmitToServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatTransmitToServer.setStatus("current")
_LcsServerStatTransmitError_Type = Counter32
_LcsServerStatTransmitError_Object = MibScalar
lcsServerStatTransmitError = _LcsServerStatTransmitError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 2),
    _LcsServerStatTransmitError_Type()
)
lcsServerStatTransmitError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatTransmitError.setStatus("current")
_LcsServerStatReceiveFromServer_Type = Counter32
_LcsServerStatReceiveFromServer_Object = MibScalar
lcsServerStatReceiveFromServer = _LcsServerStatReceiveFromServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 3),
    _LcsServerStatReceiveFromServer_Type()
)
lcsServerStatReceiveFromServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveFromServer.setStatus("current")
_LcsServerStatReceiveMissingAgentOption_Type = Counter32
_LcsServerStatReceiveMissingAgentOption_Object = MibScalar
lcsServerStatReceiveMissingAgentOption = _LcsServerStatReceiveMissingAgentOption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 4),
    _LcsServerStatReceiveMissingAgentOption_Type()
)
lcsServerStatReceiveMissingAgentOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveMissingAgentOption.setStatus("current")
_LcsServerStatReceiveMissingCircuitID_Type = Counter32
_LcsServerStatReceiveMissingCircuitID_Object = MibScalar
lcsServerStatReceiveMissingCircuitID = _LcsServerStatReceiveMissingCircuitID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 5),
    _LcsServerStatReceiveMissingCircuitID_Type()
)
lcsServerStatReceiveMissingCircuitID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveMissingCircuitID.setStatus("current")
_LcsServerStatReceiveMissingRemoteID_Type = Counter32
_LcsServerStatReceiveMissingRemoteID_Object = MibScalar
lcsServerStatReceiveMissingRemoteID = _LcsServerStatReceiveMissingRemoteID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 6),
    _LcsServerStatReceiveMissingRemoteID_Type()
)
lcsServerStatReceiveMissingRemoteID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveMissingRemoteID.setStatus("current")
_LcsServerStatReceiveBadCircuitID_Type = Counter32
_LcsServerStatReceiveBadCircuitID_Object = MibScalar
lcsServerStatReceiveBadCircuitID = _LcsServerStatReceiveBadCircuitID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 7),
    _LcsServerStatReceiveBadCircuitID_Type()
)
lcsServerStatReceiveBadCircuitID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveBadCircuitID.setStatus("current")
_LcsServerStatReceiveBadRemoteID_Type = Counter32
_LcsServerStatReceiveBadRemoteID_Object = MibScalar
lcsServerStatReceiveBadRemoteID = _LcsServerStatReceiveBadRemoteID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 1, 8),
    _LcsServerStatReceiveBadRemoteID_Type()
)
lcsServerStatReceiveBadRemoteID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsServerStatReceiveBadRemoteID.setStatus("current")
_LcsDHCPRelayClientStatistics_ObjectIdentity = ObjectIdentity
lcsDHCPRelayClientStatistics = _LcsDHCPRelayClientStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2)
)
_LcsClientStatTransmitToClient_Type = Counter32
_LcsClientStatTransmitToClient_Object = MibScalar
lcsClientStatTransmitToClient = _LcsClientStatTransmitToClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 1),
    _LcsClientStatTransmitToClient_Type()
)
lcsClientStatTransmitToClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatTransmitToClient.setStatus("current")
_LcsClientStatTransmitError_Type = Counter32
_LcsClientStatTransmitError_Object = MibScalar
lcsClientStatTransmitError = _LcsClientStatTransmitError_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 2),
    _LcsClientStatTransmitError_Type()
)
lcsClientStatTransmitError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatTransmitError.setStatus("current")
_LcsClientStatReceivefromClient_Type = Counter32
_LcsClientStatReceivefromClient_Object = MibScalar
lcsClientStatReceivefromClient = _LcsClientStatReceivefromClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 3),
    _LcsClientStatReceivefromClient_Type()
)
lcsClientStatReceivefromClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatReceivefromClient.setStatus("current")
_LcsClientStatReceiveAgentOption_Type = Counter32
_LcsClientStatReceiveAgentOption_Object = MibScalar
lcsClientStatReceiveAgentOption = _LcsClientStatReceiveAgentOption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 4),
    _LcsClientStatReceiveAgentOption_Type()
)
lcsClientStatReceiveAgentOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatReceiveAgentOption.setStatus("current")
_LcsClientStatReplaceAgentOption_Type = Counter32
_LcsClientStatReplaceAgentOption_Object = MibScalar
lcsClientStatReplaceAgentOption = _LcsClientStatReplaceAgentOption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 5),
    _LcsClientStatReplaceAgentOption_Type()
)
lcsClientStatReplaceAgentOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatReplaceAgentOption.setStatus("current")
_LcsClientStatKeepAgentOption_Type = Counter32
_LcsClientStatKeepAgentOption_Object = MibScalar
lcsClientStatKeepAgentOption = _LcsClientStatKeepAgentOption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 6),
    _LcsClientStatKeepAgentOption_Type()
)
lcsClientStatKeepAgentOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatKeepAgentOption.setStatus("current")
_LcsClientStatDropAgentOption_Type = Counter32
_LcsClientStatDropAgentOption_Object = MibScalar
lcsClientStatDropAgentOption = _LcsClientStatDropAgentOption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 4, 2, 2, 7),
    _LcsClientStatDropAgentOption_Type()
)
lcsClientStatDropAgentOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsClientStatDropAgentOption.setStatus("current")
_LcsPortSecurity_ObjectIdentity = ObjectIdentity
lcsPortSecurity = _LcsPortSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5)
)
_LcsPortSecLimitCtrl_ObjectIdentity = ObjectIdentity
lcsPortSecLimitCtrl = _LcsPortSecLimitCtrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1)
)
_LcsPortSecLimitCtrlSystemConf_ObjectIdentity = ObjectIdentity
lcsPortSecLimitCtrlSystemConf = _LcsPortSecLimitCtrlSystemConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 1)
)


class _LcsPortSecurityAging_Type(Integer32):
    """Custom type lcsPortSecurityAging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecurityAging_Type.__name__ = "Integer32"
_LcsPortSecurityAging_Object = MibScalar
lcsPortSecurityAging = _LcsPortSecurityAging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 1, 1),
    _LcsPortSecurityAging_Type()
)
lcsPortSecurityAging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecurityAging.setStatus("current")


class _LcsPortSecurityAgingPeriod_Type(Integer32):
    """Custom type lcsPortSecurityAgingPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 10000000),
    )


_LcsPortSecurityAgingPeriod_Type.__name__ = "Integer32"
_LcsPortSecurityAgingPeriod_Object = MibScalar
lcsPortSecurityAgingPeriod = _LcsPortSecurityAgingPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 1, 2),
    _LcsPortSecurityAgingPeriod_Type()
)
lcsPortSecurityAgingPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecurityAgingPeriod.setStatus("current")


class _LcsPortSecurityHoldTime_Type(Integer32):
    """Custom type lcsPortSecurityHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 10000000),
    )


_LcsPortSecurityHoldTime_Type.__name__ = "Integer32"
_LcsPortSecurityHoldTime_Object = MibScalar
lcsPortSecurityHoldTime = _LcsPortSecurityHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 1, 3),
    _LcsPortSecurityHoldTime_Type()
)
lcsPortSecurityHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecurityHoldTime.setStatus("current")
_LcsPortSecLimitCtrlTable_Object = MibTable
lcsPortSecLimitCtrlTable = _LcsPortSecLimitCtrlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2)
)
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlTable.setStatus("current")
_LcsPortSecLimitCtrlEntry_Object = MibTableRow
lcsPortSecLimitCtrlEntry = _LcsPortSecLimitCtrlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1)
)
lcsPortSecLimitCtrlEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortSecLimitCtrlPort"),
)
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlEntry.setStatus("current")


class _LcsPortSecLimitCtrlPort_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPortSecLimitCtrlPort_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPort_Object = MibTableColumn
lcsPortSecLimitCtrlPort = _LcsPortSecLimitCtrlPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 1),
    _LcsPortSecLimitCtrlPort_Type()
)
lcsPortSecLimitCtrlPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPort.setStatus("current")


class _LcsPortSecLimitCtrlPortMode_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecLimitCtrlPortMode_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortMode_Object = MibTableColumn
lcsPortSecLimitCtrlPortMode = _LcsPortSecLimitCtrlPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 2),
    _LcsPortSecLimitCtrlPortMode_Type()
)
lcsPortSecLimitCtrlPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortMode.setStatus("current")


class _LcsPortSecLimitCtrlPortLimit_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_LcsPortSecLimitCtrlPortLimit_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortLimit_Object = MibTableColumn
lcsPortSecLimitCtrlPortLimit = _LcsPortSecLimitCtrlPortLimit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 3),
    _LcsPortSecLimitCtrlPortLimit_Type()
)
lcsPortSecLimitCtrlPortLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortLimit.setStatus("current")


class _LcsPortSecLimitCtrlPortViolationmMode_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortViolationmMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LcsPortSecLimitCtrlPortViolationmMode_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortViolationmMode_Object = MibTableColumn
lcsPortSecLimitCtrlPortViolationmMode = _LcsPortSecLimitCtrlPortViolationmMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 4),
    _LcsPortSecLimitCtrlPortViolationmMode_Type()
)
lcsPortSecLimitCtrlPortViolationmMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortViolationmMode.setStatus("current")


class _LcsPortSecLimitCtrlPortViolationmLimit_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortViolationmLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_LcsPortSecLimitCtrlPortViolationmLimit_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortViolationmLimit_Object = MibTableColumn
lcsPortSecLimitCtrlPortViolationmLimit = _LcsPortSecLimitCtrlPortViolationmLimit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 5),
    _LcsPortSecLimitCtrlPortViolationmLimit_Type()
)
lcsPortSecLimitCtrlPortViolationmLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortViolationmLimit.setStatus("current")
_LcsPortSecLimitCtrlPortState_Type = DisplayString
_LcsPortSecLimitCtrlPortState_Object = MibTableColumn
lcsPortSecLimitCtrlPortState = _LcsPortSecLimitCtrlPortState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 6),
    _LcsPortSecLimitCtrlPortState_Type()
)
lcsPortSecLimitCtrlPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortState.setStatus("current")


class _LcsPortSecLimitCtrlPortReOpen_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortReOpen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecLimitCtrlPortReOpen_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortReOpen_Object = MibTableColumn
lcsPortSecLimitCtrlPortReOpen = _LcsPortSecLimitCtrlPortReOpen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 7),
    _LcsPortSecLimitCtrlPortReOpen_Type()
)
lcsPortSecLimitCtrlPortReOpen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortReOpen.setStatus("current")


class _LcsPortSecLimitCtrlPortSticky_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortSticky based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecLimitCtrlPortSticky_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortSticky_Object = MibTableColumn
lcsPortSecLimitCtrlPortSticky = _LcsPortSecLimitCtrlPortSticky_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 8),
    _LcsPortSecLimitCtrlPortSticky_Type()
)
lcsPortSecLimitCtrlPortSticky.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortSticky.setStatus("current")


class _LcsPortSecLimitCtrlPortClear_Type(Integer32):
    """Custom type lcsPortSecLimitCtrlPortClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecLimitCtrlPortClear_Type.__name__ = "Integer32"
_LcsPortSecLimitCtrlPortClear_Object = MibTableColumn
lcsPortSecLimitCtrlPortClear = _LcsPortSecLimitCtrlPortClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 1, 2, 1, 9),
    _LcsPortSecLimitCtrlPortClear_Type()
)
lcsPortSecLimitCtrlPortClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecLimitCtrlPortClear.setStatus("current")
_LcsPortSecSwitchStatusTable_Object = MibTable
lcsPortSecSwitchStatusTable = _LcsPortSecSwitchStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2)
)
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusTable.setStatus("current")
_LcsPortSecSwitchStatusEntry_Object = MibTableRow
lcsPortSecSwitchStatusEntry = _LcsPortSecSwitchStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1)
)
lcsPortSecSwitchStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortSecSwitchStatusPort"),
)
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusEntry.setStatus("current")


class _LcsPortSecSwitchStatusPort_Type(Integer32):
    """Custom type lcsPortSecSwitchStatusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPortSecSwitchStatusPort_Type.__name__ = "Integer32"
_LcsPortSecSwitchStatusPort_Object = MibTableColumn
lcsPortSecSwitchStatusPort = _LcsPortSecSwitchStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 1),
    _LcsPortSecSwitchStatusPort_Type()
)
lcsPortSecSwitchStatusPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusPort.setStatus("current")
_LcsPortSecSwitchStatusViolationmMode_Type = DisplayString
_LcsPortSecSwitchStatusViolationmMode_Object = MibTableColumn
lcsPortSecSwitchStatusViolationmMode = _LcsPortSecSwitchStatusViolationmMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 3),
    _LcsPortSecSwitchStatusViolationmMode_Type()
)
lcsPortSecSwitchStatusViolationmMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusViolationmMode.setStatus("current")
_LcsPortSecSwitchStatusState_Type = DisplayString
_LcsPortSecSwitchStatusState_Object = MibTableColumn
lcsPortSecSwitchStatusState = _LcsPortSecSwitchStatusState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 4),
    _LcsPortSecSwitchStatusState_Type()
)
lcsPortSecSwitchStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusState.setStatus("current")
_LcsPortSecSwitchStatusMACCountCurrent_Type = Integer32
_LcsPortSecSwitchStatusMACCountCurrent_Object = MibTableColumn
lcsPortSecSwitchStatusMACCountCurrent = _LcsPortSecSwitchStatusMACCountCurrent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 5),
    _LcsPortSecSwitchStatusMACCountCurrent_Type()
)
lcsPortSecSwitchStatusMACCountCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusMACCountCurrent.setStatus("current")
_LcsPortSecSwitchStatusMACCountViolating_Type = Integer32
_LcsPortSecSwitchStatusMACCountViolating_Object = MibTableColumn
lcsPortSecSwitchStatusMACCountViolating = _LcsPortSecSwitchStatusMACCountViolating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 6),
    _LcsPortSecSwitchStatusMACCountViolating_Type()
)
lcsPortSecSwitchStatusMACCountViolating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusMACCountViolating.setStatus("current")
_LcsPortSecSwitchStatusMACCountLimit_Type = Integer32
_LcsPortSecSwitchStatusMACCountLimit_Object = MibTableColumn
lcsPortSecSwitchStatusMACCountLimit = _LcsPortSecSwitchStatusMACCountLimit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 7),
    _LcsPortSecSwitchStatusMACCountLimit_Type()
)
lcsPortSecSwitchStatusMACCountLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusMACCountLimit.setStatus("current")


class _LcsPortSecSwitchStatusClear_Type(Integer32):
    """Custom type lcsPortSecSwitchStatusClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecSwitchStatusClear_Type.__name__ = "Integer32"
_LcsPortSecSwitchStatusClear_Object = MibTableColumn
lcsPortSecSwitchStatusClear = _LcsPortSecSwitchStatusClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 2, 1, 8),
    _LcsPortSecSwitchStatusClear_Type()
)
lcsPortSecSwitchStatusClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecSwitchStatusClear.setStatus("current")
_LcsPortSecPortStatus_ObjectIdentity = ObjectIdentity
lcsPortSecPortStatus = _LcsPortSecPortStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3)
)
_LcsPortSecPortStatusPort_Type = Integer32
_LcsPortSecPortStatusPort_Object = MibScalar
lcsPortSecPortStatusPort = _LcsPortSecPortStatusPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 1),
    _LcsPortSecPortStatusPort_Type()
)
lcsPortSecPortStatusPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusPort.setStatus("current")
_LcsPortSecPortStatusTable_Object = MibTable
lcsPortSecPortStatusTable = _LcsPortSecPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2)
)
if mibBuilder.loadTexts:
    lcsPortSecPortStatusTable.setStatus("current")
_LcsPortSecPortStatusEntry_Object = MibTableRow
lcsPortSecPortStatusEntry = _LcsPortSecPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1)
)
lcsPortSecPortStatusEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsPortSecPortStatusIndex"),
)
if mibBuilder.loadTexts:
    lcsPortSecPortStatusEntry.setStatus("current")


class _LcsPortSecPortStatusIndex_Type(Integer32):
    """Custom type lcsPortSecPortStatusIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsPortSecPortStatusIndex_Type.__name__ = "Integer32"
_LcsPortSecPortStatusIndex_Object = MibTableColumn
lcsPortSecPortStatusIndex = _LcsPortSecPortStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 1),
    _LcsPortSecPortStatusIndex_Type()
)
lcsPortSecPortStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusIndex.setStatus("current")
_LcsPortSecPortStatusMACAddress_Type = DisplayString
_LcsPortSecPortStatusMACAddress_Object = MibTableColumn
lcsPortSecPortStatusMACAddress = _LcsPortSecPortStatusMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 2),
    _LcsPortSecPortStatusMACAddress_Type()
)
lcsPortSecPortStatusMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusMACAddress.setStatus("current")


class _LcsPortSecPortStatusVLANId_Type(Integer32):
    """Custom type lcsPortSecPortStatusVLANId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPortSecPortStatusVLANId_Type.__name__ = "Integer32"
_LcsPortSecPortStatusVLANId_Object = MibTableColumn
lcsPortSecPortStatusVLANId = _LcsPortSecPortStatusVLANId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 3),
    _LcsPortSecPortStatusVLANId_Type()
)
lcsPortSecPortStatusVLANId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusVLANId.setStatus("current")
_LcsPortSecPortStatusState_Type = DisplayString
_LcsPortSecPortStatusState_Object = MibTableColumn
lcsPortSecPortStatusState = _LcsPortSecPortStatusState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 4),
    _LcsPortSecPortStatusState_Type()
)
lcsPortSecPortStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusState.setStatus("current")
_LcsPortSecPortStatusAgeAndHold_Type = DisplayString
_LcsPortSecPortStatusAgeAndHold_Object = MibTableColumn
lcsPortSecPortStatusAgeAndHold = _LcsPortSecPortStatusAgeAndHold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 5),
    _LcsPortSecPortStatusAgeAndHold_Type()
)
lcsPortSecPortStatusAgeAndHold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusAgeAndHold.setStatus("current")


class _LcsPortSecPortStatusClear_Type(Integer32):
    """Custom type lcsPortSecPortStatusClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsPortSecPortStatusClear_Type.__name__ = "Integer32"
_LcsPortSecPortStatusClear_Object = MibTableColumn
lcsPortSecPortStatusClear = _LcsPortSecPortStatusClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 5, 3, 2, 1, 6),
    _LcsPortSecPortStatusClear_Type()
)
lcsPortSecPortStatusClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPortSecPortStatusClear.setStatus("current")
_LcsAccessManagement_ObjectIdentity = ObjectIdentity
lcsAccessManagement = _LcsAccessManagement_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6)
)
_LcsAccessMgmtConf_ObjectIdentity = ObjectIdentity
lcsAccessMgmtConf = _LcsAccessMgmtConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1)
)


class _LcsAccessMgmtConfMode_Type(AdminMode):
    """Custom type lcsAccessMgmtConfMode based on AdminMode"""
    defaultValue = 0


_LcsAccessMgmtConfMode_Type.__name__ = "AdminMode"
_LcsAccessMgmtConfMode_Object = MibScalar
lcsAccessMgmtConfMode = _LcsAccessMgmtConfMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 1),
    _LcsAccessMgmtConfMode_Type()
)
lcsAccessMgmtConfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAccessMgmtConfMode.setStatus("current")
_LcsAccessMgmtConfTable_Object = MibTable
lcsAccessMgmtConfTable = _LcsAccessMgmtConfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2)
)
if mibBuilder.loadTexts:
    lcsAccessMgmtConfTable.setStatus("current")
_LcsAccessMgmtConfEntry_Object = MibTableRow
lcsAccessMgmtConfEntry = _LcsAccessMgmtConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1)
)
lcsAccessMgmtConfEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsAccessMgmtIndex"),
)
if mibBuilder.loadTexts:
    lcsAccessMgmtConfEntry.setStatus("current")


class _LcsAccessMgmtIndex_Type(Integer32):
    """Custom type lcsAccessMgmtIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LcsAccessMgmtIndex_Type.__name__ = "Integer32"
_LcsAccessMgmtIndex_Object = MibTableColumn
lcsAccessMgmtIndex = _LcsAccessMgmtIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 1),
    _LcsAccessMgmtIndex_Type()
)
lcsAccessMgmtIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAccessMgmtIndex.setStatus("current")


class _LcsAccessMgmtVlanID_Type(Integer32):
    """Custom type lcsAccessMgmtVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsAccessMgmtVlanID_Type.__name__ = "Integer32"
_LcsAccessMgmtVlanID_Object = MibTableColumn
lcsAccessMgmtVlanID = _LcsAccessMgmtVlanID_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 2),
    _LcsAccessMgmtVlanID_Type()
)
lcsAccessMgmtVlanID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtVlanID.setStatus("current")
_LcsAccessMgmtStartIpAddress_Type = IpAddress
_LcsAccessMgmtStartIpAddress_Object = MibTableColumn
lcsAccessMgmtStartIpAddress = _LcsAccessMgmtStartIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 3),
    _LcsAccessMgmtStartIpAddress_Type()
)
lcsAccessMgmtStartIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtStartIpAddress.setStatus("current")
_LcsAccessMgmtEndIpAddress_Type = IpAddress
_LcsAccessMgmtEndIpAddress_Object = MibTableColumn
lcsAccessMgmtEndIpAddress = _LcsAccessMgmtEndIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 4),
    _LcsAccessMgmtEndIpAddress_Type()
)
lcsAccessMgmtEndIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtEndIpAddress.setStatus("current")


class _LcsAccessMgmtHttpHttps_Type(AdminMode):
    """Custom type lcsAccessMgmtHttpHttps based on AdminMode"""
    defaultValue = 0


_LcsAccessMgmtHttpHttps_Type.__name__ = "AdminMode"
_LcsAccessMgmtHttpHttps_Object = MibTableColumn
lcsAccessMgmtHttpHttps = _LcsAccessMgmtHttpHttps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 5),
    _LcsAccessMgmtHttpHttps_Type()
)
lcsAccessMgmtHttpHttps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtHttpHttps.setStatus("current")


class _LcsAccessMgmtSNMP_Type(AdminMode):
    """Custom type lcsAccessMgmtSNMP based on AdminMode"""
    defaultValue = 0


_LcsAccessMgmtSNMP_Type.__name__ = "AdminMode"
_LcsAccessMgmtSNMP_Object = MibTableColumn
lcsAccessMgmtSNMP = _LcsAccessMgmtSNMP_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 6),
    _LcsAccessMgmtSNMP_Type()
)
lcsAccessMgmtSNMP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtSNMP.setStatus("current")


class _LcsAccessMgmtTelnetSSH_Type(AdminMode):
    """Custom type lcsAccessMgmtTelnetSSH based on AdminMode"""
    defaultValue = 0


_LcsAccessMgmtTelnetSSH_Type.__name__ = "AdminMode"
_LcsAccessMgmtTelnetSSH_Object = MibTableColumn
lcsAccessMgmtTelnetSSH = _LcsAccessMgmtTelnetSSH_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 7),
    _LcsAccessMgmtTelnetSSH_Type()
)
lcsAccessMgmtTelnetSSH.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtTelnetSSH.setStatus("current")
_LcsAccessMgmtRowStatus_Type = RowStatus
_LcsAccessMgmtRowStatus_Object = MibTableColumn
lcsAccessMgmtRowStatus = _LcsAccessMgmtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 1, 2, 1, 8),
    _LcsAccessMgmtRowStatus_Type()
)
lcsAccessMgmtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lcsAccessMgmtRowStatus.setStatus("current")
_LcsAccessMgmtStatistics_ObjectIdentity = ObjectIdentity
lcsAccessMgmtStatistics = _LcsAccessMgmtStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2)
)
_LcsAccessMgmtStatisticsClear_Type = ActivateCmd
_LcsAccessMgmtStatisticsClear_Object = MibScalar
lcsAccessMgmtStatisticsClear = _LcsAccessMgmtStatisticsClear_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 1),
    _LcsAccessMgmtStatisticsClear_Type()
)
lcsAccessMgmtStatisticsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsClear.setStatus("current")
_LcsAccessMgmtStatisticsTable_Object = MibTable
lcsAccessMgmtStatisticsTable = _LcsAccessMgmtStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2)
)
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsTable.setStatus("current")
_LcsAccessMgmtStatisticsEntry_Object = MibTableRow
lcsAccessMgmtStatisticsEntry = _LcsAccessMgmtStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2, 1)
)
lcsAccessMgmtStatisticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsAccessMgmtStatisticsInterface"),
)
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsEntry.setStatus("current")


class _LcsAccessMgmtStatisticsInterface_Type(Integer32):
    """Custom type lcsAccessMgmtStatisticsInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("http", 1),
          ("https", 2),
          ("snmp", 3),
          ("telnet", 4),
          ("ssh", 5))
    )


_LcsAccessMgmtStatisticsInterface_Type.__name__ = "Integer32"
_LcsAccessMgmtStatisticsInterface_Object = MibTableColumn
lcsAccessMgmtStatisticsInterface = _LcsAccessMgmtStatisticsInterface_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2, 1, 1),
    _LcsAccessMgmtStatisticsInterface_Type()
)
lcsAccessMgmtStatisticsInterface.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsInterface.setStatus("current")


class _LcsAccessMgmtStatisticsReceivedPackets_Type(Integer32):
    """Custom type lcsAccessMgmtStatisticsReceivedPackets based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_LcsAccessMgmtStatisticsReceivedPackets_Type.__name__ = "Integer32"
_LcsAccessMgmtStatisticsReceivedPackets_Object = MibTableColumn
lcsAccessMgmtStatisticsReceivedPackets = _LcsAccessMgmtStatisticsReceivedPackets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2, 1, 2),
    _LcsAccessMgmtStatisticsReceivedPackets_Type()
)
lcsAccessMgmtStatisticsReceivedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsReceivedPackets.setStatus("current")


class _LcsAccessMgmtStatisticsAllowedPackets_Type(Integer32):
    """Custom type lcsAccessMgmtStatisticsAllowedPackets based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_LcsAccessMgmtStatisticsAllowedPackets_Type.__name__ = "Integer32"
_LcsAccessMgmtStatisticsAllowedPackets_Object = MibTableColumn
lcsAccessMgmtStatisticsAllowedPackets = _LcsAccessMgmtStatisticsAllowedPackets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2, 1, 3),
    _LcsAccessMgmtStatisticsAllowedPackets_Type()
)
lcsAccessMgmtStatisticsAllowedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsAllowedPackets.setStatus("current")


class _LcsAccessMgmtStatisticsDiscardedPackets_Type(Integer32):
    """Custom type lcsAccessMgmtStatisticsDiscardedPackets based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_LcsAccessMgmtStatisticsDiscardedPackets_Type.__name__ = "Integer32"
_LcsAccessMgmtStatisticsDiscardedPackets_Object = MibTableColumn
lcsAccessMgmtStatisticsDiscardedPackets = _LcsAccessMgmtStatisticsDiscardedPackets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 6, 2, 2, 1, 4),
    _LcsAccessMgmtStatisticsDiscardedPackets_Type()
)
lcsAccessMgmtStatisticsDiscardedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsAccessMgmtStatisticsDiscardedPackets.setStatus("current")
_LcsHTTPS_ObjectIdentity = ObjectIdentity
lcsHTTPS = _LcsHTTPS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8)
)


class _LcsHTTPSCertificateMaintain_Type(Integer32):
    """Custom type lcsHTTPSCertificateMaintain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 3),
    )


_LcsHTTPSCertificateMaintain_Type.__name__ = "Integer32"
_LcsHTTPSCertificateMaintain_Object = MibScalar
lcsHTTPSCertificateMaintain = _LcsHTTPSCertificateMaintain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 4),
    _LcsHTTPSCertificateMaintain_Type()
)
lcsHTTPSCertificateMaintain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSCertificateMaintain.setStatus("current")
_LcsHTTPSCertificatePassPhrase_Type = DisplayString
_LcsHTTPSCertificatePassPhrase_Object = MibScalar
lcsHTTPSCertificatePassPhrase = _LcsHTTPSCertificatePassPhrase_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 5),
    _LcsHTTPSCertificatePassPhrase_Type()
)
lcsHTTPSCertificatePassPhrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSCertificatePassPhrase.setStatus("current")


class _LcsHTTPSCertificateUpload_Type(Integer32):
    """Custom type lcsHTTPSCertificateUpload based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsHTTPSCertificateUpload_Type.__name__ = "Integer32"
_LcsHTTPSCertificateUpload_Object = MibScalar
lcsHTTPSCertificateUpload = _LcsHTTPSCertificateUpload_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 6),
    _LcsHTTPSCertificateUpload_Type()
)
lcsHTTPSCertificateUpload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSCertificateUpload.setStatus("current")
_LcsHTTPSFileUploadFileURL_Type = DisplayString
_LcsHTTPSFileUploadFileURL_Object = MibScalar
lcsHTTPSFileUploadFileURL = _LcsHTTPSFileUploadFileURL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 7),
    _LcsHTTPSFileUploadFileURL_Type()
)
lcsHTTPSFileUploadFileURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSFileUploadFileURL.setStatus("current")
_LcsHTTPSFileUploadTFTPServer_Type = IpAddress
_LcsHTTPSFileUploadTFTPServer_Object = MibScalar
lcsHTTPSFileUploadTFTPServer = _LcsHTTPSFileUploadTFTPServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 8),
    _LcsHTTPSFileUploadTFTPServer_Type()
)
lcsHTTPSFileUploadTFTPServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSFileUploadTFTPServer.setStatus("current")


class _LcsHTTPSApply_Type(Integer32):
    """Custom type lcsHTTPSApply based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_LcsHTTPSApply_Type.__name__ = "Integer32"
_LcsHTTPSApply_Object = MibScalar
lcsHTTPSApply = _LcsHTTPSApply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 9),
    _LcsHTTPSApply_Type()
)
lcsHTTPSApply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsHTTPSApply.setStatus("current")
_LcsHTTPSCertificateStatus_Type = DisplayString
_LcsHTTPSCertificateStatus_Object = MibScalar
lcsHTTPSCertificateStatus = _LcsHTTPSCertificateStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 8, 10),
    _LcsHTTPSCertificateStatus_Type()
)
lcsHTTPSCertificateStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsHTTPSCertificateStatus.setStatus("current")
_LcsAuthMethod_ObjectIdentity = ObjectIdentity
lcsAuthMethod = _LcsAuthMethod_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9)
)
_LcsAuthMethodConfigTable_Object = MibTable
lcsAuthMethodConfigTable = _LcsAuthMethodConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1)
)
if mibBuilder.loadTexts:
    lcsAuthMethodConfigTable.setStatus("current")
_LcsAuthMethodConfigEntry_Object = MibTableRow
lcsAuthMethodConfigEntry = _LcsAuthMethodConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1)
)
lcsAuthMethodConfigEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsAuthMethodConfigClient"),
)
if mibBuilder.loadTexts:
    lcsAuthMethodConfigEntry.setStatus("current")


class _LcsAuthMethodConfigClient_Type(Integer32):
    """Custom type lcsAuthMethodConfigClient based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("console", 1),
          ("telnet", 2),
          ("ssh", 3),
          ("http", 4),
          ("https", 5))
    )


_LcsAuthMethodConfigClient_Type.__name__ = "Integer32"
_LcsAuthMethodConfigClient_Object = MibTableColumn
lcsAuthMethodConfigClient = _LcsAuthMethodConfigClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 1),
    _LcsAuthMethodConfigClient_Type()
)
lcsAuthMethodConfigClient.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigClient.setStatus("current")


class _LcsAuthMethodConfigMethod1_Type(Integer32):
    """Custom type lcsAuthMethodConfigMethod1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("redirect", 1),
          ("local", 2),
          ("radius", 3),
          ("tacacs", 4))
    )


_LcsAuthMethodConfigMethod1_Type.__name__ = "Integer32"
_LcsAuthMethodConfigMethod1_Object = MibTableColumn
lcsAuthMethodConfigMethod1 = _LcsAuthMethodConfigMethod1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 2),
    _LcsAuthMethodConfigMethod1_Type()
)
lcsAuthMethodConfigMethod1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigMethod1.setStatus("current")


class _LcsAuthMethodConfigMethod2_Type(Integer32):
    """Custom type lcsAuthMethodConfigMethod2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("redirect", 1),
          ("local", 2),
          ("radius", 3),
          ("tacacs", 4))
    )


_LcsAuthMethodConfigMethod2_Type.__name__ = "Integer32"
_LcsAuthMethodConfigMethod2_Object = MibTableColumn
lcsAuthMethodConfigMethod2 = _LcsAuthMethodConfigMethod2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 3),
    _LcsAuthMethodConfigMethod2_Type()
)
lcsAuthMethodConfigMethod2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigMethod2.setStatus("current")


class _LcsAuthMethodConfigMethod3_Type(Integer32):
    """Custom type lcsAuthMethodConfigMethod3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("redirect", 1),
          ("local", 2),
          ("radius", 3),
          ("tacacs", 4))
    )


_LcsAuthMethodConfigMethod3_Type.__name__ = "Integer32"
_LcsAuthMethodConfigMethod3_Object = MibTableColumn
lcsAuthMethodConfigMethod3 = _LcsAuthMethodConfigMethod3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 4),
    _LcsAuthMethodConfigMethod3_Type()
)
lcsAuthMethodConfigMethod3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigMethod3.setStatus("current")


class _LcsAuthMethodConfigMethod4_Type(Integer32):
    """Custom type lcsAuthMethodConfigMethod4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("redirect", 1),
          ("local", 2),
          ("radius", 3),
          ("tacacs", 4))
    )


_LcsAuthMethodConfigMethod4_Type.__name__ = "Integer32"
_LcsAuthMethodConfigMethod4_Object = MibTableColumn
lcsAuthMethodConfigMethod4 = _LcsAuthMethodConfigMethod4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 5),
    _LcsAuthMethodConfigMethod4_Type()
)
lcsAuthMethodConfigMethod4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigMethod4.setStatus("current")


class _LcsAuthMethodConfigServicePort_Type(Integer32):
    """Custom type lcsAuthMethodConfigServicePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LcsAuthMethodConfigServicePort_Type.__name__ = "Integer32"
_LcsAuthMethodConfigServicePort_Object = MibTableColumn
lcsAuthMethodConfigServicePort = _LcsAuthMethodConfigServicePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 1, 1, 6),
    _LcsAuthMethodConfigServicePort_Type()
)
lcsAuthMethodConfigServicePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAuthMethodConfigServicePort.setStatus("current")
_LcsCommandAuthorizationMethodTable_Object = MibTable
lcsCommandAuthorizationMethodTable = _LcsCommandAuthorizationMethodTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2)
)
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodTable.setStatus("current")
_LcsCommandAuthorizationMethodEntry_Object = MibTableRow
lcsCommandAuthorizationMethodEntry = _LcsCommandAuthorizationMethodEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2, 1)
)
lcsCommandAuthorizationMethodEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsCommandAuthorizationMethodClient"),
)
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodEntry.setStatus("current")


class _LcsCommandAuthorizationMethodClient_Type(Integer32):
    """Custom type lcsCommandAuthorizationMethodClient based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("console", 1),
          ("telnet", 2),
          ("ssh", 3),
          ("http", 4),
          ("https", 5))
    )


_LcsCommandAuthorizationMethodClient_Type.__name__ = "Integer32"
_LcsCommandAuthorizationMethodClient_Object = MibTableColumn
lcsCommandAuthorizationMethodClient = _LcsCommandAuthorizationMethodClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2, 1, 1),
    _LcsCommandAuthorizationMethodClient_Type()
)
lcsCommandAuthorizationMethodClient.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodClient.setStatus("current")
_LcsCommandAuthorizationMethodMethod_Type = Integer32
_LcsCommandAuthorizationMethodMethod_Object = MibTableColumn
lcsCommandAuthorizationMethodMethod = _LcsCommandAuthorizationMethodMethod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2, 1, 2),
    _LcsCommandAuthorizationMethodMethod_Type()
)
lcsCommandAuthorizationMethodMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodMethod.setStatus("current")
_LcsCommandAuthorizationMethodCmdLvl_Type = Integer32
_LcsCommandAuthorizationMethodCmdLvl_Object = MibTableColumn
lcsCommandAuthorizationMethodCmdLvl = _LcsCommandAuthorizationMethodCmdLvl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2, 1, 3),
    _LcsCommandAuthorizationMethodCmdLvl_Type()
)
lcsCommandAuthorizationMethodCmdLvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodCmdLvl.setStatus("current")
_LcsCommandAuthorizationMethodCfgCmd_Type = Integer32
_LcsCommandAuthorizationMethodCfgCmd_Object = MibTableColumn
lcsCommandAuthorizationMethodCfgCmd = _LcsCommandAuthorizationMethodCfgCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 2, 1, 4),
    _LcsCommandAuthorizationMethodCfgCmd_Type()
)
lcsCommandAuthorizationMethodCfgCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCommandAuthorizationMethodCfgCmd.setStatus("current")
_LcsAccountingMethodTable_Object = MibTable
lcsAccountingMethodTable = _LcsAccountingMethodTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3)
)
if mibBuilder.loadTexts:
    lcsAccountingMethodTable.setStatus("current")
_LcsAccountingMethodEntry_Object = MibTableRow
lcsAccountingMethodEntry = _LcsAccountingMethodEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3, 1)
)
lcsAccountingMethodEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsAccountingMethodClient"),
)
if mibBuilder.loadTexts:
    lcsAccountingMethodEntry.setStatus("current")


class _LcsAccountingMethodClient_Type(Integer32):
    """Custom type lcsAccountingMethodClient based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("console", 1),
          ("telnet", 2),
          ("ssh", 3),
          ("http", 4),
          ("https", 5))
    )


_LcsAccountingMethodClient_Type.__name__ = "Integer32"
_LcsAccountingMethodClient_Object = MibTableColumn
lcsAccountingMethodClient = _LcsAccountingMethodClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3, 1, 1),
    _LcsAccountingMethodClient_Type()
)
lcsAccountingMethodClient.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsAccountingMethodClient.setStatus("current")
_LcsAccountingMethodMethod_Type = Integer32
_LcsAccountingMethodMethod_Object = MibTableColumn
lcsAccountingMethodMethod = _LcsAccountingMethodMethod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3, 1, 2),
    _LcsAccountingMethodMethod_Type()
)
lcsAccountingMethodMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAccountingMethodMethod.setStatus("current")
_LcsAccountingMethodCmdLvl_Type = Integer32
_LcsAccountingMethodCmdLvl_Object = MibTableColumn
lcsAccountingMethodCmdLvl = _LcsAccountingMethodCmdLvl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3, 1, 3),
    _LcsAccountingMethodCmdLvl_Type()
)
lcsAccountingMethodCmdLvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAccountingMethodCmdLvl.setStatus("current")
_LcsAccountingMethodCfgCmd_Type = Integer32
_LcsAccountingMethodCfgCmd_Object = MibTableColumn
lcsAccountingMethodCfgCmd = _LcsAccountingMethodCfgCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 9, 3, 1, 4),
    _LcsAccountingMethodCfgCmd_Type()
)
lcsAccountingMethodCfgCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsAccountingMethodCfgCmd.setStatus("current")
_LcsDot1xSupplicant_ObjectIdentity = ObjectIdentity
lcsDot1xSupplicant = _LcsDot1xSupplicant_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500)
)


class _LcsDot1xSupplicantSystemMode_Type(Integer32):
    """Custom type lcsDot1xSupplicantSystemMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LcsDot1xSupplicantSystemMode_Type.__name__ = "Integer32"
_LcsDot1xSupplicantSystemMode_Object = MibScalar
lcsDot1xSupplicantSystemMode = _LcsDot1xSupplicantSystemMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 1),
    _LcsDot1xSupplicantSystemMode_Type()
)
lcsDot1xSupplicantSystemMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantSystemMode.setStatus("current")


class _LcsDot1xSupplicantSystemEapMethods_Type(Bits):
    """Custom type lcsDot1xSupplicantSystemEapMethods based on Bits"""
    namedValues = NamedValues(
        *(("lcsDot1xSupplicantSystemEapMethodsAll", 0),
          ("lcsDot1xSupplicantSystemEapMethodsMD5", 1),
          ("lcsDot1xSupplicantSystemEapMethodsPSK", 2),
          ("lcsDot1xSupplicantSystemEapMethodsPWD", 3))
    )

_LcsDot1xSupplicantSystemEapMethods_Type.__name__ = "Bits"
_LcsDot1xSupplicantSystemEapMethods_Object = MibScalar
lcsDot1xSupplicantSystemEapMethods = _LcsDot1xSupplicantSystemEapMethods_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 2),
    _LcsDot1xSupplicantSystemEapMethods_Type()
)
lcsDot1xSupplicantSystemEapMethods.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantSystemEapMethods.setStatus("current")
_LcsDot1xSupplicantTable_Object = MibTable
lcsDot1xSupplicantTable = _LcsDot1xSupplicantTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3)
)
if mibBuilder.loadTexts:
    lcsDot1xSupplicantTable.setStatus("current")
_LcsDot1xSupplicantEntry_Object = MibTableRow
lcsDot1xSupplicantEntry = _LcsDot1xSupplicantEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1)
)
lcsDot1xSupplicantEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsDot1xSupplicantIndex"),
)
if mibBuilder.loadTexts:
    lcsDot1xSupplicantEntry.setStatus("current")


class _LcsDot1xSupplicantIndex_Type(Integer32):
    """Custom type lcsDot1xSupplicantIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_LcsDot1xSupplicantIndex_Type.__name__ = "Integer32"
_LcsDot1xSupplicantIndex_Object = MibTableColumn
lcsDot1xSupplicantIndex = _LcsDot1xSupplicantIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 1),
    _LcsDot1xSupplicantIndex_Type()
)
lcsDot1xSupplicantIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantIndex.setStatus("current")


class _LcsDot1xSupplicantPortNumber_Type(Integer32):
    """Custom type lcsDot1xSupplicantPortNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 52),
    )


_LcsDot1xSupplicantPortNumber_Type.__name__ = "Integer32"
_LcsDot1xSupplicantPortNumber_Object = MibTableColumn
lcsDot1xSupplicantPortNumber = _LcsDot1xSupplicantPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 2),
    _LcsDot1xSupplicantPortNumber_Type()
)
lcsDot1xSupplicantPortNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantPortNumber.setStatus("current")


class _LcsDot1xSupplicantConfigMode_Type(Integer32):
    """Custom type lcsDot1xSupplicantConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LcsDot1xSupplicantConfigMode_Type.__name__ = "Integer32"
_LcsDot1xSupplicantConfigMode_Object = MibTableColumn
lcsDot1xSupplicantConfigMode = _LcsDot1xSupplicantConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 3),
    _LcsDot1xSupplicantConfigMode_Type()
)
lcsDot1xSupplicantConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantConfigMode.setStatus("current")
_LcsDot1xSupplicantConfigUsername_Type = DisplayString
_LcsDot1xSupplicantConfigUsername_Object = MibTableColumn
lcsDot1xSupplicantConfigUsername = _LcsDot1xSupplicantConfigUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 4),
    _LcsDot1xSupplicantConfigUsername_Type()
)
lcsDot1xSupplicantConfigUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantConfigUsername.setStatus("current")
_LcsDot1xSupplicantConfigPassword_Type = DisplayString
_LcsDot1xSupplicantConfigPassword_Object = MibTableColumn
lcsDot1xSupplicantConfigPassword = _LcsDot1xSupplicantConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 5),
    _LcsDot1xSupplicantConfigPassword_Type()
)
lcsDot1xSupplicantConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantConfigPassword.setStatus("current")


class _LcsDot1xSupplicantStatusActive_Type(Integer32):
    """Custom type lcsDot1xSupplicantStatusActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_LcsDot1xSupplicantStatusActive_Type.__name__ = "Integer32"
_LcsDot1xSupplicantStatusActive_Object = MibTableColumn
lcsDot1xSupplicantStatusActive = _LcsDot1xSupplicantStatusActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 6),
    _LcsDot1xSupplicantStatusActive_Type()
)
lcsDot1xSupplicantStatusActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusActive.setStatus("current")


class _LcsDot1xSupplicantStatusAuthorized_Type(Integer32):
    """Custom type lcsDot1xSupplicantStatusAuthorized based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unauthorized", 0),
          ("authorized", 1))
    )


_LcsDot1xSupplicantStatusAuthorized_Type.__name__ = "Integer32"
_LcsDot1xSupplicantStatusAuthorized_Object = MibTableColumn
lcsDot1xSupplicantStatusAuthorized = _LcsDot1xSupplicantStatusAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 7),
    _LcsDot1xSupplicantStatusAuthorized_Type()
)
lcsDot1xSupplicantStatusAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusAuthorized.setStatus("current")


class _LcsDot1xSupplicantStatusLink_Type(Integer32):
    """Custom type lcsDot1xSupplicantStatusLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_LcsDot1xSupplicantStatusLink_Type.__name__ = "Integer32"
_LcsDot1xSupplicantStatusLink_Object = MibTableColumn
lcsDot1xSupplicantStatusLink = _LcsDot1xSupplicantStatusLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 8),
    _LcsDot1xSupplicantStatusLink_Type()
)
lcsDot1xSupplicantStatusLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusLink.setStatus("current")


class _LcsDot1xSupplicantStatusLogoff_Type(Integer32):
    """Custom type lcsDot1xSupplicantStatusLogoff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_LcsDot1xSupplicantStatusLogoff_Type.__name__ = "Integer32"
_LcsDot1xSupplicantStatusLogoff_Object = MibTableColumn
lcsDot1xSupplicantStatusLogoff = _LcsDot1xSupplicantStatusLogoff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 9),
    _LcsDot1xSupplicantStatusLogoff_Type()
)
lcsDot1xSupplicantStatusLogoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusLogoff.setStatus("current")
_LcsDot1xSupplicantStatusString_Type = DisplayString
_LcsDot1xSupplicantStatusString_Object = MibTableColumn
lcsDot1xSupplicantStatusString = _LcsDot1xSupplicantStatusString_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 10),
    _LcsDot1xSupplicantStatusString_Type()
)
lcsDot1xSupplicantStatusString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusString.setStatus("current")


class _LcsDot1xSupplicantStatusResult_Type(Integer32):
    """Custom type lcsDot1xSupplicantStatusResult based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("failure", 1),
          ("success", 2),
          ("expectedFailure", 3))
    )


_LcsDot1xSupplicantStatusResult_Type.__name__ = "Integer32"
_LcsDot1xSupplicantStatusResult_Object = MibTableColumn
lcsDot1xSupplicantStatusResult = _LcsDot1xSupplicantStatusResult_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 3, 1, 11),
    _LcsDot1xSupplicantStatusResult_Type()
)
lcsDot1xSupplicantStatusResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantStatusResult.setStatus("current")


class _LcsDot1xSupplicantSystemMacMode_Type(Integer32):
    """Custom type lcsDot1xSupplicantSystemMacMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("port", 0),
          ("system", 1))
    )


_LcsDot1xSupplicantSystemMacMode_Type.__name__ = "Integer32"
_LcsDot1xSupplicantSystemMacMode_Object = MibScalar
lcsDot1xSupplicantSystemMacMode = _LcsDot1xSupplicantSystemMacMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 1500, 4),
    _LcsDot1xSupplicantSystemMacMode_Type()
)
lcsDot1xSupplicantSystemMacMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDot1xSupplicantSystemMacMode.setStatus("current")
_LcsMaintenance_ObjectIdentity = ObjectIdentity
lcsMaintenance = _LcsMaintenance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4)
)


class _LcsRestartDevice_Type(ActivateCmd):
    """Custom type lcsRestartDevice based on ActivateCmd"""
    defaultValue = 0


_LcsRestartDevice_Type.__name__ = "ActivateCmd"
_LcsRestartDevice_Object = MibScalar
lcsRestartDevice = _LcsRestartDevice_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 1),
    _LcsRestartDevice_Type()
)
lcsRestartDevice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsRestartDevice.setStatus("current")


class _LcsFactoryDefaults_Type(ActivateCmd):
    """Custom type lcsFactoryDefaults based on ActivateCmd"""
    defaultValue = 0


_LcsFactoryDefaults_Type.__name__ = "ActivateCmd"
_LcsFactoryDefaults_Object = MibScalar
lcsFactoryDefaults = _LcsFactoryDefaults_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 2),
    _LcsFactoryDefaults_Type()
)
lcsFactoryDefaults.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsFactoryDefaults.setStatus("current")
_LcsSoftware_ObjectIdentity = ObjectIdentity
lcsSoftware = _LcsSoftware_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3)
)
_LcsSoftwareUsername_Type = DisplayString
_LcsSoftwareUsername_Object = MibScalar
lcsSoftwareUsername = _LcsSoftwareUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 1),
    _LcsSoftwareUsername_Type()
)
lcsSoftwareUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwareUsername.setStatus("current")
_LcsSoftwarePassword_Type = DisplayString
_LcsSoftwarePassword_Object = MibScalar
lcsSoftwarePassword = _LcsSoftwarePassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 2),
    _LcsSoftwarePassword_Type()
)
lcsSoftwarePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwarePassword.setStatus("current")
_LcsSoftwareIpAddress_Type = IpAddress
_LcsSoftwareIpAddress_Object = MibScalar
lcsSoftwareIpAddress = _LcsSoftwareIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 3),
    _LcsSoftwareIpAddress_Type()
)
lcsSoftwareIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwareIpAddress.setStatus("current")
_LcsSoftwareFileName_Type = DisplayString
_LcsSoftwareFileName_Object = MibScalar
lcsSoftwareFileName = _LcsSoftwareFileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 4),
    _LcsSoftwareFileName_Type()
)
lcsSoftwareFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwareFileName.setStatus("current")


class _LcsSoftwareUpgradeCmd_Type(Integer32):
    """Custom type lcsSoftwareUpgradeCmd based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 0),
          ("tftpUpgrade", 1),
          ("ftpUpgrade", 2))
    )


_LcsSoftwareUpgradeCmd_Type.__name__ = "Integer32"
_LcsSoftwareUpgradeCmd_Object = MibScalar
lcsSoftwareUpgradeCmd = _LcsSoftwareUpgradeCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 5),
    _LcsSoftwareUpgradeCmd_Type()
)
lcsSoftwareUpgradeCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwareUpgradeCmd.setStatus("current")


class _LcsSoftwareImageSelectionCmd_Type(ActivateCmd):
    """Custom type lcsSoftwareImageSelectionCmd based on ActivateCmd"""
    defaultValue = 0


_LcsSoftwareImageSelectionCmd_Type.__name__ = "ActivateCmd"
_LcsSoftwareImageSelectionCmd_Object = MibScalar
lcsSoftwareImageSelectionCmd = _LcsSoftwareImageSelectionCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 3, 6),
    _LcsSoftwareImageSelectionCmd_Type()
)
lcsSoftwareImageSelectionCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSoftwareImageSelectionCmd.setStatus("current")
_LcsConfig_ObjectIdentity = ObjectIdentity
lcsConfig = _LcsConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4)
)


class _LcsSaveStartCmd_Type(ActivateCmd):
    """Custom type lcsSaveStartCmd based on ActivateCmd"""
    defaultValue = 0


_LcsSaveStartCmd_Type.__name__ = "ActivateCmd"
_LcsSaveStartCmd_Object = MibScalar
lcsSaveStartCmd = _LcsSaveStartCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 1),
    _LcsSaveStartCmd_Type()
)
lcsSaveStartCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSaveStartCmd.setStatus("current")
_LcsConfigUsername_Type = DisplayString
_LcsConfigUsername_Object = MibScalar
lcsConfigUsername = _LcsConfigUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 2),
    _LcsConfigUsername_Type()
)
lcsConfigUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigUsername.setStatus("current")
_LcsConfigPassword_Type = DisplayString
_LcsConfigPassword_Object = MibScalar
lcsConfigPassword = _LcsConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 3),
    _LcsConfigPassword_Type()
)
lcsConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigPassword.setStatus("current")
_LcsConfigIpAddress_Type = IpAddress
_LcsConfigIpAddress_Object = MibScalar
lcsConfigIpAddress = _LcsConfigIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 4),
    _LcsConfigIpAddress_Type()
)
lcsConfigIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigIpAddress.setStatus("current")
_LcsConfigFilename_Type = DisplayString
_LcsConfigFilename_Object = MibScalar
lcsConfigFilename = _LcsConfigFilename_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 5),
    _LcsConfigFilename_Type()
)
lcsConfigFilename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsConfigFilename.setStatus("current")
_LcsConfigFileTable_Object = MibTable
lcsConfigFileTable = _LcsConfigFileTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6)
)
if mibBuilder.loadTexts:
    lcsConfigFileTable.setStatus("current")
_LcsConfigFileEntry_Object = MibTableRow
lcsConfigFileEntry = _LcsConfigFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1)
)
lcsConfigFileEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsConfigFileIndex"),
)
if mibBuilder.loadTexts:
    lcsConfigFileEntry.setStatus("current")


class _LcsConfigFileIndex_Type(Integer32):
    """Custom type lcsConfigFileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcsConfigFileIndex_Type.__name__ = "Integer32"
_LcsConfigFileIndex_Object = MibTableColumn
lcsConfigFileIndex = _LcsConfigFileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 1),
    _LcsConfigFileIndex_Type()
)
lcsConfigFileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsConfigFileIndex.setStatus("current")
_LcsShowConfigFileName_Type = DisplayString
_LcsShowConfigFileName_Object = MibTableColumn
lcsShowConfigFileName = _LcsShowConfigFileName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 2),
    _LcsShowConfigFileName_Type()
)
lcsShowConfigFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsShowConfigFileName.setStatus("current")


class _LcsActivateConfigCmd_Type(ActivateCmd):
    """Custom type lcsActivateConfigCmd based on ActivateCmd"""
    defaultValue = 0


_LcsActivateConfigCmd_Type.__name__ = "ActivateCmd"
_LcsActivateConfigCmd_Object = MibTableColumn
lcsActivateConfigCmd = _LcsActivateConfigCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 3),
    _LcsActivateConfigCmd_Type()
)
lcsActivateConfigCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsActivateConfigCmd.setStatus("current")


class _LcsDeleteConfigCmd_Type(ActivateCmd):
    """Custom type lcsDeleteConfigCmd based on ActivateCmd"""
    defaultValue = 0


_LcsDeleteConfigCmd_Type.__name__ = "ActivateCmd"
_LcsDeleteConfigCmd_Object = MibTableColumn
lcsDeleteConfigCmd = _LcsDeleteConfigCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 4),
    _LcsDeleteConfigCmd_Type()
)
lcsDeleteConfigCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDeleteConfigCmd.setStatus("current")


class _LcsDownloadConfigCmd_Type(Integer32):
    """Custom type lcsDownloadConfigCmd based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 0),
          ("tftpUpload", 1))
    )


_LcsDownloadConfigCmd_Type.__name__ = "Integer32"
_LcsDownloadConfigCmd_Object = MibTableColumn
lcsDownloadConfigCmd = _LcsDownloadConfigCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 5),
    _LcsDownloadConfigCmd_Type()
)
lcsDownloadConfigCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDownloadConfigCmd.setStatus("current")


class _LcsUploadConfigCmd_Type(Integer32):
    """Custom type lcsUploadConfigCmd based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 0),
          ("tftpDownload", 1))
    )


_LcsUploadConfigCmd_Type.__name__ = "Integer32"
_LcsUploadConfigCmd_Object = MibTableColumn
lcsUploadConfigCmd = _LcsUploadConfigCmd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 4, 6, 1, 6),
    _LcsUploadConfigCmd_Type()
)
lcsUploadConfigCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsUploadConfigCmd.setStatus("current")
_LcsDiagnostics_ObjectIdentity = ObjectIdentity
lcsDiagnostics = _LcsDiagnostics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5)
)
_LcsPingIpAddress_Type = IpAddress
_LcsPingIpAddress_Object = MibScalar
lcsPingIpAddress = _LcsPingIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 1),
    _LcsPingIpAddress_Type()
)
lcsPingIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPingIpAddress.setStatus("current")


class _LcsPingSize_Type(Integer32):
    """Custom type lcsPingSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 1400),
    )


_LcsPingSize_Type.__name__ = "Integer32"
_LcsPingSize_Object = MibScalar
lcsPingSize = _LcsPingSize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 2),
    _LcsPingSize_Type()
)
lcsPingSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPingSize.setStatus("current")


class _LcsDoPingConfig_Type(Integer32):
    """Custom type lcsDoPingConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_LcsDoPingConfig_Type.__name__ = "Integer32"
_LcsDoPingConfig_Object = MibScalar
lcsDoPingConfig = _LcsDoPingConfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 3),
    _LcsDoPingConfig_Type()
)
lcsDoPingConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDoPingConfig.setStatus("current")
_LcsPingResult_Type = DisplayString
_LcsPingResult_Object = MibScalar
lcsPingResult = _LcsPingResult_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 4),
    _LcsPingResult_Type()
)
lcsPingResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPingResult.setStatus("current")
_LcsPing6IpAddress_Type = DisplayString
_LcsPing6IpAddress_Object = MibScalar
lcsPing6IpAddress = _LcsPing6IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 5),
    _LcsPing6IpAddress_Type()
)
lcsPing6IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPing6IpAddress.setStatus("current")


class _LcsPing6Size_Type(Integer32):
    """Custom type lcsPing6Size based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 1400),
    )


_LcsPing6Size_Type.__name__ = "Integer32"
_LcsPing6Size_Object = MibScalar
lcsPing6Size = _LcsPing6Size_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 6),
    _LcsPing6Size_Type()
)
lcsPing6Size.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPing6Size.setStatus("current")


class _LcsPing6EgressInterface_Type(Integer32):
    """Custom type lcsPing6EgressInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_LcsPing6EgressInterface_Type.__name__ = "Integer32"
_LcsPing6EgressInterface_Object = MibScalar
lcsPing6EgressInterface = _LcsPing6EgressInterface_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 7),
    _LcsPing6EgressInterface_Type()
)
lcsPing6EgressInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsPing6EgressInterface.setStatus("current")


class _LcsDoPing6Config_Type(Integer32):
    """Custom type lcsDoPing6Config based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_LcsDoPing6Config_Type.__name__ = "Integer32"
_LcsDoPing6Config_Object = MibScalar
lcsDoPing6Config = _LcsDoPing6Config_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 8),
    _LcsDoPing6Config_Type()
)
lcsDoPing6Config.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDoPing6Config.setStatus("current")
_LcsPing6Result_Type = DisplayString
_LcsPing6Result_Object = MibScalar
lcsPing6Result = _LcsPing6Result_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 9),
    _LcsPing6Result_Type()
)
lcsPing6Result.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsPing6Result.setStatus("current")
_LcstracerouteIpAddress_Type = IpAddress
_LcstracerouteIpAddress_Object = MibScalar
lcstracerouteIpAddress = _LcstracerouteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 10),
    _LcstracerouteIpAddress_Type()
)
lcstracerouteIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcstracerouteIpAddress.setStatus("current")


class _LcstracerouteWaittime_Type(Integer32):
    """Custom type lcstracerouteWaittime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_LcstracerouteWaittime_Type.__name__ = "Integer32"
_LcstracerouteWaittime_Object = MibScalar
lcstracerouteWaittime = _LcstracerouteWaittime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 12),
    _LcstracerouteWaittime_Type()
)
lcstracerouteWaittime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcstracerouteWaittime.setStatus("current")


class _LcstracerouteMaxTTL_Type(Integer32):
    """Custom type lcstracerouteMaxTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LcstracerouteMaxTTL_Type.__name__ = "Integer32"
_LcstracerouteMaxTTL_Object = MibScalar
lcstracerouteMaxTTL = _LcstracerouteMaxTTL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 13),
    _LcstracerouteMaxTTL_Type()
)
lcstracerouteMaxTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcstracerouteMaxTTL.setStatus("current")


class _LcstracerouteNqueries_Type(Integer32):
    """Custom type lcstracerouteNqueries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_LcstracerouteNqueries_Type.__name__ = "Integer32"
_LcstracerouteNqueries_Object = MibScalar
lcstracerouteNqueries = _LcstracerouteNqueries_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 14),
    _LcstracerouteNqueries_Type()
)
lcstracerouteNqueries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcstracerouteNqueries.setStatus("current")


class _LcsDotracerouteConfig_Type(Integer32):
    """Custom type lcsDotracerouteConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_LcsDotracerouteConfig_Type.__name__ = "Integer32"
_LcsDotracerouteConfig_Object = MibScalar
lcsDotracerouteConfig = _LcsDotracerouteConfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 15),
    _LcsDotracerouteConfig_Type()
)
lcsDotracerouteConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsDotracerouteConfig.setStatus("current")
_LcstracerouteResult_Type = DisplayString
_LcstracerouteResult_Object = MibScalar
lcstracerouteResult = _LcstracerouteResult_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 16),
    _LcstracerouteResult_Type()
)
lcstracerouteResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcstracerouteResult.setStatus("current")
_LcsCableDiagnostics_ObjectIdentity = ObjectIdentity
lcsCableDiagnostics = _LcsCableDiagnostics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17)
)
_LcsCableDiagnosticsTest_Type = Integer32
_LcsCableDiagnosticsTest_Object = MibScalar
lcsCableDiagnosticsTest = _LcsCableDiagnosticsTest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 1),
    _LcsCableDiagnosticsTest_Type()
)
lcsCableDiagnosticsTest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsCableDiagnosticsTest.setStatus("current")
_LcsCableDiagnosticsTable_Object = MibTable
lcsCableDiagnosticsTable = _LcsCableDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2)
)
if mibBuilder.loadTexts:
    lcsCableDiagnosticsTable.setStatus("current")
_LcsCableDiagnosticsEntry_Object = MibTableRow
lcsCableDiagnosticsEntry = _LcsCableDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2, 1)
)
lcsCableDiagnosticsEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsCableDiagnosticsPort"),
)
if mibBuilder.loadTexts:
    lcsCableDiagnosticsEntry.setStatus("current")


class _LcsCableDiagnosticsPort_Type(Integer32):
    """Custom type lcsCableDiagnosticsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_LcsCableDiagnosticsPort_Type.__name__ = "Integer32"
_LcsCableDiagnosticsPort_Object = MibTableColumn
lcsCableDiagnosticsPort = _LcsCableDiagnosticsPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2, 1, 1),
    _LcsCableDiagnosticsPort_Type()
)
lcsCableDiagnosticsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsCableDiagnosticsPort.setStatus("current")
_LcsCableDiagnosticsLinkStatus_Type = DisplayString
_LcsCableDiagnosticsLinkStatus_Object = MibTableColumn
lcsCableDiagnosticsLinkStatus = _LcsCableDiagnosticsLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2, 1, 2),
    _LcsCableDiagnosticsLinkStatus_Type()
)
lcsCableDiagnosticsLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsCableDiagnosticsLinkStatus.setStatus("current")
_LcsCableDiagnosticsTestResult_Type = DisplayString
_LcsCableDiagnosticsTestResult_Object = MibTableColumn
lcsCableDiagnosticsTestResult = _LcsCableDiagnosticsTestResult_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2, 1, 3),
    _LcsCableDiagnosticsTestResult_Type()
)
lcsCableDiagnosticsTestResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsCableDiagnosticsTestResult.setStatus("current")
_LcsCableDiagnosticsLength_Type = DisplayString
_LcsCableDiagnosticsLength_Object = MibTableColumn
lcsCableDiagnosticsLength = _LcsCableDiagnosticsLength_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 5, 17, 2, 1, 4),
    _LcsCableDiagnosticsLength_Type()
)
lcsCableDiagnosticsLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsCableDiagnosticsLength.setStatus("current")
_LcsSwitchRebootSchedule_ObjectIdentity = ObjectIdentity
lcsSwitchRebootSchedule = _LcsSwitchRebootSchedule_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6)
)
_LcsSwitchRebootMode_Type = Integer32
_LcsSwitchRebootMode_Object = MibScalar
lcsSwitchRebootMode = _LcsSwitchRebootMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 1),
    _LcsSwitchRebootMode_Type()
)
lcsSwitchRebootMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSwitchRebootMode.setStatus("current")
_LcsSwitchRebootTimeTable_Object = MibTable
lcsSwitchRebootTimeTable = _LcsSwitchRebootTimeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 2)
)
if mibBuilder.loadTexts:
    lcsSwitchRebootTimeTable.setStatus("current")
_LcsSwitchRebootTimeEntry_Object = MibTableRow
lcsSwitchRebootTimeEntry = _LcsSwitchRebootTimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 2, 1)
)
lcsSwitchRebootTimeEntry.setIndexNames(
    (0, "LCOS-SX-MIB", "lcsSwitchRebootWeekIndex"),
)
if mibBuilder.loadTexts:
    lcsSwitchRebootTimeEntry.setStatus("current")


class _LcsSwitchRebootWeekIndex_Type(Integer32):
    """Custom type lcsSwitchRebootWeekIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_LcsSwitchRebootWeekIndex_Type.__name__ = "Integer32"
_LcsSwitchRebootWeekIndex_Object = MibTableColumn
lcsSwitchRebootWeekIndex = _LcsSwitchRebootWeekIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 2, 1, 1),
    _LcsSwitchRebootWeekIndex_Type()
)
lcsSwitchRebootWeekIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lcsSwitchRebootWeekIndex.setStatus("current")


class _LcsSwitchRebootTimeHour_Type(Integer32):
    """Custom type lcsSwitchRebootTimeHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 23),
    )


_LcsSwitchRebootTimeHour_Type.__name__ = "Integer32"
_LcsSwitchRebootTimeHour_Object = MibTableColumn
lcsSwitchRebootTimeHour = _LcsSwitchRebootTimeHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 2, 1, 2),
    _LcsSwitchRebootTimeHour_Type()
)
lcsSwitchRebootTimeHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSwitchRebootTimeHour.setStatus("current")


class _LcsSwitchRebootTimeMinute_Type(Integer32):
    """Custom type lcsSwitchRebootTimeMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 55),
    )


_LcsSwitchRebootTimeMinute_Type.__name__ = "Integer32"
_LcsSwitchRebootTimeMinute_Object = MibTableColumn
lcsSwitchRebootTimeMinute = _LcsSwitchRebootTimeMinute_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 6, 2, 1, 3),
    _LcsSwitchRebootTimeMinute_Type()
)
lcsSwitchRebootTimeMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsSwitchRebootTimeMinute.setStatus("current")
_LcsiPerf_ObjectIdentity = ObjectIdentity
lcsiPerf = _LcsiPerf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7)
)
_LcsiPerfMethod_Type = Integer32
_LcsiPerfMethod_Object = MibScalar
lcsiPerfMethod = _LcsiPerfMethod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 2),
    _LcsiPerfMethod_Type()
)
lcsiPerfMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfMethod.setStatus("current")
_LcsiPerfHost_Type = IpAddress
_LcsiPerfHost_Object = MibScalar
lcsiPerfHost = _LcsiPerfHost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 3),
    _LcsiPerfHost_Type()
)
lcsiPerfHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfHost.setStatus("current")
_LcsiPerfPort_Type = Integer32
_LcsiPerfPort_Object = MibScalar
lcsiPerfPort = _LcsiPerfPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 4),
    _LcsiPerfPort_Type()
)
lcsiPerfPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfPort.setStatus("current")
_LcsiPerfTime_Type = Integer32
_LcsiPerfTime_Object = MibScalar
lcsiPerfTime = _LcsiPerfTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 5),
    _LcsiPerfTime_Type()
)
lcsiPerfTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfTime.setStatus("current")
_LcsiPerfInterval_Type = Integer32
_LcsiPerfInterval_Object = MibScalar
lcsiPerfInterval = _LcsiPerfInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 6),
    _LcsiPerfInterval_Type()
)
lcsiPerfInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfInterval.setStatus("current")
_LcsiPerfTTL_Type = Integer32
_LcsiPerfTTL_Object = MibScalar
lcsiPerfTTL = _LcsiPerfTTL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 7),
    _LcsiPerfTTL_Type()
)
lcsiPerfTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfTTL.setStatus("current")
_LcsiPerfStart_Type = Integer32
_LcsiPerfStart_Object = MibScalar
lcsiPerfStart = _LcsiPerfStart_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 8),
    _LcsiPerfStart_Type()
)
lcsiPerfStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lcsiPerfStart.setStatus("current")
_LcsiPerfResult_Type = DisplayString
_LcsiPerfResult_Object = MibScalar
lcsiPerfResult = _LcsiPerfResult_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 4, 7, 9),
    _LcsiPerfResult_Type()
)
lcsiPerfResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsiPerfResult.setStatus("current")
_LcsTrap_ObjectIdentity = ObjectIdentity
lcsTrap = _LcsTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5)
)
_LcsTrapEvent_ObjectIdentity = ObjectIdentity
lcsTrapEvent = _LcsTrapEvent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1)
)
_LcsTrapVariable_ObjectIdentity = ObjectIdentity
lcsTrapVariable = _LcsTrapVariable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 2)
)
_LcsInformation_Type = DisplayString
_LcsInformation_Object = MibScalar
lcsInformation = _LcsInformation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 2, 1),
    _LcsInformation_Type()
)
lcsInformation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lcsInformation.setStatus("current")
_LcsMacTrap_ObjectIdentity = ObjectIdentity
lcsMacTrap = _LcsMacTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100)
)
_LcsMacTrapEvent_ObjectIdentity = ObjectIdentity
lcsMacTrapEvent = _LcsMacTrapEvent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100, 1)
)
_LcsMacTrapVars_ObjectIdentity = ObjectIdentity
lcsMacTrapVars = _LcsMacTrapVars_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100, 2)
)
_LcsMacTrapVarDelReason_Type = DisplayString
_LcsMacTrapVarDelReason_Object = MibScalar
lcsMacTrapVarDelReason = _LcsMacTrapVarDelReason_Object(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100, 2, 1),
    _LcsMacTrapVarDelReason_Type()
)
lcsMacTrapVarDelReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    lcsMacTrapVarDelReason.setStatus("current")
_LcsProducts_ObjectIdentity = ObjectIdentity
lcsProducts = _LcsProducts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8)
)
_LcsProductsGS3126X_ObjectIdentity = ObjectIdentity
lcsProductsGS3126X = _LcsProductsGS3126X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3126)
)
_LcsProductsGS3126XP_ObjectIdentity = ObjectIdentity
lcsProductsGS3126XP = _LcsProductsGS3126XP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3127)
)
_LcsProductsGS3128X_ObjectIdentity = ObjectIdentity
lcsProductsGS3128X = _LcsProductsGS3128X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3128)
)
_LcsProductsGS3128XP_ObjectIdentity = ObjectIdentity
lcsProductsGS3128XP = _LcsProductsGS3128XP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3129)
)
_LcsProductsGS3152X_ObjectIdentity = ObjectIdentity
lcsProductsGS3152X = _LcsProductsGS3152X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3152)
)
_LcsProductsGS3152XP_ObjectIdentity = ObjectIdentity
lcsProductsGS3152XP = _LcsProductsGS3152XP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3153)
)
_LcsProductsGS3152XSP_ObjectIdentity = ObjectIdentity
lcsProductsGS3152XSP = _LcsProductsGS3152XSP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3154)
)
_LcsProductsGS3152P_ObjectIdentity = ObjectIdentity
lcsProductsGS3152P = _LcsProductsGS3152P_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3155)
)
_LcsProductsGS3510XP_ObjectIdentity = ObjectIdentity
lcsProductsGS3510XP = _LcsProductsGS3510XP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3510)
)
_LcsProductsGS3510X_ObjectIdentity = ObjectIdentity
lcsProductsGS3510X = _LcsProductsGS3510X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3511)
)
_LcsProductsGS3528XSP_ObjectIdentity = ObjectIdentity
lcsProductsGS3528XSP = _LcsProductsGS3528XSP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3528)
)
_LcsProductsGS3528XP_ObjectIdentity = ObjectIdentity
lcsProductsGS3528XP = _LcsProductsGS3528XP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3529)
)
_LcsProductsGS3528X_ObjectIdentity = ObjectIdentity
lcsProductsGS3528X = _LcsProductsGS3528X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3530)
)
_LcsProductsGS3528XUP_ObjectIdentity = ObjectIdentity
lcsProductsGS3528XUP = _LcsProductsGS3528XUP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 14, 8, 3531)
)

# Managed Objects groups

lcsACLPortConfGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 2, 1)
)
lcsACLPortConfGroup.setObjects(
      *(("LCOS-SX-MIB", "lcsACLPortConfPolicyID"),
        ("LCOS-SX-MIB", "lcsACLPortConfAction"),
        ("LCOS-SX-MIB", "lcsACLPortConfRateLimiterID"),
        ("LCOS-SX-MIB", "lcsACLPortConfPortRedirect"),
        ("LCOS-SX-MIB", "lcsACLPortConfMirror"),
        ("LCOS-SX-MIB", "lcsACLPortConfLogging"),
        ("LCOS-SX-MIB", "lcsACLPortConfShutdown"),
        ("LCOS-SX-MIB", "lcsACLPortConfState"),
        ("LCOS-SX-MIB", "lcsACLPortConfCounter"))
)
if mibBuilder.loadTexts:
    lcsACLPortConfGroup.setStatus("current")

lcsACLRateLimiterGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 2, 2)
)
lcsACLRateLimiterGroup.setObjects(
      *(("LCOS-SX-MIB", "lcsACLRateLimiterRate"),
        ("LCOS-SX-MIB", "lcsACLRateLimiterUnit"))
)
if mibBuilder.loadTexts:
    lcsACLRateLimiterGroup.setStatus("current")

lcsACLACEGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 2, 3)
)
lcsACLACEGroup.setObjects(
      *(("LCOS-SX-MIB", "lcsACLACEClear"),
        ("LCOS-SX-MIB", "lcsACLACEID"),
        ("LCOS-SX-MIB", "lcsACLACENextID"),
        ("LCOS-SX-MIB", "lcsACLACEIngressPort"),
        ("LCOS-SX-MIB", "lcsACLACEPortPolicyNumber"),
        ("LCOS-SX-MIB", "lcsACLACEPortPolicyBitmask"),
        ("LCOS-SX-MIB", "lcsACLACEFrameType"),
        ("LCOS-SX-MIB", "lcsACLACEAction"),
        ("LCOS-SX-MIB", "lcsACLACEFilterPort"),
        ("LCOS-SX-MIB", "lcsACLACEDenyPortRedirect"),
        ("LCOS-SX-MIB", "lcsACLACERateLimiter"),
        ("LCOS-SX-MIB", "lcsACLACEMirror"),
        ("LCOS-SX-MIB", "lcsACLACELogging"),
        ("LCOS-SX-MIB", "lcsACLACEShutdown"),
        ("LCOS-SX-MIB", "lcsACLACECounter"),
        ("LCOS-SX-MIB", "lcsACLACEVLAN8021QTagged"),
        ("LCOS-SX-MIB", "lcsACLACEVLANVID"),
        ("LCOS-SX-MIB", "lcsACLACEVLANTagPriority"),
        ("LCOS-SX-MIB", "lcsACLACESMAC"),
        ("LCOS-SX-MIB", "lcsACLACEDMACType"),
        ("LCOS-SX-MIB", "lcsACLACEDMAC"),
        ("LCOS-SX-MIB", "lcsACLACEEtherType"),
        ("LCOS-SX-MIB", "lcsACLACEArpOpCode"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsRequestReply"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsArpSMac"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsRarpDmac"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsLength"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsIp"),
        ("LCOS-SX-MIB", "lcsACLACEArpFlagsEthernet"),
        ("LCOS-SX-MIB", "lcsACLACESIPType"),
        ("LCOS-SX-MIB", "lcsACLACESIPIPAddress"),
        ("LCOS-SX-MIB", "lcsACLACESIPIPMask"),
        ("LCOS-SX-MIB", "lcsACLACEDIPType"),
        ("LCOS-SX-MIB", "lcsACLACEDIPIPAddress"),
        ("LCOS-SX-MIB", "lcsACLACEDIPIPMask"),
        ("LCOS-SX-MIB", "lcsACLACEIPProtocol"),
        ("LCOS-SX-MIB", "lcsACLACEIPProtocolValue"),
        ("LCOS-SX-MIB", "lcsACLACEIPFlagsTTL"),
        ("LCOS-SX-MIB", "lcsACLACEIPFlagsFragment"),
        ("LCOS-SX-MIB", "lcsACLACEIPFlagsOptions"),
        ("LCOS-SX-MIB", "lcsACLACEICMPType"),
        ("LCOS-SX-MIB", "lcsACLACEICMPCode"),
        ("LCOS-SX-MIB", "lcsACLACESourcePort"),
        ("LCOS-SX-MIB", "lcsACLACEDestPort"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsFin"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsSyn"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsRst"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsPsh"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsAck"),
        ("LCOS-SX-MIB", "lcsACLACETCPFlagsUrg"),
        ("LCOS-SX-MIB", "lcsACLACEIPv6SIPAddress"),
        ("LCOS-SX-MIB", "lcsACLACEIPv6SIPBitmask"),
        ("LCOS-SX-MIB", "lcsACLACEIPv6HopLimit"),
        ("LCOS-SX-MIB", "lcsACLACERowStatus"))
)
if mibBuilder.loadTexts:
    lcsACLACEGroup.setStatus("current")

lcsACLStatusGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2356, 14, 2, 9, 1, 200, 2, 4)
)
lcsACLStatusGroup.setObjects(
      *(("LCOS-SX-MIB", "lcsACLStatusUser"),
        ("LCOS-SX-MIB", "lcsACLStatusID"),
        ("LCOS-SX-MIB", "lcsACLStatusIngressPort"),
        ("LCOS-SX-MIB", "lcsACLStatusFrameType"),
        ("LCOS-SX-MIB", "lcsACLStatusAction"),
        ("LCOS-SX-MIB", "lcsACLStatusRateLimiter"),
        ("LCOS-SX-MIB", "lcsACLStatusPortRedirect"),
        ("LCOS-SX-MIB", "lcsACLStatusMirror"),
        ("LCOS-SX-MIB", "lcsACLStatusCPU"),
        ("LCOS-SX-MIB", "lcsACLStatusCPUOnce"),
        ("LCOS-SX-MIB", "lcsACLStatusCounter"),
        ("LCOS-SX-MIB", "lcsACLStatusConflict"))
)
if mibBuilder.loadTexts:
    lcsACLStatusGroup.setStatus("current")

lcsARPGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2356, 14, 3, 2, 200, 2, 1)
)
lcsARPGroup.setObjects(
      *(("LCOS-SX-MIB", "lcsARPConfMode"),
        ("LCOS-SX-MIB", "lcsARPPortConfMode"),
        ("LCOS-SX-MIB", "lcsARPPortConfCheckVLAN"),
        ("LCOS-SX-MIB", "lcsARPPortConfLogType"),
        ("LCOS-SX-MIB", "lcsARPVlanConfigLogType"),
        ("LCOS-SX-MIB", "lcsARPVlanConfigRowStatus"),
        ("LCOS-SX-MIB", "lcsARPStaticPort"),
        ("LCOS-SX-MIB", "lcsARPStaticVlanID"),
        ("LCOS-SX-MIB", "lcsARPStaticMACAddress"),
        ("LCOS-SX-MIB", "lcsARPStaticIPAddress"),
        ("LCOS-SX-MIB", "lcsARPStaticRowStatus"),
        ("LCOS-SX-MIB", "lcsARPDynamicPort"),
        ("LCOS-SX-MIB", "lcsARPDynamicVLANId"),
        ("LCOS-SX-MIB", "lcsARPDynamicMACAddress"),
        ("LCOS-SX-MIB", "lcsARPDynamicIPAddress"),
        ("LCOS-SX-MIB", "lcsARPDynamicToStaticCmd"))
)
if mibBuilder.loadTexts:
    lcsARPGroup.setStatus("current")


# Notification objects

lcsEmergency = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 1)
)
lcsEmergency.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsEmergency.setStatus(
        "current"
    )

lcsAlert = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 2)
)
lcsAlert.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsAlert.setStatus(
        "current"
    )

lcsCritical = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 3)
)
lcsCritical.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsCritical.setStatus(
        "current"
    )

lcsError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 4)
)
lcsError.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsError.setStatus(
        "current"
    )

lcsWarning = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 5)
)
lcsWarning.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsWarning.setStatus(
        "current"
    )

lcsNotice = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 6)
)
lcsNotice.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsNotice.setStatus(
        "current"
    )

lcsInformational = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 7)
)
lcsInformational.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsInformational.setStatus(
        "current"
    )

lcsDebug = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 1, 8)
)
lcsDebug.setObjects(
    ("LCOS-SX-MIB", "lcsInformation")
)
if mibBuilder.loadTexts:
    lcsDebug.setStatus(
        "current"
    )

lcsMacTrapAddNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100, 1, 1)
)
lcsMacTrapAddNotification.setObjects(
      *(("Q-BRIDGE-MIB", "dot1qTpFdbAddress"),
        ("Q-BRIDGE-MIB", "dot1qFdbId"),
        ("Q-BRIDGE-MIB", "dot1qTpFdbPort"))
)
if mibBuilder.loadTexts:
    lcsMacTrapAddNotification.setStatus(
        "current"
    )

lcsMacTrapDelNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 14, 5, 100, 1, 2)
)
lcsMacTrapDelNotification.setObjects(
      *(("Q-BRIDGE-MIB", "dot1qTpFdbAddress"),
        ("Q-BRIDGE-MIB", "dot1qFdbId"),
        ("Q-BRIDGE-MIB", "dot1qTpFdbPort"),
        ("LCOS-SX-MIB", "lcsMacTrapVarDelReason"))
)
if mibBuilder.loadTexts:
    lcsMacTrapDelNotification.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "LCOS-SX-MIB",
    **{"OperState": OperState,
       "AdminMode": AdminMode,
       "AdminMode2": AdminMode2,
       "ActivateCmd": ActivateCmd,
       "KeyType": KeyType,
       "FrameRate": FrameRate,
       "DayOfWeek": DayOfWeek,
       "Month": Month,
       "SNMPv3SecurityLevel": SNMPv3SecurityLevel,
       "SNMPv3AuthenticationProtocol": SNMPv3AuthenticationProtocol,
       "SNMPv3PrivacyProtocol": SNMPv3PrivacyProtocol,
       "lcosSX": lcosSX,
       "lcsSystem": lcsSystem,
       "lcsSystemInformation": lcsSystemInformation,
       "lcsSystemInfo": lcsSystemInfo,
       "lcsSystemInfoModelName": lcsSystemInfoModelName,
       "lcsSystemInfoSystemDescript": lcsSystemInfoSystemDescript,
       "lcsSystemInfoLocation": lcsSystemInfoLocation,
       "lcsSystemInfoContact": lcsSystemInfoContact,
       "lcsSystemInfoSystemName": lcsSystemInfoSystemName,
       "lcsSystemInfoSystemDate": lcsSystemInfoSystemDate,
       "lcsSystemInfoSystemUptime": lcsSystemInfoSystemUptime,
       "lcsSystemInfoBootloaderVersion": lcsSystemInfoBootloaderVersion,
       "lcsSystemInfoFirmwareVersion": lcsSystemInfoFirmwareVersion,
       "lcsSystemInfoHardwareVersion": lcsSystemInfoHardwareVersion,
       "lcsSystemInfoMechanicalVersion": lcsSystemInfoMechanicalVersion,
       "lcsSystemInfoSeriesNumber": lcsSystemInfoSeriesNumber,
       "lcsSystemInfoHostMACAddress": lcsSystemInfoHostMACAddress,
       "lcsSystemInfoMemory": lcsSystemInfoMemory,
       "lcsSystemInfoFlash": lcsSystemInfoFlash,
       "lcsSystemInfoFanSpeed": lcsSystemInfoFanSpeed,
       "lcsSystemInfoTemperature1": lcsSystemInfoTemperature1,
       "lcsSystemInfoTemperature2": lcsSystemInfoTemperature2,
       "lcsSystemInfoCPULoad": lcsSystemInfoCPULoad,
       "lcsSystemInfoProductionDate": lcsSystemInfoProductionDate,
       "lcsSystemInfoTemperature3": lcsSystemInfoTemperature3,
       "lcsSystemInfoPhysicalPorts": lcsSystemInfoPhysicalPorts,
       "lcsSystemInfoTemperatureSensor1": lcsSystemInfoTemperatureSensor1,
       "lcsSystemInfoTemperatureSensor2": lcsSystemInfoTemperatureSensor2,
       "lcsSystemInfoTemperatureSensor3": lcsSystemInfoTemperatureSensor3,
       "lcsSystemInfoFreeMemory": lcsSystemInfoFreeMemory,
       "lcsPowerInformation": lcsPowerInformation,
       "lcsPowerInfoDetectedPSUA": lcsPowerInfoDetectedPSUA,
       "lcsPowerInfoDetectedPSUB": lcsPowerInfoDetectedPSUB,
       "lcsPowerInfoPSUStatusA": lcsPowerInfoPSUStatusA,
       "lcsPowerInfoPSUStatusB": lcsPowerInfoPSUStatusB,
       "lcsPowerInfoFANSpeedA": lcsPowerInfoFANSpeedA,
       "lcsPowerInfoFANSpeedB": lcsPowerInfoFANSpeedB,
       "lcsPowerInfoTemperatureA": lcsPowerInfoTemperatureA,
       "lcsPowerInfoTemperatureB": lcsPowerInfoTemperatureB,
       "lcsPowerInfoOperatingMode": lcsPowerInfoOperatingMode,
       "lcsSystemTimeConf": lcsSystemTimeConf,
       "lcsSystemTime": lcsSystemTime,
       "lcsSystemTimeZone": lcsSystemTimeZone,
       "lcsSystemTimeZoneConf": lcsSystemTimeZoneConf,
       "lcsSystemTimeZoneAcronym": lcsSystemTimeZoneAcronym,
       "lcsSystemTimeDaylightSaving": lcsSystemTimeDaylightSaving,
       "lcsSystemTimeDaylightSavingMode": lcsSystemTimeDaylightSavingMode,
       "lcsSystemTimeDaylightSavingStartWeek": lcsSystemTimeDaylightSavingStartWeek,
       "lcsSystemTimeDaylightSavingStartDay": lcsSystemTimeDaylightSavingStartDay,
       "lcsSystemTimeDaylightSavingStartMonth": lcsSystemTimeDaylightSavingStartMonth,
       "lcsSystemTimeDaylightSavingStartDate": lcsSystemTimeDaylightSavingStartDate,
       "lcsSystemTimeDaylightSavingStartYear": lcsSystemTimeDaylightSavingStartYear,
       "lcsSystemTimeDaylightSavingStartHours": lcsSystemTimeDaylightSavingStartHours,
       "lcsSystemTimeDaylightSavingStartMinutes": lcsSystemTimeDaylightSavingStartMinutes,
       "lcsSystemTimeDaylightSavingEndWeek": lcsSystemTimeDaylightSavingEndWeek,
       "lcsSystemTimeDaylightSavingEndDay": lcsSystemTimeDaylightSavingEndDay,
       "lcsSystemTimeDaylightSavingEndMonth": lcsSystemTimeDaylightSavingEndMonth,
       "lcsSystemTimeDaylightSavingEndDate": lcsSystemTimeDaylightSavingEndDate,
       "lcsSystemTimeDaylightSavingEndYear": lcsSystemTimeDaylightSavingEndYear,
       "lcsSystemTimeDaylightSavingEndHours": lcsSystemTimeDaylightSavingEndHours,
       "lcsSystemTimeDaylightSavingEndMinutes": lcsSystemTimeDaylightSavingEndMinutes,
       "lcsSystemTimeDaylightSavingOffset": lcsSystemTimeDaylightSavingOffset,
       "lcsSystemTimeConfiguration": lcsSystemTimeConfiguration,
       "lcsSystemTimeConfigurationClockSource": lcsSystemTimeConfigurationClockSource,
       "lcsSystemTimeConfigurationSystemDate": lcsSystemTimeConfigurationSystemDate,
       "lcsSystemTimeConfigurationDateFormat": lcsSystemTimeConfigurationDateFormat,
       "lcsSystemTimeConfigurationTimeFormat": lcsSystemTimeConfigurationTimeFormat,
       "lcsSystemTimeConfigurationSystemTime": lcsSystemTimeConfigurationSystemTime,
       "lcsSystemAccount": lcsSystemAccount,
       "lcsSystemAccountUsers": lcsSystemAccountUsers,
       "lcsUserConfigTable": lcsUserConfigTable,
       "lcsUserConfigEntry": lcsUserConfigEntry,
       "lcsUserConfigIndex": lcsUserConfigIndex,
       "lcsUserConfigUserName": lcsUserConfigUserName,
       "lcsUserConfigPassword": lcsUserConfigPassword,
       "lcsUserConfigPrivilegeLevel": lcsUserConfigPrivilegeLevel,
       "lcsUserConfigRowStatus": lcsUserConfigRowStatus,
       "lcsPrivilegeLevelConfigTable": lcsPrivilegeLevelConfigTable,
       "lcsPrivilegeLevelConfigEntry": lcsPrivilegeLevelConfigEntry,
       "lcsPrivilegeLevelIndex": lcsPrivilegeLevelIndex,
       "lcsPrivilegeLevelGroupName": lcsPrivilegeLevelGroupName,
       "lcsPrivilegeLevelConfigReadOnly": lcsPrivilegeLevelConfigReadOnly,
       "lcsPrivilegeLevelConfigReadWrite": lcsPrivilegeLevelConfigReadWrite,
       "lcsPrivilegeLevelStatusReadOnly": lcsPrivilegeLevelStatusReadOnly,
       "lcsPrivilegeLevelStatusReadWrite": lcsPrivilegeLevelStatusReadWrite,
       "lcsSystemAccountSuperUserPassword": lcsSystemAccountSuperUserPassword,
       "lcsSystemAccountSuperUserPasswordUnhashed": lcsSystemAccountSuperUserPasswordUnhashed,
       "lcsSystemAccountEnforcePasswordRules": lcsSystemAccountEnforcePasswordRules,
       "lcsIP": lcsIP,
       "lcsIPConfigurationBasic": lcsIPConfigurationBasic,
       "lcsIPConfigIPv4DHCPClientEnable": lcsIPConfigIPv4DHCPClientEnable,
       "lcsIPConfigIPv4Address": lcsIPConfigIPv4Address,
       "lcsIPConfigSubnetMask": lcsIPConfigSubnetMask,
       "lcsIPConfigGateway": lcsIPConfigGateway,
       "lcsIPConfigDNSServer": lcsIPConfigDNSServer,
       "lcsIPConfigDNSServerValue": lcsIPConfigDNSServerValue,
       "lcsIPConfiguration": lcsIPConfiguration,
       "lcsMode": lcsMode,
       "lcsDNSServerSource1": lcsDNSServerSource1,
       "lcsDNSServerSource2": lcsDNSServerSource2,
       "lcsDNSServerSource3": lcsDNSServerSource3,
       "lcsDNSServerSource4": lcsDNSServerSource4,
       "lcsDNSServerValue1": lcsDNSServerValue1,
       "lcsDNSServerValue2": lcsDNSServerValue2,
       "lcsDNSServerValue3": lcsDNSServerValue3,
       "lcsDNSServerValue4": lcsDNSServerValue4,
       "lcsDNSProxy": lcsDNSProxy,
       "lcsIPInterfaces": lcsIPInterfaces,
       "lcsIPInterfacesTable": lcsIPInterfacesTable,
       "lcsIPInterfacesEntry": lcsIPInterfacesEntry,
       "lcsIPInterfacesIndex": lcsIPInterfacesIndex,
       "lcsIPInterfacesVLAN": lcsIPInterfacesVLAN,
       "lcsIPInterfacesIPv4DHCP": lcsIPInterfacesIPv4DHCP,
       "lcsIPInterfacesIPv4DHCPFallback": lcsIPInterfacesIPv4DHCPFallback,
       "lcsIPInterfacesIPv4DHCPCurrentLease": lcsIPInterfacesIPv4DHCPCurrentLease,
       "lcsIPInterfacesIPv4Address": lcsIPInterfacesIPv4Address,
       "lcsIPInterfacesIPv4Mask": lcsIPInterfacesIPv4Mask,
       "lcsIPInterfacesIPv6DHCP": lcsIPInterfacesIPv6DHCP,
       "lcsIPInterfacesIPv6RapidCommit": lcsIPInterfacesIPv6RapidCommit,
       "lcsIPInterfacesIPv6CurrentLease": lcsIPInterfacesIPv6CurrentLease,
       "lcsIPInterfacesIPv6Address": lcsIPInterfacesIPv6Address,
       "lcsIPInterfacesIPv6Mask": lcsIPInterfacesIPv6Mask,
       "lcsIPInterfacesRowStatus": lcsIPInterfacesRowStatus,
       "lcsIPRoutes": lcsIPRoutes,
       "lcsIPRoutesTable": lcsIPRoutesTable,
       "lcsIPRoutesEntry": lcsIPRoutesEntry,
       "lcsIPRoutesIndex": lcsIPRoutesIndex,
       "lcsIPRoutesNetwork": lcsIPRoutesNetwork,
       "lcsIPRoutesMaskLength": lcsIPRoutesMaskLength,
       "lcsIPRoutesGateway": lcsIPRoutesGateway,
       "lcsIPRoutesNextHopVLAN": lcsIPRoutesNextHopVLAN,
       "lcsIPRoutesRowStatus": lcsIPRoutesRowStatus,
       "lcsIPStatusInterface": lcsIPStatusInterface,
       "lcsIPStatusInterfaceTable": lcsIPStatusInterfaceTable,
       "lcsIPStatusInterfaceEntry": lcsIPStatusInterfaceEntry,
       "lcsIPStatusInterfaceIndex": lcsIPStatusInterfaceIndex,
       "lcsIPStatusInterfaceName": lcsIPStatusInterfaceName,
       "lcsIPStatusInterfaceType": lcsIPStatusInterfaceType,
       "lcsIPStatusInterfaceAddress": lcsIPStatusInterfaceAddress,
       "lcsIPStatusInterfaceStatus": lcsIPStatusInterfaceStatus,
       "lcsIPStatusRoute": lcsIPStatusRoute,
       "lcsIPStatusRouteTable": lcsIPStatusRouteTable,
       "lcsIPStatusRouteEntry": lcsIPStatusRouteEntry,
       "lcsIPStatusRouteIndex": lcsIPStatusRouteIndex,
       "lcsIPStatusRouteNetwork": lcsIPStatusRouteNetwork,
       "lcsIPStatusRouteGateway": lcsIPStatusRouteGateway,
       "lcsIPStatusRouteAddress": lcsIPStatusRouteAddress,
       "lcsIPStatusNeighborCache": lcsIPStatusNeighborCache,
       "lcsIPStatusNeighborCacheTable": lcsIPStatusNeighborCacheTable,
       "lcsIPStatusNeighborCacheEntry": lcsIPStatusNeighborCacheEntry,
       "lcsIPStatusNeighborCacheIndex": lcsIPStatusNeighborCacheIndex,
       "lcsIPStatusNeighborCacheIPAddress": lcsIPStatusNeighborCacheIPAddress,
       "lcsIPStatusNeighborCacheLinkAddress": lcsIPStatusNeighborCacheLinkAddress,
       "lcsIPStatusDNSServer": lcsIPStatusDNSServer,
       "lcsIPStatusDNSServerType": lcsIPStatusDNSServerType,
       "lcsIPStatusDNSServerIPAddress": lcsIPStatusDNSServerIPAddress,
       "lcsIPStatusDNSServerInterface": lcsIPStatusDNSServerInterface,
       "lcsSyslog": lcsSyslog,
       "lcsSyslogConf": lcsSyslogConf,
       "lcsSystemLogServerMode": lcsSystemLogServerMode,
       "lcsSystemLogServerAddress": lcsSystemLogServerAddress,
       "lcsSystemLogServerPort": lcsSystemLogServerPort,
       "lcsSystemLogIncludeHostname": lcsSystemLogIncludeHostname,
       "lcsSysLogInfo": lcsSysLogInfo,
       "lcsSystemLogInfoLevel": lcsSystemLogInfoLevel,
       "lcsSystemLogInfoClearLevel": lcsSystemLogInfoClearLevel,
       "lcsSystemLogInfoClearCmd": lcsSystemLogInfoClearCmd,
       "lcsSystemLogDetailedInfoTable": lcsSystemLogDetailedInfoTable,
       "lcsSystemLogDetailedInfoEntry": lcsSystemLogDetailedInfoEntry,
       "lcsSystemLogDetailedSwitchIndex": lcsSystemLogDetailedSwitchIndex,
       "lcsSystemLogDetailedInfoID": lcsSystemLogDetailedInfoID,
       "lcsSystemLogDetailedInfoLevel": lcsSystemLogDetailedInfoLevel,
       "lcsSystemLogDetailedInfoTime": lcsSystemLogDetailedInfoTime,
       "lcsSystemLogDetailedInfoMessage": lcsSystemLogDetailedInfoMessage,
       "lcsSnmp": lcsSnmp,
       "lcsSnmpSystem": lcsSnmpSystem,
       "lcsSnmpSystemMode": lcsSnmpSystemMode,
       "lcsSnmpSystemReadCommunity": lcsSnmpSystemReadCommunity,
       "lcsSnmpSystemWriteCommunity": lcsSnmpSystemWriteCommunity,
       "lcsSnmpSystemWriteCommunityMode": lcsSnmpSystemWriteCommunityMode,
       "lcsSnmpSystemReadCommunityMode": lcsSnmpSystemReadCommunityMode,
       "lcsTrapDestinationConfTable": lcsTrapDestinationConfTable,
       "lcsTrapDestinationConfEntry": lcsTrapDestinationConfEntry,
       "lcsTrapDestinationConfIndex": lcsTrapDestinationConfIndex,
       "lcsTrapDestinationConfTrapConfigName": lcsTrapDestinationConfTrapConfigName,
       "lcsTrapDestinationConfTrapMode": lcsTrapDestinationConfTrapMode,
       "lcsTrapDestinationConfTrapVersion": lcsTrapDestinationConfTrapVersion,
       "lcsTrapDestinationConfTrapCommunity": lcsTrapDestinationConfTrapCommunity,
       "lcsTrapDestinationConfTrapDestinationAddres": lcsTrapDestinationConfTrapDestinationAddres,
       "lcsTrapDestinationConfTrapDestinationPort": lcsTrapDestinationConfTrapDestinationPort,
       "lcsTrapDestinationConfTrapSecurityEngineID": lcsTrapDestinationConfTrapSecurityEngineID,
       "lcsTrapDestinationConfTrapSecurityName": lcsTrapDestinationConfTrapSecurityName,
       "lcsTrapDestinationConfTrapRowStatus": lcsTrapDestinationConfTrapRowStatus,
       "lcsSNMPCommunityConfTable": lcsSNMPCommunityConfTable,
       "lcsSNMPCommunityConfEntry": lcsSNMPCommunityConfEntry,
       "lcsSNMPCommunityConfIndex": lcsSNMPCommunityConfIndex,
       "lcsSNMPCommunityConfSNMPv3Community": lcsSNMPCommunityConfSNMPv3Community,
       "lcsSNMPCommunityConfSNMPv3SourceIP": lcsSNMPCommunityConfSNMPv3SourceIP,
       "lcsSNMPCommunityConfSNMPv3SourceMask": lcsSNMPCommunityConfSNMPv3SourceMask,
       "lcsSNMPCommunityConfSNMPv3RowStatus": lcsSNMPCommunityConfSNMPv3RowStatus,
       "lcsSNMPv3UserConfTable": lcsSNMPv3UserConfTable,
       "lcsSNMPv3UserConfEntry": lcsSNMPv3UserConfEntry,
       "lcsSNMPv3UserConfIndex": lcsSNMPv3UserConfIndex,
       "lcsSNMPv3UserConfEngineID": lcsSNMPv3UserConfEngineID,
       "lcsSNMPv3UserConfUserName": lcsSNMPv3UserConfUserName,
       "lcsSNMPv3UserConfSecurityLevel": lcsSNMPv3UserConfSecurityLevel,
       "lcsSNMPv3UserConfAuthenticationProtocol": lcsSNMPv3UserConfAuthenticationProtocol,
       "lcsSNMPv3UserConfAuthenticationPassword": lcsSNMPv3UserConfAuthenticationPassword,
       "lcsSNMPv3UserConfPrivacyProtocol": lcsSNMPv3UserConfPrivacyProtocol,
       "lcsSNMPv3UserConfPrivacyPassword": lcsSNMPv3UserConfPrivacyPassword,
       "lcsSNMPv3UserConfRowStatus": lcsSNMPv3UserConfRowStatus,
       "lcsSNMPv3GroupConfTable": lcsSNMPv3GroupConfTable,
       "lcsSNMPv3GroupConfEntry": lcsSNMPv3GroupConfEntry,
       "lcsSNMPv3GroupConfIndex": lcsSNMPv3GroupConfIndex,
       "lcsSNMPv3GroupConfSecurityModel": lcsSNMPv3GroupConfSecurityModel,
       "lcsSNMPv3GroupConfSecurityName": lcsSNMPv3GroupConfSecurityName,
       "lcsSNMPv3GroupConfGroupName": lcsSNMPv3GroupConfGroupName,
       "lcsSNMPv3GroupConfRowStatus": lcsSNMPv3GroupConfRowStatus,
       "lcsSNMPv3ViewsConfTable": lcsSNMPv3ViewsConfTable,
       "lcsSNMPv3ViewsConfEntry": lcsSNMPv3ViewsConfEntry,
       "lcsSNMPv3ViewsConfIndex": lcsSNMPv3ViewsConfIndex,
       "lcsSNMPv3ViewsConfViewName": lcsSNMPv3ViewsConfViewName,
       "lcsSNMPv3ViewsConfViewType": lcsSNMPv3ViewsConfViewType,
       "lcsSNMPv3ViewsConfOIDSubtree": lcsSNMPv3ViewsConfOIDSubtree,
       "lcsSNMPv3ViewsConfRowStatus": lcsSNMPv3ViewsConfRowStatus,
       "lcsSNMPv3AccessConfTable": lcsSNMPv3AccessConfTable,
       "lcsSNMPv3AccessConfEntry": lcsSNMPv3AccessConfEntry,
       "lcsSNMPv3AccessConfIndex": lcsSNMPv3AccessConfIndex,
       "lcsSNMPv3AccessConfGroupName": lcsSNMPv3AccessConfGroupName,
       "lcsSNMPv3AccessConfSecurityModel": lcsSNMPv3AccessConfSecurityModel,
       "lcsSNMPv3AccessConfSecurityLevel": lcsSNMPv3AccessConfSecurityLevel,
       "lcsSNMPv3AccessConfReadViewName": lcsSNMPv3AccessConfReadViewName,
       "lcsSNMPv3AccessConfWriteViewName": lcsSNMPv3AccessConfWriteViewName,
       "lcsSNMPv3AccessConfRowStatus": lcsSNMPv3AccessConfRowStatus,
       "lcsDHCPServer": lcsDHCPServer,
       "lcsDHCPServerConfig": lcsDHCPServerConfig,
       "lcsDHCPServerConfigTable": lcsDHCPServerConfigTable,
       "lcsDHCPServerConfigEntry": lcsDHCPServerConfigEntry,
       "lcsDHCPServerConfigIndex": lcsDHCPServerConfigIndex,
       "lcsDHCPServerConfigInterfaceVLAN": lcsDHCPServerConfigInterfaceVLAN,
       "lcsDHCPServerConfigInterfaceMode": lcsDHCPServerConfigInterfaceMode,
       "lcsDHCPServerConfigInterfaceStartIPEndIP": lcsDHCPServerConfigInterfaceStartIPEndIP,
       "lcsDHCPServerConfigInterfaceLeaseTime": lcsDHCPServerConfigInterfaceLeaseTime,
       "lcsDHCPServerConfigInterfaceSubnetMask": lcsDHCPServerConfigInterfaceSubnetMask,
       "lcsDHCPServerConfigInterfaceDefaultRouter": lcsDHCPServerConfigInterfaceDefaultRouter,
       "lcsDHCPServerConfigInterfaceDNSServer": lcsDHCPServerConfigInterfaceDNSServer,
       "lcsDHCPServerStatus": lcsDHCPServerStatus,
       "lcsDHCPServerStatusTable": lcsDHCPServerStatusTable,
       "lcsDHCPServerStatusEntry": lcsDHCPServerStatusEntry,
       "lcsDHCPServerStatusIndex": lcsDHCPServerStatusIndex,
       "lcsDHCPServerStatusInterfaceVLAN": lcsDHCPServerStatusInterfaceVLAN,
       "lcsDHCPServerStatusInterfaceType": lcsDHCPServerStatusInterfaceType,
       "lcsDHCPServerStatusInterfaceStartIP": lcsDHCPServerStatusInterfaceStartIP,
       "lcsDHCPServerStatusInterfaceEndIP": lcsDHCPServerStatusInterfaceEndIP,
       "lcsDHCPServerStatusInterfaceLeaseTime": lcsDHCPServerStatusInterfaceLeaseTime,
       "lcsDHCPServerStatusInterfaceSubnetMask": lcsDHCPServerStatusInterfaceSubnetMask,
       "lcsDHCPServerStatusInterfaceDefaultRouter": lcsDHCPServerStatusInterfaceDefaultRouter,
       "lcsDHCPServerStatusInterfaceDNSServer": lcsDHCPServerStatusInterfaceDNSServer,
       "lcsVLANConf": lcsVLANConf,
       "lcsVLAN": lcsVLAN,
       "lcsVlanExistingVLANs": lcsVlanExistingVLANs,
       "lcsVlanEthertypeforCustomSPorts": lcsVlanEthertypeforCustomSPorts,
       "lcsVlanTable": lcsVlanTable,
       "lcsVlanEntry": lcsVlanEntry,
       "lcsVlanMode": lcsVlanMode,
       "lcsVlanPortVLAN": lcsVlanPortVLAN,
       "lcsVlanPortType": lcsVlanPortType,
       "lcsVlanIngressFiltering": lcsVlanIngressFiltering,
       "lcsVlanIngressAcceptance": lcsVlanIngressAcceptance,
       "lcsVlanEgressTagging": lcsVlanEgressTagging,
       "lcsVlanAllowedVLANs": lcsVlanAllowedVLANs,
       "lcsVlanForbiddenVLANs": lcsVlanForbiddenVLANs,
       "lcsVlanStatus": lcsVlanStatus,
       "lcsVLANMembershipStatusTable": lcsVLANMembershipStatusTable,
       "lcsVLANMembershipStatusEntry": lcsVLANMembershipStatusEntry,
       "lcsVLANMembershipVlanID": lcsVLANMembershipVlanID,
       "lcsVLANMembershipStatus": lcsVLANMembershipStatus,
       "lcsVLANPortStatusTable": lcsVLANPortStatusTable,
       "lcsVLANPortStatusEntry": lcsVLANPortStatusEntry,
       "lcsVLANPortStatusPortType": lcsVLANPortStatusPortType,
       "lcsVLANPortStatusIngressFiltering": lcsVLANPortStatusIngressFiltering,
       "lcsVLANPortStatusFrameType": lcsVLANPortStatusFrameType,
       "lcsVLANPortStatusPortVLANID": lcsVLANPortStatusPortVLANID,
       "lcsVLANPortStatusTxTag": lcsVLANPortStatusTxTag,
       "lcsVLANPortStatusUntaggedVLANID": lcsVLANPortStatusUntaggedVLANID,
       "lcsVLANPortStatusConflicts": lcsVLANPortStatusConflicts,
       "lcsMacBaesdVlanMembershipConfig": lcsMacBaesdVlanMembershipConfig,
       "lcsMacBaesdVlanMembershipConfigTable": lcsMacBaesdVlanMembershipConfigTable,
       "lcsMacBaesdVlanMembershipConfigEntry": lcsMacBaesdVlanMembershipConfigEntry,
       "lcsMacBaesdVlanMembershipConfigIndex": lcsMacBaesdVlanMembershipConfigIndex,
       "lcsMacBaesdVlanMembershipConfigMACAddress": lcsMacBaesdVlanMembershipConfigMACAddress,
       "lcsMacBaesdVlanMembershipConfigVLANID": lcsMacBaesdVlanMembershipConfigVLANID,
       "lcsMacBaesdVlanMembershipConfigPortMembers": lcsMacBaesdVlanMembershipConfigPortMembers,
       "lcsMacBaesdVlanMembershipConfigRowStatus": lcsMacBaesdVlanMembershipConfigRowStatus,
       "lcsMacBaesdVlanMembershipStatusUser": lcsMacBaesdVlanMembershipStatusUser,
       "lcsMacBaesdVlanMembershipStatus": lcsMacBaesdVlanMembershipStatus,
       "lcsMacBaesdVlanMembershipStatusTable": lcsMacBaesdVlanMembershipStatusTable,
       "lcsMacBaesdVlanMembershipStatusEntry": lcsMacBaesdVlanMembershipStatusEntry,
       "lcsMacBaesdVlanMembershipStatusIndex": lcsMacBaesdVlanMembershipStatusIndex,
       "lcsMacBaesdVlanMembershipStatusMACAddress": lcsMacBaesdVlanMembershipStatusMACAddress,
       "lcsMacBaesdVlanMembershipStatusVLANID": lcsMacBaesdVlanMembershipStatusVLANID,
       "lcsMacBaesdVlanMembershipStatusPortMembers": lcsMacBaesdVlanMembershipStatusPortMembers,
       "lcsProtocolbasedVLANConfig": lcsProtocolbasedVLANConfig,
       "lcsProtocolbasedVLANConfigTable": lcsProtocolbasedVLANConfigTable,
       "lcsProtocolbasedVLANConfigEntry": lcsProtocolbasedVLANConfigEntry,
       "lcsProtocolbasedVLANConfigIndex": lcsProtocolbasedVLANConfigIndex,
       "lcsProtocolbasedVLANConfigFrameType": lcsProtocolbasedVLANConfigFrameType,
       "lcsProtocolbasedVLANConfigValueEthernetEtype": lcsProtocolbasedVLANConfigValueEthernetEtype,
       "lcsProtocolbasedVLANConfigValueSNAPOUI": lcsProtocolbasedVLANConfigValueSNAPOUI,
       "lcsProtocolbasedVLANConfigValueSNAPPID": lcsProtocolbasedVLANConfigValueSNAPPID,
       "lcsProtocolbasedVLANConfigValueLLCDSAP": lcsProtocolbasedVLANConfigValueLLCDSAP,
       "lcsProtocolbasedVLANConfigValueLLCSSAP": lcsProtocolbasedVLANConfigValueLLCSSAP,
       "lcsProtocolbasedVLANConfigGroupName": lcsProtocolbasedVLANConfigGroupName,
       "lcsProtocolbasedVLANConfigRowStatus": lcsProtocolbasedVLANConfigRowStatus,
       "lcsGroupNameToVLANMappingConfigTable": lcsGroupNameToVLANMappingConfigTable,
       "lcsGroupNameToVLANMappingConfigEntry": lcsGroupNameToVLANMappingConfigEntry,
       "lcsGroupNameToVLANMappingConfigIndex": lcsGroupNameToVLANMappingConfigIndex,
       "lcsGroupNameToVLANMappingConfigGroupName": lcsGroupNameToVLANMappingConfigGroupName,
       "lcsGroupNameToVLANMappingConfigVLANID": lcsGroupNameToVLANMappingConfigVLANID,
       "lcsGroupNameToVLANMappingConfigPortMembers": lcsGroupNameToVLANMappingConfigPortMembers,
       "lcsGroupNameToVLANMappingConfigRowStatus": lcsGroupNameToVLANMappingConfigRowStatus,
       "lcsIPSubnetBasedVLANConfig": lcsIPSubnetBasedVLANConfig,
       "lcsIPSubnetBasedVLANConfigTable": lcsIPSubnetBasedVLANConfigTable,
       "lcsIPSubnetBasedVLANConfigEntry": lcsIPSubnetBasedVLANConfigEntry,
       "lcsIPSubnetBasedVLANConfigIndex": lcsIPSubnetBasedVLANConfigIndex,
       "lcsIPSubnetBasedVLANConfigIPAddress": lcsIPSubnetBasedVLANConfigIPAddress,
       "lcsIPSubnetBasedVLANConfigMaskLength": lcsIPSubnetBasedVLANConfigMaskLength,
       "lcsIPSubnetBasedVLANConfigVLANID": lcsIPSubnetBasedVLANConfigVLANID,
       "lcsIPSubnetBasedVLANConfigPortMembers": lcsIPSubnetBasedVLANConfigPortMembers,
       "lcsIPSubnetBasedVLANConfigRowStatus": lcsIPSubnetBasedVLANConfigRowStatus,
       "lcsVLANNameConfig": lcsVLANNameConfig,
       "lcsVLANNameConfigTable": lcsVLANNameConfigTable,
       "lcsVLANNameConfigEntry": lcsVLANNameConfigEntry,
       "lcsVLANNameConfigIndex": lcsVLANNameConfigIndex,
       "lcsVLANNameConfigVLANName": lcsVLANNameConfigVLANName,
       "lcsNTPConf": lcsNTPConf,
       "lcsNTPConfigMode": lcsNTPConfigMode,
       "lcsNTPConfigTimeSyncInterval": lcsNTPConfigTimeSyncInterval,
       "lcsNTPConfigServerAddress1": lcsNTPConfigServerAddress1,
       "lcsNTPConfigServerAddress2": lcsNTPConfigServerAddress2,
       "lcsNTPConfigServerAddress3": lcsNTPConfigServerAddress3,
       "lcsNTPConfigServerAddress4": lcsNTPConfigServerAddress4,
       "lcsNTPConfigServerAddress5": lcsNTPConfigServerAddress5,
       "lcsConfiguration": lcsConfiguration,
       "lcsPort": lcsPort,
       "lcsPortConfigurationTable": lcsPortConfigurationTable,
       "lcsPortConfigurationEntry": lcsPortConfigurationEntry,
       "lcsPortConfPort": lcsPortConfPort,
       "lcsPortConfDescription": lcsPortConfDescription,
       "lcsPortConfLink": lcsPortConfLink,
       "lcsPortConfSpeedStatus": lcsPortConfSpeedStatus,
       "lcsPortConfSpeedMode": lcsPortConfSpeedMode,
       "lcsPortConfFlowControlRxStatus": lcsPortConfFlowControlRxStatus,
       "lcsPortConfFlowControlTxStatus": lcsPortConfFlowControlTxStatus,
       "lcsPortConfFlowControlMode": lcsPortConfFlowControlMode,
       "lcsPortConfMaximumFrameSize": lcsPortConfMaximumFrameSize,
       "lcsPortTrafficStatisticsTable": lcsPortTrafficStatisticsTable,
       "lcsPortTrafficStatisticsEntry": lcsPortTrafficStatisticsEntry,
       "lcsPortTrafficStatisticsPort": lcsPortTrafficStatisticsPort,
       "lcsPortTrafficStatisticsClear": lcsPortTrafficStatisticsClear,
       "lcsPortTrafficRxPackets": lcsPortTrafficRxPackets,
       "lcsPortTrafficRxOctets": lcsPortTrafficRxOctets,
       "lcsPortTrafficRxUnicast": lcsPortTrafficRxUnicast,
       "lcsPortTrafficRxMulticast": lcsPortTrafficRxMulticast,
       "lcsPortTrafficRxBroadcast": lcsPortTrafficRxBroadcast,
       "lcsPortTrafficRxPause": lcsPortTrafficRxPause,
       "lcsPortTrafficRx64Bytes": lcsPortTrafficRx64Bytes,
       "lcsPortTrafficRx65to127Bytes": lcsPortTrafficRx65to127Bytes,
       "lcsPortTrafficRx128to255Bytes": lcsPortTrafficRx128to255Bytes,
       "lcsPortTrafficRx256to511Bytes": lcsPortTrafficRx256to511Bytes,
       "lcsPortTrafficRx512to1023Bytes": lcsPortTrafficRx512to1023Bytes,
       "lcsPortTrafficRx1024to1526Bytes": lcsPortTrafficRx1024to1526Bytes,
       "lcsPortTrafficRxExceecd1527Bytes": lcsPortTrafficRxExceecd1527Bytes,
       "lcsPortTrafficRxQ0": lcsPortTrafficRxQ0,
       "lcsPortTrafficRxQ1": lcsPortTrafficRxQ1,
       "lcsPortTrafficRxQ2": lcsPortTrafficRxQ2,
       "lcsPortTrafficRxQ3": lcsPortTrafficRxQ3,
       "lcsPortTrafficRxQ4": lcsPortTrafficRxQ4,
       "lcsPortTrafficRxQ5": lcsPortTrafficRxQ5,
       "lcsPortTrafficRxQ6": lcsPortTrafficRxQ6,
       "lcsPortTrafficRxQ7": lcsPortTrafficRxQ7,
       "lcsPortTrafficRxDrops": lcsPortTrafficRxDrops,
       "lcsPortTrafficRxCRCorAlignment": lcsPortTrafficRxCRCorAlignment,
       "lcsPortTrafficRxUndersize": lcsPortTrafficRxUndersize,
       "lcsPortTrafficRxOversize": lcsPortTrafficRxOversize,
       "lcsPortTrafficRxFragments": lcsPortTrafficRxFragments,
       "lcsPortTrafficRxJabber": lcsPortTrafficRxJabber,
       "lcsPortTrafficRxFiltered": lcsPortTrafficRxFiltered,
       "lcsPortTrafficTxPackets": lcsPortTrafficTxPackets,
       "lcsPortTrafficTxOctets": lcsPortTrafficTxOctets,
       "lcsPortTrafficTxUnicast": lcsPortTrafficTxUnicast,
       "lcsPortTrafficTxMulticast": lcsPortTrafficTxMulticast,
       "lcsPortTrafficTxBroadcast": lcsPortTrafficTxBroadcast,
       "lcsPortTrafficTxPause": lcsPortTrafficTxPause,
       "lcsPortTrafficTx64Bytes": lcsPortTrafficTx64Bytes,
       "lcsPortTrafficTx65to127Bytes": lcsPortTrafficTx65to127Bytes,
       "lcsPortTrafficTx128to255Bytes": lcsPortTrafficTx128to255Bytes,
       "lcsPortTrafficTx256to511Bytes": lcsPortTrafficTx256to511Bytes,
       "lcsPortTrafficTx512to1023Bytes": lcsPortTrafficTx512to1023Bytes,
       "lcsPortTrafficTx1024to1526Bytes": lcsPortTrafficTx1024to1526Bytes,
       "lcsPortTrafficTxExceecd1527Bytes": lcsPortTrafficTxExceecd1527Bytes,
       "lcsPortTrafficTxQ0": lcsPortTrafficTxQ0,
       "lcsPortTrafficTxQ1": lcsPortTrafficTxQ1,
       "lcsPortTrafficTxQ2": lcsPortTrafficTxQ2,
       "lcsPortTrafficTxQ3": lcsPortTrafficTxQ3,
       "lcsPortTrafficTxQ4": lcsPortTrafficTxQ4,
       "lcsPortTrafficTxQ5": lcsPortTrafficTxQ5,
       "lcsPortTrafficTxQ6": lcsPortTrafficTxQ6,
       "lcsPortTrafficTxQ7": lcsPortTrafficTxQ7,
       "lcsPortTrafficTxDrops": lcsPortTrafficTxDrops,
       "lcsPortTrafficTxLateOrExcColl": lcsPortTrafficTxLateOrExcColl,
       "lcsPortQoSStatistics": lcsPortQoSStatistics,
       "lcsPortQoSStatisticsClear": lcsPortQoSStatisticsClear,
       "lcsPortQoSStatisticsTable": lcsPortQoSStatisticsTable,
       "lcsPortQoSStatisticsEntry": lcsPortQoSStatisticsEntry,
       "lcsPortQoSStatisticsPort": lcsPortQoSStatisticsPort,
       "lcsPortQoSQ0Rx": lcsPortQoSQ0Rx,
       "lcsPortQoSQ0Tx": lcsPortQoSQ0Tx,
       "lcsPortQoSQ1Rx": lcsPortQoSQ1Rx,
       "lcsPortQoSQ1Tx": lcsPortQoSQ1Tx,
       "lcsPortQoSQ2Rx": lcsPortQoSQ2Rx,
       "lcsPortQoSQ2Tx": lcsPortQoSQ2Tx,
       "lcsPortQoSQ3Rx": lcsPortQoSQ3Rx,
       "lcsPortQoSQ3Tx": lcsPortQoSQ3Tx,
       "lcsPortQoSQ4Rx": lcsPortQoSQ4Rx,
       "lcsPortQoSQ4Tx": lcsPortQoSQ4Tx,
       "lcsPortQoSQ5Rx": lcsPortQoSQ5Rx,
       "lcsPortQoSQ5Tx": lcsPortQoSQ5Tx,
       "lcsPortQoSQ6Rx": lcsPortQoSQ6Rx,
       "lcsPortQoSQ6Tx": lcsPortQoSQ6Tx,
       "lcsPortQoSQ7Rx": lcsPortQoSQ7Rx,
       "lcsPortQoSQ7Tx": lcsPortQoSQ7Tx,
       "lcsSFPInfoTable": lcsSFPInfoTable,
       "lcsSFPInfoEntry": lcsSFPInfoEntry,
       "lcsSFPInfoIndex": lcsSFPInfoIndex,
       "lcsSFPInfoPort": lcsSFPInfoPort,
       "lcsSFPConnectorType": lcsSFPConnectorType,
       "lcsSFPFiberType": lcsSFPFiberType,
       "lcsSFPTxCentralWavelength": lcsSFPTxCentralWavelength,
       "lcsSFPBaudRate": lcsSFPBaudRate,
       "lcsSFPVendorOUI": lcsSFPVendorOUI,
       "lcsSFPVendorName": lcsSFPVendorName,
       "lcsSFPVendorPN": lcsSFPVendorPN,
       "lcsSFPVendorRev": lcsSFPVendorRev,
       "lcsSFPVendorSN": lcsSFPVendorSN,
       "lcsSFPDateCode": lcsSFPDateCode,
       "lcsSFPTemperature": lcsSFPTemperature,
       "lcsSFPVcc": lcsSFPVcc,
       "lcsSFPMon1Bias": lcsSFPMon1Bias,
       "lcsSFPMon2TxPWR": lcsSFPMon2TxPWR,
       "lcsSFPMon3RxPWR": lcsSFPMon3RxPWR,
       "lcsVoiceVLAN": lcsVoiceVLAN,
       "lcsVoiceVLANConf": lcsVoiceVLANConf,
       "lcsVoiceVLANMode": lcsVoiceVLANMode,
       "lcsVoiceVLANVLANId": lcsVoiceVLANVLANId,
       "lcsVoiceVLANAgingTime": lcsVoiceVLANAgingTime,
       "lcsVoiceVLANTrafficClass": lcsVoiceVLANTrafficClass,
       "lcsVoiceVLANPortTable": lcsVoiceVLANPortTable,
       "lcsVoiceVLANPortEntry": lcsVoiceVLANPortEntry,
       "lcsVoiceVLANPort": lcsVoiceVLANPort,
       "lcsVoiceVLANPortMode": lcsVoiceVLANPortMode,
       "lcsVoiceVLANPortSecurity": lcsVoiceVLANPortSecurity,
       "lcsVoiceVLANPortDiscoveryProtocol": lcsVoiceVLANPortDiscoveryProtocol,
       "lcsVoiceVLANOUI": lcsVoiceVLANOUI,
       "lcsVoiceVLANOUICreate": lcsVoiceVLANOUICreate,
       "lcsVoiceVLANOUITable": lcsVoiceVLANOUITable,
       "lcsVoiceVLANOUIEntry": lcsVoiceVLANOUIEntry,
       "lcsVoiceVLANOUIIndex": lcsVoiceVLANOUIIndex,
       "lcsVoiceVLANTelephonyOUI": lcsVoiceVLANTelephonyOUI,
       "lcsVoiceVLANDescription": lcsVoiceVLANDescription,
       "lcsVoiceVLANOUIRowStatus": lcsVoiceVLANOUIRowStatus,
       "lcsGVRP": lcsGVRP,
       "lcsGVRPConf": lcsGVRPConf,
       "lcsGVRPMode": lcsGVRPMode,
       "lcsGVRPMaxVlan": lcsGVRPMaxVlan,
       "lcsGVRPJoinTime": lcsGVRPJoinTime,
       "lcsGVRPLeaveTime": lcsGVRPLeaveTime,
       "lcsGVRPLeaveAllTime": lcsGVRPLeaveAllTime,
       "lcsGVRPConfTable": lcsGVRPConfTable,
       "lcsGVRPConfEntry": lcsGVRPConfEntry,
       "lcsGVRPConfPort": lcsGVRPConfPort,
       "lcsGVRPConfPortMode": lcsGVRPConfPortMode,
       "lcsMirroring": lcsMirroring,
       "lcsMonitorSession": lcsMonitorSession,
       "lcsPortToMirrorOn": lcsPortToMirrorOn,
       "lcsMirrorTable": lcsMirrorTable,
       "lcsMirrorEntry": lcsMirrorEntry,
       "lcsMirrorPort": lcsMirrorPort,
       "lcsMirrorMode": lcsMirrorMode,
       "lcsTrapEventSeverity": lcsTrapEventSeverity,
       "lcsTrapEventSeverityTable": lcsTrapEventSeverityTable,
       "lcsTrapEventSeverityEntry": lcsTrapEventSeverityEntry,
       "lcsTrapEventSeverityIndex": lcsTrapEventSeverityIndex,
       "lcsTrapEventSeverityGroupName": lcsTrapEventSeverityGroupName,
       "lcsTrapEventSeverityLevel": lcsTrapEventSeverityLevel,
       "lcsTrapEventSeveritySyslog": lcsTrapEventSeveritySyslog,
       "lcsTrapEventSeverityTrap": lcsTrapEventSeverityTrap,
       "lcsTrapEventSeveritySMTP": lcsTrapEventSeveritySMTP,
       "lcsSMTP": lcsSMTP,
       "lcsSMTPMailServer": lcsSMTPMailServer,
       "lcsSMTPUserName": lcsSMTPUserName,
       "lcsSMTPPassword": lcsSMTPPassword,
       "lcsSMTPSender": lcsSMTPSender,
       "lcsSMTPReturnPath": lcsSMTPReturnPath,
       "lcsSMTPEmailAddress1": lcsSMTPEmailAddress1,
       "lcsSMTPEmailAddress2": lcsSMTPEmailAddress2,
       "lcsSMTPEmailAddress3": lcsSMTPEmailAddress3,
       "lcsSMTPEmailAddress4": lcsSMTPEmailAddress4,
       "lcsSMTPEmailAddress5": lcsSMTPEmailAddress5,
       "lcsSMTPEmailAddress6": lcsSMTPEmailAddress6,
       "lcsACLConf": lcsACLConf,
       "lcsACL": lcsACL,
       "lcsACLPortConfTable": lcsACLPortConfTable,
       "lcsACLPortConfEntry": lcsACLPortConfEntry,
       "lcsACLPortConfPolicyID": lcsACLPortConfPolicyID,
       "lcsACLPortConfAction": lcsACLPortConfAction,
       "lcsACLPortConfRateLimiterID": lcsACLPortConfRateLimiterID,
       "lcsACLPortConfPortRedirect": lcsACLPortConfPortRedirect,
       "lcsACLPortConfMirror": lcsACLPortConfMirror,
       "lcsACLPortConfLogging": lcsACLPortConfLogging,
       "lcsACLPortConfShutdown": lcsACLPortConfShutdown,
       "lcsACLPortConfState": lcsACLPortConfState,
       "lcsACLPortConfCounter": lcsACLPortConfCounter,
       "lcsACLRateLimiterTable": lcsACLRateLimiterTable,
       "lcsACLRateLimiterEntry": lcsACLRateLimiterEntry,
       "lcsACLRateLimiterID": lcsACLRateLimiterID,
       "lcsACLRateLimiterRate": lcsACLRateLimiterRate,
       "lcsACLRateLimiterUnit": lcsACLRateLimiterUnit,
       "lcsACLStatusTable": lcsACLStatusTable,
       "lcsACLStatusEntry": lcsACLStatusEntry,
       "lcsACLStatusIndex": lcsACLStatusIndex,
       "lcsACLStatusUser": lcsACLStatusUser,
       "lcsACLStatusID": lcsACLStatusID,
       "lcsACLStatusIngressPort": lcsACLStatusIngressPort,
       "lcsACLStatusFrameType": lcsACLStatusFrameType,
       "lcsACLStatusAction": lcsACLStatusAction,
       "lcsACLStatusRateLimiter": lcsACLStatusRateLimiter,
       "lcsACLStatusPortRedirect": lcsACLStatusPortRedirect,
       "lcsACLStatusMirror": lcsACLStatusMirror,
       "lcsACLStatusCPU": lcsACLStatusCPU,
       "lcsACLStatusCPUOnce": lcsACLStatusCPUOnce,
       "lcsACLStatusCounter": lcsACLStatusCounter,
       "lcsACLStatusConflict": lcsACLStatusConflict,
       "lcsAclConformance": lcsAclConformance,
       "lcsAclCompliances": lcsAclCompliances,
       "lcsAclGroups": lcsAclGroups,
       "lcsACLPortConfGroup": lcsACLPortConfGroup,
       "lcsACLRateLimiterGroup": lcsACLRateLimiterGroup,
       "lcsACLACEGroup": lcsACLACEGroup,
       "lcsACLStatusGroup": lcsACLStatusGroup,
       "lcsACLACE": lcsACLACE,
       "lcsACLACEClear": lcsACLACEClear,
       "lcsACLACETable": lcsACLACETable,
       "lcsACLACEEntry": lcsACLACEEntry,
       "lcsACLACEIndex": lcsACLACEIndex,
       "lcsACLACEID": lcsACLACEID,
       "lcsACLACENextID": lcsACLACENextID,
       "lcsACLACEIngressPort": lcsACLACEIngressPort,
       "lcsACLACEPortPolicyNumber": lcsACLACEPortPolicyNumber,
       "lcsACLACEPortPolicyBitmask": lcsACLACEPortPolicyBitmask,
       "lcsACLACEFrameType": lcsACLACEFrameType,
       "lcsACLACEAction": lcsACLACEAction,
       "lcsACLACEFilterPort": lcsACLACEFilterPort,
       "lcsACLACEDenyPortRedirect": lcsACLACEDenyPortRedirect,
       "lcsACLACERateLimiter": lcsACLACERateLimiter,
       "lcsACLACEMirror": lcsACLACEMirror,
       "lcsACLACELogging": lcsACLACELogging,
       "lcsACLACEShutdown": lcsACLACEShutdown,
       "lcsACLACECounter": lcsACLACECounter,
       "lcsACLACEVLAN8021QTagged": lcsACLACEVLAN8021QTagged,
       "lcsACLACEVLANVID": lcsACLACEVLANVID,
       "lcsACLACEVLANTagPriority": lcsACLACEVLANTagPriority,
       "lcsACLACESMAC": lcsACLACESMAC,
       "lcsACLACEDMACType": lcsACLACEDMACType,
       "lcsACLACEDMAC": lcsACLACEDMAC,
       "lcsACLACEEtherType": lcsACLACEEtherType,
       "lcsACLACEArpOpCode": lcsACLACEArpOpCode,
       "lcsACLACEArpFlagsRequestReply": lcsACLACEArpFlagsRequestReply,
       "lcsACLACEArpFlagsArpSMac": lcsACLACEArpFlagsArpSMac,
       "lcsACLACEArpFlagsRarpDmac": lcsACLACEArpFlagsRarpDmac,
       "lcsACLACEArpFlagsLength": lcsACLACEArpFlagsLength,
       "lcsACLACEArpFlagsIp": lcsACLACEArpFlagsIp,
       "lcsACLACEArpFlagsEthernet": lcsACLACEArpFlagsEthernet,
       "lcsACLACESIPType": lcsACLACESIPType,
       "lcsACLACESIPIPAddress": lcsACLACESIPIPAddress,
       "lcsACLACESIPIPMask": lcsACLACESIPIPMask,
       "lcsACLACEDIPType": lcsACLACEDIPType,
       "lcsACLACEDIPIPAddress": lcsACLACEDIPIPAddress,
       "lcsACLACEDIPIPMask": lcsACLACEDIPIPMask,
       "lcsACLACEIPProtocol": lcsACLACEIPProtocol,
       "lcsACLACEIPProtocolValue": lcsACLACEIPProtocolValue,
       "lcsACLACEIPFlagsTTL": lcsACLACEIPFlagsTTL,
       "lcsACLACEIPFlagsFragment": lcsACLACEIPFlagsFragment,
       "lcsACLACEIPFlagsOptions": lcsACLACEIPFlagsOptions,
       "lcsACLACEICMPType": lcsACLACEICMPType,
       "lcsACLACEICMPCode": lcsACLACEICMPCode,
       "lcsACLACESourcePort": lcsACLACESourcePort,
       "lcsACLACEDestPort": lcsACLACEDestPort,
       "lcsACLACETCPFlagsFin": lcsACLACETCPFlagsFin,
       "lcsACLACETCPFlagsSyn": lcsACLACETCPFlagsSyn,
       "lcsACLACETCPFlagsRst": lcsACLACETCPFlagsRst,
       "lcsACLACETCPFlagsPsh": lcsACLACETCPFlagsPsh,
       "lcsACLACETCPFlagsAck": lcsACLACETCPFlagsAck,
       "lcsACLACETCPFlagsUrg": lcsACLACETCPFlagsUrg,
       "lcsACLACEIPv6SIPAddress": lcsACLACEIPv6SIPAddress,
       "lcsACLACEIPv6SIPBitmask": lcsACLACEIPv6SIPBitmask,
       "lcsACLACEIPv6HopLimit": lcsACLACEIPv6HopLimit,
       "lcsACLACESMACMask": lcsACLACESMACMask,
       "lcsACLACEDMACMask": lcsACLACEDMACMask,
       "lcsACLACERowStatus": lcsACLACERowStatus,
       "lcsQosConf": lcsQosConf,
       "lcsQos": lcsQos,
       "lcsQosPortClassification": lcsQosPortClassification,
       "lcsQosPortClassificationTable": lcsQosPortClassificationTable,
       "lcsQosPortClassificationEntry": lcsQosPortClassificationEntry,
       "lcsQosPortClassificationQoSClass": lcsQosPortClassificationQoSClass,
       "lcsQosPortClassificationDPlevel": lcsQosPortClassificationDPlevel,
       "lcsQosPortClassificationPCP": lcsQosPortClassificationPCP,
       "lcsQosPortClassificationDEI": lcsQosPortClassificationDEI,
       "lcsQosPortClassificationPCPClassification": lcsQosPortClassificationPCPClassification,
       "lcsQosPortClassificationDSCPBased": lcsQosPortClassificationDSCPBased,
       "lcsQosPortClassificationWredGroup": lcsQosPortClassificationWredGroup,
       "lcsQoSIngressPortTagClassificationTable": lcsQoSIngressPortTagClassificationTable,
       "lcsQoSIngressPortTagClassificationEntry": lcsQoSIngressPortTagClassificationEntry,
       "lcsQoSIngressPortTagPCP": lcsQoSIngressPortTagPCP,
       "lcsQoSIngressPortTagDEI": lcsQoSIngressPortTagDEI,
       "lcsQoSIngressPortTagQosClass": lcsQoSIngressPortTagQosClass,
       "lcsQoSIngressPortTagDPLevel": lcsQoSIngressPortTagDPLevel,
       "lcsQosPortPolicing": lcsQosPortPolicing,
       "lcsQosPortPolicingTable": lcsQosPortPolicingTable,
       "lcsQosPortPolicingEntry": lcsQosPortPolicingEntry,
       "lcsQosPortPolicingEnabled": lcsQosPortPolicingEnabled,
       "lcsQosPortPolicingRate": lcsQosPortPolicingRate,
       "lcsQosPortPolicingUnit": lcsQosPortPolicingUnit,
       "lcsQosPortPolicingFlowControl": lcsQosPortPolicingFlowControl,
       "lcsQosEgressPortPCPRemarking": lcsQosEgressPortPCPRemarking,
       "lcsQosEgressPortPCPRemarkingTable": lcsQosEgressPortPCPRemarkingTable,
       "lcsQosEgressPortPCPRemarkingEntry": lcsQosEgressPortPCPRemarkingEntry,
       "lcsQosEgressPortPCPRemarkingMode": lcsQosEgressPortPCPRemarkingMode,
       "lcsQosEgressPortPCPRemarkingSpecificTable": lcsQosEgressPortPCPRemarkingSpecificTable,
       "lcsQosEgressPortPCPRemarkingSpecificEntry": lcsQosEgressPortPCPRemarkingSpecificEntry,
       "lcsQosEgressPortPCPRemarkingSpecificPCP": lcsQosEgressPortPCPRemarkingSpecificPCP,
       "lcsQosEgressPortPCPRemarkingSpecificDEI": lcsQosEgressPortPCPRemarkingSpecificDEI,
       "lcsQosEgressPortPCPRemarkingMappedTable": lcsQosEgressPortPCPRemarkingMappedTable,
       "lcsQosEgressPortPCPRemarkingMappedEntry": lcsQosEgressPortPCPRemarkingMappedEntry,
       "lcsQosEgressPortPCPRemarkingMappedQueuePriority": lcsQosEgressPortPCPRemarkingMappedQueuePriority,
       "lcsQosEgressPortPCPRemarkingMappedDPLevel": lcsQosEgressPortPCPRemarkingMappedDPLevel,
       "lcsQosEgressPortPCPRemarkingMappedPCP": lcsQosEgressPortPCPRemarkingMappedPCP,
       "lcsQosEgressPortPCPRemarkingMappedDEI": lcsQosEgressPortPCPRemarkingMappedDEI,
       "lcsQosPortDSCP": lcsQosPortDSCP,
       "lcsQosPortDSCPTable": lcsQosPortDSCPTable,
       "lcsQosPortDSCPEntry": lcsQosPortDSCPEntry,
       "lcsQosPortDSCPIngressTranslate": lcsQosPortDSCPIngressTranslate,
       "lcsQosPortDSCPIngressClassify": lcsQosPortDSCPIngressClassify,
       "lcsQosPortDSCPEgressRewrite": lcsQosPortDSCPEgressRewrite,
       "lcsQosDSCPBasedQoS": lcsQosDSCPBasedQoS,
       "lcsQosDSCPBasedQoSTable": lcsQosDSCPBasedQoSTable,
       "lcsQosDSCPBasedQoSEntry": lcsQosDSCPBasedQoSEntry,
       "lcsQosDSCPBasedQoSList": lcsQosDSCPBasedQoSList,
       "lcsQosDSCPBasedQoSDSCP": lcsQosDSCPBasedQoSDSCP,
       "lcsQosDSCPBasedQoSTrust": lcsQosDSCPBasedQoSTrust,
       "lcsQosDSCPBasedQoSQueuePriority": lcsQosDSCPBasedQoSQueuePriority,
       "lcsQosDSCPBasedQoSDPL": lcsQosDSCPBasedQoSDPL,
       "lcsQosDSCPTranslation": lcsQosDSCPTranslation,
       "lcsQosDSCPTranslationTable": lcsQosDSCPTranslationTable,
       "lcsQosDSCPTranslationEntry": lcsQosDSCPTranslationEntry,
       "lcsQosDSCPTranslationList": lcsQosDSCPTranslationList,
       "lcsQosDSCPTranslationDSCPBasedId": lcsQosDSCPTranslationDSCPBasedId,
       "lcsQosDSCPTranslationIngressTranslate": lcsQosDSCPTranslationIngressTranslate,
       "lcsQosDSCPTranslationIngressClassify": lcsQosDSCPTranslationIngressClassify,
       "lcsQosDSCPTranslationEgressRemap": lcsQosDSCPTranslationEgressRemap,
       "lcsQosDSCPClassification": lcsQosDSCPClassification,
       "lcsQosDSCPClassificationTable": lcsQosDSCPClassificationTable,
       "lcsQosDSCPClassificationEntry": lcsQosDSCPClassificationEntry,
       "lcsQosDSCPClassificationQoSClass": lcsQosDSCPClassificationQoSClass,
       "lcsQosDSCPClassificationDSCPDP0": lcsQosDSCPClassificationDSCPDP0,
       "lcsQosDSCPClassificationDSCPDP1": lcsQosDSCPClassificationDSCPDP1,
       "lcsQosDSCPClassificationDSCPDP2": lcsQosDSCPClassificationDSCPDP2,
       "lcsQosDSCPClassificationDSCPDP3": lcsQosDSCPClassificationDSCPDP3,
       "lcsQosControlList": lcsQosControlList,
       "lcsQosQceTable": lcsQosQceTable,
       "lcsQosQceEntry": lcsQosQceEntry,
       "lcsQosQceIndex": lcsQosQceIndex,
       "lcsQosQceID": lcsQosQceID,
       "lcsQosQceList": lcsQosQceList,
       "lcsQosQcePortMembers": lcsQosQcePortMembers,
       "lcsQosQceTag": lcsQosQceTag,
       "lcsQosQceVID": lcsQosQceVID,
       "lcsQosPCP": lcsQosPCP,
       "lcsQosDEI": lcsQosDEI,
       "lcsQosSMAC": lcsQosSMAC,
       "lcsQosDMACType": lcsQosDMACType,
       "lcsQosDMACValue": lcsQosDMACValue,
       "lcsQosQceInnerTag": lcsQosQceInnerTag,
       "lcsQosQceInnerVID": lcsQosQceInnerVID,
       "lcsQosInnerPCP": lcsQosInnerPCP,
       "lcsQosInnerDEI": lcsQosInnerDEI,
       "lcsQosFrameType": lcsQosFrameType,
       "lcsQosMacEtherType": lcsQosMacEtherType,
       "lcsQosLLCSSAPAddr": lcsQosLLCSSAPAddr,
       "lcsQosLLCDSAPAddr": lcsQosLLCDSAPAddr,
       "lcsQosLLCControl": lcsQosLLCControl,
       "lcsQosSNAPPID": lcsQosSNAPPID,
       "lcsQosIpv4Protocol": lcsQosIpv4Protocol,
       "lcsQosIpv4ProtocolValue": lcsQosIpv4ProtocolValue,
       "lcsQosIpv4ProtocolUDPSPort": lcsQosIpv4ProtocolUDPSPort,
       "lcsQosIpv4ProtocolUDPDPort": lcsQosIpv4ProtocolUDPDPort,
       "lcsQosIpv4ProtocolTCPSPort": lcsQosIpv4ProtocolTCPSPort,
       "lcsQosIpv4ProtocolTCPDPort": lcsQosIpv4ProtocolTCPDPort,
       "lcsQosIpv4SourceIp": lcsQosIpv4SourceIp,
       "lcsQosIpv4SourceMask": lcsQosIpv4SourceMask,
       "lcsQosIpv4DestIp": lcsQosIpv4DestIp,
       "lcsQosIpv4DestMask": lcsQosIpv4DestMask,
       "lcsQosIpv4IPFragment": lcsQosIpv4IPFragment,
       "lcsQosIpv4DSCP": lcsQosIpv4DSCP,
       "lcsQosIpv6Protocol": lcsQosIpv6Protocol,
       "lcsQosIpv6ProtocolValue": lcsQosIpv6ProtocolValue,
       "lcsQosIpv6ProtocolUDPSPort": lcsQosIpv6ProtocolUDPSPort,
       "lcsQosIpv6ProtocolUDPDPort": lcsQosIpv6ProtocolUDPDPort,
       "lcsQosIpv6ProtocolTCPSPort": lcsQosIpv6ProtocolTCPSPort,
       "lcsQosIpv6ProtocolTCPDPort": lcsQosIpv6ProtocolTCPDPort,
       "lcsQosIpv6SourceIp": lcsQosIpv6SourceIp,
       "lcsQosIpv6SourceMask": lcsQosIpv6SourceMask,
       "lcsQosIpv6DestIp": lcsQosIpv6DestIp,
       "lcsQosIpv6DestMask": lcsQosIpv6DestMask,
       "lcsQosIpv6DSCP": lcsQosIpv6DSCP,
       "lcsQosActionQueuePriority": lcsQosActionQueuePriority,
       "lcsQosActionDPL": lcsQosActionDPL,
       "lcsQosActionDSCP": lcsQosActionDSCP,
       "lcsQosActionPCP": lcsQosActionPCP,
       "lcsQosActionDEI": lcsQosActionDEI,
       "lcsQosActionPolicy": lcsQosActionPolicy,
       "lcsQosActionIngressMapID": lcsQosActionIngressMapID,
       "lcsQosQceRowStatus": lcsQosQceRowStatus,
       "lcsQosStormControl": lcsQosStormControl,
       "lcsQosStormControlTable": lcsQosStormControlTable,
       "lcsQosStormControlEntry": lcsQosStormControlEntry,
       "lcsQosStormControlFrameType": lcsQosStormControlFrameType,
       "lcsQosStormControlEnabled": lcsQosStormControlEnabled,
       "lcsQosStormControlRate": lcsQosStormControlRate,
       "lcsQosStormControlUnit": lcsQosStormControlUnit,
       "lcsQosPortStormControl": lcsQosPortStormControl,
       "lcsQosPortStormControlTable": lcsQosPortStormControlTable,
       "lcsQosPortStormControlEntry": lcsQosPortStormControlEntry,
       "lcsQosPortStormControlUnicastEnabled": lcsQosPortStormControlUnicastEnabled,
       "lcsQosPortStormControlUnicastRate": lcsQosPortStormControlUnicastRate,
       "lcsQosPortStormControlUnicastUnit": lcsQosPortStormControlUnicastUnit,
       "lcsQosPortStormControlBroadcastEnabled": lcsQosPortStormControlBroadcastEnabled,
       "lcsQosPortStormControlBroadcastRate": lcsQosPortStormControlBroadcastRate,
       "lcsQosPortStormControlBroadcastUnit": lcsQosPortStormControlBroadcastUnit,
       "lcsQosPortStormControlUnknownEnabled": lcsQosPortStormControlUnknownEnabled,
       "lcsQosPortStormControlUnknownRate": lcsQosPortStormControlUnknownRate,
       "lcsQosPortStormControlUnknownUnit": lcsQosPortStormControlUnknownUnit,
       "lcsQosWRED": lcsQosWRED,
       "lcsQosWREDTable": lcsQosWREDTable,
       "lcsQosWREDEntry": lcsQosWREDEntry,
       "lcsQosWREDGroupIndex": lcsQosWREDGroupIndex,
       "lcsQosWREDQueue": lcsQosWREDQueue,
       "lcsQosWREDDPL": lcsQosWREDDPL,
       "lcsQosWREDEnable": lcsQosWREDEnable,
       "lcsQosWREDMinThreshold": lcsQosWREDMinThreshold,
       "lcsQosWREDMaxThreshold": lcsQosWREDMaxThreshold,
       "lcsQosWREDMaxUnit": lcsQosWREDMaxUnit,
       "lcsQosQCLStatus": lcsQosQCLStatus,
       "lcsQosQCLStatusTable": lcsQosQCLStatusTable,
       "lcsQosQCLStatusEntry": lcsQosQCLStatusEntry,
       "lcsQosQCLStatusList": lcsQosQCLStatusList,
       "lcsQosQCLStatusUser": lcsQosQCLStatusUser,
       "lcsQosQCLStatusQCEId": lcsQosQCLStatusQCEId,
       "lcsQosQCLStatusFrameType": lcsQosQCLStatusFrameType,
       "lcsQosQCLStatusPortlist": lcsQosQCLStatusPortlist,
       "lcsQosQCLStatusActionQueuePriority": lcsQosQCLStatusActionQueuePriority,
       "lcsQosQCLStatusActionDPL": lcsQosQCLStatusActionDPL,
       "lcsQosQCLStatusActionDSCP": lcsQosQCLStatusActionDSCP,
       "lcsQosQCLStatusActionPCP": lcsQosQCLStatusActionPCP,
       "lcsQosQCLStatusActionDEL": lcsQosQCLStatusActionDEL,
       "lcsQosQCLStatusActionPolicy": lcsQosQCLStatusActionPolicy,
       "lcsQosQCLStatusConflict": lcsQosQCLStatusConflict,
       "lcsQosQCLStatusDMAC": lcsQosQCLStatusDMAC,
       "lcsQosQCLStatusSMAC": lcsQosQCLStatusSMAC,
       "lcsQosQCLStatusTag": lcsQosQCLStatusTag,
       "lcsQosQCLStatusVID": lcsQosQCLStatusVID,
       "lcsQosQCLStatusPCP": lcsQosQCLStatusPCP,
       "lcsQosQCLStatusDEI": lcsQosQCLStatusDEI,
       "lcsQosPortShapers": lcsQosPortShapers,
       "lcsQosPortShaperTable": lcsQosPortShaperTable,
       "lcsQosPortShaperEntry": lcsQosPortShaperEntry,
       "lcsQosPortShaperQueue0Enable": lcsQosPortShaperQueue0Enable,
       "lcsQosPortShaperQueue0Rate": lcsQosPortShaperQueue0Rate,
       "lcsQosPortShaperQueue0Unit": lcsQosPortShaperQueue0Unit,
       "lcsQosPortShaperQueue1Enable": lcsQosPortShaperQueue1Enable,
       "lcsQosPortShaperQueue1Rate": lcsQosPortShaperQueue1Rate,
       "lcsQosPortShaperQueue1Unit": lcsQosPortShaperQueue1Unit,
       "lcsQosPortShaperQueue2Enable": lcsQosPortShaperQueue2Enable,
       "lcsQosPortShaperQueue2Rate": lcsQosPortShaperQueue2Rate,
       "lcsQosPortShaperQueue2Unit": lcsQosPortShaperQueue2Unit,
       "lcsQosPortShaperQueue3Enable": lcsQosPortShaperQueue3Enable,
       "lcsQosPortShaperQueue3Rate": lcsQosPortShaperQueue3Rate,
       "lcsQosPortShaperQueue3Unit": lcsQosPortShaperQueue3Unit,
       "lcsQosPortShaperQueue4Enable": lcsQosPortShaperQueue4Enable,
       "lcsQosPortShaperQueue4Rate": lcsQosPortShaperQueue4Rate,
       "lcsQosPortShaperQueue4Unit": lcsQosPortShaperQueue4Unit,
       "lcsQosPortShaperQueue5Enable": lcsQosPortShaperQueue5Enable,
       "lcsQosPortShaperQueue5Rate": lcsQosPortShaperQueue5Rate,
       "lcsQosPortShaperQueue5Unit": lcsQosPortShaperQueue5Unit,
       "lcsQosPortShaperQueue6Enable": lcsQosPortShaperQueue6Enable,
       "lcsQosPortShaperQueue6Rate": lcsQosPortShaperQueue6Rate,
       "lcsQosPortShaperQueue6Unit": lcsQosPortShaperQueue6Unit,
       "lcsQosPortShaperQueue7Enable": lcsQosPortShaperQueue7Enable,
       "lcsQosPortShaperQueue7Rate": lcsQosPortShaperQueue7Rate,
       "lcsQosPortShaperQueue7Unit": lcsQosPortShaperQueue7Unit,
       "lcsQosPortShaperEnable": lcsQosPortShaperEnable,
       "lcsQosPortShaperRate": lcsQosPortShaperRate,
       "lcsQosPortShaperRateType": lcsQosPortShaperRateType,
       "lcsQosPortSchedulers": lcsQosPortSchedulers,
       "lcsQosPortSchedulersTable": lcsQosPortSchedulersTable,
       "lcsQosPortSchedulersEntry": lcsQosPortSchedulersEntry,
       "lcsQosPortSchedulersMode": lcsQosPortSchedulersMode,
       "lcsQosPortSchedulersQ0Weight": lcsQosPortSchedulersQ0Weight,
       "lcsQosPortSchedulersQ1Weight": lcsQosPortSchedulersQ1Weight,
       "lcsQosPortSchedulersQ2Weight": lcsQosPortSchedulersQ2Weight,
       "lcsQosPortSchedulersQ3Weight": lcsQosPortSchedulersQ3Weight,
       "lcsQosPortSchedulersQ4Weight": lcsQosPortSchedulersQ4Weight,
       "lcsQosPortSchedulersQ5Weight": lcsQosPortSchedulersQ5Weight,
       "lcsQosPortSchedulersQ6Weight": lcsQosPortSchedulersQ6Weight,
       "lcsQosPortSchedulersQ7Weight": lcsQosPortSchedulersQ7Weight,
       "lcsLoopProtection": lcsLoopProtection,
       "lcsLoopProtectionConfig": lcsLoopProtectionConfig,
       "lcsLoopProtectionGlobalEnable": lcsLoopProtectionGlobalEnable,
       "lcsLoopProtectionTranmisstionTime": lcsLoopProtectionTranmisstionTime,
       "lcsLoopProtectionShutdownTime": lcsLoopProtectionShutdownTime,
       "lcsLoopProtectionConfigurationTable": lcsLoopProtectionConfigurationTable,
       "lcsLoopProtectionConfigurationEntry": lcsLoopProtectionConfigurationEntry,
       "lcsLoopProtectionConfPort": lcsLoopProtectionConfPort,
       "lcsLoopProtectionConfEnable": lcsLoopProtectionConfEnable,
       "lcsLoopProtectionConfAction": lcsLoopProtectionConfAction,
       "lcsLoopProtectionConfTxmode": lcsLoopProtectionConfTxmode,
       "lcsLoopProtectionConfActPort": lcsLoopProtectionConfActPort,
       "lcsLoopProtectionStatusTable": lcsLoopProtectionStatusTable,
       "lcsLoopProtectionStatusEntry": lcsLoopProtectionStatusEntry,
       "lcsLoopProtectionStatusPort": lcsLoopProtectionStatusPort,
       "lcsLoopProtectionStatusAction": lcsLoopProtectionStatusAction,
       "lcsLoopProtectionStatusTransmit": lcsLoopProtectionStatusTransmit,
       "lcsLoopProtectionStatusLoops": lcsLoopProtectionStatusLoops,
       "lcsLoopProtectionStatusStatus": lcsLoopProtectionStatusStatus,
       "lcsLoopProtectionStatusLoop": lcsLoopProtectionStatusLoop,
       "lcsLoopProtectionStatusTimeLastLoop": lcsLoopProtectionStatusTimeLastLoop,
       "lcsLoopProtectionStatusActPort": lcsLoopProtectionStatusActPort,
       "lcsPoe": lcsPoe,
       "lcsPoeStatus": lcsPoeStatus,
       "lcsPoeStatusTable": lcsPoeStatusTable,
       "lcsPoeStatusEntry": lcsPoeStatusEntry,
       "lcsPoeStatusLocalPort": lcsPoeStatusLocalPort,
       "lcsPoeStatusPDclass": lcsPoeStatusPDclass,
       "lcsPoeStatusPowerRequested": lcsPoeStatusPowerRequested,
       "lcsPoeStatusPowerAllocated": lcsPoeStatusPowerAllocated,
       "lcsPoeStatusPowerUsed": lcsPoeStatusPowerUsed,
       "lcsPoeStatusCurrentUsed": lcsPoeStatusCurrentUsed,
       "lcsPoeStatusPriority": lcsPoeStatusPriority,
       "lcsPoeStatusPortStatus": lcsPoeStatusPortStatus,
       "lcsPoeStatusTotalTable": lcsPoeStatusTotalTable,
       "lcsPoeStatusTotalEntry": lcsPoeStatusTotalEntry,
       "lcsPoeStatusSwitchIndex": lcsPoeStatusSwitchIndex,
       "lcsPoeStatusTotalPowerRequested": lcsPoeStatusTotalPowerRequested,
       "lcsPoeStatusTotalPowerAllocated": lcsPoeStatusTotalPowerAllocated,
       "lcsPoeStatusTotalPowerUsed": lcsPoeStatusTotalPowerUsed,
       "lcsPoeStatusTotalCurrentUsed": lcsPoeStatusTotalCurrentUsed,
       "lcsPoePowerDelay": lcsPoePowerDelay,
       "lcsPoePowerDelayTable": lcsPoePowerDelayTable,
       "lcsPoePowerDelayEntry": lcsPoePowerDelayEntry,
       "lcsPoePowerDelayPort": lcsPoePowerDelayPort,
       "lcsPoePowerDelayMode": lcsPoePowerDelayMode,
       "lcsPoePowerDelayTime": lcsPoePowerDelayTime,
       "lcsPoeAutoCheck": lcsPoeAutoCheck,
       "lcsPoeAutoCheckPingCheck": lcsPoeAutoCheckPingCheck,
       "lcsPoeAutoCheckTable": lcsPoeAutoCheckTable,
       "lcsPoeAutoCheckEntry": lcsPoeAutoCheckEntry,
       "lcsPoeAutoCheckPort": lcsPoeAutoCheckPort,
       "lcsPoeAutoCheckPingIPAddress": lcsPoeAutoCheckPingIPAddress,
       "lcsPoeAutoCheckStartupTime": lcsPoeAutoCheckStartupTime,
       "lcsPoeAutoCheckIntervalTime": lcsPoeAutoCheckIntervalTime,
       "lcsPoeAutoCheckRetryTime": lcsPoeAutoCheckRetryTime,
       "lcsPoeAutoCheckFailureLog": lcsPoeAutoCheckFailureLog,
       "lcsPoeAutoCheckFailureAction": lcsPoeAutoCheckFailureAction,
       "lcsPoeAutoCheckRebootTime": lcsPoeAutoCheckRebootTime,
       "lcsPoeAutoCheckMaxRebootTimes": lcsPoeAutoCheckMaxRebootTimes,
       "lcsPoeScheduling": lcsPoeScheduling,
       "lcsPoeSchedulingProfileNumber": lcsPoeSchedulingProfileNumber,
       "lcsPoeSchedulingPorofileName": lcsPoeSchedulingPorofileName,
       "lcsPoeSchedulingTimeTable": lcsPoeSchedulingTimeTable,
       "lcsPoeSchedulingTimeEntry": lcsPoeSchedulingTimeEntry,
       "lcsPoeSchedulingTimeWeekIndex": lcsPoeSchedulingTimeWeekIndex,
       "lcsPoeSchedulingTimeStartTimeHourMinute": lcsPoeSchedulingTimeStartTimeHourMinute,
       "lcsPoeSchedulingTimeEndTimeHourMinute": lcsPoeSchedulingTimeEndTimeHourMinute,
       "lcsPoeConfiguration": lcsPoeConfiguration,
       "lcsPoeConfigurationPowerManagementMode": lcsPoeConfigurationPowerManagementMode,
       "lcsPoeConfigurationLegacyPDDetection": lcsPoeConfigurationLegacyPDDetection,
       "lcsPoeConfigurationTable": lcsPoeConfigurationTable,
       "lcsPoeConfigurationEntry": lcsPoeConfigurationEntry,
       "lcsPoeConfigurationSwitch": lcsPoeConfigurationSwitch,
       "lcsPoeConfigurationPoEFirmwareVersion": lcsPoeConfigurationPoEFirmwareVersion,
       "lcsPoeConfigurationPrimaryPowerSupply": lcsPoeConfigurationPrimaryPowerSupply,
       "lcsPoeConfigurationPortTable": lcsPoeConfigurationPortTable,
       "lcsPoeConfigurationPortEntry": lcsPoeConfigurationPortEntry,
       "lcsPoeConfigurationPort": lcsPoeConfigurationPort,
       "lcsPoeConfigurationPortPoEMode": lcsPoeConfigurationPortPoEMode,
       "lcsPoeConfigurationPortPriority": lcsPoeConfigurationPortPriority,
       "lcsPoeConfigurationPortMaximumPower": lcsPoeConfigurationPortMaximumPower,
       "lcsPoeConfigurationPortDetection": lcsPoeConfigurationPortDetection,
       "lcsPoeConfigurationPortPoEScheduleByProfileName": lcsPoeConfigurationPortPoEScheduleByProfileName,
       "lcsPoeConfigurationPortDelayMode": lcsPoeConfigurationPortDelayMode,
       "lcsPoeConfigurationPortDelayTime": lcsPoeConfigurationPortDelayTime,
       "lcsPoeChipsetRebootSchedule": lcsPoeChipsetRebootSchedule,
       "lcsPoeChipsetRebootMode": lcsPoeChipsetRebootMode,
       "lcsPoeChipsetRebootTimeTable": lcsPoeChipsetRebootTimeTable,
       "lcsPoeChipsetRebootTimeEntry": lcsPoeChipsetRebootTimeEntry,
       "lcsPoeChipsetRebootWeekIndex": lcsPoeChipsetRebootWeekIndex,
       "lcsPoeChipsetRebootTimeHour": lcsPoeChipsetRebootTimeHour,
       "lcsPoeChipsetRebootTimeMinute": lcsPoeChipsetRebootTimeMinute,
       "lcsAAAMIB": lcsAAAMIB,
       "lcsAAA": lcsAAA,
       "lcsRADIUS": lcsRADIUS,
       "lcsRADIUSGlobalConfig": lcsRADIUSGlobalConfig,
       "lcsRADIUSGlobalConfigTimeout": lcsRADIUSGlobalConfigTimeout,
       "lcsRADIUSGlobalConfigRetransmit": lcsRADIUSGlobalConfigRetransmit,
       "lcsRADIUSGlobalConfigDeadtime": lcsRADIUSGlobalConfigDeadtime,
       "lcsRADIUSGlobalConfigKey": lcsRADIUSGlobalConfigKey,
       "lcsRADIUSGlobalConfigNASIPv4": lcsRADIUSGlobalConfigNASIPv4,
       "lcsRADIUSGlobalConfigNASIPv6": lcsRADIUSGlobalConfigNASIPv6,
       "lcsRADIUSGlobalConfigNASIdentifier": lcsRADIUSGlobalConfigNASIdentifier,
       "lcsRADIUSGlobalConfigKeyHashed": lcsRADIUSGlobalConfigKeyHashed,
       "lcsRADIUSGlobalConfigKeyWrite": lcsRADIUSGlobalConfigKeyWrite,
       "lcsRADIUSMacformatTable": lcsRADIUSMacformatTable,
       "lcsRADIUSMacformatEntry": lcsRADIUSMacformatEntry,
       "lcsRADIUSMacformatIndex": lcsRADIUSMacformatIndex,
       "lcsRADIUSMacformatGroupsize": lcsRADIUSMacformatGroupsize,
       "lcsRADIUSMacformatSeparator": lcsRADIUSMacformatSeparator,
       "lcsRADIUSMacformatCase": lcsRADIUSMacformatCase,
       "lcsRADIUSServerConfigTable": lcsRADIUSServerConfigTable,
       "lcsRADIUSServerConfigEntry": lcsRADIUSServerConfigEntry,
       "lcsRADIUSServerConfServerNo": lcsRADIUSServerConfServerNo,
       "lcsRADIUSServerConfHostname": lcsRADIUSServerConfHostname,
       "lcsRADIUSServerConfAuthPort": lcsRADIUSServerConfAuthPort,
       "lcsRADIUSServerConfAcctPort": lcsRADIUSServerConfAcctPort,
       "lcsRADIUSServerConfTimeout": lcsRADIUSServerConfTimeout,
       "lcsRADIUSServerConfRetransmit": lcsRADIUSServerConfRetransmit,
       "lcsRADIUSServerConfKey": lcsRADIUSServerConfKey,
       "lcsRADIUSServerConfRowStatus": lcsRADIUSServerConfRowStatus,
       "lcsRADIUSServerConfKeyHashed": lcsRADIUSServerConfKeyHashed,
       "lcsRADIUSServerConfKeyWrite": lcsRADIUSServerConfKeyWrite,
       "lcsRADIUSDetailTable": lcsRADIUSDetailTable,
       "lcsRADIUSDetailEntry": lcsRADIUSDetailEntry,
       "lcsRADIUSAuthIPAddress": lcsRADIUSAuthIPAddress,
       "lcsRADIUSAuthStatus": lcsRADIUSAuthStatus,
       "lcsRADIUSAuthRoundTripTime": lcsRADIUSAuthRoundTripTime,
       "lcsRADIUSAuthRxAccessAccept": lcsRADIUSAuthRxAccessAccept,
       "lcsRADIUSAuthRxAccessReject": lcsRADIUSAuthRxAccessReject,
       "lcsRADIUSAuthRxAccessChallenge": lcsRADIUSAuthRxAccessChallenge,
       "lcsRADIUSAuthRxAccessResponse": lcsRADIUSAuthRxAccessResponse,
       "lcsRADIUSAuthRxBadAuth": lcsRADIUSAuthRxBadAuth,
       "lcsRADIUSAuthRxUnknownType": lcsRADIUSAuthRxUnknownType,
       "lcsRADIUSAuthRxPacketsDropped": lcsRADIUSAuthRxPacketsDropped,
       "lcsRADIUSAuthTxAccessRequest": lcsRADIUSAuthTxAccessRequest,
       "lcsRADIUSAuthTxAccessRetransmission": lcsRADIUSAuthTxAccessRetransmission,
       "lcsRADIUSAuthTxPendingRequest": lcsRADIUSAuthTxPendingRequest,
       "lcsRADIUSAuthTxTimeout": lcsRADIUSAuthTxTimeout,
       "lcsRADIUSAccountIPAddress": lcsRADIUSAccountIPAddress,
       "lcsRADIUSAccountStatus": lcsRADIUSAccountStatus,
       "lcsRADIUSAccountRoundTripTime": lcsRADIUSAccountRoundTripTime,
       "lcsRADIUSAccountRxResponses": lcsRADIUSAccountRxResponses,
       "lcsRADIUSAccountRxMalformedResponse": lcsRADIUSAccountRxMalformedResponse,
       "lcsRADIUSAccountRxBadAuth": lcsRADIUSAccountRxBadAuth,
       "lcsRADIUSAccountRxUnknownType": lcsRADIUSAccountRxUnknownType,
       "lcsRADIUSAccountRxPacketsDrop": lcsRADIUSAccountRxPacketsDrop,
       "lcsRADIUSAccountTxRequest": lcsRADIUSAccountTxRequest,
       "lcsRADIUSAccountTxRetransmission": lcsRADIUSAccountTxRetransmission,
       "lcsRADIUSAccountTxPendingRequest": lcsRADIUSAccountTxPendingRequest,
       "lcsRADIUSAccountTxTimeout": lcsRADIUSAccountTxTimeout,
       "lcsRADIUSDetailClearCmd": lcsRADIUSDetailClearCmd,
       "lcsTACACS": lcsTACACS,
       "lcsTACACSGlobalConfigTimeout": lcsTACACSGlobalConfigTimeout,
       "lcsTACACSGlobalConfigDeadtime": lcsTACACSGlobalConfigDeadtime,
       "lcsTACACSGlobalConfigKey": lcsTACACSGlobalConfigKey,
       "lcsTACACSServerConfigTable": lcsTACACSServerConfigTable,
       "lcsTACACSServerConfigEntry": lcsTACACSServerConfigEntry,
       "lcsTACACSServerConfigServerNo": lcsTACACSServerConfigServerNo,
       "lcsTACACSServerConfigHostname": lcsTACACSServerConfigHostname,
       "lcsTACACSServerConfigPort": lcsTACACSServerConfigPort,
       "lcsTACACSServerConfigTimeout": lcsTACACSServerConfigTimeout,
       "lcsTACACSServerConfigKey": lcsTACACSServerConfigKey,
       "lcsTACACSServerConfigRowStatus": lcsTACACSServerConfigRowStatus,
       "lcsNasMIB": lcsNasMIB,
       "lcsNAS": lcsNAS,
       "lcsNASConf": lcsNASConf,
       "lcsNASConfMode": lcsNASConfMode,
       "lcsNASConfReauthenticationEnabled": lcsNASConfReauthenticationEnabled,
       "lcsNASConfReauthenticationPeriod": lcsNASConfReauthenticationPeriod,
       "lcsNASConfEAPOLTimeout": lcsNASConfEAPOLTimeout,
       "lcsNASConfAgingPeriod": lcsNASConfAgingPeriod,
       "lcsNASConfHoldTime": lcsNASConfHoldTime,
       "lcsNASConfRADIUSQoSEnabled": lcsNASConfRADIUSQoSEnabled,
       "lcsNASConfRADIUSVLANEnabled": lcsNASConfRADIUSVLANEnabled,
       "lcsNASConfGuestVLANEnabled": lcsNASConfGuestVLANEnabled,
       "lcsNASConfGuestVLANID": lcsNASConfGuestVLANID,
       "lcsNASConfMaxReauthCount": lcsNASConfMaxReauthCount,
       "lcsNASConfAllowGuestVLAN": lcsNASConfAllowGuestVLAN,
       "lcsNASPortConfTable": lcsNASPortConfTable,
       "lcsNASPortConfEntry": lcsNASPortConfEntry,
       "lcsNASPortConfAdminState": lcsNASPortConfAdminState,
       "lcsNASPortConfRADIUSQoSEnabled": lcsNASPortConfRADIUSQoSEnabled,
       "lcsNASPortConfRADIUSVLANEnabled": lcsNASPortConfRADIUSVLANEnabled,
       "lcsNASPortConfGuestVLANEnabled": lcsNASPortConfGuestVLANEnabled,
       "lcsNASPortConfPortState": lcsNASPortConfPortState,
       "lcsNASPortConfReauthenticateCmd": lcsNASPortConfReauthenticateCmd,
       "lcsNASPortConfReinitializeCmd": lcsNASPortConfReinitializeCmd,
       "lcsNASPortConfFallbackEnabled": lcsNASPortConfFallbackEnabled,
       "lcsNASConfMacBasedUseEAP": lcsNASConfMacBasedUseEAP,
       "lcsNASStatus": lcsNASStatus,
       "lcsNASSwitchStatusTable": lcsNASSwitchStatusTable,
       "lcsNASSwitchStatusEntry": lcsNASSwitchStatusEntry,
       "lcsNASSwitchStatusAdminState": lcsNASSwitchStatusAdminState,
       "lcsNASSwitchStatusPortState": lcsNASSwitchStatusPortState,
       "lcsNASSwitchStatusLastSource": lcsNASSwitchStatusLastSource,
       "lcsNASSwitchStatusLastID": lcsNASSwitchStatusLastID,
       "lcsNASSwitchStatusQoSClass": lcsNASSwitchStatusQoSClass,
       "lcsNASSwitchStatusPortVLANID": lcsNASSwitchStatusPortVLANID,
       "lcsNASPortCounterTable": lcsNASPortCounterTable,
       "lcsNASPortCounterEntry": lcsNASPortCounterEntry,
       "lcsNASReceiveEAPOLTotal": lcsNASReceiveEAPOLTotal,
       "lcsNASReceiveEAPOLResponseID": lcsNASReceiveEAPOLResponseID,
       "lcsNASReceiveEAPOLResponses": lcsNASReceiveEAPOLResponses,
       "lcsNASReceiveEAPOLStart": lcsNASReceiveEAPOLStart,
       "lcsNASReceiveEAPOLLogoff": lcsNASReceiveEAPOLLogoff,
       "lcsNASReceiveEAPOLInvalidType": lcsNASReceiveEAPOLInvalidType,
       "lcsNASReceiveEAPOLInvalidLength": lcsNASReceiveEAPOLInvalidLength,
       "lcsNASTransmitEAPOLTotal": lcsNASTransmitEAPOLTotal,
       "lcsNASTransmitEAPOLRequestID": lcsNASTransmitEAPOLRequestID,
       "lcsNASTransmitEAPOLRequests": lcsNASTransmitEAPOLRequests,
       "lcsNASPortReceiveBackendServerAccessChallenges": lcsNASPortReceiveBackendServerAccessChallenges,
       "lcsNASPortReceiveBackendServerOtherRequests": lcsNASPortReceiveBackendServerOtherRequests,
       "lcsNASPortReceiveBackendServerAuthSuccesses": lcsNASPortReceiveBackendServerAuthSuccesses,
       "lcsNASPortReceiveBackendServerAuthFailures": lcsNASPortReceiveBackendServerAuthFailures,
       "lcsNASPortTransmitBackendServerResponses": lcsNASPortTransmitBackendServerResponses,
       "lcsNASSupplicantInfoMAC": lcsNASSupplicantInfoMAC,
       "lcsNASSupplicantInfoVlanID": lcsNASSupplicantInfoVlanID,
       "lcsNASSupplicantInfoVersion": lcsNASSupplicantInfoVersion,
       "lcsNASSupplicantInfoIdentity": lcsNASSupplicantInfoIdentity,
       "lcsNASPortCounterClearCmd": lcsNASPortCounterClearCmd,
       "lcsMACConf": lcsMACConf,
       "lcsMAC": lcsMAC,
       "lcsMACDisableAutomaticAging": lcsMACDisableAutomaticAging,
       "lcsMACAgingTime": lcsMACAgingTime,
       "lcsMACLearningTable": lcsMACLearningTable,
       "lcsMACLearningEntry": lcsMACLearningEntry,
       "lcsMACTableLearning": lcsMACTableLearning,
       "lcsLearningDisabledVLANs": lcsLearningDisabledVLANs,
       "lcsMACStaticConfigTable": lcsMACStaticConfigTable,
       "lcsMACStaticConfigEntry": lcsMACStaticConfigEntry,
       "lcsMACStaticConfigSwitchIndex": lcsMACStaticConfigSwitchIndex,
       "lcsMACStaticConfigIndex": lcsMACStaticConfigIndex,
       "lcsMACStaticConfigVID": lcsMACStaticConfigVID,
       "lcsMACStaticConfigMACaddress": lcsMACStaticConfigMACaddress,
       "lcsMACStaticConfigPortList": lcsMACStaticConfigPortList,
       "lcsMACStaticConfigRowStatus": lcsMACStaticConfigRowStatus,
       "lcsSpanningTree": lcsSpanningTree,
       "lcsBridgeSettings": lcsBridgeSettings,
       "lcsSTPProtocolVersion": lcsSTPProtocolVersion,
       "lcsBridgePriority": lcsBridgePriority,
       "lcsBridgeForwardDelay": lcsBridgeForwardDelay,
       "lcsBridgeMaxAge": lcsBridgeMaxAge,
       "lcsBridgeMaxHops": lcsBridgeMaxHops,
       "lcsBridgetxHoldCount": lcsBridgetxHoldCount,
       "lcsBridgeBPDUFilter": lcsBridgeBPDUFilter,
       "lcsBridgeBPDUGuard": lcsBridgeBPDUGuard,
       "lcsBridgeerrorRecoveryDelay": lcsBridgeerrorRecoveryDelay,
       "lcsBridgeHelloTime": lcsBridgeHelloTime,
       "lcsMSTIMapping": lcsMSTIMapping,
       "lcsConfigName": lcsConfigName,
       "lcsConfigRevision": lcsConfigRevision,
       "lcsMSTIMappingVLAN": lcsMSTIMappingVLAN,
       "lcsConfigMstiName1": lcsConfigMstiName1,
       "lcsConfigMstiName2": lcsConfigMstiName2,
       "lcsConfigMstiName3": lcsConfigMstiName3,
       "lcsConfigMstiName4": lcsConfigMstiName4,
       "lcsConfigMstiName5": lcsConfigMstiName5,
       "lcsConfigMstiName6": lcsConfigMstiName6,
       "lcsConfigMstiName7": lcsConfigMstiName7,
       "lcsMSTIPriorities": lcsMSTIPriorities,
       "lcsCSTIPriority": lcsCSTIPriority,
       "lcsMSTI1Priority": lcsMSTI1Priority,
       "lcsMSTI2Priority": lcsMSTI2Priority,
       "lcsMSTI3Priority": lcsMSTI3Priority,
       "lcsMSTI4Priority": lcsMSTI4Priority,
       "lcsMSTI5Priority": lcsMSTI5Priority,
       "lcsMSTI6Priority": lcsMSTI6Priority,
       "lcsMSTI7Priority": lcsMSTI7Priority,
       "lcsCISTPorts": lcsCISTPorts,
       "lcsCISTAggregatedEnable": lcsCISTAggregatedEnable,
       "lcsCISTAggregatedPathCost": lcsCISTAggregatedPathCost,
       "lcsCISTAggregatedPortPriority": lcsCISTAggregatedPortPriority,
       "lcsCISTAggregatedAdminEdge": lcsCISTAggregatedAdminEdge,
       "lcsCISTAggregatedAutoEdge": lcsCISTAggregatedAutoEdge,
       "lcsCISTAggregatedrestrictedRole": lcsCISTAggregatedrestrictedRole,
       "lcsCISTAggregatedrestrictedTcn": lcsCISTAggregatedrestrictedTcn,
       "lcsCISTAggregatedbpduGuard": lcsCISTAggregatedbpduGuard,
       "lcsCISTAggregatedPointToPoint": lcsCISTAggregatedPointToPoint,
       "lcsCISTPortsTable": lcsCISTPortsTable,
       "lcsCISTPortsEntry": lcsCISTPortsEntry,
       "lcsCISTPortIndex": lcsCISTPortIndex,
       "lcsCISTPortEnable": lcsCISTPortEnable,
       "lcsCISTPortPathCost": lcsCISTPortPathCost,
       "lcsCISTPortPortPriority": lcsCISTPortPortPriority,
       "lcsCISTPortAdminEdge": lcsCISTPortAdminEdge,
       "lcsCISTPortAutoEdge": lcsCISTPortAutoEdge,
       "lcsCISTPortrestrictedRole": lcsCISTPortrestrictedRole,
       "lcsCISTPortrestrictedTcn": lcsCISTPortrestrictedTcn,
       "lcsCISTPortbpduGuard": lcsCISTPortbpduGuard,
       "lcsCISTPortPointToPoint": lcsCISTPortPointToPoint,
       "lcsCISTPortRootGuard": lcsCISTPortRootGuard,
       "lcsMSTIPorts": lcsMSTIPorts,
       "lcsMSTIAggregatedPortsTable": lcsMSTIAggregatedPortsTable,
       "lcsMSTIAggregatedPortsEntry": lcsMSTIAggregatedPortsEntry,
       "lcsMSTIAggregatedPortsMSTIndex": lcsMSTIAggregatedPortsMSTIndex,
       "lcsMSTIAggregatedPortsPathCost": lcsMSTIAggregatedPortsPathCost,
       "lcsMSTIAggregatedPortsPortPriority": lcsMSTIAggregatedPortsPortPriority,
       "lcsMSTIPortsTable": lcsMSTIPortsTable,
       "lcsMSTIPortsEntry": lcsMSTIPortsEntry,
       "lcsMSTIPortsMSTIndex": lcsMSTIPortsMSTIndex,
       "lcsMSTIPortsPortIndex": lcsMSTIPortsPortIndex,
       "lcsMSTIPortsPathCost": lcsMSTIPortsPathCost,
       "lcsMSTIPortsPortPriority": lcsMSTIPortsPortPriority,
       "lcsPrivateVLANs": lcsPrivateVLANs,
       "lcsPVLANMembershipTable": lcsPVLANMembershipTable,
       "lcsPVLANMembershipEntry": lcsPVLANMembershipEntry,
       "lcsPVLANMembershipIndex": lcsPVLANMembershipIndex,
       "lcsPVLANID": lcsPVLANID,
       "lcsPVLANMembers": lcsPVLANMembers,
       "lcsPVLANRowStatus": lcsPVLANRowStatus,
       "lcsPVLANPortIsolationTable": lcsPVLANPortIsolationTable,
       "lcsPVLANPortIsolationEntry": lcsPVLANPortIsolationEntry,
       "lcsPVLANPortIsolationIndex": lcsPVLANPortIsolationIndex,
       "lcsPVLANPortIsolationPortMembers": lcsPVLANPortIsolationPortMembers,
       "lcssFlow": lcssFlow,
       "lcssFlowVersion": lcssFlowVersion,
       "lcssFlowAgentAddressType": lcssFlowAgentAddressType,
       "lcssFlowAgentAddress": lcssFlowAgentAddress,
       "lcssFlowRcvrTable": lcssFlowRcvrTable,
       "lcssFlowRcvrEntry": lcssFlowRcvrEntry,
       "lcssFlowRcvrIndex": lcssFlowRcvrIndex,
       "lcssFlowRcvrOwner": lcssFlowRcvrOwner,
       "lcssFlowRcvrTimeout": lcssFlowRcvrTimeout,
       "lcssFlowRcvrMaximumDatagramSize": lcssFlowRcvrMaximumDatagramSize,
       "lcssFlowRcvrAddressType": lcssFlowRcvrAddressType,
       "lcssFlowRcvrAddress": lcssFlowRcvrAddress,
       "lcssFlowRcvrPort": lcssFlowRcvrPort,
       "lcssFlowRcvrDatagramVersion": lcssFlowRcvrDatagramVersion,
       "lcssFlowRcvrMode": lcssFlowRcvrMode,
       "lcssFlowFsTable": lcssFlowFsTable,
       "lcssFlowFsEntry": lcssFlowFsEntry,
       "lcssFlowFsDataSource": lcssFlowFsDataSource,
       "lcssFlowFsInstance": lcssFlowFsInstance,
       "lcssFlowFsReceiver": lcssFlowFsReceiver,
       "lcssFlowFsPacketSamplingRate": lcssFlowFsPacketSamplingRate,
       "lcssFlowFsMaximumHeaderSize": lcssFlowFsMaximumHeaderSize,
       "lcssFlowFsType": lcssFlowFsType,
       "lcssFlowCpTable": lcssFlowCpTable,
       "lcssFlowCpEntry": lcssFlowCpEntry,
       "lcssFlowCpDataSource": lcssFlowCpDataSource,
       "lcssFlowCpInstance": lcssFlowCpInstance,
       "lcssFlowCpReceiver": lcssFlowCpReceiver,
       "lcssFlowCpInterval": lcssFlowCpInterval,
       "lcsLLDP": lcsLLDP,
       "lcsLLDPConfTable": lcsLLDPConfTable,
       "lcsLLDPConfEntry": lcsLLDPConfEntry,
       "lcsLLDPIndex": lcsLLDPIndex,
       "lcsLLDPMode": lcsLLDPMode,
       "lcsLLDPCDPAware": lcsLLDPCDPAware,
       "lcsLLDPTrap": lcsLLDPTrap,
       "lcsLLDPPortDescr": lcsLLDPPortDescr,
       "lcsLLDPSysName": lcsLLDPSysName,
       "lcsLLDPSysDescr": lcsLLDPSysDescr,
       "lcsLLDPSysCapa": lcsLLDPSysCapa,
       "lcsLLDPMgmtAddr": lcsLLDPMgmtAddr,
       "lcsLLDPMEDCoordinatesLocation": lcsLLDPMEDCoordinatesLocation,
       "lcsLLDPMEDLatitude": lcsLLDPMEDLatitude,
       "lcsLLDPMEDLatitudeDirection": lcsLLDPMEDLatitudeDirection,
       "lcsLLDPMEDLongitude": lcsLLDPMEDLongitude,
       "lcsLLDPMEDLongitudeDirection": lcsLLDPMEDLongitudeDirection,
       "lcsLLDPMEDAltitude": lcsLLDPMEDAltitude,
       "lcsLLDPMEDAltitudeType": lcsLLDPMEDAltitudeType,
       "lcsLLDPMEDMapDatum": lcsLLDPMEDMapDatum,
       "lcsLLDPMEDCivicAddressLocation": lcsLLDPMEDCivicAddressLocation,
       "lcsLLDPMEDCivicAddressLocationCountryCode": lcsLLDPMEDCivicAddressLocationCountryCode,
       "lcsLLDPMEDCivicAddressLocationStateProvince": lcsLLDPMEDCivicAddressLocationStateProvince,
       "lcsLLDPMEDCivicAddressLocationCounty": lcsLLDPMEDCivicAddressLocationCounty,
       "lcsLLDPMEDCivicAddressLocationCity": lcsLLDPMEDCivicAddressLocationCity,
       "lcsLLDPMEDCivicAddressLocationCityDistrict": lcsLLDPMEDCivicAddressLocationCityDistrict,
       "lcsLLDPMEDCivicAddressLocationBlockNeighborhood": lcsLLDPMEDCivicAddressLocationBlockNeighborhood,
       "lcsLLDPMEDCivicAddressLocationStreet": lcsLLDPMEDCivicAddressLocationStreet,
       "lcsLLDPMEDCivicAddressLocationLeadingStreetDirection": lcsLLDPMEDCivicAddressLocationLeadingStreetDirection,
       "lcsLLDPMEDCivicAddressLocationTrailingStreetSuffix": lcsLLDPMEDCivicAddressLocationTrailingStreetSuffix,
       "lcsLLDPMEDCivicAddressLocationStreetSuffix": lcsLLDPMEDCivicAddressLocationStreetSuffix,
       "lcsLLDPMEDCivicAddressLocationHouseNo": lcsLLDPMEDCivicAddressLocationHouseNo,
       "lcsLLDPMEDCivicAddressLocationHouseNoSuffix": lcsLLDPMEDCivicAddressLocationHouseNoSuffix,
       "lcsLLDPMEDCivicAddressLocationLandmark": lcsLLDPMEDCivicAddressLocationLandmark,
       "lcsLLDPMEDCivicAddressLocationAdditionalLocationInfo": lcsLLDPMEDCivicAddressLocationAdditionalLocationInfo,
       "lcsLLDPMEDCivicAddressLocationName": lcsLLDPMEDCivicAddressLocationName,
       "lcsLLDPMEDCivicAddressLocationZipCode": lcsLLDPMEDCivicAddressLocationZipCode,
       "lcsLLDPMEDCivicAddressLocationBuilding": lcsLLDPMEDCivicAddressLocationBuilding,
       "lcsLLDPMEDCivicAddressLocationApartment": lcsLLDPMEDCivicAddressLocationApartment,
       "lcsLLDPMEDCivicAddressLocationFloor": lcsLLDPMEDCivicAddressLocationFloor,
       "lcsLLDPMEDCivicAddressLocationRoomNo": lcsLLDPMEDCivicAddressLocationRoomNo,
       "lcsLLDPMEDCivicAddressLocationPlaceType": lcsLLDPMEDCivicAddressLocationPlaceType,
       "lcsLLDPMEDCivicAddressLocationPostalCommunityName": lcsLLDPMEDCivicAddressLocationPostalCommunityName,
       "lcsLLDPMEDCivicAddressLocationPOBox": lcsLLDPMEDCivicAddressLocationPOBox,
       "lcsLLDPMEDCivicAddressLocationAdditionalCode": lcsLLDPMEDCivicAddressLocationAdditionalCode,
       "lcsLLDPMEDPoliciesTable": lcsLLDPMEDPoliciesTable,
       "lcsLLDPMEDPoliciesEntry": lcsLLDPMEDPoliciesEntry,
       "lcsLLDPMEDPoliciesIndex": lcsLLDPMEDPoliciesIndex,
       "lcsLLDPMEDPoliciesPolicyID": lcsLLDPMEDPoliciesPolicyID,
       "lcsLLDPMEDPoliciesApplicationType": lcsLLDPMEDPoliciesApplicationType,
       "lcsLLDPMEDPoliciesTag": lcsLLDPMEDPoliciesTag,
       "lcsLLDPMEDPoliciesVLANID": lcsLLDPMEDPoliciesVLANID,
       "lcsLLDPMEDPoliciesL2Priority": lcsLLDPMEDPoliciesL2Priority,
       "lcsLLDPMEDPoliciesDSCP": lcsLLDPMEDPoliciesDSCP,
       "lcsLLDPMEDPoliciesRowStatus": lcsLLDPMEDPoliciesRowStatus,
       "lcsLLDPMEDPolicyPortConfTable": lcsLLDPMEDPolicyPortConfTable,
       "lcsLLDPMEDPolicyPortConfEntry": lcsLLDPMEDPolicyPortConfEntry,
       "lcsLLDPMEDPolicyPortConfPort": lcsLLDPMEDPolicyPortConfPort,
       "lcsLLDPMEDPolicyPortConf": lcsLLDPMEDPolicyPortConf,
       "lcsLLDPMEDFastStartRepeatCount": lcsLLDPMEDFastStartRepeatCount,
       "lcsLLDPMEDEmergencyCallService": lcsLLDPMEDEmergencyCallService,
       "lcsUDLD": lcsUDLD,
       "lcsUDLDPortConfigTable": lcsUDLDPortConfigTable,
       "lcsUDLDPortConfigEntry": lcsUDLDPortConfigEntry,
       "lcsUDLDPort": lcsUDLDPort,
       "lcsUDLDPortMode": lcsUDLDPortMode,
       "lcsUDLDPortMessageInterval": lcsUDLDPortMessageInterval,
       "lcsUDLDPortStatusTable": lcsUDLDPortStatusTable,
       "lcsUDLDPortStatusEntry": lcsUDLDPortStatusEntry,
       "lcsUDLDPortStatusPort": lcsUDLDPortStatusPort,
       "lcsUDLDStatusAdminState": lcsUDLDStatusAdminState,
       "lcsUDLDStatusDeviceIDLocal": lcsUDLDStatusDeviceIDLocal,
       "lcsUDLDStatusDeviceNameLocal": lcsUDLDStatusDeviceNameLocal,
       "lcsUDLDStatusBidirectionalState": lcsUDLDStatusBidirectionalState,
       "lcsUDLDStatusPort": lcsUDLDStatusPort,
       "lcsUDLDPortNeighbourStatusTable": lcsUDLDPortNeighbourStatusTable,
       "lcsUDLDPortNeighbourStatusEntry": lcsUDLDPortNeighbourStatusEntry,
       "lcsUDLDNeighbourPort": lcsUDLDNeighbourPort,
       "lcsUDLDNeighbourStatusPort": lcsUDLDNeighbourStatusPort,
       "lcsUDLDNeighbourStatusDeviceId": lcsUDLDNeighbourStatusDeviceId,
       "lcsUDLDNeighbourStatusLinkStatus": lcsUDLDNeighbourStatusLinkStatus,
       "lcsUDLDNeighbourStatusDeviceName": lcsUDLDNeighbourStatusDeviceName,
       "lcsEPS": lcsEPS,
       "lcsEPSTable": lcsEPSTable,
       "lcsEPSEntry": lcsEPSEntry,
       "lcsEPSIndex": lcsEPSIndex,
       "lcsEpsID": lcsEpsID,
       "lcsEpsDomain": lcsEpsDomain,
       "lcsEpsArchitecture": lcsEpsArchitecture,
       "lcsEpsWFlow": lcsEpsWFlow,
       "lcsEpsPFlow": lcsEpsPFlow,
       "lcsEpsWSFMEP": lcsEpsWSFMEP,
       "lcsEpsPSFMEP": lcsEpsPSFMEP,
       "lcsEpsAPSMEP": lcsEpsAPSMEP,
       "lcsEpsAlarm": lcsEpsAlarm,
       "lcsEpsRowStatus": lcsEpsRowStatus,
       "lcsEpsConfigInstanceEpsID": lcsEpsConfigInstanceEpsID,
       "lcsEPSConfigInstanceEntry": lcsEPSConfigInstanceEntry,
       "lcsEpsConfigInstanceProtectionType": lcsEpsConfigInstanceProtectionType,
       "lcsEpsConfigInstanceAPS": lcsEpsConfigInstanceAPS,
       "lcsEpsConfigInstanceRevertive": lcsEpsConfigInstanceRevertive,
       "lcsEpsConfigInstanceWTRTime": lcsEpsConfigInstanceWTRTime,
       "lcsEpsConfigInstanceHoldOffTime": lcsEpsConfigInstanceHoldOffTime,
       "lcsEpsConfigInstanceCommand": lcsEpsConfigInstanceCommand,
       "lcsEpsStatusProtectionState": lcsEpsStatusProtectionState,
       "lcsEpsStatusWorkingFlowState": lcsEpsStatusWorkingFlowState,
       "lcsEpsStatusProtectingFlowState": lcsEpsStatusProtectingFlowState,
       "lcsEpsStatusTransmittedApsRequest": lcsEpsStatusTransmittedApsRequest,
       "lcsEpsStatusTransmittedApsReSignal": lcsEpsStatusTransmittedApsReSignal,
       "lcsEpsStatusTransmittedApsBrSignal": lcsEpsStatusTransmittedApsBrSignal,
       "lcsEpsStatusReceivedApsRequest": lcsEpsStatusReceivedApsRequest,
       "lcsEpsStatusReceivedApsReSignal": lcsEpsStatusReceivedApsReSignal,
       "lcsEpsStatusReceivedApsBrSignal": lcsEpsStatusReceivedApsBrSignal,
       "lcsEpsStatusArchitectureMismatch": lcsEpsStatusArchitectureMismatch,
       "lcsEpsStatusAPSOnWorking": lcsEpsStatusAPSOnWorking,
       "lcsEpsStatusSwitchingIncomplete": lcsEpsStatusSwitchingIncomplete,
       "lcsEpsStatusNoApsReceived": lcsEpsStatusNoApsReceived,
       "lcsERPS": lcsERPS,
       "lcsERPSTable": lcsERPSTable,
       "lcsERPSEntry": lcsERPSEntry,
       "lcsErpsIndex": lcsErpsIndex,
       "lcsErpsID": lcsErpsID,
       "lcsErpsPort0": lcsErpsPort0,
       "lcsErpsPort1": lcsErpsPort1,
       "lcsErpsPort0APSMEP": lcsErpsPort0APSMEP,
       "lcsErpsPort1APSMEP": lcsErpsPort1APSMEP,
       "lcsErpsPort0SFMEP": lcsErpsPort0SFMEP,
       "lcsErpsPort1SFMEP": lcsErpsPort1SFMEP,
       "lcsErpsRingType": lcsErpsRingType,
       "lcsErpsInterconnectedNode": lcsErpsInterconnectedNode,
       "lcsErpsVirtualChannel": lcsErpsVirtualChannel,
       "lcsErpsMajorRingID": lcsErpsMajorRingID,
       "lcsErpsAlarm": lcsErpsAlarm,
       "lcsErpsRowStatus": lcsErpsRowStatus,
       "lcsErpsConfigInstanceErpsID": lcsErpsConfigInstanceErpsID,
       "lcsERPSConfigInstanceEntry": lcsERPSConfigInstanceEntry,
       "lcsErpsConfigInstanceConfigured": lcsErpsConfigInstanceConfigured,
       "lcsErpsConfigInstanceGuardTime": lcsErpsConfigInstanceGuardTime,
       "lcsErpsConfigInstanceWTRTime": lcsErpsConfigInstanceWTRTime,
       "lcsErpsConfigInstanceHoldOffTime": lcsErpsConfigInstanceHoldOffTime,
       "lcsErpsConfigInstanceVersion": lcsErpsConfigInstanceVersion,
       "lcsErpsConfigInstanceRevertive": lcsErpsConfigInstanceRevertive,
       "lcsErpsConfigInstanceRPLRole": lcsErpsConfigInstanceRPLRole,
       "lcsErpsConfigInstanceRPLPort": lcsErpsConfigInstanceRPLPort,
       "lcsErpsConfigInstanceClear": lcsErpsConfigInstanceClear,
       "lcsErpsConfigInstanceTopologyChange": lcsErpsConfigInstanceTopologyChange,
       "lcsErpsConfigInstanceCommand": lcsErpsConfigInstanceCommand,
       "lcsErpsConfigInstancePort": lcsErpsConfigInstancePort,
       "lcsErpsStatusProtectionState": lcsErpsStatusProtectionState,
       "lcsErpsStatusPort0": lcsErpsStatusPort0,
       "lcsErpsStatusPort1": lcsErpsStatusPort1,
       "lcsErpsStatusTransmitAPS": lcsErpsStatusTransmitAPS,
       "lcsErpsStatusPort0ReceiveAPS": lcsErpsStatusPort0ReceiveAPS,
       "lcsErpsStatusPort1ReceiveAPS": lcsErpsStatusPort1ReceiveAPS,
       "lcsErpsStatusWTRRemaining": lcsErpsStatusWTRRemaining,
       "lcsErpsStatusRPLUnblocked": lcsErpsStatusRPLUnblocked,
       "lcsErpsStatusNoAPSReceived": lcsErpsStatusNoAPSReceived,
       "lcsErpsStatusPort0BlockStatus": lcsErpsStatusPort0BlockStatus,
       "lcsErpsStatusPort1BlockStatus": lcsErpsStatusPort1BlockStatus,
       "lcsErpsStatusFOPAlarm": lcsErpsStatusFOPAlarm,
       "lcsErpsConfigInstanceVLANConfigTable": lcsErpsConfigInstanceVLANConfigTable,
       "lcsErpsConfigInstanceVLANConfigEntry": lcsErpsConfigInstanceVLANConfigEntry,
       "lcsErpsConfigInstanceVLANConfigIndex": lcsErpsConfigInstanceVLANConfigIndex,
       "lcsErpsConfigInstanceVLANConfigVLANID": lcsErpsConfigInstanceVLANConfigVLANID,
       "lcsErpsConfigInstanceVLANConfigRowStatus": lcsErpsConfigInstanceVLANConfigRowStatus,
       "lcsVLANTranslation": lcsVLANTranslation,
       "lcsVLANTranslationPortTable": lcsVLANTranslationPortTable,
       "lcsVLANTranslationPortEntry": lcsVLANTranslationPortEntry,
       "lcsVLANTranslationPortIndex": lcsVLANTranslationPortIndex,
       "lcsVLANTranslationPortDefault": lcsVLANTranslationPortDefault,
       "lcsVLANTranslationPortGroupID": lcsVLANTranslationPortGroupID,
       "lcsVLANTranslationMappingTable": lcsVLANTranslationMappingTable,
       "lcsVLANTranslationMappingEntry": lcsVLANTranslationMappingEntry,
       "lcsVLANTranslationMappingIndex": lcsVLANTranslationMappingIndex,
       "lcsVLANTranslationMappingGroupID": lcsVLANTranslationMappingGroupID,
       "lcsVLANTranslationMappingVID": lcsVLANTranslationMappingVID,
       "lcsVLANTranslationMappingTVID": lcsVLANTranslationMappingTVID,
       "lcsVLANTranslationMappingRowStatus": lcsVLANTranslationMappingRowStatus,
       "lcsMEP": lcsMEP,
       "lcsMEPTable": lcsMEPTable,
       "lcsMEPEntry": lcsMEPEntry,
       "lcsMEPIndex": lcsMEPIndex,
       "lcsMepInstance": lcsMepInstance,
       "lcsMepDomain": lcsMepDomain,
       "lcsMepMode": lcsMepMode,
       "lcsMepDirection": lcsMepDirection,
       "lcsMepResidencePort": lcsMepResidencePort,
       "lcsMepLevel": lcsMepLevel,
       "lcsMepFlowInstance": lcsMepFlowInstance,
       "lcsMepTaggedVID": lcsMepTaggedVID,
       "lcsMepEPSInstance": lcsMepEPSInstance,
       "lcsMepThisMAC": lcsMepThisMAC,
       "lcsMepAlarm": lcsMepAlarm,
       "lcsMepRowStatus": lcsMepRowStatus,
       "lcsMepInstanceID": lcsMepInstanceID,
       "lcsMepInstanceConfEntry": lcsMepInstanceConfEntry,
       "lcsMepInstanceConfLevel": lcsMepInstanceConfLevel,
       "lcsMepInstanceConfFormat": lcsMepInstanceConfFormat,
       "lcsMepInstanceConfDomainName": lcsMepInstanceConfDomainName,
       "lcsMepInstanceConfMEGid": lcsMepInstanceConfMEGid,
       "lcsMepInstanceConfMEPid": lcsMepInstanceConfMEPid,
       "lcsMepInstanceConfTaggedVID": lcsMepInstanceConfTaggedVID,
       "lcsMepInstanceConfSyslog": lcsMepInstanceConfSyslog,
       "lcsMepInstanceConfcLevel": lcsMepInstanceConfcLevel,
       "lcsMepInstanceConfcMEG": lcsMepInstanceConfcMEG,
       "lcsMepInstanceConfcMEP": lcsMepInstanceConfcMEP,
       "lcsMepInstanceConfcAIS": lcsMepInstanceConfcAIS,
       "lcsMepInstanceConfcLCK": lcsMepInstanceConfcLCK,
       "lcsMepInstanceConfcLoop": lcsMepInstanceConfcLoop,
       "lcsMepInstanceConfcConfig": lcsMepInstanceConfcConfig,
       "lcsMepInstanceConfcDEG": lcsMepInstanceConfcDEG,
       "lcsMepInstanceConfcSSF": lcsMepInstanceConfcSSF,
       "lcsMepInstanceConfaBLK": lcsMepInstanceConfaBLK,
       "lcsMepInstanceConfaTSD": lcsMepInstanceConfaTSD,
       "lcsMepInstanceConfaTSF": lcsMepInstanceConfaTSF,
       "lcsPeerMepConfTable": lcsPeerMepConfTable,
       "lcsPeerMepConfEntry": lcsPeerMepConfEntry,
       "lcsPeerMepConfIndex": lcsPeerMepConfIndex,
       "lcsPeerMepConfPeerMEPID": lcsPeerMepConfPeerMEPID,
       "lcsPeerMepConfUnicastPeerMAC": lcsPeerMepConfUnicastPeerMAC,
       "lcsPeerMepConfcLOC": lcsPeerMepConfcLOC,
       "lcsPeerMepConfcRDI": lcsPeerMepConfcRDI,
       "lcsPeerMepConfcPeriod": lcsPeerMepConfcPeriod,
       "lcsPeerMepConfcPriority": lcsPeerMepConfcPriority,
       "lcsPeerMepConfRowStatus": lcsPeerMepConfRowStatus,
       "lcsFunctionalConf": lcsFunctionalConf,
       "lcsFunctionalConfContinuityCheckEnable": lcsFunctionalConfContinuityCheckEnable,
       "lcsFunctionalConfContinuityCheckPriority": lcsFunctionalConfContinuityCheckPriority,
       "lcsFunctionalConfContinuityCheckFrameRate": lcsFunctionalConfContinuityCheckFrameRate,
       "lcsFunctionalConfContinuityCheckTLV": lcsFunctionalConfContinuityCheckTLV,
       "lcsFunctionalConfAPSProtocolEnable": lcsFunctionalConfAPSProtocolEnable,
       "lcsFunctionalConfAPSProtocolPriority": lcsFunctionalConfAPSProtocolPriority,
       "lcsFunctionalConfAPSProtocolCast": lcsFunctionalConfAPSProtocolCast,
       "lcsFunctionalConfAPSProtocolType": lcsFunctionalConfAPSProtocolType,
       "lcsFunctionalConfAPSProtocolLastOctet": lcsFunctionalConfAPSProtocolLastOctet,
       "lcsTLVConf": lcsTLVConf,
       "lcsTLVConfOUIFirst": lcsTLVConfOUIFirst,
       "lcsTLVConfOUISecond": lcsTLVConfOUISecond,
       "lcsTLVConfOUIThird": lcsTLVConfOUIThird,
       "lcsTLVConfSubType": lcsTLVConfSubType,
       "lcsTLVConfValue": lcsTLVConfValue,
       "lcsTLVConfStateTable": lcsTLVConfStateTable,
       "lcsTLVConfStateEntry": lcsTLVConfStateEntry,
       "lcsTLVConfStateIndex": lcsTLVConfStateIndex,
       "lcsTLVConfStatePeerMEPID": lcsTLVConfStatePeerMEPID,
       "lcsTLVConfStateCCOrganizationSpecificOUIFirst": lcsTLVConfStateCCOrganizationSpecificOUIFirst,
       "lcsTLVConfStateCCOrganizationSpecificOUISecond": lcsTLVConfStateCCOrganizationSpecificOUISecond,
       "lcsTLVConfStateCCOrganizationSpecificOUIThird": lcsTLVConfStateCCOrganizationSpecificOUIThird,
       "lcsTLVConfStateCCOrganizationSpecificSubType": lcsTLVConfStateCCOrganizationSpecificSubType,
       "lcsTLVConfStateCCOrganizationSpecificValue": lcsTLVConfStateCCOrganizationSpecificValue,
       "lcsTLVConfStateCCOrganizationSpecificLastRX": lcsTLVConfStateCCOrganizationSpecificLastRX,
       "lcsTLVConfStateCCPortStatusValue": lcsTLVConfStateCCPortStatusValue,
       "lcsTLVConfStateCCPortStatusLastRX": lcsTLVConfStateCCPortStatusLastRX,
       "lcsTLVConfStateCCInterfaceStatusValue": lcsTLVConfStateCCInterfaceStatusValue,
       "lcsTLVConfStateCCInterfaceStatusLastRX": lcsTLVConfStateCCInterfaceStatusLastRX,
       "lcsLinkStateTracking": lcsLinkStateTracking,
       "lcsFaultManagement": lcsFaultManagement,
       "lcsFaultMgmtLoopBackConfEnable": lcsFaultMgmtLoopBackConfEnable,
       "lcsFaultMgmtLoopBackConfDEI": lcsFaultMgmtLoopBackConfDEI,
       "lcsFaultMgmtLoopBackConfPriority": lcsFaultMgmtLoopBackConfPriority,
       "lcsFaultMgmtLoopBackConfCast": lcsFaultMgmtLoopBackConfCast,
       "lcsFaultMgmtLoopBackConfPeerMEP": lcsFaultMgmtLoopBackConfPeerMEP,
       "lcsFaultMgmtLoopBackConfUnicastMAC": lcsFaultMgmtLoopBackConfUnicastMAC,
       "lcsFaultMgmtLoopBackConfToSend": lcsFaultMgmtLoopBackConfToSend,
       "lcsFaultMgmtLoopBackConfSize": lcsFaultMgmtLoopBackConfSize,
       "lcsFaultMgmtLoopBackConfInterval": lcsFaultMgmtLoopBackConfInterval,
       "lcsFaultManagementState": lcsFaultManagementState,
       "lcsFaultMgmtStateTransactionID": lcsFaultMgmtStateTransactionID,
       "lcsFaultMgmtStateTransmitted": lcsFaultMgmtStateTransmitted,
       "lcsFaultMgmtStateTable": lcsFaultMgmtStateTable,
       "lcsFaultMgmtStateEntry": lcsFaultMgmtStateEntry,
       "lcsFaultMgmtStateIndex": lcsFaultMgmtStateIndex,
       "lcsFaultMgmtStateReplyMAC": lcsFaultMgmtStateReplyMAC,
       "lcsFaultMgmtStateReceived": lcsFaultMgmtStateReceived,
       "lcsFaultMgmtStateOutOfOrder": lcsFaultMgmtStateOutOfOrder,
       "lcsFaultMgmtTestSignal": lcsFaultMgmtTestSignal,
       "lcsFaultMgmtTestSignalTx": lcsFaultMgmtTestSignalTx,
       "lcsFaultMgmtTestSignalRx": lcsFaultMgmtTestSignalRx,
       "lcsFaultMgmtTestSignalDEI": lcsFaultMgmtTestSignalDEI,
       "lcsFaultMgmtTestSignalPriority": lcsFaultMgmtTestSignalPriority,
       "lcsFaultMgmtTestSignalPeerMEP": lcsFaultMgmtTestSignalPeerMEP,
       "lcsFaultMgmtTestSignalRate": lcsFaultMgmtTestSignalRate,
       "lcsFaultMgmtTestSignalSize": lcsFaultMgmtTestSignalSize,
       "lcsFaultMgmtTestSignalPattern": lcsFaultMgmtTestSignalPattern,
       "lcsFaultMgmtTestSignalSequenceNumber": lcsFaultMgmtTestSignalSequenceNumber,
       "lcsFaultMgmtTestSignalState": lcsFaultMgmtTestSignalState,
       "lcsFaultMgmtTestSignalStateTXFrameCount": lcsFaultMgmtTestSignalStateTXFrameCount,
       "lcsFaultMgmtTestSignalStateRXFrameCount": lcsFaultMgmtTestSignalStateRXFrameCount,
       "lcsFaultMgmtTestSignalStateRXRate": lcsFaultMgmtTestSignalStateRXRate,
       "lcsFaultMgmtTestSignalStateTestTime": lcsFaultMgmtTestSignalStateTestTime,
       "lcsFaultMgmtTestSignalStateClear": lcsFaultMgmtTestSignalStateClear,
       "lcsFaultMgmtClientConfigFlow": lcsFaultMgmtClientConfigFlow,
       "lcsFaultMgmtClientConfigFlowTable": lcsFaultMgmtClientConfigFlowTable,
       "lcsFaultMgmtClientConfigFlowEntry": lcsFaultMgmtClientConfigFlowEntry,
       "lcsFaultMgmtClientConfigFlowIndex": lcsFaultMgmtClientConfigFlowIndex,
       "lcsFaultMgmtClientConfigFlowDomain": lcsFaultMgmtClientConfigFlowDomain,
       "lcsFaultMgmtClientConfigFlowInstance": lcsFaultMgmtClientConfigFlowInstance,
       "lcsFaultMgmtClientConfigFlowLevel": lcsFaultMgmtClientConfigFlowLevel,
       "lcsFaultMgmtClientConfigFlowAISprio": lcsFaultMgmtClientConfigFlowAISprio,
       "lcsFaultMgmtClientConfigFlowLCKprio": lcsFaultMgmtClientConfigFlowLCKprio,
       "lcsFaultMgmtClientConfigFlowRowStatus": lcsFaultMgmtClientConfigFlowRowStatus,
       "lcsFaultMgmtAISLOCK": lcsFaultMgmtAISLOCK,
       "lcsFaultMgmtAISEnable": lcsFaultMgmtAISEnable,
       "lcsFaultMgmtAISFrameRate": lcsFaultMgmtAISFrameRate,
       "lcsFaultMgmtAISProtection": lcsFaultMgmtAISProtection,
       "lcsFaultMgmtLOCKEnable": lcsFaultMgmtLOCKEnable,
       "lcsFaultMgmtLOCKFrameRate": lcsFaultMgmtLOCKFrameRate,
       "lcsPerformanceMonitor": lcsPerformanceMonitor,
       "lcsDataSetEnable": lcsDataSetEnable,
       "lcsLossMeasurementEnable": lcsLossMeasurementEnable,
       "lcsLossMeasurementPriority": lcsLossMeasurementPriority,
       "lcsLossMeasurementFrameRate": lcsLossMeasurementFrameRate,
       "lcsLossMeasurementCast": lcsLossMeasurementCast,
       "lcsLossMeasurementEnded": lcsLossMeasurementEnded,
       "lcsLossMeasurementFLRInterval": lcsLossMeasurementFLRInterval,
       "lcsLossMeasurementLossThreshold": lcsLossMeasurementLossThreshold,
       "lcsLossMeasurementStateTx": lcsLossMeasurementStateTx,
       "lcsLossMeasurementStateRx": lcsLossMeasurementStateRx,
       "lcsLossMeasurementStateNearEndLossCount": lcsLossMeasurementStateNearEndLossCount,
       "lcsLossMeasurementStateFarEndLossCount": lcsLossMeasurementStateFarEndLossCount,
       "lcsLossMeasurementStateNearEndLossRatio": lcsLossMeasurementStateNearEndLossRatio,
       "lcsLossMeasurementStateFarEndLossRatio": lcsLossMeasurementStateFarEndLossRatio,
       "lcsLossMeasurementStateClear": lcsLossMeasurementStateClear,
       "lcsLossMeasurementAvailabilityEnable": lcsLossMeasurementAvailabilityEnable,
       "lcsLossMeasurementAvailabilityInterval": lcsLossMeasurementAvailabilityInterval,
       "lcsLossMeasurementAvailabilityFLRThreshold": lcsLossMeasurementAvailabilityFLRThreshold,
       "lcsLossMeasurementAvailabilityMaintenance": lcsLossMeasurementAvailabilityMaintenance,
       "lcsLossMeasurementAvailabilityStateNearAvailabilityCount": lcsLossMeasurementAvailabilityStateNearAvailabilityCount,
       "lcsLossMeasurementAvailabilityStateFarAvailabilityCount": lcsLossMeasurementAvailabilityStateFarAvailabilityCount,
       "lcsLossMeasurementAvailabilityStateNearUnavailabilityCount": lcsLossMeasurementAvailabilityStateNearUnavailabilityCount,
       "lcsLossMeasurementAvailabilityStateFarUnavailabilityCount": lcsLossMeasurementAvailabilityStateFarUnavailabilityCount,
       "lcsLossMeasurementAvailabilityStateNearState": lcsLossMeasurementAvailabilityStateNearState,
       "lcsLossMeasurementAvailabilityStateFarState": lcsLossMeasurementAvailabilityStateFarState,
       "lcsLossMeasurementHighLossIntervalEnable": lcsLossMeasurementHighLossIntervalEnable,
       "lcsLossMeasurementHighLossIntervalFLRThreshold": lcsLossMeasurementHighLossIntervalFLRThreshold,
       "lcsLossMeasurementHighLossIntervalConsecutiveInterval": lcsLossMeasurementHighLossIntervalConsecutiveInterval,
       "lcsLossMeasurementHighLossIntervalStateNearCount": lcsLossMeasurementHighLossIntervalStateNearCount,
       "lcsLossMeasurementHighLossIntervalStateFarCount": lcsLossMeasurementHighLossIntervalStateFarCount,
       "lcsLossMeasurementHighLossIntervalStateNearConsecutiveCount": lcsLossMeasurementHighLossIntervalStateNearConsecutiveCount,
       "lcsLossMeasurementHighLossIntervalStateFarConsecutiveCount": lcsLossMeasurementHighLossIntervalStateFarConsecutiveCount,
       "lcsLossMeasurementSignalDegradeEnable": lcsLossMeasurementSignalDegradeEnable,
       "lcsLossMeasurementSignalDegradeTXMinimum": lcsLossMeasurementSignalDegradeTXMinimum,
       "lcsLossMeasurementSignalDegradeFLRThreshold": lcsLossMeasurementSignalDegradeFLRThreshold,
       "lcsLossMeasurementSignalDegradeBadThreshold": lcsLossMeasurementSignalDegradeBadThreshold,
       "lcsLossMeasurementSignalDegradeGoodThreshold": lcsLossMeasurementSignalDegradeGoodThreshold,
       "lcsDelayMeasurementEnable": lcsDelayMeasurementEnable,
       "lcsDelayMeasurementPriority": lcsDelayMeasurementPriority,
       "lcsDelayMeasurementCast": lcsDelayMeasurementCast,
       "lcsDelayMeasurementPeerMEP": lcsDelayMeasurementPeerMEP,
       "lcsDelayMeasurementEnded": lcsDelayMeasurementEnded,
       "lcsDelayMeasurementTxMode": lcsDelayMeasurementTxMode,
       "lcsDelayMeasurementCalc": lcsDelayMeasurementCalc,
       "lcsDelayMeasurementGap": lcsDelayMeasurementGap,
       "lcsDelayMeasurementCount": lcsDelayMeasurementCount,
       "lcsDelayMeasurementUnit": lcsDelayMeasurementUnit,
       "lcsDelayMeasurementD2forD1": lcsDelayMeasurementD2forD1,
       "lcsDelayMeasurementCounterOverflowAction": lcsDelayMeasurementCounterOverflowAction,
       "lcsDelayMeasurementStateOnewayTx": lcsDelayMeasurementStateOnewayTx,
       "lcsDelayMeasurementStateOnewayRx": lcsDelayMeasurementStateOnewayRx,
       "lcsDelayMeasurementStateOnewayRxTimeout": lcsDelayMeasurementStateOnewayRxTimeout,
       "lcsDelayMeasurementStateOnewayRxError": lcsDelayMeasurementStateOnewayRxError,
       "lcsDelayMeasurementStateOnewayAvDelayTot": lcsDelayMeasurementStateOnewayAvDelayTot,
       "lcsDelayMeasurementStateOnewayAvDelaylastN": lcsDelayMeasurementStateOnewayAvDelaylastN,
       "lcsDelayMeasurementStateOnewayDelayMin": lcsDelayMeasurementStateOnewayDelayMin,
       "lcsDelayMeasurementStateOnewayDelayMax": lcsDelayMeasurementStateOnewayDelayMax,
       "lcsDelayMeasurementStateOnewayAvDelayVarTot": lcsDelayMeasurementStateOnewayAvDelayVarTot,
       "lcsDelayMeasurementStateOnewayAvDelayVarlastN": lcsDelayMeasurementStateOnewayAvDelayVarlastN,
       "lcsDelayMeasurementStateOnewayDelayVarMin": lcsDelayMeasurementStateOnewayDelayVarMin,
       "lcsDelayMeasurementStateOnewayDelayVarMax": lcsDelayMeasurementStateOnewayDelayVarMax,
       "lcsDelayMeasurementStateOnewayOverflow": lcsDelayMeasurementStateOnewayOverflow,
       "lcsDelayMeasurementStateFtoNTx": lcsDelayMeasurementStateFtoNTx,
       "lcsDelayMeasurementStateFtoNRx": lcsDelayMeasurementStateFtoNRx,
       "lcsDelayMeasurementStateFtoNRxTimeout": lcsDelayMeasurementStateFtoNRxTimeout,
       "lcsDelayMeasurementStateFtoNRxError": lcsDelayMeasurementStateFtoNRxError,
       "lcsDelayMeasurementStateFtoNAvDelayTot": lcsDelayMeasurementStateFtoNAvDelayTot,
       "lcsDelayMeasurementStateFtoNAvDelaylastN": lcsDelayMeasurementStateFtoNAvDelaylastN,
       "lcsDelayMeasurementStateFtoNDelayMin": lcsDelayMeasurementStateFtoNDelayMin,
       "lcsDelayMeasurementStateFtoNDelayMax": lcsDelayMeasurementStateFtoNDelayMax,
       "lcsDelayMeasurementStateFtoNAvDelayVarTot": lcsDelayMeasurementStateFtoNAvDelayVarTot,
       "lcsDelayMeasurementStateFtoNAvDelayVarlastN": lcsDelayMeasurementStateFtoNAvDelayVarlastN,
       "lcsDelayMeasurementStateFtoNDelayVarMin": lcsDelayMeasurementStateFtoNDelayVarMin,
       "lcsDelayMeasurementStateFtoNDelayVarMax": lcsDelayMeasurementStateFtoNDelayVarMax,
       "lcsDelayMeasurementStateFtoNOverflow": lcsDelayMeasurementStateFtoNOverflow,
       "lcsDelayMeasurementStateNtoFTx": lcsDelayMeasurementStateNtoFTx,
       "lcsDelayMeasurementStateNtoFRx": lcsDelayMeasurementStateNtoFRx,
       "lcsDelayMeasurementStateNtoFRxTimeout": lcsDelayMeasurementStateNtoFRxTimeout,
       "lcsDelayMeasurementStateNtoFRxError": lcsDelayMeasurementStateNtoFRxError,
       "lcsDelayMeasurementStateNtoFAvDelayTot": lcsDelayMeasurementStateNtoFAvDelayTot,
       "lcsDelayMeasurementStateNtoFAvDelaylastN": lcsDelayMeasurementStateNtoFAvDelaylastN,
       "lcsDelayMeasurementStateNtoFDelayMin": lcsDelayMeasurementStateNtoFDelayMin,
       "lcsDelayMeasurementStateNtoFDelayMax": lcsDelayMeasurementStateNtoFDelayMax,
       "lcsDelayMeasurementStateNtoFAvDelayVarTot": lcsDelayMeasurementStateNtoFAvDelayVarTot,
       "lcsDelayMeasurementStateNtoFAvDelayVarlastN": lcsDelayMeasurementStateNtoFAvDelayVarlastN,
       "lcsDelayMeasurementStateNtoFDelayVarMin": lcsDelayMeasurementStateNtoFDelayVarMin,
       "lcsDelayMeasurementStateNtoFDelayVarMax": lcsDelayMeasurementStateNtoFDelayVarMax,
       "lcsDelayMeasurementStateNtoFOverflow": lcsDelayMeasurementStateNtoFOverflow,
       "lcsDelayMeasurementStateTwowayTx": lcsDelayMeasurementStateTwowayTx,
       "lcsDelayMeasurementStateTwowayRx": lcsDelayMeasurementStateTwowayRx,
       "lcsDelayMeasurementStateTwowayRxTimeout": lcsDelayMeasurementStateTwowayRxTimeout,
       "lcsDelayMeasurementStateTwowayRxError": lcsDelayMeasurementStateTwowayRxError,
       "lcsDelayMeasurementStateTwowayAvDelayTot": lcsDelayMeasurementStateTwowayAvDelayTot,
       "lcsDelayMeasurementStateTwowayAvDelaylastN": lcsDelayMeasurementStateTwowayAvDelaylastN,
       "lcsDelayMeasurementStateTwowayDelayMin": lcsDelayMeasurementStateTwowayDelayMin,
       "lcsDelayMeasurementStateTwowayDelayMax": lcsDelayMeasurementStateTwowayDelayMax,
       "lcsDelayMeasurementStateTwowayAvDelayVarTot": lcsDelayMeasurementStateTwowayAvDelayVarTot,
       "lcsDelayMeasurementStateTwowayAvDelayVarlastN": lcsDelayMeasurementStateTwowayAvDelayVarlastN,
       "lcsDelayMeasurementStateTwowayDelayVarMin": lcsDelayMeasurementStateTwowayDelayVarMin,
       "lcsDelayMeasurementStateTwowayDelayVarMax": lcsDelayMeasurementStateTwowayDelayVarMax,
       "lcsDelayMeasurementStateTwowayOverflow": lcsDelayMeasurementStateTwowayOverflow,
       "lcsDelayMeasurementStateClear": lcsDelayMeasurementStateClear,
       "lcsDelayMeasurementBinsMeasurementBinsforFD": lcsDelayMeasurementBinsMeasurementBinsforFD,
       "lcsDelayMeasurementBinsMeasurementBinsforIFDV": lcsDelayMeasurementBinsMeasurementBinsforIFDV,
       "lcsDelayMeasurementBinsMeasurementThreshold": lcsDelayMeasurementBinsMeasurementThreshold,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDTable": lcsPerformanceMonitorDelayMeasurementBinsforFDTable,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDEntry": lcsPerformanceMonitorDelayMeasurementBinsforFDEntry,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDIndex": lcsPerformanceMonitorDelayMeasurementBinsforFDIndex,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDOneway": lcsPerformanceMonitorDelayMeasurementBinsforFDOneway,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDFtoN": lcsPerformanceMonitorDelayMeasurementBinsforFDFtoN,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDNtoF": lcsPerformanceMonitorDelayMeasurementBinsforFDNtoF,
       "lcsPerformanceMonitorDelayMeasurementBinsforFDTwoway": lcsPerformanceMonitorDelayMeasurementBinsforFDTwoway,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVTable": lcsPerformanceMonitorDelayMeasurementBinsforIFDVTable,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry": lcsPerformanceMonitorDelayMeasurementBinsforIFDVEntry,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex": lcsPerformanceMonitorDelayMeasurementBinsforIFDVIndex,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway": lcsPerformanceMonitorDelayMeasurementBinsforIFDVOneway,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN": lcsPerformanceMonitorDelayMeasurementBinsforIFDVFtoN,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF": lcsPerformanceMonitorDelayMeasurementBinsforIFDVNtoF,
       "lcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway": lcsPerformanceMonitorDelayMeasurementBinsforIFDVTwoway,
       "lcsPTP": lcsPTP,
       "lcsPTPExternalEnable": lcsPTPExternalEnable,
       "lcsPTPAdjustMethod": lcsPTPAdjustMethod,
       "lcsPTPClockFrequency": lcsPTPClockFrequency,
       "lcsPTPClockConfTable": lcsPTPClockConfTable,
       "lcsPTPClockConfEntry": lcsPTPClockConfEntry,
       "lcsPTPClockConfIndex": lcsPTPClockConfIndex,
       "lcsPTPClockConfClockInstance": lcsPTPClockConfClockInstance,
       "lcsPTPClockConfDeviceType": lcsPTPClockConfDeviceType,
       "lcsPTPClockConfProfile": lcsPTPClockConfProfile,
       "lcsPTPClockConfRowStatus": lcsPTPClockConfRowStatus,
       "lcsPTPClockInstance": lcsPTPClockInstance,
       "lcsPTPClockConfAndStatus": lcsPTPClockConfAndStatus,
       "lcsPTPClockConfEntryClockInstance": lcsPTPClockConfEntryClockInstance,
       "lcsPTPClockConfEntryDeviceType": lcsPTPClockConfEntryDeviceType,
       "lcsPTPClockConfEntryProfile": lcsPTPClockConfEntryProfile,
       "lcsPTPClockConfEntryApplyProfileDefaults": lcsPTPClockConfEntryApplyProfileDefaults,
       "lcsPTPClockConfEntryPTPTime": lcsPTPClockConfEntryPTPTime,
       "lcsPTPClockConfEntryClockAdjustmentMethod": lcsPTPClockConfEntryClockAdjustmentMethod,
       "lcsPTPClockConfEntrySynchronizeToSystemClock": lcsPTPClockConfEntrySynchronizeToSystemClock,
       "lcsPTPClockConfEntryClockCurrentDataSetstpRm": lcsPTPClockConfEntryClockCurrentDataSetstpRm,
       "lcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster": lcsPTPClockConfEntryClockCurrentDataSetOffsetFromMaster,
       "lcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay": lcsPTPClockConfEntryClockCurrentDataSetMeanPathDelay,
       "lcsPTPClockConfEntryClockCurrentDataSetSlavePort": lcsPTPClockConfEntryClockCurrentDataSetSlavePort,
       "lcsPTPClockConfEntryClockCurrentDataSetSlaveState": lcsPTPClockConfEntryClockCurrentDataSetSlaveState,
       "lcsPTPClockConfEntryClockCurrentDataSetHoldover": lcsPTPClockConfEntryClockCurrentDataSetHoldover,
       "lcsPTPClockConfEntryClockParentDataSetParentPortID": lcsPTPClockConfEntryClockParentDataSetParentPortID,
       "lcsPTPClockConfEntryClockParentDataSetPort": lcsPTPClockConfEntryClockParentDataSetPort,
       "lcsPTPClockConfEntryClockParentDataSetPStat": lcsPTPClockConfEntryClockParentDataSetPStat,
       "lcsPTPClockConfEntryClockParentDataSetVar": lcsPTPClockConfEntryClockParentDataSetVar,
       "lcsPTPClockConfEntryClockParentDataSetRate": lcsPTPClockConfEntryClockParentDataSetRate,
       "lcsPTPClockConfEntryClockParentDataSetGrandMasterID": lcsPTPClockConfEntryClockParentDataSetGrandMasterID,
       "lcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality": lcsPTPClockConfEntryClockParentDataSetGrandMasterClockQuality,
       "lcsPTPClockConfEntryClockParentDataSetPri1": lcsPTPClockConfEntryClockParentDataSetPri1,
       "lcsPTPClockConfEntryClockParentDataSetPri2": lcsPTPClockConfEntryClockParentDataSetPri2,
       "lcsPTPClockConfEntryClockDefaultDataSetClockID": lcsPTPClockConfEntryClockDefaultDataSetClockID,
       "lcsPTPClockConfEntryClockDefaultDataSetDeviceType": lcsPTPClockConfEntryClockDefaultDataSetDeviceType,
       "lcsPTPClockConfEntryClockDefaultDataSet2StepFlag": lcsPTPClockConfEntryClockDefaultDataSet2StepFlag,
       "lcsPTPClockConfEntryClockDefaultDataSetPorts": lcsPTPClockConfEntryClockDefaultDataSetPorts,
       "lcsPTPClockConfEntryClockDefaultDataSetClockIdentity": lcsPTPClockConfEntryClockDefaultDataSetClockIdentity,
       "lcsPTPClockConfEntryClockDefaultDataSetDom": lcsPTPClockConfEntryClockDefaultDataSetDom,
       "lcsPTPClockConfEntryClockDefaultDataSetClockQuality": lcsPTPClockConfEntryClockDefaultDataSetClockQuality,
       "lcsPTPClockConfEntryClockDefaultDataSetPri1": lcsPTPClockConfEntryClockDefaultDataSetPri1,
       "lcsPTPClockConfEntryClockDefaultDataSetPri2": lcsPTPClockConfEntryClockDefaultDataSetPri2,
       "lcsPTPClockConfEntryClockDefaultDataSetProtocol": lcsPTPClockConfEntryClockDefaultDataSetProtocol,
       "lcsPTPClockConfEntryClockDefaultDataSetOneWay": lcsPTPClockConfEntryClockDefaultDataSetOneWay,
       "lcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable": lcsPTPClockConfEntryClockDefaultDataSetVLANTagEnable,
       "lcsPTPClockConfEntryClockDefaultDataSetVID": lcsPTPClockConfEntryClockDefaultDataSetVID,
       "lcsPTPClockConfEntryClockDefaultDataSetPCP": lcsPTPClockConfEntryClockDefaultDataSetPCP,
       "lcsPTPClockConfEntryClockDefaultDataSetDSCP": lcsPTPClockConfEntryClockDefaultDataSetDSCP,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset": lcsPTPClockConfEntryClockTimePropertiesDataSetUtcOffset,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetValid": lcsPTPClockConfEntryClockTimePropertiesDataSetValid,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetLeap59": lcsPTPClockConfEntryClockTimePropertiesDataSetLeap59,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetLeap61": lcsPTPClockConfEntryClockTimePropertiesDataSetLeap61,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac": lcsPTPClockConfEntryClockTimePropertiesDataSetTimeTrac,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac": lcsPTPClockConfEntryClockTimePropertiesDataSetFreqTrac,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale": lcsPTPClockConfEntryClockTimePropertiesDataSetPTPTimeScale,
       "lcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource": lcsPTPClockConfEntryClockTimePropertiesDataSetTimeSource,
       "lcsPTPClockConfEntryFilterParametersFilterType": lcsPTPClockConfEntryFilterParametersFilterType,
       "lcsPTPClockConfEntryFilterParametersDelayFilter": lcsPTPClockConfEntryFilterParametersDelayFilter,
       "lcsPTPClockConfEntryFilterParametersPeriod": lcsPTPClockConfEntryFilterParametersPeriod,
       "lcsPTPClockConfEntryFilterParametersDist": lcsPTPClockConfEntryFilterParametersDist,
       "lcsPTPClockConfEntryServoParametersDisplay": lcsPTPClockConfEntryServoParametersDisplay,
       "lcsPTPClockConfEntryServoParametersPEnable": lcsPTPClockConfEntryServoParametersPEnable,
       "lcsPTPClockConfEntryServoParametersIEnable": lcsPTPClockConfEntryServoParametersIEnable,
       "lcsPTPClockConfEntryServoParametersDEnable": lcsPTPClockConfEntryServoParametersDEnable,
       "lcsPTPClockConfEntryServoParametersPConstant": lcsPTPClockConfEntryServoParametersPConstant,
       "lcsPTPClockConfEntryServoParametersIConstant": lcsPTPClockConfEntryServoParametersIConstant,
       "lcsPTPClockConfEntryServoParametersDConstant": lcsPTPClockConfEntryServoParametersDConstant,
       "lcsPTPClockPortDataSetConfTable": lcsPTPClockPortDataSetConfTable,
       "lcsPTPClockPortDataSetConfEntry": lcsPTPClockPortDataSetConfEntry,
       "lcsPTPClockPortDataSetConfPort": lcsPTPClockPortDataSetConfPort,
       "lcsPTPClockConfEntryPortConfEnable": lcsPTPClockConfEntryPortConfEnable,
       "lcsPTPClockConfEntryPortConfStat": lcsPTPClockConfEntryPortConfStat,
       "lcsPTPClockConfEntryPortConfMDR": lcsPTPClockConfEntryPortConfMDR,
       "lcsPTPClockConfEntryPortConfPeerMeanPathDel": lcsPTPClockConfEntryPortConfPeerMeanPathDel,
       "lcsPTPClockConfEntryPortConfAnv": lcsPTPClockConfEntryPortConfAnv,
       "lcsPTPClockConfEntryPortConfATo": lcsPTPClockConfEntryPortConfATo,
       "lcsPTPClockConfEntryPortConfSyv": lcsPTPClockConfEntryPortConfSyv,
       "lcsPTPClockConfEntryPortConfDlm": lcsPTPClockConfEntryPortConfDlm,
       "lcsPTPClockConfEntryPortConfMPR": lcsPTPClockConfEntryPortConfMPR,
       "lcsPTPClockConfEntryPortConfDelayAsymmetry": lcsPTPClockConfEntryPortConfDelayAsymmetry,
       "lcsPTPClockConfEntryPortConfIngressLatency": lcsPTPClockConfEntryPortConfIngressLatency,
       "lcsPTPClockConfEntryPortConfEgressLatency": lcsPTPClockConfEntryPortConfEgressLatency,
       "lcsPTPClockConfEntryPortConfVersion": lcsPTPClockConfEntryPortConfVersion,
       "lcsPTPClockUnicastSlaveConfTable": lcsPTPClockUnicastSlaveConfTable,
       "lcsPTPClockUnicastSlaveConfEntry": lcsPTPClockUnicastSlaveConfEntry,
       "lcsPTPClockConfEntryUnicastSlaveConfIndex": lcsPTPClockConfEntryUnicastSlaveConfIndex,
       "lcsPTPClockConfEntryUnicastSlaveConfDuration": lcsPTPClockConfEntryUnicastSlaveConfDuration,
       "lcsPTPClockConfEntryUnicastSlaveConfIPAddress": lcsPTPClockConfEntryUnicastSlaveConfIPAddress,
       "lcsPTPClockConfEntryUnicastSlaveConfGrant": lcsPTPClockConfEntryUnicastSlaveConfGrant,
       "lcsPTPClockConfEntryUnicastSlaveConfCommState": lcsPTPClockConfEntryUnicastSlaveConfCommState,
       "lcsETHLINKOAM": lcsETHLINKOAM,
       "lcsEthLinkOAMPortConfTable": lcsEthLinkOAMPortConfTable,
       "lcsEthLinkOAMPortConfEntry": lcsEthLinkOAMPortConfEntry,
       "lcsEthLinkOAMPortConfIndex": lcsEthLinkOAMPortConfIndex,
       "lcsEthLinkOAMPortConfOAMEnable": lcsEthLinkOAMPortConfOAMEnable,
       "lcsEthLinkOAMPortConfOAMMode": lcsEthLinkOAMPortConfOAMMode,
       "lcsEthLinkOAMPortConfLoopbackSupport": lcsEthLinkOAMPortConfLoopbackSupport,
       "lcsEthLinkOAMPortConfLinkMonitorSupport": lcsEthLinkOAMPortConfLinkMonitorSupport,
       "lcsEthLinkOAMPortConfMIBRetrievalSupport": lcsEthLinkOAMPortConfMIBRetrievalSupport,
       "lcsEthLinkOAMPortConfLoopbackOperation": lcsEthLinkOAMPortConfLoopbackOperation,
       "lcsEthLinkOAMPortDetailStatusTable": lcsEthLinkOAMPortDetailStatusTable,
       "lcsEthLinkOAMPortDetailStatusEntry": lcsEthLinkOAMPortDetailStatusEntry,
       "lcsEthLinkOAMPortDetailStatusIndex": lcsEthLinkOAMPortDetailStatusIndex,
       "lcsEthLinkOAMPortPDUPermission": lcsEthLinkOAMPortPDUPermission,
       "lcsEthLinkOAMPortDiscoveryState": lcsEthLinkOAMPortDiscoveryState,
       "lcsEthLinkOAMPortPeerMACAddress": lcsEthLinkOAMPortPeerMACAddress,
       "lcsEthLinkOAMPortLocalMode": lcsEthLinkOAMPortLocalMode,
       "lcsEthLinkOAMPortLocalUnidirectionalOperationSupport": lcsEthLinkOAMPortLocalUnidirectionalOperationSupport,
       "lcsEthLinkOAMPortLocalRemoteLoopbackSupport": lcsEthLinkOAMPortLocalRemoteLoopbackSupport,
       "lcsEthLinkOAMPortLocalLinkMonitoringSupport": lcsEthLinkOAMPortLocalLinkMonitoringSupport,
       "lcsEthLinkOAMPortLocalMIBRetrievalSupport": lcsEthLinkOAMPortLocalMIBRetrievalSupport,
       "lcsEthLinkOAMPortLocalMTUSize": lcsEthLinkOAMPortLocalMTUSize,
       "lcsEthLinkOAMPortLocalMultiplexerState": lcsEthLinkOAMPortLocalMultiplexerState,
       "lcsEthLinkOAMPortLocalParserState": lcsEthLinkOAMPortLocalParserState,
       "lcsEthLinkOAMPortLocalOrganizationalUniqueIdentification": lcsEthLinkOAMPortLocalOrganizationalUniqueIdentification,
       "lcsEthLinkOAMPortLocalPDURevision": lcsEthLinkOAMPortLocalPDURevision,
       "lcsEthLinkOAMPortPeerMode": lcsEthLinkOAMPortPeerMode,
       "lcsEthLinkOAMPortPeerUnidirectionalOperationSupport": lcsEthLinkOAMPortPeerUnidirectionalOperationSupport,
       "lcsEthLinkOAMPortPeerRemoteLoopbackSupport": lcsEthLinkOAMPortPeerRemoteLoopbackSupport,
       "lcsEthLinkOAMPortPeerLinkMonitoringSupport": lcsEthLinkOAMPortPeerLinkMonitoringSupport,
       "lcsEthLinkOAMPortPeerMIBRetrievalSupport": lcsEthLinkOAMPortPeerMIBRetrievalSupport,
       "lcsEthLinkOAMPortPeerMTUSize": lcsEthLinkOAMPortPeerMTUSize,
       "lcsEthLinkOAMPortPeerMultiplexerState": lcsEthLinkOAMPortPeerMultiplexerState,
       "lcsEthLinkOAMPortPeerParserState": lcsEthLinkOAMPortPeerParserState,
       "lcsEthLinkOAMPortPeerOrganizationalUniqueIdentification": lcsEthLinkOAMPortPeerOrganizationalUniqueIdentification,
       "lcsEthLinkOAMPortPDURevision": lcsEthLinkOAMPortPDURevision,
       "lcsEthLinkOAMPortLinkEventConfTable": lcsEthLinkOAMPortLinkEventConfTable,
       "lcsEthLinkOAMPortLinkEventConfEntry": lcsEthLinkOAMPortLinkEventConfEntry,
       "lcsPortLinkEventConfIndex": lcsPortLinkEventConfIndex,
       "lcsPortLinkEventConfErrorFrameEventErrorWindow": lcsPortLinkEventConfErrorFrameEventErrorWindow,
       "lcsPortLinkEventConfErrorFrameEventErrorThreshold": lcsPortLinkEventConfErrorFrameEventErrorThreshold,
       "lcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow": lcsPortLinkEventConfSymbolPeriodErrorEventErrorWindow,
       "lcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold": lcsPortLinkEventConfSymbolPeriodErrorEventErrorThreshold,
       "lcsPortLinkEventConfSecondsSummaryEventErrorWindow": lcsPortLinkEventConfSecondsSummaryEventErrorWindow,
       "lcsPortLinkEventConfSecondsSummaryEventErrorThreshold": lcsPortLinkEventConfSecondsSummaryEventErrorThreshold,
       "lcsEthLinkOAMPortDetailedStatisticsTable": lcsEthLinkOAMPortDetailedStatisticsTable,
       "lcsEthLinkOAMPortDetailedStatisticsEntry": lcsEthLinkOAMPortDetailedStatisticsEntry,
       "lcsPortDetailedStatisticsIndex": lcsPortDetailedStatisticsIndex,
       "lcsPortDetailedStatisticsRxOAMInformationPDUs": lcsPortDetailedStatisticsRxOAMInformationPDUs,
       "lcsPortDetailedStatisticsRxUniqueErrorEventNotification": lcsPortDetailedStatisticsRxUniqueErrorEventNotification,
       "lcsPortDetailedStatisticsRxDuplicateErrorEventNotification": lcsPortDetailedStatisticsRxDuplicateErrorEventNotification,
       "lcsPortDetailedStatisticsRxLoopbackControl": lcsPortDetailedStatisticsRxLoopbackControl,
       "lcsPortDetailedStatisticsRxVariableRequest": lcsPortDetailedStatisticsRxVariableRequest,
       "lcsPortDetailedStatisticsRxVariableResponse": lcsPortDetailedStatisticsRxVariableResponse,
       "lcsPortDetailedStatisticsRxOrgSpecificPDUs": lcsPortDetailedStatisticsRxOrgSpecificPDUs,
       "lcsPortDetailedStatisticsRxUnsupportedCodes": lcsPortDetailedStatisticsRxUnsupportedCodes,
       "lcsPortDetailedStatisticsRxLinkFaultPDUs": lcsPortDetailedStatisticsRxLinkFaultPDUs,
       "lcsPortDetailedStatisticsRxDyingGasp": lcsPortDetailedStatisticsRxDyingGasp,
       "lcsPortDetailedStatisticsRxCriticalEventPDUs": lcsPortDetailedStatisticsRxCriticalEventPDUs,
       "lcsPortDetailedStatisticsTxOAMInformationPDUs": lcsPortDetailedStatisticsTxOAMInformationPDUs,
       "lcsPortDetailedStatisticsTxUniqueErrorEventNotification": lcsPortDetailedStatisticsTxUniqueErrorEventNotification,
       "lcsPortDetailedStatisticsTxDuplicateErrorEventNotification": lcsPortDetailedStatisticsTxDuplicateErrorEventNotification,
       "lcsPortDetailedStatisticsTxLoopbackControl": lcsPortDetailedStatisticsTxLoopbackControl,
       "lcsPortDetailedStatisticsTxVariableRequest": lcsPortDetailedStatisticsTxVariableRequest,
       "lcsPortDetailedStatisticsTxVariableResponse": lcsPortDetailedStatisticsTxVariableResponse,
       "lcsPortDetailedStatisticsTxOrgSpecificPDUs": lcsPortDetailedStatisticsTxOrgSpecificPDUs,
       "lcsPortDetailedStatisticsTxUnsupportedCodes": lcsPortDetailedStatisticsTxUnsupportedCodes,
       "lcsPortDetailedStatisticsTxLinkFaultPDUs": lcsPortDetailedStatisticsTxLinkFaultPDUs,
       "lcsPortDetailedStatisticsTxDyingGasp": lcsPortDetailedStatisticsTxDyingGasp,
       "lcsPortDetailedStatisticsTxCriticalEventPDUs": lcsPortDetailedStatisticsTxCriticalEventPDUs,
       "lcsPortDetailedStatisticsClear": lcsPortDetailedStatisticsClear,
       "lcsEthLinkOAMPortEventDetailedStatisticsTable": lcsEthLinkOAMPortEventDetailedStatisticsTable,
       "lcsEthLinkOAMPortEventDetailedStatisticsEntry": lcsEthLinkOAMPortEventDetailedStatisticsEntry,
       "lcsDetailedStatisticsIndex": lcsDetailedStatisticsIndex,
       "lcsDetailedStatisticsLocalSequenceNumber": lcsDetailedStatisticsLocalSequenceNumber,
       "lcsDetailedStatisticsLocalFrameErrorEventTimestamp": lcsDetailedStatisticsLocalFrameErrorEventTimestamp,
       "lcsDetailedStatisticsLocalFrameErrorEventWindow": lcsDetailedStatisticsLocalFrameErrorEventWindow,
       "lcsDetailedStatisticsLocalFrameErrorEventThreshold": lcsDetailedStatisticsLocalFrameErrorEventThreshold,
       "lcsDetailedStatisticsLocalFrameErrors": lcsDetailedStatisticsLocalFrameErrors,
       "lcsDetailedStatisticsLocalTotalFrameErrors": lcsDetailedStatisticsLocalTotalFrameErrors,
       "lcsDetailedStatisticsLocalTotalFrameErrorEvents": lcsDetailedStatisticsLocalTotalFrameErrorEvents,
       "lcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp": lcsDetailedStatisticsLocalFramePeriodErrorEventTimestamp,
       "lcsDetailedStatisticsLocalFramePeriodErrorEventWindow": lcsDetailedStatisticsLocalFramePeriodErrorEventWindow,
       "lcsDetailedStatisticsLocalFramePeriodErrorEventThreshold": lcsDetailedStatisticsLocalFramePeriodErrorEventThreshold,
       "lcsDetailedStatisticsLocalFramePeriodErrors": lcsDetailedStatisticsLocalFramePeriodErrors,
       "lcsDetailedStatisticsLocalTotalFramePeriodErrors": lcsDetailedStatisticsLocalTotalFramePeriodErrors,
       "lcsDetailedStatisticsLocalTotalFramePeriodErrorEvents": lcsDetailedStatisticsLocalTotalFramePeriodErrorEvents,
       "lcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp": lcsDetailedStatisticsLocalSymbolPeriodErrorEventTimestamp,
       "lcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow": lcsDetailedStatisticsLocalSymbolPeriodErrorEventWindow,
       "lcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold": lcsDetailedStatisticsLocalSymbolPeriodErrorEventThreshold,
       "lcsDetailedStatisticsLocalSymbolPeriodErrors": lcsDetailedStatisticsLocalSymbolPeriodErrors,
       "lcsDetailedStatisticsLocalSymbolFramePeriodErrors": lcsDetailedStatisticsLocalSymbolFramePeriodErrors,
       "lcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents": lcsDetailedStatisticsLocalSymbolFramePeriodErrorEvents,
       "lcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp": lcsDetailedStatisticsLocalEventSecondsSummaryTimeStamp,
       "lcsDetailedStatisticsLocalEventSecondsSummaryWindow": lcsDetailedStatisticsLocalEventSecondsSummaryWindow,
       "lcsDetailedStatisticsLocalEventSecondsSummaryThreshold": lcsDetailedStatisticsLocalEventSecondsSummaryThreshold,
       "lcsDetailedStatisticsLocalEventSecondsSummaryEvents": lcsDetailedStatisticsLocalEventSecondsSummaryEvents,
       "lcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal": lcsDetailedStatisticsLocalEventSecondsSummaryErrorTotal,
       "lcsDetailedStatisticsLocalEventSecondsSummaryEventTotal": lcsDetailedStatisticsLocalEventSecondsSummaryEventTotal,
       "lcsDetailedStatisticsRemoteFrameErrorEventTimestamp": lcsDetailedStatisticsRemoteFrameErrorEventTimestamp,
       "lcsDetailedStatisticsRemoteFrameErrorEventWindow": lcsDetailedStatisticsRemoteFrameErrorEventWindow,
       "lcsDetailedStatisticsRemoteFrameErrorEventThreshold": lcsDetailedStatisticsRemoteFrameErrorEventThreshold,
       "lcsDetailedStatisticsRemoteFrameErrors": lcsDetailedStatisticsRemoteFrameErrors,
       "lcsDetailedStatisticsRemoteTotalFrameErrors": lcsDetailedStatisticsRemoteTotalFrameErrors,
       "lcsDetailedStatisticsRemoteTotalFrameErrorEvents": lcsDetailedStatisticsRemoteTotalFrameErrorEvents,
       "lcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp": lcsDetailedStatisticsRemoteFramePeriodErrorEventTimestamp,
       "lcsDetailedStatisticsRemoteFramePeriodErrorEventWindow": lcsDetailedStatisticsRemoteFramePeriodErrorEventWindow,
       "lcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold": lcsDetailedStatisticsRemoteFramePeriodErrorEventThreshold,
       "lcsDetailedStatisticsRemoteFramePeriodErrors": lcsDetailedStatisticsRemoteFramePeriodErrors,
       "lcsDetailedStatisticsRemoteTotalFramePeriodErrors": lcsDetailedStatisticsRemoteTotalFramePeriodErrors,
       "lcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents": lcsDetailedStatisticsRemoteTotalFramePeriodErrorEvents,
       "lcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp": lcsDetailedStatisticsRemoteSymbolPeriodErrorEventTimestamp,
       "lcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow": lcsDetailedStatisticsRemoteSymbolPeriodErrorEventWindow,
       "lcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold": lcsDetailedStatisticsRemoteSymbolPeriodErrorEventThreshold,
       "lcsDetailedStatisticsRemoteSymbolPeriodErrors": lcsDetailedStatisticsRemoteSymbolPeriodErrors,
       "lcsDetailedStatisticsRemoteSymbolFramePeriodErrors": lcsDetailedStatisticsRemoteSymbolFramePeriodErrors,
       "lcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents": lcsDetailedStatisticsRemoteSymbolFramePeriodErrorEvents,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp": lcsDetailedStatisticsRemoteEventSecondsSummaryTimeStamp,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryWindow": lcsDetailedStatisticsRemoteEventSecondsSummaryWindow,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryThreshold": lcsDetailedStatisticsRemoteEventSecondsSummaryThreshold,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryEvents": lcsDetailedStatisticsRemoteEventSecondsSummaryEvents,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal": lcsDetailedStatisticsRemoteEventSecondsSummaryErrorTotal,
       "lcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal": lcsDetailedStatisticsRemoteEventSecondsSummaryEventTotal,
       "lcsIPMC": lcsIPMC,
       "lcsIGMPSnooping": lcsIGMPSnooping,
       "lcsIGMPSnoopingBasicConfigSnoopingEnabled": lcsIGMPSnoopingBasicConfigSnoopingEnabled,
       "lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled": lcsIGMPSnoopingBasicConfigUnregisteredIPMCv4FloodingEnabled,
       "lcsIGMPSnoopingBasicConfigIGMPSSMRange": lcsIGMPSnoopingBasicConfigIGMPSSMRange,
       "lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength": lcsIGMPSnoopingBasicConfigIGMPSSMRangeLength,
       "lcsIGMPSnoopingBasicConfigLeaveProxyEnabled": lcsIGMPSnoopingBasicConfigLeaveProxyEnabled,
       "lcsIGMPSnoopingBasicConfigProxyEnabled": lcsIGMPSnoopingBasicConfigProxyEnabled,
       "lcsIGMPSnoopingPortRelatedTable": lcsIGMPSnoopingPortRelatedTable,
       "lcsIGMPSnoopingPortRelatedEntry": lcsIGMPSnoopingPortRelatedEntry,
       "lcsIGMPSnoopingPortRelatedPort": lcsIGMPSnoopingPortRelatedPort,
       "lcsIGMPSnoopingPortRouterPort": lcsIGMPSnoopingPortRouterPort,
       "lcsIGMPSnoopingPortFastLeave": lcsIGMPSnoopingPortFastLeave,
       "lcsIGMPSnoopingPortThrottling": lcsIGMPSnoopingPortThrottling,
       "lcsIGMPSnoopingPortFilteringProfile": lcsIGMPSnoopingPortFilteringProfile,
       "lcsIGMPSnoopingVLANConfigTable": lcsIGMPSnoopingVLANConfigTable,
       "lcsIGMPSnoopingVLANConfigEntry": lcsIGMPSnoopingVLANConfigEntry,
       "lcsIGMPSnoopingVLANConfigIndex": lcsIGMPSnoopingVLANConfigIndex,
       "lcsIGMPSnoopingVLANConfigVLANID": lcsIGMPSnoopingVLANConfigVLANID,
       "lcsIGMPSnoopingVLANConfigSnoopingEnabled": lcsIGMPSnoopingVLANConfigSnoopingEnabled,
       "lcsIGMPSnoopingVLANConfigQuerierElection": lcsIGMPSnoopingVLANConfigQuerierElection,
       "lcsIGMPSnoopingVLANConfigQuerierAddress": lcsIGMPSnoopingVLANConfigQuerierAddress,
       "lcsIGMPSnoopingVLANConfigCompatibility": lcsIGMPSnoopingVLANConfigCompatibility,
       "lcsIGMPSnoopingVLANConfigPRI": lcsIGMPSnoopingVLANConfigPRI,
       "lcsIGMPSnoopingVLANConfigRV": lcsIGMPSnoopingVLANConfigRV,
       "lcsIGMPSnoopingVLANConfigQI": lcsIGMPSnoopingVLANConfigQI,
       "lcsIGMPSnoopingVLANConfigQRI": lcsIGMPSnoopingVLANConfigQRI,
       "lcsIGMPSnoopingVLANConfigLLQI": lcsIGMPSnoopingVLANConfigLLQI,
       "lcsIGMPSnoopingVLANConfigURI": lcsIGMPSnoopingVLANConfigURI,
       "lcsIGMPSnoopingStatusClear": lcsIGMPSnoopingStatusClear,
       "lcsIGMPSnoopingStatusTable": lcsIGMPSnoopingStatusTable,
       "lcsIGMPSnoopingStatusEntry": lcsIGMPSnoopingStatusEntry,
       "lcsIGMPSnoopingStatusIndex": lcsIGMPSnoopingStatusIndex,
       "lcsIGMPSnoopingStatusVLANID": lcsIGMPSnoopingStatusVLANID,
       "lcsIGMPSnoopingStatusQuerierVersion": lcsIGMPSnoopingStatusQuerierVersion,
       "lcsIGMPSnoopingStatusHostVersion": lcsIGMPSnoopingStatusHostVersion,
       "lcsIGMPSnoopingStatusQuerierStatus": lcsIGMPSnoopingStatusQuerierStatus,
       "lcsIGMPSnoopingStatusQueriesTransmitted": lcsIGMPSnoopingStatusQueriesTransmitted,
       "lcsIGMPSnoopingStatusQueriesReceived": lcsIGMPSnoopingStatusQueriesReceived,
       "lcsIGMPSnoopingStatusV1ReportsReceived": lcsIGMPSnoopingStatusV1ReportsReceived,
       "lcsIGMPSnoopingStatusV2ReportsReceived": lcsIGMPSnoopingStatusV2ReportsReceived,
       "lcsIGMPSnoopingStatusV3ReportsReceived": lcsIGMPSnoopingStatusV3ReportsReceived,
       "lcsIGMPSnoopingStatusV2LeavesReceived": lcsIGMPSnoopingStatusV2LeavesReceived,
       "lcsIGMPSnoopingStatusRouterPortTable": lcsIGMPSnoopingStatusRouterPortTable,
       "lcsIGMPSnoopingStatusRouterPortEntry": lcsIGMPSnoopingStatusRouterPortEntry,
       "lcsIGMPSnoopingStatusRouterPortIndex": lcsIGMPSnoopingStatusRouterPortIndex,
       "lcsIGMPSnoopingStatusRouterPortPort": lcsIGMPSnoopingStatusRouterPortPort,
       "lcsIGMPSnoopingGroupInfoTable": lcsIGMPSnoopingGroupInfoTable,
       "lcsIGMPSnoopingGroupInfoEntry": lcsIGMPSnoopingGroupInfoEntry,
       "lcsIGMPSnoopingGroupInfoIndex": lcsIGMPSnoopingGroupInfoIndex,
       "lcsIGMPSnoopingGroupInfoVLANID": lcsIGMPSnoopingGroupInfoVLANID,
       "lcsIGMPSnoopingGroupInfoGroups": lcsIGMPSnoopingGroupInfoGroups,
       "lcsIGMPSnoopingGroupInfoPortMembers": lcsIGMPSnoopingGroupInfoPortMembers,
       "lcsIGMPSFMInfoTable": lcsIGMPSFMInfoTable,
       "lcsIGMPSFMInfoEntry": lcsIGMPSFMInfoEntry,
       "lcsIGMPSFMInfoIndex": lcsIGMPSFMInfoIndex,
       "lcsIGMPSFMInfoVLANID": lcsIGMPSFMInfoVLANID,
       "lcsIGMPSFMInfoGroup": lcsIGMPSFMInfoGroup,
       "lcsIGMPSFMInfoPort": lcsIGMPSFMInfoPort,
       "lcsIGMPSFMInfoMode": lcsIGMPSFMInfoMode,
       "lcsIGMPSFMInfoSourceAddress": lcsIGMPSFMInfoSourceAddress,
       "lcsIGMPSFMInfoType": lcsIGMPSFMInfoType,
       "lcsIGMPSFMInfoHardwareFilterSwitch": lcsIGMPSFMInfoHardwareFilterSwitch,
       "lcsMLDSnooping": lcsMLDSnooping,
       "lcsMLDSnoopingBasicConfigSnoopingEnabled": lcsMLDSnoopingBasicConfigSnoopingEnabled,
       "lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled": lcsMLDSnoopingBasicConfigUnregisteredIPMCv6FloodingEnabled,
       "lcsMLDSnoopingBasicConfigMLDSSMRange": lcsMLDSnoopingBasicConfigMLDSSMRange,
       "lcsMLDSnoopingBasicConfigMLDSSMRangeLength": lcsMLDSnoopingBasicConfigMLDSSMRangeLength,
       "lcsMLDSnoopingBasicConfigLeaveProxyEnabled": lcsMLDSnoopingBasicConfigLeaveProxyEnabled,
       "lcsMLDSnoopingBasicConfigProxyEnabled": lcsMLDSnoopingBasicConfigProxyEnabled,
       "lcsMLDSnoopingPortRelatedTable": lcsMLDSnoopingPortRelatedTable,
       "lcsMLDSnoopingPortRelatedEntry": lcsMLDSnoopingPortRelatedEntry,
       "lcsMLDSnoopingPortRelatedPort": lcsMLDSnoopingPortRelatedPort,
       "lcsMLDSnoopingPortRouterPort": lcsMLDSnoopingPortRouterPort,
       "lcsMLDSnoopingPortFastLeave": lcsMLDSnoopingPortFastLeave,
       "lcsMLDSnoopingPortThrottling": lcsMLDSnoopingPortThrottling,
       "lcsMLDSnoopingPortFilteringProfile": lcsMLDSnoopingPortFilteringProfile,
       "lcsMLDSnoopingVLANConfigTable": lcsMLDSnoopingVLANConfigTable,
       "lcsMLDSnoopingVLANConfigEntry": lcsMLDSnoopingVLANConfigEntry,
       "lcsMLDSnoopingVLANConfigIndex": lcsMLDSnoopingVLANConfigIndex,
       "lcsMLDSnoopingVLANConfigVLANID": lcsMLDSnoopingVLANConfigVLANID,
       "lcsMLDSnoopingVLANConfigSnoopingEnabled": lcsMLDSnoopingVLANConfigSnoopingEnabled,
       "lcsMLDSnoopingVLANConfigQuerierElection": lcsMLDSnoopingVLANConfigQuerierElection,
       "lcsMLDSnoopingVLANConfigCompatibility": lcsMLDSnoopingVLANConfigCompatibility,
       "lcsMLDSnoopingVLANConfigPRI": lcsMLDSnoopingVLANConfigPRI,
       "lcsMLDSnoopingVLANConfigRV": lcsMLDSnoopingVLANConfigRV,
       "lcsMLDSnoopingVLANConfigQI": lcsMLDSnoopingVLANConfigQI,
       "lcsMLDSnoopingVLANConfigQRI": lcsMLDSnoopingVLANConfigQRI,
       "lcsMLDSnoopingVLANConfigLLQI": lcsMLDSnoopingVLANConfigLLQI,
       "lcsMLDSnoopingVLANConfigURI": lcsMLDSnoopingVLANConfigURI,
       "lcsMLDSnoopingStatusClear": lcsMLDSnoopingStatusClear,
       "lcsMLDSnoopingStatusTable": lcsMLDSnoopingStatusTable,
       "lcsMLDSnoopingStatusEntry": lcsMLDSnoopingStatusEntry,
       "lcsMLDSnoopingStatusIndex": lcsMLDSnoopingStatusIndex,
       "lcsMLDSnoopingStatusVLANID": lcsMLDSnoopingStatusVLANID,
       "lcsMLDSnoopingStatusQuerierVersion": lcsMLDSnoopingStatusQuerierVersion,
       "lcsMLDSnoopingStatusHostVersion": lcsMLDSnoopingStatusHostVersion,
       "lcsMLDSnoopingStatusQuerierStatus": lcsMLDSnoopingStatusQuerierStatus,
       "lcsMLDSnoopingStatusQueriesTransmitted": lcsMLDSnoopingStatusQueriesTransmitted,
       "lcsMLDSnoopingStatusQueriesReceived": lcsMLDSnoopingStatusQueriesReceived,
       "lcsMLDSnoopingStatusV1ReportsReceived": lcsMLDSnoopingStatusV1ReportsReceived,
       "lcsMLDSnoopingStatusV2ReportsReceived": lcsMLDSnoopingStatusV2ReportsReceived,
       "lcsMLDSnoopingStatusV1LeavesReceived": lcsMLDSnoopingStatusV1LeavesReceived,
       "lcsMLDSnoopingStatusRouterPortTable": lcsMLDSnoopingStatusRouterPortTable,
       "lcsMLDSnoopingStatusRouterPortEntry": lcsMLDSnoopingStatusRouterPortEntry,
       "lcsMLDSnoopingStatusRouterPortIndex": lcsMLDSnoopingStatusRouterPortIndex,
       "lcsMLDSnoopingStatusRouterPortPort": lcsMLDSnoopingStatusRouterPortPort,
       "lcsMLDSnoopingGroupInfoTable": lcsMLDSnoopingGroupInfoTable,
       "lcsMLDSnoopingGroupInfoEntry": lcsMLDSnoopingGroupInfoEntry,
       "lcsMLDSnoopingGroupInfoIndex": lcsMLDSnoopingGroupInfoIndex,
       "lcsMLDSnoopingGroupInfoVLANID": lcsMLDSnoopingGroupInfoVLANID,
       "lcsMLDSnoopingGroupInfoGroups": lcsMLDSnoopingGroupInfoGroups,
       "lcsMLDSnoopingGroupInfoPortMembers": lcsMLDSnoopingGroupInfoPortMembers,
       "lcsMLDSFMInfoTable": lcsMLDSFMInfoTable,
       "lcsMLDSFMInfoEntry": lcsMLDSFMInfoEntry,
       "lcsMLDSFMInfoIndex": lcsMLDSFMInfoIndex,
       "lcsMLDSFMInfoVLANID": lcsMLDSFMInfoVLANID,
       "lcsMLDSFMInfoGroup": lcsMLDSFMInfoGroup,
       "lcsMLDSFMInfoPort": lcsMLDSFMInfoPort,
       "lcsMLDSFMInfoMode": lcsMLDSFMInfoMode,
       "lcsMLDSFMInfoSourceAddress": lcsMLDSFMInfoSourceAddress,
       "lcsMLDSFMInfoType": lcsMLDSFMInfoType,
       "lcsMLDSFMInfoHardwareFilterSwitch": lcsMLDSFMInfoHardwareFilterSwitch,
       "lcsMVR": lcsMVR,
       "lcsMVRConfig": lcsMVRConfig,
       "lcsMVRConfigMVRMode": lcsMVRConfigMVRMode,
       "lcsVLANInterfaceSettingTable": lcsVLANInterfaceSettingTable,
       "lcsVLANInterfaceSettingEntry": lcsVLANInterfaceSettingEntry,
       "lcsVLANInterfaceSettingIndex": lcsVLANInterfaceSettingIndex,
       "lcsVLANInterfaceSettingMVRVID": lcsVLANInterfaceSettingMVRVID,
       "lcsVLANInterfaceSettingMVRName": lcsVLANInterfaceSettingMVRName,
       "lcsVLANInterfaceSettingIGMPAddress": lcsVLANInterfaceSettingIGMPAddress,
       "lcsVLANInterfaceSettingMode": lcsVLANInterfaceSettingMode,
       "lcsVLANInterfaceSettingTagging": lcsVLANInterfaceSettingTagging,
       "lcsVLANInterfaceSettingPriority": lcsVLANInterfaceSettingPriority,
       "lcsVLANInterfaceSettingLLQI": lcsVLANInterfaceSettingLLQI,
       "lcsVLANInterfaceSettingInterfaceChannelProfile": lcsVLANInterfaceSettingInterfaceChannelProfile,
       "lcsVLANInterfaceSettingRowStatus": lcsVLANInterfaceSettingRowStatus,
       "lcsMVRVIDIndex": lcsMVRVIDIndex,
       "lcsVLANInterfaceSettingPortRoleTable": lcsVLANInterfaceSettingPortRoleTable,
       "lcsVLANInterfaceSettingPortRoleEntry": lcsVLANInterfaceSettingPortRoleEntry,
       "lcsVLANInterfaceSettingPortRoleIndex": lcsVLANInterfaceSettingPortRoleIndex,
       "lcsVLANInterfaceSettingPortRolePort": lcsVLANInterfaceSettingPortRolePort,
       "lcsImmediateLeaveSettingTable": lcsImmediateLeaveSettingTable,
       "lcsImmediateLeaveSettingEntry": lcsImmediateLeaveSettingEntry,
       "lcsImmediateLeaveSettingPort": lcsImmediateLeaveSettingPort,
       "lcsImmediateLeaveSettingImmediateLeave": lcsImmediateLeaveSettingImmediateLeave,
       "lcsStatistics": lcsStatistics,
       "lcsMVRStatisticsClear": lcsMVRStatisticsClear,
       "lcsMVRStatisticsTable": lcsMVRStatisticsTable,
       "lcsMVRStatisticsEntry": lcsMVRStatisticsEntry,
       "lcsMVRStatisticsIndex": lcsMVRStatisticsIndex,
       "lcsMVRStatisticsVLANID": lcsMVRStatisticsVLANID,
       "lcsMVRStatisticsIGMPMLDQueriesReceived": lcsMVRStatisticsIGMPMLDQueriesReceived,
       "lcsMVRStatisticsIGMPMLDQueriesTransmitted": lcsMVRStatisticsIGMPMLDQueriesTransmitted,
       "lcsMVRStatisticsIGMPv1JoinsReceived": lcsMVRStatisticsIGMPv1JoinsReceived,
       "lcsMVRStatisticsIGMPv2MLDv1ReportsReceived": lcsMVRStatisticsIGMPv2MLDv1ReportsReceived,
       "lcsMVRStatisticsIGMPv3MLDv2ReportsReceived": lcsMVRStatisticsIGMPv3MLDv2ReportsReceived,
       "lcsMVRStatisticsIGMPv2MLDv1LeavesReceived": lcsMVRStatisticsIGMPv2MLDv1LeavesReceived,
       "lcsGroupInformation": lcsGroupInformation,
       "lcsMVRGroupInfoTable": lcsMVRGroupInfoTable,
       "lcsMVRGroupInfoEntry": lcsMVRGroupInfoEntry,
       "lcsMVRGroupInfoIndex": lcsMVRGroupInfoIndex,
       "lcsMVRGroupInfoVLANID": lcsMVRGroupInfoVLANID,
       "lcsMVRGroupInfoGroups": lcsMVRGroupInfoGroups,
       "lcsMVRGroupInfoPortMembers": lcsMVRGroupInfoPortMembers,
       "lcsMVRSFMInformation": lcsMVRSFMInformation,
       "lcsMVRSFMInfoTable": lcsMVRSFMInfoTable,
       "lcsMVRSFMInfoEntry": lcsMVRSFMInfoEntry,
       "lcsMVRSFMInfoIndex": lcsMVRSFMInfoIndex,
       "lcsMVRSFMInfoVLANID": lcsMVRSFMInfoVLANID,
       "lcsMVRSFMInfoGroup": lcsMVRSFMInfoGroup,
       "lcsMVRSFMInfoPort": lcsMVRSFMInfoPort,
       "lcsMVRSFMInfoMode": lcsMVRSFMInfoMode,
       "lcsMVRSFMInfoSourceAddress": lcsMVRSFMInfoSourceAddress,
       "lcsMVRSFMInfoType": lcsMVRSFMInfoType,
       "lcsMVRSFMInfoHardwareFilterSwitch": lcsMVRSFMInfoHardwareFilterSwitch,
       "lcsIPMCLIB": lcsIPMCLIB,
       "lcsMulticastFilteringProfileMode": lcsMulticastFilteringProfileMode,
       "lcsMulticastFilteringProfileSettingTable": lcsMulticastFilteringProfileSettingTable,
       "lcsMulticastFilteringProfileSettingEntry": lcsMulticastFilteringProfileSettingEntry,
       "lcsMulticastFilteringProfileSettingIndex": lcsMulticastFilteringProfileSettingIndex,
       "lcsMulticastFilteringProfileSettingProfileName": lcsMulticastFilteringProfileSettingProfileName,
       "lcsMulticastFilteringProfileSettingProfileDescription": lcsMulticastFilteringProfileSettingProfileDescription,
       "lcsMulticastFilteringProfileSettingRowStatus": lcsMulticastFilteringProfileSettingRowStatus,
       "lcsMulticastFilteringProfileRuleSettingsProfileNameIndex": lcsMulticastFilteringProfileRuleSettingsProfileNameIndex,
       "lcsMulticastFilteringProfileRuleSettingsTable": lcsMulticastFilteringProfileRuleSettingsTable,
       "lcsMulticastFilteringProfileRuleSettingsEntry": lcsMulticastFilteringProfileRuleSettingsEntry,
       "lcsMulticastFilteringProfileRuleSettingsTableIndex": lcsMulticastFilteringProfileRuleSettingsTableIndex,
       "lcsMulticastFilteringProfileRuleSettingsProfileName": lcsMulticastFilteringProfileRuleSettingsProfileName,
       "lcsMulticastFilteringProfileRuleSettingsIndex": lcsMulticastFilteringProfileRuleSettingsIndex,
       "lcsMulticastFilteringProfileRuleSettingsEntryName": lcsMulticastFilteringProfileRuleSettingsEntryName,
       "lcsMulticastFilteringProfileRuleSettingsAddressRange": lcsMulticastFilteringProfileRuleSettingsAddressRange,
       "lcsMulticastFilteringProfileRuleSettingsAction": lcsMulticastFilteringProfileRuleSettingsAction,
       "lcsMulticastFilteringProfileRuleSettingsLog": lcsMulticastFilteringProfileRuleSettingsLog,
       "lcsMulticastFilteringProfileRuleSettingsRowStatus": lcsMulticastFilteringProfileRuleSettingsRowStatus,
       "lcsMulticastFilteringProfileAddressConfigTable": lcsMulticastFilteringProfileAddressConfigTable,
       "lcsMulticastFilteringProfileAddressConfigEntry": lcsMulticastFilteringProfileAddressConfigEntry,
       "lcsMulticastFilteringProfileAddressConfigTableIndex": lcsMulticastFilteringProfileAddressConfigTableIndex,
       "lcsMulticastFilteringProfileAddressConfigEntryName": lcsMulticastFilteringProfileAddressConfigEntryName,
       "lcsMulticastFilteringProfileAddressConfigStartAddress": lcsMulticastFilteringProfileAddressConfigStartAddress,
       "lcsMulticastFilteringProfileAddressConfigEndAddress": lcsMulticastFilteringProfileAddressConfigEndAddress,
       "lcsMulticastFilteringProfileAddressConfigRowStatus": lcsMulticastFilteringProfileAddressConfigRowStatus,
       "lcsEEE": lcsEEE,
       "lcsPortPowerSavings": lcsPortPowerSavings,
       "lcsEnergyEfficientEthernetConfigTable": lcsEnergyEfficientEthernetConfigTable,
       "lcsEnergyEfficientEthernetConfigEntry": lcsEnergyEfficientEthernetConfigEntry,
       "lcsEnergyEfficientEthernetConfigPort": lcsEnergyEfficientEthernetConfigPort,
       "lcsEnergyEfficientEthernetConfigPortConfig": lcsEnergyEfficientEthernetConfigPortConfig,
       "lcsAggregation": lcsAggregation,
       "lcsAggregationStatic": lcsAggregationStatic,
       "lcsAggrSourceMACAddress": lcsAggrSourceMACAddress,
       "lcsAggrDestinationMACAddress": lcsAggrDestinationMACAddress,
       "lcsAggrIPAddress": lcsAggrIPAddress,
       "lcsAggrTCPUDPPortNumber": lcsAggrTCPUDPPortNumber,
       "lcsAggrGroupConfigTable": lcsAggrGroupConfigTable,
       "lcsAggrGroupConfigEntry": lcsAggrGroupConfigEntry,
       "lcsAggrGroupConfigPort": lcsAggrGroupConfigPort,
       "lcsAggrGroupConfigGroup": lcsAggrGroupConfigGroup,
       "lcsAggrGroupConfig": lcsAggrGroupConfig,
       "lcsLACPConfiguration": lcsLACPConfiguration,
       "lcsLACPPortConfigTable": lcsLACPPortConfigTable,
       "lcsLACPPortConfigEntry": lcsLACPPortConfigEntry,
       "lcsLACPPortConfigPort": lcsLACPPortConfigPort,
       "lcsLACPPortConfigEnabled": lcsLACPPortConfigEnabled,
       "lcsLACPPortConfigKey": lcsLACPPortConfigKey,
       "lcsLACPPortConfigRole": lcsLACPPortConfigRole,
       "lcsLACPPortConfigTimeout": lcsLACPPortConfigTimeout,
       "lcsLACPPortConfigPrio": lcsLACPPortConfigPrio,
       "lcsLacpSystemStatus": lcsLacpSystemStatus,
       "lcsLacpSystemStatusTable": lcsLacpSystemStatusTable,
       "lcsLacpSystemStatusEntry": lcsLacpSystemStatusEntry,
       "lcsLacpSystemStatusIndex": lcsLacpSystemStatusIndex,
       "lcsLacpSystemStatusAggrID": lcsLacpSystemStatusAggrID,
       "lcsLacpSystemStatusPartnerSystemID": lcsLacpSystemStatusPartnerSystemID,
       "lcsLacpSystemStatusPartnerKey": lcsLacpSystemStatusPartnerKey,
       "lcsLacpSystemStatusPartnerPrio": lcsLacpSystemStatusPartnerPrio,
       "lcsLacpSystemStatusLastChanged": lcsLacpSystemStatusLastChanged,
       "lcsLacpSystemStatusLocalPorts": lcsLacpSystemStatusLocalPorts,
       "lcsLACPInternalPortStatus": lcsLACPInternalPortStatus,
       "lcsLACPInternalPortStatusTable": lcsLACPInternalPortStatusTable,
       "lcsLACPInternalPortStatusEntry": lcsLACPInternalPortStatusEntry,
       "lcsLACPInternalPortStatusIndex": lcsLACPInternalPortStatusIndex,
       "lcsLACPInternalPortStatusPort": lcsLACPInternalPortStatusPort,
       "lcsLACPInternalPortStatusState": lcsLACPInternalPortStatusState,
       "lcsLACPInternalPortStatusKey": lcsLACPInternalPortStatusKey,
       "lcsLACPInternalPortStatusPriority": lcsLACPInternalPortStatusPriority,
       "lcsLACPInternalPortStatusActivity": lcsLACPInternalPortStatusActivity,
       "lcsLACPInternalPortStatusTimeout": lcsLACPInternalPortStatusTimeout,
       "lcsLACPInternalPortStatusAggregation": lcsLACPInternalPortStatusAggregation,
       "lcsLACPInternalPortStatusSynchronization": lcsLACPInternalPortStatusSynchronization,
       "lcsLACPInternalPortStatusCollecting": lcsLACPInternalPortStatusCollecting,
       "lcsLACPInternalPortStatusDistributing": lcsLACPInternalPortStatusDistributing,
       "lcsLACPInternalPortStatusDefaulted": lcsLACPInternalPortStatusDefaulted,
       "lcsLACPInternalPortStatusExpired": lcsLACPInternalPortStatusExpired,
       "lcsLACPNeighborPortStatus": lcsLACPNeighborPortStatus,
       "lcsLACPNeighborPortStatusTable": lcsLACPNeighborPortStatusTable,
       "lcsLACPNeighborPortStatusEntry": lcsLACPNeighborPortStatusEntry,
       "lcsLACPNeighborPortStatusIndex": lcsLACPNeighborPortStatusIndex,
       "lcsLACPNeighborPortStatusPort": lcsLACPNeighborPortStatusPort,
       "lcsLACPNeighborPortStatusState": lcsLACPNeighborPortStatusState,
       "lcsLACPNeighborPortStatusAggrID": lcsLACPNeighborPortStatusAggrID,
       "lcsLACPNeighborPortStatusPartnerKey": lcsLACPNeighborPortStatusPartnerKey,
       "lcsLACPNeighborPortStatusPartnerPort": lcsLACPNeighborPortStatusPartnerPort,
       "lcsLACPNeighborPortStatusPartnerPortPrio": lcsLACPNeighborPortStatusPartnerPortPrio,
       "lcsLACPNeighborPortStatusActivity": lcsLACPNeighborPortStatusActivity,
       "lcsLACPNeighborPortStatusTimeout": lcsLACPNeighborPortStatusTimeout,
       "lcsLACPNeighborPortStatusAggregation": lcsLACPNeighborPortStatusAggregation,
       "lcsLACPNeighborPortStatusSynchronization": lcsLACPNeighborPortStatusSynchronization,
       "lcsLACPNeighborPortStatusCollecting": lcsLACPNeighborPortStatusCollecting,
       "lcsLACPNeighborPortStatusDistributing": lcsLACPNeighborPortStatusDistributing,
       "lcsLACPNeighborPortStatusDefaulted": lcsLACPNeighborPortStatusDefaulted,
       "lcsLACPNeighborPortStatusExpired": lcsLACPNeighborPortStatusExpired,
       "lcsLACPStatus": lcsLACPStatus,
       "lcsLACPStatusTable": lcsLACPStatusTable,
       "lcsLACPStatusEntry": lcsLACPStatusEntry,
       "lcsLACPStatusPort": lcsLACPStatusPort,
       "lcsLACPStatusLACP": lcsLACPStatusLACP,
       "lcsLACPStatusKey": lcsLACPStatusKey,
       "lcsLACPStatusAggrID": lcsLACPStatusAggrID,
       "lcsLACPStatusPartnerSystemID": lcsLACPStatusPartnerSystemID,
       "lcsLACPStatusPartnerPort": lcsLACPStatusPartnerPort,
       "lcsLACPStatusPartnerPrio": lcsLACPStatusPartnerPrio,
       "lcsLMC": lcsLMC,
       "lcsLMCOperating": lcsLMCOperating,
       "lcsLMCConfigViaDHCP": lcsLMCConfigViaDHCP,
       "lcsLMCDomain": lcsLMCDomain,
       "lcsLMCAutoRenew": lcsLMCAutoRenew,
       "lcsLMCRolloutProjectID": lcsLMCRolloutProjectID,
       "lcsLMCRolloutLocationID": lcsLMCRolloutLocationID,
       "lcsLMCRolloutRole": lcsLMCRolloutRole,
       "lcsLMCZeroTouchSupport": lcsLMCZeroTouchSupport,
       "lcsLMCPairingTokenPresent": lcsLMCPairingTokenPresent,
       "lcsLMCManagementStatus": lcsLMCManagementStatus,
       "lcsLMCControlStatus": lcsLMCControlStatus,
       "lcsLMCMonitoringStatus": lcsLMCMonitoringStatus,
       "lcsLMCConfigModified": lcsLMCConfigModified,
       "lcsLMCDeviceID": lcsLMCDeviceID,
       "lcsLMCStatusRTT": lcsLMCStatusRTT,
       "lcsLMCTransportStatusTable": lcsLMCTransportStatusTable,
       "lcsLMCTransportStatusTableEntry": lcsLMCTransportStatusTableEntry,
       "lcsLMCTransportStatusTransportNumberIndex": lcsLMCTransportStatusTransportNumberIndex,
       "lcsLMCTransportStatusServiceName": lcsLMCTransportStatusServiceName,
       "lcsLMCTransportStatusHttpRequests": lcsLMCTransportStatusHttpRequests,
       "lcsLMCTransportStatusHttpRequestsErrors": lcsLMCTransportStatusHttpRequestsErrors,
       "lcsLMCTransportStatusTXBytes": lcsLMCTransportStatusTXBytes,
       "lcsLMCTransportStatusRXBytes": lcsLMCTransportStatusRXBytes,
       "lcsRolloutAgent": lcsRolloutAgent,
       "lcsRolloutAgentOperating": lcsRolloutAgentOperating,
       "lcsRolloutAgentActive": lcsRolloutAgentActive,
       "lcsRolloutAgentLastRequestStatus": lcsRolloutAgentLastRequestStatus,
       "lcsRolloutAgentLastRequestTimestamp": lcsRolloutAgentLastRequestTimestamp,
       "lcsRolloutAgentActiveHeartbeatUrl": lcsRolloutAgentActiveHeartbeatUrl,
       "lcsRolloutAgentActiveProjectId": lcsRolloutAgentActiveProjectId,
       "lcsRolloutAgentActiveLocationId": lcsRolloutAgentActiveLocationId,
       "lcsRolloutAgentActiveTan": lcsRolloutAgentActiveTan,
       "lcsSecurity": lcsSecurity,
       "lcsIPSourceGuard": lcsIPSourceGuard,
       "lcsIPSourceGuardConf": lcsIPSourceGuardConf,
       "lcsIPSourceGuardMode": lcsIPSourceGuardMode,
       "lcsIPSourceGuardDynamicToStaticCmd": lcsIPSourceGuardDynamicToStaticCmd,
       "lcsIPSourceGuardPortConfigTable": lcsIPSourceGuardPortConfigTable,
       "lcsIPSourceGuardPortConfigEntry": lcsIPSourceGuardPortConfigEntry,
       "lcsIPSourceGuardPortConfigMode": lcsIPSourceGuardPortConfigMode,
       "lcsIPSourceGuardPortMaxDynamicClients": lcsIPSourceGuardPortMaxDynamicClients,
       "lcsIPSourceGuardStaticTable": lcsIPSourceGuardStaticTable,
       "lcsIPSourceGuardStaticEntry": lcsIPSourceGuardStaticEntry,
       "lcsIPSourceGuardStaticSwitchIndex": lcsIPSourceGuardStaticSwitchIndex,
       "lcsIPSourceGuardStaticIndex": lcsIPSourceGuardStaticIndex,
       "lcsIPSourceGuardStaticPort": lcsIPSourceGuardStaticPort,
       "lcsIPSourceGuardStaticVLANId": lcsIPSourceGuardStaticVLANId,
       "lcsIPSourceGuardStaticIPAddress": lcsIPSourceGuardStaticIPAddress,
       "lcsIPSourceGuardStaticMACAddress": lcsIPSourceGuardStaticMACAddress,
       "lcsIPSourceGuardStaticRowStatus": lcsIPSourceGuardStaticRowStatus,
       "lcsIPSourceGuardDynamicTable": lcsIPSourceGuardDynamicTable,
       "lcsIPSourceGuardDynamicEntry": lcsIPSourceGuardDynamicEntry,
       "lcsIPSourceGuardDynamicSwitchIndex": lcsIPSourceGuardDynamicSwitchIndex,
       "lcsIPSourceGuardDynamicIndex": lcsIPSourceGuardDynamicIndex,
       "lcsIPSourceGuardDynamicPort": lcsIPSourceGuardDynamicPort,
       "lcsIPSourceGuardDynamicVLANId": lcsIPSourceGuardDynamicVLANId,
       "lcsIPSourceGuardDynamicIPAddress": lcsIPSourceGuardDynamicIPAddress,
       "lcsIPSourceGuardDynamicMACAddress": lcsIPSourceGuardDynamicMACAddress,
       "lcsARPInspection": lcsARPInspection,
       "lcsARP": lcsARP,
       "lcsARPConfig": lcsARPConfig,
       "lcsARPConfMode": lcsARPConfMode,
       "lcsARPPortConfTable": lcsARPPortConfTable,
       "lcsARPPortConfEntry": lcsARPPortConfEntry,
       "lcsARPPortConfPort": lcsARPPortConfPort,
       "lcsARPPortConfMode": lcsARPPortConfMode,
       "lcsARPPortConfCheckVLAN": lcsARPPortConfCheckVLAN,
       "lcsARPPortConfLogType": lcsARPPortConfLogType,
       "lcsARPVlanConfigTable": lcsARPVlanConfigTable,
       "lcsARPVlanConfigEntry": lcsARPVlanConfigEntry,
       "lcsARPPortConfigIndex": lcsARPPortConfigIndex,
       "lcsARPVlanConfigVlan": lcsARPVlanConfigVlan,
       "lcsARPVlanConfigLogType": lcsARPVlanConfigLogType,
       "lcsARPVlanConfigRowStatus": lcsARPVlanConfigRowStatus,
       "lcsARPStaticTable": lcsARPStaticTable,
       "lcsARPStaticEntry": lcsARPStaticEntry,
       "lcsARPStaticSwitchIndex": lcsARPStaticSwitchIndex,
       "lcsARPStaticIndex": lcsARPStaticIndex,
       "lcsARPStaticPort": lcsARPStaticPort,
       "lcsARPStaticVlanID": lcsARPStaticVlanID,
       "lcsARPStaticMACAddress": lcsARPStaticMACAddress,
       "lcsARPStaticIPAddress": lcsARPStaticIPAddress,
       "lcsARPStaticRowStatus": lcsARPStaticRowStatus,
       "lcsARPDynamicTable": lcsARPDynamicTable,
       "lcsARPDynamicEntry": lcsARPDynamicEntry,
       "lcsARPDynamicIndex": lcsARPDynamicIndex,
       "lcsARPDynamicPort": lcsARPDynamicPort,
       "lcsARPDynamicVLANId": lcsARPDynamicVLANId,
       "lcsARPDynamicMACAddress": lcsARPDynamicMACAddress,
       "lcsARPDynamicIPAddress": lcsARPDynamicIPAddress,
       "lcsARPDynamicToStaticCmd": lcsARPDynamicToStaticCmd,
       "lcsARPConformance": lcsARPConformance,
       "lcsARPCompliances": lcsARPCompliances,
       "lcsARPGroups": lcsARPGroups,
       "lcsARPGroup": lcsARPGroup,
       "lcsDHCPSnooping": lcsDHCPSnooping,
       "lcsDHCPSnoopingConf": lcsDHCPSnoopingConf,
       "lcsDHCPSnoopingMode": lcsDHCPSnoopingMode,
       "lcsDHCPSnoopingPortModeConfigurationTable": lcsDHCPSnoopingPortModeConfigurationTable,
       "lcsDHCPSnoopingPortModeConfigurationEntry": lcsDHCPSnoopingPortModeConfigurationEntry,
       "lcsDHCPSnoopingPortModeConfigurationPort": lcsDHCPSnoopingPortModeConfigurationPort,
       "lcsDHCPSnoopingPortModeConfigurationMode": lcsDHCPSnoopingPortModeConfigurationMode,
       "lcsDHCPSnoopingStatisticsTable": lcsDHCPSnoopingStatisticsTable,
       "lcsDHCPSnoopingStatisticsEntry": lcsDHCPSnoopingStatisticsEntry,
       "lcsDHCPSnoopingStatisticsPort": lcsDHCPSnoopingStatisticsPort,
       "lcsDHCPSnoopingStatisticsClear": lcsDHCPSnoopingStatisticsClear,
       "lcsDHCPSnoopingRxDiscover": lcsDHCPSnoopingRxDiscover,
       "lcsDHCPSnoopingRxOffer": lcsDHCPSnoopingRxOffer,
       "lcsDHCPSnoopingRxRequest": lcsDHCPSnoopingRxRequest,
       "lcsDHCPSnoopingRxDecline": lcsDHCPSnoopingRxDecline,
       "lcsDHCPSnoopingRxACK": lcsDHCPSnoopingRxACK,
       "lcsDHCPSnoopingRxNAK": lcsDHCPSnoopingRxNAK,
       "lcsDHCPSnoopingRxRelease": lcsDHCPSnoopingRxRelease,
       "lcsDHCPSnoopingRxInform": lcsDHCPSnoopingRxInform,
       "lcsDHCPSnoopingRxLeaseQuery": lcsDHCPSnoopingRxLeaseQuery,
       "lcsDHCPSnoopingRxLeaseUnassigned": lcsDHCPSnoopingRxLeaseUnassigned,
       "lcsDHCPSnoopingRxLeaseUnknown": lcsDHCPSnoopingRxLeaseUnknown,
       "lcsDHCPSnoopingRxLeaseActive": lcsDHCPSnoopingRxLeaseActive,
       "lcsDHCPSnoopingTxDiscover": lcsDHCPSnoopingTxDiscover,
       "lcsDHCPSnoopingTxOffer": lcsDHCPSnoopingTxOffer,
       "lcsDHCPSnoopingTxRequest": lcsDHCPSnoopingTxRequest,
       "lcsDHCPSnoopingTxDecline": lcsDHCPSnoopingTxDecline,
       "lcsDHCPSnoopingTxACK": lcsDHCPSnoopingTxACK,
       "lcsDHCPSnoopingTxNAK": lcsDHCPSnoopingTxNAK,
       "lcsDHCPSnoopingTxRelease": lcsDHCPSnoopingTxRelease,
       "lcsDHCPSnoopingTxInform": lcsDHCPSnoopingTxInform,
       "lcsDHCPSnoopingTxLeaseQuery": lcsDHCPSnoopingTxLeaseQuery,
       "lcsDHCPSnoopingTxLeaseUnassigned": lcsDHCPSnoopingTxLeaseUnassigned,
       "lcsDHCPSnoopingTxLeaseUnknown": lcsDHCPSnoopingTxLeaseUnknown,
       "lcsDHCPSnoopingTxLeaseActive": lcsDHCPSnoopingTxLeaseActive,
       "lcsDHCPSnoopingRxDiscardedChecksumError": lcsDHCPSnoopingRxDiscardedChecksumError,
       "lcsDHCPSnoopingRxDiscardedFromUntrusted": lcsDHCPSnoopingRxDiscardedFromUntrusted,
       "lcsDHCPRelay": lcsDHCPRelay,
       "lcsDHCPRelayConfiguration": lcsDHCPRelayConfiguration,
       "lcsDHCPRelayMode": lcsDHCPRelayMode,
       "lcsDHCPRelayServer": lcsDHCPRelayServer,
       "lcsDHCPRelayInformationMode": lcsDHCPRelayInformationMode,
       "lcsDHCPRelayInformationPolicy": lcsDHCPRelayInformationPolicy,
       "lcsDHCPRelayStatistics": lcsDHCPRelayStatistics,
       "lcsDHCPRelayServerStatistics": lcsDHCPRelayServerStatistics,
       "lcsServerStatTransmitToServer": lcsServerStatTransmitToServer,
       "lcsServerStatTransmitError": lcsServerStatTransmitError,
       "lcsServerStatReceiveFromServer": lcsServerStatReceiveFromServer,
       "lcsServerStatReceiveMissingAgentOption": lcsServerStatReceiveMissingAgentOption,
       "lcsServerStatReceiveMissingCircuitID": lcsServerStatReceiveMissingCircuitID,
       "lcsServerStatReceiveMissingRemoteID": lcsServerStatReceiveMissingRemoteID,
       "lcsServerStatReceiveBadCircuitID": lcsServerStatReceiveBadCircuitID,
       "lcsServerStatReceiveBadRemoteID": lcsServerStatReceiveBadRemoteID,
       "lcsDHCPRelayClientStatistics": lcsDHCPRelayClientStatistics,
       "lcsClientStatTransmitToClient": lcsClientStatTransmitToClient,
       "lcsClientStatTransmitError": lcsClientStatTransmitError,
       "lcsClientStatReceivefromClient": lcsClientStatReceivefromClient,
       "lcsClientStatReceiveAgentOption": lcsClientStatReceiveAgentOption,
       "lcsClientStatReplaceAgentOption": lcsClientStatReplaceAgentOption,
       "lcsClientStatKeepAgentOption": lcsClientStatKeepAgentOption,
       "lcsClientStatDropAgentOption": lcsClientStatDropAgentOption,
       "lcsPortSecurity": lcsPortSecurity,
       "lcsPortSecLimitCtrl": lcsPortSecLimitCtrl,
       "lcsPortSecLimitCtrlSystemConf": lcsPortSecLimitCtrlSystemConf,
       "lcsPortSecurityAging": lcsPortSecurityAging,
       "lcsPortSecurityAgingPeriod": lcsPortSecurityAgingPeriod,
       "lcsPortSecurityHoldTime": lcsPortSecurityHoldTime,
       "lcsPortSecLimitCtrlTable": lcsPortSecLimitCtrlTable,
       "lcsPortSecLimitCtrlEntry": lcsPortSecLimitCtrlEntry,
       "lcsPortSecLimitCtrlPort": lcsPortSecLimitCtrlPort,
       "lcsPortSecLimitCtrlPortMode": lcsPortSecLimitCtrlPortMode,
       "lcsPortSecLimitCtrlPortLimit": lcsPortSecLimitCtrlPortLimit,
       "lcsPortSecLimitCtrlPortViolationmMode": lcsPortSecLimitCtrlPortViolationmMode,
       "lcsPortSecLimitCtrlPortViolationmLimit": lcsPortSecLimitCtrlPortViolationmLimit,
       "lcsPortSecLimitCtrlPortState": lcsPortSecLimitCtrlPortState,
       "lcsPortSecLimitCtrlPortReOpen": lcsPortSecLimitCtrlPortReOpen,
       "lcsPortSecLimitCtrlPortSticky": lcsPortSecLimitCtrlPortSticky,
       "lcsPortSecLimitCtrlPortClear": lcsPortSecLimitCtrlPortClear,
       "lcsPortSecSwitchStatusTable": lcsPortSecSwitchStatusTable,
       "lcsPortSecSwitchStatusEntry": lcsPortSecSwitchStatusEntry,
       "lcsPortSecSwitchStatusPort": lcsPortSecSwitchStatusPort,
       "lcsPortSecSwitchStatusViolationmMode": lcsPortSecSwitchStatusViolationmMode,
       "lcsPortSecSwitchStatusState": lcsPortSecSwitchStatusState,
       "lcsPortSecSwitchStatusMACCountCurrent": lcsPortSecSwitchStatusMACCountCurrent,
       "lcsPortSecSwitchStatusMACCountViolating": lcsPortSecSwitchStatusMACCountViolating,
       "lcsPortSecSwitchStatusMACCountLimit": lcsPortSecSwitchStatusMACCountLimit,
       "lcsPortSecSwitchStatusClear": lcsPortSecSwitchStatusClear,
       "lcsPortSecPortStatus": lcsPortSecPortStatus,
       "lcsPortSecPortStatusPort": lcsPortSecPortStatusPort,
       "lcsPortSecPortStatusTable": lcsPortSecPortStatusTable,
       "lcsPortSecPortStatusEntry": lcsPortSecPortStatusEntry,
       "lcsPortSecPortStatusIndex": lcsPortSecPortStatusIndex,
       "lcsPortSecPortStatusMACAddress": lcsPortSecPortStatusMACAddress,
       "lcsPortSecPortStatusVLANId": lcsPortSecPortStatusVLANId,
       "lcsPortSecPortStatusState": lcsPortSecPortStatusState,
       "lcsPortSecPortStatusAgeAndHold": lcsPortSecPortStatusAgeAndHold,
       "lcsPortSecPortStatusClear": lcsPortSecPortStatusClear,
       "lcsAccessManagement": lcsAccessManagement,
       "lcsAccessMgmtConf": lcsAccessMgmtConf,
       "lcsAccessMgmtConfMode": lcsAccessMgmtConfMode,
       "lcsAccessMgmtConfTable": lcsAccessMgmtConfTable,
       "lcsAccessMgmtConfEntry": lcsAccessMgmtConfEntry,
       "lcsAccessMgmtIndex": lcsAccessMgmtIndex,
       "lcsAccessMgmtVlanID": lcsAccessMgmtVlanID,
       "lcsAccessMgmtStartIpAddress": lcsAccessMgmtStartIpAddress,
       "lcsAccessMgmtEndIpAddress": lcsAccessMgmtEndIpAddress,
       "lcsAccessMgmtHttpHttps": lcsAccessMgmtHttpHttps,
       "lcsAccessMgmtSNMP": lcsAccessMgmtSNMP,
       "lcsAccessMgmtTelnetSSH": lcsAccessMgmtTelnetSSH,
       "lcsAccessMgmtRowStatus": lcsAccessMgmtRowStatus,
       "lcsAccessMgmtStatistics": lcsAccessMgmtStatistics,
       "lcsAccessMgmtStatisticsClear": lcsAccessMgmtStatisticsClear,
       "lcsAccessMgmtStatisticsTable": lcsAccessMgmtStatisticsTable,
       "lcsAccessMgmtStatisticsEntry": lcsAccessMgmtStatisticsEntry,
       "lcsAccessMgmtStatisticsInterface": lcsAccessMgmtStatisticsInterface,
       "lcsAccessMgmtStatisticsReceivedPackets": lcsAccessMgmtStatisticsReceivedPackets,
       "lcsAccessMgmtStatisticsAllowedPackets": lcsAccessMgmtStatisticsAllowedPackets,
       "lcsAccessMgmtStatisticsDiscardedPackets": lcsAccessMgmtStatisticsDiscardedPackets,
       "lcsHTTPS": lcsHTTPS,
       "lcsHTTPSCertificateMaintain": lcsHTTPSCertificateMaintain,
       "lcsHTTPSCertificatePassPhrase": lcsHTTPSCertificatePassPhrase,
       "lcsHTTPSCertificateUpload": lcsHTTPSCertificateUpload,
       "lcsHTTPSFileUploadFileURL": lcsHTTPSFileUploadFileURL,
       "lcsHTTPSFileUploadTFTPServer": lcsHTTPSFileUploadTFTPServer,
       "lcsHTTPSApply": lcsHTTPSApply,
       "lcsHTTPSCertificateStatus": lcsHTTPSCertificateStatus,
       "lcsAuthMethod": lcsAuthMethod,
       "lcsAuthMethodConfigTable": lcsAuthMethodConfigTable,
       "lcsAuthMethodConfigEntry": lcsAuthMethodConfigEntry,
       "lcsAuthMethodConfigClient": lcsAuthMethodConfigClient,
       "lcsAuthMethodConfigMethod1": lcsAuthMethodConfigMethod1,
       "lcsAuthMethodConfigMethod2": lcsAuthMethodConfigMethod2,
       "lcsAuthMethodConfigMethod3": lcsAuthMethodConfigMethod3,
       "lcsAuthMethodConfigMethod4": lcsAuthMethodConfigMethod4,
       "lcsAuthMethodConfigServicePort": lcsAuthMethodConfigServicePort,
       "lcsCommandAuthorizationMethodTable": lcsCommandAuthorizationMethodTable,
       "lcsCommandAuthorizationMethodEntry": lcsCommandAuthorizationMethodEntry,
       "lcsCommandAuthorizationMethodClient": lcsCommandAuthorizationMethodClient,
       "lcsCommandAuthorizationMethodMethod": lcsCommandAuthorizationMethodMethod,
       "lcsCommandAuthorizationMethodCmdLvl": lcsCommandAuthorizationMethodCmdLvl,
       "lcsCommandAuthorizationMethodCfgCmd": lcsCommandAuthorizationMethodCfgCmd,
       "lcsAccountingMethodTable": lcsAccountingMethodTable,
       "lcsAccountingMethodEntry": lcsAccountingMethodEntry,
       "lcsAccountingMethodClient": lcsAccountingMethodClient,
       "lcsAccountingMethodMethod": lcsAccountingMethodMethod,
       "lcsAccountingMethodCmdLvl": lcsAccountingMethodCmdLvl,
       "lcsAccountingMethodCfgCmd": lcsAccountingMethodCfgCmd,
       "lcsDot1xSupplicant": lcsDot1xSupplicant,
       "lcsDot1xSupplicantSystemMode": lcsDot1xSupplicantSystemMode,
       "lcsDot1xSupplicantSystemEapMethods": lcsDot1xSupplicantSystemEapMethods,
       "lcsDot1xSupplicantTable": lcsDot1xSupplicantTable,
       "lcsDot1xSupplicantEntry": lcsDot1xSupplicantEntry,
       "lcsDot1xSupplicantIndex": lcsDot1xSupplicantIndex,
       "lcsDot1xSupplicantPortNumber": lcsDot1xSupplicantPortNumber,
       "lcsDot1xSupplicantConfigMode": lcsDot1xSupplicantConfigMode,
       "lcsDot1xSupplicantConfigUsername": lcsDot1xSupplicantConfigUsername,
       "lcsDot1xSupplicantConfigPassword": lcsDot1xSupplicantConfigPassword,
       "lcsDot1xSupplicantStatusActive": lcsDot1xSupplicantStatusActive,
       "lcsDot1xSupplicantStatusAuthorized": lcsDot1xSupplicantStatusAuthorized,
       "lcsDot1xSupplicantStatusLink": lcsDot1xSupplicantStatusLink,
       "lcsDot1xSupplicantStatusLogoff": lcsDot1xSupplicantStatusLogoff,
       "lcsDot1xSupplicantStatusString": lcsDot1xSupplicantStatusString,
       "lcsDot1xSupplicantStatusResult": lcsDot1xSupplicantStatusResult,
       "lcsDot1xSupplicantSystemMacMode": lcsDot1xSupplicantSystemMacMode,
       "lcsMaintenance": lcsMaintenance,
       "lcsRestartDevice": lcsRestartDevice,
       "lcsFactoryDefaults": lcsFactoryDefaults,
       "lcsSoftware": lcsSoftware,
       "lcsSoftwareUsername": lcsSoftwareUsername,
       "lcsSoftwarePassword": lcsSoftwarePassword,
       "lcsSoftwareIpAddress": lcsSoftwareIpAddress,
       "lcsSoftwareFileName": lcsSoftwareFileName,
       "lcsSoftwareUpgradeCmd": lcsSoftwareUpgradeCmd,
       "lcsSoftwareImageSelectionCmd": lcsSoftwareImageSelectionCmd,
       "lcsConfig": lcsConfig,
       "lcsSaveStartCmd": lcsSaveStartCmd,
       "lcsConfigUsername": lcsConfigUsername,
       "lcsConfigPassword": lcsConfigPassword,
       "lcsConfigIpAddress": lcsConfigIpAddress,
       "lcsConfigFilename": lcsConfigFilename,
       "lcsConfigFileTable": lcsConfigFileTable,
       "lcsConfigFileEntry": lcsConfigFileEntry,
       "lcsConfigFileIndex": lcsConfigFileIndex,
       "lcsShowConfigFileName": lcsShowConfigFileName,
       "lcsActivateConfigCmd": lcsActivateConfigCmd,
       "lcsDeleteConfigCmd": lcsDeleteConfigCmd,
       "lcsDownloadConfigCmd": lcsDownloadConfigCmd,
       "lcsUploadConfigCmd": lcsUploadConfigCmd,
       "lcsDiagnostics": lcsDiagnostics,
       "lcsPingIpAddress": lcsPingIpAddress,
       "lcsPingSize": lcsPingSize,
       "lcsDoPingConfig": lcsDoPingConfig,
       "lcsPingResult": lcsPingResult,
       "lcsPing6IpAddress": lcsPing6IpAddress,
       "lcsPing6Size": lcsPing6Size,
       "lcsPing6EgressInterface": lcsPing6EgressInterface,
       "lcsDoPing6Config": lcsDoPing6Config,
       "lcsPing6Result": lcsPing6Result,
       "lcstracerouteIpAddress": lcstracerouteIpAddress,
       "lcstracerouteWaittime": lcstracerouteWaittime,
       "lcstracerouteMaxTTL": lcstracerouteMaxTTL,
       "lcstracerouteNqueries": lcstracerouteNqueries,
       "lcsDotracerouteConfig": lcsDotracerouteConfig,
       "lcstracerouteResult": lcstracerouteResult,
       "lcsCableDiagnostics": lcsCableDiagnostics,
       "lcsCableDiagnosticsTest": lcsCableDiagnosticsTest,
       "lcsCableDiagnosticsTable": lcsCableDiagnosticsTable,
       "lcsCableDiagnosticsEntry": lcsCableDiagnosticsEntry,
       "lcsCableDiagnosticsPort": lcsCableDiagnosticsPort,
       "lcsCableDiagnosticsLinkStatus": lcsCableDiagnosticsLinkStatus,
       "lcsCableDiagnosticsTestResult": lcsCableDiagnosticsTestResult,
       "lcsCableDiagnosticsLength": lcsCableDiagnosticsLength,
       "lcsSwitchRebootSchedule": lcsSwitchRebootSchedule,
       "lcsSwitchRebootMode": lcsSwitchRebootMode,
       "lcsSwitchRebootTimeTable": lcsSwitchRebootTimeTable,
       "lcsSwitchRebootTimeEntry": lcsSwitchRebootTimeEntry,
       "lcsSwitchRebootWeekIndex": lcsSwitchRebootWeekIndex,
       "lcsSwitchRebootTimeHour": lcsSwitchRebootTimeHour,
       "lcsSwitchRebootTimeMinute": lcsSwitchRebootTimeMinute,
       "lcsiPerf": lcsiPerf,
       "lcsiPerfMethod": lcsiPerfMethod,
       "lcsiPerfHost": lcsiPerfHost,
       "lcsiPerfPort": lcsiPerfPort,
       "lcsiPerfTime": lcsiPerfTime,
       "lcsiPerfInterval": lcsiPerfInterval,
       "lcsiPerfTTL": lcsiPerfTTL,
       "lcsiPerfStart": lcsiPerfStart,
       "lcsiPerfResult": lcsiPerfResult,
       "lcsTrap": lcsTrap,
       "lcsTrapEvent": lcsTrapEvent,
       "lcsEmergency": lcsEmergency,
       "lcsAlert": lcsAlert,
       "lcsCritical": lcsCritical,
       "lcsError": lcsError,
       "lcsWarning": lcsWarning,
       "lcsNotice": lcsNotice,
       "lcsInformational": lcsInformational,
       "lcsDebug": lcsDebug,
       "lcsTrapVariable": lcsTrapVariable,
       "lcsInformation": lcsInformation,
       "lcsMacTrap": lcsMacTrap,
       "lcsMacTrapEvent": lcsMacTrapEvent,
       "lcsMacTrapAddNotification": lcsMacTrapAddNotification,
       "lcsMacTrapDelNotification": lcsMacTrapDelNotification,
       "lcsMacTrapVars": lcsMacTrapVars,
       "lcsMacTrapVarDelReason": lcsMacTrapVarDelReason,
       "lcsProducts": lcsProducts,
       "lcsProductsGS3126X": lcsProductsGS3126X,
       "lcsProductsGS3126XP": lcsProductsGS3126XP,
       "lcsProductsGS3128X": lcsProductsGS3128X,
       "lcsProductsGS3128XP": lcsProductsGS3128XP,
       "lcsProductsGS3152X": lcsProductsGS3152X,
       "lcsProductsGS3152XP": lcsProductsGS3152XP,
       "lcsProductsGS3152XSP": lcsProductsGS3152XSP,
       "lcsProductsGS3152P": lcsProductsGS3152P,
       "lcsProductsGS3510XP": lcsProductsGS3510XP,
       "lcsProductsGS3510X": lcsProductsGS3510X,
       "lcsProductsGS3528XSP": lcsProductsGS3528XSP,
       "lcsProductsGS3528XP": lcsProductsGS3528XP,
       "lcsProductsGS3528X": lcsProductsGS3528X,
       "lcsProductsGS3528XUP": lcsProductsGS3528XUP}
)
