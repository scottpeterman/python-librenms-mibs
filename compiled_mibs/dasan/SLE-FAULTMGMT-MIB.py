# SNMP MIB module (SLE-FAULTMGMT-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\dasan\SLE-FAULTMGMT-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 11:34:31 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(sleMgmt,) = mibBuilder.importSymbols(
    "DASAN-SMI",
    "sleMgmt")

(SleControlRequestResultType,
 SleControlStatusType) = mibBuilder.importSymbols(
    "SLE-TC-MIB",
    "SleControlRequestResultType",
    "SleControlStatusType")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 TextualConvention,
 TimeStamp) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "TextualConvention",
    "TimeStamp")


# MODULE-IDENTITY

sleFaultMgmt = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4)
)
if mibBuilder.loadTexts:
    sleFaultMgmt.setRevisions(
        ("1904-12-08 00:00",)
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class SpecificNum(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              137,
              138,
              139,
              140,
              142,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              181,
              182,
              183,
              184,
              185,
              186,
              191,
              192,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              251,
              252,
              253,
              254,
              255,
              256,
              291,
              292,
              294,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              391,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              428,
              429,
              430,
              431,
              432,
              433,
              434,
              435,
              436,
              437,
              438,
              439,
              440,
              441,
              442,
              443,
              444,
              445,
              446,
              447,
              448,
              450,
              451,
              452,
              453,
              454,
              455,
              456,
              457,
              458,
              459,
              460,
              461,
              462,
              463,
              464,
              465,
              466,
              467,
              468,
              469,
              470,
              471,
              472,
              473,
              474,
              475,
              476,
              477,
              478,
              479,
              480,
              481,
              482,
              483,
              484,
              485,
              486,
              487,
              488,
              489,
              490,
              491,
              492,
              493,
              494,
              495,
              496,
              497,
              498,
              499,
              500,
              501,
              502,
              503,
              504,
              505,
              506,
              507,
              508,
              509,
              510,
              511,
              512,
              551,
              552,
              553,
              554,
              562,
              601,
              602,
              605,
              607,
              609,
              611,
              612,
              613,
              614,
              615,
              616,
              617,
              618,
              620,
              621,
              622,
              623,
              624,
              625,
              626,
              627,
              628,
              629,
              630,
              631,
              632,
              633,
              634,
              635,
              636,
              637,
              638,
              639,
              640,
              641,
              642,
              643,
              644,
              645,
              646,
              647,
              648,
              649,
              650,
              651,
              652,
              653,
              654,
              655,
              656,
              657,
              658,
              659,
              660,
              661,
              662,
              663,
              664,
              665,
              666,
              667,
              668,
              669,
              670,
              671,
              672,
              673,
              674,
              675,
              676,
              677,
              678,
              679,
              680,
              681,
              682,
              683,
              684,
              685,
              686,
              687,
              688,
              689,
              690,
              691,
              692,
              693,
              694,
              695,
              696,
              697,
              698,
              699,
              700,
              701,
              702,
              703,
              721,
              722,
              800,
              801,
              802,
              803,
              851,
              852,
              853,
              854,
              855,
              856,
              857,
              858,
              859,
              860,
              901,
              902,
              903,
              904,
              905,
              906,
              907,
              908,
              909,
              910,
              911,
              912,
              913,
              914,
              915,
              916,
              917,
              918,
              919,
              920,
              921,
              922,
              923,
              924,
              925,
              926,
              927,
              928,
              929,
              930,
              931,
              932,
              933,
              934,
              935,
              936,
              937,
              938,
              939,
              940,
              941,
              942,
              943,
              944,
              945,
              946,
              947,
              948,
              949,
              950,
              951,
              952,
              953,
              954,
              955,
              956,
              957,
              958,
              959,
              960,
              961,
              962,
              963,
              964,
              965,
              966,
              967,
              968,
              969,
              970,
              971,
              972,
              973,
              974,
              975,
              976,
              977,
              978,
              979,
              980,
              981,
              982,
              984,
              985,
              986,
              987,
              988,
              989,
              990,
              1001,
              1002,
              1003,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1024,
              1025,
              1026,
              1027,
              1028,
              1051,
              1052,
              1101,
              1102,
              1103,
              1104,
              1105,
              1106,
              1107,
              1108,
              1109,
              1110,
              1111,
              1112,
              1113,
              1114,
              1115,
              1116,
              1117,
              1118,
              1119,
              1120,
              1121,
              1122,
              1123,
              1124,
              1141,
              1151,
              1152,
              1171,
              1172,
              1174,
              1201,
              1202,
              1203,
              1204,
              1205,
              1206,
              1207,
              1208,
              1209,
              1210,
              1211,
              1212,
              1213,
              1214,
              1215,
              1216,
              1217,
              1218,
              1219,
              1220,
              1221,
              1222,
              1223,
              1224,
              1225,
              1226,
              1227,
              1228,
              1229,
              1230,
              1231,
              1232,
              1233,
              1234,
              1235,
              1236,
              1237,
              1238,
              1239,
              1240,
              1241,
              1242,
              1243,
              1244,
              1245,
              1246,
              1247,
              1248,
              1249,
              1250,
              1251,
              1252,
              1253,
              1254,
              1255,
              1256,
              1257,
              1258,
              1259,
              1260,
              1261,
              1262,
              1263,
              1264,
              1265,
              1266,
              1267,
              1268,
              1269,
              1270,
              1271,
              1272,
              1281,
              1282,
              1301,
              1302,
              1331,
              1332,
              1333,
              1334,
              1335,
              1336,
              1337,
              1338,
              1339,
              1340,
              1341,
              1342,
              1343,
              1344,
              1345,
              1346,
              1347,
              1348,
              1350,
              1351,
              1352,
              1353,
              1354,
              1355,
              1356,
              1357,
              1358,
              1361,
              1362,
              1363,
              1364,
              1365,
              1366,
              1367,
              1368,
              1381,
              1382,
              1391,
              1392,
              1401,
              1402,
              1403,
              1404,
              1405,
              1406,
              1407,
              1408,
              1409,
              1410,
              1411,
              1412,
              1413,
              1414,
              1415,
              1416,
              1417,
              1418,
              1419,
              1420,
              1421,
              1422,
              1423,
              1424,
              1425,
              1426,
              1427,
              1428,
              1429,
              1430,
              1500,
              1501,
              1502,
              1503,
              1504,
              1505,
              1506,
              1507,
              1508,
              1509,
              1510,
              1511,
              1512,
              1513,
              1514,
              1515,
              1516,
              1517,
              1518,
              1519,
              1520,
              1521,
              1522,
              1523,
              1530,
              1531,
              1532,
              1533,
              1534,
              1535,
              1536,
              1537,
              1538,
              1539,
              1540,
              1541,
              1542,
              1561,
              1562,
              1601,
              1602,
              1603,
              1604,
              1605,
              1606,
              1607,
              1608,
              1609,
              1610,
              1611,
              1612,
              1613,
              1614,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012,
              2013,
              2014,
              2015,
              2016,
              2017,
              2018,
              2019,
              2020,
              2021,
              2022,
              2023,
              2024,
              2025,
              2026,
              2027,
              2028,
              2029,
              2030,
              2031,
              2032,
              2033,
              2034,
              2035,
              2036,
              2037,
              2038,
              2039,
              2040,
              2041,
              2042,
              2101,
              2102,
              2103,
              2104,
              2105,
              2106,
              2107,
              2108,
              2109,
              2110,
              2111,
              2112,
              2113,
              2114,
              2115,
              2116,
              2117,
              2118,
              2119,
              2120,
              2121,
              2122,
              2123,
              2124,
              2125,
              2126,
              2127,
              2128,
              2129,
              2130,
              2131,
              2132,
              2133,
              2134,
              2135,
              2136,
              2137,
              2138,
              2139,
              2140,
              2201,
              2202,
              2203,
              2204)
        )
    )
    namedValues = NamedValues(
        *(("portDown", 1),
          ("portUp", 2),
          ("portRemoved", 3),
          ("portInstalled", 4),
          ("powerFail", 5),
          ("powerOK", 6),
          ("powerRemoved", 7),
          ("powerInstalled", 8),
          ("fanFail", 9),
          ("fanOK", 10),
          ("fanRemoved", 11),
          ("fanInstalled", 12),
          ("moduleRemoved", 13),
          ("moduleInstalled", 14),
          ("systemRestart", 15),
          ("systemStart", 16),
          ("broadcastOver", 17),
          ("broadcastUnder", 18),
          ("cpuOverLoad", 19),
          ("cpuUnderLoad", 20),
          ("memoryOverUsed", 21),
          ("memoryUnderUsed", 22),
          ("portOverThreshold", 23),
          ("portUnderThreshold", 24),
          ("temperatureHigh", 25),
          ("temperatureLow", 26),
          ("mfgdBlocked", 27),
          ("mfgdReleased", 28),
          ("ipConflict", 29),
          ("ipUnconflict", 30),
          ("dhcpLeaseShortage", 31),
          ("dhcpLeaseSufficient", 32),
          ("dhcpOccuredIllegalEntry", 33),
          ("dhcpRemovedIllegalEntry", 34),
          ("rmonAlarmRising", 35),
          ("rmonAlarmNoRising", 36),
          ("rmonAlarmFalling", 37),
          ("rmonAlarmNoFalling", 38),
          ("bpduGuardDisabled", 39),
          ("rootGuardDisabled", 40),
          ("portSecurity", 41),
          ("userLogin", 42),
          ("userLogout", 43),
          ("systemWarmStart", 44),
          ("igmpGroupJoined", 51),
          ("igmpGroupLeaved", 52),
          ("dhcpIpaddressBound", 53),
          ("dhcpIpaddressFree", 54),
          ("doorOpened", 55),
          ("doorClosed", 56),
          ("powerModeChangedPowerToBattery", 57),
          ("powerModeChangedBatteryToPower", 58),
          ("batterylowcapacity", 59),
          ("batterynormalcapacity", 60),
          ("batteryhighTemperature", 61),
          ("batterynormalTemperature", 62),
          ("authenticationFail", 63),
          ("authenticationNoFail", 64),
          ("psuAcHighTemperature", 65),
          ("psuAcNormalTemperature", 66),
          ("batteryRemoved", 67),
          ("batteryEquipped", 68),
          ("batteryLowVoltage", 69),
          ("batteryNormalVoltage", 70),
          ("adminAccessLogin", 71),
          ("adminAccessLogout", 72),
          ("cfgdBlocked", 73),
          ("cfgdReleased", 74),
          ("sfgdBlocked", 75),
          ("sfgdReleased", 76),
          ("swWatchdogAbnomalState", 77),
          ("swWatchdogNomalState", 78),
          ("swWatchdogDetectError", 79),
          ("swWatchdogClearError", 80),
          ("ppsControlBlocked", 81),
          ("ppsControlReleased", 82),
          ("gotDMITempHighOverAlarm", 83),
          ("gotDMITempHighFallAlarm", 84),
          ("gotDMITempLowOverAlarm", 85),
          ("gotDMITempLowFallAlarm", 86),
          ("gotDMITempHighOverWarning", 87),
          ("gotDMITempHighFallWarning", 88),
          ("gotDMITempLowOverWarning", 89),
          ("gotDMITempLowFallWarning", 90),
          ("gotDMIVolHighOverAlarm", 91),
          ("gotDMIVolHighFallAlarm", 92),
          ("gotDMIVolLowOverAlarm", 93),
          ("gotDMIVolLowFallAlarm", 94),
          ("gotDMIVolHighOverWarning", 95),
          ("gotDMIVolHighFallWarning", 96),
          ("gotDMIVolLowOverWarning", 97),
          ("gotDMIVolLowFallWarning", 98),
          ("gotDMITxBiasHighOverAlarm", 99),
          ("gotDMITxBiasHighFallAlarm", 100),
          ("gotDMITxBiasLowOverAlarm", 101),
          ("gotDMITxBiasLowFallAlarm", 102),
          ("gotDMITxBiasHighOverWarning", 103),
          ("gotDMITxBiasHighFallWarning", 104),
          ("gotDMITxBiasLowOverWarning", 105),
          ("gotDMITxBiasLowFallWarning", 106),
          ("gotDMITxPowerHighOverAlarm", 107),
          ("gotDMITxPowerHighFallAlarm", 108),
          ("gotDMITxPowerLowOverAlarm", 109),
          ("gotDMITxPowerLowFallAlarm", 110),
          ("gotDMITxPowerHighOverWarning", 111),
          ("gotDMITxPowerHighFallWarning", 112),
          ("gotDMITxPowerLowOverWarning", 113),
          ("gotDMITxPowerLowFallWarning", 114),
          ("gotDMIRxPowerHighOverAlarm", 115),
          ("gotDMIRxPowerHighFallAlarm", 116),
          ("gotDMIRxPowerLowOverAlarm", 117),
          ("gotDMIRxPowerLowFallAlarm", 118),
          ("gotDMIRxPowerHighOverWarning", 119),
          ("gotDMIRxPowerHighFallWarning", 120),
          ("gotDMIRxPowerLowOverWarning", 121),
          ("gotDMIRxPowerLowFallWarning", 122),
          ("nosRemoteUpgradeRequest", 123),
          ("nosRemoteUpgradeSuccess", 124),
          ("nosRemoteUpgradeFailAbort", 125),
          ("nosRemoteUpgradeFailHeaderError", 126),
          ("nosRemoteUpgradeFailDownloadError", 127),
          ("nosRemoteUpgradeFailFlashError", 128),
          ("nosRemoteUpgradeStart", 129),
          ("systemDyingGasp", 130),
          ("remoteOamDyingGasp", 131),
          ("remoteOamDyingGaspRestoration", 132),
          ("cliHistory", 133),
          ("cliHistoryNo", 134),
          ("ntpConnectionFail", 135),
          ("nmsConnectionTypeChanged", 137),
          ("fanSpeedFallUnderThreshold", 138),
          ("fanSpeedRisingOverThreshold", 139),
          ("userLoginFail", 140),
          ("temperatureHighContinued", 142),
          ("swWatchdogInetAbnormalState", 150),
          ("swWatchdogInetNormalState", 151),
          ("swWatchdogInetDetectError", 152),
          ("swWatchdogInetClearError", 153),
          ("swWatchdogPonAbnormalState", 154),
          ("swWatchdogPonNormalState", 155),
          ("swWatchdogPonDetectError", 156),
          ("swWatchdogPonClearError", 157),
          ("arpInspectInvalid", 158),
          ("clockModuleRemoved", 159),
          ("clockModuleInstalled", 160),
          ("clockModuleInitFail", 161),
          ("clockModuleInitOk", 162),
          ("cliHistoryLog", 163),
          ("cliHistoryLogNo", 164),
          ("slotActionEvent", 165),
          ("slotStateChange", 166),
          ("interfaceAdminDown", 167),
          ("interfaceAdminUp", 168),
          ("slotPowerMonAbnormal", 169),
          ("slotPowerMonNormal", 170),
          ("slotErrorLEDChanged", 171),
          ("bfdSessionStateChanged", 172),
          ("clockModuleOPModeChanged", 173),
          ("clockModuleRefChanged", 174),
          ("clockModuleInSrcStatusChanged", 175),
          ("clockModuleInSrcAISStatusChanged", 176),
          ("clockModuleInSrcLoSStatusChanged", 177),
          ("clockModuleInSrcLSDCStatusChanged", 178),
          ("clockModuleInSrcNtrClockChanged", 179),
          ("portRxOverThreshold", 181),
          ("portRxUnderThreshold", 182),
          ("portTxOverThreshold", 183),
          ("portTxUnderThreshold", 184),
          ("cpuPpsOverThreshold", 185),
          ("cpuPpsUnderThreshold", 186),
          ("pairFanPowerOff", 191),
          ("pairFanPowerOn", 192),
          ("slotHealthStatusTimeout", 199),
          ("slotHealthStatusTimeoutCleared", 200),
          ("advaTemperature", 201),
          ("advaTemperatureNo", 202),
          ("advaPSUFailure", 203),
          ("advaPSUFailureNo", 204),
          ("advaFanFailure", 205),
          ("advaFanFailureNo", 206),
          ("advaInterfaceReceiveFailure", 207),
          ("advaInterfaceReceiveFailureNo", 208),
          ("advaInterfaceOpticalThreshold", 209),
          ("advaInterfaceOpticalThresholdNo", 210),
          ("advaInterfaceTransmitFault", 211),
          ("advaInterfaceTransmitFaultNo", 212),
          ("advaInterfaceMisconfiguration", 213),
          ("advaInterfaceMisconfigurationNo", 214),
          ("advaInterfaceSFPMismatch", 215),
          ("advaInterfaceSFPMismatchNo", 216),
          ("advaVoltageLow", 217),
          ("advaVoltageLowNo", 218),
          ("advaVoltageHigh", 219),
          ("advaVoltageHighNo", 220),
          ("criticalAlarmLedOn", 251),
          ("criticalAlarmLedOff", 252),
          ("majorAlarmLedOn", 253),
          ("majorAlarmLedOff", 254),
          ("minorAlarmLedOn", 255),
          ("minorAlarmLedOff", 256),
          ("systemTemperPowerCutOff", 291),
          ("systemTemperPowerCutoffCleared", 292),
          ("slotTemperPowerCutOff", 294),
          ("erpDomainLotp", 301),
          ("erpDomainLotpNo", 302),
          ("erpDomainULotp", 303),
          ("erpDomainULotpNo", 304),
          ("erpDomainMultipleRM", 305),
          ("erpDomainMultipleRMNo", 306),
          ("erpDomainRMNodeReacheablity", 307),
          ("erpDomainRMNodeReacheablityNo", 308),
          ("startupConfigLoadEnded", 391),
          ("eponOnuDeregister", 401),
          ("eponOnuRegister", 402),
          ("eponOnuRegistrationError", 403),
          ("eponOnuNoRegistrationError", 404),
          ("eponBadEncryptionKey", 405),
          ("eponNoBadEncryptionKey", 406),
          ("eponLlidMistmatch", 407),
          ("eponNoLlidMismatch", 408),
          ("eponTooManyRegister", 409),
          ("eponNoTooManyRegister", 410),
          ("eponDyingGASP", 411),
          ("eponNoDyingGASP", 412),
          ("eponOnuErrFramePeriod", 413),
          ("eponOnuNoErrFramePeriod", 414),
          ("eponOnuErrFrame", 415),
          ("eponOnuNoErrFrame", 416),
          ("eponOnuErrFrameSecondSummary", 417),
          ("eponOnuNoErrFrameSecondSummary", 418),
          ("eponOnuLastOnuDeregister", 419),
          ("eponOnuNoLastOnuDeregister", 420),
          ("eponOltCableDown", 421),
          ("eponOltRecoverCableDown", 422),
          ("eponOltHealthCheckError", 423),
          ("eponOnuOpticSignalErr", 424),
          ("eponOnuRecoverOpticSignalErr", 425),
          ("standardLinkFault", 428),
          ("standardLinkFaultCleared", 429),
          ("lossOfSignal", 430),
          ("lossOfSignalCleared", 431),
          ("transmitFail", 432),
          ("transmitFailCleared", 433),
          ("macLearningOverflow", 434),
          ("macLearningOverflowCleared", 435),
          ("loopback", 436),
          ("loopbackCleared", 437),
          ("standardDyinggasp", 438),
          ("standardDyinggaspCleared", 439),
          ("externalDyinggasp", 440),
          ("externalDyinggaspCleared", 441),
          ("standardCriticalEvent", 442),
          ("standardCriticalEventCleared", 443),
          ("externalCriticalEvent", 444),
          ("externalCriticalEventCleared", 445),
          ("eponStandbyLos", 446),
          ("eponStandbyLosCleared", 447),
          ("eponOnuPingTest", 448),
          ("eponOnuDmiThresholdTemperOverHighWarn", 450),
          ("clearEponOnuDmiThresholdTemperOverHighWarn", 451),
          ("eponOnuDmiThresholdTemperFallLowWarn", 452),
          ("clearEponOnuDmiThresholdTemperFallLowWarn", 453),
          ("eponOnuDmiThresholdTemperOverHighAlarm", 454),
          ("clearEponOnuDmiThresholdTemperOverHighAlarm", 455),
          ("eponOnuDmiThresholdTemperFallLowAlarm", 456),
          ("clearEponOnuDmiThresholdTemperFallLowAlarm", 457),
          ("eponOnuDmiThresholdVoltageOverHighWarn", 458),
          ("clearEponOnuDmiThresholdVoltageOverHighWarn", 459),
          ("eponOnuDmiThresholdVoltageFallLowWarn", 460),
          ("clearEponOnuDmiThresholdVoltageFallLowWarn", 461),
          ("eponOnuDmiThresholdVoltageOverHighAlarm", 462),
          ("clearEponOnuDmiThresholdVoltageOverHighAlarm", 463),
          ("eponOnuDmiThresholdVoltageFallLowAlarm", 464),
          ("clearEponOnuDmiThresholdVoltageFallLowAlarm", 465),
          ("eponOnuDmiThresholdTxbiasOverHighWarn", 466),
          ("clearEponOnuDmiThresholdTxbiasOverHighWarn", 467),
          ("eponOnuDmiThresholdTxbiasFallLowWarn", 468),
          ("clearEponOnuDmiThresholdTxbiasFallLowWarn", 469),
          ("eponOnuDmiThresholdTxbiasOverHighAlarm", 470),
          ("clearEponOnuDmiThresholdTxbiasOverHighAlarm", 471),
          ("eponOnuDmiThresholdTxbiasFallLowAlarm", 472),
          ("clearEponOnuDmiThresholdTxbiasFallLowAlarm", 473),
          ("eponOnuDmiThresholdTxpowerOverHighWarn", 474),
          ("clearEponOnuDmiThresholdTxpowerOverHighWarn", 475),
          ("eponOnuDmiThresholdTxpowerFallLowWarn", 476),
          ("clearEponOnuDmiThresholdTxpowerFallLowWarn", 477),
          ("eponOnuDmiThresholdTxpowerOverHighAlarm", 478),
          ("clearEponOnuDmiThresholdTxpowerOverHighAlarm", 479),
          ("eponOnuDmiThresholdTxpowerFallLowAlarm", 480),
          ("clearEponOnuDmiThresholdTxpowerFallLowAlarm", 481),
          ("eponOnuDmiThresholdRxpowerOverHighWarn", 482),
          ("clearEponOnuDmiThresholdRxpowerOverHighWarn", 483),
          ("eponOnuDmiThresholdRxpowerFallLowWarn", 484),
          ("clearEponOnuDmiThresholdRxpowerFallLowWarn", 485),
          ("eponOnuDmiThresholdRxpowerOverHighAlarm", 486),
          ("clearEponOnuDmiThresholdRxpowerOverHighAlarm", 487),
          ("eponOnuDmiThresholdRxpowerFallLowAlarm", 488),
          ("clearEponOnuDmiThresholdRxpowerFallLowAlarm", 489),
          ("eponDetectRouge", 490),
          ("clearEpoonDetectRouge", 491),
          ("eponDetectRougeOnuPowerOff", 492),
          ("eponDetectRougeOnuPowerOffFailed", 493),
          ("eponDetectRougeOnuDeregisterSuccess", 494),
          ("eponDetectRougeOnuDeregisterFailed", 495),
          ("eponDetectRougeOnuFoundFailed", 496),
          ("eponOltRedundancyDetectRxpower", 497),
          ("clearEponOltRedundancyDetectRxpower", 498),
          ("eponOltRedundancySwitchoverReasonForce", 499),
          ("eponOltRedundancySwitchoverReasonLos", 500),
          ("autoCLIStart", 501),
          ("autoCLINoStart", 502),
          ("autoCLIComplete", 503),
          ("autoCLINoComplete", 504),
          ("autoCLIRemoveOutputFile", 505),
          ("autoCLINoRemoveOutputFile", 506),
          ("autoResetSystem", 507),
          ("autoResetNoSystem", 508),
          ("autoResetPingReplyLoss", 509),
          ("autoResetNoPingReplyLoss", 510),
          ("autoResetMemoryLeakDetect", 511),
          ("autoResetNoMemoryLeakDetect", 512),
          ("loopDetectBlocked", 551),
          ("loopDetectUnBlockedByExpireTimer", 552),
          ("loopDetectUnBlockedByLinkDown", 553),
          ("loopDetectUnBlockedByClearCmd", 554),
          ("oamRemoteTestLoopback", 562),
          ("arulePacketDropDetect", 601),
          ("arulePacketDropRelease", 602),
          ("autoCpeUpgradeStart", 605),
          ("autoCpeUpgradeFail", 607),
          ("autoCpeUpgradeSuccess", 609),
          ("batteryUnderTemper", 611),
          ("batteryTemperUnderToNormal", 612),
          ("batteryCellAbnormal", 613),
          ("batteryCellNormal", 614),
          ("batteryCellTestChargeStarted", 615),
          ("batteryCellTestChargeFinished", 616),
          ("batteryAcPowerFault", 617),
          ("batteryAcPowerOk", 618),
          ("bME1CardNoDetect", 620),
          ("clearBME1CardNoDetect", 621),
          ("bME1CardAFEerror", 622),
          ("clearBME1CardAFEerror", 623),
          ("bME1CardIFEerror", 624),
          ("clearBME1CardIFEerror", 625),
          ("bME1CardFWerror", 626),
          ("clearBME1CardFWerror", 627),
          ("bME1CardPROVerror", 628),
          ("clearBME1CardPROVerror", 629),
          ("bME1CrashDetect", 630),
          ("clearBME1CrashDetect", 631),
          ("bME2CardNoDetect", 632),
          ("clearBME2CardNoDetect", 633),
          ("bME2CardAFEerror", 634),
          ("clearBME2CardAFEerror", 635),
          ("bME2CardIFEerror", 636),
          ("clearBME2CardIFEerror", 637),
          ("bME2CardFWerror", 638),
          ("clearBME2CardFWerror", 639),
          ("bME2CardPROVerror", 640),
          ("clearBME2CardPROVerror", 641),
          ("bME2CrashDetect", 642),
          ("clearBME2CrashDetect", 643),
          ("bME3CardNoDetect", 644),
          ("clearBME3CardNoDetect", 645),
          ("bME3CardAFEerror", 646),
          ("clearBME3CardAFEerror", 647),
          ("bME3CardIFEerror", 648),
          ("clearBME3CardIFEerror", 649),
          ("bME3CardFWerror", 650),
          ("clearBME3CardFWerror", 651),
          ("bME3CardPROVerror", 652),
          ("clearBME3CardPROVerror", 653),
          ("bME3CrashDetect", 654),
          ("clearBME3CrashDetect", 655),
          ("powerFromBattery", 656),
          ("clearPowerFromBattery", 657),
          ("invalidBatteryStatus", 658),
          ("clearInvalidBatteryStatus", 659),
          ("batteryChargeLow", 660),
          ("clearBatteryChargeLow", 661),
          ("batteryNotPresent", 662),
          ("clearBatteryNotPresent", 663),
          ("voltageLow", 664),
          ("clearVoltageLow", 665),
          ("tempOverThreshold", 666),
          ("clearTempOverThreshold", 667),
          ("tempUnderThreshold", 668),
          ("clearTempUnderThreshold", 669),
          ("cpuOverThreshold", 670),
          ("clearCpuOverThreshold", 671),
          ("trafficOverload", 672),
          ("clearTrafficOverload", 673),
          ("gEPONModuleNotDetect", 674),
          ("clearGEPONModuleNotDetect", 675),
          ("gEPONPortOperationDown", 676),
          ("clearGEPONPortOperationDown", 677),
          ("gEPONNoIncomingTraffic", 678),
          ("clearGEPONNoIncomingTraffic", 679),
          ("processCrashDetect", 680),
          ("clearProcessCrashDetect", 681),
          ("memoryLeakDetect", 682),
          ("clearMemoryLeakDetect", 683),
          ("memoryCorrupDetect", 684),
          ("clearMemoryCorrupDetect", 685),
          ("memoryLowDetect", 686),
          ("clearMemoryLowDetect", 687),
          ("dataLineerror", 688),
          ("clearDataLineerror", 689),
          ("addressLineerror", 690),
          ("clearAddressLineerror", 691),
          ("chipsetNotDetcet", 692),
          ("clearChipsetNotDetcet", 693),
          ("pciBuserror", 694),
          ("clearPciBuserror", 695),
          ("securityAdminConnect", 696),
          ("clearSecurityAdminConnect", 697),
          ("oNUPowerDown", 698),
          ("clearONUPowerDown", 699),
          ("oNUNotRegister", 700),
          ("clearONUNotRegister", 701),
          ("oNTOpticPre", 702),
          ("clearONTOpticPre", 703),
          ("writeMemroyFailSeveralTimes", 721),
          ("writeMemroyFailSeveralTimesCleared", 722),
          ("switchoverInitiated", 800),
          ("switchoverDone", 801),
          ("boardChangeState", 802),
          ("redConfigurationMisMatch", 803),
          ("aiuAlarmInput1", 851),
          ("aiuAlarmInput1Cleared", 852),
          ("aiuAlarmInput2", 853),
          ("aiuAlarmInput2Cleared", 854),
          ("aiuAlarmInput3", 855),
          ("aiuAlarmInput3Cleared", 856),
          ("aiuAlarmInput4", 857),
          ("aiuAlarmInput4Cleared", 858),
          ("aiuSlotUninstalled", 859),
          ("aiuSlotInstalled", 860),
          ("gponNoAuthCBU", 901),
          ("gponDuplicateONU", 902),
          ("gponDyingGasp", 903),
          ("gponUpgradeComplete", 904),
          ("gponDeregistered", 905),
          ("gponRegistered", 906),
          ("gponRogueOnu", 907),
          ("gponOnuBatteryEvent", 908),
          ("clearGponOnuBetteryEvent", 909),
          ("gponOnuPortOperStatus", 910),
          ("gponTransceiverChanged", 911),
          ("gponOltLosOn", 912),
          ("gponOltLosOff", 913),
          ("gponOltLosiOn", 914),
          ("gponOltLosiOff", 915),
          ("gponDyingGaspOn", 916),
          ("gponDyingGaspOff", 917),
          ("gponOntOSUpgradeStatus", 918),
          ("gponOntBLUpgradeStatus", 919),
          ("gponOltRxPowerLoss", 920),
          ("gponOltRxPowerDetected", 921),
          ("gponOnuTemperatureHighOverThreshold", 922),
          ("gponOnuTemperatureHighFallThreshold", 923),
          ("gponOnuTemperatureLowOverThreshold", 924),
          ("gponOnuTemperatureLowFallThreshold", 925),
          ("gponOnuCpuOverThreshold", 926),
          ("gponOnuCpuFallThreshold", 927),
          ("gponOnuMemoryOverThreshold", 928),
          ("gponOnuMemoryFallThreshold", 929),
          ("gponOnuI2cFail", 930),
          ("gponOnuRxOpticLowThreshAlarmOn", 931),
          ("gponOnuRxOpticLowThreshAlarmOff", 932),
          ("gponOnuRxOpticHighThreshAlarmOn", 933),
          ("gponOnuRxOpticHighThreshAlarmOff", 934),
          ("gponOltLOFIOn", 935),
          ("gponOltLOFIOff", 936),
          ("gponOltDOWOn", 937),
          ("gponOltDOWOff", 938),
          ("gponOltSFOn", 939),
          ("gponOltSFOff", 940),
          ("gponOltSDOn", 941),
          ("gponOltSDOff", 942),
          ("gponOltLCDGIOn", 943),
          ("gponOltLCDGIOff", 944),
          ("gponOltRDOn", 945),
          ("gponOltRDOff", 946),
          ("gponOltSUFOn", 947),
          ("gponOltSUFOff", 948),
          ("gponOltLOAOn", 949),
          ("gponOltLOAOff", 950),
          ("gponOltLOAMIOn", 951),
          ("gponOltLOAMIOff", 952),
          ("gponOltMEMOn", 953),
          ("gponOltMEMOff", 954),
          ("gponOltPEEOn", 955),
          ("gponOltPEEOff", 956),
          ("gponOltPSTOn", 957),
          ("gponOltPSTOff", 958),
          ("gponOltERROn", 959),
          ("gponOltERROff", 960),
          ("gponOltREIOn", 961),
          ("gponOltREIOff", 962),
          ("gponAntiSpoofingDupPortOn", 963),
          ("gponAntiSpoofingDupPortOff", 964),
          ("gponRedundancySwitchOver", 965),
          ("gponDuplicatedRangingResponse", 966),
          ("gponOnuPortOpticModuleRemove", 967),
          ("gponOnuPortOpticModuleInstall", 968),
          ("gponOnuOMCCProblemDetected", 969),
          ("gponOnuOMCCProblemCleared", 970),
          ("gponOltFixedTcontAlarmOn", 971),
          ("gponOltFixedTcontAlarmOff", 972),
          ("gponOltDynamicTcontAlarmOn", 973),
          ("gponOltDynamicTcontAlarmOff", 974),
          ("gponOltPortCountAlarmOn", 975),
          ("gponOltPortCountAlarmOff", 976),
          ("gponOltCableDownAlarmOn", 977),
          ("gponOltCableDownAlarmOff", 978),
          ("gponOltDeactiveMonitorAlarmOn", 979),
          ("gponOltDeactiveMonitorAlarmOff", 980),
          ("gponOltDfiOn", 981),
          ("gponOltDfiOff", 982),
          ("gponOltTransceiverPortChanged", 984),
          ("gponOnuPortOperStatusDown", 985),
          ("gponOnuPortOperStatusUp", 986),
          ("gponOltRxPowerHighOver", 987),
          ("gponOltRxPowerHighCleared", 988),
          ("gponOltRxPowerLowUnder", 989),
          ("gponOltRxPowerLowCleared", 990),
          ("oamRapsEastPortStatusChanged", 1001),
          ("oamRapsWestPortStatusChanged", 1002),
          ("oamURNodePortStatusChanged", 1003),
          ("oamRemoteLlcfLinkDown", 1008),
          ("oamRemoteLlcfLinkUp", 1009),
          ("oamInterfaceStatusChanged", 1010),
          ("oamMepRDIDetected", 1011),
          ("oamMepRDICleared", 1012),
          ("oamMepLOCDetected", 1013),
          ("oamMepLOCCleared", 1014),
          ("oamMepUNPDetected", 1015),
          ("oamMepUNPCleared", 1016),
          ("oamMepUNMDetected", 1017),
          ("oamMepUNMCleared", 1018),
          ("oamMepMMGDetected", 1019),
          ("oamMepMMGCleared", 1020),
          ("oamMepUNLDetected", 1021),
          ("oamMepUNLCleared", 1022),
          ("oamMepAISDetected", 1023),
          ("oamMepAISCleared", 1024),
          ("oamMepLCKDetected", 1025),
          ("oamMepLCKCleared", 1026),
          ("oamMepMISSINGDetected", 1027),
          ("oamMepMISSINGCleared", 1028),
          ("voipPortStatusEnabled", 1051),
          ("voipPortStatusDisabled", 1052),
          ("emLogDefectCPUHighOver", 1101),
          ("emLogDefectCPUHighUnder", 1102),
          ("emLogTemperHighOver", 1103),
          ("emLogTemperHighUnder", 1104),
          ("emLogTemperLowUnder", 1105),
          ("emLogTemperLowOver", 1106),
          ("emLogMemLowUnder", 1107),
          ("emLogMemLowOver", 1108),
          ("emLogFanFail", 1109),
          ("emLogFanFailCleared", 1110),
          ("emLogPhyCRCFail", 1111),
          ("emLogPhyCRCFailCleared", 1112),
          ("emLogPhyDetectFail", 1113),
          ("emLogPhyDetectFailCleared", 1114),
          ("emLogSFUMateInitFail", 1115),
          ("emLogSFUMateInitFailCleared", 1116),
          ("emLogDaemonHealthBad", 1117),
          ("emLogDaemonHealthBadCleared", 1118),
          ("emLogGPIURavenLinkDown", 1119),
          ("emLogGPIURavenLinkDownCleared", 1120),
          ("emLogRPMLow", 1121),
          ("emLogRPMLowCleared", 1122),
          ("emLogNAKError", 1123),
          ("emLogNAKErrorCleared", 1124),
          ("snmpAllConfCleared", 1141),
          ("slotNosUpgradeStart", 1151),
          ("slotNosUpgradeEnd", 1152),
          ("autonegoMissmatedSpeed", 1171),
          ("autonegoMissmatedDuplex", 1172),
          ("autonegoMismatched", 1174),
          ("dmiTempHighOverDurationAlarmOld", 1201),
          ("dmiTempLowFallDurationAlarmOld", 1202),
          ("dmiTempHighOverDurationWarningOld", 1203),
          ("dmiTempLowFallDurationWarningOld", 1204),
          ("dmiVolHighOverDurationAlarmOld", 1205),
          ("dmiVolLowFallDurationAlarmOld", 1206),
          ("dmiVolHighOverDurationWarningOld", 1207),
          ("dmiVolLowFallDurationWarningOld", 1208),
          ("dmiTxBiasHighOverDurationAlarmOld", 1209),
          ("dmiTxBiasLowFallDurationAlarmOld", 1210),
          ("dmiTxBiasHighOverDurationWarningOld", 1211),
          ("dmiTxBiasLowFallDurationWarningOld", 1212),
          ("dmiTxPowerHighOverDurationAlarmOld", 1213),
          ("dmiTxPowerLowFallDurationAlarmOld", 1214),
          ("dmiTxPowerHighOverDurationWarningOld", 1215),
          ("dmiTxPowerLowFallDurationWarningOld", 1216),
          ("dmiRxPowerHighOverDurationAlarmOld", 1217),
          ("dmiRxPowerLowFallDurationAlarmOld", 1218),
          ("dmiRxPowerHighOverDurationWarningOld", 1219),
          ("dmiRxPowerLowFallDurationWarningOld", 1220),
          ("attackGuard", 1221),
          ("attackGuardNo", 1222),
          ("activeLinkDown", 1223),
          ("activeLinkDownNo", 1224),
          ("activeLinkUp", 1225),
          ("activeLinkUpNo", 1226),
          ("redundantLinkDown", 1227),
          ("redundantLinkDownNo", 1228),
          ("redundantLinkUp", 1229),
          ("redundantLinkUpNo", 1230),
          ("inputErrorThreshold", 1231),
          ("inputErrorThresholdNo", 1232),
          ("overSizeFrameThreshold", 1233),
          ("overSizeFrameThresholdNo", 1234),
          ("configLoadFail", 1235),
          ("configLoadFailNo", 1236),
          ("nosLoadFail", 1237),
          ("nosLoadFailNo", 1238),
          ("securityViolation", 1239),
          ("securityViolationNo", 1240),
          ("selfTestCompleted", 1241),
          ("selfTestCompletedNo", 1242),
          ("risingAlarm", 1243),
          ("risingAlarmNo", 1244),
          ("fallingAlarm", 1245),
          ("fallingAlarmNo", 1246),
          ("newRoot", 1247),
          ("newRootNo", 1248),
          ("topologyChange", 1249),
          ("topologyChangeNo", 1250),
          ("broadcastStormStart", 1251),
          ("broadcastStormStartNo", 1252),
          ("broadcastStormEnd", 1253),
          ("broadcastStormEndNo", 1254),
          ("duplicateMac", 1255),
          ("duplicateMacNo", 1256),
          ("trapLog", 1257),
          ("trapLogNo", 1258),
          ("scriptLoadFail", 1259),
          ("scriptLoadFailNo", 1260),
          ("monitorEvent", 1261),
          ("monitorEventNo", 1262),
          ("powerDetectFail", 1263),
          ("powerDetectOk", 1264),
          ("underSizeFrameThreshold", 1265),
          ("underSizeFrameThresholdNo", 1266),
          ("runtFrameThreshold", 1267),
          ("runtFrameThresholdNo", 1268),
          ("dyingGasp", 1269),
          ("dyingGaspNo", 1270),
          ("voipPortStatusEnable", 1271),
          ("voipPortStatusDisable", 1272),
          ("fanStop", 1281),
          ("fanRun", 1282),
          ("mllcfLinkDown", 1301),
          ("mllcfLinkUp", 1302),
          ("gponOnuAniVoltageLowThreshAlarmOn", 1331),
          ("gponOnuAniVoltageLowThreshAlarmOff", 1332),
          ("gponOnuAniVoltageHighThreshAlarmOn", 1333),
          ("gponOnuAniVoltageHighThreshAlarmOff", 1334),
          ("gponOnuAniTemperatureLowThreshAlarmOn", 1335),
          ("gponOnuAniTemperatureLowThreshAlarmOff", 1336),
          ("gponOnuAniTemperatureHighThreshAlarmOn", 1337),
          ("gponOnuAniTemperatureHighThreshAlarmOff", 1338),
          ("gponOnuAniTxBiasLowThreshAlarmOn", 1339),
          ("gponOnuAniTxBiasLowThreshAlarmOff", 1340),
          ("gponOnuAniTxBiasHighThreshAlarmOn", 1341),
          ("gponOnuAniTxBiasHighThreshAlarmOff", 1342),
          ("gponOnuAniTxpowerLowThreshAlarmOn", 1343),
          ("gponOnuAniTxpowerLowThreshAlarmOff", 1344),
          ("gponOnuAniTxpowerHighThreshAlarmOn", 1345),
          ("gponOnuAniTxpowerHighThreshAlarmOff", 1346),
          ("gponOnuServiceOpModeAlarm", 1347),
          ("gponOnuServiceOpModeAlarmCleared", 1348),
          ("gponOnuAuthErrorReasonUpdated", 1350),
          ("portThresholdTxOverAlarm", 1351),
          ("portThresholdTxOverAlarmCleared", 1352),
          ("portThresholdTxOverWarn", 1353),
          ("portThresholdTxOverWarnCleared", 1354),
          ("portThresholdRxOverAlarm", 1355),
          ("portThresholdRxOverAlarmCleared", 1356),
          ("portThresholdRxOverWarn", 1357),
          ("portThresholdRxOverWarnCleared", 1358),
          ("tempThresholdHighOverAlarm", 1361),
          ("tempThresholdHighOverAlarmCleared", 1362),
          ("tempThresholdLowOverAlarm", 1363),
          ("tempThresholdLowOverAlarmCleared", 1364),
          ("tempThresholdHighOverWarn", 1365),
          ("tempThresholdHighOverWarnCleared", 1366),
          ("tempThresholdLowOverWarn", 1367),
          ("tempThresholdLowOverWarnCleared", 1368),
          ("moduleDmiReadError", 1381),
          ("moduleDmiReadErrorCleared", 1382),
          ("stormControlRxOver", 1391),
          ("stormControlRxOverCleared", 1392),
          ("rmonCrcAlignErrorRising", 1401),
          ("rmonCrcAlignErrorRisingCleared", 1402),
          ("rmonJabberRising", 1403),
          ("rmonJabberRisingCleared", 1404),
          ("rmonOversizePacketRising", 1405),
          ("rmonOversizePacketRisingCleared", 1406),
          ("rmonUndersizePacketRising", 1407),
          ("rmonUndersizePacketRisingCleared", 1408),
          ("rmonFragmentRising", 1409),
          ("rmonFragmentRisingCleared", 1410),
          ("rmonDropEventRising", 1411),
          ("rmonDropEventRisingCleared", 1412),
          ("rmonCollisionRising", 1413),
          ("rmonCollisionRisingCleared", 1414),
          ("rmonIfInDiscardsRising", 1415),
          ("rmonIfInDiscardsRisingCleared", 1416),
          ("rmonIfInErrosRising", 1417),
          ("rmonIfInErrosRisingCleared", 1418),
          ("rmonIfOutDiscardsRising", 1419),
          ("rmonIfOutDiscardsRisingCleared", 1420),
          ("rmonIfOutErrosRising", 1421),
          ("rmonIfOutErrosRisingCleared", 1422),
          ("rmonIfInPauseFrameRising", 1423),
          ("rmonIfInPauseFrameRisingCleared", 1424),
          ("rmonIfOutPauseFrameRising", 1425),
          ("rmonIfOutPauseFrameRisingCleared", 1426),
          ("rmonQueueTransmitRising", 1427),
          ("rmonQueueTransmitRisingCleared", 1428),
          ("rmonQueueDropRising", 1429),
          ("rmonQueueDropRisingCleared", 1430),
          ("eponOltRedundancySwitchoverReasonSlotRemove", 1500),
          ("eponOltRedundancySwitchoverReasonSlotRestart", 1501),
          ("eponOltRedundancySwitchoverReasonAutoDetect", 1502),
          ("eponOltRedundancySwitchoverReasonWtrDetect", 1503),
          ("eponOnuCrcUpStreamAlarmErr", 1504),
          ("eponOnuCrcUpStreamAlarmErrClean", 1505),
          ("eponOnuTooFrequentlyRegisteredErr", 1506),
          ("eponOnuTooFrequentlyRegisteredErrClean", 1507),
          ("eponOnuCrcDownStreamAlarmErr", 1508),
          ("eponOnuCrcDownStreamAlarmErrClean", 1509),
          ("eponOnuOpticPowerAlarmErr", 1510),
          ("eponOnuOpticPowerAlarmErrClean", 1511),
          ("eponOnuDcVoltageAlarmErr", 1512),
          ("eponOnuDcVoltageAlarmErrClean", 1513),
          ("eponOnuLoopingAlarmErr", 1514),
          ("eponOnuLoopingAlarmErrClean", 1515),
          ("eponOltRedundancyStandbyOltRxPowerOverHighThresholdAlarm", 1516),
          ("eponOltRedundancyStandbyOltRxPowerUnderLowThresholdAlarm", 1517),
          ("eponOnuBroadcastStormLlidUpAlarmErr", 1518),
          ("eponOnuBroadcastStormLlidUpAlarmErrClean", 1519),
          ("eponOnuBroadcastStormLlidDnAlarmErr", 1520),
          ("eponOnuBroadcastStormLlidDnAlarmErrClean", 1521),
          ("eponOnuBroadcastStormUniUpAlarmErr", 1522),
          ("eponOnuBroadcastStormUniUpAlarmErrClean", 1523),
          ("eponDetectRogueOnuTurn", 1530),
          ("eponDetectRogueOnuTurnClean", 1531),
          ("eponOnuLoopDetectErr", 1532),
          ("eponOnuRecoverDetectErr", 1533),
          ("eponThresholdAlarmLoopDetectErr", 1534),
          ("eponThresholdAlarmRecoverLoopDetectErr", 1535),
          ("eponThresholdAlarmOpticAlarmErr", 1536),
          ("eponThresholdAlarmRecoverOpticAlarmErr", 1537),
          ("eponThresholdAlarmOverVoltageErr", 1538),
          ("eponThresholdAlarmRecoverOverVoltageErr", 1539),
          ("eponOLTSFPModuleInstalled", 1540),
          ("eponOLTSFPModuleRemoved", 1541),
          ("eponOnuDailyRxPowerAlarm", 1542),
          ("fiberLengthChangedWarningAlarm", 1561),
          ("fiberLengthChangedWarningAlarmCleared", 1562),
          ("cfmOnuMepRdiCcmDetected", 1601),
          ("cfmOnuMepRdiCcmCleared", 1602),
          ("cfmOnuMepMacStatusDetected", 1603),
          ("cfmOnuMepMacStatusCleared", 1604),
          ("cfmOnuMepRemoteCcmDetected", 1605),
          ("cfmOnuMepRemoteCcmCleared", 1606),
          ("cfmOnuMepErrorCcmDetected", 1607),
          ("cfmOnuMepErrprCcmCleared", 1608),
          ("cfmOnuMepXconCcmDetected", 1609),
          ("cfmOnuMepXconCcmCleared", 1610),
          ("cfmOnuMepUnexpectedPeriodDetected", 1611),
          ("cfmOnuMepUnexpectedPeriodCleared", 1612),
          ("cfmOnuMepAisDetected", 1613),
          ("cfmOnuMepAisCleared", 1614),
          ("tcpDosAttack", 2001),
          ("tcpDosAttackCleared", 2002),
          ("tcpPortFlooding", 2003),
          ("tcpPortFloodingCleared", 2004),
          ("tcpHostRandomFlooding", 2005),
          ("tcpHostRandomFloodingCleared", 2006),
          ("tcpHostScanning", 2007),
          ("tcpHostScanningCleared", 2008),
          ("ipSppfing", 2009),
          ("ipSppfingCleared", 2010),
          ("udpDosAttack", 2011),
          ("udpDosAttackCleared", 2012),
          ("udpPortFlooding", 2013),
          ("udpPortFloodingCleared", 2014),
          ("udpHostRandomFlooding", 2015),
          ("udpHostRandomFloodingCleared", 2016),
          ("udpHostScanning", 2017),
          ("udpHostScanningCleared", 2018),
          ("udpIPSppfing", 2019),
          ("udpIPSppfingCleared", 2020),
          ("icmpDosAttack", 2021),
          ("icmpDosAttackCleared", 2022),
          ("icmpIPSppfing", 2023),
          ("icmpIPSppfingCleared", 2024),
          ("icmpHostScanning", 2025),
          ("icmpHostScanningCleared", 2026),
          ("arpMacFlooding", 2027),
          ("arpMacFloodingCleared", 2028),
          ("arpSpoofing", 2029),
          ("arpSpoofingCleared", 2030),
          ("decoySnare", 2031),
          ("decoySnareCleared", 2032),
          ("hostScan", 2033),
          ("hostScanCleared", 2034),
          ("portScan", 2035),
          ("portScanCleared", 2036),
          ("tcpPortScanning", 2037),
          ("tcpPortScanningCleared", 2038),
          ("udpPortScanning", 2039),
          ("udpPortScanningCleared", 2040),
          ("staticAttack", 2041),
          ("staticAttackCleared", 2042),
          ("dmiTempHighOverDurationAlarm", 2101),
          ("dmiTempHighOverDurationAlarmCleared", 2102),
          ("dmiTempLowOverDurationAlarm", 2103),
          ("dmiTempLowOverDurationAlarmCleared", 2104),
          ("dmiTempHighOverDurationWarning", 2105),
          ("dmiTempHighOverDurationWarningCleared", 2106),
          ("dmiTempLowOverDurationWarning", 2107),
          ("dmiTempLowOverDurationWarningCleared", 2108),
          ("dmiVolHighOverDurationAlarm", 2109),
          ("dmiVolHighOverDurationAlarmCleared", 2110),
          ("dmiVolLowOverDurationAlarm", 2111),
          ("dmiVolLowOverDurationAlarmCleared", 2112),
          ("dmiVolHighOverDurationWarning", 2113),
          ("dmiVolHighOverDurationWarningCleared", 2114),
          ("dmiVolLowOverDurationWarning", 2115),
          ("dmiVolLowOverDurationWarningCleared", 2116),
          ("dmiTxBiasHighOverDurationAlarm", 2117),
          ("dmiTxBiasHighOverDurationAlarmCleared", 2118),
          ("dmiTxBiasLowOverDurationAlarm", 2119),
          ("dmiTxBiasLowOverDurationAlarmCleared", 2120),
          ("dmiTxBiasHighOverDurationWarning", 2121),
          ("dmiTxBiasHighOverDurationWarningCleared", 2122),
          ("dmiTxBiasLowOverDurationWarning", 2123),
          ("dmiTxBiasLowOverDurationWarningCleared", 2124),
          ("dmiTxPowerHighOverDurationAlarm", 2125),
          ("dmiTxPowerHighOverDurationAlarmCleared", 2126),
          ("dmiTxPowerLowOverDurationAlarm", 2127),
          ("dmiTxPowerLowOverDurationAlarmCleared", 2128),
          ("dmiTxPowerHighOverDurationWarning", 2129),
          ("dmiTxPowerHighOverDurationWarningCleared", 2130),
          ("dmiTxPowerLowOverDurationWarning", 2131),
          ("dmiTxPowerLowOverDurationWarningCleared", 2132),
          ("dmiRxPowerHighOverDurationAlarm", 2133),
          ("dmiRxPowerHighOverDurationAlarmCleared", 2134),
          ("dmiRxPowerLowOverDurationAlarm", 2135),
          ("dmiRxPowerLowOverDurationAlarmCleared", 2136),
          ("dmiRxPowerHighOverDurationWarning", 2137),
          ("dmiRxPowerHighOverDurationWarningCleared", 2138),
          ("dmiRxPowerLowOverDurationWarning", 2139),
          ("dmiRxPowerLowOverDurationWarningCleared", 2140),
          ("reloadMateInitiated", 2201),
          ("reloadMateDone", 2202),
          ("reloadSIUInitiated", 2203),
          ("reloadSIUDone", 2204))
    )



# MIB Managed Objects in the order of their OIDs

_SleFaultMgmtBase_ObjectIdentity = ObjectIdentity
sleFaultMgmtBase = _SleFaultMgmtBase_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1)
)
_SleFaultMgmtBaseGroup_ObjectIdentity = ObjectIdentity
sleFaultMgmtBaseGroup = _SleFaultMgmtBaseGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 1)
)


class _SleFaultDefaultSeverity_Type(Integer32):
    """Custom type sleFaultDefaultSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleFaultDefaultSeverity_Type.__name__ = "Integer32"
_SleFaultDefaultSeverity_Object = MibScalar
sleFaultDefaultSeverity = _SleFaultDefaultSeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 1, 1),
    _SleFaultDefaultSeverity_Type()
)
sleFaultDefaultSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultDefaultSeverity.setStatus("current")


class _SleFaultCriteriaSeverity_Type(Integer32):
    """Custom type sleFaultCriteriaSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleFaultCriteriaSeverity_Type.__name__ = "Integer32"
_SleFaultCriteriaSeverity_Object = MibScalar
sleFaultCriteriaSeverity = _SleFaultCriteriaSeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 1, 2),
    _SleFaultCriteriaSeverity_Type()
)
sleFaultCriteriaSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultCriteriaSeverity.setStatus("current")


class _SleFaultNotifiyActivity_Type(Integer32):
    """Custom type sleFaultNotifiyActivity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_SleFaultNotifiyActivity_Type.__name__ = "Integer32"
_SleFaultNotifiyActivity_Object = MibScalar
sleFaultNotifiyActivity = _SleFaultNotifiyActivity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 1, 3),
    _SleFaultNotifiyActivity_Type()
)
sleFaultNotifiyActivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultNotifiyActivity.setStatus("current")
_SleFaultNextSeqNum_Type = Counter32
_SleFaultNextSeqNum_Object = MibScalar
sleFaultNextSeqNum = _SleFaultNextSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 1, 4),
    _SleFaultNextSeqNum_Type()
)
sleFaultNextSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultNextSeqNum.setStatus("current")
_SleFaultMgmtBaseControl_ObjectIdentity = ObjectIdentity
sleFaultMgmtBaseControl = _SleFaultMgmtBaseControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2)
)


class _SleFaultControlRequest_Type(Integer32):
    """Custom type sleFaultControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("setAlarmDefaultSeverity", 1),
          ("setAlarmCriteriaSeverity", 2),
          ("setNotificationActivity", 3))
    )


_SleFaultControlRequest_Type.__name__ = "Integer32"
_SleFaultControlRequest_Object = MibScalar
sleFaultControlRequest = _SleFaultControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 1),
    _SleFaultControlRequest_Type()
)
sleFaultControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultControlRequest.setStatus("current")
_SleFaultControlStatus_Type = SleControlStatusType
_SleFaultControlStatus_Object = MibScalar
sleFaultControlStatus = _SleFaultControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 2),
    _SleFaultControlStatus_Type()
)
sleFaultControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultControlStatus.setStatus("current")
_SleFaultControlTimer_Type = Unsigned32
_SleFaultControlTimer_Object = MibScalar
sleFaultControlTimer = _SleFaultControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 3),
    _SleFaultControlTimer_Type()
)
sleFaultControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultControlTimer.setStatus("current")
_SleFaultControlTimeStamp_Type = TimeTicks
_SleFaultControlTimeStamp_Object = MibScalar
sleFaultControlTimeStamp = _SleFaultControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 4),
    _SleFaultControlTimeStamp_Type()
)
sleFaultControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultControlTimeStamp.setStatus("current")
_SleFaultControlReqResult_Type = SleControlRequestResultType
_SleFaultControlReqResult_Object = MibScalar
sleFaultControlReqResult = _SleFaultControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 5),
    _SleFaultControlReqResult_Type()
)
sleFaultControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultControlReqResult.setStatus("current")


class _SleFaultControlDefaultSeverity_Type(Integer32):
    """Custom type sleFaultControlDefaultSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleFaultControlDefaultSeverity_Type.__name__ = "Integer32"
_SleFaultControlDefaultSeverity_Object = MibScalar
sleFaultControlDefaultSeverity = _SleFaultControlDefaultSeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 6),
    _SleFaultControlDefaultSeverity_Type()
)
sleFaultControlDefaultSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultControlDefaultSeverity.setStatus("current")


class _SleFaultControlCriteriaSeverity_Type(Integer32):
    """Custom type sleFaultControlCriteriaSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleFaultControlCriteriaSeverity_Type.__name__ = "Integer32"
_SleFaultControlCriteriaSeverity_Object = MibScalar
sleFaultControlCriteriaSeverity = _SleFaultControlCriteriaSeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 7),
    _SleFaultControlCriteriaSeverity_Type()
)
sleFaultControlCriteriaSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultControlCriteriaSeverity.setStatus("current")


class _SleFaultControlNotifiyActivity_Type(Integer32):
    """Custom type sleFaultControlNotifiyActivity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("diabled", 0),
          ("enabled", 1))
    )


_SleFaultControlNotifiyActivity_Type.__name__ = "Integer32"
_SleFaultControlNotifiyActivity_Object = MibScalar
sleFaultControlNotifiyActivity = _SleFaultControlNotifiyActivity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 2, 8),
    _SleFaultControlNotifiyActivity_Type()
)
sleFaultControlNotifiyActivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultControlNotifiyActivity.setStatus("current")
_SleFaultMgmtBaseNotification_ObjectIdentity = ObjectIdentity
sleFaultMgmtBaseNotification = _SleFaultMgmtBaseNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 3)
)
_SleAlarmSeverity_ObjectIdentity = ObjectIdentity
sleAlarmSeverity = _SleAlarmSeverity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2)
)
_SleAlarmSeverityTable_Object = MibTable
sleAlarmSeverityTable = _SleAlarmSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 1)
)
if mibBuilder.loadTexts:
    sleAlarmSeverityTable.setStatus("current")
_SleAlarmSeverityEntry_Object = MibTableRow
sleAlarmSeverityEntry = _SleAlarmSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 1, 1)
)
sleAlarmSeverityEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmSeverityIndex"),
)
if mibBuilder.loadTexts:
    sleAlarmSeverityEntry.setStatus("current")
_SleAlarmSeverityIndex_Type = SpecificNum
_SleAlarmSeverityIndex_Object = MibTableColumn
sleAlarmSeverityIndex = _SleAlarmSeverityIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 1, 1, 1),
    _SleAlarmSeverityIndex_Type()
)
sleAlarmSeverityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSeverityIndex.setStatus("current")


class _SleAlarmSeverityValue_Type(Integer32):
    """Custom type sleAlarmSeverityValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleAlarmSeverityValue_Type.__name__ = "Integer32"
_SleAlarmSeverityValue_Object = MibTableColumn
sleAlarmSeverityValue = _SleAlarmSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 1, 1, 2),
    _SleAlarmSeverityValue_Type()
)
sleAlarmSeverityValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSeverityValue.setStatus("current")
_SleAlarmSeverityControl_ObjectIdentity = ObjectIdentity
sleAlarmSeverityControl = _SleAlarmSeverityControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2)
)


class _SleAlarmSeverityControlRequest_Type(Integer32):
    """Custom type sleAlarmSeverityControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("createAlarmSeveriity", 1),
          ("destroyAlarmSeveriity", 2),
          ("setAlarmSeveriity", 3))
    )


_SleAlarmSeverityControlRequest_Type.__name__ = "Integer32"
_SleAlarmSeverityControlRequest_Object = MibScalar
sleAlarmSeverityControlRequest = _SleAlarmSeverityControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 1),
    _SleAlarmSeverityControlRequest_Type()
)
sleAlarmSeverityControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlRequest.setStatus("current")
_SleAlarmSeverityControlStatus_Type = SleControlStatusType
_SleAlarmSeverityControlStatus_Object = MibScalar
sleAlarmSeverityControlStatus = _SleAlarmSeverityControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 2),
    _SleAlarmSeverityControlStatus_Type()
)
sleAlarmSeverityControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlStatus.setStatus("current")
_SleAlarmSeverityControlTimer_Type = Unsigned32
_SleAlarmSeverityControlTimer_Object = MibScalar
sleAlarmSeverityControlTimer = _SleAlarmSeverityControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 3),
    _SleAlarmSeverityControlTimer_Type()
)
sleAlarmSeverityControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlTimer.setStatus("current")
_SleAlarmSeverityControlTimeStamp_Type = TimeTicks
_SleAlarmSeverityControlTimeStamp_Object = MibScalar
sleAlarmSeverityControlTimeStamp = _SleAlarmSeverityControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 4),
    _SleAlarmSeverityControlTimeStamp_Type()
)
sleAlarmSeverityControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlTimeStamp.setStatus("current")
_SleAlarmSeverityControlReqResult_Type = SleControlRequestResultType
_SleAlarmSeverityControlReqResult_Object = MibScalar
sleAlarmSeverityControlReqResult = _SleAlarmSeverityControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 5),
    _SleAlarmSeverityControlReqResult_Type()
)
sleAlarmSeverityControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlReqResult.setStatus("current")
_SleAlarmSeverityControlIndex_Type = SpecificNum
_SleAlarmSeverityControlIndex_Object = MibScalar
sleAlarmSeverityControlIndex = _SleAlarmSeverityControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 6),
    _SleAlarmSeverityControlIndex_Type()
)
sleAlarmSeverityControlIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlIndex.setStatus("current")


class _SleAlarmSeverityControlValue_Type(Integer32):
    """Custom type sleAlarmSeverityControlValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleAlarmSeverityControlValue_Type.__name__ = "Integer32"
_SleAlarmSeverityControlValue_Object = MibScalar
sleAlarmSeverityControlValue = _SleAlarmSeverityControlValue_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 2, 7),
    _SleAlarmSeverityControlValue_Type()
)
sleAlarmSeverityControlValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmSeverityControlValue.setStatus("current")
_SleAlarmSeverityNotification_ObjectIdentity = ObjectIdentity
sleAlarmSeverityNotification = _SleAlarmSeverityNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 3)
)
_SleAlarmReport_ObjectIdentity = ObjectIdentity
sleAlarmReport = _SleAlarmReport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3)
)
_SleAlarmReportTable_Object = MibTable
sleAlarmReportTable = _SleAlarmReportTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1)
)
if mibBuilder.loadTexts:
    sleAlarmReportTable.setStatus("current")
_SleAlarmReportEntry_Object = MibTableRow
sleAlarmReportEntry = _SleAlarmReportEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1)
)
sleAlarmReportEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmSpecificCode"),
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmReportingSourceType"),
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmReportingSource"),
)
if mibBuilder.loadTexts:
    sleAlarmReportEntry.setStatus("current")
_SleAlarmSpecificCode_Type = SpecificNum
_SleAlarmSpecificCode_Object = MibTableColumn
sleAlarmSpecificCode = _SleAlarmSpecificCode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 1),
    _SleAlarmSpecificCode_Type()
)
sleAlarmSpecificCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSpecificCode.setStatus("current")


class _SleAlarmReportingSourceType_Type(Integer32):
    """Custom type sleAlarmReportingSourceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("entPhysicalEntity", 1),
          ("ifIndex", 2),
          ("vccTp", 3),
          ("macAddress", 4),
          ("ipv4", 5),
          ("ipv6", 6),
          ("threshold", 7),
          ("advaSource", 8),
          ("number", 9),
          ("general", 10),
          ("eponSource", 11),
          ("gponSource", 12),
          ("gponSourceTlv", 13))
    )


_SleAlarmReportingSourceType_Type.__name__ = "Integer32"
_SleAlarmReportingSourceType_Object = MibTableColumn
sleAlarmReportingSourceType = _SleAlarmReportingSourceType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 2),
    _SleAlarmReportingSourceType_Type()
)
sleAlarmReportingSourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportingSourceType.setStatus("current")


class _SleAlarmReportingSource_Type(OctetString):
    """Custom type sleAlarmReportingSource based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SleAlarmReportingSource_Type.__name__ = "OctetString"
_SleAlarmReportingSource_Object = MibTableColumn
sleAlarmReportingSource = _SleAlarmReportingSource_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 3),
    _SleAlarmReportingSource_Type()
)
sleAlarmReportingSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportingSource.setStatus("current")


class _SleAlarmSpecificSeverity_Type(Integer32):
    """Custom type sleAlarmSpecificSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5),
          ("cleared", 6))
    )


_SleAlarmSpecificSeverity_Type.__name__ = "Integer32"
_SleAlarmSpecificSeverity_Object = MibTableColumn
sleAlarmSpecificSeverity = _SleAlarmSpecificSeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 4),
    _SleAlarmSpecificSeverity_Type()
)
sleAlarmSpecificSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSpecificSeverity.setStatus("current")
_SleAlarmSpecificProblem_Type = Unsigned32
_SleAlarmSpecificProblem_Object = MibTableColumn
sleAlarmSpecificProblem = _SleAlarmSpecificProblem_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 5),
    _SleAlarmSpecificProblem_Type()
)
sleAlarmSpecificProblem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSpecificProblem.setStatus("current")


class _SleAlarmSpecificProblemText_Type(OctetString):
    """Custom type sleAlarmSpecificProblemText based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SleAlarmSpecificProblemText_Type.__name__ = "OctetString"
_SleAlarmSpecificProblemText_Object = MibTableColumn
sleAlarmSpecificProblemText = _SleAlarmSpecificProblemText_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 6),
    _SleAlarmSpecificProblemText_Type()
)
sleAlarmSpecificProblemText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSpecificProblemText.setStatus("current")
_SleAlarmTimeAndDate_Type = Integer32
_SleAlarmTimeAndDate_Object = MibTableColumn
sleAlarmTimeAndDate = _SleAlarmTimeAndDate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 7),
    _SleAlarmTimeAndDate_Type()
)
sleAlarmTimeAndDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmTimeAndDate.setStatus("current")
_SleAlarmSpecificSeqNum_Type = Counter32
_SleAlarmSpecificSeqNum_Object = MibTableColumn
sleAlarmSpecificSeqNum = _SleAlarmSpecificSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 8),
    _SleAlarmSpecificSeqNum_Type()
)
sleAlarmSpecificSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmSpecificSeqNum.setStatus("current")


class _SleAlarmReportPairType_Type(Integer32):
    """Custom type sleAlarmReportPairType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pair", 0),
          ("mono", 1))
    )


_SleAlarmReportPairType_Type.__name__ = "Integer32"
_SleAlarmReportPairType_Object = MibTableColumn
sleAlarmReportPairType = _SleAlarmReportPairType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 1, 1, 9),
    _SleAlarmReportPairType_Type()
)
sleAlarmReportPairType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportPairType.setStatus("current")
_SleAlarmReportNotification_ObjectIdentity = ObjectIdentity
sleAlarmReportNotification = _SleAlarmReportNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 2)
)
_SleAlarmReportControl_ObjectIdentity = ObjectIdentity
sleAlarmReportControl = _SleAlarmReportControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3)
)


class _SleAlarmReportControlRequest_Type(Integer32):
    """Custom type sleAlarmReportControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clearAlarmReport", 1),
          ("delAlarmReport", 2))
    )


_SleAlarmReportControlRequest_Type.__name__ = "Integer32"
_SleAlarmReportControlRequest_Object = MibScalar
sleAlarmReportControlRequest = _SleAlarmReportControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 1),
    _SleAlarmReportControlRequest_Type()
)
sleAlarmReportControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmReportControlRequest.setStatus("current")
_SleAlarmReportControlStatus_Type = SleControlStatusType
_SleAlarmReportControlStatus_Object = MibScalar
sleAlarmReportControlStatus = _SleAlarmReportControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 2),
    _SleAlarmReportControlStatus_Type()
)
sleAlarmReportControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportControlStatus.setStatus("current")
_SleAlarmReportControlTimer_Type = Gauge32
_SleAlarmReportControlTimer_Object = MibScalar
sleAlarmReportControlTimer = _SleAlarmReportControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 3),
    _SleAlarmReportControlTimer_Type()
)
sleAlarmReportControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmReportControlTimer.setStatus("current")
_SleAlarmReportControlTimeStamp_Type = TimeTicks
_SleAlarmReportControlTimeStamp_Object = MibScalar
sleAlarmReportControlTimeStamp = _SleAlarmReportControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 4),
    _SleAlarmReportControlTimeStamp_Type()
)
sleAlarmReportControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportControlTimeStamp.setStatus("current")
_SleAlarmReportControlReqResult_Type = SleControlRequestResultType
_SleAlarmReportControlReqResult_Object = MibScalar
sleAlarmReportControlReqResult = _SleAlarmReportControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 5),
    _SleAlarmReportControlReqResult_Type()
)
sleAlarmReportControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmReportControlReqResult.setStatus("current")
_SleAlarmReportControlSpecificCode_Type = SpecificNum
_SleAlarmReportControlSpecificCode_Object = MibScalar
sleAlarmReportControlSpecificCode = _SleAlarmReportControlSpecificCode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 6),
    _SleAlarmReportControlSpecificCode_Type()
)
sleAlarmReportControlSpecificCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmReportControlSpecificCode.setStatus("current")


class _SleAlarmReportControlSourceType_Type(Integer32):
    """Custom type sleAlarmReportControlSourceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("entPhysicalEntity", 1),
          ("ifIndex", 2),
          ("vccTp", 3),
          ("macAddress", 4),
          ("ipv4", 5),
          ("ipv6", 6),
          ("threshold", 7),
          ("advaSource", 8),
          ("number", 9),
          ("general", 10),
          ("eponSource", 11),
          ("gponSource", 12))
    )


_SleAlarmReportControlSourceType_Type.__name__ = "Integer32"
_SleAlarmReportControlSourceType_Object = MibScalar
sleAlarmReportControlSourceType = _SleAlarmReportControlSourceType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 7),
    _SleAlarmReportControlSourceType_Type()
)
sleAlarmReportControlSourceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmReportControlSourceType.setStatus("current")


class _SleAlarmReportControlSource_Type(OctetString):
    """Custom type sleAlarmReportControlSource based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SleAlarmReportControlSource_Type.__name__ = "OctetString"
_SleAlarmReportControlSource_Object = MibScalar
sleAlarmReportControlSource = _SleAlarmReportControlSource_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 3, 8),
    _SleAlarmReportControlSource_Type()
)
sleAlarmReportControlSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmReportControlSource.setStatus("current")
_SleAlarmReportNotifications_ObjectIdentity = ObjectIdentity
sleAlarmReportNotifications = _SleAlarmReportNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 4)
)
_SleAlarmHistory_ObjectIdentity = ObjectIdentity
sleAlarmHistory = _SleAlarmHistory_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4)
)
_SleAlarmHistoryTable_Object = MibTable
sleAlarmHistoryTable = _SleAlarmHistoryTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1)
)
if mibBuilder.loadTexts:
    sleAlarmHistoryTable.setStatus("current")
_SleAlarmHistoryEntry_Object = MibTableRow
sleAlarmHistoryEntry = _SleAlarmHistoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1)
)
sleAlarmHistoryEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmHistoryIndex"),
)
if mibBuilder.loadTexts:
    sleAlarmHistoryEntry.setStatus("current")


class _SleAlarmHistoryIndex_Type(Integer32):
    """Custom type sleAlarmHistoryIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleAlarmHistoryIndex_Type.__name__ = "Integer32"
_SleAlarmHistoryIndex_Object = MibTableColumn
sleAlarmHistoryIndex = _SleAlarmHistoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 1),
    _SleAlarmHistoryIndex_Type()
)
sleAlarmHistoryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryIndex.setStatus("current")
_SleAlarmHistorySpecific_Type = SpecificNum
_SleAlarmHistorySpecific_Object = MibTableColumn
sleAlarmHistorySpecific = _SleAlarmHistorySpecific_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 2),
    _SleAlarmHistorySpecific_Type()
)
sleAlarmHistorySpecific.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistorySpecific.setStatus("current")


class _SleAlarmHistorySeverity_Type(Integer32):
    """Custom type sleAlarmHistorySeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4),
          ("intermediate", 5))
    )


_SleAlarmHistorySeverity_Type.__name__ = "Integer32"
_SleAlarmHistorySeverity_Object = MibTableColumn
sleAlarmHistorySeverity = _SleAlarmHistorySeverity_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 3),
    _SleAlarmHistorySeverity_Type()
)
sleAlarmHistorySeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistorySeverity.setStatus("current")


class _SleAlarmHistoryText_Type(OctetString):
    """Custom type sleAlarmHistoryText based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SleAlarmHistoryText_Type.__name__ = "OctetString"
_SleAlarmHistoryText_Object = MibTableColumn
sleAlarmHistoryText = _SleAlarmHistoryText_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 4),
    _SleAlarmHistoryText_Type()
)
sleAlarmHistoryText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryText.setStatus("current")
_SleAlarmHistoryTime_Type = Integer32
_SleAlarmHistoryTime_Object = MibTableColumn
sleAlarmHistoryTime = _SleAlarmHistoryTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 5),
    _SleAlarmHistoryTime_Type()
)
sleAlarmHistoryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryTime.setStatus("current")
_SleAlarmHistorySeqNum_Type = Counter32
_SleAlarmHistorySeqNum_Object = MibTableColumn
sleAlarmHistorySeqNum = _SleAlarmHistorySeqNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 6),
    _SleAlarmHistorySeqNum_Type()
)
sleAlarmHistorySeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistorySeqNum.setStatus("current")


class _SleAlarmHistoryPairType_Type(Integer32):
    """Custom type sleAlarmHistoryPairType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pair", 0),
          ("mono", 1))
    )


_SleAlarmHistoryPairType_Type.__name__ = "Integer32"
_SleAlarmHistoryPairType_Object = MibTableColumn
sleAlarmHistoryPairType = _SleAlarmHistoryPairType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 1, 1, 7),
    _SleAlarmHistoryPairType_Type()
)
sleAlarmHistoryPairType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryPairType.setStatus("current")
_SleAlarmHistoryControl_ObjectIdentity = ObjectIdentity
sleAlarmHistoryControl = _SleAlarmHistoryControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2)
)


class _SleAlarmHistoryControlRequest_Type(Integer32):
    """Custom type sleAlarmHistoryControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clearAlarmHistory", 1)
    )


_SleAlarmHistoryControlRequest_Type.__name__ = "Integer32"
_SleAlarmHistoryControlRequest_Object = MibScalar
sleAlarmHistoryControlRequest = _SleAlarmHistoryControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2, 1),
    _SleAlarmHistoryControlRequest_Type()
)
sleAlarmHistoryControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmHistoryControlRequest.setStatus("current")
_SleAlarmHistoryControlStatus_Type = SleControlStatusType
_SleAlarmHistoryControlStatus_Object = MibScalar
sleAlarmHistoryControlStatus = _SleAlarmHistoryControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2, 2),
    _SleAlarmHistoryControlStatus_Type()
)
sleAlarmHistoryControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryControlStatus.setStatus("current")
_SleAlarmHistoryControlTimer_Type = Unsigned32
_SleAlarmHistoryControlTimer_Object = MibScalar
sleAlarmHistoryControlTimer = _SleAlarmHistoryControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2, 3),
    _SleAlarmHistoryControlTimer_Type()
)
sleAlarmHistoryControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmHistoryControlTimer.setStatus("current")
_SleAlarmHistoryControlTimeStamp_Type = TimeTicks
_SleAlarmHistoryControlTimeStamp_Object = MibScalar
sleAlarmHistoryControlTimeStamp = _SleAlarmHistoryControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2, 4),
    _SleAlarmHistoryControlTimeStamp_Type()
)
sleAlarmHistoryControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryControlTimeStamp.setStatus("current")
_SleAlarmHistoryControlReqResult_Type = SleControlRequestResultType
_SleAlarmHistoryControlReqResult_Object = MibScalar
sleAlarmHistoryControlReqResult = _SleAlarmHistoryControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 2, 5),
    _SleAlarmHistoryControlReqResult_Type()
)
sleAlarmHistoryControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmHistoryControlReqResult.setStatus("current")
_SleAlarmHistoryNotification_ObjectIdentity = ObjectIdentity
sleAlarmHistoryNotification = _SleAlarmHistoryNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 3)
)
_SleEfmOam_ObjectIdentity = ObjectIdentity
sleEfmOam = _SleEfmOam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5)
)
_SleEfmOamTable_Object = MibTable
sleEfmOamTable = _SleEfmOamTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1)
)
if mibBuilder.loadTexts:
    sleEfmOamTable.setStatus("current")
_SleEfmOamEntry_Object = MibTableRow
sleEfmOamEntry = _SleEfmOamEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1)
)
sleEfmOamEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
)
if mibBuilder.loadTexts:
    sleEfmOamEntry.setStatus("current")


class _SleOamPortIndex_Type(Integer32):
    """Custom type sleOamPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleOamPortIndex_Type.__name__ = "Integer32"
_SleOamPortIndex_Object = MibTableColumn
sleOamPortIndex = _SleOamPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 1),
    _SleOamPortIndex_Type()
)
sleOamPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamPortIndex.setStatus("current")


class _SleOamMuxAction_Type(Integer32):
    """Custom type sleOamMuxAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fwd", 1),
          ("discard", 2))
    )


_SleOamMuxAction_Type.__name__ = "Integer32"
_SleOamMuxAction_Object = MibTableColumn
sleOamMuxAction = _SleOamMuxAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 2),
    _SleOamMuxAction_Type()
)
sleOamMuxAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamMuxAction.setStatus("current")


class _SleOamParAction_Type(Integer32):
    """Custom type sleOamParAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fwd", 1),
          ("lb", 2),
          ("discard", 3))
    )


_SleOamParAction_Type.__name__ = "Integer32"
_SleOamParAction_Object = MibTableColumn
sleOamParAction = _SleOamParAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 3),
    _SleOamParAction_Type()
)
sleOamParAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamParAction.setStatus("current")


class _SleOamAdminState_Type(Integer32):
    """Custom type sleOamAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleOamAdminState_Type.__name__ = "Integer32"
_SleOamAdminState_Object = MibTableColumn
sleOamAdminState = _SleOamAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 4),
    _SleOamAdminState_Type()
)
sleOamAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamAdminState.setStatus("current")


class _SleOamMode_Type(Integer32):
    """Custom type sleOamMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("passive", 0),
          ("active", 1))
    )


_SleOamMode_Type.__name__ = "Integer32"
_SleOamMode_Object = MibTableColumn
sleOamMode = _SleOamMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 5),
    _SleOamMode_Type()
)
sleOamMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamMode.setStatus("current")


class _SleOamUnidirectionMode_Type(Integer32):
    """Custom type sleOamUnidirectionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-2,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notAvaliable", -2),
          ("disable", 0),
          ("enable", 1))
    )


_SleOamUnidirectionMode_Type.__name__ = "Integer32"
_SleOamUnidirectionMode_Object = MibTableColumn
sleOamUnidirectionMode = _SleOamUnidirectionMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 6),
    _SleOamUnidirectionMode_Type()
)
sleOamUnidirectionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamUnidirectionMode.setStatus("current")


class _SleOamFunctionsSupported_Type(Bits):
    """Custom type sleOamFunctionsSupported based on Bits"""
    namedValues = NamedValues(
        *(("unidirectionalSupport", 0),
          ("loopbackSupport", 1),
          ("eventSupport", 2),
          ("variableSupport", 3))
    )

_SleOamFunctionsSupported_Type.__name__ = "Bits"
_SleOamFunctionsSupported_Object = MibTableColumn
sleOamFunctionsSupported = _SleOamFunctionsSupported_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 7),
    _SleOamFunctionsSupported_Type()
)
sleOamFunctionsSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamFunctionsSupported.setStatus("current")


class _SleOamPeerStatus_Type(Integer32):
    """Custom type sleOamPeerStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_SleOamPeerStatus_Type.__name__ = "Integer32"
_SleOamPeerStatus_Object = MibTableColumn
sleOamPeerStatus = _SleOamPeerStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 8),
    _SleOamPeerStatus_Type()
)
sleOamPeerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamPeerStatus.setStatus("current")
_SleOamPeerMacAddress_Type = MacAddress
_SleOamPeerMacAddress_Object = MibTableColumn
sleOamPeerMacAddress = _SleOamPeerMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 9),
    _SleOamPeerMacAddress_Type()
)
sleOamPeerMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamPeerMacAddress.setStatus("current")


class _SleOamPeerMode_Type(Integer32):
    """Custom type sleOamPeerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("passive", 0),
          ("active", 1),
          ("unknown", 2))
    )


_SleOamPeerMode_Type.__name__ = "Integer32"
_SleOamPeerMode_Object = MibTableColumn
sleOamPeerMode = _SleOamPeerMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 10),
    _SleOamPeerMode_Type()
)
sleOamPeerMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamPeerMode.setStatus("current")


class _SleOamPeerFunctionsSupported_Type(Bits):
    """Custom type sleOamPeerFunctionsSupported based on Bits"""
    namedValues = NamedValues(
        *(("unidirectionalSupport", 0),
          ("loopbackSupport", 1),
          ("eventSupport", 2),
          ("variableSupport", 3))
    )

_SleOamPeerFunctionsSupported_Type.__name__ = "Bits"
_SleOamPeerFunctionsSupported_Object = MibTableColumn
sleOamPeerFunctionsSupported = _SleOamPeerFunctionsSupported_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 11),
    _SleOamPeerFunctionsSupported_Type()
)
sleOamPeerFunctionsSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamPeerFunctionsSupported.setStatus("current")


class _SleOamRemLoopback_Type(Integer32):
    """Custom type sleOamRemLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleOamRemLoopback_Type.__name__ = "Integer32"
_SleOamRemLoopback_Object = MibTableColumn
sleOamRemLoopback = _SleOamRemLoopback_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 12),
    _SleOamRemLoopback_Type()
)
sleOamRemLoopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamRemLoopback.setStatus("current")


class _SleOamRemLoopbackCnt_Type(Integer32):
    """Custom type sleOamRemLoopbackCnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_SleOamRemLoopbackCnt_Type.__name__ = "Integer32"
_SleOamRemLoopbackCnt_Object = MibTableColumn
sleOamRemLoopbackCnt = _SleOamRemLoopbackCnt_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 13),
    _SleOamRemLoopbackCnt_Type()
)
sleOamRemLoopbackCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamRemLoopbackCnt.setStatus("current")


class _SleOamLm_Type(Integer32):
    """Custom type sleOamLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleOamLm_Type.__name__ = "Integer32"
_SleOamLm_Object = MibTableColumn
sleOamLm = _SleOamLm_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 14),
    _SleOamLm_Type()
)
sleOamLm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLm.setStatus("current")


class _SleOamLmAction_Type(Integer32):
    """Custom type sleOamLmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("syslog", 0),
          ("snmpTrap", 1))
    )


_SleOamLmAction_Type.__name__ = "Integer32"
_SleOamLmAction_Object = MibTableColumn
sleOamLmAction = _SleOamLmAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 15),
    _SleOamLmAction_Type()
)
sleOamLmAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmAction.setStatus("current")


class _SleOamLmFrameWindow_Type(Integer32):
    """Custom type sleOamLmFrameWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_SleOamLmFrameWindow_Type.__name__ = "Integer32"
_SleOamLmFrameWindow_Object = MibTableColumn
sleOamLmFrameWindow = _SleOamLmFrameWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 16),
    _SleOamLmFrameWindow_Type()
)
sleOamLmFrameWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameWindow.setStatus("current")
if mibBuilder.loadTexts:
    sleOamLmFrameWindow.setUnits("100 ms")


class _SleOamLmFrameThresh_Type(Integer32):
    """Custom type sleOamLmFrameThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamLmFrameThresh_Type.__name__ = "Integer32"
_SleOamLmFrameThresh_Object = MibTableColumn
sleOamLmFrameThresh = _SleOamLmFrameThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 17),
    _SleOamLmFrameThresh_Type()
)
sleOamLmFrameThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameThresh.setStatus("current")
_SleOamLmFrameTotal_Type = Counter64
_SleOamLmFrameTotal_Object = MibTableColumn
sleOamLmFrameTotal = _SleOamLmFrameTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 18),
    _SleOamLmFrameTotal_Type()
)
sleOamLmFrameTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameTotal.setStatus("current")


class _SleOamLmFramePeriodWindow_Type(Integer32):
    """Custom type sleOamLmFramePeriodWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 200000000),
    )


_SleOamLmFramePeriodWindow_Type.__name__ = "Integer32"
_SleOamLmFramePeriodWindow_Object = MibTableColumn
sleOamLmFramePeriodWindow = _SleOamLmFramePeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 19),
    _SleOamLmFramePeriodWindow_Type()
)
sleOamLmFramePeriodWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFramePeriodWindow.setStatus("current")


class _SleOamLmFramePeriodThresh_Type(Integer32):
    """Custom type sleOamLmFramePeriodThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamLmFramePeriodThresh_Type.__name__ = "Integer32"
_SleOamLmFramePeriodThresh_Object = MibTableColumn
sleOamLmFramePeriodThresh = _SleOamLmFramePeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 20),
    _SleOamLmFramePeriodThresh_Type()
)
sleOamLmFramePeriodThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFramePeriodThresh.setStatus("current")
_SleOamLmFramePeriodTotal_Type = Counter64
_SleOamLmFramePeriodTotal_Object = MibTableColumn
sleOamLmFramePeriodTotal = _SleOamLmFramePeriodTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 21),
    _SleOamLmFramePeriodTotal_Type()
)
sleOamLmFramePeriodTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFramePeriodTotal.setStatus("current")


class _SleOamLmFrameSecondSummaryWindow_Type(Integer32):
    """Custom type sleOamLmFrameSecondSummaryWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 900),
    )


_SleOamLmFrameSecondSummaryWindow_Type.__name__ = "Integer32"
_SleOamLmFrameSecondSummaryWindow_Object = MibTableColumn
sleOamLmFrameSecondSummaryWindow = _SleOamLmFrameSecondSummaryWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 22),
    _SleOamLmFrameSecondSummaryWindow_Type()
)
sleOamLmFrameSecondSummaryWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameSecondSummaryWindow.setStatus("current")
if mibBuilder.loadTexts:
    sleOamLmFrameSecondSummaryWindow.setUnits("seconds")


class _SleOamLmFrameSecondSummaryThresh_Type(Integer32):
    """Custom type sleOamLmFrameSecondSummaryThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
    )


_SleOamLmFrameSecondSummaryThresh_Type.__name__ = "Integer32"
_SleOamLmFrameSecondSummaryThresh_Object = MibTableColumn
sleOamLmFrameSecondSummaryThresh = _SleOamLmFrameSecondSummaryThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 23),
    _SleOamLmFrameSecondSummaryThresh_Type()
)
sleOamLmFrameSecondSummaryThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameSecondSummaryThresh.setStatus("current")
_SleOamLmFrameSecondSummaryTotal_Type = Counter64
_SleOamLmFrameSecondSummaryTotal_Object = MibTableColumn
sleOamLmFrameSecondSummaryTotal = _SleOamLmFrameSecondSummaryTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 24),
    _SleOamLmFrameSecondSummaryTotal_Type()
)
sleOamLmFrameSecondSummaryTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmFrameSecondSummaryTotal.setStatus("current")


class _SleOamLmSymbolPeriodWindow_Type(Integer32):
    """Custom type sleOamLmSymbolPeriodWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_SleOamLmSymbolPeriodWindow_Type.__name__ = "Integer32"
_SleOamLmSymbolPeriodWindow_Object = MibTableColumn
sleOamLmSymbolPeriodWindow = _SleOamLmSymbolPeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 25),
    _SleOamLmSymbolPeriodWindow_Type()
)
sleOamLmSymbolPeriodWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmSymbolPeriodWindow.setStatus("current")


class _SleOamLmSymbolPeriodThresh_Type(Integer32):
    """Custom type sleOamLmSymbolPeriodThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamLmSymbolPeriodThresh_Type.__name__ = "Integer32"
_SleOamLmSymbolPeriodThresh_Object = MibTableColumn
sleOamLmSymbolPeriodThresh = _SleOamLmSymbolPeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 26),
    _SleOamLmSymbolPeriodThresh_Type()
)
sleOamLmSymbolPeriodThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmSymbolPeriodThresh.setStatus("current")
_SleOamLmSymbolPeriodTotal_Type = Counter64
_SleOamLmSymbolPeriodTotal_Object = MibTableColumn
sleOamLmSymbolPeriodTotal = _SleOamLmSymbolPeriodTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 27),
    _SleOamLmSymbolPeriodTotal_Type()
)
sleOamLmSymbolPeriodTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmSymbolPeriodTotal.setStatus("current")
_SleOamLmRemSeqNum_Type = Integer32
_SleOamLmRemSeqNum_Object = MibTableColumn
sleOamLmRemSeqNum = _SleOamLmRemSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 28),
    _SleOamLmRemSeqNum_Type()
)
sleOamLmRemSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSeqNum.setStatus("current")


class _SleOamLmRemFrameLength_Type(Integer32):
    """Custom type sleOamLmRemFrameLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleOamLmRemFrameLength_Type.__name__ = "Integer32"
_SleOamLmRemFrameLength_Object = MibTableColumn
sleOamLmRemFrameLength = _SleOamLmRemFrameLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 29),
    _SleOamLmRemFrameLength_Type()
)
sleOamLmRemFrameLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameLength.setStatus("current")
_SleOamLmRemFrameTimeStamp_Type = TimeTicks
_SleOamLmRemFrameTimeStamp_Object = MibTableColumn
sleOamLmRemFrameTimeStamp = _SleOamLmRemFrameTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 30),
    _SleOamLmRemFrameTimeStamp_Type()
)
sleOamLmRemFrameTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameTimeStamp.setStatus("current")
_SleOamLmRemFrameWindow_Type = Integer32
_SleOamLmRemFrameWindow_Object = MibTableColumn
sleOamLmRemFrameWindow = _SleOamLmRemFrameWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 31),
    _SleOamLmRemFrameWindow_Type()
)
sleOamLmRemFrameWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameWindow.setStatus("current")
_SleOamLmRemFrameThresh_Type = Integer32
_SleOamLmRemFrameThresh_Object = MibTableColumn
sleOamLmRemFrameThresh = _SleOamLmRemFrameThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 32),
    _SleOamLmRemFrameThresh_Type()
)
sleOamLmRemFrameThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameThresh.setStatus("current")
_SleOamLmRemFrameErrors_Type = Integer32
_SleOamLmRemFrameErrors_Object = MibTableColumn
sleOamLmRemFrameErrors = _SleOamLmRemFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 33),
    _SleOamLmRemFrameErrors_Type()
)
sleOamLmRemFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameErrors.setStatus("current")
_SleOamLmRemFrameErrorRunTotal_Type = Counter64
_SleOamLmRemFrameErrorRunTotal_Object = MibTableColumn
sleOamLmRemFrameErrorRunTotal = _SleOamLmRemFrameErrorRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 34),
    _SleOamLmRemFrameErrorRunTotal_Type()
)
sleOamLmRemFrameErrorRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameErrorRunTotal.setStatus("current")
_SleOamLmRemFrameEventRunTotal_Type = Integer32
_SleOamLmRemFrameEventRunTotal_Object = MibTableColumn
sleOamLmRemFrameEventRunTotal = _SleOamLmRemFrameEventRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 35),
    _SleOamLmRemFrameEventRunTotal_Type()
)
sleOamLmRemFrameEventRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameEventRunTotal.setStatus("current")


class _SleOamLmRemFramePeriodLength_Type(Integer32):
    """Custom type sleOamLmRemFramePeriodLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleOamLmRemFramePeriodLength_Type.__name__ = "Integer32"
_SleOamLmRemFramePeriodLength_Object = MibTableColumn
sleOamLmRemFramePeriodLength = _SleOamLmRemFramePeriodLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 36),
    _SleOamLmRemFramePeriodLength_Type()
)
sleOamLmRemFramePeriodLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodLength.setStatus("current")
_SleOamLmRemFramePeriodTimeStamp_Type = TimeTicks
_SleOamLmRemFramePeriodTimeStamp_Object = MibTableColumn
sleOamLmRemFramePeriodTimeStamp = _SleOamLmRemFramePeriodTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 37),
    _SleOamLmRemFramePeriodTimeStamp_Type()
)
sleOamLmRemFramePeriodTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodTimeStamp.setStatus("current")
_SleOamLmRemFramePeriodWindow_Type = Integer32
_SleOamLmRemFramePeriodWindow_Object = MibTableColumn
sleOamLmRemFramePeriodWindow = _SleOamLmRemFramePeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 38),
    _SleOamLmRemFramePeriodWindow_Type()
)
sleOamLmRemFramePeriodWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodWindow.setStatus("current")
_SleOamLmRemFramePeriodThresh_Type = Integer32
_SleOamLmRemFramePeriodThresh_Object = MibTableColumn
sleOamLmRemFramePeriodThresh = _SleOamLmRemFramePeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 39),
    _SleOamLmRemFramePeriodThresh_Type()
)
sleOamLmRemFramePeriodThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodThresh.setStatus("current")
_SleOamLmRemFramePeriodErrors_Type = Integer32
_SleOamLmRemFramePeriodErrors_Object = MibTableColumn
sleOamLmRemFramePeriodErrors = _SleOamLmRemFramePeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 40),
    _SleOamLmRemFramePeriodErrors_Type()
)
sleOamLmRemFramePeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodErrors.setStatus("current")
_SleOamLmRemFramePeriodErrorRunTotal_Type = Counter64
_SleOamLmRemFramePeriodErrorRunTotal_Object = MibTableColumn
sleOamLmRemFramePeriodErrorRunTotal = _SleOamLmRemFramePeriodErrorRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 41),
    _SleOamLmRemFramePeriodErrorRunTotal_Type()
)
sleOamLmRemFramePeriodErrorRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodErrorRunTotal.setStatus("current")
_SleOamLmRemFramePeriodEventRunTotal_Type = Integer32
_SleOamLmRemFramePeriodEventRunTotal_Object = MibTableColumn
sleOamLmRemFramePeriodEventRunTotal = _SleOamLmRemFramePeriodEventRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 42),
    _SleOamLmRemFramePeriodEventRunTotal_Type()
)
sleOamLmRemFramePeriodEventRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFramePeriodEventRunTotal.setStatus("current")


class _SleOamLmRemFrameSecondSummaryLength_Type(Integer32):
    """Custom type sleOamLmRemFrameSecondSummaryLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleOamLmRemFrameSecondSummaryLength_Type.__name__ = "Integer32"
_SleOamLmRemFrameSecondSummaryLength_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryLength = _SleOamLmRemFrameSecondSummaryLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 43),
    _SleOamLmRemFrameSecondSummaryLength_Type()
)
sleOamLmRemFrameSecondSummaryLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryLength.setStatus("current")
_SleOamLmRemFrameSecondSummaryTimeStamp_Type = TimeTicks
_SleOamLmRemFrameSecondSummaryTimeStamp_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryTimeStamp = _SleOamLmRemFrameSecondSummaryTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 44),
    _SleOamLmRemFrameSecondSummaryTimeStamp_Type()
)
sleOamLmRemFrameSecondSummaryTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryTimeStamp.setStatus("current")
_SleOamLmRemFrameSecondSummaryWindow_Type = Integer32
_SleOamLmRemFrameSecondSummaryWindow_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryWindow = _SleOamLmRemFrameSecondSummaryWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 45),
    _SleOamLmRemFrameSecondSummaryWindow_Type()
)
sleOamLmRemFrameSecondSummaryWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryWindow.setStatus("current")
_SleOamLmRemFrameSecondSummaryThresh_Type = Integer32
_SleOamLmRemFrameSecondSummaryThresh_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryThresh = _SleOamLmRemFrameSecondSummaryThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 46),
    _SleOamLmRemFrameSecondSummaryThresh_Type()
)
sleOamLmRemFrameSecondSummaryThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryThresh.setStatus("current")
_SleOamLmRemFrameSecondSummaryErrors_Type = Integer32
_SleOamLmRemFrameSecondSummaryErrors_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryErrors = _SleOamLmRemFrameSecondSummaryErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 47),
    _SleOamLmRemFrameSecondSummaryErrors_Type()
)
sleOamLmRemFrameSecondSummaryErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryErrors.setStatus("current")
_SleOamLmRemFrameSecondSummaryErrorRunTotal_Type = Integer32
_SleOamLmRemFrameSecondSummaryErrorRunTotal_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryErrorRunTotal = _SleOamLmRemFrameSecondSummaryErrorRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 48),
    _SleOamLmRemFrameSecondSummaryErrorRunTotal_Type()
)
sleOamLmRemFrameSecondSummaryErrorRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryErrorRunTotal.setStatus("current")
_SleOamLmRemFrameSecondSummaryEventRunTotal_Type = Integer32
_SleOamLmRemFrameSecondSummaryEventRunTotal_Object = MibTableColumn
sleOamLmRemFrameSecondSummaryEventRunTotal = _SleOamLmRemFrameSecondSummaryEventRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 49),
    _SleOamLmRemFrameSecondSummaryEventRunTotal_Type()
)
sleOamLmRemFrameSecondSummaryEventRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemFrameSecondSummaryEventRunTotal.setStatus("current")
_SleOamLmRemSymbolPeriodLength_Type = Integer32
_SleOamLmRemSymbolPeriodLength_Object = MibTableColumn
sleOamLmRemSymbolPeriodLength = _SleOamLmRemSymbolPeriodLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 50),
    _SleOamLmRemSymbolPeriodLength_Type()
)
sleOamLmRemSymbolPeriodLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodLength.setStatus("current")
_SleOamLmRemSymbolPeriodTimeStamp_Type = TimeTicks
_SleOamLmRemSymbolPeriodTimeStamp_Object = MibTableColumn
sleOamLmRemSymbolPeriodTimeStamp = _SleOamLmRemSymbolPeriodTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 51),
    _SleOamLmRemSymbolPeriodTimeStamp_Type()
)
sleOamLmRemSymbolPeriodTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodTimeStamp.setStatus("current")
_SleOamLmRemSymbolPeriodWindow_Type = Counter64
_SleOamLmRemSymbolPeriodWindow_Object = MibTableColumn
sleOamLmRemSymbolPeriodWindow = _SleOamLmRemSymbolPeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 52),
    _SleOamLmRemSymbolPeriodWindow_Type()
)
sleOamLmRemSymbolPeriodWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodWindow.setStatus("current")
_SleOamLmRemSymbolPeriodThresh_Type = Counter64
_SleOamLmRemSymbolPeriodThresh_Object = MibTableColumn
sleOamLmRemSymbolPeriodThresh = _SleOamLmRemSymbolPeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 53),
    _SleOamLmRemSymbolPeriodThresh_Type()
)
sleOamLmRemSymbolPeriodThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodThresh.setStatus("current")
_SleOamLmRemSymbolPeriodErrors_Type = Counter64
_SleOamLmRemSymbolPeriodErrors_Object = MibTableColumn
sleOamLmRemSymbolPeriodErrors = _SleOamLmRemSymbolPeriodErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 54),
    _SleOamLmRemSymbolPeriodErrors_Type()
)
sleOamLmRemSymbolPeriodErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodErrors.setStatus("current")
_SleOamLmRemSymbolPeriodErrorRunTotal_Type = Counter64
_SleOamLmRemSymbolPeriodErrorRunTotal_Object = MibTableColumn
sleOamLmRemSymbolPeriodErrorRunTotal = _SleOamLmRemSymbolPeriodErrorRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 55),
    _SleOamLmRemSymbolPeriodErrorRunTotal_Type()
)
sleOamLmRemSymbolPeriodErrorRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodErrorRunTotal.setStatus("current")
_SleOamLmRemSymbolPeriodEventRunTotal_Type = Counter64
_SleOamLmRemSymbolPeriodEventRunTotal_Object = MibTableColumn
sleOamLmRemSymbolPeriodEventRunTotal = _SleOamLmRemSymbolPeriodEventRunTotal_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 1, 1, 56),
    _SleOamLmRemSymbolPeriodEventRunTotal_Type()
)
sleOamLmRemSymbolPeriodEventRunTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamLmRemSymbolPeriodEventRunTotal.setStatus("current")
_SleEfmOamControl_ObjectIdentity = ObjectIdentity
sleEfmOamControl = _SleEfmOamControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2)
)


class _SleOamControlRequest_Type(Integer32):
    """Custom type sleOamControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("setEfmOamPortProfile", 1),
          ("setEfmOamPortRemLoopback", 2),
          ("setEfmOamPortLinkMonitor", 3))
    )


_SleOamControlRequest_Type.__name__ = "Integer32"
_SleOamControlRequest_Object = MibScalar
sleOamControlRequest = _SleOamControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 1),
    _SleOamControlRequest_Type()
)
sleOamControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlRequest.setStatus("current")
_SleOamControlStatus_Type = SleControlStatusType
_SleOamControlStatus_Object = MibScalar
sleOamControlStatus = _SleOamControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 2),
    _SleOamControlStatus_Type()
)
sleOamControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamControlStatus.setStatus("current")
_SleOamControlTimer_Type = Gauge32
_SleOamControlTimer_Object = MibScalar
sleOamControlTimer = _SleOamControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 3),
    _SleOamControlTimer_Type()
)
sleOamControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlTimer.setStatus("current")
_SleOamControlTimeStamp_Type = TimeStamp
_SleOamControlTimeStamp_Object = MibScalar
sleOamControlTimeStamp = _SleOamControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 4),
    _SleOamControlTimeStamp_Type()
)
sleOamControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamControlTimeStamp.setStatus("current")
_SleOamControlReqResult_Type = SleControlRequestResultType
_SleOamControlReqResult_Object = MibScalar
sleOamControlReqResult = _SleOamControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 5),
    _SleOamControlReqResult_Type()
)
sleOamControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleOamControlReqResult.setStatus("current")
_SleOamControlIndex_Type = Integer32
_SleOamControlIndex_Object = MibScalar
sleOamControlIndex = _SleOamControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 6),
    _SleOamControlIndex_Type()
)
sleOamControlIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlIndex.setStatus("current")


class _SleOamControlPortAdminState_Type(Integer32):
    """Custom type sleOamControlPortAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleOamControlPortAdminState_Type.__name__ = "Integer32"
_SleOamControlPortAdminState_Object = MibScalar
sleOamControlPortAdminState = _SleOamControlPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 7),
    _SleOamControlPortAdminState_Type()
)
sleOamControlPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlPortAdminState.setStatus("current")


class _SleOamControlPortMode_Type(Integer32):
    """Custom type sleOamControlPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("passive", 0),
          ("active", 1))
    )


_SleOamControlPortMode_Type.__name__ = "Integer32"
_SleOamControlPortMode_Object = MibScalar
sleOamControlPortMode = _SleOamControlPortMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 8),
    _SleOamControlPortMode_Type()
)
sleOamControlPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlPortMode.setStatus("current")


class _SleOamControlPortUnidirectionMode_Type(Integer32):
    """Custom type sleOamControlPortUnidirectionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-2,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notAvaliable", -2),
          ("disable", 0),
          ("enable", 1))
    )


_SleOamControlPortUnidirectionMode_Type.__name__ = "Integer32"
_SleOamControlPortUnidirectionMode_Object = MibScalar
sleOamControlPortUnidirectionMode = _SleOamControlPortUnidirectionMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 9),
    _SleOamControlPortUnidirectionMode_Type()
)
sleOamControlPortUnidirectionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlPortUnidirectionMode.setStatus("current")


class _SleOamControlPortRemLoopback_Type(Integer32):
    """Custom type sleOamControlPortRemLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("start", 2))
    )


_SleOamControlPortRemLoopback_Type.__name__ = "Integer32"
_SleOamControlPortRemLoopback_Object = MibScalar
sleOamControlPortRemLoopback = _SleOamControlPortRemLoopback_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 10),
    _SleOamControlPortRemLoopback_Type()
)
sleOamControlPortRemLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlPortRemLoopback.setStatus("current")


class _SleOamControlRemLoopbackPkCnt_Type(Integer32):
    """Custom type sleOamControlRemLoopbackPkCnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_SleOamControlRemLoopbackPkCnt_Type.__name__ = "Integer32"
_SleOamControlRemLoopbackPkCnt_Object = MibScalar
sleOamControlRemLoopbackPkCnt = _SleOamControlRemLoopbackPkCnt_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 11),
    _SleOamControlRemLoopbackPkCnt_Type()
)
sleOamControlRemLoopbackPkCnt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlRemLoopbackPkCnt.setStatus("current")


class _SleOamControlLm_Type(Integer32):
    """Custom type sleOamControlLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleOamControlLm_Type.__name__ = "Integer32"
_SleOamControlLm_Object = MibScalar
sleOamControlLm = _SleOamControlLm_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 12),
    _SleOamControlLm_Type()
)
sleOamControlLm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLm.setStatus("current")


class _SleOamControlLmAction_Type(Integer32):
    """Custom type sleOamControlLmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("syslog", 0),
          ("snmpTrap", 1))
    )


_SleOamControlLmAction_Type.__name__ = "Integer32"
_SleOamControlLmAction_Object = MibScalar
sleOamControlLmAction = _SleOamControlLmAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 13),
    _SleOamControlLmAction_Type()
)
sleOamControlLmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmAction.setStatus("current")


class _SleOamControlLmFrameWindow_Type(Integer32):
    """Custom type sleOamControlLmFrameWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_SleOamControlLmFrameWindow_Type.__name__ = "Integer32"
_SleOamControlLmFrameWindow_Object = MibScalar
sleOamControlLmFrameWindow = _SleOamControlLmFrameWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 14),
    _SleOamControlLmFrameWindow_Type()
)
sleOamControlLmFrameWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFrameWindow.setStatus("current")
if mibBuilder.loadTexts:
    sleOamControlLmFrameWindow.setUnits("seconds")


class _SleOamControlLmFrameThresh_Type(Integer32):
    """Custom type sleOamControlLmFrameThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamControlLmFrameThresh_Type.__name__ = "Integer32"
_SleOamControlLmFrameThresh_Object = MibScalar
sleOamControlLmFrameThresh = _SleOamControlLmFrameThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 15),
    _SleOamControlLmFrameThresh_Type()
)
sleOamControlLmFrameThresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFrameThresh.setStatus("current")


class _SleOamControlLmFramePeriodWindow_Type(Integer32):
    """Custom type sleOamControlLmFramePeriodWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 200000000),
    )


_SleOamControlLmFramePeriodWindow_Type.__name__ = "Integer32"
_SleOamControlLmFramePeriodWindow_Object = MibScalar
sleOamControlLmFramePeriodWindow = _SleOamControlLmFramePeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 16),
    _SleOamControlLmFramePeriodWindow_Type()
)
sleOamControlLmFramePeriodWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFramePeriodWindow.setStatus("current")


class _SleOamControlLmFramePeriodThresh_Type(Integer32):
    """Custom type sleOamControlLmFramePeriodThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamControlLmFramePeriodThresh_Type.__name__ = "Integer32"
_SleOamControlLmFramePeriodThresh_Object = MibScalar
sleOamControlLmFramePeriodThresh = _SleOamControlLmFramePeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 17),
    _SleOamControlLmFramePeriodThresh_Type()
)
sleOamControlLmFramePeriodThresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFramePeriodThresh.setStatus("current")


class _SleOamControlLmFrameSecondSummaryWindow_Type(Integer32):
    """Custom type sleOamControlLmFrameSecondSummaryWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 900),
    )


_SleOamControlLmFrameSecondSummaryWindow_Type.__name__ = "Integer32"
_SleOamControlLmFrameSecondSummaryWindow_Object = MibScalar
sleOamControlLmFrameSecondSummaryWindow = _SleOamControlLmFrameSecondSummaryWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 18),
    _SleOamControlLmFrameSecondSummaryWindow_Type()
)
sleOamControlLmFrameSecondSummaryWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFrameSecondSummaryWindow.setStatus("current")
if mibBuilder.loadTexts:
    sleOamControlLmFrameSecondSummaryWindow.setUnits("seconds")


class _SleOamControlLmFrameSecondSummaryThresh_Type(Integer32):
    """Custom type sleOamControlLmFrameSecondSummaryThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
    )


_SleOamControlLmFrameSecondSummaryThresh_Type.__name__ = "Integer32"
_SleOamControlLmFrameSecondSummaryThresh_Object = MibScalar
sleOamControlLmFrameSecondSummaryThresh = _SleOamControlLmFrameSecondSummaryThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 19),
    _SleOamControlLmFrameSecondSummaryThresh_Type()
)
sleOamControlLmFrameSecondSummaryThresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmFrameSecondSummaryThresh.setStatus("current")


class _SleOamControlLmSymbolPeriodWindow_Type(Integer32):
    """Custom type sleOamControlLmSymbolPeriodWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_SleOamControlLmSymbolPeriodWindow_Type.__name__ = "Integer32"
_SleOamControlLmSymbolPeriodWindow_Object = MibScalar
sleOamControlLmSymbolPeriodWindow = _SleOamControlLmSymbolPeriodWindow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 20),
    _SleOamControlLmSymbolPeriodWindow_Type()
)
sleOamControlLmSymbolPeriodWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmSymbolPeriodWindow.setStatus("current")


class _SleOamControlLmSymbolPeriodThresh_Type(Integer32):
    """Custom type sleOamControlLmSymbolPeriodThresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleOamControlLmSymbolPeriodThresh_Type.__name__ = "Integer32"
_SleOamControlLmSymbolPeriodThresh_Object = MibScalar
sleOamControlLmSymbolPeriodThresh = _SleOamControlLmSymbolPeriodThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 2, 21),
    _SleOamControlLmSymbolPeriodThresh_Type()
)
sleOamControlLmSymbolPeriodThresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleOamControlLmSymbolPeriodThresh.setStatus("current")
_SleEfmOamNotification_ObjectIdentity = ObjectIdentity
sleEfmOamNotification = _SleEfmOamNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 3)
)
_SleAdvaSystem_ObjectIdentity = ObjectIdentity
sleAdvaSystem = _SleAdvaSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6)
)
_SleAdvaSystemTable_Object = MibTable
sleAdvaSystemTable = _SleAdvaSystemTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1)
)
if mibBuilder.loadTexts:
    sleAdvaSystemTable.setStatus("current")
_SleAdvaSystemEntry_Object = MibTableRow
sleAdvaSystemEntry = _SleAdvaSystemEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1)
)
sleAdvaSystemEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
)
if mibBuilder.loadTexts:
    sleAdvaSystemEntry.setStatus("current")


class _SleAdvaFSPOperationMode_Type(Integer32):
    """Custom type sleAdvaFSPOperationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("master", 1),
          ("slave", 2))
    )


_SleAdvaFSPOperationMode_Type.__name__ = "Integer32"
_SleAdvaFSPOperationMode_Object = MibTableColumn
sleAdvaFSPOperationMode = _SleAdvaFSPOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 1),
    _SleAdvaFSPOperationMode_Type()
)
sleAdvaFSPOperationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFSPOperationMode.setStatus("current")


class _SleAdvaActiveNetworkInterface_Type(Integer32):
    """Custom type sleAdvaActiveNetworkInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("both", 0),
          ("portA", 1),
          ("portB", 2))
    )


_SleAdvaActiveNetworkInterface_Type.__name__ = "Integer32"
_SleAdvaActiveNetworkInterface_Object = MibTableColumn
sleAdvaActiveNetworkInterface = _SleAdvaActiveNetworkInterface_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 2),
    _SleAdvaActiveNetworkInterface_Type()
)
sleAdvaActiveNetworkInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaActiveNetworkInterface.setStatus("current")


class _SleAdvaForceNetworkInterface_Type(Integer32):
    """Custom type sleAdvaForceNetworkInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unforced", 0),
          ("forceA", 1),
          ("forceB", 2))
    )


_SleAdvaForceNetworkInterface_Type.__name__ = "Integer32"
_SleAdvaForceNetworkInterface_Object = MibTableColumn
sleAdvaForceNetworkInterface = _SleAdvaForceNetworkInterface_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 3),
    _SleAdvaForceNetworkInterface_Type()
)
sleAdvaForceNetworkInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaForceNetworkInterface.setStatus("current")


class _SleAdvaReportingInterval_Type(Integer32):
    """Custom type sleAdvaReportingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaReportingInterval_Type.__name__ = "Integer32"
_SleAdvaReportingInterval_Object = MibTableColumn
sleAdvaReportingInterval = _SleAdvaReportingInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 4),
    _SleAdvaReportingInterval_Type()
)
sleAdvaReportingInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaReportingInterval.setStatus("current")


class _SleAdvaNEMIFitted_Type(Integer32):
    """Custom type sleAdvaNEMIFitted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SleAdvaNEMIFitted_Type.__name__ = "Integer32"
_SleAdvaNEMIFitted_Object = MibTableColumn
sleAdvaNEMIFitted = _SleAdvaNEMIFitted_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 5),
    _SleAdvaNEMIFitted_Type()
)
sleAdvaNEMIFitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaNEMIFitted.setStatus("current")


class _SleAdvaForceReset_Type(Integer32):
    """Custom type sleAdvaForceReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SleAdvaForceReset_Type.__name__ = "Integer32"
_SleAdvaForceReset_Object = MibTableColumn
sleAdvaForceReset = _SleAdvaForceReset_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 6),
    _SleAdvaForceReset_Type()
)
sleAdvaForceReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaForceReset.setStatus("current")
_SleAdvaManagerAddress_Type = IpAddress
_SleAdvaManagerAddress_Object = MibTableColumn
sleAdvaManagerAddress = _SleAdvaManagerAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 7),
    _SleAdvaManagerAddress_Type()
)
sleAdvaManagerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaManagerAddress.setStatus("current")


class _SleAdvaMinRailVoltageThreshold_Type(Integer32):
    """Custom type sleAdvaMinRailVoltageThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaMinRailVoltageThreshold_Type.__name__ = "Integer32"
_SleAdvaMinRailVoltageThreshold_Object = MibTableColumn
sleAdvaMinRailVoltageThreshold = _SleAdvaMinRailVoltageThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 8),
    _SleAdvaMinRailVoltageThreshold_Type()
)
sleAdvaMinRailVoltageThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMinRailVoltageThreshold.setStatus("current")


class _SleAdvaMaxRailVoltageThreshold_Type(Integer32):
    """Custom type sleAdvaMaxRailVoltageThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaMaxRailVoltageThreshold_Type.__name__ = "Integer32"
_SleAdvaMaxRailVoltageThreshold_Object = MibTableColumn
sleAdvaMaxRailVoltageThreshold = _SleAdvaMaxRailVoltageThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 9),
    _SleAdvaMaxRailVoltageThreshold_Type()
)
sleAdvaMaxRailVoltageThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMaxRailVoltageThreshold.setStatus("current")


class _SleAdvaTemperatureThreshold_Type(Integer32):
    """Custom type sleAdvaTemperatureThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaTemperatureThreshold_Type.__name__ = "Integer32"
_SleAdvaTemperatureThreshold_Object = MibTableColumn
sleAdvaTemperatureThreshold = _SleAdvaTemperatureThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 10),
    _SleAdvaTemperatureThreshold_Type()
)
sleAdvaTemperatureThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaTemperatureThreshold.setStatus("current")


class _SleAdvaPartNumber_Type(OctetString):
    """Custom type sleAdvaPartNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaPartNumber_Type.__name__ = "OctetString"
_SleAdvaPartNumber_Object = MibTableColumn
sleAdvaPartNumber = _SleAdvaPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 11),
    _SleAdvaPartNumber_Type()
)
sleAdvaPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPartNumber.setStatus("current")


class _SleAdvaSerialNumber_Type(OctetString):
    """Custom type sleAdvaSerialNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaSerialNumber_Type.__name__ = "OctetString"
_SleAdvaSerialNumber_Object = MibTableColumn
sleAdvaSerialNumber = _SleAdvaSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 12),
    _SleAdvaSerialNumber_Type()
)
sleAdvaSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaSerialNumber.setStatus("current")


class _SleAdvaFirmwareVersion_Type(OctetString):
    """Custom type sleAdvaFirmwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaFirmwareVersion_Type.__name__ = "OctetString"
_SleAdvaFirmwareVersion_Object = MibTableColumn
sleAdvaFirmwareVersion = _SleAdvaFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 13),
    _SleAdvaFirmwareVersion_Type()
)
sleAdvaFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFirmwareVersion.setStatus("current")


class _SleAdvaFPGAVersion_Type(OctetString):
    """Custom type sleAdvaFPGAVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaFPGAVersion_Type.__name__ = "OctetString"
_SleAdvaFPGAVersion_Object = MibTableColumn
sleAdvaFPGAVersion = _SleAdvaFPGAVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 14),
    _SleAdvaFPGAVersion_Type()
)
sleAdvaFPGAVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFPGAVersion.setStatus("current")


class _SleAdvaHardwareRevision_Type(OctetString):
    """Custom type sleAdvaHardwareRevision based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SleAdvaHardwareRevision_Type.__name__ = "OctetString"
_SleAdvaHardwareRevision_Object = MibTableColumn
sleAdvaHardwareRevision = _SleAdvaHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 15),
    _SleAdvaHardwareRevision_Type()
)
sleAdvaHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaHardwareRevision.setStatus("current")


class _SleAdvaCLEICode_Type(OctetString):
    """Custom type sleAdvaCLEICode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SleAdvaCLEICode_Type.__name__ = "OctetString"
_SleAdvaCLEICode_Object = MibTableColumn
sleAdvaCLEICode = _SleAdvaCLEICode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 16),
    _SleAdvaCLEICode_Type()
)
sleAdvaCLEICode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaCLEICode.setStatus("current")


class _SleAdvaTemperature_Type(Integer32):
    """Custom type sleAdvaTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaTemperature_Type.__name__ = "Integer32"
_SleAdvaTemperature_Object = MibTableColumn
sleAdvaTemperature = _SleAdvaTemperature_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 17),
    _SleAdvaTemperature_Type()
)
sleAdvaTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaTemperature.setStatus("current")


class _SleAdvaRailVoltage_Type(Integer32):
    """Custom type sleAdvaRailVoltage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaRailVoltage_Type.__name__ = "Integer32"
_SleAdvaRailVoltage_Object = MibTableColumn
sleAdvaRailVoltage = _SleAdvaRailVoltage_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 18),
    _SleAdvaRailVoltage_Type()
)
sleAdvaRailVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRailVoltage.setStatus("current")


class _SleAdvaPSUStates_Type(Integer32):
    """Custom type sleAdvaPSUStates based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaPSUStates_Type.__name__ = "Integer32"
_SleAdvaPSUStates_Object = MibTableColumn
sleAdvaPSUStates = _SleAdvaPSUStates_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 19),
    _SleAdvaPSUStates_Type()
)
sleAdvaPSUStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPSUStates.setStatus("current")


class _SleAdvaPSUType_Type(Integer32):
    """Custom type sleAdvaPSUType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ac", 1),
          ("dc", 2))
    )


_SleAdvaPSUType_Type.__name__ = "Integer32"
_SleAdvaPSUType_Object = MibTableColumn
sleAdvaPSUType = _SleAdvaPSUType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 20),
    _SleAdvaPSUType_Type()
)
sleAdvaPSUType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPSUType.setStatus("current")


class _SleAdvaFansFitted_Type(Integer32):
    """Custom type sleAdvaFansFitted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaFansFitted_Type.__name__ = "Integer32"
_SleAdvaFansFitted_Object = MibTableColumn
sleAdvaFansFitted = _SleAdvaFansFitted_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 21),
    _SleAdvaFansFitted_Type()
)
sleAdvaFansFitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFansFitted.setStatus("current")


class _SleAdvaFanState_Type(Integer32):
    """Custom type sleAdvaFanState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaFanState_Type.__name__ = "Integer32"
_SleAdvaFanState_Object = MibTableColumn
sleAdvaFanState = _SleAdvaFanState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 22),
    _SleAdvaFanState_Type()
)
sleAdvaFanState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFanState.setStatus("current")


class _SleAdvaTransmitMode_Type(Integer32):
    """Custom type sleAdvaTransmitMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("halfDuplex", 0),
          ("fullDuplex", 1))
    )


_SleAdvaTransmitMode_Type.__name__ = "Integer32"
_SleAdvaTransmitMode_Object = MibTableColumn
sleAdvaTransmitMode = _SleAdvaTransmitMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 1, 1, 23),
    _SleAdvaTransmitMode_Type()
)
sleAdvaTransmitMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaTransmitMode.setStatus("current")
_SleAdvaSystemControl_ObjectIdentity = ObjectIdentity
sleAdvaSystemControl = _SleAdvaSystemControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2)
)


class _SleAdvaSystemControlRequest_Type(Integer32):
    """Custom type sleAdvaSystemControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("setAdvaSystemProfile", 1),
          ("setAdvaAlarmProfile", 2),
          ("setAdvaElectricalInterface", 3))
    )


_SleAdvaSystemControlRequest_Type.__name__ = "Integer32"
_SleAdvaSystemControlRequest_Object = MibScalar
sleAdvaSystemControlRequest = _SleAdvaSystemControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 1),
    _SleAdvaSystemControlRequest_Type()
)
sleAdvaSystemControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlRequest.setStatus("current")
_SleAdvaSystemControlStatus_Type = SleControlStatusType
_SleAdvaSystemControlStatus_Object = MibScalar
sleAdvaSystemControlStatus = _SleAdvaSystemControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 2),
    _SleAdvaSystemControlStatus_Type()
)
sleAdvaSystemControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaSystemControlStatus.setStatus("current")
_SleAdvaSystemControlTimer_Type = Gauge32
_SleAdvaSystemControlTimer_Object = MibScalar
sleAdvaSystemControlTimer = _SleAdvaSystemControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 3),
    _SleAdvaSystemControlTimer_Type()
)
sleAdvaSystemControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlTimer.setStatus("current")
_SleAdvaSystemControlTimeStamp_Type = TimeTicks
_SleAdvaSystemControlTimeStamp_Object = MibScalar
sleAdvaSystemControlTimeStamp = _SleAdvaSystemControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 4),
    _SleAdvaSystemControlTimeStamp_Type()
)
sleAdvaSystemControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlTimeStamp.setStatus("current")
_SleAdvaSystemControlReqResult_Type = SleControlRequestResultType
_SleAdvaSystemControlReqResult_Object = MibScalar
sleAdvaSystemControlReqResult = _SleAdvaSystemControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 5),
    _SleAdvaSystemControlReqResult_Type()
)
sleAdvaSystemControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlReqResult.setStatus("current")


class _SleAdvaSystemControlPortIndex_Type(Integer32):
    """Custom type sleAdvaSystemControlPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleAdvaSystemControlPortIndex_Type.__name__ = "Integer32"
_SleAdvaSystemControlPortIndex_Object = MibScalar
sleAdvaSystemControlPortIndex = _SleAdvaSystemControlPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 6),
    _SleAdvaSystemControlPortIndex_Type()
)
sleAdvaSystemControlPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlPortIndex.setStatus("current")


class _SleAdvaSystemControlFSPOperationMode_Type(Integer32):
    """Custom type sleAdvaSystemControlFSPOperationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("master", 1),
          ("save", 2))
    )


_SleAdvaSystemControlFSPOperationMode_Type.__name__ = "Integer32"
_SleAdvaSystemControlFSPOperationMode_Object = MibScalar
sleAdvaSystemControlFSPOperationMode = _SleAdvaSystemControlFSPOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 7),
    _SleAdvaSystemControlFSPOperationMode_Type()
)
sleAdvaSystemControlFSPOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlFSPOperationMode.setStatus("current")


class _SleAdvaSystemControlForceNetworkInterface_Type(Integer32):
    """Custom type sleAdvaSystemControlForceNetworkInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unforced", 0),
          ("forceA", 1),
          ("forceB", 2))
    )


_SleAdvaSystemControlForceNetworkInterface_Type.__name__ = "Integer32"
_SleAdvaSystemControlForceNetworkInterface_Object = MibScalar
sleAdvaSystemControlForceNetworkInterface = _SleAdvaSystemControlForceNetworkInterface_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 8),
    _SleAdvaSystemControlForceNetworkInterface_Type()
)
sleAdvaSystemControlForceNetworkInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlForceNetworkInterface.setStatus("current")


class _SleAdvaSystemControlReportingInterval_Type(Integer32):
    """Custom type sleAdvaSystemControlReportingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaSystemControlReportingInterval_Type.__name__ = "Integer32"
_SleAdvaSystemControlReportingInterval_Object = MibScalar
sleAdvaSystemControlReportingInterval = _SleAdvaSystemControlReportingInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 9),
    _SleAdvaSystemControlReportingInterval_Type()
)
sleAdvaSystemControlReportingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlReportingInterval.setStatus("current")


class _SleAdvaSystemControlForceReset_Type(Integer32):
    """Custom type sleAdvaSystemControlForceReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SleAdvaSystemControlForceReset_Type.__name__ = "Integer32"
_SleAdvaSystemControlForceReset_Object = MibScalar
sleAdvaSystemControlForceReset = _SleAdvaSystemControlForceReset_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 10),
    _SleAdvaSystemControlForceReset_Type()
)
sleAdvaSystemControlForceReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlForceReset.setStatus("current")


class _SleAdvaSystemControlMinRailVoltageThreshold_Type(Integer32):
    """Custom type sleAdvaSystemControlMinRailVoltageThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaSystemControlMinRailVoltageThreshold_Type.__name__ = "Integer32"
_SleAdvaSystemControlMinRailVoltageThreshold_Object = MibScalar
sleAdvaSystemControlMinRailVoltageThreshold = _SleAdvaSystemControlMinRailVoltageThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 11),
    _SleAdvaSystemControlMinRailVoltageThreshold_Type()
)
sleAdvaSystemControlMinRailVoltageThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlMinRailVoltageThreshold.setStatus("current")


class _SleAdvaSystemControlMaxRailVoltageThreshold_Type(Integer32):
    """Custom type sleAdvaSystemControlMaxRailVoltageThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaSystemControlMaxRailVoltageThreshold_Type.__name__ = "Integer32"
_SleAdvaSystemControlMaxRailVoltageThreshold_Object = MibScalar
sleAdvaSystemControlMaxRailVoltageThreshold = _SleAdvaSystemControlMaxRailVoltageThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 12),
    _SleAdvaSystemControlMaxRailVoltageThreshold_Type()
)
sleAdvaSystemControlMaxRailVoltageThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlMaxRailVoltageThreshold.setStatus("current")


class _SleAdvaSystemControlTemperatureThreshold_Type(Integer32):
    """Custom type sleAdvaSystemControlTemperatureThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaSystemControlTemperatureThreshold_Type.__name__ = "Integer32"
_SleAdvaSystemControlTemperatureThreshold_Object = MibScalar
sleAdvaSystemControlTemperatureThreshold = _SleAdvaSystemControlTemperatureThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 13),
    _SleAdvaSystemControlTemperatureThreshold_Type()
)
sleAdvaSystemControlTemperatureThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlTemperatureThreshold.setStatus("current")


class _SleAdvaSystemControlTransmitMode_Type(Integer32):
    """Custom type sleAdvaSystemControlTransmitMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("halfDuplex", 0),
          ("fullDuplex", 1))
    )


_SleAdvaSystemControlTransmitMode_Type.__name__ = "Integer32"
_SleAdvaSystemControlTransmitMode_Object = MibScalar
sleAdvaSystemControlTransmitMode = _SleAdvaSystemControlTransmitMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 2, 14),
    _SleAdvaSystemControlTransmitMode_Type()
)
sleAdvaSystemControlTransmitMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaSystemControlTransmitMode.setStatus("current")
_SleAdvaSystemNotification_ObjectIdentity = ObjectIdentity
sleAdvaSystemNotification = _SleAdvaSystemNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 3)
)
_SleAdvaGeneral_ObjectIdentity = ObjectIdentity
sleAdvaGeneral = _SleAdvaGeneral_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7)
)
_SleAdvaGeneralTable_Object = MibTable
sleAdvaGeneralTable = _SleAdvaGeneralTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1)
)
if mibBuilder.loadTexts:
    sleAdvaGeneralTable.setStatus("current")
_SleAdvaGeneralEntry_Object = MibTableRow
sleAdvaGeneralEntry = _SleAdvaGeneralEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1)
)
sleAdvaGeneralEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleAdvaRemInstance"),
)
if mibBuilder.loadTexts:
    sleAdvaGeneralEntry.setStatus("current")


class _SleAdvaRemInstance_Type(Integer32):
    """Custom type sleAdvaRemInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_SleAdvaRemInstance_Type.__name__ = "Integer32"
_SleAdvaRemInstance_Object = MibTableColumn
sleAdvaRemInstance = _SleAdvaRemInstance_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 1),
    _SleAdvaRemInstance_Type()
)
sleAdvaRemInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemInstance.setStatus("current")


class _SleAdvaOperationalStatus_Type(Integer32):
    """Custom type sleAdvaOperationalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("outofservice", 3),
          ("unknown", 4))
    )


_SleAdvaOperationalStatus_Type.__name__ = "Integer32"
_SleAdvaOperationalStatus_Object = MibTableColumn
sleAdvaOperationalStatus = _SleAdvaOperationalStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 2),
    _SleAdvaOperationalStatus_Type()
)
sleAdvaOperationalStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaOperationalStatus.setStatus("current")
_SleAdvaLineSpeed_Type = Integer32
_SleAdvaLineSpeed_Object = MibTableColumn
sleAdvaLineSpeed = _SleAdvaLineSpeed_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 3),
    _SleAdvaLineSpeed_Type()
)
sleAdvaLineSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLineSpeed.setStatus("current")
_SleAdvaMACAddress_Type = MacAddress
_SleAdvaMACAddress_Object = MibTableColumn
sleAdvaMACAddress = _SleAdvaMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 4),
    _SleAdvaMACAddress_Type()
)
sleAdvaMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMACAddress.setStatus("current")


class _SleAdvaConnectorType_Type(Integer32):
    """Custom type sleAdvaConnectorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("sc", 1),
          ("fc", 2),
          ("mu", 3),
          ("rj45", 4),
          ("lu", 5))
    )


_SleAdvaConnectorType_Type.__name__ = "Integer32"
_SleAdvaConnectorType_Object = MibTableColumn
sleAdvaConnectorType = _SleAdvaConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 5),
    _SleAdvaConnectorType_Type()
)
sleAdvaConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaConnectorType.setStatus("current")


class _SleAdvaAutonegiotation_Type(Integer32):
    """Custom type sleAdvaAutonegiotation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleAdvaAutonegiotation_Type.__name__ = "Integer32"
_SleAdvaAutonegiotation_Object = MibTableColumn
sleAdvaAutonegiotation = _SleAdvaAutonegiotation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 6),
    _SleAdvaAutonegiotation_Type()
)
sleAdvaAutonegiotation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAutonegiotation.setStatus("current")


class _SleAdvaLinkLossForwarding_Type(Integer32):
    """Custom type sleAdvaLinkLossForwarding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SleAdvaLinkLossForwarding_Type.__name__ = "Integer32"
_SleAdvaLinkLossForwarding_Object = MibTableColumn
sleAdvaLinkLossForwarding = _SleAdvaLinkLossForwarding_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 7),
    _SleAdvaLinkLossForwarding_Type()
)
sleAdvaLinkLossForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLossForwarding.setStatus("current")


class _SleAdvaAdminState_Type(Integer32):
    """Custom type sleAdvaAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SleAdvaAdminState_Type.__name__ = "Integer32"
_SleAdvaAdminState_Object = MibTableColumn
sleAdvaAdminState = _SleAdvaAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 8),
    _SleAdvaAdminState_Type()
)
sleAdvaAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAdminState.setStatus("current")


class _SleAdvaRemoteInterfaceIndex_Type(Integer32):
    """Custom type sleAdvaRemoteInterfaceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaRemoteInterfaceIndex_Type.__name__ = "Integer32"
_SleAdvaRemoteInterfaceIndex_Object = MibTableColumn
sleAdvaRemoteInterfaceIndex = _SleAdvaRemoteInterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 9),
    _SleAdvaRemoteInterfaceIndex_Type()
)
sleAdvaRemoteInterfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemoteInterfaceIndex.setStatus("current")


class _SleAdvaUserDefinedString_Type(OctetString):
    """Custom type sleAdvaUserDefinedString based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaUserDefinedString_Type.__name__ = "OctetString"
_SleAdvaUserDefinedString_Object = MibTableColumn
sleAdvaUserDefinedString = _SleAdvaUserDefinedString_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 10),
    _SleAdvaUserDefinedString_Type()
)
sleAdvaUserDefinedString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaUserDefinedString.setStatus("current")


class _SleAdvaRemoteSignalling_Type(Integer32):
    """Custom type sleAdvaRemoteSignalling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("detected", 1),
          ("notdetected", 2))
    )


_SleAdvaRemoteSignalling_Type.__name__ = "Integer32"
_SleAdvaRemoteSignalling_Object = MibTableColumn
sleAdvaRemoteSignalling = _SleAdvaRemoteSignalling_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 11),
    _SleAdvaRemoteSignalling_Type()
)
sleAdvaRemoteSignalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemoteSignalling.setStatus("current")


class _SleAdvaConfiguration_Type(Integer32):
    """Custom type sleAdvaConfiguration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("configuring", 2),
          ("completed", 3),
          ("disabled", 4),
          ("parallelDetectFail", 5))
    )


_SleAdvaConfiguration_Type.__name__ = "Integer32"
_SleAdvaConfiguration_Object = MibTableColumn
sleAdvaConfiguration = _SleAdvaConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 12),
    _SleAdvaConfiguration_Type()
)
sleAdvaConfiguration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaConfiguration.setStatus("current")


class _SleAdvaLocalTechnologyAbility_Type(Bits):
    """Custom type sleAdvaLocalTechnologyAbility based on Bits"""
    namedValues = NamedValues(
        *(("global", 0),
          ("unknown", 1),
          ("base10T", 2),
          ("base10TFD", 3),
          ("base100T4", 4),
          ("base100TX", 5),
          ("base100TXFD", 6),
          ("fdxpause", 7),
          ("fdxapause", 8),
          ("fdxspause", 9),
          ("fdxbpause", 10),
          ("base100T2", 11),
          ("base100T2FD", 12),
          ("base1000X", 13),
          ("base1000XFD", 14),
          ("base1000T", 15),
          ("base1000TFD", 16),
          ("remFault1", 17),
          ("remFault2", 18),
          ("isoEthernet", 19))
    )

_SleAdvaLocalTechnologyAbility_Type.__name__ = "Bits"
_SleAdvaLocalTechnologyAbility_Object = MibTableColumn
sleAdvaLocalTechnologyAbility = _SleAdvaLocalTechnologyAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 13),
    _SleAdvaLocalTechnologyAbility_Type()
)
sleAdvaLocalTechnologyAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocalTechnologyAbility.setStatus("current")


class _SleAdvaAdvertisedTechnologyAbility_Type(Bits):
    """Custom type sleAdvaAdvertisedTechnologyAbility based on Bits"""
    namedValues = NamedValues(
        *(("global", 0),
          ("unknown", 1),
          ("base10T", 2),
          ("base10TFD", 3),
          ("base100T4", 4),
          ("base100TX", 5),
          ("base100TXFD", 6),
          ("fdxpause", 7),
          ("fdxapause", 8),
          ("fdxspause", 9),
          ("fdxbpause", 10),
          ("base100T2", 11),
          ("base100T2FD", 12),
          ("base1000X", 13),
          ("base1000XFD", 14),
          ("base1000T", 15),
          ("base1000TFD", 16),
          ("remFault1", 17),
          ("remFault2", 18),
          ("isoEthernet", 19))
    )

_SleAdvaAdvertisedTechnologyAbility_Type.__name__ = "Bits"
_SleAdvaAdvertisedTechnologyAbility_Object = MibTableColumn
sleAdvaAdvertisedTechnologyAbility = _SleAdvaAdvertisedTechnologyAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 14),
    _SleAdvaAdvertisedTechnologyAbility_Type()
)
sleAdvaAdvertisedTechnologyAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAdvertisedTechnologyAbility.setStatus("current")


class _SleAdvaReceivedTechnologyAbility_Type(Bits):
    """Custom type sleAdvaReceivedTechnologyAbility based on Bits"""
    namedValues = NamedValues(
        *(("global", 0),
          ("unknown", 1),
          ("base10T", 2),
          ("base10TFD", 3),
          ("base100T4", 4),
          ("base100TX", 5),
          ("base100TXFD", 6),
          ("fdxpause", 7),
          ("fdxapause", 8),
          ("fdxspause", 9),
          ("fdxbpause", 10),
          ("base100T2", 11),
          ("base100T2FD", 12),
          ("base1000X", 13),
          ("base1000XFD", 14),
          ("base1000T", 15),
          ("base1000TFD", 16),
          ("remFault1", 17),
          ("remFault2", 18),
          ("isoEthernet", 19))
    )

_SleAdvaReceivedTechnologyAbility_Type.__name__ = "Bits"
_SleAdvaReceivedTechnologyAbility_Object = MibTableColumn
sleAdvaReceivedTechnologyAbility = _SleAdvaReceivedTechnologyAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 15),
    _SleAdvaReceivedTechnologyAbility_Type()
)
sleAdvaReceivedTechnologyAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaReceivedTechnologyAbility.setStatus("current")


class _SleAdvaLocalSectorAbility_Type(Bits):
    """Custom type sleAdvaLocalSectorAbility based on Bits"""
    namedValues = NamedValues(
        *(("other", 0),
          ("ethernet", 1),
          ("isoethernet", 2))
    )

_SleAdvaLocalSectorAbility_Type.__name__ = "Bits"
_SleAdvaLocalSectorAbility_Object = MibTableColumn
sleAdvaLocalSectorAbility = _SleAdvaLocalSectorAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 16),
    _SleAdvaLocalSectorAbility_Type()
)
sleAdvaLocalSectorAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocalSectorAbility.setStatus("current")


class _SleAdvaAdvertisedSectorAbility_Type(Bits):
    """Custom type sleAdvaAdvertisedSectorAbility based on Bits"""
    namedValues = NamedValues(
        *(("other", 0),
          ("ethernet", 1),
          ("isoethernet", 2))
    )

_SleAdvaAdvertisedSectorAbility_Type.__name__ = "Bits"
_SleAdvaAdvertisedSectorAbility_Object = MibTableColumn
sleAdvaAdvertisedSectorAbility = _SleAdvaAdvertisedSectorAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 17),
    _SleAdvaAdvertisedSectorAbility_Type()
)
sleAdvaAdvertisedSectorAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAdvertisedSectorAbility.setStatus("current")


class _SleAdvaReceivedSectorAbility_Type(Bits):
    """Custom type sleAdvaReceivedSectorAbility based on Bits"""
    namedValues = NamedValues(
        *(("other", 0),
          ("ethernet", 1),
          ("isoethernet", 2))
    )

_SleAdvaReceivedSectorAbility_Type.__name__ = "Bits"
_SleAdvaReceivedSectorAbility_Object = MibTableColumn
sleAdvaReceivedSectorAbility = _SleAdvaReceivedSectorAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 18),
    _SleAdvaReceivedSectorAbility_Type()
)
sleAdvaReceivedSectorAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaReceivedSectorAbility.setStatus("current")


class _SleAdvaDuplexCapabilities_Type(Integer32):
    """Custom type sleAdvaDuplexCapabilities based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("halfduplex", 0),
          ("fullduplex", 1))
    )


_SleAdvaDuplexCapabilities_Type.__name__ = "Integer32"
_SleAdvaDuplexCapabilities_Object = MibTableColumn
sleAdvaDuplexCapabilities = _SleAdvaDuplexCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 19),
    _SleAdvaDuplexCapabilities_Type()
)
sleAdvaDuplexCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaDuplexCapabilities.setStatus("current")


class _SleAdvaPHYType_Type(Integer32):
    """Custom type sleAdvaPHYType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("unknown", 2),
          ("none", 3),
          ("base10", 4),
          ("base100T4", 5),
          ("base100X", 6),
          ("base100T2", 7),
          ("base1000X", 8),
          ("base1000T", 9))
    )


_SleAdvaPHYType_Type.__name__ = "Integer32"
_SleAdvaPHYType_Object = MibTableColumn
sleAdvaPHYType = _SleAdvaPHYType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 20),
    _SleAdvaPHYType_Type()
)
sleAdvaPHYType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPHYType.setStatus("current")


class _SleAdvaPHYTypeList_Type(Bits):
    """Custom type sleAdvaPHYTypeList based on Bits"""
    namedValues = NamedValues(
        *(("other", 0),
          ("unknown", 1),
          ("none", 2),
          ("base10", 3),
          ("base100T4", 4),
          ("base100X", 5),
          ("base100T2", 6),
          ("base1000X", 7),
          ("base1000T", 8))
    )

_SleAdvaPHYTypeList_Type.__name__ = "Bits"
_SleAdvaPHYTypeList_Object = MibTableColumn
sleAdvaPHYTypeList = _SleAdvaPHYTypeList_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 21),
    _SleAdvaPHYTypeList_Type()
)
sleAdvaPHYTypeList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPHYTypeList.setStatus("current")


class _SleAdvaMIIDetect_Type(Integer32):
    """Custom type sleAdvaMIIDetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 1),
          ("nothingConnected", 2),
          ("connected", 3),
          ("absent", 4))
    )


_SleAdvaMIIDetect_Type.__name__ = "Integer32"
_SleAdvaMIIDetect_Object = MibTableColumn
sleAdvaMIIDetect = _SleAdvaMIIDetect_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 22),
    _SleAdvaMIIDetect_Type()
)
sleAdvaMIIDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMIIDetect.setStatus("current")


class _SleAdvaPHYState_Type(Integer32):
    """Custom type sleAdvaPHYState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleAdvaPHYState_Type.__name__ = "Integer32"
_SleAdvaPHYState_Object = MibTableColumn
sleAdvaPHYState = _SleAdvaPHYState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 23),
    _SleAdvaPHYState_Type()
)
sleAdvaPHYState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPHYState.setStatus("current")
_SleAdvaGoodFramesTransmitted_Type = Integer32
_SleAdvaGoodFramesTransmitted_Object = MibTableColumn
sleAdvaGoodFramesTransmitted = _SleAdvaGoodFramesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 24),
    _SleAdvaGoodFramesTransmitted_Type()
)
sleAdvaGoodFramesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaGoodFramesTransmitted.setStatus("current")
_SleAdvaSingleCollisionFrames_Type = Integer32
_SleAdvaSingleCollisionFrames_Object = MibTableColumn
sleAdvaSingleCollisionFrames = _SleAdvaSingleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 25),
    _SleAdvaSingleCollisionFrames_Type()
)
sleAdvaSingleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaSingleCollisionFrames.setStatus("current")
_SleAdvaMultipleCollisionFrames_Type = Integer32
_SleAdvaMultipleCollisionFrames_Object = MibTableColumn
sleAdvaMultipleCollisionFrames = _SleAdvaMultipleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 26),
    _SleAdvaMultipleCollisionFrames_Type()
)
sleAdvaMultipleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMultipleCollisionFrames.setStatus("current")
_SleAdvaGoodFramesReceived_Type = Integer32
_SleAdvaGoodFramesReceived_Object = MibTableColumn
sleAdvaGoodFramesReceived = _SleAdvaGoodFramesReceived_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 27),
    _SleAdvaGoodFramesReceived_Type()
)
sleAdvaGoodFramesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaGoodFramesReceived.setStatus("current")
_SleAdvaFCSErrors_Type = Integer32
_SleAdvaFCSErrors_Object = MibTableColumn
sleAdvaFCSErrors = _SleAdvaFCSErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 28),
    _SleAdvaFCSErrors_Type()
)
sleAdvaFCSErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFCSErrors.setStatus("current")
_SleAdvaAlignmentErrors_Type = Integer32
_SleAdvaAlignmentErrors_Object = MibTableColumn
sleAdvaAlignmentErrors = _SleAdvaAlignmentErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 29),
    _SleAdvaAlignmentErrors_Type()
)
sleAdvaAlignmentErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAlignmentErrors.setStatus("current")
_SleAdvaFramesTooLong_Type = Integer32
_SleAdvaFramesTooLong_Object = MibTableColumn
sleAdvaFramesTooLong = _SleAdvaFramesTooLong_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 30),
    _SleAdvaFramesTooLong_Type()
)
sleAdvaFramesTooLong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaFramesTooLong.setStatus("current")
_SleAdvaBytesTransmitted_Type = Integer32
_SleAdvaBytesTransmitted_Object = MibTableColumn
sleAdvaBytesTransmitted = _SleAdvaBytesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 31),
    _SleAdvaBytesTransmitted_Type()
)
sleAdvaBytesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaBytesTransmitted.setStatus("current")
_SleAdvaBytesReceived_Type = Integer32
_SleAdvaBytesReceived_Object = MibTableColumn
sleAdvaBytesReceived = _SleAdvaBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 32),
    _SleAdvaBytesReceived_Type()
)
sleAdvaBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaBytesReceived.setStatus("current")
_SleAdvaSymbolErrors_Type = Integer32
_SleAdvaSymbolErrors_Object = MibTableColumn
sleAdvaSymbolErrors = _SleAdvaSymbolErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 1, 1, 33),
    _SleAdvaSymbolErrors_Type()
)
sleAdvaSymbolErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaSymbolErrors.setStatus("current")
_SleAdvaGeneralControl_ObjectIdentity = ObjectIdentity
sleAdvaGeneralControl = _SleAdvaGeneralControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2)
)


class _SleAdvaGeneralControlRequest_Type(Integer32):
    """Custom type sleAdvaGeneralControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("setAdvaGeneralProfile", 1),
          ("setAdvaAutonegProfile", 2))
    )


_SleAdvaGeneralControlRequest_Type.__name__ = "Integer32"
_SleAdvaGeneralControlRequest_Object = MibScalar
sleAdvaGeneralControlRequest = _SleAdvaGeneralControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 1),
    _SleAdvaGeneralControlRequest_Type()
)
sleAdvaGeneralControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlRequest.setStatus("current")
_SleAdvaGeneralControlStatus_Type = SleControlStatusType
_SleAdvaGeneralControlStatus_Object = MibScalar
sleAdvaGeneralControlStatus = _SleAdvaGeneralControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 2),
    _SleAdvaGeneralControlStatus_Type()
)
sleAdvaGeneralControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlStatus.setStatus("current")
_SleAdvaGeneralControlTimer_Type = Gauge32
_SleAdvaGeneralControlTimer_Object = MibScalar
sleAdvaGeneralControlTimer = _SleAdvaGeneralControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 3),
    _SleAdvaGeneralControlTimer_Type()
)
sleAdvaGeneralControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlTimer.setStatus("current")
_SleAdvaGeneralControlTimeStamp_Type = TimeTicks
_SleAdvaGeneralControlTimeStamp_Object = MibScalar
sleAdvaGeneralControlTimeStamp = _SleAdvaGeneralControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 4),
    _SleAdvaGeneralControlTimeStamp_Type()
)
sleAdvaGeneralControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlTimeStamp.setStatus("current")
_SleAdvaGeneralControlReqResult_Type = SleControlRequestResultType
_SleAdvaGeneralControlReqResult_Object = MibScalar
sleAdvaGeneralControlReqResult = _SleAdvaGeneralControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 5),
    _SleAdvaGeneralControlReqResult_Type()
)
sleAdvaGeneralControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlReqResult.setStatus("current")


class _SleAdvaGeneralControlPortIndex_Type(Integer32):
    """Custom type sleAdvaGeneralControlPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleAdvaGeneralControlPortIndex_Type.__name__ = "Integer32"
_SleAdvaGeneralControlPortIndex_Object = MibScalar
sleAdvaGeneralControlPortIndex = _SleAdvaGeneralControlPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 6),
    _SleAdvaGeneralControlPortIndex_Type()
)
sleAdvaGeneralControlPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlPortIndex.setStatus("current")


class _SleAdvaGeneralControlRemInstance_Type(Integer32):
    """Custom type sleAdvaGeneralControlRemInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_SleAdvaGeneralControlRemInstance_Type.__name__ = "Integer32"
_SleAdvaGeneralControlRemInstance_Object = MibScalar
sleAdvaGeneralControlRemInstance = _SleAdvaGeneralControlRemInstance_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 7),
    _SleAdvaGeneralControlRemInstance_Type()
)
sleAdvaGeneralControlRemInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlRemInstance.setStatus("current")
_SleAdvaGeneralControlLineSpeed_Type = Integer32
_SleAdvaGeneralControlLineSpeed_Object = MibScalar
sleAdvaGeneralControlLineSpeed = _SleAdvaGeneralControlLineSpeed_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 8),
    _SleAdvaGeneralControlLineSpeed_Type()
)
sleAdvaGeneralControlLineSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlLineSpeed.setStatus("current")


class _SleAdvaGeneralControlAutonegiotation_Type(Integer32):
    """Custom type sleAdvaGeneralControlAutonegiotation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleAdvaGeneralControlAutonegiotation_Type.__name__ = "Integer32"
_SleAdvaGeneralControlAutonegiotation_Object = MibScalar
sleAdvaGeneralControlAutonegiotation = _SleAdvaGeneralControlAutonegiotation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 9),
    _SleAdvaGeneralControlAutonegiotation_Type()
)
sleAdvaGeneralControlAutonegiotation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlAutonegiotation.setStatus("current")


class _SleAdvaGeneralControlLinkLossForwarding_Type(Integer32):
    """Custom type sleAdvaGeneralControlLinkLossForwarding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SleAdvaGeneralControlLinkLossForwarding_Type.__name__ = "Integer32"
_SleAdvaGeneralControlLinkLossForwarding_Object = MibScalar
sleAdvaGeneralControlLinkLossForwarding = _SleAdvaGeneralControlLinkLossForwarding_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 10),
    _SleAdvaGeneralControlLinkLossForwarding_Type()
)
sleAdvaGeneralControlLinkLossForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlLinkLossForwarding.setStatus("current")


class _SleAdvaGeneralControlUserDefinedString_Type(OctetString):
    """Custom type sleAdvaGeneralControlUserDefinedString based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SleAdvaGeneralControlUserDefinedString_Type.__name__ = "OctetString"
_SleAdvaGeneralControlUserDefinedString_Object = MibScalar
sleAdvaGeneralControlUserDefinedString = _SleAdvaGeneralControlUserDefinedString_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 11),
    _SleAdvaGeneralControlUserDefinedString_Type()
)
sleAdvaGeneralControlUserDefinedString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlUserDefinedString.setStatus("current")


class _SleAdvaGeneralControlAdvertisedTechnologyAbility_Type(Bits):
    """Custom type sleAdvaGeneralControlAdvertisedTechnologyAbility based on Bits"""
    namedValues = NamedValues(
        *(("global", 0),
          ("unknown", 1),
          ("base10T", 2),
          ("base10TFD", 3),
          ("base100T4", 4),
          ("base100TX", 5),
          ("base100TXFD", 6),
          ("fdxpause", 7),
          ("fdxapause", 8),
          ("fdxspause", 9),
          ("fdxbpause", 10),
          ("base100T2", 11),
          ("base100T2FD", 12),
          ("base1000X", 13),
          ("base1000XFD", 14),
          ("base1000T", 15),
          ("base1000TFD", 16),
          ("remFault1", 17),
          ("remFault2", 18),
          ("isoEthernet", 19))
    )

_SleAdvaGeneralControlAdvertisedTechnologyAbility_Type.__name__ = "Bits"
_SleAdvaGeneralControlAdvertisedTechnologyAbility_Object = MibScalar
sleAdvaGeneralControlAdvertisedTechnologyAbility = _SleAdvaGeneralControlAdvertisedTechnologyAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 12),
    _SleAdvaGeneralControlAdvertisedTechnologyAbility_Type()
)
sleAdvaGeneralControlAdvertisedTechnologyAbility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlAdvertisedTechnologyAbility.setStatus("current")


class _SleAdvaGeneralControlAdvertisedSectorAbility_Type(Bits):
    """Custom type sleAdvaGeneralControlAdvertisedSectorAbility based on Bits"""
    namedValues = NamedValues(
        *(("other", 0),
          ("ethernet", 1),
          ("isoethernet", 2))
    )

_SleAdvaGeneralControlAdvertisedSectorAbility_Type.__name__ = "Bits"
_SleAdvaGeneralControlAdvertisedSectorAbility_Object = MibScalar
sleAdvaGeneralControlAdvertisedSectorAbility = _SleAdvaGeneralControlAdvertisedSectorAbility_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 2, 13),
    _SleAdvaGeneralControlAdvertisedSectorAbility_Type()
)
sleAdvaGeneralControlAdvertisedSectorAbility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaGeneralControlAdvertisedSectorAbility.setStatus("current")
_SleAdvaGeneralNotification_ObjectIdentity = ObjectIdentity
sleAdvaGeneralNotification = _SleAdvaGeneralNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 3)
)
_SleAdvaModule_ObjectIdentity = ObjectIdentity
sleAdvaModule = _SleAdvaModule_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8)
)
_SleAdvaModuleTable_Object = MibTable
sleAdvaModuleTable = _SleAdvaModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1)
)
if mibBuilder.loadTexts:
    sleAdvaModuleTable.setStatus("current")
_SleAdvaModuleEntry_Object = MibTableRow
sleAdvaModuleEntry = _SleAdvaModuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1)
)
sleAdvaModuleEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleAdvaRemInstance"),
)
if mibBuilder.loadTexts:
    sleAdvaModuleEntry.setStatus("current")


class _SleAdvaModuleType_Type(Integer32):
    """Custom type sleAdvaModuleType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("sfp", 1),
          ("nemi", 2),
          ("other", 3))
    )


_SleAdvaModuleType_Type.__name__ = "Integer32"
_SleAdvaModuleType_Object = MibTableColumn
sleAdvaModuleType = _SleAdvaModuleType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 1),
    _SleAdvaModuleType_Type()
)
sleAdvaModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleType.setStatus("current")


class _SleAdvaModulePartNumber_Type(OctetString):
    """Custom type sleAdvaModulePartNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SleAdvaModulePartNumber_Type.__name__ = "OctetString"
_SleAdvaModulePartNumber_Object = MibTableColumn
sleAdvaModulePartNumber = _SleAdvaModulePartNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 2),
    _SleAdvaModulePartNumber_Type()
)
sleAdvaModulePartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModulePartNumber.setStatus("current")


class _SleAdvaModuleSerialNumber_Type(OctetString):
    """Custom type sleAdvaModuleSerialNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SleAdvaModuleSerialNumber_Type.__name__ = "OctetString"
_SleAdvaModuleSerialNumber_Object = MibTableColumn
sleAdvaModuleSerialNumber = _SleAdvaModuleSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 3),
    _SleAdvaModuleSerialNumber_Type()
)
sleAdvaModuleSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleSerialNumber.setStatus("current")


class _SleAdvaModuleFirmwareVersion_Type(OctetString):
    """Custom type sleAdvaModuleFirmwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SleAdvaModuleFirmwareVersion_Type.__name__ = "OctetString"
_SleAdvaModuleFirmwareVersion_Object = MibTableColumn
sleAdvaModuleFirmwareVersion = _SleAdvaModuleFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 4),
    _SleAdvaModuleFirmwareVersion_Type()
)
sleAdvaModuleFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleFirmwareVersion.setStatus("current")


class _SleAdvaModuleSoftwareVersion_Type(OctetString):
    """Custom type sleAdvaModuleSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SleAdvaModuleSoftwareVersion_Type.__name__ = "OctetString"
_SleAdvaModuleSoftwareVersion_Object = MibTableColumn
sleAdvaModuleSoftwareVersion = _SleAdvaModuleSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 5),
    _SleAdvaModuleSoftwareVersion_Type()
)
sleAdvaModuleSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleSoftwareVersion.setStatus("current")


class _SleAdvaModuleHardwareRevision_Type(OctetString):
    """Custom type sleAdvaModuleHardwareRevision based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SleAdvaModuleHardwareRevision_Type.__name__ = "OctetString"
_SleAdvaModuleHardwareRevision_Object = MibTableColumn
sleAdvaModuleHardwareRevision = _SleAdvaModuleHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 6),
    _SleAdvaModuleHardwareRevision_Type()
)
sleAdvaModuleHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleHardwareRevision.setStatus("current")


class _SleAdvaModuleCLEICode_Type(OctetString):
    """Custom type sleAdvaModuleCLEICode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SleAdvaModuleCLEICode_Type.__name__ = "OctetString"
_SleAdvaModuleCLEICode_Object = MibTableColumn
sleAdvaModuleCLEICode = _SleAdvaModuleCLEICode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 8, 1, 1, 7),
    _SleAdvaModuleCLEICode_Type()
)
sleAdvaModuleCLEICode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaModuleCLEICode.setStatus("current")
_SleAdvaOptical_ObjectIdentity = ObjectIdentity
sleAdvaOptical = _SleAdvaOptical_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9)
)
_SleAdvaOpticalTable_Object = MibTable
sleAdvaOpticalTable = _SleAdvaOpticalTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1)
)
if mibBuilder.loadTexts:
    sleAdvaOpticalTable.setStatus("current")
_SleAdvaOpticalEntry_Object = MibTableRow
sleAdvaOpticalEntry = _SleAdvaOpticalEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1)
)
sleAdvaOpticalEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleAdvaRemInstance"),
)
if mibBuilder.loadTexts:
    sleAdvaOpticalEntry.setStatus("current")


class _SleAdvaOpticalThresholdLevel_Type(Integer32):
    """Custom type sleAdvaOpticalThresholdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaOpticalThresholdLevel_Type.__name__ = "Integer32"
_SleAdvaOpticalThresholdLevel_Object = MibTableColumn
sleAdvaOpticalThresholdLevel = _SleAdvaOpticalThresholdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 1),
    _SleAdvaOpticalThresholdLevel_Type()
)
sleAdvaOpticalThresholdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaOpticalThresholdLevel.setStatus("current")


class _SleAdvaLinkLength1_Type(Integer32):
    """Custom type sleAdvaLinkLength1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaLinkLength1_Type.__name__ = "Integer32"
_SleAdvaLinkLength1_Object = MibTableColumn
sleAdvaLinkLength1 = _SleAdvaLinkLength1_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 2),
    _SleAdvaLinkLength1_Type()
)
sleAdvaLinkLength1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLength1.setStatus("current")


class _SleAdvaLinkLength2_Type(Integer32):
    """Custom type sleAdvaLinkLength2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaLinkLength2_Type.__name__ = "Integer32"
_SleAdvaLinkLength2_Object = MibTableColumn
sleAdvaLinkLength2 = _SleAdvaLinkLength2_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 3),
    _SleAdvaLinkLength2_Type()
)
sleAdvaLinkLength2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLength2.setStatus("current")


class _SleAdvaLinkLength3_Type(Integer32):
    """Custom type sleAdvaLinkLength3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaLinkLength3_Type.__name__ = "Integer32"
_SleAdvaLinkLength3_Object = MibTableColumn
sleAdvaLinkLength3 = _SleAdvaLinkLength3_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 4),
    _SleAdvaLinkLength3_Type()
)
sleAdvaLinkLength3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLength3.setStatus("current")


class _SleAdvaLinkLength4_Type(Integer32):
    """Custom type sleAdvaLinkLength4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaLinkLength4_Type.__name__ = "Integer32"
_SleAdvaLinkLength4_Object = MibTableColumn
sleAdvaLinkLength4 = _SleAdvaLinkLength4_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 5),
    _SleAdvaLinkLength4_Type()
)
sleAdvaLinkLength4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLength4.setStatus("current")


class _SleAdvaLinkLengthCu_Type(Integer32):
    """Custom type sleAdvaLinkLengthCu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SleAdvaLinkLengthCu_Type.__name__ = "Integer32"
_SleAdvaLinkLengthCu_Object = MibTableColumn
sleAdvaLinkLengthCu = _SleAdvaLinkLengthCu_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 6),
    _SleAdvaLinkLengthCu_Type()
)
sleAdvaLinkLengthCu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLinkLengthCu.setStatus("current")


class _SleAdvaWaveLength_Type(Integer32):
    """Custom type sleAdvaWaveLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaWaveLength_Type.__name__ = "Integer32"
_SleAdvaWaveLength_Object = MibTableColumn
sleAdvaWaveLength = _SleAdvaWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 7),
    _SleAdvaWaveLength_Type()
)
sleAdvaWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaWaveLength.setStatus("current")


class _SleAdvaLaserBias_Type(Integer32):
    """Custom type sleAdvaLaserBias based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLaserBias_Type.__name__ = "Integer32"
_SleAdvaLaserBias_Object = MibTableColumn
sleAdvaLaserBias = _SleAdvaLaserBias_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 8),
    _SleAdvaLaserBias_Type()
)
sleAdvaLaserBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLaserBias.setStatus("current")


class _SleAdvaTransmitPower_Type(Integer32):
    """Custom type sleAdvaTransmitPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaTransmitPower_Type.__name__ = "Integer32"
_SleAdvaTransmitPower_Object = MibTableColumn
sleAdvaTransmitPower = _SleAdvaTransmitPower_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 9),
    _SleAdvaTransmitPower_Type()
)
sleAdvaTransmitPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaTransmitPower.setStatus("current")


class _SleAdvaReceivePower_Type(Integer32):
    """Custom type sleAdvaReceivePower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaReceivePower_Type.__name__ = "Integer32"
_SleAdvaReceivePower_Object = MibTableColumn
sleAdvaReceivePower = _SleAdvaReceivePower_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 10),
    _SleAdvaReceivePower_Type()
)
sleAdvaReceivePower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaReceivePower.setStatus("current")


class _SleAdvaLaserTxTemperature_Type(Integer32):
    """Custom type sleAdvaLaserTxTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLaserTxTemperature_Type.__name__ = "Integer32"
_SleAdvaLaserTxTemperature_Object = MibTableColumn
sleAdvaLaserTxTemperature = _SleAdvaLaserTxTemperature_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 1, 1, 11),
    _SleAdvaLaserTxTemperature_Type()
)
sleAdvaLaserTxTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLaserTxTemperature.setStatus("current")
_SleAdvaOpticalControl_ObjectIdentity = ObjectIdentity
sleAdvaOpticalControl = _SleAdvaOpticalControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2)
)


class _SleAdvaOpticalControlRequest_Type(Integer32):
    """Custom type sleAdvaOpticalControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("setAdvaOpticalAlarm", 1)
    )


_SleAdvaOpticalControlRequest_Type.__name__ = "Integer32"
_SleAdvaOpticalControlRequest_Object = MibScalar
sleAdvaOpticalControlRequest = _SleAdvaOpticalControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 1),
    _SleAdvaOpticalControlRequest_Type()
)
sleAdvaOpticalControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlRequest.setStatus("current")
_SleAdvaOpticalControlStatus_Type = SleControlStatusType
_SleAdvaOpticalControlStatus_Object = MibScalar
sleAdvaOpticalControlStatus = _SleAdvaOpticalControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 2),
    _SleAdvaOpticalControlStatus_Type()
)
sleAdvaOpticalControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlStatus.setStatus("current")
_SleAdvaOpticalControlTimer_Type = Gauge32
_SleAdvaOpticalControlTimer_Object = MibScalar
sleAdvaOpticalControlTimer = _SleAdvaOpticalControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 3),
    _SleAdvaOpticalControlTimer_Type()
)
sleAdvaOpticalControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlTimer.setStatus("current")
_SleAdvaOpticalControlTimeStamp_Type = TimeTicks
_SleAdvaOpticalControlTimeStamp_Object = MibScalar
sleAdvaOpticalControlTimeStamp = _SleAdvaOpticalControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 4),
    _SleAdvaOpticalControlTimeStamp_Type()
)
sleAdvaOpticalControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlTimeStamp.setStatus("current")
_SleAdvaOpticalControlReqResult_Type = SleControlRequestResultType
_SleAdvaOpticalControlReqResult_Object = MibScalar
sleAdvaOpticalControlReqResult = _SleAdvaOpticalControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 5),
    _SleAdvaOpticalControlReqResult_Type()
)
sleAdvaOpticalControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlReqResult.setStatus("current")


class _SleAdvaOpticalControlPortIndex_Type(Integer32):
    """Custom type sleAdvaOpticalControlPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleAdvaOpticalControlPortIndex_Type.__name__ = "Integer32"
_SleAdvaOpticalControlPortIndex_Object = MibScalar
sleAdvaOpticalControlPortIndex = _SleAdvaOpticalControlPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 6),
    _SleAdvaOpticalControlPortIndex_Type()
)
sleAdvaOpticalControlPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlPortIndex.setStatus("current")


class _SleAdvaOpticalControlRemInstance_Type(Integer32):
    """Custom type sleAdvaOpticalControlRemInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_SleAdvaOpticalControlRemInstance_Type.__name__ = "Integer32"
_SleAdvaOpticalControlRemInstance_Object = MibScalar
sleAdvaOpticalControlRemInstance = _SleAdvaOpticalControlRemInstance_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 7),
    _SleAdvaOpticalControlRemInstance_Type()
)
sleAdvaOpticalControlRemInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlRemInstance.setStatus("current")


class _SleAdvaOpticalControlThresholdLevel_Type(Integer32):
    """Custom type sleAdvaOpticalControlThresholdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaOpticalControlThresholdLevel_Type.__name__ = "Integer32"
_SleAdvaOpticalControlThresholdLevel_Object = MibScalar
sleAdvaOpticalControlThresholdLevel = _SleAdvaOpticalControlThresholdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 2, 8),
    _SleAdvaOpticalControlThresholdLevel_Type()
)
sleAdvaOpticalControlThresholdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOpticalControlThresholdLevel.setStatus("current")
_SleAdvaOpticalNotification_ObjectIdentity = ObjectIdentity
sleAdvaOpticalNotification = _SleAdvaOpticalNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 3)
)
_SleAdvaOam_ObjectIdentity = ObjectIdentity
sleAdvaOam = _SleAdvaOam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10)
)
_SleAdvaOamTable_Object = MibTable
sleAdvaOamTable = _SleAdvaOamTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1)
)
if mibBuilder.loadTexts:
    sleAdvaOamTable.setStatus("current")
_SleAdvaOamEntry_Object = MibTableRow
sleAdvaOamEntry = _SleAdvaOamEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1)
)
sleAdvaOamEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleAdvaRemInstance"),
)
if mibBuilder.loadTexts:
    sleAdvaOamEntry.setStatus("current")


class _SleAdvaAdminStatus_Type(Integer32):
    """Custom type sleAdvaAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleAdvaAdminStatus_Type.__name__ = "Integer32"
_SleAdvaAdminStatus_Object = MibTableColumn
sleAdvaAdminStatus = _SleAdvaAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 1),
    _SleAdvaAdminStatus_Type()
)
sleAdvaAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaAdminStatus.setStatus("current")


class _SleAdvaMode_Type(Integer32):
    """Custom type sleAdvaMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("passive", 0),
          ("active", 1))
    )


_SleAdvaMode_Type.__name__ = "Integer32"
_SleAdvaMode_Object = MibTableColumn
sleAdvaMode = _SleAdvaMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 2),
    _SleAdvaMode_Type()
)
sleAdvaMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaMode.setStatus("current")
_SleAdvaRemMACAddress_Type = OctetString
_SleAdvaRemMACAddress_Object = MibTableColumn
sleAdvaRemMACAddress = _SleAdvaRemMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 3),
    _SleAdvaRemMACAddress_Type()
)
sleAdvaRemMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemMACAddress.setStatus("current")


class _SleAdvaRemConfig_Type(Bits):
    """Custom type sleAdvaRemConfig based on Bits"""
    namedValues = NamedValues(
        *(("unidirSupport", 0),
          ("loopbackSupport", 1),
          ("linkEvents", 2),
          ("variableRetrieval", 3),
          ("orgSpecific", 4),
          ("orgSpecificEvents", 5),
          ("orgSpecificInfoTLV", 6))
    )

_SleAdvaRemConfig_Type.__name__ = "Bits"
_SleAdvaRemConfig_Object = MibTableColumn
sleAdvaRemConfig = _SleAdvaRemConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 4),
    _SleAdvaRemConfig_Type()
)
sleAdvaRemConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemConfig.setStatus("current")


class _SleAdvaRemPduConfig_Type(Integer32):
    """Custom type sleAdvaRemPduConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaRemPduConfig_Type.__name__ = "Integer32"
_SleAdvaRemPduConfig_Object = MibTableColumn
sleAdvaRemPduConfig = _SleAdvaRemPduConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 5),
    _SleAdvaRemPduConfig_Type()
)
sleAdvaRemPduConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemPduConfig.setStatus("current")


class _SleAdvaLocFlags_Type(Bits):
    """Custom type sleAdvaLocFlags based on Bits"""
    namedValues = NamedValues(
        *(("linkFault", 0),
          ("dyingGasp", 1),
          ("criticalEvent", 2),
          ("localStableDiscovering", 3),
          ("localStable", 4),
          ("remoteStableDiscovering", 5),
          ("remoteStable", 6))
    )

_SleAdvaLocFlags_Type.__name__ = "Bits"
_SleAdvaLocFlags_Object = MibTableColumn
sleAdvaLocFlags = _SleAdvaLocFlags_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 6),
    _SleAdvaLocFlags_Type()
)
sleAdvaLocFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocFlags.setStatus("current")


class _SleAdvaRemFlags_Type(Bits):
    """Custom type sleAdvaRemFlags based on Bits"""
    namedValues = NamedValues(
        *(("linkFault", 0),
          ("dyingGasp", 1),
          ("criticalEvent", 2),
          ("localStableDiscovering", 3),
          ("localStable", 4),
          ("remoteStableDiscovering", 5),
          ("remoteStable", 6))
    )

_SleAdvaRemFlags_Type.__name__ = "Bits"
_SleAdvaRemFlags_Object = MibTableColumn
sleAdvaRemFlags = _SleAdvaRemFlags_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 7),
    _SleAdvaRemFlags_Type()
)
sleAdvaRemFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemFlags.setStatus("current")


class _SleAdvaRemState_Type(Bits):
    """Custom type sleAdvaRemState based on Bits"""
    namedValues = NamedValues(
        *(("reserved", 0),
          ("parserAction1", 1),
          ("parserAction2", 2),
          ("muxAction", 3))
    )

_SleAdvaRemState_Type.__name__ = "Bits"
_SleAdvaRemState_Object = MibTableColumn
sleAdvaRemState = _SleAdvaRemState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 8),
    _SleAdvaRemState_Type()
)
sleAdvaRemState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemState.setStatus("current")


class _SleAdvaRemVendorOUI_Type(Integer32):
    """Custom type sleAdvaRemVendorOUI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaRemVendorOUI_Type.__name__ = "Integer32"
_SleAdvaRemVendorOUI_Object = MibTableColumn
sleAdvaRemVendorOUI = _SleAdvaRemVendorOUI_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 9),
    _SleAdvaRemVendorOUI_Type()
)
sleAdvaRemVendorOUI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemVendorOUI.setStatus("current")


class _SleAdvaRemDeviceNumber_Type(Integer32):
    """Custom type sleAdvaRemDeviceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaRemDeviceNumber_Type.__name__ = "Integer32"
_SleAdvaRemDeviceNumber_Object = MibTableColumn
sleAdvaRemDeviceNumber = _SleAdvaRemDeviceNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 10),
    _SleAdvaRemDeviceNumber_Type()
)
sleAdvaRemDeviceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemDeviceNumber.setStatus("current")


class _SleAdvaRemVendorVersion_Type(Integer32):
    """Custom type sleAdvaRemVendorVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaRemVendorVersion_Type.__name__ = "Integer32"
_SleAdvaRemVendorVersion_Object = MibTableColumn
sleAdvaRemVendorVersion = _SleAdvaRemVendorVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 11),
    _SleAdvaRemVendorVersion_Type()
)
sleAdvaRemVendorVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemVendorVersion.setStatus("current")


class _SleAdvaLocErrSymbolPeriodEventConfig_Type(Integer32):
    """Custom type sleAdvaLocErrSymbolPeriodEventConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLocErrSymbolPeriodEventConfig_Type.__name__ = "Integer32"
_SleAdvaLocErrSymbolPeriodEventConfig_Object = MibTableColumn
sleAdvaLocErrSymbolPeriodEventConfig = _SleAdvaLocErrSymbolPeriodEventConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 12),
    _SleAdvaLocErrSymbolPeriodEventConfig_Type()
)
sleAdvaLocErrSymbolPeriodEventConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrSymbolPeriodEventConfig.setStatus("current")


class _SleAdvaLocErrFrameEventConfig_Type(Integer32):
    """Custom type sleAdvaLocErrFrameEventConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLocErrFrameEventConfig_Type.__name__ = "Integer32"
_SleAdvaLocErrFrameEventConfig_Object = MibTableColumn
sleAdvaLocErrFrameEventConfig = _SleAdvaLocErrFrameEventConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 13),
    _SleAdvaLocErrFrameEventConfig_Type()
)
sleAdvaLocErrFrameEventConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFrameEventConfig.setStatus("current")


class _SleAdvaLocErrFramePeriodEventConfig_Type(Integer32):
    """Custom type sleAdvaLocErrFramePeriodEventConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLocErrFramePeriodEventConfig_Type.__name__ = "Integer32"
_SleAdvaLocErrFramePeriodEventConfig_Object = MibTableColumn
sleAdvaLocErrFramePeriodEventConfig = _SleAdvaLocErrFramePeriodEventConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 14),
    _SleAdvaLocErrFramePeriodEventConfig_Type()
)
sleAdvaLocErrFramePeriodEventConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFramePeriodEventConfig.setStatus("current")


class _SleAdvaLocErrFrameSecsSummaryEventConfig_Type(Integer32):
    """Custom type sleAdvaLocErrFrameSecsSummaryEventConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleAdvaLocErrFrameSecsSummaryEventConfig_Type.__name__ = "Integer32"
_SleAdvaLocErrFrameSecsSummaryEventConfig_Object = MibTableColumn
sleAdvaLocErrFrameSecsSummaryEventConfig = _SleAdvaLocErrFrameSecsSummaryEventConfig_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 15),
    _SleAdvaLocErrFrameSecsSummaryEventConfig_Type()
)
sleAdvaLocErrFrameSecsSummaryEventConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFrameSecsSummaryEventConfig.setStatus("current")
_SleAdvaPDUsTx_Type = Integer32
_SleAdvaPDUsTx_Object = MibTableColumn
sleAdvaPDUsTx = _SleAdvaPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 16),
    _SleAdvaPDUsTx_Type()
)
sleAdvaPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPDUsTx.setStatus("current")
_SleAdvaPDUsRx_Type = Integer32
_SleAdvaPDUsRx_Object = MibTableColumn
sleAdvaPDUsRx = _SleAdvaPDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 17),
    _SleAdvaPDUsRx_Type()
)
sleAdvaPDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaPDUsRx.setStatus("current")
_SleAdvaUnsupportedCodesRx_Type = Integer32
_SleAdvaUnsupportedCodesRx_Object = MibTableColumn
sleAdvaUnsupportedCodesRx = _SleAdvaUnsupportedCodesRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 18),
    _SleAdvaUnsupportedCodesRx_Type()
)
sleAdvaUnsupportedCodesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaUnsupportedCodesRx.setStatus("current")
_SleAdvaInfoPDUsTx_Type = Integer32
_SleAdvaInfoPDUsTx_Object = MibTableColumn
sleAdvaInfoPDUsTx = _SleAdvaInfoPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 19),
    _SleAdvaInfoPDUsTx_Type()
)
sleAdvaInfoPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaInfoPDUsTx.setStatus("current")
_SleAdvaInfoPDUsRx_Type = Integer32
_SleAdvaInfoPDUsRx_Object = MibTableColumn
sleAdvaInfoPDUsRx = _SleAdvaInfoPDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 20),
    _SleAdvaInfoPDUsRx_Type()
)
sleAdvaInfoPDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaInfoPDUsRx.setStatus("current")
_SleAdvaEventNotificationPDUsTx_Type = Integer32
_SleAdvaEventNotificationPDUsTx_Object = MibTableColumn
sleAdvaEventNotificationPDUsTx = _SleAdvaEventNotificationPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 21),
    _SleAdvaEventNotificationPDUsTx_Type()
)
sleAdvaEventNotificationPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaEventNotificationPDUsTx.setStatus("current")
_SleAdvaUniqueEventNotificationPDUsTx_Type = Integer32
_SleAdvaUniqueEventNotificationPDUsTx_Object = MibTableColumn
sleAdvaUniqueEventNotificationPDUsTx = _SleAdvaUniqueEventNotificationPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 22),
    _SleAdvaUniqueEventNotificationPDUsTx_Type()
)
sleAdvaUniqueEventNotificationPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaUniqueEventNotificationPDUsTx.setStatus("current")
_SleAdvaDupEventNotificationPDUsTx_Type = Integer32
_SleAdvaDupEventNotificationPDUsTx_Object = MibTableColumn
sleAdvaDupEventNotificationPDUsTx = _SleAdvaDupEventNotificationPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 23),
    _SleAdvaDupEventNotificationPDUsTx_Type()
)
sleAdvaDupEventNotificationPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaDupEventNotificationPDUsTx.setStatus("current")
_SleAdvaLoopbackControlPDUsTx_Type = Integer32
_SleAdvaLoopbackControlPDUsTx_Object = MibTableColumn
sleAdvaLoopbackControlPDUsTx = _SleAdvaLoopbackControlPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 24),
    _SleAdvaLoopbackControlPDUsTx_Type()
)
sleAdvaLoopbackControlPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLoopbackControlPDUsTx.setStatus("current")
_SleAdvaLoopbackControlPDUsRx_Type = Integer32
_SleAdvaLoopbackControlPDUsRx_Object = MibTableColumn
sleAdvaLoopbackControlPDUsRx = _SleAdvaLoopbackControlPDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 25),
    _SleAdvaLoopbackControlPDUsRx_Type()
)
sleAdvaLoopbackControlPDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLoopbackControlPDUsRx.setStatus("current")
_SleAdvaVariableRequestPDUsTx_Type = Integer32
_SleAdvaVariableRequestPDUsTx_Object = MibTableColumn
sleAdvaVariableRequestPDUsTx = _SleAdvaVariableRequestPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 26),
    _SleAdvaVariableRequestPDUsTx_Type()
)
sleAdvaVariableRequestPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVariableRequestPDUsTx.setStatus("current")
_SleAdvaVariableRequestPDUsRx_Type = Integer32
_SleAdvaVariableRequestPDUsRx_Object = MibTableColumn
sleAdvaVariableRequestPDUsRx = _SleAdvaVariableRequestPDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 27),
    _SleAdvaVariableRequestPDUsRx_Type()
)
sleAdvaVariableRequestPDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVariableRequestPDUsRx.setStatus("current")
_SleAdvaVariableResponsePDUsTx_Type = Integer32
_SleAdvaVariableResponsePDUsTx_Object = MibTableColumn
sleAdvaVariableResponsePDUsTx = _SleAdvaVariableResponsePDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 28),
    _SleAdvaVariableResponsePDUsTx_Type()
)
sleAdvaVariableResponsePDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVariableResponsePDUsTx.setStatus("current")
_SleAdvaVariableResponsePDUsRx_Type = Integer32
_SleAdvaVariableResponsePDUsRx_Object = MibTableColumn
sleAdvaVariableResponsePDUsRx = _SleAdvaVariableResponsePDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 29),
    _SleAdvaVariableResponsePDUsRx_Type()
)
sleAdvaVariableResponsePDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVariableResponsePDUsRx.setStatus("current")
_SleAdvaVendorPDUsTx_Type = Integer32
_SleAdvaVendorPDUsTx_Object = MibTableColumn
sleAdvaVendorPDUsTx = _SleAdvaVendorPDUsTx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 30),
    _SleAdvaVendorPDUsTx_Type()
)
sleAdvaVendorPDUsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVendorPDUsTx.setStatus("current")
_SleAdvaVendorPDUsRx_Type = Integer32
_SleAdvaVendorPDUsRx_Object = MibTableColumn
sleAdvaVendorPDUsRx = _SleAdvaVendorPDUsRx_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 31),
    _SleAdvaVendorPDUsRx_Type()
)
sleAdvaVendorPDUsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaVendorPDUsRx.setStatus("current")
_SleAdvaRemFramesLostDuetoOAMErr_Type = Integer32
_SleAdvaRemFramesLostDuetoOAMErr_Object = MibTableColumn
sleAdvaRemFramesLostDuetoOAMErr = _SleAdvaRemFramesLostDuetoOAMErr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 32),
    _SleAdvaRemFramesLostDuetoOAMErr_Type()
)
sleAdvaRemFramesLostDuetoOAMErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemFramesLostDuetoOAMErr.setStatus("current")
_SleAdvaLocErrSymbolPeriodEvent_Type = Integer32
_SleAdvaLocErrSymbolPeriodEvent_Object = MibTableColumn
sleAdvaLocErrSymbolPeriodEvent = _SleAdvaLocErrSymbolPeriodEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 33),
    _SleAdvaLocErrSymbolPeriodEvent_Type()
)
sleAdvaLocErrSymbolPeriodEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrSymbolPeriodEvent.setStatus("current")
_SleAdvaLocErrFrameSecsEvent_Type = Integer32
_SleAdvaLocErrFrameSecsEvent_Object = MibTableColumn
sleAdvaLocErrFrameSecsEvent = _SleAdvaLocErrFrameSecsEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 34),
    _SleAdvaLocErrFrameSecsEvent_Type()
)
sleAdvaLocErrFrameSecsEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFrameSecsEvent.setStatus("current")
_SleAdvaLocErrFramePeriodEvent_Type = Integer32
_SleAdvaLocErrFramePeriodEvent_Object = MibTableColumn
sleAdvaLocErrFramePeriodEvent = _SleAdvaLocErrFramePeriodEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 35),
    _SleAdvaLocErrFramePeriodEvent_Type()
)
sleAdvaLocErrFramePeriodEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFramePeriodEvent.setStatus("current")
_SleAdvaLocErrFrameSecsSummaryEvent_Type = Integer32
_SleAdvaLocErrFrameSecsSummaryEvent_Object = MibTableColumn
sleAdvaLocErrFrameSecsSummaryEvent = _SleAdvaLocErrFrameSecsSummaryEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 36),
    _SleAdvaLocErrFrameSecsSummaryEvent_Type()
)
sleAdvaLocErrFrameSecsSummaryEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaLocErrFrameSecsSummaryEvent.setStatus("current")
_SleAdvaRemErrSymbolPeriodEvent_Type = Integer32
_SleAdvaRemErrSymbolPeriodEvent_Object = MibTableColumn
sleAdvaRemErrSymbolPeriodEvent = _SleAdvaRemErrSymbolPeriodEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 37),
    _SleAdvaRemErrSymbolPeriodEvent_Type()
)
sleAdvaRemErrSymbolPeriodEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemErrSymbolPeriodEvent.setStatus("current")
_SleAdvaRemErrFrameSecsEvent_Type = Integer32
_SleAdvaRemErrFrameSecsEvent_Object = MibTableColumn
sleAdvaRemErrFrameSecsEvent = _SleAdvaRemErrFrameSecsEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 38),
    _SleAdvaRemErrFrameSecsEvent_Type()
)
sleAdvaRemErrFrameSecsEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemErrFrameSecsEvent.setStatus("current")
_SleAdvaRemoteErrorFramePeriodEvent_Type = Integer32
_SleAdvaRemoteErrorFramePeriodEvent_Object = MibTableColumn
sleAdvaRemoteErrorFramePeriodEvent = _SleAdvaRemoteErrorFramePeriodEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 39),
    _SleAdvaRemoteErrorFramePeriodEvent_Type()
)
sleAdvaRemoteErrorFramePeriodEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemoteErrorFramePeriodEvent.setStatus("current")
_SleAdvaRemoteErrorFrameSecsSummaryEvent_Type = Integer32
_SleAdvaRemoteErrorFrameSecsSummaryEvent_Object = MibTableColumn
sleAdvaRemoteErrorFrameSecsSummaryEvent = _SleAdvaRemoteErrorFrameSecsSummaryEvent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 1, 1, 40),
    _SleAdvaRemoteErrorFrameSecsSummaryEvent_Type()
)
sleAdvaRemoteErrorFrameSecsSummaryEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaRemoteErrorFrameSecsSummaryEvent.setStatus("current")
_SleAdvaOamControl_ObjectIdentity = ObjectIdentity
sleAdvaOamControl = _SleAdvaOamControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2)
)


class _SleAdvaOamControlRequest_Type(Integer32):
    """Custom type sleAdvaOamControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("setAdvaOamProfile", 1)
    )


_SleAdvaOamControlRequest_Type.__name__ = "Integer32"
_SleAdvaOamControlRequest_Object = MibScalar
sleAdvaOamControlRequest = _SleAdvaOamControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 1),
    _SleAdvaOamControlRequest_Type()
)
sleAdvaOamControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlRequest.setStatus("current")
_SleAdvaOamControlStatus_Type = SleControlStatusType
_SleAdvaOamControlStatus_Object = MibScalar
sleAdvaOamControlStatus = _SleAdvaOamControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 2),
    _SleAdvaOamControlStatus_Type()
)
sleAdvaOamControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAdvaOamControlStatus.setStatus("current")
_SleAdvaOamControlTimer_Type = Gauge32
_SleAdvaOamControlTimer_Object = MibScalar
sleAdvaOamControlTimer = _SleAdvaOamControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 3),
    _SleAdvaOamControlTimer_Type()
)
sleAdvaOamControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlTimer.setStatus("current")
_SleAdvaOamControlTimeStamp_Type = TimeTicks
_SleAdvaOamControlTimeStamp_Object = MibScalar
sleAdvaOamControlTimeStamp = _SleAdvaOamControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 4),
    _SleAdvaOamControlTimeStamp_Type()
)
sleAdvaOamControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlTimeStamp.setStatus("current")
_SleAdvaOamControlReqResult_Type = SleControlRequestResultType
_SleAdvaOamControlReqResult_Object = MibScalar
sleAdvaOamControlReqResult = _SleAdvaOamControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 5),
    _SleAdvaOamControlReqResult_Type()
)
sleAdvaOamControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlReqResult.setStatus("current")


class _SleAdvaOamControlPortIndex_Type(Integer32):
    """Custom type sleAdvaOamControlPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleAdvaOamControlPortIndex_Type.__name__ = "Integer32"
_SleAdvaOamControlPortIndex_Object = MibScalar
sleAdvaOamControlPortIndex = _SleAdvaOamControlPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 6),
    _SleAdvaOamControlPortIndex_Type()
)
sleAdvaOamControlPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlPortIndex.setStatus("current")


class _SleAdvaOamControlRemInstance_Type(Integer32):
    """Custom type sleAdvaOamControlRemInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SleAdvaOamControlRemInstance_Type.__name__ = "Integer32"
_SleAdvaOamControlRemInstance_Object = MibScalar
sleAdvaOamControlRemInstance = _SleAdvaOamControlRemInstance_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 7),
    _SleAdvaOamControlRemInstance_Type()
)
sleAdvaOamControlRemInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlRemInstance.setStatus("current")


class _SleAdvaOamControlAdminStatus_Type(Integer32):
    """Custom type sleAdvaOamControlAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleAdvaOamControlAdminStatus_Type.__name__ = "Integer32"
_SleAdvaOamControlAdminStatus_Object = MibScalar
sleAdvaOamControlAdminStatus = _SleAdvaOamControlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 8),
    _SleAdvaOamControlAdminStatus_Type()
)
sleAdvaOamControlAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlAdminStatus.setStatus("current")


class _SleAdvaOamControlMode_Type(Integer32):
    """Custom type sleAdvaOamControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("passive", 0),
          ("active", 1))
    )


_SleAdvaOamControlMode_Type.__name__ = "Integer32"
_SleAdvaOamControlMode_Object = MibScalar
sleAdvaOamControlMode = _SleAdvaOamControlMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 2, 9),
    _SleAdvaOamControlMode_Type()
)
sleAdvaOamControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAdvaOamControlMode.setStatus("current")
_SleAdvaOamNotification_ObjectIdentity = ObjectIdentity
sleAdvaOamNotification = _SleAdvaOamNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 3)
)
_SleAlarmLED_ObjectIdentity = ObjectIdentity
sleAlarmLED = _SleAlarmLED_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11)
)
_SleAlarmLEDTable_Object = MibTable
sleAlarmLEDTable = _SleAlarmLEDTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 1)
)
if mibBuilder.loadTexts:
    sleAlarmLEDTable.setStatus("current")
_SleAlarmLEDEntry_Object = MibTableRow
sleAlarmLEDEntry = _SleAlarmLEDEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 1, 1)
)
sleAlarmLEDEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmLEDType"),
)
if mibBuilder.loadTexts:
    sleAlarmLEDEntry.setStatus("current")


class _SleAlarmLEDType_Type(Integer32):
    """Custom type sleAlarmLEDType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("fanFail", 1),
          ("fanRemove", 2),
          ("memoryOver", 3),
          ("moduleRemove", 4),
          ("portLinkDown", 5),
          ("portRemove", 6),
          ("portThreadOver", 7),
          ("powerFail", 8),
          ("powerRemove", 9),
          ("temperatureHigh", 10),
          ("slotRemove", 11),
          ("ponLOS", 12))
    )


_SleAlarmLEDType_Type.__name__ = "Integer32"
_SleAlarmLEDType_Object = MibTableColumn
sleAlarmLEDType = _SleAlarmLEDType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 1, 1, 1),
    _SleAlarmLEDType_Type()
)
sleAlarmLEDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDType.setStatus("current")


class _SleAlarmLEDStatus_Type(Integer32):
    """Custom type sleAlarmLEDStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2),
          ("unknown", 255))
    )


_SleAlarmLEDStatus_Type.__name__ = "Integer32"
_SleAlarmLEDStatus_Object = MibTableColumn
sleAlarmLEDStatus = _SleAlarmLEDStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 1, 1, 2),
    _SleAlarmLEDStatus_Type()
)
sleAlarmLEDStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDStatus.setStatus("current")


class _SleAlarmLEDLevel_Type(Integer32):
    """Custom type sleAlarmLEDLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("unrated", 255))
    )


_SleAlarmLEDLevel_Type.__name__ = "Integer32"
_SleAlarmLEDLevel_Object = MibTableColumn
sleAlarmLEDLevel = _SleAlarmLEDLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 1, 1, 3),
    _SleAlarmLEDLevel_Type()
)
sleAlarmLEDLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDLevel.setStatus("current")
_SleAlarmLEDLevelTable_Object = MibTable
sleAlarmLEDLevelTable = _SleAlarmLEDLevelTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 2)
)
if mibBuilder.loadTexts:
    sleAlarmLEDLevelTable.setStatus("current")
_SleAlarmLEDLevelEntry_Object = MibTableRow
sleAlarmLEDLevelEntry = _SleAlarmLEDLevelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 2, 1)
)
sleAlarmLEDLevelEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleAlarmLEDLevelIndex"),
)
if mibBuilder.loadTexts:
    sleAlarmLEDLevelEntry.setStatus("current")


class _SleAlarmLEDLevelIndex_Type(Integer32):
    """Custom type sleAlarmLEDLevelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("error", 4),
          ("unrated", 255))
    )


_SleAlarmLEDLevelIndex_Type.__name__ = "Integer32"
_SleAlarmLEDLevelIndex_Object = MibTableColumn
sleAlarmLEDLevelIndex = _SleAlarmLEDLevelIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 2, 1, 1),
    _SleAlarmLEDLevelIndex_Type()
)
sleAlarmLEDLevelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDLevelIndex.setStatus("current")


class _SleAlarmLEDLevelBlock_Type(Integer32):
    """Custom type sleAlarmLEDLevelBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("unblock", 1),
          ("block", 2),
          ("unknown", 255))
    )


_SleAlarmLEDLevelBlock_Type.__name__ = "Integer32"
_SleAlarmLEDLevelBlock_Object = MibTableColumn
sleAlarmLEDLevelBlock = _SleAlarmLEDLevelBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 2, 1, 2),
    _SleAlarmLEDLevelBlock_Type()
)
sleAlarmLEDLevelBlock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDLevelBlock.setStatus("current")


class _SleAlarmLEDLevelOperStatus_Type(Integer32):
    """Custom type sleAlarmLEDLevelOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("off", 2))
    )


_SleAlarmLEDLevelOperStatus_Type.__name__ = "Integer32"
_SleAlarmLEDLevelOperStatus_Object = MibTableColumn
sleAlarmLEDLevelOperStatus = _SleAlarmLEDLevelOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 2, 1, 3),
    _SleAlarmLEDLevelOperStatus_Type()
)
sleAlarmLEDLevelOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDLevelOperStatus.setStatus("current")
_SleAlarmLEDControl_ObjectIdentity = ObjectIdentity
sleAlarmLEDControl = _SleAlarmLEDControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3)
)


class _SleAlarmLEDControlRequest_Type(Integer32):
    """Custom type sleAlarmLEDControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alarmLedOff", 1),
          ("setAlarmLedLevel", 2),
          ("clearAlarmLed", 3),
          ("alarmLedBlock", 4))
    )


_SleAlarmLEDControlRequest_Type.__name__ = "Integer32"
_SleAlarmLEDControlRequest_Object = MibScalar
sleAlarmLEDControlRequest = _SleAlarmLEDControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 1),
    _SleAlarmLEDControlRequest_Type()
)
sleAlarmLEDControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmLEDControlRequest.setStatus("current")
_SleAlarmLEDControlStatus_Type = SleControlStatusType
_SleAlarmLEDControlStatus_Object = MibScalar
sleAlarmLEDControlStatus = _SleAlarmLEDControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 2),
    _SleAlarmLEDControlStatus_Type()
)
sleAlarmLEDControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDControlStatus.setStatus("current")
_SleAlarmLEDControlTimer_Type = Gauge32
_SleAlarmLEDControlTimer_Object = MibScalar
sleAlarmLEDControlTimer = _SleAlarmLEDControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 3),
    _SleAlarmLEDControlTimer_Type()
)
sleAlarmLEDControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmLEDControlTimer.setStatus("current")
_SleAlarmLEDControlTimeStamp_Type = TimeTicks
_SleAlarmLEDControlTimeStamp_Object = MibScalar
sleAlarmLEDControlTimeStamp = _SleAlarmLEDControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 4),
    _SleAlarmLEDControlTimeStamp_Type()
)
sleAlarmLEDControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDControlTimeStamp.setStatus("current")
_SleAlarmLEDControlReqResult_Type = SleControlRequestResultType
_SleAlarmLEDControlReqResult_Object = MibScalar
sleAlarmLEDControlReqResult = _SleAlarmLEDControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 5),
    _SleAlarmLEDControlReqResult_Type()
)
sleAlarmLEDControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleAlarmLEDControlReqResult.setStatus("current")


class _SleAlarmLEDControlType_Type(Integer32):
    """Custom type sleAlarmLEDControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("fanFail", 1),
          ("fanRemove", 2),
          ("memoryOver", 3),
          ("moduleRemove", 4),
          ("portLinkDown", 5),
          ("portRemove", 6),
          ("portThreadOver", 7),
          ("powerFail", 8),
          ("powerRemove", 9),
          ("temperatureHigh", 10),
          ("slotRemove", 11),
          ("ponLOS", 12))
    )


_SleAlarmLEDControlType_Type.__name__ = "Integer32"
_SleAlarmLEDControlType_Object = MibScalar
sleAlarmLEDControlType = _SleAlarmLEDControlType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 6),
    _SleAlarmLEDControlType_Type()
)
sleAlarmLEDControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmLEDControlType.setStatus("current")


class _SleAlarmLEDControlLevel_Type(Integer32):
    """Custom type sleAlarmLEDControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              254)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("all", 254))
    )


_SleAlarmLEDControlLevel_Type.__name__ = "Integer32"
_SleAlarmLEDControlLevel_Object = MibScalar
sleAlarmLEDControlLevel = _SleAlarmLEDControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 7),
    _SleAlarmLEDControlLevel_Type()
)
sleAlarmLEDControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmLEDControlLevel.setStatus("current")


class _SleAlarmLEDControlBlock_Type(Integer32):
    """Custom type sleAlarmLEDControlBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unblock", 1),
          ("block", 2))
    )


_SleAlarmLEDControlBlock_Type.__name__ = "Integer32"
_SleAlarmLEDControlBlock_Object = MibScalar
sleAlarmLEDControlBlock = _SleAlarmLEDControlBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 3, 8),
    _SleAlarmLEDControlBlock_Type()
)
sleAlarmLEDControlBlock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleAlarmLEDControlBlock.setStatus("current")
_SleAlarmLEDNotification_ObjectIdentity = ObjectIdentity
sleAlarmLEDNotification = _SleAlarmLEDNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 4)
)
_SleY1731Oam_ObjectIdentity = ObjectIdentity
sleY1731Oam = _SleY1731Oam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12)
)
_SleY1731Base_ObjectIdentity = ObjectIdentity
sleY1731Base = _SleY1731Base_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1)
)
_SleY1731BaseGroup_ObjectIdentity = ObjectIdentity
sleY1731BaseGroup = _SleY1731BaseGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1)
)


class _SleY1731Enable_Type(Integer32):
    """Custom type sleY1731Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731Enable_Type.__name__ = "Integer32"
_SleY1731Enable_Object = MibScalar
sleY1731Enable = _SleY1731Enable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 1),
    _SleY1731Enable_Type()
)
sleY1731Enable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731Enable.setStatus("current")


class _SleY1731TrunkEnable_Type(Integer32):
    """Custom type sleY1731TrunkEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731TrunkEnable_Type.__name__ = "Integer32"
_SleY1731TrunkEnable_Object = MibScalar
sleY1731TrunkEnable = _SleY1731TrunkEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 2),
    _SleY1731TrunkEnable_Type()
)
sleY1731TrunkEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731TrunkEnable.setStatus("current")


class _SleY1731LtrCacheHoldTime_Type(Integer32):
    """Custom type sleY1731LtrCacheHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LtrCacheHoldTime_Type.__name__ = "Integer32"
_SleY1731LtrCacheHoldTime_Object = MibScalar
sleY1731LtrCacheHoldTime = _SleY1731LtrCacheHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 3),
    _SleY1731LtrCacheHoldTime_Type()
)
sleY1731LtrCacheHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrCacheHoldTime.setStatus("current")


class _SleY1731LtrCacheSize_Type(Integer32):
    """Custom type sleY1731LtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SleY1731LtrCacheSize_Type.__name__ = "Integer32"
_SleY1731LtrCacheSize_Object = MibScalar
sleY1731LtrCacheSize = _SleY1731LtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 4),
    _SleY1731LtrCacheSize_Type()
)
sleY1731LtrCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrCacheSize.setStatus("current")


class _SleY1731SnmpServerTraps_Type(Bits):
    """Custom type sleY1731SnmpServerTraps based on Bits"""
    namedValues = NamedValues(
        *(("rdi", 0),
          ("loc", 1),
          ("unp", 2),
          ("unm", 3),
          ("mmg", 4),
          ("unl", 5),
          ("ais", 6),
          ("lck", 7))
    )

_SleY1731SnmpServerTraps_Type.__name__ = "Bits"
_SleY1731SnmpServerTraps_Object = MibScalar
sleY1731SnmpServerTraps = _SleY1731SnmpServerTraps_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 5),
    _SleY1731SnmpServerTraps_Type()
)
sleY1731SnmpServerTraps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731SnmpServerTraps.setStatus("current")


class _SleY1731XcheckStartDelay_Type(Integer32):
    """Custom type sleY1731XcheckStartDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731XcheckStartDelay_Type.__name__ = "Integer32"
_SleY1731XcheckStartDelay_Object = MibScalar
sleY1731XcheckStartDelay = _SleY1731XcheckStartDelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 6),
    _SleY1731XcheckStartDelay_Type()
)
sleY1731XcheckStartDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckStartDelay.setStatus("current")


class _SleY1731DefaultMegLevel_Type(Integer32):
    """Custom type sleY1731DefaultMegLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731DefaultMegLevel_Type.__name__ = "Integer32"
_SleY1731DefaultMegLevel_Object = MibScalar
sleY1731DefaultMegLevel = _SleY1731DefaultMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 7),
    _SleY1731DefaultMegLevel_Type()
)
sleY1731DefaultMegLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731DefaultMegLevel.setStatus("current")


class _SleY1731DefaultMegMhfCreation_Type(Integer32):
    """Custom type sleY1731DefaultMegMhfCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("default", 1),
          ("explicit", 2))
    )


_SleY1731DefaultMegMhfCreation_Type.__name__ = "Integer32"
_SleY1731DefaultMegMhfCreation_Object = MibScalar
sleY1731DefaultMegMhfCreation = _SleY1731DefaultMegMhfCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 8),
    _SleY1731DefaultMegMhfCreation_Type()
)
sleY1731DefaultMegMhfCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731DefaultMegMhfCreation.setStatus("current")


class _SleY1731PduToCfm_Type(Integer32):
    """Custom type sleY1731PduToCfm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731PduToCfm_Type.__name__ = "Integer32"
_SleY1731PduToCfm_Object = MibScalar
sleY1731PduToCfm = _SleY1731PduToCfm_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 9),
    _SleY1731PduToCfm_Type()
)
sleY1731PduToCfm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731PduToCfm.setStatus("current")


class _SleY1731DedicatedVlan_Type(Integer32):
    """Custom type sleY1731DedicatedVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731DedicatedVlan_Type.__name__ = "Integer32"
_SleY1731DedicatedVlan_Object = MibScalar
sleY1731DedicatedVlan = _SleY1731DedicatedVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 10),
    _SleY1731DedicatedVlan_Type()
)
sleY1731DedicatedVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731DedicatedVlan.setStatus("current")


class _SleY1731RmepCreation_Type(Integer32):
    """Custom type sleY1731RmepCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("static", 2))
    )


_SleY1731RmepCreation_Type.__name__ = "Integer32"
_SleY1731RmepCreation_Object = MibScalar
sleY1731RmepCreation = _SleY1731RmepCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 11),
    _SleY1731RmepCreation_Type()
)
sleY1731RmepCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepCreation.setStatus("current")


class _SleY1731CCIgnoreDefect_Type(Integer32):
    """Custom type sleY1731CCIgnoreDefect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731CCIgnoreDefect_Type.__name__ = "Integer32"
_SleY1731CCIgnoreDefect_Object = MibScalar
sleY1731CCIgnoreDefect = _SleY1731CCIgnoreDefect_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 12),
    _SleY1731CCIgnoreDefect_Type()
)
sleY1731CCIgnoreDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731CCIgnoreDefect.setStatus("current")


class _SleY1731RapsFloodingBlock_Type(Integer32):
    """Custom type sleY1731RapsFloodingBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731RapsFloodingBlock_Type.__name__ = "Integer32"
_SleY1731RapsFloodingBlock_Object = MibScalar
sleY1731RapsFloodingBlock = _SleY1731RapsFloodingBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 13),
    _SleY1731RapsFloodingBlock_Type()
)
sleY1731RapsFloodingBlock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RapsFloodingBlock.setStatus("current")


class _SleY1731TlvPermission_Type(Integer32):
    """Custom type sleY1731TlvPermission based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("chassis", 2))
    )


_SleY1731TlvPermission_Type.__name__ = "Integer32"
_SleY1731TlvPermission_Object = MibScalar
sleY1731TlvPermission = _SleY1731TlvPermission_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 1, 14),
    _SleY1731TlvPermission_Type()
)
sleY1731TlvPermission.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731TlvPermission.setStatus("current")
_SleY1731BaseControl_ObjectIdentity = ObjectIdentity
sleY1731BaseControl = _SleY1731BaseControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2)
)


class _SleY1731BaseControlRequest_Type(Integer32):
    """Custom type sleY1731BaseControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("setY1731Enable", 1),
          ("setY1731TrunkEnable", 2),
          ("setY1731LtrCacheProfile", 3),
          ("setY1731SnmpProfile", 4),
          ("setY1731XcheckProfile", 5),
          ("setY1731DefaultMegProfile", 6),
          ("setY1731PduToCfm", 7),
          ("setY1731DedicatedVlan", 8),
          ("destroyMipCcdb", 9),
          ("destroyLtrCache", 10),
          ("setRmepCreation", 11),
          ("setTrunkOamstatus", 12),
          ("setY1731CCIgnoreDefect", 13),
          ("setY1731RapsFloodingBlock", 14),
          ("setY1731TlvPermission", 15))
    )


_SleY1731BaseControlRequest_Type.__name__ = "Integer32"
_SleY1731BaseControlRequest_Object = MibScalar
sleY1731BaseControlRequest = _SleY1731BaseControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 1),
    _SleY1731BaseControlRequest_Type()
)
sleY1731BaseControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlRequest.setStatus("current")
_SleY1731BaseControlStatus_Type = SleControlStatusType
_SleY1731BaseControlStatus_Object = MibScalar
sleY1731BaseControlStatus = _SleY1731BaseControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 2),
    _SleY1731BaseControlStatus_Type()
)
sleY1731BaseControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731BaseControlStatus.setStatus("current")
_SleY1731BaseControlTimer_Type = Gauge32
_SleY1731BaseControlTimer_Object = MibScalar
sleY1731BaseControlTimer = _SleY1731BaseControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 3),
    _SleY1731BaseControlTimer_Type()
)
sleY1731BaseControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTimer.setStatus("current")
_SleY1731BaseControlTimeStamp_Type = TimeTicks
_SleY1731BaseControlTimeStamp_Object = MibScalar
sleY1731BaseControlTimeStamp = _SleY1731BaseControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 4),
    _SleY1731BaseControlTimeStamp_Type()
)
sleY1731BaseControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731BaseControlTimeStamp.setStatus("current")
_SleY1731BaseControlReqResult_Type = SleControlRequestResultType
_SleY1731BaseControlReqResult_Object = MibScalar
sleY1731BaseControlReqResult = _SleY1731BaseControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 5),
    _SleY1731BaseControlReqResult_Type()
)
sleY1731BaseControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731BaseControlReqResult.setStatus("current")


class _SleY1731BaseControlEnable_Type(Integer32):
    """Custom type sleY1731BaseControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlEnable_Type.__name__ = "Integer32"
_SleY1731BaseControlEnable_Object = MibScalar
sleY1731BaseControlEnable = _SleY1731BaseControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 6),
    _SleY1731BaseControlEnable_Type()
)
sleY1731BaseControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlEnable.setStatus("current")


class _SleY1731BaseControlTrunkEnable_Type(Integer32):
    """Custom type sleY1731BaseControlTrunkEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlTrunkEnable_Type.__name__ = "Integer32"
_SleY1731BaseControlTrunkEnable_Object = MibScalar
sleY1731BaseControlTrunkEnable = _SleY1731BaseControlTrunkEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 7),
    _SleY1731BaseControlTrunkEnable_Type()
)
sleY1731BaseControlTrunkEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTrunkEnable.setStatus("current")


class _SleY1731BaseControlLtrCacheHoldTime_Type(Integer32):
    """Custom type sleY1731BaseControlLtrCacheHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731BaseControlLtrCacheHoldTime_Type.__name__ = "Integer32"
_SleY1731BaseControlLtrCacheHoldTime_Object = MibScalar
sleY1731BaseControlLtrCacheHoldTime = _SleY1731BaseControlLtrCacheHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 8),
    _SleY1731BaseControlLtrCacheHoldTime_Type()
)
sleY1731BaseControlLtrCacheHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlLtrCacheHoldTime.setStatus("current")


class _SleY1731BaseControlLtrCacheSize_Type(Integer32):
    """Custom type sleY1731BaseControlLtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SleY1731BaseControlLtrCacheSize_Type.__name__ = "Integer32"
_SleY1731BaseControlLtrCacheSize_Object = MibScalar
sleY1731BaseControlLtrCacheSize = _SleY1731BaseControlLtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 9),
    _SleY1731BaseControlLtrCacheSize_Type()
)
sleY1731BaseControlLtrCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlLtrCacheSize.setStatus("current")


class _SleY1731BaseControlSnmpServerTraps_Type(Bits):
    """Custom type sleY1731BaseControlSnmpServerTraps based on Bits"""
    namedValues = NamedValues(
        *(("rdi", 0),
          ("loc", 1),
          ("unp", 2),
          ("unm", 3),
          ("mmg", 4),
          ("unl", 5),
          ("ais", 6),
          ("lck", 7))
    )

_SleY1731BaseControlSnmpServerTraps_Type.__name__ = "Bits"
_SleY1731BaseControlSnmpServerTraps_Object = MibScalar
sleY1731BaseControlSnmpServerTraps = _SleY1731BaseControlSnmpServerTraps_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 10),
    _SleY1731BaseControlSnmpServerTraps_Type()
)
sleY1731BaseControlSnmpServerTraps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlSnmpServerTraps.setStatus("current")


class _SleY1731BaseControlXcheckStartDelay_Type(Integer32):
    """Custom type sleY1731BaseControlXcheckStartDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731BaseControlXcheckStartDelay_Type.__name__ = "Integer32"
_SleY1731BaseControlXcheckStartDelay_Object = MibScalar
sleY1731BaseControlXcheckStartDelay = _SleY1731BaseControlXcheckStartDelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 11),
    _SleY1731BaseControlXcheckStartDelay_Type()
)
sleY1731BaseControlXcheckStartDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlXcheckStartDelay.setStatus("current")


class _SleY1731BaseControlDefaultMegLevel_Type(Integer32):
    """Custom type sleY1731BaseControlDefaultMegLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731BaseControlDefaultMegLevel_Type.__name__ = "Integer32"
_SleY1731BaseControlDefaultMegLevel_Object = MibScalar
sleY1731BaseControlDefaultMegLevel = _SleY1731BaseControlDefaultMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 12),
    _SleY1731BaseControlDefaultMegLevel_Type()
)
sleY1731BaseControlDefaultMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlDefaultMegLevel.setStatus("current")


class _SleY1731BaseControlDefaultMegMhfCreation_Type(Integer32):
    """Custom type sleY1731BaseControlDefaultMegMhfCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("default", 1),
          ("explicit", 2))
    )


_SleY1731BaseControlDefaultMegMhfCreation_Type.__name__ = "Integer32"
_SleY1731BaseControlDefaultMegMhfCreation_Object = MibScalar
sleY1731BaseControlDefaultMegMhfCreation = _SleY1731BaseControlDefaultMegMhfCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 13),
    _SleY1731BaseControlDefaultMegMhfCreation_Type()
)
sleY1731BaseControlDefaultMegMhfCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlDefaultMegMhfCreation.setStatus("current")


class _SleY1731BaseControlPduToCfm_Type(Integer32):
    """Custom type sleY1731BaseControlPduToCfm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlPduToCfm_Type.__name__ = "Integer32"
_SleY1731BaseControlPduToCfm_Object = MibScalar
sleY1731BaseControlPduToCfm = _SleY1731BaseControlPduToCfm_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 14),
    _SleY1731BaseControlPduToCfm_Type()
)
sleY1731BaseControlPduToCfm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlPduToCfm.setStatus("current")


class _SleY1731BaseControlDedicatedVlan_Type(Integer32):
    """Custom type sleY1731BaseControlDedicatedVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlDedicatedVlan_Type.__name__ = "Integer32"
_SleY1731BaseControlDedicatedVlan_Object = MibScalar
sleY1731BaseControlDedicatedVlan = _SleY1731BaseControlDedicatedVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 15),
    _SleY1731BaseControlDedicatedVlan_Type()
)
sleY1731BaseControlDedicatedVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlDedicatedVlan.setStatus("current")


class _SleY1731BaseControlRmepCreation_Type(Integer32):
    """Custom type sleY1731BaseControlRmepCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("static", 2))
    )


_SleY1731BaseControlRmepCreation_Type.__name__ = "Integer32"
_SleY1731BaseControlRmepCreation_Object = MibScalar
sleY1731BaseControlRmepCreation = _SleY1731BaseControlRmepCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 16),
    _SleY1731BaseControlRmepCreation_Type()
)
sleY1731BaseControlRmepCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlRmepCreation.setStatus("current")


class _SleY1731BaseControlTrunkIndex_Type(Integer32):
    """Custom type sleY1731BaseControlTrunkIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731BaseControlTrunkIndex_Type.__name__ = "Integer32"
_SleY1731BaseControlTrunkIndex_Object = MibScalar
sleY1731BaseControlTrunkIndex = _SleY1731BaseControlTrunkIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 17),
    _SleY1731BaseControlTrunkIndex_Type()
)
sleY1731BaseControlTrunkIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTrunkIndex.setStatus("current")


class _SleY1731BaseControlTrunkOamStatus_Type(Integer32):
    """Custom type sleY1731BaseControlTrunkOamStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlTrunkOamStatus_Type.__name__ = "Integer32"
_SleY1731BaseControlTrunkOamStatus_Object = MibScalar
sleY1731BaseControlTrunkOamStatus = _SleY1731BaseControlTrunkOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 18),
    _SleY1731BaseControlTrunkOamStatus_Type()
)
sleY1731BaseControlTrunkOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTrunkOamStatus.setStatus("current")
_SleY1731BaseControlTrunkMeg_Type = OctetString
_SleY1731BaseControlTrunkMeg_Object = MibScalar
sleY1731BaseControlTrunkMeg = _SleY1731BaseControlTrunkMeg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 19),
    _SleY1731BaseControlTrunkMeg_Type()
)
sleY1731BaseControlTrunkMeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTrunkMeg.setStatus("current")


class _SleY1731BaseControlCCIgnoreDefect_Type(Integer32):
    """Custom type sleY1731BaseControlCCIgnoreDefect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlCCIgnoreDefect_Type.__name__ = "Integer32"
_SleY1731BaseControlCCIgnoreDefect_Object = MibScalar
sleY1731BaseControlCCIgnoreDefect = _SleY1731BaseControlCCIgnoreDefect_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 20),
    _SleY1731BaseControlCCIgnoreDefect_Type()
)
sleY1731BaseControlCCIgnoreDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlCCIgnoreDefect.setStatus("current")


class _SleY1731BaseControlRapsFloodingBlock_Type(Integer32):
    """Custom type sleY1731BaseControlRapsFloodingBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731BaseControlRapsFloodingBlock_Type.__name__ = "Integer32"
_SleY1731BaseControlRapsFloodingBlock_Object = MibScalar
sleY1731BaseControlRapsFloodingBlock = _SleY1731BaseControlRapsFloodingBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 21),
    _SleY1731BaseControlRapsFloodingBlock_Type()
)
sleY1731BaseControlRapsFloodingBlock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlRapsFloodingBlock.setStatus("current")


class _SleY1731BaseControlTlvPermission_Type(Integer32):
    """Custom type sleY1731BaseControlTlvPermission based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("chassis", 2))
    )


_SleY1731BaseControlTlvPermission_Type.__name__ = "Integer32"
_SleY1731BaseControlTlvPermission_Object = MibScalar
sleY1731BaseControlTlvPermission = _SleY1731BaseControlTlvPermission_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 2, 22),
    _SleY1731BaseControlTlvPermission_Type()
)
sleY1731BaseControlTlvPermission.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731BaseControlTlvPermission.setStatus("current")
_SleY1731BaseNotification_ObjectIdentity = ObjectIdentity
sleY1731BaseNotification = _SleY1731BaseNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3)
)
_SleY1731TrunkTable_Object = MibTable
sleY1731TrunkTable = _SleY1731TrunkTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 4)
)
if mibBuilder.loadTexts:
    sleY1731TrunkTable.setStatus("current")
_SleY1731TrunkEntry_Object = MibTableRow
sleY1731TrunkEntry = _SleY1731TrunkEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 4, 1)
)
sleY1731TrunkEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731TrunkIndex"),
)
if mibBuilder.loadTexts:
    sleY1731TrunkEntry.setStatus("current")


class _SleY1731TrunkIndex_Type(Integer32):
    """Custom type sleY1731TrunkIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleY1731TrunkIndex_Type.__name__ = "Integer32"
_SleY1731TrunkIndex_Object = MibTableColumn
sleY1731TrunkIndex = _SleY1731TrunkIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 4, 1, 1),
    _SleY1731TrunkIndex_Type()
)
sleY1731TrunkIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731TrunkIndex.setStatus("current")


class _SleY1731TrunkOamStatus_Type(Integer32):
    """Custom type sleY1731TrunkOamStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731TrunkOamStatus_Type.__name__ = "Integer32"
_SleY1731TrunkOamStatus_Object = MibTableColumn
sleY1731TrunkOamStatus = _SleY1731TrunkOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 4, 1, 2),
    _SleY1731TrunkOamStatus_Type()
)
sleY1731TrunkOamStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731TrunkOamStatus.setStatus("current")
_SleY1731TrunkMeg_Type = OctetString
_SleY1731TrunkMeg_Object = MibTableColumn
sleY1731TrunkMeg = _SleY1731TrunkMeg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 4, 1, 3),
    _SleY1731TrunkMeg_Type()
)
sleY1731TrunkMeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731TrunkMeg.setStatus("current")
_SleY1731Meg_ObjectIdentity = ObjectIdentity
sleY1731Meg = _SleY1731Meg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2)
)
_SleY1731MegTable_Object = MibTable
sleY1731MegTable = _SleY1731MegTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1)
)
if mibBuilder.loadTexts:
    sleY1731MegTable.setStatus("current")
_SleY1731MegEntry_Object = MibTableRow
sleY1731MegEntry = _SleY1731MegEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1)
)
sleY1731MegEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
)
if mibBuilder.loadTexts:
    sleY1731MegEntry.setStatus("current")


class _SleY1731MegIndex_Type(Integer32):
    """Custom type sleY1731MegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MegIndex_Type.__name__ = "Integer32"
_SleY1731MegIndex_Object = MibTableColumn
sleY1731MegIndex = _SleY1731MegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 1),
    _SleY1731MegIndex_Type()
)
sleY1731MegIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegIndex.setStatus("current")


class _SleY1731MegName_Type(OctetString):
    """Custom type sleY1731MegName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleY1731MegName_Type.__name__ = "OctetString"
_SleY1731MegName_Object = MibTableColumn
sleY1731MegName = _SleY1731MegName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 2),
    _SleY1731MegName_Type()
)
sleY1731MegName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegName.setStatus("current")


class _SleY1731MegLevel_Type(Integer32):
    """Custom type sleY1731MegLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegLevel_Type.__name__ = "Integer32"
_SleY1731MegLevel_Object = MibTableColumn
sleY1731MegLevel = _SleY1731MegLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 3),
    _SleY1731MegLevel_Type()
)
sleY1731MegLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLevel.setStatus("current")


class _SleY1731MegVid_Type(Integer32):
    """Custom type sleY1731MegVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731MegVid_Type.__name__ = "Integer32"
_SleY1731MegVid_Object = MibTableColumn
sleY1731MegVid = _SleY1731MegVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 4),
    _SleY1731MegVid_Type()
)
sleY1731MegVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegVid.setStatus("current")


class _SleY1731MegMepEnable_Type(Integer32):
    """Custom type sleY1731MegMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegMepEnable_Type.__name__ = "Integer32"
_SleY1731MegMepEnable_Object = MibTableColumn
sleY1731MegMepEnable = _SleY1731MegMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 5),
    _SleY1731MegMepEnable_Type()
)
sleY1731MegMepEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegMepEnable.setStatus("current")


class _SleY1731MegCcEnable_Type(Integer32):
    """Custom type sleY1731MegCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegCcEnable_Type.__name__ = "Integer32"
_SleY1731MegCcEnable_Object = MibTableColumn
sleY1731MegCcEnable = _SleY1731MegCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 6),
    _SleY1731MegCcEnable_Type()
)
sleY1731MegCcEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegCcEnable.setStatus("current")


class _SleY1731MegCcInterval_Type(Integer32):
    """Custom type sleY1731MegCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 7),
    )


_SleY1731MegCcInterval_Type.__name__ = "Integer32"
_SleY1731MegCcInterval_Object = MibTableColumn
sleY1731MegCcInterval = _SleY1731MegCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 7),
    _SleY1731MegCcInterval_Type()
)
sleY1731MegCcInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegCcInterval.setStatus("current")


class _SleY1731MegCcPriority_Type(Integer32):
    """Custom type sleY1731MegCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegCcPriority_Type.__name__ = "Integer32"
_SleY1731MegCcPriority_Object = MibTableColumn
sleY1731MegCcPriority = _SleY1731MegCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 8),
    _SleY1731MegCcPriority_Type()
)
sleY1731MegCcPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegCcPriority.setStatus("current")


class _SleY1731MegCcLossThreshold_Type(Integer32):
    """Custom type sleY1731MegCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleY1731MegCcLossThreshold_Type.__name__ = "Integer32"
_SleY1731MegCcLossThreshold_Object = MibTableColumn
sleY1731MegCcLossThreshold = _SleY1731MegCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 9),
    _SleY1731MegCcLossThreshold_Type()
)
sleY1731MegCcLossThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegCcLossThreshold.setStatus("current")


class _SleY1731MegCcHoldTime_Type(Integer32):
    """Custom type sleY1731MegCcHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MegCcHoldTime_Type.__name__ = "Integer32"
_SleY1731MegCcHoldTime_Object = MibTableColumn
sleY1731MegCcHoldTime = _SleY1731MegCcHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 10),
    _SleY1731MegCcHoldTime_Type()
)
sleY1731MegCcHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegCcHoldTime.setStatus("current")


class _SleY1731MegFaultPriority_Type(Integer32):
    """Custom type sleY1731MegFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SleY1731MegFaultPriority_Type.__name__ = "Integer32"
_SleY1731MegFaultPriority_Object = MibTableColumn
sleY1731MegFaultPriority = _SleY1731MegFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 11),
    _SleY1731MegFaultPriority_Type()
)
sleY1731MegFaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegFaultPriority.setStatus("current")


class _SleY1731MegFaultKeepTime_Type(Integer32):
    """Custom type sleY1731MegFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MegFaultKeepTime_Type.__name__ = "Integer32"
_SleY1731MegFaultKeepTime_Object = MibTableColumn
sleY1731MegFaultKeepTime = _SleY1731MegFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 12),
    _SleY1731MegFaultKeepTime_Type()
)
sleY1731MegFaultKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegFaultKeepTime.setStatus("current")


class _SleY1731MegFaultClearTime_Type(Integer32):
    """Custom type sleY1731MegFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MegFaultClearTime_Type.__name__ = "Integer32"
_SleY1731MegFaultClearTime_Object = MibTableColumn
sleY1731MegFaultClearTime = _SleY1731MegFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 13),
    _SleY1731MegFaultClearTime_Type()
)
sleY1731MegFaultClearTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegFaultClearTime.setStatus("current")


class _SleY1731MegXcheckEnable_Type(Integer32):
    """Custom type sleY1731MegXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegXcheckEnable_Type.__name__ = "Integer32"
_SleY1731MegXcheckEnable_Object = MibTableColumn
sleY1731MegXcheckEnable = _SleY1731MegXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 14),
    _SleY1731MegXcheckEnable_Type()
)
sleY1731MegXcheckEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegXcheckEnable.setStatus("current")


class _SleY1731MegAisEnable_Type(Integer32):
    """Custom type sleY1731MegAisEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegAisEnable_Type.__name__ = "Integer32"
_SleY1731MegAisEnable_Object = MibTableColumn
sleY1731MegAisEnable = _SleY1731MegAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 15),
    _SleY1731MegAisEnable_Type()
)
sleY1731MegAisEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegAisEnable.setStatus("current")


class _SleY1731MegAisTransmitEnable_Type(Integer32):
    """Custom type sleY1731MegAisTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegAisTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MegAisTransmitEnable_Object = MibTableColumn
sleY1731MegAisTransmitEnable = _SleY1731MegAisTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 16),
    _SleY1731MegAisTransmitEnable_Type()
)
sleY1731MegAisTransmitEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegAisTransmitEnable.setStatus("current")


class _SleY1731MegAisInterval_Type(Integer32):
    """Custom type sleY1731MegAisInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("oneSecond", 4),
          ("oneMinute", 6))
    )


_SleY1731MegAisInterval_Type.__name__ = "Integer32"
_SleY1731MegAisInterval_Object = MibTableColumn
sleY1731MegAisInterval = _SleY1731MegAisInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 17),
    _SleY1731MegAisInterval_Type()
)
sleY1731MegAisInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegAisInterval.setStatus("current")


class _SleY1731MegAisLevel_Type(Integer32):
    """Custom type sleY1731MegAisLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_SleY1731MegAisLevel_Type.__name__ = "Integer32"
_SleY1731MegAisLevel_Object = MibTableColumn
sleY1731MegAisLevel = _SleY1731MegAisLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 18),
    _SleY1731MegAisLevel_Type()
)
sleY1731MegAisLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegAisLevel.setStatus("current")


class _SleY1731MegAisPriority_Type(Integer32):
    """Custom type sleY1731MegAisPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegAisPriority_Type.__name__ = "Integer32"
_SleY1731MegAisPriority_Object = MibTableColumn
sleY1731MegAisPriority = _SleY1731MegAisPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 19),
    _SleY1731MegAisPriority_Type()
)
sleY1731MegAisPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegAisPriority.setStatus("current")


class _SleY1731MegLckEnable_Type(Integer32):
    """Custom type sleY1731MegLckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegLckEnable_Type.__name__ = "Integer32"
_SleY1731MegLckEnable_Object = MibTableColumn
sleY1731MegLckEnable = _SleY1731MegLckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 20),
    _SleY1731MegLckEnable_Type()
)
sleY1731MegLckEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLckEnable.setStatus("current")


class _SleY1731MegLckTransmitEnable_Type(Integer32):
    """Custom type sleY1731MegLckTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegLckTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MegLckTransmitEnable_Object = MibTableColumn
sleY1731MegLckTransmitEnable = _SleY1731MegLckTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 21),
    _SleY1731MegLckTransmitEnable_Type()
)
sleY1731MegLckTransmitEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLckTransmitEnable.setStatus("current")


class _SleY1731MegLckInterval_Type(Integer32):
    """Custom type sleY1731MegLckInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("oneSecond", 4),
          ("oneMinute", 6))
    )


_SleY1731MegLckInterval_Type.__name__ = "Integer32"
_SleY1731MegLckInterval_Object = MibTableColumn
sleY1731MegLckInterval = _SleY1731MegLckInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 22),
    _SleY1731MegLckInterval_Type()
)
sleY1731MegLckInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLckInterval.setStatus("current")


class _SleY1731MegLckLevel_Type(Integer32):
    """Custom type sleY1731MegLckLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_SleY1731MegLckLevel_Type.__name__ = "Integer32"
_SleY1731MegLckLevel_Object = MibTableColumn
sleY1731MegLckLevel = _SleY1731MegLckLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 23),
    _SleY1731MegLckLevel_Type()
)
sleY1731MegLckLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLckLevel.setStatus("current")


class _SleY1731MegLckPriority_Type(Integer32):
    """Custom type sleY1731MegLckPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegLckPriority_Type.__name__ = "Integer32"
_SleY1731MegLckPriority_Object = MibTableColumn
sleY1731MegLckPriority = _SleY1731MegLckPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 24),
    _SleY1731MegLckPriority_Type()
)
sleY1731MegLckPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegLckPriority.setStatus("current")


class _SleY1731MegOutOfService_Type(Integer32):
    """Custom type sleY1731MegOutOfService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegOutOfService_Type.__name__ = "Integer32"
_SleY1731MegOutOfService_Object = MibTableColumn
sleY1731MegOutOfService = _SleY1731MegOutOfService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 25),
    _SleY1731MegOutOfService_Type()
)
sleY1731MegOutOfService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegOutOfService.setStatus("current")


class _SleY1731MegRapsEnable_Type(Integer32):
    """Custom type sleY1731MegRapsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegRapsEnable_Type.__name__ = "Integer32"
_SleY1731MegRapsEnable_Object = MibTableColumn
sleY1731MegRapsEnable = _SleY1731MegRapsEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 26),
    _SleY1731MegRapsEnable_Type()
)
sleY1731MegRapsEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsEnable.setStatus("current")


class _SleY1731MegRapsRplOwner_Type(Integer32):
    """Custom type sleY1731MegRapsRplOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegRapsRplOwner_Type.__name__ = "Integer32"
_SleY1731MegRapsRplOwner_Object = MibTableColumn
sleY1731MegRapsRplOwner = _SleY1731MegRapsRplOwner_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 27),
    _SleY1731MegRapsRplOwner_Type()
)
sleY1731MegRapsRplOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsRplOwner.setStatus("current")
_SleY1731MegRapsEastPort_Type = Integer32
_SleY1731MegRapsEastPort_Object = MibTableColumn
sleY1731MegRapsEastPort = _SleY1731MegRapsEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 28),
    _SleY1731MegRapsEastPort_Type()
)
sleY1731MegRapsEastPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsEastPort.setStatus("current")
_SleY1731MegRapsWestPort_Type = Integer32
_SleY1731MegRapsWestPort_Object = MibTableColumn
sleY1731MegRapsWestPort = _SleY1731MegRapsWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 29),
    _SleY1731MegRapsWestPort_Type()
)
sleY1731MegRapsWestPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsWestPort.setStatus("current")


class _SleY1731MegRapsRplPort_Type(Integer32):
    """Custom type sleY1731MegRapsRplPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", -1),
          ("east", 0),
          ("west", 1))
    )


_SleY1731MegRapsRplPort_Type.__name__ = "Integer32"
_SleY1731MegRapsRplPort_Object = MibTableColumn
sleY1731MegRapsRplPort = _SleY1731MegRapsRplPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 30),
    _SleY1731MegRapsRplPort_Type()
)
sleY1731MegRapsRplPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsRplPort.setStatus("current")


class _SleY1731MegRapsHoldOffTime_Type(Integer32):
    """Custom type sleY1731MegRapsHoldOffTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleY1731MegRapsHoldOffTime_Type.__name__ = "Integer32"
_SleY1731MegRapsHoldOffTime_Object = MibTableColumn
sleY1731MegRapsHoldOffTime = _SleY1731MegRapsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 31),
    _SleY1731MegRapsHoldOffTime_Type()
)
sleY1731MegRapsHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsHoldOffTime.setStatus("current")


class _SleY1731MegRapsGuardTime_Type(Integer32):
    """Custom type sleY1731MegRapsGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_SleY1731MegRapsGuardTime_Type.__name__ = "Integer32"
_SleY1731MegRapsGuardTime_Object = MibTableColumn
sleY1731MegRapsGuardTime = _SleY1731MegRapsGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 32),
    _SleY1731MegRapsGuardTime_Type()
)
sleY1731MegRapsGuardTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsGuardTime.setStatus("current")


class _SleY1731MegRapsWaitToRestore_Type(Integer32):
    """Custom type sleY1731MegRapsWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 720),
    )


_SleY1731MegRapsWaitToRestore_Type.__name__ = "Integer32"
_SleY1731MegRapsWaitToRestore_Object = MibTableColumn
sleY1731MegRapsWaitToRestore = _SleY1731MegRapsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 33),
    _SleY1731MegRapsWaitToRestore_Type()
)
sleY1731MegRapsWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsWaitToRestore.setStatus("current")


class _SleY1731MegRapsState_Type(Integer32):
    """Custom type sleY1731MegRapsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("idle", 1),
          ("protection", 2))
    )


_SleY1731MegRapsState_Type.__name__ = "Integer32"
_SleY1731MegRapsState_Object = MibTableColumn
sleY1731MegRapsState = _SleY1731MegRapsState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 34),
    _SleY1731MegRapsState_Type()
)
sleY1731MegRapsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsState.setStatus("current")


class _SleY1731MegRapsEastPortStatus_Type(Integer32):
    """Custom type sleY1731MegRapsEastPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disabled", 1),
          ("forwarding", 2),
          ("blocking", 3))
    )


_SleY1731MegRapsEastPortStatus_Type.__name__ = "Integer32"
_SleY1731MegRapsEastPortStatus_Object = MibTableColumn
sleY1731MegRapsEastPortStatus = _SleY1731MegRapsEastPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 35),
    _SleY1731MegRapsEastPortStatus_Type()
)
sleY1731MegRapsEastPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsEastPortStatus.setStatus("current")


class _SleY1731MegRapsWestPortStatus_Type(Integer32):
    """Custom type sleY1731MegRapsWestPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disabled", 1),
          ("forwarding", 2),
          ("blocking", 3))
    )


_SleY1731MegRapsWestPortStatus_Type.__name__ = "Integer32"
_SleY1731MegRapsWestPortStatus_Object = MibTableColumn
sleY1731MegRapsWestPortStatus = _SleY1731MegRapsWestPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 36),
    _SleY1731MegRapsWestPortStatus_Type()
)
sleY1731MegRapsWestPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsWestPortStatus.setStatus("current")


class _SleY1731MegRapsNonRevertive_Type(Integer32):
    """Custom type sleY1731MegRapsNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegRapsNonRevertive_Type.__name__ = "Integer32"
_SleY1731MegRapsNonRevertive_Object = MibTableColumn
sleY1731MegRapsNonRevertive = _SleY1731MegRapsNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 37),
    _SleY1731MegRapsNonRevertive_Type()
)
sleY1731MegRapsNonRevertive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsNonRevertive.setStatus("current")


class _SleY1731MegRapsForcedSwitchEast_Type(Integer32):
    """Custom type sleY1731MegRapsForcedSwitchEast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegRapsForcedSwitchEast_Type.__name__ = "Integer32"
_SleY1731MegRapsForcedSwitchEast_Object = MibTableColumn
sleY1731MegRapsForcedSwitchEast = _SleY1731MegRapsForcedSwitchEast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 38),
    _SleY1731MegRapsForcedSwitchEast_Type()
)
sleY1731MegRapsForcedSwitchEast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsForcedSwitchEast.setStatus("current")


class _SleY1731MegRapsForcedSwitchWest_Type(Integer32):
    """Custom type sleY1731MegRapsForcedSwitchWest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegRapsForcedSwitchWest_Type.__name__ = "Integer32"
_SleY1731MegRapsForcedSwitchWest_Object = MibTableColumn
sleY1731MegRapsForcedSwitchWest = _SleY1731MegRapsForcedSwitchWest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 39),
    _SleY1731MegRapsForcedSwitchWest_Type()
)
sleY1731MegRapsForcedSwitchWest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegRapsForcedSwitchWest.setStatus("current")


class _SleY1731MegMd_Type(OctetString):
    """Custom type sleY1731MegMd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleY1731MegMd_Type.__name__ = "OctetString"
_SleY1731MegMd_Object = MibTableColumn
sleY1731MegMd = _SleY1731MegMd_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 1, 1, 40),
    _SleY1731MegMd_Type()
)
sleY1731MegMd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegMd.setStatus("current")
_SleY1731MegControl_ObjectIdentity = ObjectIdentity
sleY1731MegControl = _SleY1731MegControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2)
)


class _SleY1731MegControlRequest_Type(Integer32):
    """Custom type sleY1731MegControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("createY1731Meg", 1),
          ("deleteY1731Meg", 2),
          ("setY1731MegMepEnable", 3),
          ("setY1731MegCcEnable", 4),
          ("setY1731MegCcProfile", 5),
          ("setY1731MegFaultProfile", 6),
          ("setY1731MegXcheckEnable", 7),
          ("setY1731MegAisEnable", 8),
          ("setY1731MegAisTransmitEnable", 9),
          ("setY1731MegAisProfile", 10),
          ("setY1731MegLckEnable", 11),
          ("setY1731MegLckTransmitEnable", 12),
          ("setY1731MegLckProfile", 13),
          ("setY1731MegOutOfService", 14),
          ("setY1731MegRapsEnable", 15),
          ("setY1731MegRapsRingports", 16),
          ("setY1731MegRapsRplPort", 17),
          ("setY1731MegRapsRplOwner", 18),
          ("setY1731MegRapsRplTimer", 19),
          ("destroyY1731MegRemoteMep", 20),
          ("destroyY1731MegError", 21),
          ("setY1731MegRapsNonRevertive", 22),
          ("setY1731MegRapsForcedSwitchEast", 23),
          ("setY1731MegRapsForcedSwitchWest", 24),
          ("addY1731MegMd", 25),
          ("delY1731MegMd", 26))
    )


_SleY1731MegControlRequest_Type.__name__ = "Integer32"
_SleY1731MegControlRequest_Object = MibScalar
sleY1731MegControlRequest = _SleY1731MegControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 1),
    _SleY1731MegControlRequest_Type()
)
sleY1731MegControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRequest.setStatus("current")
_SleY1731MegControlStatus_Type = SleControlStatusType
_SleY1731MegControlStatus_Object = MibScalar
sleY1731MegControlStatus = _SleY1731MegControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 2),
    _SleY1731MegControlStatus_Type()
)
sleY1731MegControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegControlStatus.setStatus("current")
_SleY1731MegControlTimer_Type = Gauge32
_SleY1731MegControlTimer_Object = MibScalar
sleY1731MegControlTimer = _SleY1731MegControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 3),
    _SleY1731MegControlTimer_Type()
)
sleY1731MegControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlTimer.setStatus("current")
_SleY1731MegControlTimeStamp_Type = TimeTicks
_SleY1731MegControlTimeStamp_Object = MibScalar
sleY1731MegControlTimeStamp = _SleY1731MegControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 4),
    _SleY1731MegControlTimeStamp_Type()
)
sleY1731MegControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegControlTimeStamp.setStatus("current")
_SleY1731MegControlReqResult_Type = SleControlRequestResultType
_SleY1731MegControlReqResult_Object = MibScalar
sleY1731MegControlReqResult = _SleY1731MegControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 5),
    _SleY1731MegControlReqResult_Type()
)
sleY1731MegControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MegControlReqResult.setStatus("current")


class _SleY1731MegControlIndex_Type(Integer32):
    """Custom type sleY1731MegControlIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MegControlIndex_Type.__name__ = "Integer32"
_SleY1731MegControlIndex_Object = MibScalar
sleY1731MegControlIndex = _SleY1731MegControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 6),
    _SleY1731MegControlIndex_Type()
)
sleY1731MegControlIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlIndex.setStatus("current")


class _SleY1731MegControlName_Type(OctetString):
    """Custom type sleY1731MegControlName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleY1731MegControlName_Type.__name__ = "OctetString"
_SleY1731MegControlName_Object = MibScalar
sleY1731MegControlName = _SleY1731MegControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 7),
    _SleY1731MegControlName_Type()
)
sleY1731MegControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlName.setStatus("current")


class _SleY1731MegControlLevel_Type(Integer32):
    """Custom type sleY1731MegControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegControlLevel_Type.__name__ = "Integer32"
_SleY1731MegControlLevel_Object = MibScalar
sleY1731MegControlLevel = _SleY1731MegControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 8),
    _SleY1731MegControlLevel_Type()
)
sleY1731MegControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLevel.setStatus("current")


class _SleY1731MegControlVid_Type(Integer32):
    """Custom type sleY1731MegControlVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731MegControlVid_Type.__name__ = "Integer32"
_SleY1731MegControlVid_Object = MibScalar
sleY1731MegControlVid = _SleY1731MegControlVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 9),
    _SleY1731MegControlVid_Type()
)
sleY1731MegControlVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlVid.setStatus("current")


class _SleY1731MegControlMepEnable_Type(Integer32):
    """Custom type sleY1731MegControlMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlMepEnable_Type.__name__ = "Integer32"
_SleY1731MegControlMepEnable_Object = MibScalar
sleY1731MegControlMepEnable = _SleY1731MegControlMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 10),
    _SleY1731MegControlMepEnable_Type()
)
sleY1731MegControlMepEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlMepEnable.setStatus("current")


class _SleY1731MegControlCcEnable_Type(Integer32):
    """Custom type sleY1731MegControlCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlCcEnable_Type.__name__ = "Integer32"
_SleY1731MegControlCcEnable_Object = MibScalar
sleY1731MegControlCcEnable = _SleY1731MegControlCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 11),
    _SleY1731MegControlCcEnable_Type()
)
sleY1731MegControlCcEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlCcEnable.setStatus("current")


class _SleY1731MegControlCcInterval_Type(Integer32):
    """Custom type sleY1731MegControlCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 7),
    )


_SleY1731MegControlCcInterval_Type.__name__ = "Integer32"
_SleY1731MegControlCcInterval_Object = MibScalar
sleY1731MegControlCcInterval = _SleY1731MegControlCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 12),
    _SleY1731MegControlCcInterval_Type()
)
sleY1731MegControlCcInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlCcInterval.setStatus("current")


class _SleY1731MegControlCcPriority_Type(Integer32):
    """Custom type sleY1731MegControlCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegControlCcPriority_Type.__name__ = "Integer32"
_SleY1731MegControlCcPriority_Object = MibScalar
sleY1731MegControlCcPriority = _SleY1731MegControlCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 13),
    _SleY1731MegControlCcPriority_Type()
)
sleY1731MegControlCcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlCcPriority.setStatus("current")


class _SleY1731MegControlCcLossThreshold_Type(Integer32):
    """Custom type sleY1731MegControlCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleY1731MegControlCcLossThreshold_Type.__name__ = "Integer32"
_SleY1731MegControlCcLossThreshold_Object = MibScalar
sleY1731MegControlCcLossThreshold = _SleY1731MegControlCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 14),
    _SleY1731MegControlCcLossThreshold_Type()
)
sleY1731MegControlCcLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlCcLossThreshold.setStatus("current")


class _SleY1731MegControlCcHoldTime_Type(Integer32):
    """Custom type sleY1731MegControlCcHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MegControlCcHoldTime_Type.__name__ = "Integer32"
_SleY1731MegControlCcHoldTime_Object = MibScalar
sleY1731MegControlCcHoldTime = _SleY1731MegControlCcHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 15),
    _SleY1731MegControlCcHoldTime_Type()
)
sleY1731MegControlCcHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlCcHoldTime.setStatus("current")


class _SleY1731MegControlFaultPriority_Type(Integer32):
    """Custom type sleY1731MegControlFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SleY1731MegControlFaultPriority_Type.__name__ = "Integer32"
_SleY1731MegControlFaultPriority_Object = MibScalar
sleY1731MegControlFaultPriority = _SleY1731MegControlFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 16),
    _SleY1731MegControlFaultPriority_Type()
)
sleY1731MegControlFaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlFaultPriority.setStatus("current")


class _SleY1731MegControlFaultKeepTime_Type(Integer32):
    """Custom type sleY1731MegControlFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MegControlFaultKeepTime_Type.__name__ = "Integer32"
_SleY1731MegControlFaultKeepTime_Object = MibScalar
sleY1731MegControlFaultKeepTime = _SleY1731MegControlFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 17),
    _SleY1731MegControlFaultKeepTime_Type()
)
sleY1731MegControlFaultKeepTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlFaultKeepTime.setStatus("current")


class _SleY1731MegControlFaultClearTime_Type(Integer32):
    """Custom type sleY1731MegControlFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MegControlFaultClearTime_Type.__name__ = "Integer32"
_SleY1731MegControlFaultClearTime_Object = MibScalar
sleY1731MegControlFaultClearTime = _SleY1731MegControlFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 18),
    _SleY1731MegControlFaultClearTime_Type()
)
sleY1731MegControlFaultClearTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlFaultClearTime.setStatus("current")


class _SleY1731MegControlXcheckEnable_Type(Integer32):
    """Custom type sleY1731MegControlXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlXcheckEnable_Type.__name__ = "Integer32"
_SleY1731MegControlXcheckEnable_Object = MibScalar
sleY1731MegControlXcheckEnable = _SleY1731MegControlXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 19),
    _SleY1731MegControlXcheckEnable_Type()
)
sleY1731MegControlXcheckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlXcheckEnable.setStatus("current")


class _SleY1731MegControlAisEnable_Type(Integer32):
    """Custom type sleY1731MegControlAisEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlAisEnable_Type.__name__ = "Integer32"
_SleY1731MegControlAisEnable_Object = MibScalar
sleY1731MegControlAisEnable = _SleY1731MegControlAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 20),
    _SleY1731MegControlAisEnable_Type()
)
sleY1731MegControlAisEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlAisEnable.setStatus("current")


class _SleY1731MegControlAisTransmitEnable_Type(Integer32):
    """Custom type sleY1731MegControlAisTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlAisTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MegControlAisTransmitEnable_Object = MibScalar
sleY1731MegControlAisTransmitEnable = _SleY1731MegControlAisTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 21),
    _SleY1731MegControlAisTransmitEnable_Type()
)
sleY1731MegControlAisTransmitEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlAisTransmitEnable.setStatus("current")


class _SleY1731MegControlAisInterval_Type(Integer32):
    """Custom type sleY1731MegControlAisInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("oneSecond", 4),
          ("oneMinute", 6))
    )


_SleY1731MegControlAisInterval_Type.__name__ = "Integer32"
_SleY1731MegControlAisInterval_Object = MibScalar
sleY1731MegControlAisInterval = _SleY1731MegControlAisInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 22),
    _SleY1731MegControlAisInterval_Type()
)
sleY1731MegControlAisInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlAisInterval.setStatus("current")


class _SleY1731MegControlAisLevel_Type(Integer32):
    """Custom type sleY1731MegControlAisLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_SleY1731MegControlAisLevel_Type.__name__ = "Integer32"
_SleY1731MegControlAisLevel_Object = MibScalar
sleY1731MegControlAisLevel = _SleY1731MegControlAisLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 23),
    _SleY1731MegControlAisLevel_Type()
)
sleY1731MegControlAisLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlAisLevel.setStatus("current")


class _SleY1731MegControlAisPriority_Type(Integer32):
    """Custom type sleY1731MegControlAisPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegControlAisPriority_Type.__name__ = "Integer32"
_SleY1731MegControlAisPriority_Object = MibScalar
sleY1731MegControlAisPriority = _SleY1731MegControlAisPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 24),
    _SleY1731MegControlAisPriority_Type()
)
sleY1731MegControlAisPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlAisPriority.setStatus("current")


class _SleY1731MegControlLckEnable_Type(Integer32):
    """Custom type sleY1731MegControlLckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlLckEnable_Type.__name__ = "Integer32"
_SleY1731MegControlLckEnable_Object = MibScalar
sleY1731MegControlLckEnable = _SleY1731MegControlLckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 25),
    _SleY1731MegControlLckEnable_Type()
)
sleY1731MegControlLckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLckEnable.setStatus("current")


class _SleY1731MegControlLckTransmitEnable_Type(Integer32):
    """Custom type sleY1731MegControlLckTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlLckTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MegControlLckTransmitEnable_Object = MibScalar
sleY1731MegControlLckTransmitEnable = _SleY1731MegControlLckTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 26),
    _SleY1731MegControlLckTransmitEnable_Type()
)
sleY1731MegControlLckTransmitEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLckTransmitEnable.setStatus("current")


class _SleY1731MegControlLckInterval_Type(Integer32):
    """Custom type sleY1731MegControlLckInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("oneSecond", 4),
          ("oneMinute", 6))
    )


_SleY1731MegControlLckInterval_Type.__name__ = "Integer32"
_SleY1731MegControlLckInterval_Object = MibScalar
sleY1731MegControlLckInterval = _SleY1731MegControlLckInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 27),
    _SleY1731MegControlLckInterval_Type()
)
sleY1731MegControlLckInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLckInterval.setStatus("current")


class _SleY1731MegControlLckLevel_Type(Integer32):
    """Custom type sleY1731MegControlLckLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_SleY1731MegControlLckLevel_Type.__name__ = "Integer32"
_SleY1731MegControlLckLevel_Object = MibScalar
sleY1731MegControlLckLevel = _SleY1731MegControlLckLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 28),
    _SleY1731MegControlLckLevel_Type()
)
sleY1731MegControlLckLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLckLevel.setStatus("current")


class _SleY1731MegControlLckPriority_Type(Integer32):
    """Custom type sleY1731MegControlLckPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MegControlLckPriority_Type.__name__ = "Integer32"
_SleY1731MegControlLckPriority_Object = MibScalar
sleY1731MegControlLckPriority = _SleY1731MegControlLckPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 29),
    _SleY1731MegControlLckPriority_Type()
)
sleY1731MegControlLckPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlLckPriority.setStatus("current")


class _SleY1731MegControlOutOfService_Type(Integer32):
    """Custom type sleY1731MegControlOutOfService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlOutOfService_Type.__name__ = "Integer32"
_SleY1731MegControlOutOfService_Object = MibScalar
sleY1731MegControlOutOfService = _SleY1731MegControlOutOfService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 30),
    _SleY1731MegControlOutOfService_Type()
)
sleY1731MegControlOutOfService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlOutOfService.setStatus("current")


class _SleY1731MegControlRapsEnable_Type(Integer32):
    """Custom type sleY1731MegControlRapsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MegControlRapsEnable_Type.__name__ = "Integer32"
_SleY1731MegControlRapsEnable_Object = MibScalar
sleY1731MegControlRapsEnable = _SleY1731MegControlRapsEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 31),
    _SleY1731MegControlRapsEnable_Type()
)
sleY1731MegControlRapsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsEnable.setStatus("current")


class _SleY1731MegControlRapsRplOwner_Type(Integer32):
    """Custom type sleY1731MegControlRapsRplOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegControlRapsRplOwner_Type.__name__ = "Integer32"
_SleY1731MegControlRapsRplOwner_Object = MibScalar
sleY1731MegControlRapsRplOwner = _SleY1731MegControlRapsRplOwner_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 32),
    _SleY1731MegControlRapsRplOwner_Type()
)
sleY1731MegControlRapsRplOwner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsRplOwner.setStatus("current")
_SleY1731MegControlRapsEastPort_Type = Integer32
_SleY1731MegControlRapsEastPort_Object = MibScalar
sleY1731MegControlRapsEastPort = _SleY1731MegControlRapsEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 33),
    _SleY1731MegControlRapsEastPort_Type()
)
sleY1731MegControlRapsEastPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsEastPort.setStatus("current")
_SleY1731MegControlRapsWestPort_Type = Integer32
_SleY1731MegControlRapsWestPort_Object = MibScalar
sleY1731MegControlRapsWestPort = _SleY1731MegControlRapsWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 34),
    _SleY1731MegControlRapsWestPort_Type()
)
sleY1731MegControlRapsWestPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsWestPort.setStatus("current")


class _SleY1731MegControlRapsRplPort_Type(Integer32):
    """Custom type sleY1731MegControlRapsRplPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", -1),
          ("east", 0),
          ("west", 1))
    )


_SleY1731MegControlRapsRplPort_Type.__name__ = "Integer32"
_SleY1731MegControlRapsRplPort_Object = MibScalar
sleY1731MegControlRapsRplPort = _SleY1731MegControlRapsRplPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 35),
    _SleY1731MegControlRapsRplPort_Type()
)
sleY1731MegControlRapsRplPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsRplPort.setStatus("current")


class _SleY1731MegControlRapsHoldOffTime_Type(Integer32):
    """Custom type sleY1731MegControlRapsHoldOffTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleY1731MegControlRapsHoldOffTime_Type.__name__ = "Integer32"
_SleY1731MegControlRapsHoldOffTime_Object = MibScalar
sleY1731MegControlRapsHoldOffTime = _SleY1731MegControlRapsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 36),
    _SleY1731MegControlRapsHoldOffTime_Type()
)
sleY1731MegControlRapsHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsHoldOffTime.setStatus("current")


class _SleY1731MegControlRapsGuardTime_Type(Integer32):
    """Custom type sleY1731MegControlRapsGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_SleY1731MegControlRapsGuardTime_Type.__name__ = "Integer32"
_SleY1731MegControlRapsGuardTime_Object = MibScalar
sleY1731MegControlRapsGuardTime = _SleY1731MegControlRapsGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 37),
    _SleY1731MegControlRapsGuardTime_Type()
)
sleY1731MegControlRapsGuardTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsGuardTime.setStatus("current")


class _SleY1731MegControlRapsWaitToRestore_Type(Integer32):
    """Custom type sleY1731MegControlRapsWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 720),
    )


_SleY1731MegControlRapsWaitToRestore_Type.__name__ = "Integer32"
_SleY1731MegControlRapsWaitToRestore_Object = MibScalar
sleY1731MegControlRapsWaitToRestore = _SleY1731MegControlRapsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 38),
    _SleY1731MegControlRapsWaitToRestore_Type()
)
sleY1731MegControlRapsWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsWaitToRestore.setStatus("current")


class _SleY1731MegControlRapsNonRevertive_Type(Integer32):
    """Custom type sleY1731MegControlRapsNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegControlRapsNonRevertive_Type.__name__ = "Integer32"
_SleY1731MegControlRapsNonRevertive_Object = MibScalar
sleY1731MegControlRapsNonRevertive = _SleY1731MegControlRapsNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 39),
    _SleY1731MegControlRapsNonRevertive_Type()
)
sleY1731MegControlRapsNonRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsNonRevertive.setStatus("current")


class _SleY1731MegControlRapsForcedSwitchEast_Type(Integer32):
    """Custom type sleY1731MegControlRapsForcedSwitchEast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegControlRapsForcedSwitchEast_Type.__name__ = "Integer32"
_SleY1731MegControlRapsForcedSwitchEast_Object = MibScalar
sleY1731MegControlRapsForcedSwitchEast = _SleY1731MegControlRapsForcedSwitchEast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 40),
    _SleY1731MegControlRapsForcedSwitchEast_Type()
)
sleY1731MegControlRapsForcedSwitchEast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsForcedSwitchEast.setStatus("current")


class _SleY1731MegControlRapsForcedSwitchWest_Type(Integer32):
    """Custom type sleY1731MegControlRapsForcedSwitchWest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MegControlRapsForcedSwitchWest_Type.__name__ = "Integer32"
_SleY1731MegControlRapsForcedSwitchWest_Object = MibScalar
sleY1731MegControlRapsForcedSwitchWest = _SleY1731MegControlRapsForcedSwitchWest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 41),
    _SleY1731MegControlRapsForcedSwitchWest_Type()
)
sleY1731MegControlRapsForcedSwitchWest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlRapsForcedSwitchWest.setStatus("current")


class _SleY1731MegControlMd_Type(OctetString):
    """Custom type sleY1731MegControlMd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleY1731MegControlMd_Type.__name__ = "OctetString"
_SleY1731MegControlMd_Object = MibScalar
sleY1731MegControlMd = _SleY1731MegControlMd_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 2, 42),
    _SleY1731MegControlMd_Type()
)
sleY1731MegControlMd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MegControlMd.setStatus("current")
_SleY1731MegNotification_ObjectIdentity = ObjectIdentity
sleY1731MegNotification = _SleY1731MegNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3)
)
_SleY1731Mep_ObjectIdentity = ObjectIdentity
sleY1731Mep = _SleY1731Mep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3)
)
_SleY1731MepTable_Object = MibTable
sleY1731MepTable = _SleY1731MepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1)
)
if mibBuilder.loadTexts:
    sleY1731MepTable.setStatus("current")
_SleY1731MepEntry_Object = MibTableRow
sleY1731MepEntry = _SleY1731MepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1)
)
sleY1731MepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
)
if mibBuilder.loadTexts:
    sleY1731MepEntry.setStatus("current")


class _SleY1731MepIdentifier_Type(Integer32):
    """Custom type sleY1731MepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepIdentifier_Type.__name__ = "Integer32"
_SleY1731MepIdentifier_Object = MibTableColumn
sleY1731MepIdentifier = _SleY1731MepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 1),
    _SleY1731MepIdentifier_Type()
)
sleY1731MepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepIdentifier.setStatus("current")
_SleY1731MepIfIndex_Type = Integer32
_SleY1731MepIfIndex_Object = MibTableColumn
sleY1731MepIfIndex = _SleY1731MepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 2),
    _SleY1731MepIfIndex_Type()
)
sleY1731MepIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepIfIndex.setStatus("current")


class _SleY1731MepDirection_Type(Integer32):
    """Custom type sleY1731MepDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_SleY1731MepDirection_Type.__name__ = "Integer32"
_SleY1731MepDirection_Object = MibTableColumn
sleY1731MepDirection = _SleY1731MepDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 3),
    _SleY1731MepDirection_Type()
)
sleY1731MepDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepDirection.setStatus("current")


class _SleY1731MepEnable_Type(Integer32):
    """Custom type sleY1731MepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepEnable_Type.__name__ = "Integer32"
_SleY1731MepEnable_Object = MibTableColumn
sleY1731MepEnable = _SleY1731MepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 4),
    _SleY1731MepEnable_Type()
)
sleY1731MepEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepEnable.setStatus("current")


class _SleY1731MepFngState_Type(Integer32):
    """Custom type sleY1731MepFngState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("reset", 1),
          ("defect", 2),
          ("reportDefect", 3),
          ("defectReported", 4),
          ("defectCearing", 5),
          ("defectCleared", 6))
    )


_SleY1731MepFngState_Type.__name__ = "Integer32"
_SleY1731MepFngState_Object = MibTableColumn
sleY1731MepFngState = _SleY1731MepFngState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 5),
    _SleY1731MepFngState_Type()
)
sleY1731MepFngState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepFngState.setStatus("current")


class _SleY1731MepCcEnable_Type(Integer32):
    """Custom type sleY1731MepCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepCcEnable_Type.__name__ = "Integer32"
_SleY1731MepCcEnable_Object = MibTableColumn
sleY1731MepCcEnable = _SleY1731MepCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 6),
    _SleY1731MepCcEnable_Type()
)
sleY1731MepCcEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcEnable.setStatus("current")


class _SleY1731MepMacAddress_Type(OctetString):
    """Custom type sleY1731MepMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731MepMacAddress_Type.__name__ = "OctetString"
_SleY1731MepMacAddress_Object = MibTableColumn
sleY1731MepMacAddress = _SleY1731MepMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 7),
    _SleY1731MepMacAddress_Type()
)
sleY1731MepMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepMacAddress.setStatus("current")


class _SleY1731MepFaultPriority_Type(Integer32):
    """Custom type sleY1731MepFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("rdi", 1),
          ("loc", 2),
          ("unp", 3),
          ("unm", 4),
          ("mmg", 5),
          ("unl", 6),
          ("ais", 7),
          ("lck", 8))
    )


_SleY1731MepFaultPriority_Type.__name__ = "Integer32"
_SleY1731MepFaultPriority_Object = MibTableColumn
sleY1731MepFaultPriority = _SleY1731MepFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 8),
    _SleY1731MepFaultPriority_Type()
)
sleY1731MepFaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepFaultPriority.setStatus("current")


class _SleY1731MepFaultKeepTime_Type(Integer32):
    """Custom type sleY1731MepFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MepFaultKeepTime_Type.__name__ = "Integer32"
_SleY1731MepFaultKeepTime_Object = MibTableColumn
sleY1731MepFaultKeepTime = _SleY1731MepFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 9),
    _SleY1731MepFaultKeepTime_Type()
)
sleY1731MepFaultKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepFaultKeepTime.setStatus("current")


class _SleY1731MepFaultClearTime_Type(Integer32):
    """Custom type sleY1731MepFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MepFaultClearTime_Type.__name__ = "Integer32"
_SleY1731MepFaultClearTime_Object = MibTableColumn
sleY1731MepFaultClearTime = _SleY1731MepFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 10),
    _SleY1731MepFaultClearTime_Type()
)
sleY1731MepFaultClearTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepFaultClearTime.setStatus("current")


class _SleY1731MepHighestPrDefect_Type(Integer32):
    """Custom type sleY1731MepHighestPrDefect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("rdi", 1),
          ("loc", 2),
          ("unp", 3),
          ("unm", 4),
          ("mmg", 5),
          ("unl", 6),
          ("ais", 7),
          ("lck", 8))
    )


_SleY1731MepHighestPrDefect_Type.__name__ = "Integer32"
_SleY1731MepHighestPrDefect_Object = MibTableColumn
sleY1731MepHighestPrDefect = _SleY1731MepHighestPrDefect_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 11),
    _SleY1731MepHighestPrDefect_Type()
)
sleY1731MepHighestPrDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepHighestPrDefect.setStatus("current")


class _SleY1731MepAisEnable_Type(Integer32):
    """Custom type sleY1731MepAisEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepAisEnable_Type.__name__ = "Integer32"
_SleY1731MepAisEnable_Object = MibTableColumn
sleY1731MepAisEnable = _SleY1731MepAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 12),
    _SleY1731MepAisEnable_Type()
)
sleY1731MepAisEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepAisEnable.setStatus("current")


class _SleY1731MepAisTransmitEnable_Type(Integer32):
    """Custom type sleY1731MepAisTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepAisTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MepAisTransmitEnable_Object = MibTableColumn
sleY1731MepAisTransmitEnable = _SleY1731MepAisTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 13),
    _SleY1731MepAisTransmitEnable_Type()
)
sleY1731MepAisTransmitEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepAisTransmitEnable.setStatus("current")


class _SleY1731MepLckEnable_Type(Integer32):
    """Custom type sleY1731MepLckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepLckEnable_Type.__name__ = "Integer32"
_SleY1731MepLckEnable_Object = MibTableColumn
sleY1731MepLckEnable = _SleY1731MepLckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 14),
    _SleY1731MepLckEnable_Type()
)
sleY1731MepLckEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLckEnable.setStatus("current")


class _SleY1731MepLckTransmitEnable_Type(Integer32):
    """Custom type sleY1731MepLckTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepLckTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MepLckTransmitEnable_Object = MibTableColumn
sleY1731MepLckTransmitEnable = _SleY1731MepLckTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 15),
    _SleY1731MepLckTransmitEnable_Type()
)
sleY1731MepLckTransmitEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLckTransmitEnable.setStatus("current")


class _SleY1731MepOutOfService_Type(Integer32):
    """Custom type sleY1731MepOutOfService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepOutOfService_Type.__name__ = "Integer32"
_SleY1731MepOutOfService_Object = MibTableColumn
sleY1731MepOutOfService = _SleY1731MepOutOfService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 16),
    _SleY1731MepOutOfService_Type()
)
sleY1731MepOutOfService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepOutOfService.setStatus("current")


class _SleY1731MepDlmEnabledRmep_Type(Integer32):
    """Custom type sleY1731MepDlmEnabledRmep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_SleY1731MepDlmEnabledRmep_Type.__name__ = "Integer32"
_SleY1731MepDlmEnabledRmep_Object = MibTableColumn
sleY1731MepDlmEnabledRmep = _SleY1731MepDlmEnabledRmep_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 17),
    _SleY1731MepDlmEnabledRmep_Type()
)
sleY1731MepDlmEnabledRmep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepDlmEnabledRmep.setStatus("current")


class _SleY1731MepDefects_Type(Bits):
    """Custom type sleY1731MepDefects based on Bits"""
    namedValues = NamedValues(
        *(("rdi", 0),
          ("loc", 1),
          ("unp", 2),
          ("unm", 3),
          ("mmg", 4),
          ("unl", 5),
          ("ais", 6),
          ("lck", 7))
    )

_SleY1731MepDefects_Type.__name__ = "Bits"
_SleY1731MepDefects_Object = MibTableColumn
sleY1731MepDefects = _SleY1731MepDefects_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 18),
    _SleY1731MepDefects_Type()
)
sleY1731MepDefects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepDefects.setStatus("current")
_SleY1731MepCcmSequenceErrors_Type = Counter32
_SleY1731MepCcmSequenceErrors_Object = MibTableColumn
sleY1731MepCcmSequenceErrors = _SleY1731MepCcmSequenceErrors_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 19),
    _SleY1731MepCcmSequenceErrors_Type()
)
sleY1731MepCcmSequenceErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmSequenceErrors.setStatus("current")
_SleY1731MepCciSentCcms_Type = Counter32
_SleY1731MepCciSentCcms_Object = MibTableColumn
sleY1731MepCciSentCcms = _SleY1731MepCciSentCcms_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 20),
    _SleY1731MepCciSentCcms_Type()
)
sleY1731MepCciSentCcms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCciSentCcms.setStatus("current")
_SleY1731MepNextLbmTransId_Type = Integer32
_SleY1731MepNextLbmTransId_Object = MibTableColumn
sleY1731MepNextLbmTransId = _SleY1731MepNextLbmTransId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 21),
    _SleY1731MepNextLbmTransId_Type()
)
sleY1731MepNextLbmTransId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepNextLbmTransId.setStatus("current")
_SleY1731MepLbSuccessRate_Type = Integer32
_SleY1731MepLbSuccessRate_Object = MibTableColumn
sleY1731MepLbSuccessRate = _SleY1731MepLbSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 22),
    _SleY1731MepLbSuccessRate_Type()
)
sleY1731MepLbSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbSuccessRate.setStatus("current")
_SleY1731MepLbRoundtripMin_Type = Counter32
_SleY1731MepLbRoundtripMin_Object = MibTableColumn
sleY1731MepLbRoundtripMin = _SleY1731MepLbRoundtripMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 23),
    _SleY1731MepLbRoundtripMin_Type()
)
sleY1731MepLbRoundtripMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbRoundtripMin.setStatus("current")
_SleY1731MepLbRoundtripMax_Type = Counter32
_SleY1731MepLbRoundtripMax_Object = MibTableColumn
sleY1731MepLbRoundtripMax = _SleY1731MepLbRoundtripMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 24),
    _SleY1731MepLbRoundtripMax_Type()
)
sleY1731MepLbRoundtripMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbRoundtripMax.setStatus("current")
_SleY1731MepLbRoundtripAvg_Type = Counter32
_SleY1731MepLbRoundtripAvg_Object = MibTableColumn
sleY1731MepLbRoundtripAvg = _SleY1731MepLbRoundtripAvg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 25),
    _SleY1731MepLbRoundtripAvg_Type()
)
sleY1731MepLbRoundtripAvg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbRoundtripAvg.setStatus("current")
_SleY1731MepLbrIn_Type = Counter32
_SleY1731MepLbrIn_Object = MibTableColumn
sleY1731MepLbrIn = _SleY1731MepLbrIn_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 26),
    _SleY1731MepLbrIn_Type()
)
sleY1731MepLbrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbrIn.setStatus("current")
_SleY1731MepLbrInOutOfOrder_Type = Counter32
_SleY1731MepLbrInOutOfOrder_Object = MibTableColumn
sleY1731MepLbrInOutOfOrder = _SleY1731MepLbrInOutOfOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 27),
    _SleY1731MepLbrInOutOfOrder_Type()
)
sleY1731MepLbrInOutOfOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbrInOutOfOrder.setStatus("current")
_SleY1731MepTstLbrInBitError_Type = Counter32
_SleY1731MepTstLbrInBitError_Object = MibTableColumn
sleY1731MepTstLbrInBitError = _SleY1731MepTstLbrInBitError_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 28),
    _SleY1731MepTstLbrInBitError_Type()
)
sleY1731MepTstLbrInBitError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTstLbrInBitError.setStatus("current")
_SleY1731MepTstLbrInCrcError_Type = Counter32
_SleY1731MepTstLbrInCrcError_Object = MibTableColumn
sleY1731MepTstLbrInCrcError = _SleY1731MepTstLbrInCrcError_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 29),
    _SleY1731MepTstLbrInCrcError_Type()
)
sleY1731MepTstLbrInCrcError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTstLbrInCrcError.setStatus("current")
_SleY1731MepLtmNextSeqNumber_Type = Integer32
_SleY1731MepLtmNextSeqNumber_Object = MibTableColumn
sleY1731MepLtmNextSeqNumber = _SleY1731MepLtmNextSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 30),
    _SleY1731MepLtmNextSeqNumber_Type()
)
sleY1731MepLtmNextSeqNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLtmNextSeqNumber.setStatus("current")
_SleY1731MepUnexpLtrIn_Type = Counter32
_SleY1731MepUnexpLtrIn_Object = MibTableColumn
sleY1731MepUnexpLtrIn = _SleY1731MepUnexpLtrIn_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 31),
    _SleY1731MepUnexpLtrIn_Type()
)
sleY1731MepUnexpLtrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepUnexpLtrIn.setStatus("current")
_SleY1731MepLbrOut_Type = Counter32
_SleY1731MepLbrOut_Object = MibTableColumn
sleY1731MepLbrOut = _SleY1731MepLbrOut_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 32),
    _SleY1731MepLbrOut_Type()
)
sleY1731MepLbrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepLbrOut.setStatus("current")
_SleY1731MepTmLbmCount_Type = Integer32
_SleY1731MepTmLbmCount_Object = MibTableColumn
sleY1731MepTmLbmCount = _SleY1731MepTmLbmCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 33),
    _SleY1731MepTmLbmCount_Type()
)
sleY1731MepTmLbmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTmLbmCount.setStatus("current")
_SleY1731MepTmLbrCount_Type = Integer32
_SleY1731MepTmLbrCount_Object = MibTableColumn
sleY1731MepTmLbrCount = _SleY1731MepTmLbrCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 34),
    _SleY1731MepTmLbrCount_Type()
)
sleY1731MepTmLbrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTmLbrCount.setStatus("current")
_SleY1731MepTmLbrFirstLostId_Type = Integer32
_SleY1731MepTmLbrFirstLostId_Object = MibTableColumn
sleY1731MepTmLbrFirstLostId = _SleY1731MepTmLbrFirstLostId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 35),
    _SleY1731MepTmLbrFirstLostId_Type()
)
sleY1731MepTmLbrFirstLostId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTmLbrFirstLostId.setStatus("current")
_SleY1731MepTmLbrMaxRate_Type = Integer32
_SleY1731MepTmLbrMaxRate_Object = MibTableColumn
sleY1731MepTmLbrMaxRate = _SleY1731MepTmLbrMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 36),
    _SleY1731MepTmLbrMaxRate_Type()
)
sleY1731MepTmLbrMaxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTmLbrMaxRate.setStatus("current")
_SleY1731MepTmTstCount_Type = Integer32
_SleY1731MepTmTstCount_Object = MibTableColumn
sleY1731MepTmTstCount = _SleY1731MepTmTstCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 37),
    _SleY1731MepTmTstCount_Type()
)
sleY1731MepTmTstCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepTmTstCount.setStatus("current")
_SleY1731MepCcmFrameLossNearMin_Type = Integer32
_SleY1731MepCcmFrameLossNearMin_Object = MibTableColumn
sleY1731MepCcmFrameLossNearMin = _SleY1731MepCcmFrameLossNearMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 38),
    _SleY1731MepCcmFrameLossNearMin_Type()
)
sleY1731MepCcmFrameLossNearMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossNearMin.setStatus("current")
_SleY1731MepCcmFrameLossNearMax_Type = Integer32
_SleY1731MepCcmFrameLossNearMax_Object = MibTableColumn
sleY1731MepCcmFrameLossNearMax = _SleY1731MepCcmFrameLossNearMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 39),
    _SleY1731MepCcmFrameLossNearMax_Type()
)
sleY1731MepCcmFrameLossNearMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossNearMax.setStatus("current")
_SleY1731MepCcmFrameLossNearSum_Type = Integer32
_SleY1731MepCcmFrameLossNearSum_Object = MibTableColumn
sleY1731MepCcmFrameLossNearSum = _SleY1731MepCcmFrameLossNearSum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 40),
    _SleY1731MepCcmFrameLossNearSum_Type()
)
sleY1731MepCcmFrameLossNearSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossNearSum.setStatus("current")
_SleY1731MepCcmFrameLossFarMin_Type = Integer32
_SleY1731MepCcmFrameLossFarMin_Object = MibTableColumn
sleY1731MepCcmFrameLossFarMin = _SleY1731MepCcmFrameLossFarMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 41),
    _SleY1731MepCcmFrameLossFarMin_Type()
)
sleY1731MepCcmFrameLossFarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossFarMin.setStatus("current")
_SleY1731MepCcmFrameLossFarMax_Type = Integer32
_SleY1731MepCcmFrameLossFarMax_Object = MibTableColumn
sleY1731MepCcmFrameLossFarMax = _SleY1731MepCcmFrameLossFarMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 42),
    _SleY1731MepCcmFrameLossFarMax_Type()
)
sleY1731MepCcmFrameLossFarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossFarMax.setStatus("current")
_SleY1731MepCcmFrameLossFarSum_Type = Integer32
_SleY1731MepCcmFrameLossFarSum_Object = MibTableColumn
sleY1731MepCcmFrameLossFarSum = _SleY1731MepCcmFrameLossFarSum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 43),
    _SleY1731MepCcmFrameLossFarSum_Type()
)
sleY1731MepCcmFrameLossFarSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossFarSum.setStatus("current")


class _SleY1731MepPmEnable_Type(Integer32):
    """Custom type sleY1731MepPmEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepPmEnable_Type.__name__ = "Integer32"
_SleY1731MepPmEnable_Object = MibTableColumn
sleY1731MepPmEnable = _SleY1731MepPmEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 44),
    _SleY1731MepPmEnable_Type()
)
sleY1731MepPmEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepPmEnable.setStatus("current")
_SleY1731MepCcmFrameLossNearRatio_Type = Integer32
_SleY1731MepCcmFrameLossNearRatio_Object = MibTableColumn
sleY1731MepCcmFrameLossNearRatio = _SleY1731MepCcmFrameLossNearRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 45),
    _SleY1731MepCcmFrameLossNearRatio_Type()
)
sleY1731MepCcmFrameLossNearRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossNearRatio.setStatus("current")
_SleY1731MepCcmFrameLossNearAvgRatio_Type = Integer32
_SleY1731MepCcmFrameLossNearAvgRatio_Object = MibTableColumn
sleY1731MepCcmFrameLossNearAvgRatio = _SleY1731MepCcmFrameLossNearAvgRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 46),
    _SleY1731MepCcmFrameLossNearAvgRatio_Type()
)
sleY1731MepCcmFrameLossNearAvgRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossNearAvgRatio.setStatus("current")
_SleY1731MepCcmFrameLossFarRatio_Type = Integer32
_SleY1731MepCcmFrameLossFarRatio_Object = MibTableColumn
sleY1731MepCcmFrameLossFarRatio = _SleY1731MepCcmFrameLossFarRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 47),
    _SleY1731MepCcmFrameLossFarRatio_Type()
)
sleY1731MepCcmFrameLossFarRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossFarRatio.setStatus("current")
_SleY1731MepCcmFrameLossFarAvgRatio_Type = Integer32
_SleY1731MepCcmFrameLossFarAvgRatio_Object = MibTableColumn
sleY1731MepCcmFrameLossFarAvgRatio = _SleY1731MepCcmFrameLossFarAvgRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 48),
    _SleY1731MepCcmFrameLossFarAvgRatio_Type()
)
sleY1731MepCcmFrameLossFarAvgRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepCcmFrameLossFarAvgRatio.setStatus("current")


class _SleY1731MepRllcf_Type(Integer32):
    """Custom type sleY1731MepRllcf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepRllcf_Type.__name__ = "Integer32"
_SleY1731MepRllcf_Object = MibTableColumn
sleY1731MepRllcf = _SleY1731MepRllcf_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 49),
    _SleY1731MepRllcf_Type()
)
sleY1731MepRllcf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepRllcf.setStatus("current")


class _SleY1731MepRllcfHoldOff_Type(Integer32):
    """Custom type sleY1731MepRllcfHoldOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3000),
    )


_SleY1731MepRllcfHoldOff_Type.__name__ = "Integer32"
_SleY1731MepRllcfHoldOff_Object = MibTableColumn
sleY1731MepRllcfHoldOff = _SleY1731MepRllcfHoldOff_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 50),
    _SleY1731MepRllcfHoldOff_Type()
)
sleY1731MepRllcfHoldOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepRllcfHoldOff.setStatus("current")


class _SleY1731MepRllcfGuardTime_Type(Integer32):
    """Custom type sleY1731MepRllcfGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 10000),
    )


_SleY1731MepRllcfGuardTime_Type.__name__ = "Integer32"
_SleY1731MepRllcfGuardTime_Object = MibTableColumn
sleY1731MepRllcfGuardTime = _SleY1731MepRllcfGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 1, 1, 51),
    _SleY1731MepRllcfGuardTime_Type()
)
sleY1731MepRllcfGuardTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepRllcfGuardTime.setStatus("current")
_SleY1731MepControl_ObjectIdentity = ObjectIdentity
sleY1731MepControl = _SleY1731MepControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2)
)


class _SleY1731MepControlRequest_Type(Integer32):
    """Custom type sleY1731MepControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("createY1731Mep", 1),
          ("deleteY1731Mep", 2),
          ("setY1731MepEnable", 3),
          ("setY1731MepCcEnable", 4),
          ("setY1731MepFaultProfile", 5),
          ("setY1731MepAisEnable", 6),
          ("setY1731MepAisTransmitEnable", 7),
          ("setY1731MepLckEnable", 8),
          ("setY1731MepLckTransmitEnable", 9),
          ("setY1731MepOutOfService", 10),
          ("setY1731MepDlmEnable", 11),
          ("transmitY1731Lbm", 12),
          ("transmitY1731Ltm", 13),
          ("transmitY1731TstLbm", 14),
          ("transmitY1731TmLbm", 15),
          ("transmitY1731Tst", 16),
          ("receiveY1731Tst", 17),
          ("transmitY1731TmTst", 18),
          ("receiveY1731TmTst", 19),
          ("transmitY1731Lmm", 20),
          ("transmitY17311dm", 21),
          ("receiveY17311dm", 22),
          ("transmitY1731dmm", 23),
          ("setY1731MepPmEnable", 24),
          ("setY1731MepRllcf", 25))
    )


_SleY1731MepControlRequest_Type.__name__ = "Integer32"
_SleY1731MepControlRequest_Object = MibScalar
sleY1731MepControlRequest = _SleY1731MepControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 1),
    _SleY1731MepControlRequest_Type()
)
sleY1731MepControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlRequest.setStatus("current")
_SleY1731MepControlStatus_Type = SleControlStatusType
_SleY1731MepControlStatus_Object = MibScalar
sleY1731MepControlStatus = _SleY1731MepControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 2),
    _SleY1731MepControlStatus_Type()
)
sleY1731MepControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepControlStatus.setStatus("current")
_SleY1731MepControlTimer_Type = Gauge32
_SleY1731MepControlTimer_Object = MibScalar
sleY1731MepControlTimer = _SleY1731MepControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 3),
    _SleY1731MepControlTimer_Type()
)
sleY1731MepControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTimer.setStatus("current")
_SleY1731MepControlTimeStamp_Type = TimeTicks
_SleY1731MepControlTimeStamp_Object = MibScalar
sleY1731MepControlTimeStamp = _SleY1731MepControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 4),
    _SleY1731MepControlTimeStamp_Type()
)
sleY1731MepControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepControlTimeStamp.setStatus("current")
_SleY1731MepControlReqResult_Type = SleControlRequestResultType
_SleY1731MepControlReqResult_Object = MibScalar
sleY1731MepControlReqResult = _SleY1731MepControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 5),
    _SleY1731MepControlReqResult_Type()
)
sleY1731MepControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MepControlReqResult.setStatus("current")


class _SleY1731MepControlIdentifier_Type(Integer32):
    """Custom type sleY1731MepControlIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlIdentifier_Type.__name__ = "Integer32"
_SleY1731MepControlIdentifier_Object = MibScalar
sleY1731MepControlIdentifier = _SleY1731MepControlIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 6),
    _SleY1731MepControlIdentifier_Type()
)
sleY1731MepControlIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlIdentifier.setStatus("current")


class _SleY1731MepControlMegIndex_Type(Integer32):
    """Custom type sleY1731MepControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MepControlMegIndex_Type.__name__ = "Integer32"
_SleY1731MepControlMegIndex_Object = MibScalar
sleY1731MepControlMegIndex = _SleY1731MepControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 7),
    _SleY1731MepControlMegIndex_Type()
)
sleY1731MepControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlMegIndex.setStatus("current")
_SleY1731MepControlIfIndex_Type = Integer32
_SleY1731MepControlIfIndex_Object = MibScalar
sleY1731MepControlIfIndex = _SleY1731MepControlIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 8),
    _SleY1731MepControlIfIndex_Type()
)
sleY1731MepControlIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlIfIndex.setStatus("current")


class _SleY1731MepControlDirection_Type(Integer32):
    """Custom type sleY1731MepControlDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_SleY1731MepControlDirection_Type.__name__ = "Integer32"
_SleY1731MepControlDirection_Object = MibScalar
sleY1731MepControlDirection = _SleY1731MepControlDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 9),
    _SleY1731MepControlDirection_Type()
)
sleY1731MepControlDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlDirection.setStatus("current")


class _SleY1731MepControlEnable_Type(Integer32):
    """Custom type sleY1731MepControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlEnable_Type.__name__ = "Integer32"
_SleY1731MepControlEnable_Object = MibScalar
sleY1731MepControlEnable = _SleY1731MepControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 10),
    _SleY1731MepControlEnable_Type()
)
sleY1731MepControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlEnable.setStatus("current")


class _SleY1731MepControlCcEnable_Type(Integer32):
    """Custom type sleY1731MepControlCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlCcEnable_Type.__name__ = "Integer32"
_SleY1731MepControlCcEnable_Object = MibScalar
sleY1731MepControlCcEnable = _SleY1731MepControlCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 11),
    _SleY1731MepControlCcEnable_Type()
)
sleY1731MepControlCcEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlCcEnable.setStatus("current")


class _SleY1731MepControlFaultPriority_Type(Integer32):
    """Custom type sleY1731MepControlFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("rdi", 1),
          ("loc", 2),
          ("unp", 3),
          ("unm", 4),
          ("mmg", 5),
          ("unl", 6),
          ("ais", 7),
          ("lck", 8))
    )


_SleY1731MepControlFaultPriority_Type.__name__ = "Integer32"
_SleY1731MepControlFaultPriority_Object = MibScalar
sleY1731MepControlFaultPriority = _SleY1731MepControlFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 12),
    _SleY1731MepControlFaultPriority_Type()
)
sleY1731MepControlFaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlFaultPriority.setStatus("current")


class _SleY1731MepControlFaultKeepTime_Type(Integer32):
    """Custom type sleY1731MepControlFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MepControlFaultKeepTime_Type.__name__ = "Integer32"
_SleY1731MepControlFaultKeepTime_Object = MibScalar
sleY1731MepControlFaultKeepTime = _SleY1731MepControlFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 13),
    _SleY1731MepControlFaultKeepTime_Type()
)
sleY1731MepControlFaultKeepTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlFaultKeepTime.setStatus("current")


class _SleY1731MepControlFaultClearTime_Type(Integer32):
    """Custom type sleY1731MepControlFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleY1731MepControlFaultClearTime_Type.__name__ = "Integer32"
_SleY1731MepControlFaultClearTime_Object = MibScalar
sleY1731MepControlFaultClearTime = _SleY1731MepControlFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 14),
    _SleY1731MepControlFaultClearTime_Type()
)
sleY1731MepControlFaultClearTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlFaultClearTime.setStatus("current")


class _SleY1731MepControlAisEnable_Type(Integer32):
    """Custom type sleY1731MepControlAisEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlAisEnable_Type.__name__ = "Integer32"
_SleY1731MepControlAisEnable_Object = MibScalar
sleY1731MepControlAisEnable = _SleY1731MepControlAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 15),
    _SleY1731MepControlAisEnable_Type()
)
sleY1731MepControlAisEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlAisEnable.setStatus("current")


class _SleY1731MepControlAisTransmitEnable_Type(Integer32):
    """Custom type sleY1731MepControlAisTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlAisTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MepControlAisTransmitEnable_Object = MibScalar
sleY1731MepControlAisTransmitEnable = _SleY1731MepControlAisTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 16),
    _SleY1731MepControlAisTransmitEnable_Type()
)
sleY1731MepControlAisTransmitEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlAisTransmitEnable.setStatus("current")


class _SleY1731MepControlLckEnable_Type(Integer32):
    """Custom type sleY1731MepControlLckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlLckEnable_Type.__name__ = "Integer32"
_SleY1731MepControlLckEnable_Object = MibScalar
sleY1731MepControlLckEnable = _SleY1731MepControlLckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 17),
    _SleY1731MepControlLckEnable_Type()
)
sleY1731MepControlLckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlLckEnable.setStatus("current")


class _SleY1731MepControlLckTransmitEnable_Type(Integer32):
    """Custom type sleY1731MepControlLckTransmitEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlLckTransmitEnable_Type.__name__ = "Integer32"
_SleY1731MepControlLckTransmitEnable_Object = MibScalar
sleY1731MepControlLckTransmitEnable = _SleY1731MepControlLckTransmitEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 18),
    _SleY1731MepControlLckTransmitEnable_Type()
)
sleY1731MepControlLckTransmitEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlLckTransmitEnable.setStatus("current")


class _SleY1731MepControlOutOfService_Type(Integer32):
    """Custom type sleY1731MepControlOutOfService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlOutOfService_Type.__name__ = "Integer32"
_SleY1731MepControlOutOfService_Object = MibScalar
sleY1731MepControlOutOfService = _SleY1731MepControlOutOfService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 19),
    _SleY1731MepControlOutOfService_Type()
)
sleY1731MepControlOutOfService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlOutOfService.setStatus("current")


class _SleY1731MepControlDlmEnabledRmep_Type(Integer32):
    """Custom type sleY1731MepControlDlmEnabledRmep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_SleY1731MepControlDlmEnabledRmep_Type.__name__ = "Integer32"
_SleY1731MepControlDlmEnabledRmep_Object = MibScalar
sleY1731MepControlDlmEnabledRmep = _SleY1731MepControlDlmEnabledRmep_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 20),
    _SleY1731MepControlDlmEnabledRmep_Type()
)
sleY1731MepControlDlmEnabledRmep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlDlmEnabledRmep.setStatus("current")


class _SleY1731MepControlTransmitLbmIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitLbmIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmIsUnicast_Object = MibScalar
sleY1731MepControlTransmitLbmIsUnicast = _SleY1731MepControlTransmitLbmIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 21),
    _SleY1731MepControlTransmitLbmIsUnicast_Type()
)
sleY1731MepControlTransmitLbmIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmIsUnicast.setStatus("current")


class _SleY1731MepControlTransmitLbmDestMacAddress_Type(OctetString):
    """Custom type sleY1731MepControlTransmitLbmDestMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731MepControlTransmitLbmDestMacAddress_Type.__name__ = "OctetString"
_SleY1731MepControlTransmitLbmDestMacAddress_Object = MibScalar
sleY1731MepControlTransmitLbmDestMacAddress = _SleY1731MepControlTransmitLbmDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 22),
    _SleY1731MepControlTransmitLbmDestMacAddress_Type()
)
sleY1731MepControlTransmitLbmDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmDestMacAddress.setStatus("current")


class _SleY1731MepControlTransmitLbmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitLbmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmDestMepId_Object = MibScalar
sleY1731MepControlTransmitLbmDestMepId = _SleY1731MepControlTransmitLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 23),
    _SleY1731MepControlTransmitLbmDestMepId_Type()
)
sleY1731MepControlTransmitLbmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmDestMepId.setStatus("current")


class _SleY1731MepControlTransmitLbmDestIsMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmDestIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitLbmDestIsMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmDestIsMepId_Object = MibScalar
sleY1731MepControlTransmitLbmDestIsMepId = _SleY1731MepControlTransmitLbmDestIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 24),
    _SleY1731MepControlTransmitLbmDestIsMepId_Type()
)
sleY1731MepControlTransmitLbmDestIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmDestIsMepId.setStatus("current")


class _SleY1731MepControlTransmitLbmCount_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6000),
    )


_SleY1731MepControlTransmitLbmCount_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmCount_Object = MibScalar
sleY1731MepControlTransmitLbmCount = _SleY1731MepControlTransmitLbmCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 25),
    _SleY1731MepControlTransmitLbmCount_Type()
)
sleY1731MepControlTransmitLbmCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmCount.setStatus("current")


class _SleY1731MepControlTransmitLbmInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmitLbmInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmInterval_Object = MibScalar
sleY1731MepControlTransmitLbmInterval = _SleY1731MepControlTransmitLbmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 26),
    _SleY1731MepControlTransmitLbmInterval_Type()
)
sleY1731MepControlTransmitLbmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmInterval.setStatus("current")


class _SleY1731MepControlTransmitLbmTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitLbmTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmTimeout_Object = MibScalar
sleY1731MepControlTransmitLbmTimeout = _SleY1731MepControlTransmitLbmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 27),
    _SleY1731MepControlTransmitLbmTimeout_Type()
)
sleY1731MepControlTransmitLbmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmTimeout.setStatus("current")


class _SleY1731MepControlTransmitLbmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitLbmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmPriority_Object = MibScalar
sleY1731MepControlTransmitLbmPriority = _SleY1731MepControlTransmitLbmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 28),
    _SleY1731MepControlTransmitLbmPriority_Type()
)
sleY1731MepControlTransmitLbmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmPriority.setStatus("current")


class _SleY1731MepControlTransmitLbmLength_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLbmLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1400),
    )


_SleY1731MepControlTransmitLbmLength_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLbmLength_Object = MibScalar
sleY1731MepControlTransmitLbmLength = _SleY1731MepControlTransmitLbmLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 29),
    _SleY1731MepControlTransmitLbmLength_Type()
)
sleY1731MepControlTransmitLbmLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLbmLength.setStatus("current")


class _SleY1731MepControlTransmitLtmTargetMacAddress_Type(OctetString):
    """Custom type sleY1731MepControlTransmitLtmTargetMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731MepControlTransmitLtmTargetMacAddress_Type.__name__ = "OctetString"
_SleY1731MepControlTransmitLtmTargetMacAddress_Object = MibScalar
sleY1731MepControlTransmitLtmTargetMacAddress = _SleY1731MepControlTransmitLtmTargetMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 30),
    _SleY1731MepControlTransmitLtmTargetMacAddress_Type()
)
sleY1731MepControlTransmitLtmTargetMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmTargetMacAddress.setStatus("current")


class _SleY1731MepControlTransmitLtmTargetMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLtmTargetMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitLtmTargetMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLtmTargetMepId_Object = MibScalar
sleY1731MepControlTransmitLtmTargetMepId = _SleY1731MepControlTransmitLtmTargetMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 31),
    _SleY1731MepControlTransmitLtmTargetMepId_Type()
)
sleY1731MepControlTransmitLtmTargetMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmTargetMepId.setStatus("current")


class _SleY1731MepControlTransmitLtmTargetIsMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLtmTargetIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitLtmTargetIsMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLtmTargetIsMepId_Object = MibScalar
sleY1731MepControlTransmitLtmTargetIsMepId = _SleY1731MepControlTransmitLtmTargetIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 32),
    _SleY1731MepControlTransmitLtmTargetIsMepId_Type()
)
sleY1731MepControlTransmitLtmTargetIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmTargetIsMepId.setStatus("current")


class _SleY1731MepControlTransmitLtmFlags_Type(Bits):
    """Custom type sleY1731MepControlTransmitLtmFlags based on Bits"""
    namedValues = NamedValues(
        ("useFDBonly", 0)
    )

_SleY1731MepControlTransmitLtmFlags_Type.__name__ = "Bits"
_SleY1731MepControlTransmitLtmFlags_Object = MibScalar
sleY1731MepControlTransmitLtmFlags = _SleY1731MepControlTransmitLtmFlags_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 33),
    _SleY1731MepControlTransmitLtmFlags_Type()
)
sleY1731MepControlTransmitLtmFlags.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmFlags.setStatus("current")


class _SleY1731MepControlTransmitLtmTtl_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLtmTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SleY1731MepControlTransmitLtmTtl_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLtmTtl_Object = MibScalar
sleY1731MepControlTransmitLtmTtl = _SleY1731MepControlTransmitLtmTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 34),
    _SleY1731MepControlTransmitLtmTtl_Type()
)
sleY1731MepControlTransmitLtmTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmTtl.setStatus("current")


class _SleY1731MepControlTransmitLtmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLtmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitLtmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLtmPriority_Object = MibScalar
sleY1731MepControlTransmitLtmPriority = _SleY1731MepControlTransmitLtmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 35),
    _SleY1731MepControlTransmitLtmPriority_Type()
)
sleY1731MepControlTransmitLtmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLtmPriority.setStatus("current")


class _SleY1731MepControlTransmitTstLbmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitTstLbmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmDestMepId_Object = MibScalar
sleY1731MepControlTransmitTstLbmDestMepId = _SleY1731MepControlTransmitTstLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 36),
    _SleY1731MepControlTransmitTstLbmDestMepId_Type()
)
sleY1731MepControlTransmitTstLbmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmDestMepId.setStatus("current")


class _SleY1731MepControlTransmitTstLbmDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitTstLbmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmDuration_Object = MibScalar
sleY1731MepControlTransmitTstLbmDuration = _SleY1731MepControlTransmitTstLbmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 37),
    _SleY1731MepControlTransmitTstLbmDuration_Type()
)
sleY1731MepControlTransmitTstLbmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmDuration.setStatus("current")


class _SleY1731MepControlTransmitTstLbmInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmitTstLbmInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmInterval_Object = MibScalar
sleY1731MepControlTransmitTstLbmInterval = _SleY1731MepControlTransmitTstLbmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 38),
    _SleY1731MepControlTransmitTstLbmInterval_Type()
)
sleY1731MepControlTransmitTstLbmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmInterval.setStatus("current")


class _SleY1731MepControlTransmitTstLbmTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitTstLbmTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmTimeout_Object = MibScalar
sleY1731MepControlTransmitTstLbmTimeout = _SleY1731MepControlTransmitTstLbmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 39),
    _SleY1731MepControlTransmitTstLbmTimeout_Type()
)
sleY1731MepControlTransmitTstLbmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmTimeout.setStatus("current")


class _SleY1731MepControlTransmitTstLbmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitTstLbmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmPriority_Object = MibScalar
sleY1731MepControlTransmitTstLbmPriority = _SleY1731MepControlTransmitTstLbmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 40),
    _SleY1731MepControlTransmitTstLbmPriority_Type()
)
sleY1731MepControlTransmitTstLbmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmPriority.setStatus("current")


class _SleY1731MepControlTransmitTstLbmLength_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1400),
    )


_SleY1731MepControlTransmitTstLbmLength_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmLength_Object = MibScalar
sleY1731MepControlTransmitTstLbmLength = _SleY1731MepControlTransmitTstLbmLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 41),
    _SleY1731MepControlTransmitTstLbmLength_Type()
)
sleY1731MepControlTransmitTstLbmLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmLength.setStatus("current")


class _SleY1731MepControlTransmitTstLbmPattern_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLbmPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SleY1731MepControlTransmitTstLbmPattern_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLbmPattern_Object = MibScalar
sleY1731MepControlTransmitTstLbmPattern = _SleY1731MepControlTransmitTstLbmPattern_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 42),
    _SleY1731MepControlTransmitTstLbmPattern_Type()
)
sleY1731MepControlTransmitTstLbmPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLbmPattern.setStatus("current")


class _SleY1731MepControlTransmitTmLbmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitTmLbmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmDestMepId_Object = MibScalar
sleY1731MepControlTransmitTmLbmDestMepId = _SleY1731MepControlTransmitTmLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 43),
    _SleY1731MepControlTransmitTmLbmDestMepId_Type()
)
sleY1731MepControlTransmitTmLbmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmDestMepId.setStatus("current")


class _SleY1731MepControlTransmitTmLbmDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitTmLbmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmDuration_Object = MibScalar
sleY1731MepControlTransmitTmLbmDuration = _SleY1731MepControlTransmitTmLbmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 44),
    _SleY1731MepControlTransmitTmLbmDuration_Type()
)
sleY1731MepControlTransmitTmLbmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmDuration.setStatus("current")


class _SleY1731MepControlTransmitTmLbmPartDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmPartDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SleY1731MepControlTransmitTmLbmPartDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmPartDuration_Object = MibScalar
sleY1731MepControlTransmitTmLbmPartDuration = _SleY1731MepControlTransmitTmLbmPartDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 45),
    _SleY1731MepControlTransmitTmLbmPartDuration_Type()
)
sleY1731MepControlTransmitTmLbmPartDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmPartDuration.setStatus("current")


class _SleY1731MepControlTransmitTmLbmStartRate_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmStartRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleY1731MepControlTransmitTmLbmStartRate_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmStartRate_Object = MibScalar
sleY1731MepControlTransmitTmLbmStartRate = _SleY1731MepControlTransmitTmLbmStartRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 46),
    _SleY1731MepControlTransmitTmLbmStartRate_Type()
)
sleY1731MepControlTransmitTmLbmStartRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmStartRate.setStatus("current")


class _SleY1731MepControlTransmitTmLbmIncRate_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmIncRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleY1731MepControlTransmitTmLbmIncRate_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmIncRate_Object = MibScalar
sleY1731MepControlTransmitTmLbmIncRate = _SleY1731MepControlTransmitTmLbmIncRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 47),
    _SleY1731MepControlTransmitTmLbmIncRate_Type()
)
sleY1731MepControlTransmitTmLbmIncRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmIncRate.setStatus("current")


class _SleY1731MepControlTransmitTmLbmTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitTmLbmTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmTimeout_Object = MibScalar
sleY1731MepControlTransmitTmLbmTimeout = _SleY1731MepControlTransmitTmLbmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 48),
    _SleY1731MepControlTransmitTmLbmTimeout_Type()
)
sleY1731MepControlTransmitTmLbmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmTimeout.setStatus("current")


class _SleY1731MepControlTransmitTmLbmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitTmLbmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmPriority_Object = MibScalar
sleY1731MepControlTransmitTmLbmPriority = _SleY1731MepControlTransmitTmLbmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 49),
    _SleY1731MepControlTransmitTmLbmPriority_Type()
)
sleY1731MepControlTransmitTmLbmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmPriority.setStatus("current")


class _SleY1731MepControlTransmitTmLbmLength_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1400),
    )


_SleY1731MepControlTransmitTmLbmLength_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmLength_Object = MibScalar
sleY1731MepControlTransmitTmLbmLength = _SleY1731MepControlTransmitTmLbmLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 50),
    _SleY1731MepControlTransmitTmLbmLength_Type()
)
sleY1731MepControlTransmitTmLbmLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmLength.setStatus("current")


class _SleY1731MepControlTransmitTmLbmPattern_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmLbmPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SleY1731MepControlTransmitTmLbmPattern_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmLbmPattern_Object = MibScalar
sleY1731MepControlTransmitTmLbmPattern = _SleY1731MepControlTransmitTmLbmPattern_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 51),
    _SleY1731MepControlTransmitTmLbmPattern_Type()
)
sleY1731MepControlTransmitTmLbmPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmLbmPattern.setStatus("current")


class _SleY1731MepControlTransmitTstIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitTstIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstIsUnicast_Object = MibScalar
sleY1731MepControlTransmitTstIsUnicast = _SleY1731MepControlTransmitTstIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 52),
    _SleY1731MepControlTransmitTstIsUnicast_Type()
)
sleY1731MepControlTransmitTstIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstIsUnicast.setStatus("current")


class _SleY1731MepControlTransmitTstDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitTstDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstDestMepId_Object = MibScalar
sleY1731MepControlTransmitTstDestMepId = _SleY1731MepControlTransmitTstDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 53),
    _SleY1731MepControlTransmitTstDestMepId_Type()
)
sleY1731MepControlTransmitTstDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstDestMepId.setStatus("current")


class _SleY1731MepControlTransmitTstDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitTstDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstDuration_Object = MibScalar
sleY1731MepControlTransmitTstDuration = _SleY1731MepControlTransmitTstDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 54),
    _SleY1731MepControlTransmitTstDuration_Type()
)
sleY1731MepControlTransmitTstDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstDuration.setStatus("current")


class _SleY1731MepControlTransmitTstInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmitTstInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstInterval_Object = MibScalar
sleY1731MepControlTransmitTstInterval = _SleY1731MepControlTransmitTstInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 55),
    _SleY1731MepControlTransmitTstInterval_Type()
)
sleY1731MepControlTransmitTstInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstInterval.setStatus("current")


class _SleY1731MepControlTransmitTstPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitTstPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstPriority_Object = MibScalar
sleY1731MepControlTransmitTstPriority = _SleY1731MepControlTransmitTstPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 56),
    _SleY1731MepControlTransmitTstPriority_Type()
)
sleY1731MepControlTransmitTstPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstPriority.setStatus("current")


class _SleY1731MepControlTransmitTstLength_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1400),
    )


_SleY1731MepControlTransmitTstLength_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstLength_Object = MibScalar
sleY1731MepControlTransmitTstLength = _SleY1731MepControlTransmitTstLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 57),
    _SleY1731MepControlTransmitTstLength_Type()
)
sleY1731MepControlTransmitTstLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstLength.setStatus("current")


class _SleY1731MepControlTransmitTstPattern_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTstPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SleY1731MepControlTransmitTstPattern_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTstPattern_Object = MibScalar
sleY1731MepControlTransmitTstPattern = _SleY1731MepControlTransmitTstPattern_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 58),
    _SleY1731MepControlTransmitTstPattern_Type()
)
sleY1731MepControlTransmitTstPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTstPattern.setStatus("current")


class _SleY1731MepControlReceiveTstDuration_Type(Integer32):
    """Custom type sleY1731MepControlReceiveTstDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlReceiveTstDuration_Type.__name__ = "Integer32"
_SleY1731MepControlReceiveTstDuration_Object = MibScalar
sleY1731MepControlReceiveTstDuration = _SleY1731MepControlReceiveTstDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 59),
    _SleY1731MepControlReceiveTstDuration_Type()
)
sleY1731MepControlReceiveTstDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlReceiveTstDuration.setStatus("current")


class _SleY1731MepControlTransmitTmTstIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitTmTstIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstIsUnicast_Object = MibScalar
sleY1731MepControlTransmitTmTstIsUnicast = _SleY1731MepControlTransmitTmTstIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 60),
    _SleY1731MepControlTransmitTmTstIsUnicast_Type()
)
sleY1731MepControlTransmitTmTstIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstIsUnicast.setStatus("current")


class _SleY1731MepControlTransmitTmTstDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitTmTstDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstDestMepId_Object = MibScalar
sleY1731MepControlTransmitTmTstDestMepId = _SleY1731MepControlTransmitTmTstDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 61),
    _SleY1731MepControlTransmitTmTstDestMepId_Type()
)
sleY1731MepControlTransmitTmTstDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstDestMepId.setStatus("current")


class _SleY1731MepControlTransmitTmTstDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitTmTstDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstDuration_Object = MibScalar
sleY1731MepControlTransmitTmTstDuration = _SleY1731MepControlTransmitTmTstDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 62),
    _SleY1731MepControlTransmitTmTstDuration_Type()
)
sleY1731MepControlTransmitTmTstDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstDuration.setStatus("current")


class _SleY1731MepControlTransmitTmTstPartDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstPartDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SleY1731MepControlTransmitTmTstPartDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstPartDuration_Object = MibScalar
sleY1731MepControlTransmitTmTstPartDuration = _SleY1731MepControlTransmitTmTstPartDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 63),
    _SleY1731MepControlTransmitTmTstPartDuration_Type()
)
sleY1731MepControlTransmitTmTstPartDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstPartDuration.setStatus("current")


class _SleY1731MepControlTransmitTmTstStartRate_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstStartRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleY1731MepControlTransmitTmTstStartRate_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstStartRate_Object = MibScalar
sleY1731MepControlTransmitTmTstStartRate = _SleY1731MepControlTransmitTmTstStartRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 64),
    _SleY1731MepControlTransmitTmTstStartRate_Type()
)
sleY1731MepControlTransmitTmTstStartRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstStartRate.setStatus("current")


class _SleY1731MepControlTransmitTmTstIncRate_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstIncRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleY1731MepControlTransmitTmTstIncRate_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstIncRate_Object = MibScalar
sleY1731MepControlTransmitTmTstIncRate = _SleY1731MepControlTransmitTmTstIncRate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 65),
    _SleY1731MepControlTransmitTmTstIncRate_Type()
)
sleY1731MepControlTransmitTmTstIncRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstIncRate.setStatus("current")


class _SleY1731MepControlTransmitTmTstTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitTmTstTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstTimeout_Object = MibScalar
sleY1731MepControlTransmitTmTstTimeout = _SleY1731MepControlTransmitTmTstTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 66),
    _SleY1731MepControlTransmitTmTstTimeout_Type()
)
sleY1731MepControlTransmitTmTstTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstTimeout.setStatus("current")


class _SleY1731MepControlTransmitTmTstPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitTmTstPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstPriority_Object = MibScalar
sleY1731MepControlTransmitTmTstPriority = _SleY1731MepControlTransmitTmTstPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 67),
    _SleY1731MepControlTransmitTmTstPriority_Type()
)
sleY1731MepControlTransmitTmTstPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstPriority.setStatus("current")


class _SleY1731MepControlTransmitTmTstLength_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1400),
    )


_SleY1731MepControlTransmitTmTstLength_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstLength_Object = MibScalar
sleY1731MepControlTransmitTmTstLength = _SleY1731MepControlTransmitTmTstLength_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 68),
    _SleY1731MepControlTransmitTmTstLength_Type()
)
sleY1731MepControlTransmitTmTstLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstLength.setStatus("current")


class _SleY1731MepControlTransmitTmTstPattern_Type(Integer32):
    """Custom type sleY1731MepControlTransmitTmTstPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SleY1731MepControlTransmitTmTstPattern_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitTmTstPattern_Object = MibScalar
sleY1731MepControlTransmitTmTstPattern = _SleY1731MepControlTransmitTmTstPattern_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 69),
    _SleY1731MepControlTransmitTmTstPattern_Type()
)
sleY1731MepControlTransmitTmTstPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitTmTstPattern.setStatus("current")


class _SleY1731MepControlReceiveTmTstDuration_Type(Integer32):
    """Custom type sleY1731MepControlReceiveTmTstDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlReceiveTmTstDuration_Type.__name__ = "Integer32"
_SleY1731MepControlReceiveTmTstDuration_Object = MibScalar
sleY1731MepControlReceiveTmTstDuration = _SleY1731MepControlReceiveTmTstDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 70),
    _SleY1731MepControlReceiveTmTstDuration_Type()
)
sleY1731MepControlReceiveTmTstDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlReceiveTmTstDuration.setStatus("current")


class _SleY1731MepControlTransmitLmmIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitLmmIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmIsUnicast_Object = MibScalar
sleY1731MepControlTransmitLmmIsUnicast = _SleY1731MepControlTransmitLmmIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 71),
    _SleY1731MepControlTransmitLmmIsUnicast_Type()
)
sleY1731MepControlTransmitLmmIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmIsUnicast.setStatus("current")


class _SleY1731MepControlTransmitLmmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitLmmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmDestMepId_Object = MibScalar
sleY1731MepControlTransmitLmmDestMepId = _SleY1731MepControlTransmitLmmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 72),
    _SleY1731MepControlTransmitLmmDestMepId_Type()
)
sleY1731MepControlTransmitLmmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmDestMepId.setStatus("current")


class _SleY1731MepControlTransmitLmmDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitLmmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmDuration_Object = MibScalar
sleY1731MepControlTransmitLmmDuration = _SleY1731MepControlTransmitLmmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 73),
    _SleY1731MepControlTransmitLmmDuration_Type()
)
sleY1731MepControlTransmitLmmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmDuration.setStatus("current")


class _SleY1731MepControlTransmitLmmInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmitLmmInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmInterval_Object = MibScalar
sleY1731MepControlTransmitLmmInterval = _SleY1731MepControlTransmitLmmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 74),
    _SleY1731MepControlTransmitLmmInterval_Type()
)
sleY1731MepControlTransmitLmmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmInterval.setStatus("current")


class _SleY1731MepControlTransmitLmmTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitLmmTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmTimeout_Object = MibScalar
sleY1731MepControlTransmitLmmTimeout = _SleY1731MepControlTransmitLmmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 75),
    _SleY1731MepControlTransmitLmmTimeout_Type()
)
sleY1731MepControlTransmitLmmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmTimeout.setStatus("current")


class _SleY1731MepControlTransmitLmmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitLmmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitLmmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitLmmPriority_Object = MibScalar
sleY1731MepControlTransmitLmmPriority = _SleY1731MepControlTransmitLmmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 76),
    _SleY1731MepControlTransmitLmmPriority_Type()
)
sleY1731MepControlTransmitLmmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitLmmPriority.setStatus("current")


class _SleY1731MepControlTransmit1dmIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmit1dmIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmit1dmIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmit1dmIsUnicast_Object = MibScalar
sleY1731MepControlTransmit1dmIsUnicast = _SleY1731MepControlTransmit1dmIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 77),
    _SleY1731MepControlTransmit1dmIsUnicast_Type()
)
sleY1731MepControlTransmit1dmIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmit1dmIsUnicast.setStatus("current")


class _SleY1731MepControlTransmit1dmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmit1dmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmit1dmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmit1dmDestMepId_Object = MibScalar
sleY1731MepControlTransmit1dmDestMepId = _SleY1731MepControlTransmit1dmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 78),
    _SleY1731MepControlTransmit1dmDestMepId_Type()
)
sleY1731MepControlTransmit1dmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmit1dmDestMepId.setStatus("current")


class _SleY1731MepControlTransmit1dmDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmit1dmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmit1dmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmit1dmDuration_Object = MibScalar
sleY1731MepControlTransmit1dmDuration = _SleY1731MepControlTransmit1dmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 79),
    _SleY1731MepControlTransmit1dmDuration_Type()
)
sleY1731MepControlTransmit1dmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmit1dmDuration.setStatus("current")


class _SleY1731MepControlTransmit1dmInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmit1dmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmit1dmInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmit1dmInterval_Object = MibScalar
sleY1731MepControlTransmit1dmInterval = _SleY1731MepControlTransmit1dmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 80),
    _SleY1731MepControlTransmit1dmInterval_Type()
)
sleY1731MepControlTransmit1dmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmit1dmInterval.setStatus("current")


class _SleY1731MepControlTransmit1dmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmit1dmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmit1dmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmit1dmPriority_Object = MibScalar
sleY1731MepControlTransmit1dmPriority = _SleY1731MepControlTransmit1dmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 81),
    _SleY1731MepControlTransmit1dmPriority_Type()
)
sleY1731MepControlTransmit1dmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmit1dmPriority.setStatus("current")


class _SleY1731MepControlReceive1dmDuration_Type(Integer32):
    """Custom type sleY1731MepControlReceive1dmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlReceive1dmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlReceive1dmDuration_Object = MibScalar
sleY1731MepControlReceive1dmDuration = _SleY1731MepControlReceive1dmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 82),
    _SleY1731MepControlReceive1dmDuration_Type()
)
sleY1731MepControlReceive1dmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlReceive1dmDuration.setStatus("current")


class _SleY1731MepControlTransmitDmmIsUnicast_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmIsUnicast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731MepControlTransmitDmmIsUnicast_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmIsUnicast_Object = MibScalar
sleY1731MepControlTransmitDmmIsUnicast = _SleY1731MepControlTransmitDmmIsUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 83),
    _SleY1731MepControlTransmitDmmIsUnicast_Type()
)
sleY1731MepControlTransmitDmmIsUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmIsUnicast.setStatus("current")


class _SleY1731MepControlTransmitDmmDestMepId_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731MepControlTransmitDmmDestMepId_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmDestMepId_Object = MibScalar
sleY1731MepControlTransmitDmmDestMepId = _SleY1731MepControlTransmitDmmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 84),
    _SleY1731MepControlTransmitDmmDestMepId_Type()
)
sleY1731MepControlTransmitDmmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmDestMepId.setStatus("current")


class _SleY1731MepControlTransmitDmmDuration_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_SleY1731MepControlTransmitDmmDuration_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmDuration_Object = MibScalar
sleY1731MepControlTransmitDmmDuration = _SleY1731MepControlTransmitDmmDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 85),
    _SleY1731MepControlTransmitDmmDuration_Type()
)
sleY1731MepControlTransmitDmmDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmDuration.setStatus("current")


class _SleY1731MepControlTransmitDmmInterval_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleY1731MepControlTransmitDmmInterval_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmInterval_Object = MibScalar
sleY1731MepControlTransmitDmmInterval = _SleY1731MepControlTransmitDmmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 86),
    _SleY1731MepControlTransmitDmmInterval_Type()
)
sleY1731MepControlTransmitDmmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmInterval.setStatus("current")


class _SleY1731MepControlTransmitDmmTimeout_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleY1731MepControlTransmitDmmTimeout_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmTimeout_Object = MibScalar
sleY1731MepControlTransmitDmmTimeout = _SleY1731MepControlTransmitDmmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 87),
    _SleY1731MepControlTransmitDmmTimeout_Type()
)
sleY1731MepControlTransmitDmmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmTimeout.setStatus("current")


class _SleY1731MepControlTransmitDmmPriority_Type(Integer32):
    """Custom type sleY1731MepControlTransmitDmmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MepControlTransmitDmmPriority_Type.__name__ = "Integer32"
_SleY1731MepControlTransmitDmmPriority_Object = MibScalar
sleY1731MepControlTransmitDmmPriority = _SleY1731MepControlTransmitDmmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 88),
    _SleY1731MepControlTransmitDmmPriority_Type()
)
sleY1731MepControlTransmitDmmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlTransmitDmmPriority.setStatus("current")


class _SleY1731MepControlPmEnable_Type(Integer32):
    """Custom type sleY1731MepControlPmEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlPmEnable_Type.__name__ = "Integer32"
_SleY1731MepControlPmEnable_Object = MibScalar
sleY1731MepControlPmEnable = _SleY1731MepControlPmEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 89),
    _SleY1731MepControlPmEnable_Type()
)
sleY1731MepControlPmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlPmEnable.setStatus("current")


class _SleY1731MepControlRllcf_Type(Integer32):
    """Custom type sleY1731MepControlRllcf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731MepControlRllcf_Type.__name__ = "Integer32"
_SleY1731MepControlRllcf_Object = MibScalar
sleY1731MepControlRllcf = _SleY1731MepControlRllcf_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 90),
    _SleY1731MepControlRllcf_Type()
)
sleY1731MepControlRllcf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlRllcf.setStatus("current")


class _SleY1731MepControlRllcfHoldOff_Type(Integer32):
    """Custom type sleY1731MepControlRllcfHoldOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3000),
    )


_SleY1731MepControlRllcfHoldOff_Type.__name__ = "Integer32"
_SleY1731MepControlRllcfHoldOff_Object = MibScalar
sleY1731MepControlRllcfHoldOff = _SleY1731MepControlRllcfHoldOff_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 91),
    _SleY1731MepControlRllcfHoldOff_Type()
)
sleY1731MepControlRllcfHoldOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlRllcfHoldOff.setStatus("current")


class _SleY1731MepControlRllcfGuardTime_Type(Integer32):
    """Custom type sleY1731MepControlRllcfGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 10000),
    )


_SleY1731MepControlRllcfGuardTime_Type.__name__ = "Integer32"
_SleY1731MepControlRllcfGuardTime_Object = MibScalar
sleY1731MepControlRllcfGuardTime = _SleY1731MepControlRllcfGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 2, 92),
    _SleY1731MepControlRllcfGuardTime_Type()
)
sleY1731MepControlRllcfGuardTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MepControlRllcfGuardTime.setStatus("current")
_SleY1731MepNotification_ObjectIdentity = ObjectIdentity
sleY1731MepNotification = _SleY1731MepNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3)
)
_SleY1731Mip_ObjectIdentity = ObjectIdentity
sleY1731Mip = _SleY1731Mip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4)
)
_SleY1731MipTable_Object = MibTable
sleY1731MipTable = _SleY1731MipTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 1)
)
if mibBuilder.loadTexts:
    sleY1731MipTable.setStatus("current")
_SleY1731MipEntry_Object = MibTableRow
sleY1731MipEntry = _SleY1731MipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 1, 1)
)
sleY1731MipEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MipPort"),
)
if mibBuilder.loadTexts:
    sleY1731MipEntry.setStatus("current")


class _SleY1731MipPort_Type(Integer32):
    """Custom type sleY1731MipPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MipPort_Type.__name__ = "Integer32"
_SleY1731MipPort_Object = MibTableColumn
sleY1731MipPort = _SleY1731MipPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 1, 1, 1),
    _SleY1731MipPort_Type()
)
sleY1731MipPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipPort.setStatus("current")


class _SleY1731MipLevel_Type(Integer32):
    """Custom type sleY1731MipLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MipLevel_Type.__name__ = "Integer32"
_SleY1731MipLevel_Object = MibTableColumn
sleY1731MipLevel = _SleY1731MipLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 1, 1, 2),
    _SleY1731MipLevel_Type()
)
sleY1731MipLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipLevel.setStatus("current")


class _SleY1731MipType_Type(Integer32):
    """Custom type sleY1731MipType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_SleY1731MipType_Type.__name__ = "Integer32"
_SleY1731MipType_Object = MibTableColumn
sleY1731MipType = _SleY1731MipType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 1, 1, 3),
    _SleY1731MipType_Type()
)
sleY1731MipType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipType.setStatus("current")
_SleY1731MipControl_ObjectIdentity = ObjectIdentity
sleY1731MipControl = _SleY1731MipControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2)
)


class _SleY1731MipControlRequest_Type(Integer32):
    """Custom type sleY1731MipControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731Mip", 1),
          ("deleteY1731Mip", 2))
    )


_SleY1731MipControlRequest_Type.__name__ = "Integer32"
_SleY1731MipControlRequest_Object = MibScalar
sleY1731MipControlRequest = _SleY1731MipControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 1),
    _SleY1731MipControlRequest_Type()
)
sleY1731MipControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MipControlRequest.setStatus("current")
_SleY1731MipControlStatus_Type = SleControlStatusType
_SleY1731MipControlStatus_Object = MibScalar
sleY1731MipControlStatus = _SleY1731MipControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 2),
    _SleY1731MipControlStatus_Type()
)
sleY1731MipControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipControlStatus.setStatus("current")
_SleY1731MipControlTimer_Type = Gauge32
_SleY1731MipControlTimer_Object = MibScalar
sleY1731MipControlTimer = _SleY1731MipControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 3),
    _SleY1731MipControlTimer_Type()
)
sleY1731MipControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MipControlTimer.setStatus("current")
_SleY1731MipControlTimeStamp_Type = TimeTicks
_SleY1731MipControlTimeStamp_Object = MibScalar
sleY1731MipControlTimeStamp = _SleY1731MipControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 4),
    _SleY1731MipControlTimeStamp_Type()
)
sleY1731MipControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipControlTimeStamp.setStatus("current")
_SleY1731MipControlReqResult_Type = SleControlRequestResultType
_SleY1731MipControlReqResult_Object = MibScalar
sleY1731MipControlReqResult = _SleY1731MipControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 5),
    _SleY1731MipControlReqResult_Type()
)
sleY1731MipControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipControlReqResult.setStatus("current")


class _SleY1731MipControlPort_Type(Integer32):
    """Custom type sleY1731MipControlPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MipControlPort_Type.__name__ = "Integer32"
_SleY1731MipControlPort_Object = MibScalar
sleY1731MipControlPort = _SleY1731MipControlPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 6),
    _SleY1731MipControlPort_Type()
)
sleY1731MipControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MipControlPort.setStatus("current")


class _SleY1731MipControlLevel_Type(Integer32):
    """Custom type sleY1731MipControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleY1731MipControlLevel_Type.__name__ = "Integer32"
_SleY1731MipControlLevel_Object = MibScalar
sleY1731MipControlLevel = _SleY1731MipControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 2, 7),
    _SleY1731MipControlLevel_Type()
)
sleY1731MipControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731MipControlLevel.setStatus("current")
_SleY1731MipNotification_ObjectIdentity = ObjectIdentity
sleY1731MipNotification = _SleY1731MipNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 3)
)
_SleY1731Xcheck_ObjectIdentity = ObjectIdentity
sleY1731Xcheck = _SleY1731Xcheck_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5)
)
_SleY1731XcheckTable_Object = MibTable
sleY1731XcheckTable = _SleY1731XcheckTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 1)
)
if mibBuilder.loadTexts:
    sleY1731XcheckTable.setStatus("current")
_SleY1731XcheckEntry_Object = MibTableRow
sleY1731XcheckEntry = _SleY1731XcheckEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 1, 1)
)
sleY1731XcheckEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731XcheckMepIdentifier"),
)
if mibBuilder.loadTexts:
    sleY1731XcheckEntry.setStatus("current")


class _SleY1731XcheckMepIdentifier_Type(Integer32):
    """Custom type sleY1731XcheckMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731XcheckMepIdentifier_Type.__name__ = "Integer32"
_SleY1731XcheckMepIdentifier_Object = MibTableColumn
sleY1731XcheckMepIdentifier = _SleY1731XcheckMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 1, 1, 1),
    _SleY1731XcheckMepIdentifier_Type()
)
sleY1731XcheckMepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckMepIdentifier.setStatus("current")


class _SleY1731XcheckMepState_Type(Integer32):
    """Custom type sleY1731XcheckMepState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("missing", 1),
          ("up", 2))
    )


_SleY1731XcheckMepState_Type.__name__ = "Integer32"
_SleY1731XcheckMepState_Object = MibTableColumn
sleY1731XcheckMepState = _SleY1731XcheckMepState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 1, 1, 2),
    _SleY1731XcheckMepState_Type()
)
sleY1731XcheckMepState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckMepState.setStatus("current")
_SleY1731XcheckControl_ObjectIdentity = ObjectIdentity
sleY1731XcheckControl = _SleY1731XcheckControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2)
)


class _SleY1731XcheckControlRequest_Type(Integer32):
    """Custom type sleY1731XcheckControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731XcheckMep", 1),
          ("deleteY1731XcheckMep", 2))
    )


_SleY1731XcheckControlRequest_Type.__name__ = "Integer32"
_SleY1731XcheckControlRequest_Object = MibScalar
sleY1731XcheckControlRequest = _SleY1731XcheckControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 1),
    _SleY1731XcheckControlRequest_Type()
)
sleY1731XcheckControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731XcheckControlRequest.setStatus("current")
_SleY1731XcheckControlStatus_Type = SleControlStatusType
_SleY1731XcheckControlStatus_Object = MibScalar
sleY1731XcheckControlStatus = _SleY1731XcheckControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 2),
    _SleY1731XcheckControlStatus_Type()
)
sleY1731XcheckControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckControlStatus.setStatus("current")
_SleY1731XcheckControlTimer_Type = Gauge32
_SleY1731XcheckControlTimer_Object = MibScalar
sleY1731XcheckControlTimer = _SleY1731XcheckControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 3),
    _SleY1731XcheckControlTimer_Type()
)
sleY1731XcheckControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731XcheckControlTimer.setStatus("current")
_SleY1731XcheckControlTimeStamp_Type = TimeTicks
_SleY1731XcheckControlTimeStamp_Object = MibScalar
sleY1731XcheckControlTimeStamp = _SleY1731XcheckControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 4),
    _SleY1731XcheckControlTimeStamp_Type()
)
sleY1731XcheckControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckControlTimeStamp.setStatus("current")
_SleY1731XcheckControlReqResult_Type = SleControlRequestResultType
_SleY1731XcheckControlReqResult_Object = MibScalar
sleY1731XcheckControlReqResult = _SleY1731XcheckControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 5),
    _SleY1731XcheckControlReqResult_Type()
)
sleY1731XcheckControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731XcheckControlReqResult.setStatus("current")


class _SleY1731XcheckControlMepIdentifier_Type(Integer32):
    """Custom type sleY1731XcheckControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731XcheckControlMepIdentifier_Type.__name__ = "Integer32"
_SleY1731XcheckControlMepIdentifier_Object = MibScalar
sleY1731XcheckControlMepIdentifier = _SleY1731XcheckControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 6),
    _SleY1731XcheckControlMepIdentifier_Type()
)
sleY1731XcheckControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731XcheckControlMepIdentifier.setStatus("current")


class _SleY1731XcheckControlMegIndex_Type(Integer32):
    """Custom type sleY1731XcheckControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731XcheckControlMegIndex_Type.__name__ = "Integer32"
_SleY1731XcheckControlMegIndex_Object = MibScalar
sleY1731XcheckControlMegIndex = _SleY1731XcheckControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 2, 7),
    _SleY1731XcheckControlMegIndex_Type()
)
sleY1731XcheckControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731XcheckControlMegIndex.setStatus("current")
_SleY1731XcheckNotification_ObjectIdentity = ObjectIdentity
sleY1731XcheckNotification = _SleY1731XcheckNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 3)
)
_SleY1731CcMac_ObjectIdentity = ObjectIdentity
sleY1731CcMac = _SleY1731CcMac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6)
)
_SleY1731CcMacTable_Object = MibTable
sleY1731CcMacTable = _SleY1731CcMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 1)
)
if mibBuilder.loadTexts:
    sleY1731CcMacTable.setStatus("current")
_SleY1731CcMacEntry_Object = MibTableRow
sleY1731CcMacEntry = _SleY1731CcMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 1, 1)
)
sleY1731CcMacEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731CcMacAddress"),
)
if mibBuilder.loadTexts:
    sleY1731CcMacEntry.setStatus("current")


class _SleY1731CcMacAddress_Type(OctetString):
    """Custom type sleY1731CcMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731CcMacAddress_Type.__name__ = "OctetString"
_SleY1731CcMacAddress_Object = MibTableColumn
sleY1731CcMacAddress = _SleY1731CcMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 1, 1, 1),
    _SleY1731CcMacAddress_Type()
)
sleY1731CcMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731CcMacAddress.setStatus("current")
_SleY1731CcMacControl_ObjectIdentity = ObjectIdentity
sleY1731CcMacControl = _SleY1731CcMacControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2)
)


class _SleY1731CcMacControlRequest_Type(Integer32):
    """Custom type sleY1731CcMacControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731CcMac", 1),
          ("deleteY1731CcMac", 2))
    )


_SleY1731CcMacControlRequest_Type.__name__ = "Integer32"
_SleY1731CcMacControlRequest_Object = MibScalar
sleY1731CcMacControlRequest = _SleY1731CcMacControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 1),
    _SleY1731CcMacControlRequest_Type()
)
sleY1731CcMacControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731CcMacControlRequest.setStatus("current")
_SleY1731CcMacControlStatus_Type = SleControlStatusType
_SleY1731CcMacControlStatus_Object = MibScalar
sleY1731CcMacControlStatus = _SleY1731CcMacControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 2),
    _SleY1731CcMacControlStatus_Type()
)
sleY1731CcMacControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731CcMacControlStatus.setStatus("current")
_SleY1731CcMacControlTimer_Type = Gauge32
_SleY1731CcMacControlTimer_Object = MibScalar
sleY1731CcMacControlTimer = _SleY1731CcMacControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 3),
    _SleY1731CcMacControlTimer_Type()
)
sleY1731CcMacControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731CcMacControlTimer.setStatus("current")
_SleY1731CcMacControlTimeStamp_Type = TimeTicks
_SleY1731CcMacControlTimeStamp_Object = MibScalar
sleY1731CcMacControlTimeStamp = _SleY1731CcMacControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 4),
    _SleY1731CcMacControlTimeStamp_Type()
)
sleY1731CcMacControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731CcMacControlTimeStamp.setStatus("current")
_SleY1731CcMacControlReqResult_Type = SleControlRequestResultType
_SleY1731CcMacControlReqResult_Object = MibScalar
sleY1731CcMacControlReqResult = _SleY1731CcMacControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 5),
    _SleY1731CcMacControlReqResult_Type()
)
sleY1731CcMacControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731CcMacControlReqResult.setStatus("current")


class _SleY1731CcMacControlMegIndex_Type(Integer32):
    """Custom type sleY1731CcMacControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731CcMacControlMegIndex_Type.__name__ = "Integer32"
_SleY1731CcMacControlMegIndex_Object = MibScalar
sleY1731CcMacControlMegIndex = _SleY1731CcMacControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 6),
    _SleY1731CcMacControlMegIndex_Type()
)
sleY1731CcMacControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731CcMacControlMegIndex.setStatus("current")


class _SleY1731CcMacControlMepIdentifier_Type(Integer32):
    """Custom type sleY1731CcMacControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731CcMacControlMepIdentifier_Type.__name__ = "Integer32"
_SleY1731CcMacControlMepIdentifier_Object = MibScalar
sleY1731CcMacControlMepIdentifier = _SleY1731CcMacControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 7),
    _SleY1731CcMacControlMepIdentifier_Type()
)
sleY1731CcMacControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731CcMacControlMepIdentifier.setStatus("current")


class _SleY1731CcMacControlAddress_Type(OctetString):
    """Custom type sleY1731CcMacControlAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731CcMacControlAddress_Type.__name__ = "OctetString"
_SleY1731CcMacControlAddress_Object = MibScalar
sleY1731CcMacControlAddress = _SleY1731CcMacControlAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 2, 8),
    _SleY1731CcMacControlAddress_Type()
)
sleY1731CcMacControlAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731CcMacControlAddress.setStatus("current")
_SleY1731CcMacNotification_ObjectIdentity = ObjectIdentity
sleY1731CcMacNotification = _SleY1731CcMacNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 3)
)
_SleY1731AisMac_ObjectIdentity = ObjectIdentity
sleY1731AisMac = _SleY1731AisMac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7)
)
_SleY1731AisMacTable_Object = MibTable
sleY1731AisMacTable = _SleY1731AisMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 1)
)
if mibBuilder.loadTexts:
    sleY1731AisMacTable.setStatus("current")
_SleY1731AisMacEntry_Object = MibTableRow
sleY1731AisMacEntry = _SleY1731AisMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 1, 1)
)
sleY1731AisMacEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731AisMacAddress"),
)
if mibBuilder.loadTexts:
    sleY1731AisMacEntry.setStatus("current")


class _SleY1731AisMacAddress_Type(OctetString):
    """Custom type sleY1731AisMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731AisMacAddress_Type.__name__ = "OctetString"
_SleY1731AisMacAddress_Object = MibTableColumn
sleY1731AisMacAddress = _SleY1731AisMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 1, 1, 1),
    _SleY1731AisMacAddress_Type()
)
sleY1731AisMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731AisMacAddress.setStatus("current")
_SleY1731AisMacControl_ObjectIdentity = ObjectIdentity
sleY1731AisMacControl = _SleY1731AisMacControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2)
)


class _SleY1731AisMacControlRequest_Type(Integer32):
    """Custom type sleY1731AisMacControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731AisMac", 1),
          ("deleteY1731AisMac", 2))
    )


_SleY1731AisMacControlRequest_Type.__name__ = "Integer32"
_SleY1731AisMacControlRequest_Object = MibScalar
sleY1731AisMacControlRequest = _SleY1731AisMacControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 1),
    _SleY1731AisMacControlRequest_Type()
)
sleY1731AisMacControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731AisMacControlRequest.setStatus("current")
_SleY1731AisMacControlStatus_Type = SleControlStatusType
_SleY1731AisMacControlStatus_Object = MibScalar
sleY1731AisMacControlStatus = _SleY1731AisMacControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 2),
    _SleY1731AisMacControlStatus_Type()
)
sleY1731AisMacControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731AisMacControlStatus.setStatus("current")
_SleY1731AisMacControlTimer_Type = Gauge32
_SleY1731AisMacControlTimer_Object = MibScalar
sleY1731AisMacControlTimer = _SleY1731AisMacControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 3),
    _SleY1731AisMacControlTimer_Type()
)
sleY1731AisMacControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731AisMacControlTimer.setStatus("current")
_SleY1731AisMacControlTimeStamp_Type = TimeTicks
_SleY1731AisMacControlTimeStamp_Object = MibScalar
sleY1731AisMacControlTimeStamp = _SleY1731AisMacControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 4),
    _SleY1731AisMacControlTimeStamp_Type()
)
sleY1731AisMacControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731AisMacControlTimeStamp.setStatus("current")
_SleY1731AisMacControlReqResult_Type = SleControlRequestResultType
_SleY1731AisMacControlReqResult_Object = MibScalar
sleY1731AisMacControlReqResult = _SleY1731AisMacControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 5),
    _SleY1731AisMacControlReqResult_Type()
)
sleY1731AisMacControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731AisMacControlReqResult.setStatus("current")


class _SleY1731AisMacControlMegIndex_Type(Integer32):
    """Custom type sleY1731AisMacControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731AisMacControlMegIndex_Type.__name__ = "Integer32"
_SleY1731AisMacControlMegIndex_Object = MibScalar
sleY1731AisMacControlMegIndex = _SleY1731AisMacControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 6),
    _SleY1731AisMacControlMegIndex_Type()
)
sleY1731AisMacControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731AisMacControlMegIndex.setStatus("current")


class _SleY1731AisMacControlMepIdentifier_Type(Integer32):
    """Custom type sleY1731AisMacControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731AisMacControlMepIdentifier_Type.__name__ = "Integer32"
_SleY1731AisMacControlMepIdentifier_Object = MibScalar
sleY1731AisMacControlMepIdentifier = _SleY1731AisMacControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 7),
    _SleY1731AisMacControlMepIdentifier_Type()
)
sleY1731AisMacControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731AisMacControlMepIdentifier.setStatus("current")


class _SleY1731AisMacControlAddress_Type(OctetString):
    """Custom type sleY1731AisMacControlAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731AisMacControlAddress_Type.__name__ = "OctetString"
_SleY1731AisMacControlAddress_Object = MibScalar
sleY1731AisMacControlAddress = _SleY1731AisMacControlAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 2, 8),
    _SleY1731AisMacControlAddress_Type()
)
sleY1731AisMacControlAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731AisMacControlAddress.setStatus("current")
_SleY1731AisMacNotification_ObjectIdentity = ObjectIdentity
sleY1731AisMacNotification = _SleY1731AisMacNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 3)
)
_SleY1731LckMac_ObjectIdentity = ObjectIdentity
sleY1731LckMac = _SleY1731LckMac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8)
)
_SleY1731LckMacTable_Object = MibTable
sleY1731LckMacTable = _SleY1731LckMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 1)
)
if mibBuilder.loadTexts:
    sleY1731LckMacTable.setStatus("current")
_SleY1731LckMacEntry_Object = MibTableRow
sleY1731LckMacEntry = _SleY1731LckMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 1, 1)
)
sleY1731LckMacEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731LckMacAddress"),
)
if mibBuilder.loadTexts:
    sleY1731LckMacEntry.setStatus("current")


class _SleY1731LckMacAddress_Type(OctetString):
    """Custom type sleY1731LckMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731LckMacAddress_Type.__name__ = "OctetString"
_SleY1731LckMacAddress_Object = MibTableColumn
sleY1731LckMacAddress = _SleY1731LckMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 1, 1, 1),
    _SleY1731LckMacAddress_Type()
)
sleY1731LckMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacAddress.setStatus("current")
_SleY1731LckMacControl_ObjectIdentity = ObjectIdentity
sleY1731LckMacControl = _SleY1731LckMacControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2)
)


class _SleY1731LckMacControlRequest_Type(Integer32):
    """Custom type sleY1731LckMacControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731LckMac", 1),
          ("deleteY1731LckMac", 2))
    )


_SleY1731LckMacControlRequest_Type.__name__ = "Integer32"
_SleY1731LckMacControlRequest_Object = MibScalar
sleY1731LckMacControlRequest = _SleY1731LckMacControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 1),
    _SleY1731LckMacControlRequest_Type()
)
sleY1731LckMacControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacControlRequest.setStatus("current")
_SleY1731LckMacControlStatus_Type = SleControlStatusType
_SleY1731LckMacControlStatus_Object = MibScalar
sleY1731LckMacControlStatus = _SleY1731LckMacControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 2),
    _SleY1731LckMacControlStatus_Type()
)
sleY1731LckMacControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LckMacControlStatus.setStatus("current")
_SleY1731LckMacControlTimer_Type = Gauge32
_SleY1731LckMacControlTimer_Object = MibScalar
sleY1731LckMacControlTimer = _SleY1731LckMacControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 3),
    _SleY1731LckMacControlTimer_Type()
)
sleY1731LckMacControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacControlTimer.setStatus("current")
_SleY1731LckMacControlTimeStamp_Type = TimeTicks
_SleY1731LckMacControlTimeStamp_Object = MibScalar
sleY1731LckMacControlTimeStamp = _SleY1731LckMacControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 4),
    _SleY1731LckMacControlTimeStamp_Type()
)
sleY1731LckMacControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LckMacControlTimeStamp.setStatus("current")
_SleY1731LckMacControlReqResult_Type = SleControlRequestResultType
_SleY1731LckMacControlReqResult_Object = MibScalar
sleY1731LckMacControlReqResult = _SleY1731LckMacControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 5),
    _SleY1731LckMacControlReqResult_Type()
)
sleY1731LckMacControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LckMacControlReqResult.setStatus("current")


class _SleY1731LckMacControlMegIndex_Type(Integer32):
    """Custom type sleY1731LckMacControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LckMacControlMegIndex_Type.__name__ = "Integer32"
_SleY1731LckMacControlMegIndex_Object = MibScalar
sleY1731LckMacControlMegIndex = _SleY1731LckMacControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 6),
    _SleY1731LckMacControlMegIndex_Type()
)
sleY1731LckMacControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacControlMegIndex.setStatus("current")


class _SleY1731LckMacControlMepIdentifier_Type(Integer32):
    """Custom type sleY1731LckMacControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LckMacControlMepIdentifier_Type.__name__ = "Integer32"
_SleY1731LckMacControlMepIdentifier_Object = MibScalar
sleY1731LckMacControlMepIdentifier = _SleY1731LckMacControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 7),
    _SleY1731LckMacControlMepIdentifier_Type()
)
sleY1731LckMacControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacControlMepIdentifier.setStatus("current")


class _SleY1731LckMacControlAddress_Type(OctetString):
    """Custom type sleY1731LckMacControlAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731LckMacControlAddress_Type.__name__ = "OctetString"
_SleY1731LckMacControlAddress_Object = MibScalar
sleY1731LckMacControlAddress = _SleY1731LckMacControlAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 2, 8),
    _SleY1731LckMacControlAddress_Type()
)
sleY1731LckMacControlAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LckMacControlAddress.setStatus("current")
_SleY1731LckMacNotification_ObjectIdentity = ObjectIdentity
sleY1731LckMacNotification = _SleY1731LckMacNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 3)
)
_SleY1731Rmep_ObjectIdentity = ObjectIdentity
sleY1731Rmep = _SleY1731Rmep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9)
)
_SleY1731RmepTable_Object = MibTable
sleY1731RmepTable = _SleY1731RmepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1)
)
if mibBuilder.loadTexts:
    sleY1731RmepTable.setStatus("current")
_SleY1731RmepEntry_Object = MibTableRow
sleY1731RmepEntry = _SleY1731RmepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1)
)
sleY1731RmepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731RmepIdentifier"),
)
if mibBuilder.loadTexts:
    sleY1731RmepEntry.setStatus("current")


class _SleY1731RmepIdentifier_Type(Integer32):
    """Custom type sleY1731RmepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731RmepIdentifier_Type.__name__ = "Integer32"
_SleY1731RmepIdentifier_Object = MibTableColumn
sleY1731RmepIdentifier = _SleY1731RmepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 1),
    _SleY1731RmepIdentifier_Type()
)
sleY1731RmepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepIdentifier.setStatus("current")


class _SleY1731RmepState_Type(Integer32):
    """Custom type sleY1731RmepState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("start", 1),
          ("failed", 2),
          ("ok", 3))
    )


_SleY1731RmepState_Type.__name__ = "Integer32"
_SleY1731RmepState_Object = MibTableColumn
sleY1731RmepState = _SleY1731RmepState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 2),
    _SleY1731RmepState_Type()
)
sleY1731RmepState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepState.setStatus("current")
_SleY1731RmepFailedOkTime_Type = TimeTicks
_SleY1731RmepFailedOkTime_Object = MibTableColumn
sleY1731RmepFailedOkTime = _SleY1731RmepFailedOkTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 3),
    _SleY1731RmepFailedOkTime_Type()
)
sleY1731RmepFailedOkTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepFailedOkTime.setStatus("current")


class _SleY1731RmepMacAddress_Type(OctetString):
    """Custom type sleY1731RmepMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731RmepMacAddress_Type.__name__ = "OctetString"
_SleY1731RmepMacAddress_Object = MibTableColumn
sleY1731RmepMacAddress = _SleY1731RmepMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 4),
    _SleY1731RmepMacAddress_Type()
)
sleY1731RmepMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepMacAddress.setStatus("current")
_SleY1731RmepIfIndex_Type = Integer32
_SleY1731RmepIfIndex_Object = MibTableColumn
sleY1731RmepIfIndex = _SleY1731RmepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 5),
    _SleY1731RmepIfIndex_Type()
)
sleY1731RmepIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepIfIndex.setStatus("current")


class _SleY1731RmepRdi_Type(Integer32):
    """Custom type sleY1731RmepRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731RmepRdi_Type.__name__ = "Integer32"
_SleY1731RmepRdi_Object = MibTableColumn
sleY1731RmepRdi = _SleY1731RmepRdi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 6),
    _SleY1731RmepRdi_Type()
)
sleY1731RmepRdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepRdi.setStatus("current")


class _SleY1731RmepLoc_Type(Integer32):
    """Custom type sleY1731RmepLoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731RmepLoc_Type.__name__ = "Integer32"
_SleY1731RmepLoc_Object = MibTableColumn
sleY1731RmepLoc = _SleY1731RmepLoc_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 7),
    _SleY1731RmepLoc_Type()
)
sleY1731RmepLoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLoc.setStatus("current")
_SleY1731RmepReceiveTstCount_Type = Counter32
_SleY1731RmepReceiveTstCount_Object = MibTableColumn
sleY1731RmepReceiveTstCount = _SleY1731RmepReceiveTstCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 8),
    _SleY1731RmepReceiveTstCount_Type()
)
sleY1731RmepReceiveTstCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTstCount.setStatus("current")
_SleY1731RmepReceiveTstOutOfOrder_Type = Counter32
_SleY1731RmepReceiveTstOutOfOrder_Object = MibTableColumn
sleY1731RmepReceiveTstOutOfOrder = _SleY1731RmepReceiveTstOutOfOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 9),
    _SleY1731RmepReceiveTstOutOfOrder_Type()
)
sleY1731RmepReceiveTstOutOfOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTstOutOfOrder.setStatus("current")
_SleY1731RmepReceiveTstBitError_Type = Counter32
_SleY1731RmepReceiveTstBitError_Object = MibTableColumn
sleY1731RmepReceiveTstBitError = _SleY1731RmepReceiveTstBitError_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 10),
    _SleY1731RmepReceiveTstBitError_Type()
)
sleY1731RmepReceiveTstBitError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTstBitError.setStatus("current")
_SleY1731RmepReceiveTstCrcError_Type = Counter32
_SleY1731RmepReceiveTstCrcError_Object = MibTableColumn
sleY1731RmepReceiveTstCrcError = _SleY1731RmepReceiveTstCrcError_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 11),
    _SleY1731RmepReceiveTstCrcError_Type()
)
sleY1731RmepReceiveTstCrcError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTstCrcError.setStatus("current")
_SleY1731RmepReceiveTmTstCount_Type = Counter32
_SleY1731RmepReceiveTmTstCount_Object = MibTableColumn
sleY1731RmepReceiveTmTstCount = _SleY1731RmepReceiveTmTstCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 12),
    _SleY1731RmepReceiveTmTstCount_Type()
)
sleY1731RmepReceiveTmTstCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTmTstCount.setStatus("current")
_SleY1731RmepReceiveTmTstLostId_Type = Integer32
_SleY1731RmepReceiveTmTstLostId_Object = MibTableColumn
sleY1731RmepReceiveTmTstLostId = _SleY1731RmepReceiveTmTstLostId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 13),
    _SleY1731RmepReceiveTmTstLostId_Type()
)
sleY1731RmepReceiveTmTstLostId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveTmTstLostId.setStatus("current")
_SleY1731RmepLmrFrameLossNearMin_Type = Integer32
_SleY1731RmepLmrFrameLossNearMin_Object = MibTableColumn
sleY1731RmepLmrFrameLossNearMin = _SleY1731RmepLmrFrameLossNearMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 14),
    _SleY1731RmepLmrFrameLossNearMin_Type()
)
sleY1731RmepLmrFrameLossNearMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossNearMin.setStatus("current")
_SleY1731RmepLmrFrameLossNearMax_Type = Integer32
_SleY1731RmepLmrFrameLossNearMax_Object = MibTableColumn
sleY1731RmepLmrFrameLossNearMax = _SleY1731RmepLmrFrameLossNearMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 15),
    _SleY1731RmepLmrFrameLossNearMax_Type()
)
sleY1731RmepLmrFrameLossNearMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossNearMax.setStatus("current")
_SleY1731RmepLmrFrameLossNearSum_Type = Integer32
_SleY1731RmepLmrFrameLossNearSum_Object = MibTableColumn
sleY1731RmepLmrFrameLossNearSum = _SleY1731RmepLmrFrameLossNearSum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 16),
    _SleY1731RmepLmrFrameLossNearSum_Type()
)
sleY1731RmepLmrFrameLossNearSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossNearSum.setStatus("current")
_SleY1731RmepLmrFrameLossFarMin_Type = Integer32
_SleY1731RmepLmrFrameLossFarMin_Object = MibTableColumn
sleY1731RmepLmrFrameLossFarMin = _SleY1731RmepLmrFrameLossFarMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 17),
    _SleY1731RmepLmrFrameLossFarMin_Type()
)
sleY1731RmepLmrFrameLossFarMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossFarMin.setStatus("current")
_SleY1731RmepLmrFrameLossFarMax_Type = Integer32
_SleY1731RmepLmrFrameLossFarMax_Object = MibTableColumn
sleY1731RmepLmrFrameLossFarMax = _SleY1731RmepLmrFrameLossFarMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 18),
    _SleY1731RmepLmrFrameLossFarMax_Type()
)
sleY1731RmepLmrFrameLossFarMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossFarMax.setStatus("current")
_SleY1731RmepLmrFrameLossFarSum_Type = Integer32
_SleY1731RmepLmrFrameLossFarSum_Object = MibTableColumn
sleY1731RmepLmrFrameLossFarSum = _SleY1731RmepLmrFrameLossFarSum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 19),
    _SleY1731RmepLmrFrameLossFarSum_Type()
)
sleY1731RmepLmrFrameLossFarSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossFarSum.setStatus("current")
_SleY1731RmepReceive1dmCount_Type = Counter32
_SleY1731RmepReceive1dmCount_Object = MibTableColumn
sleY1731RmepReceive1dmCount = _SleY1731RmepReceive1dmCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 20),
    _SleY1731RmepReceive1dmCount_Type()
)
sleY1731RmepReceive1dmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceive1dmCount.setStatus("current")
_SleY1731Rmep1dmFrameDelayMin_Type = Integer32
_SleY1731Rmep1dmFrameDelayMin_Object = MibTableColumn
sleY1731Rmep1dmFrameDelayMin = _SleY1731Rmep1dmFrameDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 21),
    _SleY1731Rmep1dmFrameDelayMin_Type()
)
sleY1731Rmep1dmFrameDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731Rmep1dmFrameDelayMin.setStatus("current")
_SleY1731Rmep1dmFrameDelayMax_Type = Integer32
_SleY1731Rmep1dmFrameDelayMax_Object = MibTableColumn
sleY1731Rmep1dmFrameDelayMax = _SleY1731Rmep1dmFrameDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 22),
    _SleY1731Rmep1dmFrameDelayMax_Type()
)
sleY1731Rmep1dmFrameDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731Rmep1dmFrameDelayMax.setStatus("current")
_SleY1731Rmep1dmFrameDelayAvg_Type = Integer32
_SleY1731Rmep1dmFrameDelayAvg_Object = MibTableColumn
sleY1731Rmep1dmFrameDelayAvg = _SleY1731Rmep1dmFrameDelayAvg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 23),
    _SleY1731Rmep1dmFrameDelayAvg_Type()
)
sleY1731Rmep1dmFrameDelayAvg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731Rmep1dmFrameDelayAvg.setStatus("current")
_SleY1731Rmep1dmFrameDelayVar_Type = Integer32
_SleY1731Rmep1dmFrameDelayVar_Object = MibTableColumn
sleY1731Rmep1dmFrameDelayVar = _SleY1731Rmep1dmFrameDelayVar_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 24),
    _SleY1731Rmep1dmFrameDelayVar_Type()
)
sleY1731Rmep1dmFrameDelayVar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731Rmep1dmFrameDelayVar.setStatus("current")
_SleY1731RmepReceiveDmrCount_Type = Counter32
_SleY1731RmepReceiveDmrCount_Object = MibTableColumn
sleY1731RmepReceiveDmrCount = _SleY1731RmepReceiveDmrCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 25),
    _SleY1731RmepReceiveDmrCount_Type()
)
sleY1731RmepReceiveDmrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepReceiveDmrCount.setStatus("current")
_SleY1731RmepDmrFrameDelayMin_Type = Integer32
_SleY1731RmepDmrFrameDelayMin_Object = MibTableColumn
sleY1731RmepDmrFrameDelayMin = _SleY1731RmepDmrFrameDelayMin_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 26),
    _SleY1731RmepDmrFrameDelayMin_Type()
)
sleY1731RmepDmrFrameDelayMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepDmrFrameDelayMin.setStatus("current")
_SleY1731RmepDmrFrameDelayMax_Type = Integer32
_SleY1731RmepDmrFrameDelayMax_Object = MibTableColumn
sleY1731RmepDmrFrameDelayMax = _SleY1731RmepDmrFrameDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 27),
    _SleY1731RmepDmrFrameDelayMax_Type()
)
sleY1731RmepDmrFrameDelayMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepDmrFrameDelayMax.setStatus("current")
_SleY1731RmepDmrFrameDelayAvg_Type = Integer32
_SleY1731RmepDmrFrameDelayAvg_Object = MibTableColumn
sleY1731RmepDmrFrameDelayAvg = _SleY1731RmepDmrFrameDelayAvg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 28),
    _SleY1731RmepDmrFrameDelayAvg_Type()
)
sleY1731RmepDmrFrameDelayAvg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepDmrFrameDelayAvg.setStatus("current")
_SleY1731RmepDmrFrameDelayVar_Type = Integer32
_SleY1731RmepDmrFrameDelayVar_Object = MibTableColumn
sleY1731RmepDmrFrameDelayVar = _SleY1731RmepDmrFrameDelayVar_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 29),
    _SleY1731RmepDmrFrameDelayVar_Type()
)
sleY1731RmepDmrFrameDelayVar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepDmrFrameDelayVar.setStatus("current")
_SleY1731RmepLmrFrameLossNearRatio_Type = Integer32
_SleY1731RmepLmrFrameLossNearRatio_Object = MibTableColumn
sleY1731RmepLmrFrameLossNearRatio = _SleY1731RmepLmrFrameLossNearRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 30),
    _SleY1731RmepLmrFrameLossNearRatio_Type()
)
sleY1731RmepLmrFrameLossNearRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossNearRatio.setStatus("current")
_SleY1731RmepLmrFrameLossNearAvgRatio_Type = Integer32
_SleY1731RmepLmrFrameLossNearAvgRatio_Object = MibTableColumn
sleY1731RmepLmrFrameLossNearAvgRatio = _SleY1731RmepLmrFrameLossNearAvgRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 31),
    _SleY1731RmepLmrFrameLossNearAvgRatio_Type()
)
sleY1731RmepLmrFrameLossNearAvgRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossNearAvgRatio.setStatus("current")
_SleY1731RmepLmrFrameLossFarRatio_Type = Integer32
_SleY1731RmepLmrFrameLossFarRatio_Object = MibTableColumn
sleY1731RmepLmrFrameLossFarRatio = _SleY1731RmepLmrFrameLossFarRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 32),
    _SleY1731RmepLmrFrameLossFarRatio_Type()
)
sleY1731RmepLmrFrameLossFarRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossFarRatio.setStatus("current")
_SleY1731RmepLmrFrameLossFarAvgRatio_Type = Integer32
_SleY1731RmepLmrFrameLossFarAvgRatio_Object = MibTableColumn
sleY1731RmepLmrFrameLossFarAvgRatio = _SleY1731RmepLmrFrameLossFarAvgRatio_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 1, 1, 33),
    _SleY1731RmepLmrFrameLossFarAvgRatio_Type()
)
sleY1731RmepLmrFrameLossFarAvgRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepLmrFrameLossFarAvgRatio.setStatus("current")
_SleY1731RmepControl_ObjectIdentity = ObjectIdentity
sleY1731RmepControl = _SleY1731RmepControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2)
)


class _SleY1731RmepControlRequest_Type(Integer32):
    """Custom type sleY1731RmepControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731Rmep", 1),
          ("deleteY1731Rmep", 2))
    )


_SleY1731RmepControlRequest_Type.__name__ = "Integer32"
_SleY1731RmepControlRequest_Object = MibScalar
sleY1731RmepControlRequest = _SleY1731RmepControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 1),
    _SleY1731RmepControlRequest_Type()
)
sleY1731RmepControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731RmepControlRequest.setStatus("current")
_SleY1731RMepControlStatus_Type = SleControlStatusType
_SleY1731RMepControlStatus_Object = MibScalar
sleY1731RMepControlStatus = _SleY1731RMepControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 2),
    _SleY1731RMepControlStatus_Type()
)
sleY1731RMepControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RMepControlStatus.setStatus("current")
_SleY1731RmepControlTimer_Type = Gauge32
_SleY1731RmepControlTimer_Object = MibScalar
sleY1731RmepControlTimer = _SleY1731RmepControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 3),
    _SleY1731RmepControlTimer_Type()
)
sleY1731RmepControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731RmepControlTimer.setStatus("current")
_SleY1731RmepControlTimeStamp_Type = TimeTicks
_SleY1731RmepControlTimeStamp_Object = MibScalar
sleY1731RmepControlTimeStamp = _SleY1731RmepControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 4),
    _SleY1731RmepControlTimeStamp_Type()
)
sleY1731RmepControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepControlTimeStamp.setStatus("current")
_SleY1731RmepControlReqResult_Type = SleControlRequestResultType
_SleY1731RmepControlReqResult_Object = MibScalar
sleY1731RmepControlReqResult = _SleY1731RmepControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 5),
    _SleY1731RmepControlReqResult_Type()
)
sleY1731RmepControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731RmepControlReqResult.setStatus("current")


class _SleY1731RmepControlIdentifier_Type(Integer32):
    """Custom type sleY1731RmepControlIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731RmepControlIdentifier_Type.__name__ = "Integer32"
_SleY1731RmepControlIdentifier_Object = MibScalar
sleY1731RmepControlIdentifier = _SleY1731RmepControlIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 6),
    _SleY1731RmepControlIdentifier_Type()
)
sleY1731RmepControlIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731RmepControlIdentifier.setStatus("current")


class _SleY1731RmepControlMegIndex_Type(Integer32):
    """Custom type sleY1731RmepControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731RmepControlMegIndex_Type.__name__ = "Integer32"
_SleY1731RmepControlMegIndex_Object = MibScalar
sleY1731RmepControlMegIndex = _SleY1731RmepControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 7),
    _SleY1731RmepControlMegIndex_Type()
)
sleY1731RmepControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731RmepControlMegIndex.setStatus("current")
_SleY1731RmepControlIfIndex_Type = Integer32
_SleY1731RmepControlIfIndex_Object = MibScalar
sleY1731RmepControlIfIndex = _SleY1731RmepControlIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 2, 8),
    _SleY1731RmepControlIfIndex_Type()
)
sleY1731RmepControlIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731RmepControlIfIndex.setStatus("current")
_SleY1731RmepNotification_ObjectIdentity = ObjectIdentity
sleY1731RmepNotification = _SleY1731RmepNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 3)
)
_SleY1731LbrMcast_ObjectIdentity = ObjectIdentity
sleY1731LbrMcast = _SleY1731LbrMcast_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 10)
)
_SleY1731LbrMcastTable_Object = MibTable
sleY1731LbrMcastTable = _SleY1731LbrMcastTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 10, 1)
)
if mibBuilder.loadTexts:
    sleY1731LbrMcastTable.setStatus("current")
_SleY1731LbrMcastEntry_Object = MibTableRow
sleY1731LbrMcastEntry = _SleY1731LbrMcastEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 10, 1, 1)
)
sleY1731LbrMcastEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731LbrReceiveOrder"),
)
if mibBuilder.loadTexts:
    sleY1731LbrMcastEntry.setStatus("current")


class _SleY1731LbrReceiveOrder_Type(Integer32):
    """Custom type sleY1731LbrReceiveOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LbrReceiveOrder_Type.__name__ = "Integer32"
_SleY1731LbrReceiveOrder_Object = MibTableColumn
sleY1731LbrReceiveOrder = _SleY1731LbrReceiveOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 10, 1, 1, 1),
    _SleY1731LbrReceiveOrder_Type()
)
sleY1731LbrReceiveOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LbrReceiveOrder.setStatus("current")


class _SleY1731LbrRemoteMacAddress_Type(OctetString):
    """Custom type sleY1731LbrRemoteMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731LbrRemoteMacAddress_Type.__name__ = "OctetString"
_SleY1731LbrRemoteMacAddress_Object = MibTableColumn
sleY1731LbrRemoteMacAddress = _SleY1731LbrRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 10, 1, 1, 2),
    _SleY1731LbrRemoteMacAddress_Type()
)
sleY1731LbrRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LbrRemoteMacAddress.setStatus("current")
_SleY1731LbrUcast_ObjectIdentity = ObjectIdentity
sleY1731LbrUcast = _SleY1731LbrUcast_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 11)
)
_SleY1731LbrUcastTable_Object = MibTable
sleY1731LbrUcastTable = _SleY1731LbrUcastTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 11, 1)
)
if mibBuilder.loadTexts:
    sleY1731LbrUcastTable.setStatus("current")
_SleY1731LbrUcastEntry_Object = MibTableRow
sleY1731LbrUcastEntry = _SleY1731LbrUcastEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 11, 1, 1)
)
sleY1731LbrUcastEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731LbrTransId"),
)
if mibBuilder.loadTexts:
    sleY1731LbrUcastEntry.setStatus("current")


class _SleY1731LbrTransId_Type(Integer32):
    """Custom type sleY1731LbrTransId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LbrTransId_Type.__name__ = "Integer32"
_SleY1731LbrTransId_Object = MibTableColumn
sleY1731LbrTransId = _SleY1731LbrTransId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 11, 1, 1, 1),
    _SleY1731LbrTransId_Type()
)
sleY1731LbrTransId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LbrTransId.setStatus("current")


class _SleY1731LbrRoundTripTime_Type(Integer32):
    """Custom type sleY1731LbrRoundTripTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LbrRoundTripTime_Type.__name__ = "Integer32"
_SleY1731LbrRoundTripTime_Object = MibTableColumn
sleY1731LbrRoundTripTime = _SleY1731LbrRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 11, 1, 1, 2),
    _SleY1731LbrRoundTripTime_Type()
)
sleY1731LbrRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LbrRoundTripTime.setStatus("current")
_SleY1731Ltr_ObjectIdentity = ObjectIdentity
sleY1731Ltr = _SleY1731Ltr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12)
)
_SleY1731LtrTable_Object = MibTable
sleY1731LtrTable = _SleY1731LtrTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1)
)
if mibBuilder.loadTexts:
    sleY1731LtrTable.setStatus("current")
_SleY1731LtrEntry_Object = MibTableRow
sleY1731LtrEntry = _SleY1731LtrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1)
)
sleY1731LtrEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731LtrSeqNumber"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731LtrReceiveOrder"),
)
if mibBuilder.loadTexts:
    sleY1731LtrEntry.setStatus("current")


class _SleY1731LtrSeqNumber_Type(Integer32):
    """Custom type sleY1731LtrSeqNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LtrSeqNumber_Type.__name__ = "Integer32"
_SleY1731LtrSeqNumber_Object = MibTableColumn
sleY1731LtrSeqNumber = _SleY1731LtrSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 1),
    _SleY1731LtrSeqNumber_Type()
)
sleY1731LtrSeqNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrSeqNumber.setStatus("current")


class _SleY1731LtrReceiveOrder_Type(Integer32):
    """Custom type sleY1731LtrReceiveOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LtrReceiveOrder_Type.__name__ = "Integer32"
_SleY1731LtrReceiveOrder_Object = MibTableColumn
sleY1731LtrReceiveOrder = _SleY1731LtrReceiveOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 2),
    _SleY1731LtrReceiveOrder_Type()
)
sleY1731LtrReceiveOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrReceiveOrder.setStatus("current")
_SleY1731LtrRoundTripTime_Type = Integer32
_SleY1731LtrRoundTripTime_Object = MibTableColumn
sleY1731LtrRoundTripTime = _SleY1731LtrRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 3),
    _SleY1731LtrRoundTripTime_Type()
)
sleY1731LtrRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrRoundTripTime.setStatus("current")


class _SleY1731LtrTtl_Type(Integer32):
    """Custom type sleY1731LtrTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SleY1731LtrTtl_Type.__name__ = "Integer32"
_SleY1731LtrTtl_Object = MibTableColumn
sleY1731LtrTtl = _SleY1731LtrTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 4),
    _SleY1731LtrTtl_Type()
)
sleY1731LtrTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrTtl.setStatus("current")


class _SleY1731LtrForwarded_Type(Integer32):
    """Custom type sleY1731LtrForwarded based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731LtrForwarded_Type.__name__ = "Integer32"
_SleY1731LtrForwarded_Object = MibTableColumn
sleY1731LtrForwarded = _SleY1731LtrForwarded_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 5),
    _SleY1731LtrForwarded_Type()
)
sleY1731LtrForwarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrForwarded.setStatus("current")


class _SleY1731LtrTerminalMep_Type(Integer32):
    """Custom type sleY1731LtrTerminalMep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731LtrTerminalMep_Type.__name__ = "Integer32"
_SleY1731LtrTerminalMep_Object = MibTableColumn
sleY1731LtrTerminalMep = _SleY1731LtrTerminalMep_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 6),
    _SleY1731LtrTerminalMep_Type()
)
sleY1731LtrTerminalMep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrTerminalMep.setStatus("current")


class _SleY1731LtrLastEgressIdentifier_Type(OctetString):
    """Custom type sleY1731LtrLastEgressIdentifier based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8


_SleY1731LtrLastEgressIdentifier_Type.__name__ = "OctetString"
_SleY1731LtrLastEgressIdentifier_Object = MibTableColumn
sleY1731LtrLastEgressIdentifier = _SleY1731LtrLastEgressIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 7),
    _SleY1731LtrLastEgressIdentifier_Type()
)
sleY1731LtrLastEgressIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrLastEgressIdentifier.setStatus("current")


class _SleY1731LtrNextEgressIdentifier_Type(OctetString):
    """Custom type sleY1731LtrNextEgressIdentifier based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8


_SleY1731LtrNextEgressIdentifier_Type.__name__ = "OctetString"
_SleY1731LtrNextEgressIdentifier_Object = MibTableColumn
sleY1731LtrNextEgressIdentifier = _SleY1731LtrNextEgressIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 8),
    _SleY1731LtrNextEgressIdentifier_Type()
)
sleY1731LtrNextEgressIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrNextEgressIdentifier.setStatus("current")


class _SleY1731LtrRelay_Type(Integer32):
    """Custom type sleY1731LtrRelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("rlyHit", 1),
          ("rlyFDB", 2),
          ("rlyMPDB", 3))
    )


_SleY1731LtrRelay_Type.__name__ = "Integer32"
_SleY1731LtrRelay_Object = MibTableColumn
sleY1731LtrRelay = _SleY1731LtrRelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 9),
    _SleY1731LtrRelay_Type()
)
sleY1731LtrRelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrRelay.setStatus("current")


class _SleY1731LtrIngress_Type(Integer32):
    """Custom type sleY1731LtrIngress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ingNoTlv", 0),
          ("ingOK", 1),
          ("ingDown", 2),
          ("ingBlocked", 3),
          ("ingVid", 4))
    )


_SleY1731LtrIngress_Type.__name__ = "Integer32"
_SleY1731LtrIngress_Object = MibTableColumn
sleY1731LtrIngress = _SleY1731LtrIngress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 10),
    _SleY1731LtrIngress_Type()
)
sleY1731LtrIngress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrIngress.setStatus("current")


class _SleY1731LtrIngressMac_Type(OctetString):
    """Custom type sleY1731LtrIngressMac based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731LtrIngressMac_Type.__name__ = "OctetString"
_SleY1731LtrIngressMac_Object = MibTableColumn
sleY1731LtrIngressMac = _SleY1731LtrIngressMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 11),
    _SleY1731LtrIngressMac_Type()
)
sleY1731LtrIngressMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrIngressMac.setStatus("current")
_SleY1731LtrIngressPort_Type = Integer32
_SleY1731LtrIngressPort_Object = MibTableColumn
sleY1731LtrIngressPort = _SleY1731LtrIngressPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 12),
    _SleY1731LtrIngressPort_Type()
)
sleY1731LtrIngressPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrIngressPort.setStatus("current")


class _SleY1731LtrEgress_Type(Integer32):
    """Custom type sleY1731LtrEgress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("egrNoTlv", 0),
          ("egrOK", 1),
          ("egrDown", 2),
          ("egrBlocked", 3),
          ("egrVid", 4))
    )


_SleY1731LtrEgress_Type.__name__ = "Integer32"
_SleY1731LtrEgress_Object = MibTableColumn
sleY1731LtrEgress = _SleY1731LtrEgress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 13),
    _SleY1731LtrEgress_Type()
)
sleY1731LtrEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrEgress.setStatus("current")


class _SleY1731LtrEgressMac_Type(OctetString):
    """Custom type sleY1731LtrEgressMac based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731LtrEgressMac_Type.__name__ = "OctetString"
_SleY1731LtrEgressMac_Object = MibTableColumn
sleY1731LtrEgressMac = _SleY1731LtrEgressMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 14),
    _SleY1731LtrEgressMac_Type()
)
sleY1731LtrEgressMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrEgressMac.setStatus("current")
_SleY1731LtrEgressPort_Type = Integer32
_SleY1731LtrEgressPort_Object = MibTableColumn
sleY1731LtrEgressPort = _SleY1731LtrEgressPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 12, 1, 1, 15),
    _SleY1731LtrEgressPort_Type()
)
sleY1731LtrEgressPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LtrEgressPort.setStatus("current")
_SleY1731ConfigError_ObjectIdentity = ObjectIdentity
sleY1731ConfigError = _SleY1731ConfigError_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13)
)
_SleY1731ConfigErrorTable_Object = MibTable
sleY1731ConfigErrorTable = _SleY1731ConfigErrorTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13, 1)
)
if mibBuilder.loadTexts:
    sleY1731ConfigErrorTable.setStatus("current")
_SleY1731ConfigErrorEntry_Object = MibTableRow
sleY1731ConfigErrorEntry = _SleY1731ConfigErrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13, 1, 1)
)
sleY1731ConfigErrorEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731ConfigErrorVid"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731ConfigErrorIfIndex"),
)
if mibBuilder.loadTexts:
    sleY1731ConfigErrorEntry.setStatus("current")


class _SleY1731ConfigErrorVid_Type(Integer32):
    """Custom type sleY1731ConfigErrorVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731ConfigErrorVid_Type.__name__ = "Integer32"
_SleY1731ConfigErrorVid_Object = MibTableColumn
sleY1731ConfigErrorVid = _SleY1731ConfigErrorVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13, 1, 1, 1),
    _SleY1731ConfigErrorVid_Type()
)
sleY1731ConfigErrorVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731ConfigErrorVid.setStatus("current")


class _SleY1731ConfigErrorIfIndex_Type(Integer32):
    """Custom type sleY1731ConfigErrorIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731ConfigErrorIfIndex_Type.__name__ = "Integer32"
_SleY1731ConfigErrorIfIndex_Object = MibTableColumn
sleY1731ConfigErrorIfIndex = _SleY1731ConfigErrorIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13, 1, 1, 2),
    _SleY1731ConfigErrorIfIndex_Type()
)
sleY1731ConfigErrorIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731ConfigErrorIfIndex.setStatus("current")


class _SleY1731ConfigErrorType_Type(Bits):
    """Custom type sleY1731ConfigErrorType based on Bits"""
    namedValues = NamedValues(
        *(("y1731leak", 0),
          ("conflictingVids", 1),
          ("excessiveLevels", 2),
          ("overlappedLevels", 3))
    )

_SleY1731ConfigErrorType_Type.__name__ = "Bits"
_SleY1731ConfigErrorType_Object = MibTableColumn
sleY1731ConfigErrorType = _SleY1731ConfigErrorType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 13, 1, 1, 3),
    _SleY1731ConfigErrorType_Type()
)
sleY1731ConfigErrorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731ConfigErrorType.setStatus("current")
_SleY1731MipCcdb_ObjectIdentity = ObjectIdentity
sleY1731MipCcdb = _SleY1731MipCcdb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14)
)
_SleY1731MipCcdbTable_Object = MibTable
sleY1731MipCcdbTable = _SleY1731MipCcdbTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1)
)
if mibBuilder.loadTexts:
    sleY1731MipCcdbTable.setStatus("current")
_SleY1731MipCcdbEntry_Object = MibTableRow
sleY1731MipCcdbEntry = _SleY1731MipCcdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1)
)
sleY1731MipCcdbEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MipCcdbIndex"),
)
if mibBuilder.loadTexts:
    sleY1731MipCcdbEntry.setStatus("current")


class _SleY1731MipCcdbIndex_Type(Integer32):
    """Custom type sleY1731MipCcdbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731MipCcdbIndex_Type.__name__ = "Integer32"
_SleY1731MipCcdbIndex_Object = MibTableColumn
sleY1731MipCcdbIndex = _SleY1731MipCcdbIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1, 1),
    _SleY1731MipCcdbIndex_Type()
)
sleY1731MipCcdbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipCcdbIndex.setStatus("current")


class _SleY1731MipCcdbVlanId_Type(Integer32):
    """Custom type sleY1731MipCcdbVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731MipCcdbVlanId_Type.__name__ = "Integer32"
_SleY1731MipCcdbVlanId_Object = MibTableColumn
sleY1731MipCcdbVlanId = _SleY1731MipCcdbVlanId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1, 2),
    _SleY1731MipCcdbVlanId_Type()
)
sleY1731MipCcdbVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipCcdbVlanId.setStatus("current")


class _SleY1731MipCcdbMacAddr_Type(OctetString):
    """Custom type sleY1731MipCcdbMacAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleY1731MipCcdbMacAddr_Type.__name__ = "OctetString"
_SleY1731MipCcdbMacAddr_Object = MibTableColumn
sleY1731MipCcdbMacAddr = _SleY1731MipCcdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1, 3),
    _SleY1731MipCcdbMacAddr_Type()
)
sleY1731MipCcdbMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipCcdbMacAddr.setStatus("current")
_SleY1731MipCcdbPort_Type = Integer32
_SleY1731MipCcdbPort_Object = MibTableColumn
sleY1731MipCcdbPort = _SleY1731MipCcdbPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1, 4),
    _SleY1731MipCcdbPort_Type()
)
sleY1731MipCcdbPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipCcdbPort.setStatus("current")
_SleY1731MipCcdbKeepTime_Type = TimeTicks
_SleY1731MipCcdbKeepTime_Object = MibTableColumn
sleY1731MipCcdbKeepTime = _SleY1731MipCcdbKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 14, 1, 1, 5),
    _SleY1731MipCcdbKeepTime_Type()
)
sleY1731MipCcdbKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731MipCcdbKeepTime.setStatus("current")
_SleY1731UplinkRedundancy_ObjectIdentity = ObjectIdentity
sleY1731UplinkRedundancy = _SleY1731UplinkRedundancy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15)
)
_SleY1731URTable_Object = MibTable
sleY1731URTable = _SleY1731URTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1)
)
if mibBuilder.loadTexts:
    sleY1731URTable.setStatus("current")
_SleY1731UREntry_Object = MibTableRow
sleY1731UREntry = _SleY1731UREntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1)
)
sleY1731UREntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731URMegIndex"),
)
if mibBuilder.loadTexts:
    sleY1731UREntry.setStatus("current")


class _SleY1731URMegIndex_Type(Integer32):
    """Custom type sleY1731URMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URMegIndex_Type.__name__ = "Integer32"
_SleY1731URMegIndex_Object = MibTableColumn
sleY1731URMegIndex = _SleY1731URMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 1),
    _SleY1731URMegIndex_Type()
)
sleY1731URMegIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URMegIndex.setStatus("current")
_SleY1731URMegName_Type = OctetString
_SleY1731URMegName_Object = MibTableColumn
sleY1731URMegName = _SleY1731URMegName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 2),
    _SleY1731URMegName_Type()
)
sleY1731URMegName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URMegName.setStatus("current")


class _SleY1731URDedicatedVlan_Type(Integer32):
    """Custom type sleY1731URDedicatedVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731URDedicatedVlan_Type.__name__ = "Integer32"
_SleY1731URDedicatedVlan_Object = MibTableColumn
sleY1731URDedicatedVlan = _SleY1731URDedicatedVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 3),
    _SleY1731URDedicatedVlan_Type()
)
sleY1731URDedicatedVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URDedicatedVlan.setStatus("current")


class _SleY1731UREnableStatus_Type(Integer32):
    """Custom type sleY1731UREnableStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731UREnableStatus_Type.__name__ = "Integer32"
_SleY1731UREnableStatus_Object = MibTableColumn
sleY1731UREnableStatus = _SleY1731UREnableStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 4),
    _SleY1731UREnableStatus_Type()
)
sleY1731UREnableStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731UREnableStatus.setStatus("current")
_SleY1731URConnectivityCheckMeg_Type = OctetString
_SleY1731URConnectivityCheckMeg_Object = MibTableColumn
sleY1731URConnectivityCheckMeg = _SleY1731URConnectivityCheckMeg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 5),
    _SleY1731URConnectivityCheckMeg_Type()
)
sleY1731URConnectivityCheckMeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URConnectivityCheckMeg.setStatus("current")


class _SleY1731URPrimaryMepId_Type(Integer32):
    """Custom type sleY1731URPrimaryMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731URPrimaryMepId_Type.__name__ = "Integer32"
_SleY1731URPrimaryMepId_Object = MibTableColumn
sleY1731URPrimaryMepId = _SleY1731URPrimaryMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 6),
    _SleY1731URPrimaryMepId_Type()
)
sleY1731URPrimaryMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URPrimaryMepId.setStatus("current")


class _SleY1731URSecondaryMepId_Type(Integer32):
    """Custom type sleY1731URSecondaryMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731URSecondaryMepId_Type.__name__ = "Integer32"
_SleY1731URSecondaryMepId_Object = MibTableColumn
sleY1731URSecondaryMepId = _SleY1731URSecondaryMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 7),
    _SleY1731URSecondaryMepId_Type()
)
sleY1731URSecondaryMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URSecondaryMepId.setStatus("current")


class _SleY1731URControlVlan_Type(Integer32):
    """Custom type sleY1731URControlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731URControlVlan_Type.__name__ = "Integer32"
_SleY1731URControlVlan_Object = MibTableColumn
sleY1731URControlVlan = _SleY1731URControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 8),
    _SleY1731URControlVlan_Type()
)
sleY1731URControlVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URControlVlan.setStatus("current")


class _SleY1731URNodeConf_Type(Integer32):
    """Custom type sleY1731URNodeConf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("master", 1),
          ("slave", 2))
    )


_SleY1731URNodeConf_Type.__name__ = "Integer32"
_SleY1731URNodeConf_Object = MibTableColumn
sleY1731URNodeConf = _SleY1731URNodeConf_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 9),
    _SleY1731URNodeConf_Type()
)
sleY1731URNodeConf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URNodeConf.setStatus("current")


class _SleY1731URNodeConfPortNum_Type(Integer32):
    """Custom type sleY1731URNodeConfPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URNodeConfPortNum_Type.__name__ = "Integer32"
_SleY1731URNodeConfPortNum_Object = MibTableColumn
sleY1731URNodeConfPortNum = _SleY1731URNodeConfPortNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 10),
    _SleY1731URNodeConfPortNum_Type()
)
sleY1731URNodeConfPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URNodeConfPortNum.setStatus("current")


class _SleY1731URNodeConfPortStatus_Type(Integer32):
    """Custom type sleY1731URNodeConfPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disabled", 1),
          ("forwarding", 2),
          ("blocking", 3))
    )


_SleY1731URNodeConfPortStatus_Type.__name__ = "Integer32"
_SleY1731URNodeConfPortStatus_Object = MibTableColumn
sleY1731URNodeConfPortStatus = _SleY1731URNodeConfPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 11),
    _SleY1731URNodeConfPortStatus_Type()
)
sleY1731URNodeConfPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URNodeConfPortStatus.setStatus("current")


class _SleY1731URNonRevertive_Type(Integer32):
    """Custom type sleY1731URNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("ture", 1))
    )


_SleY1731URNonRevertive_Type.__name__ = "Integer32"
_SleY1731URNonRevertive_Object = MibTableColumn
sleY1731URNonRevertive = _SleY1731URNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 12),
    _SleY1731URNonRevertive_Type()
)
sleY1731URNonRevertive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URNonRevertive.setStatus("current")


class _SleY1731URTrustMemberCount_Type(Integer32):
    """Custom type sleY1731URTrustMemberCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URTrustMemberCount_Type.__name__ = "Integer32"
_SleY1731URTrustMemberCount_Object = MibTableColumn
sleY1731URTrustMemberCount = _SleY1731URTrustMemberCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 13),
    _SleY1731URTrustMemberCount_Type()
)
sleY1731URTrustMemberCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URTrustMemberCount.setStatus("current")


class _SleY1731URWaitToRestore_Type(Integer32):
    """Custom type sleY1731URWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 720),
    )


_SleY1731URWaitToRestore_Type.__name__ = "Integer32"
_SleY1731URWaitToRestore_Object = MibTableColumn
sleY1731URWaitToRestore = _SleY1731URWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 14),
    _SleY1731URWaitToRestore_Type()
)
sleY1731URWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URWaitToRestore.setStatus("current")


class _SleY1731URForceSwitch_Type(Integer32):
    """Custom type sleY1731URForceSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731URForceSwitch_Type.__name__ = "Integer32"
_SleY1731URForceSwitch_Object = MibTableColumn
sleY1731URForceSwitch = _SleY1731URForceSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 15),
    _SleY1731URForceSwitch_Type()
)
sleY1731URForceSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URForceSwitch.setStatus("current")


class _SleY1731URSFCondition_Type(Integer32):
    """Custom type sleY1731URSFCondition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loc", 0),
          ("locRdi", 1))
    )


_SleY1731URSFCondition_Type.__name__ = "Integer32"
_SleY1731URSFCondition_Object = MibTableColumn
sleY1731URSFCondition = _SleY1731URSFCondition_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 16),
    _SleY1731URSFCondition_Type()
)
sleY1731URSFCondition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URSFCondition.setStatus("current")
_SleY1731URTrafficVlan_Type = OctetString
_SleY1731URTrafficVlan_Object = MibTableColumn
sleY1731URTrafficVlan = _SleY1731URTrafficVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 17),
    _SleY1731URTrafficVlan_Type()
)
sleY1731URTrafficVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URTrafficVlan.setStatus("current")


class _SleY1731URState_Type(Integer32):
    """Custom type sleY1731URState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("unReady", 0),
          ("ready", 1),
          ("active", 2),
          ("standby", 3),
          ("preActive", 4))
    )


_SleY1731URState_Type.__name__ = "Integer32"
_SleY1731URState_Object = MibTableColumn
sleY1731URState = _SleY1731URState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 18),
    _SleY1731URState_Type()
)
sleY1731URState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URState.setStatus("current")


class _SleY1731URManualSwitch_Type(Integer32):
    """Custom type sleY1731URManualSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731URManualSwitch_Type.__name__ = "Integer32"
_SleY1731URManualSwitch_Object = MibTableColumn
sleY1731URManualSwitch = _SleY1731URManualSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 1, 1, 19),
    _SleY1731URManualSwitch_Type()
)
sleY1731URManualSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731URManualSwitch.setStatus("current")
_SleY1731URControl_ObjectIdentity = ObjectIdentity
sleY1731URControl = _SleY1731URControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2)
)


class _SleY1731URControlRequest_Type(Integer32):
    """Custom type sleY1731URControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("setDedicatedVlan", 1),
          ("setEnableStatus", 2),
          ("setCCPrimaryMepId", 3),
          ("clearCCPrimaryMepId", 4),
          ("setCCSecondaryMepId", 5),
          ("clearCCSecondaryMepId", 6),
          ("setControlVlan", 7),
          ("clearControlVlan", 8),
          ("setNodeConfiguration", 9),
          ("clearNodeConfiguration", 10),
          ("setNonRevertive", 11),
          ("setTrustMemberCount", 12),
          ("clearTrustMemberCount", 13),
          ("setWaitToRestore", 14),
          ("clearWaitToRestore", 15),
          ("setForceSwitch", 16),
          ("setManualSwitch", 17),
          ("setSFCondition", 18),
          ("setTrafficVlan", 19),
          ("clearTrafficVlan", 20))
    )


_SleY1731URControlRequest_Type.__name__ = "Integer32"
_SleY1731URControlRequest_Object = MibScalar
sleY1731URControlRequest = _SleY1731URControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 1),
    _SleY1731URControlRequest_Type()
)
sleY1731URControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlRequest.setStatus("current")
_SleY1731URControlStatus_Type = SleControlStatusType
_SleY1731URControlStatus_Object = MibScalar
sleY1731URControlStatus = _SleY1731URControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 2),
    _SleY1731URControlStatus_Type()
)
sleY1731URControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlStatus.setStatus("current")
_SleY1731URControlTimer_Type = Gauge32
_SleY1731URControlTimer_Object = MibScalar
sleY1731URControlTimer = _SleY1731URControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 3),
    _SleY1731URControlTimer_Type()
)
sleY1731URControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlTimer.setStatus("current")
_SleY1731URControlTimeStamp_Type = TimeTicks
_SleY1731URControlTimeStamp_Object = MibScalar
sleY1731URControlTimeStamp = _SleY1731URControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 4),
    _SleY1731URControlTimeStamp_Type()
)
sleY1731URControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlTimeStamp.setStatus("current")
_SleY1731URControlReqResult_Type = SleControlRequestResultType
_SleY1731URControlReqResult_Object = MibScalar
sleY1731URControlReqResult = _SleY1731URControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 5),
    _SleY1731URControlReqResult_Type()
)
sleY1731URControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlReqResult.setStatus("current")


class _SleY1731URControlMegIndex_Type(Integer32):
    """Custom type sleY1731URControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URControlMegIndex_Type.__name__ = "Integer32"
_SleY1731URControlMegIndex_Object = MibScalar
sleY1731URControlMegIndex = _SleY1731URControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 6),
    _SleY1731URControlMegIndex_Type()
)
sleY1731URControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlMegIndex.setStatus("current")
_SleY1731URControlMegName_Type = OctetString
_SleY1731URControlMegName_Object = MibScalar
sleY1731URControlMegName = _SleY1731URControlMegName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 7),
    _SleY1731URControlMegName_Type()
)
sleY1731URControlMegName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlMegName.setStatus("current")


class _SleY1731URControlDedicatedVlan_Type(Integer32):
    """Custom type sleY1731URControlDedicatedVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731URControlDedicatedVlan_Type.__name__ = "Integer32"
_SleY1731URControlDedicatedVlan_Object = MibScalar
sleY1731URControlDedicatedVlan = _SleY1731URControlDedicatedVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 8),
    _SleY1731URControlDedicatedVlan_Type()
)
sleY1731URControlDedicatedVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlDedicatedVlan.setStatus("current")


class _SleY1731URControlEnableStatus_Type(Integer32):
    """Custom type sleY1731URControlEnableStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleY1731URControlEnableStatus_Type.__name__ = "Integer32"
_SleY1731URControlEnableStatus_Object = MibScalar
sleY1731URControlEnableStatus = _SleY1731URControlEnableStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 9),
    _SleY1731URControlEnableStatus_Type()
)
sleY1731URControlEnableStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlEnableStatus.setStatus("current")
_SleY1731URControlConnectivityCheckMeg_Type = OctetString
_SleY1731URControlConnectivityCheckMeg_Object = MibScalar
sleY1731URControlConnectivityCheckMeg = _SleY1731URControlConnectivityCheckMeg_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 10),
    _SleY1731URControlConnectivityCheckMeg_Type()
)
sleY1731URControlConnectivityCheckMeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlConnectivityCheckMeg.setStatus("current")


class _SleY1731URControlPrimaryMepId_Type(Integer32):
    """Custom type sleY1731URControlPrimaryMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731URControlPrimaryMepId_Type.__name__ = "Integer32"
_SleY1731URControlPrimaryMepId_Object = MibScalar
sleY1731URControlPrimaryMepId = _SleY1731URControlPrimaryMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 11),
    _SleY1731URControlPrimaryMepId_Type()
)
sleY1731URControlPrimaryMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlPrimaryMepId.setStatus("current")


class _SleY1731URControlSecondaryMepId_Type(Integer32):
    """Custom type sleY1731URControlSecondaryMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731URControlSecondaryMepId_Type.__name__ = "Integer32"
_SleY1731URControlSecondaryMepId_Object = MibScalar
sleY1731URControlSecondaryMepId = _SleY1731URControlSecondaryMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 12),
    _SleY1731URControlSecondaryMepId_Type()
)
sleY1731URControlSecondaryMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlSecondaryMepId.setStatus("current")


class _SleY1731URControlControlVlan_Type(Integer32):
    """Custom type sleY1731URControlControlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleY1731URControlControlVlan_Type.__name__ = "Integer32"
_SleY1731URControlControlVlan_Object = MibScalar
sleY1731URControlControlVlan = _SleY1731URControlControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 13),
    _SleY1731URControlControlVlan_Type()
)
sleY1731URControlControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlControlVlan.setStatus("current")


class _SleY1731URControlNodeConf_Type(Integer32):
    """Custom type sleY1731URControlNodeConf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("master", 1),
          ("slave", 2))
    )


_SleY1731URControlNodeConf_Type.__name__ = "Integer32"
_SleY1731URControlNodeConf_Object = MibScalar
sleY1731URControlNodeConf = _SleY1731URControlNodeConf_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 14),
    _SleY1731URControlNodeConf_Type()
)
sleY1731URControlNodeConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlNodeConf.setStatus("current")


class _SleY1731URControlNodeConfPortNum_Type(Integer32):
    """Custom type sleY1731URControlNodeConfPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URControlNodeConfPortNum_Type.__name__ = "Integer32"
_SleY1731URControlNodeConfPortNum_Object = MibScalar
sleY1731URControlNodeConfPortNum = _SleY1731URControlNodeConfPortNum_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 15),
    _SleY1731URControlNodeConfPortNum_Type()
)
sleY1731URControlNodeConfPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlNodeConfPortNum.setStatus("current")


class _SleY1731URControlNonRevertive_Type(Integer32):
    """Custom type sleY1731URControlNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("ture", 1))
    )


_SleY1731URControlNonRevertive_Type.__name__ = "Integer32"
_SleY1731URControlNonRevertive_Object = MibScalar
sleY1731URControlNonRevertive = _SleY1731URControlNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 16),
    _SleY1731URControlNonRevertive_Type()
)
sleY1731URControlNonRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlNonRevertive.setStatus("current")


class _SleY1731URControlTrustMemberCount_Type(Integer32):
    """Custom type sleY1731URControlTrustMemberCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731URControlTrustMemberCount_Type.__name__ = "Integer32"
_SleY1731URControlTrustMemberCount_Object = MibScalar
sleY1731URControlTrustMemberCount = _SleY1731URControlTrustMemberCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 17),
    _SleY1731URControlTrustMemberCount_Type()
)
sleY1731URControlTrustMemberCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlTrustMemberCount.setStatus("current")


class _SleY1731URControlWaitToRestore_Type(Integer32):
    """Custom type sleY1731URControlWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 720),
    )


_SleY1731URControlWaitToRestore_Type.__name__ = "Integer32"
_SleY1731URControlWaitToRestore_Object = MibScalar
sleY1731URControlWaitToRestore = _SleY1731URControlWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 18),
    _SleY1731URControlWaitToRestore_Type()
)
sleY1731URControlWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlWaitToRestore.setStatus("current")


class _SleY1731URControlForceSwitch_Type(Integer32):
    """Custom type sleY1731URControlForceSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731URControlForceSwitch_Type.__name__ = "Integer32"
_SleY1731URControlForceSwitch_Object = MibScalar
sleY1731URControlForceSwitch = _SleY1731URControlForceSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 19),
    _SleY1731URControlForceSwitch_Type()
)
sleY1731URControlForceSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlForceSwitch.setStatus("current")


class _SleY1731URControlSFCondition_Type(Integer32):
    """Custom type sleY1731URControlSFCondition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loc", 0),
          ("locRdi", 1))
    )


_SleY1731URControlSFCondition_Type.__name__ = "Integer32"
_SleY1731URControlSFCondition_Object = MibScalar
sleY1731URControlSFCondition = _SleY1731URControlSFCondition_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 20),
    _SleY1731URControlSFCondition_Type()
)
sleY1731URControlSFCondition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlSFCondition.setStatus("current")
_SleY1731URControlTrafficVlan_Type = OctetString
_SleY1731URControlTrafficVlan_Object = MibScalar
sleY1731URControlTrafficVlan = _SleY1731URControlTrafficVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 21),
    _SleY1731URControlTrafficVlan_Type()
)
sleY1731URControlTrafficVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlTrafficVlan.setStatus("current")


class _SleY1731URControlManualSwitch_Type(Integer32):
    """Custom type sleY1731URControlManualSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleY1731URControlManualSwitch_Type.__name__ = "Integer32"
_SleY1731URControlManualSwitch_Object = MibScalar
sleY1731URControlManualSwitch = _SleY1731URControlManualSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 2, 22),
    _SleY1731URControlManualSwitch_Type()
)
sleY1731URControlManualSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731URControlManualSwitch.setStatus("current")
_SleY1731URNotification_ObjectIdentity = ObjectIdentity
sleY1731URNotification = _SleY1731URNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3)
)
_SleY1731LocRefMep_ObjectIdentity = ObjectIdentity
sleY1731LocRefMep = _SleY1731LocRefMep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16)
)
_SleY1731LocRefMepTable_Object = MibTable
sleY1731LocRefMepTable = _SleY1731LocRefMepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1)
)
if mibBuilder.loadTexts:
    sleY1731LocRefMepTable.setStatus("current")
_SleY1731LocRefMepEntry_Object = MibTableRow
sleY1731LocRefMepEntry = _SleY1731LocRefMepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1, 1)
)
sleY1731LocRefMepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleY1731CcMacAddress"),
)
if mibBuilder.loadTexts:
    sleY1731LocRefMepEntry.setStatus("current")


class _SleY1731LRMepIndex_Type(Integer32):
    """Custom type sleY1731LRMepIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LRMepIndex_Type.__name__ = "Integer32"
_SleY1731LRMepIndex_Object = MibTableColumn
sleY1731LRMepIndex = _SleY1731LRMepIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1, 1, 1),
    _SleY1731LRMepIndex_Type()
)
sleY1731LRMepIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepIndex.setStatus("current")


class _SleY1731LRMepDMegIndex_Type(Integer32):
    """Custom type sleY1731LRMepDMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LRMepDMegIndex_Type.__name__ = "Integer32"
_SleY1731LRMepDMegIndex_Object = MibTableColumn
sleY1731LRMepDMegIndex = _SleY1731LRMepDMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1, 1, 2),
    _SleY1731LRMepDMegIndex_Type()
)
sleY1731LRMepDMegIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepDMegIndex.setStatus("current")


class _SleY1731LRMepDMepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepDMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepDMepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepDMepIdentifier_Object = MibTableColumn
sleY1731LRMepDMepIdentifier = _SleY1731LRMepDMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1, 1, 3),
    _SleY1731LRMepDMepIdentifier_Type()
)
sleY1731LRMepDMepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepDMepIdentifier.setStatus("current")


class _SleY1731LRMepDRmepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepDRmepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepDRmepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepDRmepIdentifier_Object = MibTableColumn
sleY1731LRMepDRmepIdentifier = _SleY1731LRMepDRmepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 1, 1, 4),
    _SleY1731LRMepDRmepIdentifier_Type()
)
sleY1731LRMepDRmepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepDRmepIdentifier.setStatus("current")
_SleY1731LocRefMepControl_ObjectIdentity = ObjectIdentity
sleY1731LocRefMepControl = _SleY1731LocRefMepControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2)
)


class _SleY1731LRMepControlRequest_Type(Integer32):
    """Custom type sleY1731LRMepControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createY1731LocRefMep", 1),
          ("deleteY1731LocRefMep", 2))
    )


_SleY1731LRMepControlRequest_Type.__name__ = "Integer32"
_SleY1731LRMepControlRequest_Object = MibScalar
sleY1731LRMepControlRequest = _SleY1731LRMepControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 1),
    _SleY1731LRMepControlRequest_Type()
)
sleY1731LRMepControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlRequest.setStatus("current")
_SleY1731LRMepControlStatus_Type = SleControlStatusType
_SleY1731LRMepControlStatus_Object = MibScalar
sleY1731LRMepControlStatus = _SleY1731LRMepControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 2),
    _SleY1731LRMepControlStatus_Type()
)
sleY1731LRMepControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepControlStatus.setStatus("current")
_SleY1731LRMepControlTimer_Type = Gauge32
_SleY1731LRMepControlTimer_Object = MibScalar
sleY1731LRMepControlTimer = _SleY1731LRMepControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 3),
    _SleY1731LRMepControlTimer_Type()
)
sleY1731LRMepControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlTimer.setStatus("current")
_SleY1731LRMepControlTimeStamp_Type = TimeTicks
_SleY1731LRMepControlTimeStamp_Object = MibScalar
sleY1731LRMepControlTimeStamp = _SleY1731LRMepControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 4),
    _SleY1731LRMepControlTimeStamp_Type()
)
sleY1731LRMepControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepControlTimeStamp.setStatus("current")
_SleY1731LRMepControlReqResult_Type = SleControlRequestResultType
_SleY1731LRMepControlReqResult_Object = MibScalar
sleY1731LRMepControlReqResult = _SleY1731LRMepControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 5),
    _SleY1731LRMepControlReqResult_Type()
)
sleY1731LRMepControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleY1731LRMepControlReqResult.setStatus("current")


class _SleY1731LRMepControlMegIndex_Type(Integer32):
    """Custom type sleY1731LRMepControlMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LRMepControlMegIndex_Type.__name__ = "Integer32"
_SleY1731LRMepControlMegIndex_Object = MibScalar
sleY1731LRMepControlMegIndex = _SleY1731LRMepControlMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 6),
    _SleY1731LRMepControlMegIndex_Type()
)
sleY1731LRMepControlMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlMegIndex.setStatus("current")


class _SleY1731LRMepControlMepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepControlMepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepControlMepIdentifier_Object = MibScalar
sleY1731LRMepControlMepIdentifier = _SleY1731LRMepControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 7),
    _SleY1731LRMepControlMepIdentifier_Type()
)
sleY1731LRMepControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlMepIdentifier.setStatus("current")


class _SleY1731LRMepControlRmepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepControlRmepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepControlRmepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepControlRmepIdentifier_Object = MibScalar
sleY1731LRMepControlRmepIdentifier = _SleY1731LRMepControlRmepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 8),
    _SleY1731LRMepControlRmepIdentifier_Type()
)
sleY1731LRMepControlRmepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlRmepIdentifier.setStatus("current")


class _SleY1731LRMepControlDMegIndex_Type(Integer32):
    """Custom type sleY1731LRMepControlDMegIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleY1731LRMepControlDMegIndex_Type.__name__ = "Integer32"
_SleY1731LRMepControlDMegIndex_Object = MibScalar
sleY1731LRMepControlDMegIndex = _SleY1731LRMepControlDMegIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 9),
    _SleY1731LRMepControlDMegIndex_Type()
)
sleY1731LRMepControlDMegIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlDMegIndex.setStatus("current")


class _SleY1731LRMepControlDMepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepControlDMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepControlDMepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepControlDMepIdentifier_Object = MibScalar
sleY1731LRMepControlDMepIdentifier = _SleY1731LRMepControlDMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 10),
    _SleY1731LRMepControlDMepIdentifier_Type()
)
sleY1731LRMepControlDMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlDMepIdentifier.setStatus("current")


class _SleY1731LRMepControlDRmepIdentifier_Type(Integer32):
    """Custom type sleY1731LRMepControlDRmepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleY1731LRMepControlDRmepIdentifier_Type.__name__ = "Integer32"
_SleY1731LRMepControlDRmepIdentifier_Object = MibScalar
sleY1731LRMepControlDRmepIdentifier = _SleY1731LRMepControlDRmepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 2, 11),
    _SleY1731LRMepControlDRmepIdentifier_Type()
)
sleY1731LRMepControlDRmepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleY1731LRMepControlDRmepIdentifier.setStatus("current")
_SleY1731LocRefMepNotification_ObjectIdentity = ObjectIdentity
sleY1731LocRefMepNotification = _SleY1731LocRefMepNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 3)
)
_SleCfmOam_ObjectIdentity = ObjectIdentity
sleCfmOam = _SleCfmOam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13)
)
_SleCfmBase_ObjectIdentity = ObjectIdentity
sleCfmBase = _SleCfmBase_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1)
)
_SleCfmBaseGroup_ObjectIdentity = ObjectIdentity
sleCfmBaseGroup = _SleCfmBaseGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1)
)


class _SleCfmEnable_Type(Integer32):
    """Custom type sleCfmEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmEnable_Type.__name__ = "Integer32"
_SleCfmEnable_Object = MibScalar
sleCfmEnable = _SleCfmEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1, 1),
    _SleCfmEnable_Type()
)
sleCfmEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmEnable.setStatus("current")


class _SleCfmLtrCacheHoldTime_Type(Integer32):
    """Custom type sleCfmLtrCacheHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmLtrCacheHoldTime_Type.__name__ = "Integer32"
_SleCfmLtrCacheHoldTime_Object = MibScalar
sleCfmLtrCacheHoldTime = _SleCfmLtrCacheHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1, 2),
    _SleCfmLtrCacheHoldTime_Type()
)
sleCfmLtrCacheHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrCacheHoldTime.setStatus("current")


class _SleCfmLtrCacheSize_Type(Integer32):
    """Custom type sleCfmLtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SleCfmLtrCacheSize_Type.__name__ = "Integer32"
_SleCfmLtrCacheSize_Object = MibScalar
sleCfmLtrCacheSize = _SleCfmLtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1, 3),
    _SleCfmLtrCacheSize_Type()
)
sleCfmLtrCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrCacheSize.setStatus("current")


class _SleCfmSnmpServerTraps_Type(Bits):
    """Custom type sleCfmSnmpServerTraps based on Bits"""
    namedValues = NamedValues(
        *(("rdiccm", 0),
          ("macstatus", 1),
          ("remoteccm", 2),
          ("errorccm", 3),
          ("xconccm", 4))
    )

_SleCfmSnmpServerTraps_Type.__name__ = "Bits"
_SleCfmSnmpServerTraps_Object = MibScalar
sleCfmSnmpServerTraps = _SleCfmSnmpServerTraps_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1, 4),
    _SleCfmSnmpServerTraps_Type()
)
sleCfmSnmpServerTraps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmSnmpServerTraps.setStatus("current")


class _SleCfmXcheckStartDelay_Type(Integer32):
    """Custom type sleCfmXcheckStartDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmXcheckStartDelay_Type.__name__ = "Integer32"
_SleCfmXcheckStartDelay_Object = MibScalar
sleCfmXcheckStartDelay = _SleCfmXcheckStartDelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 1, 5),
    _SleCfmXcheckStartDelay_Type()
)
sleCfmXcheckStartDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckStartDelay.setStatus("current")
_SleCfmBaseControl_ObjectIdentity = ObjectIdentity
sleCfmBaseControl = _SleCfmBaseControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2)
)


class _SleCfmBaseControlRequest_Type(Integer32):
    """Custom type sleCfmBaseControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("setCfmEnable", 1),
          ("setCfmLtrCacheProfile", 2),
          ("setCfmSnmpProfile", 3),
          ("setCfmXcheckProfile", 4),
          ("destroyMipCcdb", 5),
          ("destroyLtrCache", 6),
          ("createCfmTrunkPort", 7),
          ("deleteCfmTrunkPort", 8))
    )


_SleCfmBaseControlRequest_Type.__name__ = "Integer32"
_SleCfmBaseControlRequest_Object = MibScalar
sleCfmBaseControlRequest = _SleCfmBaseControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 1),
    _SleCfmBaseControlRequest_Type()
)
sleCfmBaseControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlRequest.setStatus("current")
_SleCfmBaseControlStatus_Type = SleControlStatusType
_SleCfmBaseControlStatus_Object = MibScalar
sleCfmBaseControlStatus = _SleCfmBaseControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 2),
    _SleCfmBaseControlStatus_Type()
)
sleCfmBaseControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmBaseControlStatus.setStatus("current")
_SleCfmBaseControlTimer_Type = Gauge32
_SleCfmBaseControlTimer_Object = MibScalar
sleCfmBaseControlTimer = _SleCfmBaseControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 3),
    _SleCfmBaseControlTimer_Type()
)
sleCfmBaseControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlTimer.setStatus("current")
_SleCfmBaseControlTimeStamp_Type = TimeTicks
_SleCfmBaseControlTimeStamp_Object = MibScalar
sleCfmBaseControlTimeStamp = _SleCfmBaseControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 4),
    _SleCfmBaseControlTimeStamp_Type()
)
sleCfmBaseControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmBaseControlTimeStamp.setStatus("current")
_SleCfmBaseControlReqResult_Type = SleControlRequestResultType
_SleCfmBaseControlReqResult_Object = MibScalar
sleCfmBaseControlReqResult = _SleCfmBaseControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 5),
    _SleCfmBaseControlReqResult_Type()
)
sleCfmBaseControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmBaseControlReqResult.setStatus("current")


class _SleCfmBaseControlEnable_Type(Integer32):
    """Custom type sleCfmBaseControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmBaseControlEnable_Type.__name__ = "Integer32"
_SleCfmBaseControlEnable_Object = MibScalar
sleCfmBaseControlEnable = _SleCfmBaseControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 6),
    _SleCfmBaseControlEnable_Type()
)
sleCfmBaseControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlEnable.setStatus("current")


class _SleCfmBaseControlLtrCacheHoldTime_Type(Integer32):
    """Custom type sleCfmBaseControlLtrCacheHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmBaseControlLtrCacheHoldTime_Type.__name__ = "Integer32"
_SleCfmBaseControlLtrCacheHoldTime_Object = MibScalar
sleCfmBaseControlLtrCacheHoldTime = _SleCfmBaseControlLtrCacheHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 7),
    _SleCfmBaseControlLtrCacheHoldTime_Type()
)
sleCfmBaseControlLtrCacheHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlLtrCacheHoldTime.setStatus("current")


class _SleCfmBaseControlLtrCacheSize_Type(Integer32):
    """Custom type sleCfmBaseControlLtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SleCfmBaseControlLtrCacheSize_Type.__name__ = "Integer32"
_SleCfmBaseControlLtrCacheSize_Object = MibScalar
sleCfmBaseControlLtrCacheSize = _SleCfmBaseControlLtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 8),
    _SleCfmBaseControlLtrCacheSize_Type()
)
sleCfmBaseControlLtrCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlLtrCacheSize.setStatus("current")


class _SleCfmBaseControlSnmpServerTraps_Type(Bits):
    """Custom type sleCfmBaseControlSnmpServerTraps based on Bits"""
    namedValues = NamedValues(
        *(("ridccm", 0),
          ("macstatus", 1),
          ("remoteccm", 2),
          ("errorccm", 3),
          ("xconccm", 4))
    )

_SleCfmBaseControlSnmpServerTraps_Type.__name__ = "Bits"
_SleCfmBaseControlSnmpServerTraps_Object = MibScalar
sleCfmBaseControlSnmpServerTraps = _SleCfmBaseControlSnmpServerTraps_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 9),
    _SleCfmBaseControlSnmpServerTraps_Type()
)
sleCfmBaseControlSnmpServerTraps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlSnmpServerTraps.setStatus("current")


class _SleCfmBaseControlXcheckStartDelay_Type(Integer32):
    """Custom type sleCfmBaseControlXcheckStartDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmBaseControlXcheckStartDelay_Type.__name__ = "Integer32"
_SleCfmBaseControlXcheckStartDelay_Object = MibScalar
sleCfmBaseControlXcheckStartDelay = _SleCfmBaseControlXcheckStartDelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 10),
    _SleCfmBaseControlXcheckStartDelay_Type()
)
sleCfmBaseControlXcheckStartDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlXcheckStartDelay.setStatus("current")


class _SleCfmBaseControlTrunkIndex_Type(Integer32):
    """Custom type sleCfmBaseControlTrunkIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmBaseControlTrunkIndex_Type.__name__ = "Integer32"
_SleCfmBaseControlTrunkIndex_Object = MibScalar
sleCfmBaseControlTrunkIndex = _SleCfmBaseControlTrunkIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 11),
    _SleCfmBaseControlTrunkIndex_Type()
)
sleCfmBaseControlTrunkIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlTrunkIndex.setStatus("current")
_SleCfmBaseControlTrunkMdName_Type = OctetString
_SleCfmBaseControlTrunkMdName_Object = MibScalar
sleCfmBaseControlTrunkMdName = _SleCfmBaseControlTrunkMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 12),
    _SleCfmBaseControlTrunkMdName_Type()
)
sleCfmBaseControlTrunkMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlTrunkMdName.setStatus("current")


class _SleCfmBaseControlTrunkMaVid_Type(Integer32):
    """Custom type sleCfmBaseControlTrunkMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmBaseControlTrunkMaVid_Type.__name__ = "Integer32"
_SleCfmBaseControlTrunkMaVid_Object = MibScalar
sleCfmBaseControlTrunkMaVid = _SleCfmBaseControlTrunkMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 2, 13),
    _SleCfmBaseControlTrunkMaVid_Type()
)
sleCfmBaseControlTrunkMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmBaseControlTrunkMaVid.setStatus("current")
_SleCfmBaseNotification_ObjectIdentity = ObjectIdentity
sleCfmBaseNotification = _SleCfmBaseNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3)
)
_SleCfmTrunkTable_Object = MibTable
sleCfmTrunkTable = _SleCfmTrunkTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 4)
)
if mibBuilder.loadTexts:
    sleCfmTrunkTable.setStatus("current")
_SleCfmTrunkEntry_Object = MibTableRow
sleCfmTrunkEntry = _SleCfmTrunkEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 4, 1)
)
sleCfmTrunkEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmTrunkIndex"),
)
if mibBuilder.loadTexts:
    sleCfmTrunkEntry.setStatus("current")


class _SleCfmTrunkIndex_Type(Integer32):
    """Custom type sleCfmTrunkIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleCfmTrunkIndex_Type.__name__ = "Integer32"
_SleCfmTrunkIndex_Object = MibTableColumn
sleCfmTrunkIndex = _SleCfmTrunkIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 4, 1, 1),
    _SleCfmTrunkIndex_Type()
)
sleCfmTrunkIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmTrunkIndex.setStatus("current")


class _SleCfmTrunkMdName_Type(OctetString):
    """Custom type sleCfmTrunkMdName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleCfmTrunkMdName_Type.__name__ = "OctetString"
_SleCfmTrunkMdName_Object = MibTableColumn
sleCfmTrunkMdName = _SleCfmTrunkMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 4, 1, 2),
    _SleCfmTrunkMdName_Type()
)
sleCfmTrunkMdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmTrunkMdName.setStatus("current")


class _SleCfmTrunkMaVid_Type(Integer32):
    """Custom type sleCfmTrunkMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmTrunkMaVid_Type.__name__ = "Integer32"
_SleCfmTrunkMaVid_Object = MibTableColumn
sleCfmTrunkMaVid = _SleCfmTrunkMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 4, 1, 3),
    _SleCfmTrunkMaVid_Type()
)
sleCfmTrunkMaVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmTrunkMaVid.setStatus("current")
_SleCfmMd_ObjectIdentity = ObjectIdentity
sleCfmMd = _SleCfmMd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2)
)
_SleCfmMdTable_Object = MibTable
sleCfmMdTable = _SleCfmMdTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1)
)
if mibBuilder.loadTexts:
    sleCfmMdTable.setStatus("current")
_SleCfmMdEntry_Object = MibTableRow
sleCfmMdEntry = _SleCfmMdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1)
)
sleCfmMdEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
)
if mibBuilder.loadTexts:
    sleCfmMdEntry.setStatus("current")


class _SleCfmMdIndex_Type(Integer32):
    """Custom type sleCfmMdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMdIndex_Type.__name__ = "Integer32"
_SleCfmMdIndex_Object = MibTableColumn
sleCfmMdIndex = _SleCfmMdIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 1),
    _SleCfmMdIndex_Type()
)
sleCfmMdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdIndex.setStatus("current")


class _SleCfmMdName_Type(OctetString):
    """Custom type sleCfmMdName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleCfmMdName_Type.__name__ = "OctetString"
_SleCfmMdName_Object = MibTableColumn
sleCfmMdName = _SleCfmMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 2),
    _SleCfmMdName_Type()
)
sleCfmMdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdName.setStatus("current")


class _SleCfmMdLevel_Type(Integer32):
    """Custom type sleCfmMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMdLevel_Type.__name__ = "Integer32"
_SleCfmMdLevel_Object = MibTableColumn
sleCfmMdLevel = _SleCfmMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 3),
    _SleCfmMdLevel_Type()
)
sleCfmMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdLevel.setStatus("current")


class _SleCfmMdMepEnable_Type(Integer32):
    """Custom type sleCfmMdMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdMepEnable_Type.__name__ = "Integer32"
_SleCfmMdMepEnable_Object = MibTableColumn
sleCfmMdMepEnable = _SleCfmMdMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 4),
    _SleCfmMdMepEnable_Type()
)
sleCfmMdMepEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdMepEnable.setStatus("current")


class _SleCfmMdCcEnable_Type(Integer32):
    """Custom type sleCfmMdCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdCcEnable_Type.__name__ = "Integer32"
_SleCfmMdCcEnable_Object = MibTableColumn
sleCfmMdCcEnable = _SleCfmMdCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 5),
    _SleCfmMdCcEnable_Type()
)
sleCfmMdCcEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdCcEnable.setStatus("current")


class _SleCfmMdCcInterval_Type(Integer32):
    """Custom type sleCfmMdCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_SleCfmMdCcInterval_Type.__name__ = "Integer32"
_SleCfmMdCcInterval_Object = MibTableColumn
sleCfmMdCcInterval = _SleCfmMdCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 6),
    _SleCfmMdCcInterval_Type()
)
sleCfmMdCcInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdCcInterval.setStatus("current")


class _SleCfmMdCcPriority_Type(Integer32):
    """Custom type sleCfmMdCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMdCcPriority_Type.__name__ = "Integer32"
_SleCfmMdCcPriority_Object = MibTableColumn
sleCfmMdCcPriority = _SleCfmMdCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 7),
    _SleCfmMdCcPriority_Type()
)
sleCfmMdCcPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdCcPriority.setStatus("current")


class _SleCfmMdCcLossThreshold_Type(Integer32):
    """Custom type sleCfmMdCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleCfmMdCcLossThreshold_Type.__name__ = "Integer32"
_SleCfmMdCcLossThreshold_Object = MibTableColumn
sleCfmMdCcLossThreshold = _SleCfmMdCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 8),
    _SleCfmMdCcLossThreshold_Type()
)
sleCfmMdCcLossThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdCcLossThreshold.setStatus("current")


class _SleCfmMdCcHoldTime_Type(Integer32):
    """Custom type sleCfmMdCcHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMdCcHoldTime_Type.__name__ = "Integer32"
_SleCfmMdCcHoldTime_Object = MibTableColumn
sleCfmMdCcHoldTime = _SleCfmMdCcHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 9),
    _SleCfmMdCcHoldTime_Type()
)
sleCfmMdCcHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdCcHoldTime.setStatus("current")


class _SleCfmMdFaultPriority_Type(Integer32):
    """Custom type sleCfmMdFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMdFaultPriority_Type.__name__ = "Integer32"
_SleCfmMdFaultPriority_Object = MibTableColumn
sleCfmMdFaultPriority = _SleCfmMdFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 10),
    _SleCfmMdFaultPriority_Type()
)
sleCfmMdFaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdFaultPriority.setStatus("current")


class _SleCfmMdFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMdFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMdFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMdFaultKeepTime_Object = MibTableColumn
sleCfmMdFaultKeepTime = _SleCfmMdFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 11),
    _SleCfmMdFaultKeepTime_Type()
)
sleCfmMdFaultKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdFaultKeepTime.setStatus("current")


class _SleCfmMdFaultClearTime_Type(Integer32):
    """Custom type sleCfmMdFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMdFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMdFaultClearTime_Object = MibTableColumn
sleCfmMdFaultClearTime = _SleCfmMdFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 12),
    _SleCfmMdFaultClearTime_Type()
)
sleCfmMdFaultClearTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdFaultClearTime.setStatus("current")


class _SleCfmMdXcheckEnable_Type(Integer32):
    """Custom type sleCfmMdXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdXcheckEnable_Type.__name__ = "Integer32"
_SleCfmMdXcheckEnable_Object = MibTableColumn
sleCfmMdXcheckEnable = _SleCfmMdXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 1, 1, 13),
    _SleCfmMdXcheckEnable_Type()
)
sleCfmMdXcheckEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdXcheckEnable.setStatus("current")
_SleCfmMdControl_ObjectIdentity = ObjectIdentity
sleCfmMdControl = _SleCfmMdControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2)
)


class _SleCfmMdControlRequest_Type(Integer32):
    """Custom type sleCfmMdControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMd", 1),
          ("deleteCfmMd", 2),
          ("setCfmMdMepEnable", 3),
          ("setCfmMdCcEnable", 4),
          ("setCfmMdCcProfile", 5),
          ("setCfmMdFaultProfile", 6),
          ("setCfmMdXcheckEnable", 7),
          ("destroyCfmMdError", 8),
          ("destroyCfmMdRmep", 9))
    )


_SleCfmMdControlRequest_Type.__name__ = "Integer32"
_SleCfmMdControlRequest_Object = MibScalar
sleCfmMdControlRequest = _SleCfmMdControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 1),
    _SleCfmMdControlRequest_Type()
)
sleCfmMdControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlRequest.setStatus("current")
_SleCfmMdControlStatus_Type = SleControlStatusType
_SleCfmMdControlStatus_Object = MibScalar
sleCfmMdControlStatus = _SleCfmMdControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 2),
    _SleCfmMdControlStatus_Type()
)
sleCfmMdControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdControlStatus.setStatus("current")
_SleCfmMdControlTimer_Type = Gauge32
_SleCfmMdControlTimer_Object = MibScalar
sleCfmMdControlTimer = _SleCfmMdControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 3),
    _SleCfmMdControlTimer_Type()
)
sleCfmMdControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlTimer.setStatus("current")
_SleCfmMdControlTimeStamp_Type = TimeTicks
_SleCfmMdControlTimeStamp_Object = MibScalar
sleCfmMdControlTimeStamp = _SleCfmMdControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 4),
    _SleCfmMdControlTimeStamp_Type()
)
sleCfmMdControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdControlTimeStamp.setStatus("current")
_SleCfmMdControlReqResult_Type = SleControlRequestResultType
_SleCfmMdControlReqResult_Object = MibScalar
sleCfmMdControlReqResult = _SleCfmMdControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 5),
    _SleCfmMdControlReqResult_Type()
)
sleCfmMdControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMdControlReqResult.setStatus("current")


class _SleCfmMdControlIndex_Type(Integer32):
    """Custom type sleCfmMdControlIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMdControlIndex_Type.__name__ = "Integer32"
_SleCfmMdControlIndex_Object = MibScalar
sleCfmMdControlIndex = _SleCfmMdControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 6),
    _SleCfmMdControlIndex_Type()
)
sleCfmMdControlIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlIndex.setStatus("current")


class _SleCfmMdControlName_Type(OctetString):
    """Custom type sleCfmMdControlName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleCfmMdControlName_Type.__name__ = "OctetString"
_SleCfmMdControlName_Object = MibScalar
sleCfmMdControlName = _SleCfmMdControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 7),
    _SleCfmMdControlName_Type()
)
sleCfmMdControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlName.setStatus("current")


class _SleCfmMdControlLevel_Type(Integer32):
    """Custom type sleCfmMdControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMdControlLevel_Type.__name__ = "Integer32"
_SleCfmMdControlLevel_Object = MibScalar
sleCfmMdControlLevel = _SleCfmMdControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 8),
    _SleCfmMdControlLevel_Type()
)
sleCfmMdControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlLevel.setStatus("current")


class _SleCfmMdControlMepEnable_Type(Integer32):
    """Custom type sleCfmMdControlMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdControlMepEnable_Type.__name__ = "Integer32"
_SleCfmMdControlMepEnable_Object = MibScalar
sleCfmMdControlMepEnable = _SleCfmMdControlMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 9),
    _SleCfmMdControlMepEnable_Type()
)
sleCfmMdControlMepEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlMepEnable.setStatus("current")


class _SleCfmMdControlCcEnable_Type(Integer32):
    """Custom type sleCfmMdControlCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdControlCcEnable_Type.__name__ = "Integer32"
_SleCfmMdControlCcEnable_Object = MibScalar
sleCfmMdControlCcEnable = _SleCfmMdControlCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 10),
    _SleCfmMdControlCcEnable_Type()
)
sleCfmMdControlCcEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlCcEnable.setStatus("current")


class _SleCfmMdControlCcInterval_Type(Integer32):
    """Custom type sleCfmMdControlCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_SleCfmMdControlCcInterval_Type.__name__ = "Integer32"
_SleCfmMdControlCcInterval_Object = MibScalar
sleCfmMdControlCcInterval = _SleCfmMdControlCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 11),
    _SleCfmMdControlCcInterval_Type()
)
sleCfmMdControlCcInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlCcInterval.setStatus("current")


class _SleCfmMdControlCcPriority_Type(Integer32):
    """Custom type sleCfmMdControlCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMdControlCcPriority_Type.__name__ = "Integer32"
_SleCfmMdControlCcPriority_Object = MibScalar
sleCfmMdControlCcPriority = _SleCfmMdControlCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 12),
    _SleCfmMdControlCcPriority_Type()
)
sleCfmMdControlCcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlCcPriority.setStatus("current")


class _SleCfmMdControlCcLossThreshold_Type(Integer32):
    """Custom type sleCfmMdControlCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleCfmMdControlCcLossThreshold_Type.__name__ = "Integer32"
_SleCfmMdControlCcLossThreshold_Object = MibScalar
sleCfmMdControlCcLossThreshold = _SleCfmMdControlCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 13),
    _SleCfmMdControlCcLossThreshold_Type()
)
sleCfmMdControlCcLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlCcLossThreshold.setStatus("current")


class _SleCfmMdControlCcHoldTime_Type(Integer32):
    """Custom type sleCfmMdControlCcHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMdControlCcHoldTime_Type.__name__ = "Integer32"
_SleCfmMdControlCcHoldTime_Object = MibScalar
sleCfmMdControlCcHoldTime = _SleCfmMdControlCcHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 14),
    _SleCfmMdControlCcHoldTime_Type()
)
sleCfmMdControlCcHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlCcHoldTime.setStatus("current")


class _SleCfmMdControlFaultPriority_Type(Integer32):
    """Custom type sleCfmMdControlFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMdControlFaultPriority_Type.__name__ = "Integer32"
_SleCfmMdControlFaultPriority_Object = MibScalar
sleCfmMdControlFaultPriority = _SleCfmMdControlFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 15),
    _SleCfmMdControlFaultPriority_Type()
)
sleCfmMdControlFaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlFaultPriority.setStatus("current")


class _SleCfmMdControlFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMdControlFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMdControlFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMdControlFaultKeepTime_Object = MibScalar
sleCfmMdControlFaultKeepTime = _SleCfmMdControlFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 16),
    _SleCfmMdControlFaultKeepTime_Type()
)
sleCfmMdControlFaultKeepTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlFaultKeepTime.setStatus("current")


class _SleCfmMdControlFaultClearTime_Type(Integer32):
    """Custom type sleCfmMdControlFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMdControlFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMdControlFaultClearTime_Object = MibScalar
sleCfmMdControlFaultClearTime = _SleCfmMdControlFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 17),
    _SleCfmMdControlFaultClearTime_Type()
)
sleCfmMdControlFaultClearTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlFaultClearTime.setStatus("current")


class _SleCfmMdControlXcheckEnable_Type(Integer32):
    """Custom type sleCfmMdControlXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMdControlXcheckEnable_Type.__name__ = "Integer32"
_SleCfmMdControlXcheckEnable_Object = MibScalar
sleCfmMdControlXcheckEnable = _SleCfmMdControlXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 2, 18),
    _SleCfmMdControlXcheckEnable_Type()
)
sleCfmMdControlXcheckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMdControlXcheckEnable.setStatus("current")
_SleCfmMdNotification_ObjectIdentity = ObjectIdentity
sleCfmMdNotification = _SleCfmMdNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3)
)
_SleCfmMa_ObjectIdentity = ObjectIdentity
sleCfmMa = _SleCfmMa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3)
)
_SleCfmMaTable_Object = MibTable
sleCfmMaTable = _SleCfmMaTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1)
)
if mibBuilder.loadTexts:
    sleCfmMaTable.setStatus("current")
_SleCfmMaEntry_Object = MibTableRow
sleCfmMaEntry = _SleCfmMaEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1)
)
sleCfmMaEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
)
if mibBuilder.loadTexts:
    sleCfmMaEntry.setStatus("current")


class _SleCfmMaIndex_Type(Integer32):
    """Custom type sleCfmMaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMaIndex_Type.__name__ = "Integer32"
_SleCfmMaIndex_Object = MibTableColumn
sleCfmMaIndex = _SleCfmMaIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 1),
    _SleCfmMaIndex_Type()
)
sleCfmMaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaIndex.setStatus("current")


class _SleCfmMaName_Type(OctetString):
    """Custom type sleCfmMaName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleCfmMaName_Type.__name__ = "OctetString"
_SleCfmMaName_Object = MibTableColumn
sleCfmMaName = _SleCfmMaName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 2),
    _SleCfmMaName_Type()
)
sleCfmMaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaName.setStatus("current")


class _SleCfmMaVid_Type(Integer32):
    """Custom type sleCfmMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmMaVid_Type.__name__ = "Integer32"
_SleCfmMaVid_Object = MibTableColumn
sleCfmMaVid = _SleCfmMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 3),
    _SleCfmMaVid_Type()
)
sleCfmMaVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaVid.setStatus("current")


class _SleCfmMaMepEnable_Type(Integer32):
    """Custom type sleCfmMaMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaMepEnable_Type.__name__ = "Integer32"
_SleCfmMaMepEnable_Object = MibTableColumn
sleCfmMaMepEnable = _SleCfmMaMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 4),
    _SleCfmMaMepEnable_Type()
)
sleCfmMaMepEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaMepEnable.setStatus("current")


class _SleCfmMaCcEnable_Type(Integer32):
    """Custom type sleCfmMaCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaCcEnable_Type.__name__ = "Integer32"
_SleCfmMaCcEnable_Object = MibTableColumn
sleCfmMaCcEnable = _SleCfmMaCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 5),
    _SleCfmMaCcEnable_Type()
)
sleCfmMaCcEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcEnable.setStatus("current")


class _SleCfmMaCcInterval_Type(Integer32):
    """Custom type sleCfmMaCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_SleCfmMaCcInterval_Type.__name__ = "Integer32"
_SleCfmMaCcInterval_Object = MibTableColumn
sleCfmMaCcInterval = _SleCfmMaCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 6),
    _SleCfmMaCcInterval_Type()
)
sleCfmMaCcInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcInterval.setStatus("current")


class _SleCfmMaCcPriority_Type(Integer32):
    """Custom type sleCfmMaCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMaCcPriority_Type.__name__ = "Integer32"
_SleCfmMaCcPriority_Object = MibTableColumn
sleCfmMaCcPriority = _SleCfmMaCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 7),
    _SleCfmMaCcPriority_Type()
)
sleCfmMaCcPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcPriority.setStatus("current")


class _SleCfmMaCcLossThreshold_Type(Integer32):
    """Custom type sleCfmMaCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleCfmMaCcLossThreshold_Type.__name__ = "Integer32"
_SleCfmMaCcLossThreshold_Object = MibTableColumn
sleCfmMaCcLossThreshold = _SleCfmMaCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 8),
    _SleCfmMaCcLossThreshold_Type()
)
sleCfmMaCcLossThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcLossThreshold.setStatus("current")


class _SleCfmMaCcFaultPriority_Type(Integer32):
    """Custom type sleCfmMaCcFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMaCcFaultPriority_Type.__name__ = "Integer32"
_SleCfmMaCcFaultPriority_Object = MibTableColumn
sleCfmMaCcFaultPriority = _SleCfmMaCcFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 9),
    _SleCfmMaCcFaultPriority_Type()
)
sleCfmMaCcFaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcFaultPriority.setStatus("current")


class _SleCfmMaCcFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMaCcFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMaCcFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMaCcFaultKeepTime_Object = MibTableColumn
sleCfmMaCcFaultKeepTime = _SleCfmMaCcFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 10),
    _SleCfmMaCcFaultKeepTime_Type()
)
sleCfmMaCcFaultKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcFaultKeepTime.setStatus("current")


class _SleCfmMaCcFaultClearTime_Type(Integer32):
    """Custom type sleCfmMaCcFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMaCcFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMaCcFaultClearTime_Object = MibTableColumn
sleCfmMaCcFaultClearTime = _SleCfmMaCcFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 11),
    _SleCfmMaCcFaultClearTime_Type()
)
sleCfmMaCcFaultClearTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaCcFaultClearTime.setStatus("current")


class _SleCfmMaXcheckEnable_Type(Integer32):
    """Custom type sleCfmMaXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaXcheckEnable_Type.__name__ = "Integer32"
_SleCfmMaXcheckEnable_Object = MibTableColumn
sleCfmMaXcheckEnable = _SleCfmMaXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 1, 1, 12),
    _SleCfmMaXcheckEnable_Type()
)
sleCfmMaXcheckEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaXcheckEnable.setStatus("current")
_SleCfmMaControl_ObjectIdentity = ObjectIdentity
sleCfmMaControl = _SleCfmMaControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2)
)


class _SleCfmMaControlRequest_Type(Integer32):
    """Custom type sleCfmMaControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMa", 1),
          ("deleteCfmMa", 2),
          ("setCfmMaMepEnable", 3),
          ("setCfmMaCcEnable", 4),
          ("setCfmMaCcProfile", 5),
          ("setCfmMaFaultProfile", 6),
          ("setCfmMaXcheckEnable", 7))
    )


_SleCfmMaControlRequest_Type.__name__ = "Integer32"
_SleCfmMaControlRequest_Object = MibScalar
sleCfmMaControlRequest = _SleCfmMaControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 1),
    _SleCfmMaControlRequest_Type()
)
sleCfmMaControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlRequest.setStatus("current")
_SleCfmMaControlStatus_Type = SleControlStatusType
_SleCfmMaControlStatus_Object = MibScalar
sleCfmMaControlStatus = _SleCfmMaControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 2),
    _SleCfmMaControlStatus_Type()
)
sleCfmMaControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaControlStatus.setStatus("current")
_SleCfmMaControlTimer_Type = Gauge32
_SleCfmMaControlTimer_Object = MibScalar
sleCfmMaControlTimer = _SleCfmMaControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 3),
    _SleCfmMaControlTimer_Type()
)
sleCfmMaControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlTimer.setStatus("current")
_SleCfmMaControlTimeStamp_Type = TimeTicks
_SleCfmMaControlTimeStamp_Object = MibScalar
sleCfmMaControlTimeStamp = _SleCfmMaControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 4),
    _SleCfmMaControlTimeStamp_Type()
)
sleCfmMaControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaControlTimeStamp.setStatus("current")
_SleCfmMaControlReqResult_Type = SleControlRequestResultType
_SleCfmMaControlReqResult_Object = MibScalar
sleCfmMaControlReqResult = _SleCfmMaControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 5),
    _SleCfmMaControlReqResult_Type()
)
sleCfmMaControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMaControlReqResult.setStatus("current")


class _SleCfmMaControlIndex_Type(Integer32):
    """Custom type sleCfmMaControlIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMaControlIndex_Type.__name__ = "Integer32"
_SleCfmMaControlIndex_Object = MibScalar
sleCfmMaControlIndex = _SleCfmMaControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 6),
    _SleCfmMaControlIndex_Type()
)
sleCfmMaControlIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlIndex.setStatus("current")


class _SleCfmMaControlName_Type(OctetString):
    """Custom type sleCfmMaControlName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SleCfmMaControlName_Type.__name__ = "OctetString"
_SleCfmMaControlName_Object = MibScalar
sleCfmMaControlName = _SleCfmMaControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 7),
    _SleCfmMaControlName_Type()
)
sleCfmMaControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlName.setStatus("current")


class _SleCfmMaControlVid_Type(Integer32):
    """Custom type sleCfmMaControlVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmMaControlVid_Type.__name__ = "Integer32"
_SleCfmMaControlVid_Object = MibScalar
sleCfmMaControlVid = _SleCfmMaControlVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 8),
    _SleCfmMaControlVid_Type()
)
sleCfmMaControlVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlVid.setStatus("current")


class _SleCfmMaControlMdIndex_Type(Integer32):
    """Custom type sleCfmMaControlMdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMaControlMdIndex_Type.__name__ = "Integer32"
_SleCfmMaControlMdIndex_Object = MibScalar
sleCfmMaControlMdIndex = _SleCfmMaControlMdIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 9),
    _SleCfmMaControlMdIndex_Type()
)
sleCfmMaControlMdIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlMdIndex.setStatus("current")


class _SleCfmMaControlMepEnable_Type(Integer32):
    """Custom type sleCfmMaControlMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaControlMepEnable_Type.__name__ = "Integer32"
_SleCfmMaControlMepEnable_Object = MibScalar
sleCfmMaControlMepEnable = _SleCfmMaControlMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 10),
    _SleCfmMaControlMepEnable_Type()
)
sleCfmMaControlMepEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlMepEnable.setStatus("current")


class _SleCfmMaControlCcEnable_Type(Integer32):
    """Custom type sleCfmMaControlCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaControlCcEnable_Type.__name__ = "Integer32"
_SleCfmMaControlCcEnable_Object = MibScalar
sleCfmMaControlCcEnable = _SleCfmMaControlCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 11),
    _SleCfmMaControlCcEnable_Type()
)
sleCfmMaControlCcEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlCcEnable.setStatus("current")


class _SleCfmMaControlCcInterval_Type(Integer32):
    """Custom type sleCfmMaControlCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_SleCfmMaControlCcInterval_Type.__name__ = "Integer32"
_SleCfmMaControlCcInterval_Object = MibScalar
sleCfmMaControlCcInterval = _SleCfmMaControlCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 12),
    _SleCfmMaControlCcInterval_Type()
)
sleCfmMaControlCcInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlCcInterval.setStatus("current")


class _SleCfmMaControlCcPriority_Type(Integer32):
    """Custom type sleCfmMaControlCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMaControlCcPriority_Type.__name__ = "Integer32"
_SleCfmMaControlCcPriority_Object = MibScalar
sleCfmMaControlCcPriority = _SleCfmMaControlCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 13),
    _SleCfmMaControlCcPriority_Type()
)
sleCfmMaControlCcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlCcPriority.setStatus("current")


class _SleCfmMaControlCcLossThreshold_Type(Integer32):
    """Custom type sleCfmMaControlCcLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 255),
    )


_SleCfmMaControlCcLossThreshold_Type.__name__ = "Integer32"
_SleCfmMaControlCcLossThreshold_Object = MibScalar
sleCfmMaControlCcLossThreshold = _SleCfmMaControlCcLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 14),
    _SleCfmMaControlCcLossThreshold_Type()
)
sleCfmMaControlCcLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlCcLossThreshold.setStatus("current")


class _SleCfmMaControlFaultPriority_Type(Integer32):
    """Custom type sleCfmMaControlFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMaControlFaultPriority_Type.__name__ = "Integer32"
_SleCfmMaControlFaultPriority_Object = MibScalar
sleCfmMaControlFaultPriority = _SleCfmMaControlFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 15),
    _SleCfmMaControlFaultPriority_Type()
)
sleCfmMaControlFaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlFaultPriority.setStatus("current")


class _SleCfmMaControlFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMaControlFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMaControlFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMaControlFaultKeepTime_Object = MibScalar
sleCfmMaControlFaultKeepTime = _SleCfmMaControlFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 16),
    _SleCfmMaControlFaultKeepTime_Type()
)
sleCfmMaControlFaultKeepTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlFaultKeepTime.setStatus("current")


class _SleCfmMaControlFaultClearTime_Type(Integer32):
    """Custom type sleCfmMaControlFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMaControlFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMaControlFaultClearTime_Object = MibScalar
sleCfmMaControlFaultClearTime = _SleCfmMaControlFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 17),
    _SleCfmMaControlFaultClearTime_Type()
)
sleCfmMaControlFaultClearTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlFaultClearTime.setStatus("current")


class _SleCfmMaControlXcheckEnable_Type(Integer32):
    """Custom type sleCfmMaControlXcheckEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMaControlXcheckEnable_Type.__name__ = "Integer32"
_SleCfmMaControlXcheckEnable_Object = MibScalar
sleCfmMaControlXcheckEnable = _SleCfmMaControlXcheckEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 2, 18),
    _SleCfmMaControlXcheckEnable_Type()
)
sleCfmMaControlXcheckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMaControlXcheckEnable.setStatus("current")
_SleCfmMaNotification_ObjectIdentity = ObjectIdentity
sleCfmMaNotification = _SleCfmMaNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3)
)
_SleCfmMep_ObjectIdentity = ObjectIdentity
sleCfmMep = _SleCfmMep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4)
)
_SleCfmMepTable_Object = MibTable
sleCfmMepTable = _SleCfmMepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1)
)
if mibBuilder.loadTexts:
    sleCfmMepTable.setStatus("current")
_SleCfmMepEntry_Object = MibTableRow
sleCfmMepEntry = _SleCfmMepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1)
)
sleCfmMepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMepIfIndex"),
)
if mibBuilder.loadTexts:
    sleCfmMepEntry.setStatus("current")


class _SleCfmMepIdentifier_Type(Integer32):
    """Custom type sleCfmMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmMepIdentifier_Type.__name__ = "Integer32"
_SleCfmMepIdentifier_Object = MibTableColumn
sleCfmMepIdentifier = _SleCfmMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 1),
    _SleCfmMepIdentifier_Type()
)
sleCfmMepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepIdentifier.setStatus("current")


class _SleCfmMepIfIndex_Type(Integer32):
    """Custom type sleCfmMepIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmMepIfIndex_Type.__name__ = "Integer32"
_SleCfmMepIfIndex_Object = MibTableColumn
sleCfmMepIfIndex = _SleCfmMepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 2),
    _SleCfmMepIfIndex_Type()
)
sleCfmMepIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepIfIndex.setStatus("current")


class _SleCfmMepDirection_Type(Integer32):
    """Custom type sleCfmMepDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_SleCfmMepDirection_Type.__name__ = "Integer32"
_SleCfmMepDirection_Object = MibTableColumn
sleCfmMepDirection = _SleCfmMepDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 3),
    _SleCfmMepDirection_Type()
)
sleCfmMepDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepDirection.setStatus("current")


class _SleCfmMepEnable_Type(Integer32):
    """Custom type sleCfmMepEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMepEnable_Type.__name__ = "Integer32"
_SleCfmMepEnable_Object = MibTableColumn
sleCfmMepEnable = _SleCfmMepEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 4),
    _SleCfmMepEnable_Type()
)
sleCfmMepEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepEnable.setStatus("current")


class _SleCfmMepFngState_Type(Integer32):
    """Custom type sleCfmMepFngState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("reset", 1),
          ("defect", 2),
          ("reportDefect", 3),
          ("defectReported", 4),
          ("defectCearing", 5),
          ("defectCleared", 6))
    )


_SleCfmMepFngState_Type.__name__ = "Integer32"
_SleCfmMepFngState_Object = MibTableColumn
sleCfmMepFngState = _SleCfmMepFngState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 5),
    _SleCfmMepFngState_Type()
)
sleCfmMepFngState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepFngState.setStatus("current")


class _SleCfmMepCcEnable_Type(Integer32):
    """Custom type sleCfmMepCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMepCcEnable_Type.__name__ = "Integer32"
_SleCfmMepCcEnable_Object = MibTableColumn
sleCfmMepCcEnable = _SleCfmMepCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 6),
    _SleCfmMepCcEnable_Type()
)
sleCfmMepCcEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepCcEnable.setStatus("current")


class _SleCfmMepMacAddress_Type(OctetString):
    """Custom type sleCfmMepMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmMepMacAddress_Type.__name__ = "OctetString"
_SleCfmMepMacAddress_Object = MibTableColumn
sleCfmMepMacAddress = _SleCfmMepMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 7),
    _SleCfmMepMacAddress_Type()
)
sleCfmMepMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepMacAddress.setStatus("current")


class _SleCfmMepCcPriority_Type(Integer32):
    """Custom type sleCfmMepCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMepCcPriority_Type.__name__ = "Integer32"
_SleCfmMepCcPriority_Object = MibTableColumn
sleCfmMepCcPriority = _SleCfmMepCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 8),
    _SleCfmMepCcPriority_Type()
)
sleCfmMepCcPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepCcPriority.setStatus("current")


class _SleCfmMepFaultPriority_Type(Integer32):
    """Custom type sleCfmMepFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMepFaultPriority_Type.__name__ = "Integer32"
_SleCfmMepFaultPriority_Object = MibTableColumn
sleCfmMepFaultPriority = _SleCfmMepFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 9),
    _SleCfmMepFaultPriority_Type()
)
sleCfmMepFaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepFaultPriority.setStatus("current")


class _SleCfmMepFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMepFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMepFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMepFaultKeepTime_Object = MibTableColumn
sleCfmMepFaultKeepTime = _SleCfmMepFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 10),
    _SleCfmMepFaultKeepTime_Type()
)
sleCfmMepFaultKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepFaultKeepTime.setStatus("current")


class _SleCfmMepFaultClearTime_Type(Integer32):
    """Custom type sleCfmMepFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMepFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMepFaultClearTime_Object = MibTableColumn
sleCfmMepFaultClearTime = _SleCfmMepFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 11),
    _SleCfmMepFaultClearTime_Type()
)
sleCfmMepFaultClearTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepFaultClearTime.setStatus("current")


class _SleCfmMepHighestPrDefect_Type(Integer32):
    """Custom type sleCfmMepHighestPrDefect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMepHighestPrDefect_Type.__name__ = "Integer32"
_SleCfmMepHighestPrDefect_Object = MibTableColumn
sleCfmMepHighestPrDefect = _SleCfmMepHighestPrDefect_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 12),
    _SleCfmMepHighestPrDefect_Type()
)
sleCfmMepHighestPrDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepHighestPrDefect.setStatus("current")


class _SleCfmMepDefects_Type(Bits):
    """Custom type sleCfmMepDefects based on Bits"""
    namedValues = NamedValues(
        *(("rdiccm", 0),
          ("macstatus", 1),
          ("remoteccm", 2),
          ("errorccm", 3),
          ("xconccm", 4))
    )

_SleCfmMepDefects_Type.__name__ = "Bits"
_SleCfmMepDefects_Object = MibTableColumn
sleCfmMepDefects = _SleCfmMepDefects_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 13),
    _SleCfmMepDefects_Type()
)
sleCfmMepDefects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepDefects.setStatus("current")
_SleCfmMepCciSentCcms_Type = Counter32
_SleCfmMepCciSentCcms_Object = MibTableColumn
sleCfmMepCciSentCcms = _SleCfmMepCciSentCcms_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 14),
    _SleCfmMepCciSentCcms_Type()
)
sleCfmMepCciSentCcms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepCciSentCcms.setStatus("current")
_SleCfmMepNextLbmTransId_Type = Integer32
_SleCfmMepNextLbmTransId_Object = MibTableColumn
sleCfmMepNextLbmTransId = _SleCfmMepNextLbmTransId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 15),
    _SleCfmMepNextLbmTransId_Type()
)
sleCfmMepNextLbmTransId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepNextLbmTransId.setStatus("current")
_SleCfmMepLbrIn_Type = Counter32
_SleCfmMepLbrIn_Object = MibTableColumn
sleCfmMepLbrIn = _SleCfmMepLbrIn_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 16),
    _SleCfmMepLbrIn_Type()
)
sleCfmMepLbrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepLbrIn.setStatus("current")
_SleCfmMepLbrInOutOfOrder_Type = Counter32
_SleCfmMepLbrInOutOfOrder_Object = MibTableColumn
sleCfmMepLbrInOutOfOrder = _SleCfmMepLbrInOutOfOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 17),
    _SleCfmMepLbrInOutOfOrder_Type()
)
sleCfmMepLbrInOutOfOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepLbrInOutOfOrder.setStatus("current")
_SleCfmMepLtmNextSeqNumber_Type = Integer32
_SleCfmMepLtmNextSeqNumber_Object = MibTableColumn
sleCfmMepLtmNextSeqNumber = _SleCfmMepLtmNextSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 18),
    _SleCfmMepLtmNextSeqNumber_Type()
)
sleCfmMepLtmNextSeqNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepLtmNextSeqNumber.setStatus("current")
_SleCfmMepUnexpLtrIn_Type = Counter32
_SleCfmMepUnexpLtrIn_Object = MibTableColumn
sleCfmMepUnexpLtrIn = _SleCfmMepUnexpLtrIn_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 1, 1, 19),
    _SleCfmMepUnexpLtrIn_Type()
)
sleCfmMepUnexpLtrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepUnexpLtrIn.setStatus("current")
_SleCfmMepControl_ObjectIdentity = ObjectIdentity
sleCfmMepControl = _SleCfmMepControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2)
)


class _SleCfmMepControlRequest_Type(Integer32):
    """Custom type sleCfmMepControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMep", 1),
          ("deleteCfmMep", 2),
          ("setCfmMepEnable", 3),
          ("setCfmMepCcEnable", 4),
          ("setCfmMepCcProfile", 5),
          ("setCfmMepFaultProfile", 6),
          ("transmitCfmLbm", 7),
          ("transmitCfmLtm", 8))
    )


_SleCfmMepControlRequest_Type.__name__ = "Integer32"
_SleCfmMepControlRequest_Object = MibScalar
sleCfmMepControlRequest = _SleCfmMepControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 1),
    _SleCfmMepControlRequest_Type()
)
sleCfmMepControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlRequest.setStatus("current")
_SleCfmMepControlStatus_Type = SleControlStatusType
_SleCfmMepControlStatus_Object = MibScalar
sleCfmMepControlStatus = _SleCfmMepControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 2),
    _SleCfmMepControlStatus_Type()
)
sleCfmMepControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepControlStatus.setStatus("current")
_SleCfmMepControlTimer_Type = Gauge32
_SleCfmMepControlTimer_Object = MibScalar
sleCfmMepControlTimer = _SleCfmMepControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 3),
    _SleCfmMepControlTimer_Type()
)
sleCfmMepControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTimer.setStatus("current")
_SleCfmMepControlTimeStamp_Type = TimeTicks
_SleCfmMepControlTimeStamp_Object = MibScalar
sleCfmMepControlTimeStamp = _SleCfmMepControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 4),
    _SleCfmMepControlTimeStamp_Type()
)
sleCfmMepControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepControlTimeStamp.setStatus("current")
_SleCfmMepControlReqResult_Type = SleControlRequestResultType
_SleCfmMepControlReqResult_Object = MibScalar
sleCfmMepControlReqResult = _SleCfmMepControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 5),
    _SleCfmMepControlReqResult_Type()
)
sleCfmMepControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMepControlReqResult.setStatus("current")


class _SleCfmMepControlIdentifier_Type(Integer32):
    """Custom type sleCfmMepControlIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmMepControlIdentifier_Type.__name__ = "Integer32"
_SleCfmMepControlIdentifier_Object = MibScalar
sleCfmMepControlIdentifier = _SleCfmMepControlIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 6),
    _SleCfmMepControlIdentifier_Type()
)
sleCfmMepControlIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlIdentifier.setStatus("current")


class _SleCfmMepControlMdIndex_Type(Integer32):
    """Custom type sleCfmMepControlMdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMepControlMdIndex_Type.__name__ = "Integer32"
_SleCfmMepControlMdIndex_Object = MibScalar
sleCfmMepControlMdIndex = _SleCfmMepControlMdIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 7),
    _SleCfmMepControlMdIndex_Type()
)
sleCfmMepControlMdIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlMdIndex.setStatus("current")


class _SleCfmMepControlMaIndex_Type(Integer32):
    """Custom type sleCfmMepControlMaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMepControlMaIndex_Type.__name__ = "Integer32"
_SleCfmMepControlMaIndex_Object = MibScalar
sleCfmMepControlMaIndex = _SleCfmMepControlMaIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 8),
    _SleCfmMepControlMaIndex_Type()
)
sleCfmMepControlMaIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlMaIndex.setStatus("current")
_SleCfmMepControlIfIndex_Type = Integer32
_SleCfmMepControlIfIndex_Object = MibScalar
sleCfmMepControlIfIndex = _SleCfmMepControlIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 9),
    _SleCfmMepControlIfIndex_Type()
)
sleCfmMepControlIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlIfIndex.setStatus("current")


class _SleCfmMepControlDirection_Type(Integer32):
    """Custom type sleCfmMepControlDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_SleCfmMepControlDirection_Type.__name__ = "Integer32"
_SleCfmMepControlDirection_Object = MibScalar
sleCfmMepControlDirection = _SleCfmMepControlDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 10),
    _SleCfmMepControlDirection_Type()
)
sleCfmMepControlDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlDirection.setStatus("current")


class _SleCfmMepControlEnable_Type(Integer32):
    """Custom type sleCfmMepControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMepControlEnable_Type.__name__ = "Integer32"
_SleCfmMepControlEnable_Object = MibScalar
sleCfmMepControlEnable = _SleCfmMepControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 11),
    _SleCfmMepControlEnable_Type()
)
sleCfmMepControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlEnable.setStatus("current")


class _SleCfmMepControlCcEnable_Type(Integer32):
    """Custom type sleCfmMepControlCcEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleCfmMepControlCcEnable_Type.__name__ = "Integer32"
_SleCfmMepControlCcEnable_Object = MibScalar
sleCfmMepControlCcEnable = _SleCfmMepControlCcEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 12),
    _SleCfmMepControlCcEnable_Type()
)
sleCfmMepControlCcEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlCcEnable.setStatus("current")


class _SleCfmMepControlCcPriority_Type(Integer32):
    """Custom type sleCfmMepControlCcPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMepControlCcPriority_Type.__name__ = "Integer32"
_SleCfmMepControlCcPriority_Object = MibScalar
sleCfmMepControlCcPriority = _SleCfmMepControlCcPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 13),
    _SleCfmMepControlCcPriority_Type()
)
sleCfmMepControlCcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlCcPriority.setStatus("current")


class _SleCfmMepControlFaultPriority_Type(Integer32):
    """Custom type sleCfmMepControlFaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rdiccm", 1),
          ("macstatus", 2),
          ("remoteccm", 3),
          ("errorccm", 4),
          ("xconccm", 5))
    )


_SleCfmMepControlFaultPriority_Type.__name__ = "Integer32"
_SleCfmMepControlFaultPriority_Object = MibScalar
sleCfmMepControlFaultPriority = _SleCfmMepControlFaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 14),
    _SleCfmMepControlFaultPriority_Type()
)
sleCfmMepControlFaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlFaultPriority.setStatus("current")


class _SleCfmMepControlFaultKeepTime_Type(Integer32):
    """Custom type sleCfmMepControlFaultKeepTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMepControlFaultKeepTime_Type.__name__ = "Integer32"
_SleCfmMepControlFaultKeepTime_Object = MibScalar
sleCfmMepControlFaultKeepTime = _SleCfmMepControlFaultKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 15),
    _SleCfmMepControlFaultKeepTime_Type()
)
sleCfmMepControlFaultKeepTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlFaultKeepTime.setStatus("current")


class _SleCfmMepControlFaultClearTime_Type(Integer32):
    """Custom type sleCfmMepControlFaultClearTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_SleCfmMepControlFaultClearTime_Type.__name__ = "Integer32"
_SleCfmMepControlFaultClearTime_Object = MibScalar
sleCfmMepControlFaultClearTime = _SleCfmMepControlFaultClearTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 16),
    _SleCfmMepControlFaultClearTime_Type()
)
sleCfmMepControlFaultClearTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlFaultClearTime.setStatus("current")


class _SleCfmMepControlTransmitLbmDestMacAddress_Type(OctetString):
    """Custom type sleCfmMepControlTransmitLbmDestMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmMepControlTransmitLbmDestMacAddress_Type.__name__ = "OctetString"
_SleCfmMepControlTransmitLbmDestMacAddress_Object = MibScalar
sleCfmMepControlTransmitLbmDestMacAddress = _SleCfmMepControlTransmitLbmDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 17),
    _SleCfmMepControlTransmitLbmDestMacAddress_Type()
)
sleCfmMepControlTransmitLbmDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmDestMacAddress.setStatus("current")


class _SleCfmMepControlTransmitLbmDestMepId_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmMepControlTransmitLbmDestMepId_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmDestMepId_Object = MibScalar
sleCfmMepControlTransmitLbmDestMepId = _SleCfmMepControlTransmitLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 18),
    _SleCfmMepControlTransmitLbmDestMepId_Type()
)
sleCfmMepControlTransmitLbmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmDestMepId.setStatus("current")


class _SleCfmMepControlTransmitLbmDestIsMepId_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmDestIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleCfmMepControlTransmitLbmDestIsMepId_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmDestIsMepId_Object = MibScalar
sleCfmMepControlTransmitLbmDestIsMepId = _SleCfmMepControlTransmitLbmDestIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 19),
    _SleCfmMepControlTransmitLbmDestIsMepId_Type()
)
sleCfmMepControlTransmitLbmDestIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmDestIsMepId.setStatus("current")


class _SleCfmMepControlTransmitLbmCount_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6000),
    )


_SleCfmMepControlTransmitLbmCount_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmCount_Object = MibScalar
sleCfmMepControlTransmitLbmCount = _SleCfmMepControlTransmitLbmCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 20),
    _SleCfmMepControlTransmitLbmCount_Type()
)
sleCfmMepControlTransmitLbmCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmCount.setStatus("current")


class _SleCfmMepControlTransmitLbmInterval_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4),
    )


_SleCfmMepControlTransmitLbmInterval_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmInterval_Object = MibScalar
sleCfmMepControlTransmitLbmInterval = _SleCfmMepControlTransmitLbmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 21),
    _SleCfmMepControlTransmitLbmInterval_Type()
)
sleCfmMepControlTransmitLbmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmInterval.setStatus("current")


class _SleCfmMepControlTransmitLbmTimeout_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SleCfmMepControlTransmitLbmTimeout_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmTimeout_Object = MibScalar
sleCfmMepControlTransmitLbmTimeout = _SleCfmMepControlTransmitLbmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 22),
    _SleCfmMepControlTransmitLbmTimeout_Type()
)
sleCfmMepControlTransmitLbmTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmTimeout.setStatus("current")


class _SleCfmMepControlTransmitLbmPriority_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLbmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMepControlTransmitLbmPriority_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLbmPriority_Object = MibScalar
sleCfmMepControlTransmitLbmPriority = _SleCfmMepControlTransmitLbmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 23),
    _SleCfmMepControlTransmitLbmPriority_Type()
)
sleCfmMepControlTransmitLbmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLbmPriority.setStatus("current")


class _SleCfmMepControlTransmitLtmTargetMacAddress_Type(OctetString):
    """Custom type sleCfmMepControlTransmitLtmTargetMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmMepControlTransmitLtmTargetMacAddress_Type.__name__ = "OctetString"
_SleCfmMepControlTransmitLtmTargetMacAddress_Object = MibScalar
sleCfmMepControlTransmitLtmTargetMacAddress = _SleCfmMepControlTransmitLtmTargetMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 24),
    _SleCfmMepControlTransmitLtmTargetMacAddress_Type()
)
sleCfmMepControlTransmitLtmTargetMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLtmTargetMacAddress.setStatus("current")


class _SleCfmMepControlTransmitLtmTargetMepId_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLtmTargetMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmMepControlTransmitLtmTargetMepId_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLtmTargetMepId_Object = MibScalar
sleCfmMepControlTransmitLtmTargetMepId = _SleCfmMepControlTransmitLtmTargetMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 25),
    _SleCfmMepControlTransmitLtmTargetMepId_Type()
)
sleCfmMepControlTransmitLtmTargetMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLtmTargetMepId.setStatus("current")


class _SleCfmMepControlTransmitLtmTargetIsMepId_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLtmTargetIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleCfmMepControlTransmitLtmTargetIsMepId_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLtmTargetIsMepId_Object = MibScalar
sleCfmMepControlTransmitLtmTargetIsMepId = _SleCfmMepControlTransmitLtmTargetIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 26),
    _SleCfmMepControlTransmitLtmTargetIsMepId_Type()
)
sleCfmMepControlTransmitLtmTargetIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLtmTargetIsMepId.setStatus("current")


class _SleCfmMepControlTransmitLtmFlags_Type(Bits):
    """Custom type sleCfmMepControlTransmitLtmFlags based on Bits"""
    namedValues = NamedValues(
        ("useFDBonly", 0)
    )

_SleCfmMepControlTransmitLtmFlags_Type.__name__ = "Bits"
_SleCfmMepControlTransmitLtmFlags_Object = MibScalar
sleCfmMepControlTransmitLtmFlags = _SleCfmMepControlTransmitLtmFlags_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 27),
    _SleCfmMepControlTransmitLtmFlags_Type()
)
sleCfmMepControlTransmitLtmFlags.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLtmFlags.setStatus("current")


class _SleCfmMepControlTransmitLtmTtl_Type(Integer32):
    """Custom type sleCfmMepControlTransmitLtmTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SleCfmMepControlTransmitLtmTtl_Type.__name__ = "Integer32"
_SleCfmMepControlTransmitLtmTtl_Object = MibScalar
sleCfmMepControlTransmitLtmTtl = _SleCfmMepControlTransmitLtmTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 2, 28),
    _SleCfmMepControlTransmitLtmTtl_Type()
)
sleCfmMepControlTransmitLtmTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMepControlTransmitLtmTtl.setStatus("current")
_SleCfmMepNotification_ObjectIdentity = ObjectIdentity
sleCfmMepNotification = _SleCfmMepNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3)
)
_SleCfmMip_ObjectIdentity = ObjectIdentity
sleCfmMip = _SleCfmMip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5)
)
_SleCfmMipTable_Object = MibTable
sleCfmMipTable = _SleCfmMipTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 1)
)
if mibBuilder.loadTexts:
    sleCfmMipTable.setStatus("current")
_SleCfmMipEntry_Object = MibTableRow
sleCfmMipEntry = _SleCfmMipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 1, 1)
)
sleCfmMipEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMipPort"),
)
if mibBuilder.loadTexts:
    sleCfmMipEntry.setStatus("current")


class _SleCfmMipPort_Type(Integer32):
    """Custom type sleCfmMipPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMipPort_Type.__name__ = "Integer32"
_SleCfmMipPort_Object = MibTableColumn
sleCfmMipPort = _SleCfmMipPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 1, 1, 1),
    _SleCfmMipPort_Type()
)
sleCfmMipPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipPort.setStatus("current")


class _SleCfmMipLevel_Type(Integer32):
    """Custom type sleCfmMipLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMipLevel_Type.__name__ = "Integer32"
_SleCfmMipLevel_Object = MibTableColumn
sleCfmMipLevel = _SleCfmMipLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 1, 1, 2),
    _SleCfmMipLevel_Type()
)
sleCfmMipLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipLevel.setStatus("current")


class _SleCfmMipType_Type(Integer32):
    """Custom type sleCfmMipType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_SleCfmMipType_Type.__name__ = "Integer32"
_SleCfmMipType_Object = MibTableColumn
sleCfmMipType = _SleCfmMipType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 1, 1, 3),
    _SleCfmMipType_Type()
)
sleCfmMipType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipType.setStatus("current")
_SleCfmMipControl_ObjectIdentity = ObjectIdentity
sleCfmMipControl = _SleCfmMipControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2)
)


class _SleCfmMipControlRequest_Type(Integer32):
    """Custom type sleCfmMipControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMip", 1),
          ("deleteCfmMip", 2))
    )


_SleCfmMipControlRequest_Type.__name__ = "Integer32"
_SleCfmMipControlRequest_Object = MibScalar
sleCfmMipControlRequest = _SleCfmMipControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 1),
    _SleCfmMipControlRequest_Type()
)
sleCfmMipControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMipControlRequest.setStatus("current")
_SleCfmMipControlStatus_Type = SleControlStatusType
_SleCfmMipControlStatus_Object = MibScalar
sleCfmMipControlStatus = _SleCfmMipControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 2),
    _SleCfmMipControlStatus_Type()
)
sleCfmMipControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipControlStatus.setStatus("current")
_SleCfmMipControlTimer_Type = Gauge32
_SleCfmMipControlTimer_Object = MibScalar
sleCfmMipControlTimer = _SleCfmMipControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 3),
    _SleCfmMipControlTimer_Type()
)
sleCfmMipControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMipControlTimer.setStatus("current")
_SleCfmMipControlTimeStamp_Type = TimeTicks
_SleCfmMipControlTimeStamp_Object = MibScalar
sleCfmMipControlTimeStamp = _SleCfmMipControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 4),
    _SleCfmMipControlTimeStamp_Type()
)
sleCfmMipControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipControlTimeStamp.setStatus("current")
_SleCfmMipControlReqResult_Type = SleControlRequestResultType
_SleCfmMipControlReqResult_Object = MibScalar
sleCfmMipControlReqResult = _SleCfmMipControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 5),
    _SleCfmMipControlReqResult_Type()
)
sleCfmMipControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipControlReqResult.setStatus("current")


class _SleCfmMipControlPort_Type(Integer32):
    """Custom type sleCfmMipControlPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMipControlPort_Type.__name__ = "Integer32"
_SleCfmMipControlPort_Object = MibScalar
sleCfmMipControlPort = _SleCfmMipControlPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 6),
    _SleCfmMipControlPort_Type()
)
sleCfmMipControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMipControlPort.setStatus("current")


class _SleCfmMipControlLevel_Type(Integer32):
    """Custom type sleCfmMipControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleCfmMipControlLevel_Type.__name__ = "Integer32"
_SleCfmMipControlLevel_Object = MibScalar
sleCfmMipControlLevel = _SleCfmMipControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 2, 7),
    _SleCfmMipControlLevel_Type()
)
sleCfmMipControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmMipControlLevel.setStatus("current")
_SleCfmMipNotification_ObjectIdentity = ObjectIdentity
sleCfmMipNotification = _SleCfmMipNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 3)
)
_SleCfmXcheck_ObjectIdentity = ObjectIdentity
sleCfmXcheck = _SleCfmXcheck_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6)
)
_SleCfmXcheckTable_Object = MibTable
sleCfmXcheckTable = _SleCfmXcheckTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 1)
)
if mibBuilder.loadTexts:
    sleCfmXcheckTable.setStatus("current")
_SleCfmXcheckEntry_Object = MibTableRow
sleCfmXcheckEntry = _SleCfmXcheckEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 1, 1)
)
sleCfmXcheckEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmXcheckMepIdentifier"),
)
if mibBuilder.loadTexts:
    sleCfmXcheckEntry.setStatus("current")


class _SleCfmXcheckMepIdentifier_Type(Integer32):
    """Custom type sleCfmXcheckMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmXcheckMepIdentifier_Type.__name__ = "Integer32"
_SleCfmXcheckMepIdentifier_Object = MibTableColumn
sleCfmXcheckMepIdentifier = _SleCfmXcheckMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 1, 1, 1),
    _SleCfmXcheckMepIdentifier_Type()
)
sleCfmXcheckMepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckMepIdentifier.setStatus("current")


class _SleCfmXcheckMepState_Type(Integer32):
    """Custom type sleCfmXcheckMepState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("missing", 1),
          ("up", 2))
    )


_SleCfmXcheckMepState_Type.__name__ = "Integer32"
_SleCfmXcheckMepState_Object = MibTableColumn
sleCfmXcheckMepState = _SleCfmXcheckMepState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 1, 1, 2),
    _SleCfmXcheckMepState_Type()
)
sleCfmXcheckMepState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckMepState.setStatus("current")
_SleCfmXcheckControl_ObjectIdentity = ObjectIdentity
sleCfmXcheckControl = _SleCfmXcheckControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2)
)


class _SleCfmXcheckControlRequest_Type(Integer32):
    """Custom type sleCfmXcheckControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createCfmXcheckMep", 1),
          ("deleteCfmXcheckMep", 2))
    )


_SleCfmXcheckControlRequest_Type.__name__ = "Integer32"
_SleCfmXcheckControlRequest_Object = MibScalar
sleCfmXcheckControlRequest = _SleCfmXcheckControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 1),
    _SleCfmXcheckControlRequest_Type()
)
sleCfmXcheckControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmXcheckControlRequest.setStatus("current")
_SleCfmXcheckControlStatus_Type = SleControlStatusType
_SleCfmXcheckControlStatus_Object = MibScalar
sleCfmXcheckControlStatus = _SleCfmXcheckControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 2),
    _SleCfmXcheckControlStatus_Type()
)
sleCfmXcheckControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckControlStatus.setStatus("current")
_SleCfmXcheckControlTimer_Type = Gauge32
_SleCfmXcheckControlTimer_Object = MibScalar
sleCfmXcheckControlTimer = _SleCfmXcheckControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 3),
    _SleCfmXcheckControlTimer_Type()
)
sleCfmXcheckControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmXcheckControlTimer.setStatus("current")
_SleCfmXcheckControlTimeStamp_Type = TimeTicks
_SleCfmXcheckControlTimeStamp_Object = MibScalar
sleCfmXcheckControlTimeStamp = _SleCfmXcheckControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 4),
    _SleCfmXcheckControlTimeStamp_Type()
)
sleCfmXcheckControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckControlTimeStamp.setStatus("current")
_SleCfmXcheckControlReqResult_Type = SleControlRequestResultType
_SleCfmXcheckControlReqResult_Object = MibScalar
sleCfmXcheckControlReqResult = _SleCfmXcheckControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 5),
    _SleCfmXcheckControlReqResult_Type()
)
sleCfmXcheckControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmXcheckControlReqResult.setStatus("current")


class _SleCfmXcheckControlMepIdentifier_Type(Integer32):
    """Custom type sleCfmXcheckControlMepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmXcheckControlMepIdentifier_Type.__name__ = "Integer32"
_SleCfmXcheckControlMepIdentifier_Object = MibScalar
sleCfmXcheckControlMepIdentifier = _SleCfmXcheckControlMepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 6),
    _SleCfmXcheckControlMepIdentifier_Type()
)
sleCfmXcheckControlMepIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmXcheckControlMepIdentifier.setStatus("current")


class _SleCfmXcheckControlMdIndex_Type(Integer32):
    """Custom type sleCfmXcheckControlMdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmXcheckControlMdIndex_Type.__name__ = "Integer32"
_SleCfmXcheckControlMdIndex_Object = MibScalar
sleCfmXcheckControlMdIndex = _SleCfmXcheckControlMdIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 7),
    _SleCfmXcheckControlMdIndex_Type()
)
sleCfmXcheckControlMdIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmXcheckControlMdIndex.setStatus("current")


class _SleCfmXcheckControlMaIndex_Type(Integer32):
    """Custom type sleCfmXcheckControlMaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmXcheckControlMaIndex_Type.__name__ = "Integer32"
_SleCfmXcheckControlMaIndex_Object = MibScalar
sleCfmXcheckControlMaIndex = _SleCfmXcheckControlMaIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 2, 8),
    _SleCfmXcheckControlMaIndex_Type()
)
sleCfmXcheckControlMaIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleCfmXcheckControlMaIndex.setStatus("current")
_SleCfmXcheckNotification_ObjectIdentity = ObjectIdentity
sleCfmXcheckNotification = _SleCfmXcheckNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 3)
)
_SleCfmRmep_ObjectIdentity = ObjectIdentity
sleCfmRmep = _SleCfmRmep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7)
)
_SleCfmRmepTable_Object = MibTable
sleCfmRmepTable = _SleCfmRmepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1)
)
if mibBuilder.loadTexts:
    sleCfmRmepTable.setStatus("current")
_SleCfmRmepEntry_Object = MibTableRow
sleCfmRmepEntry = _SleCfmRmepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1)
)
sleCfmRmepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmRmepIdentifier"),
)
if mibBuilder.loadTexts:
    sleCfmRmepEntry.setStatus("current")


class _SleCfmRmepIdentifier_Type(Integer32):
    """Custom type sleCfmRmepIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SleCfmRmepIdentifier_Type.__name__ = "Integer32"
_SleCfmRmepIdentifier_Object = MibTableColumn
sleCfmRmepIdentifier = _SleCfmRmepIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 1),
    _SleCfmRmepIdentifier_Type()
)
sleCfmRmepIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepIdentifier.setStatus("current")


class _SleCfmRmepState_Type(Integer32):
    """Custom type sleCfmRmepState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("start", 2),
          ("failed", 3),
          ("ok", 4))
    )


_SleCfmRmepState_Type.__name__ = "Integer32"
_SleCfmRmepState_Object = MibTableColumn
sleCfmRmepState = _SleCfmRmepState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 2),
    _SleCfmRmepState_Type()
)
sleCfmRmepState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepState.setStatus("current")


class _SleCfmRmepMacAddress_Type(OctetString):
    """Custom type sleCfmRmepMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmRmepMacAddress_Type.__name__ = "OctetString"
_SleCfmRmepMacAddress_Object = MibTableColumn
sleCfmRmepMacAddress = _SleCfmRmepMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 3),
    _SleCfmRmepMacAddress_Type()
)
sleCfmRmepMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepMacAddress.setStatus("current")
_SleCfmRmepIfIndex_Type = Integer32
_SleCfmRmepIfIndex_Object = MibTableColumn
sleCfmRmepIfIndex = _SleCfmRmepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 4),
    _SleCfmRmepIfIndex_Type()
)
sleCfmRmepIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepIfIndex.setStatus("current")


class _SleCfmRmepRdi_Type(Integer32):
    """Custom type sleCfmRmepRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleCfmRmepRdi_Type.__name__ = "Integer32"
_SleCfmRmepRdi_Object = MibTableColumn
sleCfmRmepRdi = _SleCfmRmepRdi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 5),
    _SleCfmRmepRdi_Type()
)
sleCfmRmepRdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepRdi.setStatus("current")


class _SleCfmRmepPortStatus_Type(Integer32):
    """Custom type sleCfmRmepPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("up", 2),
          ("down", 3))
    )


_SleCfmRmepPortStatus_Type.__name__ = "Integer32"
_SleCfmRmepPortStatus_Object = MibTableColumn
sleCfmRmepPortStatus = _SleCfmRmepPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 6),
    _SleCfmRmepPortStatus_Type()
)
sleCfmRmepPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepPortStatus.setStatus("current")


class _SleCfmRmepInterfaceStatus_Type(Integer32):
    """Custom type sleCfmRmepInterfaceStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("up", 2),
          ("down", 3))
    )


_SleCfmRmepInterfaceStatus_Type.__name__ = "Integer32"
_SleCfmRmepInterfaceStatus_Object = MibTableColumn
sleCfmRmepInterfaceStatus = _SleCfmRmepInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 7, 1, 1, 7),
    _SleCfmRmepInterfaceStatus_Type()
)
sleCfmRmepInterfaceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmRmepInterfaceStatus.setStatus("current")
_SleCfmLtr_ObjectIdentity = ObjectIdentity
sleCfmLtr = _SleCfmLtr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8)
)
_SleCfmLtrTable_Object = MibTable
sleCfmLtrTable = _SleCfmLtrTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1)
)
if mibBuilder.loadTexts:
    sleCfmLtrTable.setStatus("current")
_SleCfmLtrEntry_Object = MibTableRow
sleCfmLtrEntry = _SleCfmLtrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1)
)
sleCfmLtrEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMepIdentifier"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmLtrSeqNumber"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmLtrReceiveOrder"),
)
if mibBuilder.loadTexts:
    sleCfmLtrEntry.setStatus("current")


class _SleCfmLtrSeqNumber_Type(Integer32):
    """Custom type sleCfmLtrSeqNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmLtrSeqNumber_Type.__name__ = "Integer32"
_SleCfmLtrSeqNumber_Object = MibTableColumn
sleCfmLtrSeqNumber = _SleCfmLtrSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 1),
    _SleCfmLtrSeqNumber_Type()
)
sleCfmLtrSeqNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrSeqNumber.setStatus("current")


class _SleCfmLtrReceiveOrder_Type(Integer32):
    """Custom type sleCfmLtrReceiveOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmLtrReceiveOrder_Type.__name__ = "Integer32"
_SleCfmLtrReceiveOrder_Object = MibTableColumn
sleCfmLtrReceiveOrder = _SleCfmLtrReceiveOrder_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 2),
    _SleCfmLtrReceiveOrder_Type()
)
sleCfmLtrReceiveOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrReceiveOrder.setStatus("current")


class _SleCfmLtrTtl_Type(Integer32):
    """Custom type sleCfmLtrTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SleCfmLtrTtl_Type.__name__ = "Integer32"
_SleCfmLtrTtl_Object = MibTableColumn
sleCfmLtrTtl = _SleCfmLtrTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 3),
    _SleCfmLtrTtl_Type()
)
sleCfmLtrTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrTtl.setStatus("current")


class _SleCfmLtrForwarded_Type(Integer32):
    """Custom type sleCfmLtrForwarded based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleCfmLtrForwarded_Type.__name__ = "Integer32"
_SleCfmLtrForwarded_Object = MibTableColumn
sleCfmLtrForwarded = _SleCfmLtrForwarded_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 4),
    _SleCfmLtrForwarded_Type()
)
sleCfmLtrForwarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrForwarded.setStatus("current")


class _SleCfmLtrTerminalMep_Type(Integer32):
    """Custom type sleCfmLtrTerminalMep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleCfmLtrTerminalMep_Type.__name__ = "Integer32"
_SleCfmLtrTerminalMep_Object = MibTableColumn
sleCfmLtrTerminalMep = _SleCfmLtrTerminalMep_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 5),
    _SleCfmLtrTerminalMep_Type()
)
sleCfmLtrTerminalMep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrTerminalMep.setStatus("current")


class _SleCfmLtrLastEgressIdentifier_Type(OctetString):
    """Custom type sleCfmLtrLastEgressIdentifier based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8


_SleCfmLtrLastEgressIdentifier_Type.__name__ = "OctetString"
_SleCfmLtrLastEgressIdentifier_Object = MibTableColumn
sleCfmLtrLastEgressIdentifier = _SleCfmLtrLastEgressIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 6),
    _SleCfmLtrLastEgressIdentifier_Type()
)
sleCfmLtrLastEgressIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrLastEgressIdentifier.setStatus("current")


class _SleCfmLtrNextEgressIdentifier_Type(OctetString):
    """Custom type sleCfmLtrNextEgressIdentifier based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8


_SleCfmLtrNextEgressIdentifier_Type.__name__ = "OctetString"
_SleCfmLtrNextEgressIdentifier_Object = MibTableColumn
sleCfmLtrNextEgressIdentifier = _SleCfmLtrNextEgressIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 7),
    _SleCfmLtrNextEgressIdentifier_Type()
)
sleCfmLtrNextEgressIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrNextEgressIdentifier.setStatus("current")


class _SleCfmLtrRelay_Type(Integer32):
    """Custom type sleCfmLtrRelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("rlyHit", 1),
          ("rlyFDB", 2),
          ("rlyMPDB", 3))
    )


_SleCfmLtrRelay_Type.__name__ = "Integer32"
_SleCfmLtrRelay_Object = MibTableColumn
sleCfmLtrRelay = _SleCfmLtrRelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 8),
    _SleCfmLtrRelay_Type()
)
sleCfmLtrRelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrRelay.setStatus("current")


class _SleCfmLtrIngress_Type(Integer32):
    """Custom type sleCfmLtrIngress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ingNoTlv", 0),
          ("ingOK", 1),
          ("ingDown", 2),
          ("ingBlocked", 3),
          ("ingVid", 4))
    )


_SleCfmLtrIngress_Type.__name__ = "Integer32"
_SleCfmLtrIngress_Object = MibTableColumn
sleCfmLtrIngress = _SleCfmLtrIngress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 9),
    _SleCfmLtrIngress_Type()
)
sleCfmLtrIngress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrIngress.setStatus("current")


class _SleCfmLtrIngressMac_Type(OctetString):
    """Custom type sleCfmLtrIngressMac based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmLtrIngressMac_Type.__name__ = "OctetString"
_SleCfmLtrIngressMac_Object = MibTableColumn
sleCfmLtrIngressMac = _SleCfmLtrIngressMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 10),
    _SleCfmLtrIngressMac_Type()
)
sleCfmLtrIngressMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrIngressMac.setStatus("current")
_SleCfmLtrIngressPort_Type = Integer32
_SleCfmLtrIngressPort_Object = MibTableColumn
sleCfmLtrIngressPort = _SleCfmLtrIngressPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 11),
    _SleCfmLtrIngressPort_Type()
)
sleCfmLtrIngressPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrIngressPort.setStatus("current")


class _SleCfmLtrEgress_Type(Integer32):
    """Custom type sleCfmLtrEgress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("egrNoTlv", 0),
          ("egrOK", 1),
          ("egrDown", 2),
          ("egrBlocked", 3),
          ("egrVid", 4))
    )


_SleCfmLtrEgress_Type.__name__ = "Integer32"
_SleCfmLtrEgress_Object = MibTableColumn
sleCfmLtrEgress = _SleCfmLtrEgress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 12),
    _SleCfmLtrEgress_Type()
)
sleCfmLtrEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrEgress.setStatus("current")


class _SleCfmLtrEgressMac_Type(OctetString):
    """Custom type sleCfmLtrEgressMac based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmLtrEgressMac_Type.__name__ = "OctetString"
_SleCfmLtrEgressMac_Object = MibTableColumn
sleCfmLtrEgressMac = _SleCfmLtrEgressMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 13),
    _SleCfmLtrEgressMac_Type()
)
sleCfmLtrEgressMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrEgressMac.setStatus("current")
_SleCfmLtrEgressPort_Type = Integer32
_SleCfmLtrEgressPort_Object = MibTableColumn
sleCfmLtrEgressPort = _SleCfmLtrEgressPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 8, 1, 1, 14),
    _SleCfmLtrEgressPort_Type()
)
sleCfmLtrEgressPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmLtrEgressPort.setStatus("current")
_SleCfmConfigError_ObjectIdentity = ObjectIdentity
sleCfmConfigError = _SleCfmConfigError_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9)
)
_SleCfmConfigErrorTable_Object = MibTable
sleCfmConfigErrorTable = _SleCfmConfigErrorTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9, 1)
)
if mibBuilder.loadTexts:
    sleCfmConfigErrorTable.setStatus("current")
_SleCfmConfigErrorEntry_Object = MibTableRow
sleCfmConfigErrorEntry = _SleCfmConfigErrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9, 1, 1)
)
sleCfmConfigErrorEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmConfigErrorVid"),
    (0, "SLE-FAULTMGMT-MIB", "sleCfmConfigErrorIfIndex"),
)
if mibBuilder.loadTexts:
    sleCfmConfigErrorEntry.setStatus("current")


class _SleCfmConfigErrorVid_Type(Integer32):
    """Custom type sleCfmConfigErrorVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmConfigErrorVid_Type.__name__ = "Integer32"
_SleCfmConfigErrorVid_Object = MibTableColumn
sleCfmConfigErrorVid = _SleCfmConfigErrorVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9, 1, 1, 1),
    _SleCfmConfigErrorVid_Type()
)
sleCfmConfigErrorVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmConfigErrorVid.setStatus("current")


class _SleCfmConfigErrorIfIndex_Type(Integer32):
    """Custom type sleCfmConfigErrorIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmConfigErrorIfIndex_Type.__name__ = "Integer32"
_SleCfmConfigErrorIfIndex_Object = MibTableColumn
sleCfmConfigErrorIfIndex = _SleCfmConfigErrorIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9, 1, 1, 2),
    _SleCfmConfigErrorIfIndex_Type()
)
sleCfmConfigErrorIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmConfigErrorIfIndex.setStatus("current")


class _SleCfmConfigErrorType_Type(Bits):
    """Custom type sleCfmConfigErrorType based on Bits"""
    namedValues = NamedValues(
        *(("cfmleak", 0),
          ("conflictingVids", 1),
          ("excessiveLevels", 2),
          ("overlappedLevels", 3))
    )

_SleCfmConfigErrorType_Type.__name__ = "Bits"
_SleCfmConfigErrorType_Object = MibTableColumn
sleCfmConfigErrorType = _SleCfmConfigErrorType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 9, 1, 1, 3),
    _SleCfmConfigErrorType_Type()
)
sleCfmConfigErrorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmConfigErrorType.setStatus("current")
_SleCfmMipCcdb_ObjectIdentity = ObjectIdentity
sleCfmMipCcdb = _SleCfmMipCcdb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10)
)
_SleCfmMipCcdbTable_Object = MibTable
sleCfmMipCcdbTable = _SleCfmMipCcdbTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1)
)
if mibBuilder.loadTexts:
    sleCfmMipCcdbTable.setStatus("current")
_SleCfmMipCcdbEntry_Object = MibTableRow
sleCfmMipCcdbEntry = _SleCfmMipCcdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1)
)
sleCfmMipCcdbEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleCfmMipCcdbIndex"),
)
if mibBuilder.loadTexts:
    sleCfmMipCcdbEntry.setStatus("current")


class _SleCfmMipCcdbIndex_Type(Integer32):
    """Custom type sleCfmMipCcdbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMipCcdbIndex_Type.__name__ = "Integer32"
_SleCfmMipCcdbIndex_Object = MibTableColumn
sleCfmMipCcdbIndex = _SleCfmMipCcdbIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1, 1),
    _SleCfmMipCcdbIndex_Type()
)
sleCfmMipCcdbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipCcdbIndex.setStatus("current")


class _SleCfmMipCcdbVlanId_Type(Integer32):
    """Custom type sleCfmMipCcdbVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleCfmMipCcdbVlanId_Type.__name__ = "Integer32"
_SleCfmMipCcdbVlanId_Object = MibTableColumn
sleCfmMipCcdbVlanId = _SleCfmMipCcdbVlanId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1, 2),
    _SleCfmMipCcdbVlanId_Type()
)
sleCfmMipCcdbVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipCcdbVlanId.setStatus("current")


class _SleCfmMipCcdbMacAddr_Type(OctetString):
    """Custom type sleCfmMipCcdbMacAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleCfmMipCcdbMacAddr_Type.__name__ = "OctetString"
_SleCfmMipCcdbMacAddr_Object = MibTableColumn
sleCfmMipCcdbMacAddr = _SleCfmMipCcdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1, 3),
    _SleCfmMipCcdbMacAddr_Type()
)
sleCfmMipCcdbMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipCcdbMacAddr.setStatus("current")


class _SleCfmMipCcdbPort_Type(Integer32):
    """Custom type sleCfmMipCcdbPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleCfmMipCcdbPort_Type.__name__ = "Integer32"
_SleCfmMipCcdbPort_Object = MibTableColumn
sleCfmMipCcdbPort = _SleCfmMipCcdbPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1, 4),
    _SleCfmMipCcdbPort_Type()
)
sleCfmMipCcdbPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipCcdbPort.setStatus("current")


class _SleCfmMipCcdbKeepTime_Type(OctetString):
    """Custom type sleCfmMipCcdbKeepTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_SleCfmMipCcdbKeepTime_Type.__name__ = "OctetString"
_SleCfmMipCcdbKeepTime_Object = MibTableColumn
sleCfmMipCcdbKeepTime = _SleCfmMipCcdbKeepTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 10, 1, 1, 5),
    _SleCfmMipCcdbKeepTime_Type()
)
sleCfmMipCcdbKeepTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleCfmMipCcdbKeepTime.setStatus("current")
_SleEMLog_ObjectIdentity = ObjectIdentity
sleEMLog = _SleEMLog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14)
)
_SleEMLogInfo_ObjectIdentity = ObjectIdentity
sleEMLogInfo = _SleEMLogInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1)
)


class _SleEMLogDisableStatus_Type(Integer32):
    """Custom type sleEMLogDisableStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleEMLogDisableStatus_Type.__name__ = "Integer32"
_SleEMLogDisableStatus_Object = MibScalar
sleEMLogDisableStatus = _SleEMLogDisableStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 1),
    _SleEMLogDisableStatus_Type()
)
sleEMLogDisableStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogDisableStatus.setStatus("current")


class _SleEMLogAction_Type(Bits):
    """Custom type sleEMLogAction based on Bits"""
    namedValues = NamedValues(
        *(("syslog", 0),
          ("trap", 1),
          ("recover", 2))
    )

_SleEMLogAction_Type.__name__ = "Bits"
_SleEMLogAction_Object = MibScalar
sleEMLogAction = _SleEMLogAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 2),
    _SleEMLogAction_Type()
)
sleEMLogAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogAction.setStatus("current")


class _SleEMLogInterval_Type(Integer32):
    """Custom type sleEMLogInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_SleEMLogInterval_Type.__name__ = "Integer32"
_SleEMLogInterval_Object = MibScalar
sleEMLogInterval = _SleEMLogInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 3),
    _SleEMLogInterval_Type()
)
sleEMLogInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogInterval.setStatus("current")


class _SleEMLogNAKLockStatus_Type(Integer32):
    """Custom type sleEMLogNAKLockStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleEMLogNAKLockStatus_Type.__name__ = "Integer32"
_SleEMLogNAKLockStatus_Object = MibScalar
sleEMLogNAKLockStatus = _SleEMLogNAKLockStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 4),
    _SleEMLogNAKLockStatus_Type()
)
sleEMLogNAKLockStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogNAKLockStatus.setStatus("current")


class _SleEMLogNakCompensate_Type(Integer32):
    """Custom type sleEMLogNakCompensate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleEMLogNakCompensate_Type.__name__ = "Integer32"
_SleEMLogNakCompensate_Object = MibScalar
sleEMLogNakCompensate = _SleEMLogNakCompensate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 5),
    _SleEMLogNakCompensate_Type()
)
sleEMLogNakCompensate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogNakCompensate.setStatus("current")


class _SleEMLogRecoverActionMemLow_Type(Integer32):
    """Custom type sleEMLogRecoverActionMemLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("switchover", 1),
          ("none", 255))
    )


_SleEMLogRecoverActionMemLow_Type.__name__ = "Integer32"
_SleEMLogRecoverActionMemLow_Object = MibScalar
sleEMLogRecoverActionMemLow = _SleEMLogRecoverActionMemLow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 6),
    _SleEMLogRecoverActionMemLow_Type()
)
sleEMLogRecoverActionMemLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogRecoverActionMemLow.setStatus("current")


class _SleEMLogRecoverActionNak_Type(Integer32):
    """Custom type sleEMLogRecoverActionNak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("switchover", 1),
          ("none", 255))
    )


_SleEMLogRecoverActionNak_Type.__name__ = "Integer32"
_SleEMLogRecoverActionNak_Object = MibScalar
sleEMLogRecoverActionNak = _SleEMLogRecoverActionNak_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 1, 7),
    _SleEMLogRecoverActionNak_Type()
)
sleEMLogRecoverActionNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogRecoverActionNak.setStatus("current")
_SleEMLogControl_ObjectIdentity = ObjectIdentity
sleEMLogControl = _SleEMLogControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2)
)


class _SleEMLogControlRequest_Type(Integer32):
    """Custom type sleEMLogControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("setDisableStatus", 1),
          ("setAction", 2),
          ("setInterval", 3),
          ("setNAKLock", 4),
          ("setNAKCompensate", 5),
          ("setRecoverActionMemLow", 6),
          ("setRecoverActionNAK", 7))
    )


_SleEMLogControlRequest_Type.__name__ = "Integer32"
_SleEMLogControlRequest_Object = MibScalar
sleEMLogControlRequest = _SleEMLogControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 1),
    _SleEMLogControlRequest_Type()
)
sleEMLogControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlRequest.setStatus("current")
_SleEMLogControlStatus_Type = SleControlStatusType
_SleEMLogControlStatus_Object = MibScalar
sleEMLogControlStatus = _SleEMLogControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 2),
    _SleEMLogControlStatus_Type()
)
sleEMLogControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogControlStatus.setStatus("current")
_SleEMLogControlTimer_Type = Gauge32
_SleEMLogControlTimer_Object = MibScalar
sleEMLogControlTimer = _SleEMLogControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 3),
    _SleEMLogControlTimer_Type()
)
sleEMLogControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlTimer.setStatus("current")
_SleEMLogControlTimeStamp_Type = TimeTicks
_SleEMLogControlTimeStamp_Object = MibScalar
sleEMLogControlTimeStamp = _SleEMLogControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 4),
    _SleEMLogControlTimeStamp_Type()
)
sleEMLogControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogControlTimeStamp.setStatus("current")
_SleEMLogControlReqResult_Type = SleControlRequestResultType
_SleEMLogControlReqResult_Object = MibScalar
sleEMLogControlReqResult = _SleEMLogControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 5),
    _SleEMLogControlReqResult_Type()
)
sleEMLogControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogControlReqResult.setStatus("current")


class _SleEMLogControlDisableStatus_Type(Integer32):
    """Custom type sleEMLogControlDisableStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleEMLogControlDisableStatus_Type.__name__ = "Integer32"
_SleEMLogControlDisableStatus_Object = MibScalar
sleEMLogControlDisableStatus = _SleEMLogControlDisableStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 6),
    _SleEMLogControlDisableStatus_Type()
)
sleEMLogControlDisableStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlDisableStatus.setStatus("current")


class _SleEMLogControlAction_Type(Bits):
    """Custom type sleEMLogControlAction based on Bits"""
    namedValues = NamedValues(
        *(("syslog", 0),
          ("trap", 1),
          ("recover", 2))
    )

_SleEMLogControlAction_Type.__name__ = "Bits"
_SleEMLogControlAction_Object = MibScalar
sleEMLogControlAction = _SleEMLogControlAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 7),
    _SleEMLogControlAction_Type()
)
sleEMLogControlAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlAction.setStatus("current")


class _SleEMLogControlInterval_Type(Integer32):
    """Custom type sleEMLogControlInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_SleEMLogControlInterval_Type.__name__ = "Integer32"
_SleEMLogControlInterval_Object = MibScalar
sleEMLogControlInterval = _SleEMLogControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 8),
    _SleEMLogControlInterval_Type()
)
sleEMLogControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlInterval.setStatus("current")


class _SleEMLogControlNAKLockStatus_Type(Integer32):
    """Custom type sleEMLogControlNAKLockStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleEMLogControlNAKLockStatus_Type.__name__ = "Integer32"
_SleEMLogControlNAKLockStatus_Object = MibScalar
sleEMLogControlNAKLockStatus = _SleEMLogControlNAKLockStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 9),
    _SleEMLogControlNAKLockStatus_Type()
)
sleEMLogControlNAKLockStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlNAKLockStatus.setStatus("current")


class _SleEMLogControlNAKCompensate_Type(Integer32):
    """Custom type sleEMLogControlNAKCompensate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleEMLogControlNAKCompensate_Type.__name__ = "Integer32"
_SleEMLogControlNAKCompensate_Object = MibScalar
sleEMLogControlNAKCompensate = _SleEMLogControlNAKCompensate_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 10),
    _SleEMLogControlNAKCompensate_Type()
)
sleEMLogControlNAKCompensate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlNAKCompensate.setStatus("current")


class _SleEMLogControlRecoverActionMemLow_Type(Integer32):
    """Custom type sleEMLogControlRecoverActionMemLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("switchover", 1),
          ("none", 255))
    )


_SleEMLogControlRecoverActionMemLow_Type.__name__ = "Integer32"
_SleEMLogControlRecoverActionMemLow_Object = MibScalar
sleEMLogControlRecoverActionMemLow = _SleEMLogControlRecoverActionMemLow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 11),
    _SleEMLogControlRecoverActionMemLow_Type()
)
sleEMLogControlRecoverActionMemLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlRecoverActionMemLow.setStatus("current")


class _SleEMLogControlRecoverActionNAK_Type(Integer32):
    """Custom type sleEMLogControlRecoverActionNAK based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("switchover", 1),
          ("none", 255))
    )


_SleEMLogControlRecoverActionNAK_Type.__name__ = "Integer32"
_SleEMLogControlRecoverActionNAK_Object = MibScalar
sleEMLogControlRecoverActionNAK = _SleEMLogControlRecoverActionNAK_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 2, 12),
    _SleEMLogControlRecoverActionNAK_Type()
)
sleEMLogControlRecoverActionNAK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleEMLogControlRecoverActionNAK.setStatus("current")
_SleEMLogNotification_ObjectIdentity = ObjectIdentity
sleEMLogNotification = _SleEMLogNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3)
)
_SleEMLogDefectInfo_ObjectIdentity = ObjectIdentity
sleEMLogDefectInfo = _SleEMLogDefectInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4)
)


class _SleEMLogDefectCPUHigh_Type(Bits):
    """Custom type sleEMLogDefectCPUHigh based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogDefectCPUHigh_Type.__name__ = "Bits"
_SleEMLogDefectCPUHigh_Object = MibScalar
sleEMLogDefectCPUHigh = _SleEMLogDefectCPUHigh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 1),
    _SleEMLogDefectCPUHigh_Type()
)
sleEMLogDefectCPUHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogDefectCPUHigh.setStatus("current")


class _SleEMLogTemperHigh_Type(Bits):
    """Custom type sleEMLogTemperHigh based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogTemperHigh_Type.__name__ = "Bits"
_SleEMLogTemperHigh_Object = MibScalar
sleEMLogTemperHigh = _SleEMLogTemperHigh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 2),
    _SleEMLogTemperHigh_Type()
)
sleEMLogTemperHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogTemperHigh.setStatus("current")


class _SleEMLogTemperLow_Type(Bits):
    """Custom type sleEMLogTemperLow based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogTemperLow_Type.__name__ = "Bits"
_SleEMLogTemperLow_Object = MibScalar
sleEMLogTemperLow = _SleEMLogTemperLow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 3),
    _SleEMLogTemperLow_Type()
)
sleEMLogTemperLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogTemperLow.setStatus("current")


class _SleEMLogMemLow_Type(Bits):
    """Custom type sleEMLogMemLow based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogMemLow_Type.__name__ = "Bits"
_SleEMLogMemLow_Object = MibScalar
sleEMLogMemLow = _SleEMLogMemLow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 4),
    _SleEMLogMemLow_Type()
)
sleEMLogMemLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogMemLow.setStatus("current")


class _SleEMLogFanFail_Type(Bits):
    """Custom type sleEMLogFanFail based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogFanFail_Type.__name__ = "Bits"
_SleEMLogFanFail_Object = MibScalar
sleEMLogFanFail = _SleEMLogFanFail_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 5),
    _SleEMLogFanFail_Type()
)
sleEMLogFanFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogFanFail.setStatus("current")


class _SleEMLogPhyCRCFail_Type(Bits):
    """Custom type sleEMLogPhyCRCFail based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogPhyCRCFail_Type.__name__ = "Bits"
_SleEMLogPhyCRCFail_Object = MibScalar
sleEMLogPhyCRCFail = _SleEMLogPhyCRCFail_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 6),
    _SleEMLogPhyCRCFail_Type()
)
sleEMLogPhyCRCFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogPhyCRCFail.setStatus("current")


class _SleEMLogPhyDetectFail_Type(Bits):
    """Custom type sleEMLogPhyDetectFail based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogPhyDetectFail_Type.__name__ = "Bits"
_SleEMLogPhyDetectFail_Object = MibScalar
sleEMLogPhyDetectFail = _SleEMLogPhyDetectFail_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 7),
    _SleEMLogPhyDetectFail_Type()
)
sleEMLogPhyDetectFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogPhyDetectFail.setStatus("current")


class _SleEMLogSFUMateInitFail_Type(Bits):
    """Custom type sleEMLogSFUMateInitFail based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogSFUMateInitFail_Type.__name__ = "Bits"
_SleEMLogSFUMateInitFail_Object = MibScalar
sleEMLogSFUMateInitFail = _SleEMLogSFUMateInitFail_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 8),
    _SleEMLogSFUMateInitFail_Type()
)
sleEMLogSFUMateInitFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogSFUMateInitFail.setStatus("current")


class _SleEMLogDaemonHealthBad_Type(Bits):
    """Custom type sleEMLogDaemonHealthBad based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogDaemonHealthBad_Type.__name__ = "Bits"
_SleEMLogDaemonHealthBad_Object = MibScalar
sleEMLogDaemonHealthBad = _SleEMLogDaemonHealthBad_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 9),
    _SleEMLogDaemonHealthBad_Type()
)
sleEMLogDaemonHealthBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogDaemonHealthBad.setStatus("current")


class _SleEMLogGPIURavenLinkDown_Type(Bits):
    """Custom type sleEMLogGPIURavenLinkDown based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogGPIURavenLinkDown_Type.__name__ = "Bits"
_SleEMLogGPIURavenLinkDown_Object = MibScalar
sleEMLogGPIURavenLinkDown = _SleEMLogGPIURavenLinkDown_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 10),
    _SleEMLogGPIURavenLinkDown_Type()
)
sleEMLogGPIURavenLinkDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogGPIURavenLinkDown.setStatus("current")


class _SleEMLogFANRPMLow_Type(Bits):
    """Custom type sleEMLogFANRPMLow based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogFANRPMLow_Type.__name__ = "Bits"
_SleEMLogFANRPMLow_Object = MibScalar
sleEMLogFANRPMLow = _SleEMLogFANRPMLow_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 11),
    _SleEMLogFANRPMLow_Type()
)
sleEMLogFANRPMLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogFANRPMLow.setStatus("current")


class _SleEMLogNAK_Type(Bits):
    """Custom type sleEMLogNAK based on Bits"""
    namedValues = NamedValues(
        *(("slot1", 0),
          ("slot2", 1),
          ("slot3", 2),
          ("slot4", 3),
          ("slot5", 4),
          ("slot6", 5),
          ("slot7", 6),
          ("slot8", 7))
    )

_SleEMLogNAK_Type.__name__ = "Bits"
_SleEMLogNAK_Object = MibScalar
sleEMLogNAK = _SleEMLogNAK_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 4, 12),
    _SleEMLogNAK_Type()
)
sleEMLogNAK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleEMLogNAK.setStatus("current")
_SleRapsRing_ObjectIdentity = ObjectIdentity
sleRapsRing = _SleRapsRing_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15)
)
_SleRapsRingTable_Object = MibTable
sleRapsRingTable = _SleRapsRingTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1)
)
if mibBuilder.loadTexts:
    sleRapsRingTable.setStatus("current")
_SleRapsRingEntry_Object = MibTableRow
sleRapsRingEntry = _SleRapsRingEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1)
)
sleRapsRingEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleRapsRingId"),
)
if mibBuilder.loadTexts:
    sleRapsRingEntry.setStatus("current")


class _SleRapsRingId_Type(Integer32):
    """Custom type sleRapsRingId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleRapsRingId_Type.__name__ = "Integer32"
_SleRapsRingId_Object = MibTableColumn
sleRapsRingId = _SleRapsRingId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 1),
    _SleRapsRingId_Type()
)
sleRapsRingId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingId.setStatus("current")


class _SleRapsRingType_Type(Integer32):
    """Custom type sleRapsRingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("major", 1),
          ("sub", 2),
          ("access", 3))
    )


_SleRapsRingType_Type.__name__ = "Integer32"
_SleRapsRingType_Object = MibTableColumn
sleRapsRingType = _SleRapsRingType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 2),
    _SleRapsRingType_Type()
)
sleRapsRingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingType.setStatus("current")


class _SleRapsRingLevel_Type(Integer32):
    """Custom type sleRapsRingLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleRapsRingLevel_Type.__name__ = "Integer32"
_SleRapsRingLevel_Object = MibTableColumn
sleRapsRingLevel = _SleRapsRingLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 3),
    _SleRapsRingLevel_Type()
)
sleRapsRingLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingLevel.setStatus("current")


class _SleRapsRingCtrlVlan_Type(Integer32):
    """Custom type sleRapsRingCtrlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleRapsRingCtrlVlan_Type.__name__ = "Integer32"
_SleRapsRingCtrlVlan_Object = MibTableColumn
sleRapsRingCtrlVlan = _SleRapsRingCtrlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 4),
    _SleRapsRingCtrlVlan_Type()
)
sleRapsRingCtrlVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingCtrlVlan.setStatus("current")
_SleRapsRingTrafficVlans_Type = OctetString
_SleRapsRingTrafficVlans_Object = MibTableColumn
sleRapsRingTrafficVlans = _SleRapsRingTrafficVlans_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 5),
    _SleRapsRingTrafficVlans_Type()
)
sleRapsRingTrafficVlans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingTrafficVlans.setStatus("current")


class _SleRapsRingVirtualVlan_Type(Integer32):
    """Custom type sleRapsRingVirtualVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_SleRapsRingVirtualVlan_Type.__name__ = "Integer32"
_SleRapsRingVirtualVlan_Object = MibTableColumn
sleRapsRingVirtualVlan = _SleRapsRingVirtualVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 6),
    _SleRapsRingVirtualVlan_Type()
)
sleRapsRingVirtualVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingVirtualVlan.setStatus("current")


class _SleRapsRingNodeId_Type(OctetString):
    """Custom type sleRapsRingNodeId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )
    fixed_length = 6


_SleRapsRingNodeId_Type.__name__ = "OctetString"
_SleRapsRingNodeId_Object = MibTableColumn
sleRapsRingNodeId = _SleRapsRingNodeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 7),
    _SleRapsRingNodeId_Type()
)
sleRapsRingNodeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingNodeId.setStatus("current")


class _SleRapsRingEnable_Type(Integer32):
    """Custom type sleRapsRingEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleRapsRingEnable_Type.__name__ = "Integer32"
_SleRapsRingEnable_Object = MibTableColumn
sleRapsRingEnable = _SleRapsRingEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 8),
    _SleRapsRingEnable_Type()
)
sleRapsRingEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingEnable.setStatus("current")


class _SleRapsRingBridgeRole_Type(Integer32):
    """Custom type sleRapsRingBridgeRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("rplowner", 1),
          ("rplneighbour", 2),
          ("rplnextneighbour", 3))
    )


_SleRapsRingBridgeRole_Type.__name__ = "Integer32"
_SleRapsRingBridgeRole_Object = MibTableColumn
sleRapsRingBridgeRole = _SleRapsRingBridgeRole_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 9),
    _SleRapsRingBridgeRole_Type()
)
sleRapsRingBridgeRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingBridgeRole.setStatus("current")


class _SleRapsRingState_Type(Integer32):
    """Custom type sleRapsRingState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("idle", 1),
          ("protection", 2),
          ("manual", 3),
          ("forced", 4),
          ("pending", 5),
          ("required", 6))
    )


_SleRapsRingState_Type.__name__ = "Integer32"
_SleRapsRingState_Object = MibTableColumn
sleRapsRingState = _SleRapsRingState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 10),
    _SleRapsRingState_Type()
)
sleRapsRingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingState.setStatus("current")
_SleRapsRingEastPort_Type = Integer32
_SleRapsRingEastPort_Object = MibTableColumn
sleRapsRingEastPort = _SleRapsRingEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 11),
    _SleRapsRingEastPort_Type()
)
sleRapsRingEastPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingEastPort.setStatus("current")


class _SleRapsRingEastPortStatus_Type(Integer32):
    """Custom type sleRapsRingEastPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disabled", 1),
          ("forwarding", 2),
          ("blocking", 3))
    )


_SleRapsRingEastPortStatus_Type.__name__ = "Integer32"
_SleRapsRingEastPortStatus_Object = MibTableColumn
sleRapsRingEastPortStatus = _SleRapsRingEastPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 12),
    _SleRapsRingEastPortStatus_Type()
)
sleRapsRingEastPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingEastPortStatus.setStatus("current")
_SleRapsRingWestPort_Type = Integer32
_SleRapsRingWestPort_Object = MibTableColumn
sleRapsRingWestPort = _SleRapsRingWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 13),
    _SleRapsRingWestPort_Type()
)
sleRapsRingWestPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingWestPort.setStatus("current")


class _SleRapsRingWestPortStatus_Type(Integer32):
    """Custom type sleRapsRingWestPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disabled", 1),
          ("forwarding", 2),
          ("blocking", 3))
    )


_SleRapsRingWestPortStatus_Type.__name__ = "Integer32"
_SleRapsRingWestPortStatus_Object = MibTableColumn
sleRapsRingWestPortStatus = _SleRapsRingWestPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 14),
    _SleRapsRingWestPortStatus_Type()
)
sleRapsRingWestPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingWestPortStatus.setStatus("current")


class _SleRapsRingRplPort_Type(Integer32):
    """Custom type sleRapsRingRplPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_SleRapsRingRplPort_Type.__name__ = "Integer32"
_SleRapsRingRplPort_Object = MibTableColumn
sleRapsRingRplPort = _SleRapsRingRplPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 15),
    _SleRapsRingRplPort_Type()
)
sleRapsRingRplPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingRplPort.setStatus("current")


class _SleRapsRingIcPort_Type(Integer32):
    """Custom type sleRapsRingIcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_SleRapsRingIcPort_Type.__name__ = "Integer32"
_SleRapsRingIcPort_Object = MibTableColumn
sleRapsRingIcPort = _SleRapsRingIcPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 16),
    _SleRapsRingIcPort_Type()
)
sleRapsRingIcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingIcPort.setStatus("current")


class _SleRapsRingIcNode_Type(Integer32):
    """Custom type sleRapsRingIcNode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("primary", 1),
          ("secondary", 2))
    )


_SleRapsRingIcNode_Type.__name__ = "Integer32"
_SleRapsRingIcNode_Object = MibTableColumn
sleRapsRingIcNode = _SleRapsRingIcNode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 17),
    _SleRapsRingIcNode_Type()
)
sleRapsRingIcNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingIcNode.setStatus("current")


class _SleRapsRingMultipleFailure_Type(Integer32):
    """Custom type sleRapsRingMultipleFailure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("primary", 1),
          ("secondary", 2))
    )


_SleRapsRingMultipleFailure_Type.__name__ = "Integer32"
_SleRapsRingMultipleFailure_Object = MibTableColumn
sleRapsRingMultipleFailure = _SleRapsRingMultipleFailure_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 18),
    _SleRapsRingMultipleFailure_Type()
)
sleRapsRingMultipleFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingMultipleFailure.setStatus("current")


class _SleRapsRingPropagateTc_Type(Integer32):
    """Custom type sleRapsRingPropagateTc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingPropagateTc_Type.__name__ = "Integer32"
_SleRapsRingPropagateTc_Object = MibTableColumn
sleRapsRingPropagateTc = _SleRapsRingPropagateTc_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 19),
    _SleRapsRingPropagateTc_Type()
)
sleRapsRingPropagateTc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingPropagateTc.setStatus("current")


class _SleRapsRingNonRevertive_Type(Integer32):
    """Custom type sleRapsRingNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingNonRevertive_Type.__name__ = "Integer32"
_SleRapsRingNonRevertive_Object = MibTableColumn
sleRapsRingNonRevertive = _SleRapsRingNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 20),
    _SleRapsRingNonRevertive_Type()
)
sleRapsRingNonRevertive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingNonRevertive.setStatus("current")


class _SleRapsRingForcedSwitch_Type(Integer32):
    """Custom type sleRapsRingForcedSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2),
          ("both", 3))
    )


_SleRapsRingForcedSwitch_Type.__name__ = "Integer32"
_SleRapsRingForcedSwitch_Object = MibTableColumn
sleRapsRingForcedSwitch = _SleRapsRingForcedSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 21),
    _SleRapsRingForcedSwitch_Type()
)
sleRapsRingForcedSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingForcedSwitch.setStatus("current")


class _SleRapsRingManualSwitch_Type(Integer32):
    """Custom type sleRapsRingManualSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_SleRapsRingManualSwitch_Type.__name__ = "Integer32"
_SleRapsRingManualSwitch_Object = MibTableColumn
sleRapsRingManualSwitch = _SleRapsRingManualSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 22),
    _SleRapsRingManualSwitch_Type()
)
sleRapsRingManualSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingManualSwitch.setStatus("current")


class _SleRapsRingHoldOffTime_Type(Integer32):
    """Custom type sleRapsRingHoldOffTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleRapsRingHoldOffTime_Type.__name__ = "Integer32"
_SleRapsRingHoldOffTime_Object = MibTableColumn
sleRapsRingHoldOffTime = _SleRapsRingHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 23),
    _SleRapsRingHoldOffTime_Type()
)
sleRapsRingHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingHoldOffTime.setStatus("current")


class _SleRapsRingGuardTime_Type(Integer32):
    """Custom type sleRapsRingGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_SleRapsRingGuardTime_Type.__name__ = "Integer32"
_SleRapsRingGuardTime_Object = MibTableColumn
sleRapsRingGuardTime = _SleRapsRingGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 24),
    _SleRapsRingGuardTime_Type()
)
sleRapsRingGuardTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingGuardTime.setStatus("current")


class _SleRapsRingWaitToRestore_Type(Integer32):
    """Custom type sleRapsRingWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_SleRapsRingWaitToRestore_Type.__name__ = "Integer32"
_SleRapsRingWaitToRestore_Object = MibTableColumn
sleRapsRingWaitToRestore = _SleRapsRingWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 25),
    _SleRapsRingWaitToRestore_Type()
)
sleRapsRingWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingWaitToRestore.setStatus("current")


class _SleRapsRingWaitToBlock_Type(Integer32):
    """Custom type sleRapsRingWaitToBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 7),
    )


_SleRapsRingWaitToBlock_Type.__name__ = "Integer32"
_SleRapsRingWaitToBlock_Object = MibTableColumn
sleRapsRingWaitToBlock = _SleRapsRingWaitToBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 26),
    _SleRapsRingWaitToBlock_Type()
)
sleRapsRingWaitToBlock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingWaitToBlock.setStatus("current")


class _SleRapsRingInstId_Type(Integer32):
    """Custom type sleRapsRingInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleRapsRingInstId_Type.__name__ = "Integer32"
_SleRapsRingInstId_Object = MibTableColumn
sleRapsRingInstId = _SleRapsRingInstId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 27),
    _SleRapsRingInstId_Type()
)
sleRapsRingInstId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingInstId.setStatus("current")


class _SleRapsRingChannel_Type(Integer32):
    """Custom type sleRapsRingChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("virtual", 1),
          ("abstract", 2))
    )


_SleRapsRingChannel_Type.__name__ = "Integer32"
_SleRapsRingChannel_Object = MibTableColumn
sleRapsRingChannel = _SleRapsRingChannel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 28),
    _SleRapsRingChannel_Type()
)
sleRapsRingChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingChannel.setStatus("current")


class _SleRapsRingPassThrough_Type(Integer32):
    """Custom type sleRapsRingPassThrough based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingPassThrough_Type.__name__ = "Integer32"
_SleRapsRingPassThrough_Object = MibTableColumn
sleRapsRingPassThrough = _SleRapsRingPassThrough_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 29),
    _SleRapsRingPassThrough_Type()
)
sleRapsRingPassThrough.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingPassThrough.setStatus("current")


class _SleRapsRingVerifiedTime_Type(Integer32):
    """Custom type sleRapsRingVerifiedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleRapsRingVerifiedTime_Type.__name__ = "Integer32"
_SleRapsRingVerifiedTime_Object = MibTableColumn
sleRapsRingVerifiedTime = _SleRapsRingVerifiedTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 1, 1, 30),
    _SleRapsRingVerifiedTime_Type()
)
sleRapsRingVerifiedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingVerifiedTime.setStatus("current")
_SleRapsRingControl_ObjectIdentity = ObjectIdentity
sleRapsRingControl = _SleRapsRingControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2)
)


class _SleRapsRingControlRequest_Type(Integer32):
    """Custom type sleRapsRingControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("createRapsRing", 1),
          ("deleteRapsRing", 2),
          ("setRapsRingChannel", 3),
          ("setRapsRingEnable", 4),
          ("setRapsRingPorts", 5),
          ("destroyRapsRingPorts", 6),
          ("setRapsRingRplPort", 7),
          ("setRapsRingIcPort", 8),
          ("destroyRapsRingIcPort", 9),
          ("setRapsRingMultipleFailure", 10),
          ("setRapsRingPropagateTc", 11),
          ("setRapsRingNonRevertive", 12),
          ("setRapsRingForcedSwitch", 13),
          ("setRapsRingManualSwitch", 14),
          ("setRapsRingClearSwitch", 15),
          ("setRapsRingHoldOffTime", 16),
          ("setRapsRingGuardTime", 17),
          ("setRapsRingWtrTime", 18),
          ("setRapsRingWtbTime", 19),
          ("setRapsRingPassThrough", 20),
          ("setRapsRingVrfTime", 21))
    )


_SleRapsRingControlRequest_Type.__name__ = "Integer32"
_SleRapsRingControlRequest_Object = MibScalar
sleRapsRingControlRequest = _SleRapsRingControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 1),
    _SleRapsRingControlRequest_Type()
)
sleRapsRingControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlRequest.setStatus("current")
_SleRapsRingControlStatus_Type = SleControlStatusType
_SleRapsRingControlStatus_Object = MibScalar
sleRapsRingControlStatus = _SleRapsRingControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 2),
    _SleRapsRingControlStatus_Type()
)
sleRapsRingControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingControlStatus.setStatus("current")
_SleRapsRingControlTimer_Type = Gauge32
_SleRapsRingControlTimer_Object = MibScalar
sleRapsRingControlTimer = _SleRapsRingControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 3),
    _SleRapsRingControlTimer_Type()
)
sleRapsRingControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlTimer.setStatus("current")
_SleRapsRingControlTimeStamp_Type = TimeTicks
_SleRapsRingControlTimeStamp_Object = MibScalar
sleRapsRingControlTimeStamp = _SleRapsRingControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 4),
    _SleRapsRingControlTimeStamp_Type()
)
sleRapsRingControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingControlTimeStamp.setStatus("current")
_SleRapsRingControlReqResult_Type = SleControlRequestResultType
_SleRapsRingControlReqResult_Object = MibScalar
sleRapsRingControlReqResult = _SleRapsRingControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 5),
    _SleRapsRingControlReqResult_Type()
)
sleRapsRingControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleRapsRingControlReqResult.setStatus("current")


class _SleRapsRingControlId_Type(Integer32):
    """Custom type sleRapsRingControlId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleRapsRingControlId_Type.__name__ = "Integer32"
_SleRapsRingControlId_Object = MibScalar
sleRapsRingControlId = _SleRapsRingControlId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 6),
    _SleRapsRingControlId_Type()
)
sleRapsRingControlId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlId.setStatus("current")


class _SleRapsRingControlType_Type(Integer32):
    """Custom type sleRapsRingControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("major", 1),
          ("sub", 2),
          ("access", 3))
    )


_SleRapsRingControlType_Type.__name__ = "Integer32"
_SleRapsRingControlType_Object = MibScalar
sleRapsRingControlType = _SleRapsRingControlType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 7),
    _SleRapsRingControlType_Type()
)
sleRapsRingControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlType.setStatus("current")


class _SleRapsRingControlLevel_Type(Integer32):
    """Custom type sleRapsRingControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SleRapsRingControlLevel_Type.__name__ = "Integer32"
_SleRapsRingControlLevel_Object = MibScalar
sleRapsRingControlLevel = _SleRapsRingControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 8),
    _SleRapsRingControlLevel_Type()
)
sleRapsRingControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlLevel.setStatus("current")


class _SleRapsRingControlCtrlVlan_Type(Integer32):
    """Custom type sleRapsRingControlCtrlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SleRapsRingControlCtrlVlan_Type.__name__ = "Integer32"
_SleRapsRingControlCtrlVlan_Object = MibScalar
sleRapsRingControlCtrlVlan = _SleRapsRingControlCtrlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 9),
    _SleRapsRingControlCtrlVlan_Type()
)
sleRapsRingControlCtrlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlCtrlVlan.setStatus("current")
_SleRapsRingControlTrafficVlans_Type = OctetString
_SleRapsRingControlTrafficVlans_Object = MibScalar
sleRapsRingControlTrafficVlans = _SleRapsRingControlTrafficVlans_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 10),
    _SleRapsRingControlTrafficVlans_Type()
)
sleRapsRingControlTrafficVlans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlTrafficVlans.setStatus("current")


class _SleRapsRingControlChannel_Type(Integer32):
    """Custom type sleRapsRingControlChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("virtual", 1),
          ("abstract", 2))
    )


_SleRapsRingControlChannel_Type.__name__ = "Integer32"
_SleRapsRingControlChannel_Object = MibScalar
sleRapsRingControlChannel = _SleRapsRingControlChannel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 11),
    _SleRapsRingControlChannel_Type()
)
sleRapsRingControlChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlChannel.setStatus("current")


class _SleRapsRingControlEnable_Type(Integer32):
    """Custom type sleRapsRingControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SleRapsRingControlEnable_Type.__name__ = "Integer32"
_SleRapsRingControlEnable_Object = MibScalar
sleRapsRingControlEnable = _SleRapsRingControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 12),
    _SleRapsRingControlEnable_Type()
)
sleRapsRingControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlEnable.setStatus("current")
_SleRapsRingControlEastPort_Type = Integer32
_SleRapsRingControlEastPort_Object = MibScalar
sleRapsRingControlEastPort = _SleRapsRingControlEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 13),
    _SleRapsRingControlEastPort_Type()
)
sleRapsRingControlEastPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlEastPort.setStatus("current")
_SleRapsRingControlWestPort_Type = Integer32
_SleRapsRingControlWestPort_Object = MibScalar
sleRapsRingControlWestPort = _SleRapsRingControlWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 14),
    _SleRapsRingControlWestPort_Type()
)
sleRapsRingControlWestPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlWestPort.setStatus("current")


class _SleRapsRingControlParamPort_Type(Integer32):
    """Custom type sleRapsRingControlParamPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("east", 1),
          ("west", 2))
    )


_SleRapsRingControlParamPort_Type.__name__ = "Integer32"
_SleRapsRingControlParamPort_Object = MibScalar
sleRapsRingControlParamPort = _SleRapsRingControlParamPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 15),
    _SleRapsRingControlParamPort_Type()
)
sleRapsRingControlParamPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlParamPort.setStatus("current")


class _SleRapsRingControlBridgeRole_Type(Integer32):
    """Custom type sleRapsRingControlBridgeRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rplowner", 1),
          ("neighbour", 2),
          ("nextneighbour", 3))
    )


_SleRapsRingControlBridgeRole_Type.__name__ = "Integer32"
_SleRapsRingControlBridgeRole_Object = MibScalar
sleRapsRingControlBridgeRole = _SleRapsRingControlBridgeRole_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 16),
    _SleRapsRingControlBridgeRole_Type()
)
sleRapsRingControlBridgeRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlBridgeRole.setStatus("current")


class _SleRapsRingControlIcNode_Type(Integer32):
    """Custom type sleRapsRingControlIcNode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("secondary", 2))
    )


_SleRapsRingControlIcNode_Type.__name__ = "Integer32"
_SleRapsRingControlIcNode_Object = MibScalar
sleRapsRingControlIcNode = _SleRapsRingControlIcNode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 17),
    _SleRapsRingControlIcNode_Type()
)
sleRapsRingControlIcNode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlIcNode.setStatus("current")


class _SleRapsRingControlMultipleFailure_Type(Integer32):
    """Custom type sleRapsRingControlMultipleFailure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("primary", 1),
          ("secondary", 2))
    )


_SleRapsRingControlMultipleFailure_Type.__name__ = "Integer32"
_SleRapsRingControlMultipleFailure_Object = MibScalar
sleRapsRingControlMultipleFailure = _SleRapsRingControlMultipleFailure_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 18),
    _SleRapsRingControlMultipleFailure_Type()
)
sleRapsRingControlMultipleFailure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlMultipleFailure.setStatus("current")


class _SleRapsRingControlPropagateTc_Type(Integer32):
    """Custom type sleRapsRingControlPropagateTc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingControlPropagateTc_Type.__name__ = "Integer32"
_SleRapsRingControlPropagateTc_Object = MibScalar
sleRapsRingControlPropagateTc = _SleRapsRingControlPropagateTc_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 19),
    _SleRapsRingControlPropagateTc_Type()
)
sleRapsRingControlPropagateTc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlPropagateTc.setStatus("current")


class _SleRapsRingControlNonRevertive_Type(Integer32):
    """Custom type sleRapsRingControlNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingControlNonRevertive_Type.__name__ = "Integer32"
_SleRapsRingControlNonRevertive_Object = MibScalar
sleRapsRingControlNonRevertive = _SleRapsRingControlNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 20),
    _SleRapsRingControlNonRevertive_Type()
)
sleRapsRingControlNonRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlNonRevertive.setStatus("current")


class _SleRapsRingControlHoldOffTime_Type(Integer32):
    """Custom type sleRapsRingControlHoldOffTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleRapsRingControlHoldOffTime_Type.__name__ = "Integer32"
_SleRapsRingControlHoldOffTime_Object = MibScalar
sleRapsRingControlHoldOffTime = _SleRapsRingControlHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 21),
    _SleRapsRingControlHoldOffTime_Type()
)
sleRapsRingControlHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlHoldOffTime.setStatus("current")


class _SleRapsRingControlGuardTime_Type(Integer32):
    """Custom type sleRapsRingControlGuardTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_SleRapsRingControlGuardTime_Type.__name__ = "Integer32"
_SleRapsRingControlGuardTime_Object = MibScalar
sleRapsRingControlGuardTime = _SleRapsRingControlGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 22),
    _SleRapsRingControlGuardTime_Type()
)
sleRapsRingControlGuardTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlGuardTime.setStatus("current")


class _SleRapsRingControlWaitToRestore_Type(Integer32):
    """Custom type sleRapsRingControlWaitToRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_SleRapsRingControlWaitToRestore_Type.__name__ = "Integer32"
_SleRapsRingControlWaitToRestore_Object = MibScalar
sleRapsRingControlWaitToRestore = _SleRapsRingControlWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 23),
    _SleRapsRingControlWaitToRestore_Type()
)
sleRapsRingControlWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlWaitToRestore.setStatus("current")


class _SleRapsRingControlWaitToBlock_Type(Integer32):
    """Custom type sleRapsRingControlWaitToBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 7),
    )


_SleRapsRingControlWaitToBlock_Type.__name__ = "Integer32"
_SleRapsRingControlWaitToBlock_Object = MibScalar
sleRapsRingControlWaitToBlock = _SleRapsRingControlWaitToBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 24),
    _SleRapsRingControlWaitToBlock_Type()
)
sleRapsRingControlWaitToBlock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlWaitToBlock.setStatus("current")


class _SleRapsRingControlInstId_Type(Integer32):
    """Custom type sleRapsRingControlInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SleRapsRingControlInstId_Type.__name__ = "Integer32"
_SleRapsRingControlInstId_Object = MibScalar
sleRapsRingControlInstId = _SleRapsRingControlInstId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 25),
    _SleRapsRingControlInstId_Type()
)
sleRapsRingControlInstId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlInstId.setStatus("current")


class _SleRapsRingControlPassThrough_Type(Integer32):
    """Custom type sleRapsRingControlPassThrough based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SleRapsRingControlPassThrough_Type.__name__ = "Integer32"
_SleRapsRingControlPassThrough_Object = MibScalar
sleRapsRingControlPassThrough = _SleRapsRingControlPassThrough_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 26),
    _SleRapsRingControlPassThrough_Type()
)
sleRapsRingControlPassThrough.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlPassThrough.setStatus("current")


class _SleRapsRingControlVerifiedTime_Type(Integer32):
    """Custom type sleRapsRingControlVerifiedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SleRapsRingControlVerifiedTime_Type.__name__ = "Integer32"
_SleRapsRingControlVerifiedTime_Object = MibScalar
sleRapsRingControlVerifiedTime = _SleRapsRingControlVerifiedTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 2, 27),
    _SleRapsRingControlVerifiedTime_Type()
)
sleRapsRingControlVerifiedTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleRapsRingControlVerifiedTime.setStatus("current")
_SleRapsRingNotification_ObjectIdentity = ObjectIdentity
sleRapsRingNotification = _SleRapsRingNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3)
)
_SleFaultMonitor_ObjectIdentity = ObjectIdentity
sleFaultMonitor = _SleFaultMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16)
)
_SleFaultMonitorGlobal_ObjectIdentity = ObjectIdentity
sleFaultMonitorGlobal = _SleFaultMonitorGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1)
)
_SleFaultMonitorGlobalBase_ObjectIdentity = ObjectIdentity
sleFaultMonitorGlobalBase = _SleFaultMonitorGlobalBase_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 1)
)


class _SleFaultMonitorGlobalInspectInterval_Type(Integer32):
    """Custom type sleFaultMonitorGlobalInspectInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 86400),
    )


_SleFaultMonitorGlobalInspectInterval_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalInspectInterval_Object = MibScalar
sleFaultMonitorGlobalInspectInterval = _SleFaultMonitorGlobalInspectInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 1, 1),
    _SleFaultMonitorGlobalInspectInterval_Type()
)
sleFaultMonitorGlobalInspectInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalInspectInterval.setStatus("current")


class _SleFaultMonitorGlobalStartupThreshold_Type(Integer32):
    """Custom type sleFaultMonitorGlobalStartupThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleFaultMonitorGlobalStartupThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalStartupThreshold_Object = MibScalar
sleFaultMonitorGlobalStartupThreshold = _SleFaultMonitorGlobalStartupThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 1, 2),
    _SleFaultMonitorGlobalStartupThreshold_Type()
)
sleFaultMonitorGlobalStartupThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalStartupThreshold.setStatus("current")


class _SleFaultMonitorGlobalNoKeepalive_Type(Integer32):
    """Custom type sleFaultMonitorGlobalNoKeepalive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("resetMate", 2))
    )


_SleFaultMonitorGlobalNoKeepalive_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalNoKeepalive_Object = MibScalar
sleFaultMonitorGlobalNoKeepalive = _SleFaultMonitorGlobalNoKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 1, 3),
    _SleFaultMonitorGlobalNoKeepalive_Type()
)
sleFaultMonitorGlobalNoKeepalive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalNoKeepalive.setStatus("current")
_SleFaultMonitorGlobalControl_ObjectIdentity = ObjectIdentity
sleFaultMonitorGlobalControl = _SleFaultMonitorGlobalControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2)
)


class _SleFaultMonitorGlobalControlRequest_Type(Integer32):
    """Custom type sleFaultMonitorGlobalControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("setGlobalInspectInterval", 1),
          ("setGlobalStartupThreshold", 2),
          ("setNoKeepaliveAction", 3))
    )


_SleFaultMonitorGlobalControlRequest_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalControlRequest_Object = MibScalar
sleFaultMonitorGlobalControlRequest = _SleFaultMonitorGlobalControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 1),
    _SleFaultMonitorGlobalControlRequest_Type()
)
sleFaultMonitorGlobalControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlRequest.setStatus("current")
_SleFaultMonitorGlobalControlStatus_Type = SleControlStatusType
_SleFaultMonitorGlobalControlStatus_Object = MibScalar
sleFaultMonitorGlobalControlStatus = _SleFaultMonitorGlobalControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 2),
    _SleFaultMonitorGlobalControlStatus_Type()
)
sleFaultMonitorGlobalControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlStatus.setStatus("current")
_SleFaultMonitorGlobalControlTimer_Type = Unsigned32
_SleFaultMonitorGlobalControlTimer_Object = MibScalar
sleFaultMonitorGlobalControlTimer = _SleFaultMonitorGlobalControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 3),
    _SleFaultMonitorGlobalControlTimer_Type()
)
sleFaultMonitorGlobalControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlTimer.setStatus("current")
_SleFaultMonitorGlobalControlTimeStamp_Type = TimeTicks
_SleFaultMonitorGlobalControlTimeStamp_Object = MibScalar
sleFaultMonitorGlobalControlTimeStamp = _SleFaultMonitorGlobalControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 4),
    _SleFaultMonitorGlobalControlTimeStamp_Type()
)
sleFaultMonitorGlobalControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlTimeStamp.setStatus("current")
_SleFaultMonitorGlobalControlReqResult_Type = SleControlRequestResultType
_SleFaultMonitorGlobalControlReqResult_Object = MibScalar
sleFaultMonitorGlobalControlReqResult = _SleFaultMonitorGlobalControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 5),
    _SleFaultMonitorGlobalControlReqResult_Type()
)
sleFaultMonitorGlobalControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlReqResult.setStatus("current")


class _SleFaultMonitorGlobalControlInspectInterval_Type(Integer32):
    """Custom type sleFaultMonitorGlobalControlInspectInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 86400),
    )


_SleFaultMonitorGlobalControlInspectInterval_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalControlInspectInterval_Object = MibScalar
sleFaultMonitorGlobalControlInspectInterval = _SleFaultMonitorGlobalControlInspectInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 6),
    _SleFaultMonitorGlobalControlInspectInterval_Type()
)
sleFaultMonitorGlobalControlInspectInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlInspectInterval.setStatus("current")


class _SleFaultMonitorGlobalControlStartupThreshold_Type(Integer32):
    """Custom type sleFaultMonitorGlobalControlStartupThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_SleFaultMonitorGlobalControlStartupThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalControlStartupThreshold_Object = MibScalar
sleFaultMonitorGlobalControlStartupThreshold = _SleFaultMonitorGlobalControlStartupThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 7),
    _SleFaultMonitorGlobalControlStartupThreshold_Type()
)
sleFaultMonitorGlobalControlStartupThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlStartupThreshold.setStatus("current")


class _SleFaultMonitorGlobalControlNoKeepalive_Type(Integer32):
    """Custom type sleFaultMonitorGlobalControlNoKeepalive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("switchover", 2))
    )


_SleFaultMonitorGlobalControlNoKeepalive_Type.__name__ = "Integer32"
_SleFaultMonitorGlobalControlNoKeepalive_Object = MibScalar
sleFaultMonitorGlobalControlNoKeepalive = _SleFaultMonitorGlobalControlNoKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 2, 8),
    _SleFaultMonitorGlobalControlNoKeepalive_Type()
)
sleFaultMonitorGlobalControlNoKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorGlobalControlNoKeepalive.setStatus("current")
_SleFaultMonitorGlobalNotification_ObjectIdentity = ObjectIdentity
sleFaultMonitorGlobalNotification = _SleFaultMonitorGlobalNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 3)
)
_SleFaultMonitorDaemonConfig_ObjectIdentity = ObjectIdentity
sleFaultMonitorDaemonConfig = _SleFaultMonitorDaemonConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2)
)
_SleFaultMonitorDaemonTable_Object = MibTable
sleFaultMonitorDaemonTable = _SleFaultMonitorDaemonTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1)
)
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonTable.setStatus("current")
_SleFaultMonitorDaemonEntry_Object = MibTableRow
sleFaultMonitorDaemonEntry = _SleFaultMonitorDaemonEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1)
)
sleFaultMonitorDaemonEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonPid"),
)
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonEntry.setStatus("current")
_SleFaultMonitorDaemonName_Type = OctetString
_SleFaultMonitorDaemonName_Object = MibTableColumn
sleFaultMonitorDaemonName = _SleFaultMonitorDaemonName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 1),
    _SleFaultMonitorDaemonName_Type()
)
sleFaultMonitorDaemonName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonName.setStatus("current")


class _SleFaultMonitorDaemonPid_Type(Integer32):
    """Custom type sleFaultMonitorDaemonPid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SleFaultMonitorDaemonPid_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonPid_Object = MibTableColumn
sleFaultMonitorDaemonPid = _SleFaultMonitorDaemonPid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 2),
    _SleFaultMonitorDaemonPid_Type()
)
sleFaultMonitorDaemonPid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonPid.setStatus("current")


class _SleFaultMonitorDaemonAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorDaemonAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorDaemonAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonAdminStatus_Object = MibTableColumn
sleFaultMonitorDaemonAdminStatus = _SleFaultMonitorDaemonAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 3),
    _SleFaultMonitorDaemonAdminStatus_Type()
)
sleFaultMonitorDaemonAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonAdminStatus.setStatus("current")


class _SleFaultMonitorDaemonCrashAction_Type(Integer32):
    """Custom type sleFaultMonitorDaemonCrashAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("restart", 2),
          ("switchover", 3))
    )


_SleFaultMonitorDaemonCrashAction_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonCrashAction_Object = MibTableColumn
sleFaultMonitorDaemonCrashAction = _SleFaultMonitorDaemonCrashAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 4),
    _SleFaultMonitorDaemonCrashAction_Type()
)
sleFaultMonitorDaemonCrashAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonCrashAction.setStatus("current")


class _SleFaultMonitorDaemonTimeoutAction_Type(Integer32):
    """Custom type sleFaultMonitorDaemonTimeoutAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("restart", 2),
          ("switchover", 3))
    )


_SleFaultMonitorDaemonTimeoutAction_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonTimeoutAction_Object = MibTableColumn
sleFaultMonitorDaemonTimeoutAction = _SleFaultMonitorDaemonTimeoutAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 5),
    _SleFaultMonitorDaemonTimeoutAction_Type()
)
sleFaultMonitorDaemonTimeoutAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonTimeoutAction.setStatus("current")


class _SleFaultMonitorDaemonThreshold_Type(Integer32):
    """Custom type sleFaultMonitorDaemonThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SleFaultMonitorDaemonThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonThreshold_Object = MibTableColumn
sleFaultMonitorDaemonThreshold = _SleFaultMonitorDaemonThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 6),
    _SleFaultMonitorDaemonThreshold_Type()
)
sleFaultMonitorDaemonThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonThreshold.setStatus("current")
_SleFaultMonitorDaemonThresholded_Type = Integer32
_SleFaultMonitorDaemonThresholded_Object = MibTableColumn
sleFaultMonitorDaemonThresholded = _SleFaultMonitorDaemonThresholded_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 7),
    _SleFaultMonitorDaemonThresholded_Type()
)
sleFaultMonitorDaemonThresholded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonThresholded.setStatus("current")
_SleFaultMonitorDaemonStartupThresholded_Type = Integer32
_SleFaultMonitorDaemonStartupThresholded_Object = MibTableColumn
sleFaultMonitorDaemonStartupThresholded = _SleFaultMonitorDaemonStartupThresholded_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 8),
    _SleFaultMonitorDaemonStartupThresholded_Type()
)
sleFaultMonitorDaemonStartupThresholded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonStartupThresholded.setStatus("current")


class _SleFaultMonitorDaemonWatchdogAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorDaemonWatchdogAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorDaemonWatchdogAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonWatchdogAdminStatus_Object = MibTableColumn
sleFaultMonitorDaemonWatchdogAdminStatus = _SleFaultMonitorDaemonWatchdogAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 9),
    _SleFaultMonitorDaemonWatchdogAdminStatus_Type()
)
sleFaultMonitorDaemonWatchdogAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonWatchdogAdminStatus.setStatus("current")


class _SleFaultMonitorDaemonWatchdogThreshold_Type(Integer32):
    """Custom type sleFaultMonitorDaemonWatchdogThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_SleFaultMonitorDaemonWatchdogThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonWatchdogThreshold_Object = MibTableColumn
sleFaultMonitorDaemonWatchdogThreshold = _SleFaultMonitorDaemonWatchdogThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 10),
    _SleFaultMonitorDaemonWatchdogThreshold_Type()
)
sleFaultMonitorDaemonWatchdogThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonWatchdogThreshold.setStatus("current")
_SleFaultMonitorDaemonWatchdogCount_Type = Integer32
_SleFaultMonitorDaemonWatchdogCount_Object = MibTableColumn
sleFaultMonitorDaemonWatchdogCount = _SleFaultMonitorDaemonWatchdogCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 1, 1, 11),
    _SleFaultMonitorDaemonWatchdogCount_Type()
)
sleFaultMonitorDaemonWatchdogCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonWatchdogCount.setStatus("current")
_SleFaultMonitorDaemonControl_ObjectIdentity = ObjectIdentity
sleFaultMonitorDaemonControl = _SleFaultMonitorDaemonControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2)
)


class _SleFaultMonitorDaemonControlRequest_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("setDaemonAdminStatus", 1),
          ("setDaemonFaultAction", 2),
          ("setDaemonThreshold", 3),
          ("setDaemonWatchdog", 4))
    )


_SleFaultMonitorDaemonControlRequest_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlRequest_Object = MibScalar
sleFaultMonitorDaemonControlRequest = _SleFaultMonitorDaemonControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 1),
    _SleFaultMonitorDaemonControlRequest_Type()
)
sleFaultMonitorDaemonControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlRequest.setStatus("current")
_SleFaultMonitorDaemonControlStatus_Type = SleControlStatusType
_SleFaultMonitorDaemonControlStatus_Object = MibScalar
sleFaultMonitorDaemonControlStatus = _SleFaultMonitorDaemonControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 2),
    _SleFaultMonitorDaemonControlStatus_Type()
)
sleFaultMonitorDaemonControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlStatus.setStatus("current")
_SleFaultMonitorDaemonControlTimer_Type = Unsigned32
_SleFaultMonitorDaemonControlTimer_Object = MibScalar
sleFaultMonitorDaemonControlTimer = _SleFaultMonitorDaemonControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 3),
    _SleFaultMonitorDaemonControlTimer_Type()
)
sleFaultMonitorDaemonControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlTimer.setStatus("current")
_SleFaultMonitorDaemonControlTimeStamp_Type = TimeTicks
_SleFaultMonitorDaemonControlTimeStamp_Object = MibScalar
sleFaultMonitorDaemonControlTimeStamp = _SleFaultMonitorDaemonControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 4),
    _SleFaultMonitorDaemonControlTimeStamp_Type()
)
sleFaultMonitorDaemonControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlTimeStamp.setStatus("current")
_SleFaultMonitorDaemonControlReqResult_Type = SleControlRequestResultType
_SleFaultMonitorDaemonControlReqResult_Object = MibScalar
sleFaultMonitorDaemonControlReqResult = _SleFaultMonitorDaemonControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 5),
    _SleFaultMonitorDaemonControlReqResult_Type()
)
sleFaultMonitorDaemonControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlReqResult.setStatus("current")
_SleFaultMonitorDaemonControlName_Type = OctetString
_SleFaultMonitorDaemonControlName_Object = MibScalar
sleFaultMonitorDaemonControlName = _SleFaultMonitorDaemonControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 6),
    _SleFaultMonitorDaemonControlName_Type()
)
sleFaultMonitorDaemonControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlName.setStatus("current")


class _SleFaultMonitorDaemonControlAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorDaemonControlAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlAdminStatus_Object = MibScalar
sleFaultMonitorDaemonControlAdminStatus = _SleFaultMonitorDaemonControlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 7),
    _SleFaultMonitorDaemonControlAdminStatus_Type()
)
sleFaultMonitorDaemonControlAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlAdminStatus.setStatus("current")


class _SleFaultMonitorDaemonControlCrashAction_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlCrashAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("restart", 2),
          ("switchover", 3))
    )


_SleFaultMonitorDaemonControlCrashAction_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlCrashAction_Object = MibScalar
sleFaultMonitorDaemonControlCrashAction = _SleFaultMonitorDaemonControlCrashAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 8),
    _SleFaultMonitorDaemonControlCrashAction_Type()
)
sleFaultMonitorDaemonControlCrashAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlCrashAction.setStatus("current")


class _SleFaultMonitorDaemonControlTimeoutAction_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlTimeoutAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("restart", 2),
          ("switchover", 3))
    )


_SleFaultMonitorDaemonControlTimeoutAction_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlTimeoutAction_Object = MibScalar
sleFaultMonitorDaemonControlTimeoutAction = _SleFaultMonitorDaemonControlTimeoutAction_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 9),
    _SleFaultMonitorDaemonControlTimeoutAction_Type()
)
sleFaultMonitorDaemonControlTimeoutAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlTimeoutAction.setStatus("current")


class _SleFaultMonitorDaemonControlThreshold_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SleFaultMonitorDaemonControlThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlThreshold_Object = MibScalar
sleFaultMonitorDaemonControlThreshold = _SleFaultMonitorDaemonControlThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 10),
    _SleFaultMonitorDaemonControlThreshold_Type()
)
sleFaultMonitorDaemonControlThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlThreshold.setStatus("current")
_SleFaultMonitorDaemonControlThreshed_Type = Integer32
_SleFaultMonitorDaemonControlThreshed_Object = MibScalar
sleFaultMonitorDaemonControlThreshed = _SleFaultMonitorDaemonControlThreshed_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 11),
    _SleFaultMonitorDaemonControlThreshed_Type()
)
sleFaultMonitorDaemonControlThreshed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlThreshed.setStatus("current")
_SleFaultMonitorDaemonControlStartupThresh_Type = Integer32
_SleFaultMonitorDaemonControlStartupThresh_Object = MibScalar
sleFaultMonitorDaemonControlStartupThresh = _SleFaultMonitorDaemonControlStartupThresh_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 12),
    _SleFaultMonitorDaemonControlStartupThresh_Type()
)
sleFaultMonitorDaemonControlStartupThresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlStartupThresh.setStatus("current")


class _SleFaultMonitorDaemonControlWatchdogAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlWatchdogAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorDaemonControlWatchdogAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlWatchdogAdminStatus_Object = MibScalar
sleFaultMonitorDaemonControlWatchdogAdminStatus = _SleFaultMonitorDaemonControlWatchdogAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 13),
    _SleFaultMonitorDaemonControlWatchdogAdminStatus_Type()
)
sleFaultMonitorDaemonControlWatchdogAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlWatchdogAdminStatus.setStatus("current")


class _SleFaultMonitorDaemonControlWatchdogThreshold_Type(Integer32):
    """Custom type sleFaultMonitorDaemonControlWatchdogThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_SleFaultMonitorDaemonControlWatchdogThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorDaemonControlWatchdogThreshold_Object = MibScalar
sleFaultMonitorDaemonControlWatchdogThreshold = _SleFaultMonitorDaemonControlWatchdogThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 2, 14),
    _SleFaultMonitorDaemonControlWatchdogThreshold_Type()
)
sleFaultMonitorDaemonControlWatchdogThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorDaemonControlWatchdogThreshold.setStatus("current")
_SleFaultMonitorDaemonNotification_ObjectIdentity = ObjectIdentity
sleFaultMonitorDaemonNotification = _SleFaultMonitorDaemonNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 4)
)
_SleFaultMonitor2pointsLinear_ObjectIdentity = ObjectIdentity
sleFaultMonitor2pointsLinear = _SleFaultMonitor2pointsLinear_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3)
)
_SleFaultMonitor2pointsLinearInfo_ObjectIdentity = ObjectIdentity
sleFaultMonitor2pointsLinearInfo = _SleFaultMonitor2pointsLinearInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 1)
)


class _SleFaultMonitor2pointsLinearAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitor2pointsLinearAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitor2pointsLinearAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitor2pointsLinearAdminStatus_Object = MibScalar
sleFaultMonitor2pointsLinearAdminStatus = _SleFaultMonitor2pointsLinearAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 1, 1),
    _SleFaultMonitor2pointsLinearAdminStatus_Type()
)
sleFaultMonitor2pointsLinearAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearAdminStatus.setStatus("current")


class _SleFaultMonitor2pointsLinearInterval_Type(Integer32):
    """Custom type sleFaultMonitor2pointsLinearInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SleFaultMonitor2pointsLinearInterval_Type.__name__ = "Integer32"
_SleFaultMonitor2pointsLinearInterval_Object = MibScalar
sleFaultMonitor2pointsLinearInterval = _SleFaultMonitor2pointsLinearInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 1, 2),
    _SleFaultMonitor2pointsLinearInterval_Type()
)
sleFaultMonitor2pointsLinearInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearInterval.setStatus("current")


class _SleFaultMonitor2pointsLinearThreshold_Type(Integer32):
    """Custom type sleFaultMonitor2pointsLinearThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SleFaultMonitor2pointsLinearThreshold_Type.__name__ = "Integer32"
_SleFaultMonitor2pointsLinearThreshold_Object = MibScalar
sleFaultMonitor2pointsLinearThreshold = _SleFaultMonitor2pointsLinearThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 1, 3),
    _SleFaultMonitor2pointsLinearThreshold_Type()
)
sleFaultMonitor2pointsLinearThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearThreshold.setStatus("current")
_SleFaultMonitor2pointsLinearControl_ObjectIdentity = ObjectIdentity
sleFaultMonitor2pointsLinearControl = _SleFaultMonitor2pointsLinearControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2)
)


class _SleFaultMonitor2pointsLinearControlRequest_Type(Integer32):
    """Custom type sleFaultMonitor2pointsLinearControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("set2PointsLinearAdminStatus", 1),
          ("set2PointsLinearInterval", 2),
          ("set2PointsLinearThreshold", 3))
    )


_SleFaultMonitor2pointsLinearControlRequest_Type.__name__ = "Integer32"
_SleFaultMonitor2pointsLinearControlRequest_Object = MibScalar
sleFaultMonitor2pointsLinearControlRequest = _SleFaultMonitor2pointsLinearControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 1),
    _SleFaultMonitor2pointsLinearControlRequest_Type()
)
sleFaultMonitor2pointsLinearControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlRequest.setStatus("current")
_SleFaultMonitor2pointsLinearControlStatus_Type = SleControlStatusType
_SleFaultMonitor2pointsLinearControlStatus_Object = MibScalar
sleFaultMonitor2pointsLinearControlStatus = _SleFaultMonitor2pointsLinearControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 2),
    _SleFaultMonitor2pointsLinearControlStatus_Type()
)
sleFaultMonitor2pointsLinearControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlStatus.setStatus("current")
_SleFaultMonitor2pointsLinearControlTimer_Type = Unsigned32
_SleFaultMonitor2pointsLinearControlTimer_Object = MibScalar
sleFaultMonitor2pointsLinearControlTimer = _SleFaultMonitor2pointsLinearControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 3),
    _SleFaultMonitor2pointsLinearControlTimer_Type()
)
sleFaultMonitor2pointsLinearControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlTimer.setStatus("current")
_SleFaultMonitor2pointsLinearControlTimeStamp_Type = TimeTicks
_SleFaultMonitor2pointsLinearControlTimeStamp_Object = MibScalar
sleFaultMonitor2pointsLinearControlTimeStamp = _SleFaultMonitor2pointsLinearControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 4),
    _SleFaultMonitor2pointsLinearControlTimeStamp_Type()
)
sleFaultMonitor2pointsLinearControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlTimeStamp.setStatus("current")
_SleFaultMonitor2pointsLinearControlReqResult_Type = SleControlRequestResultType
_SleFaultMonitor2pointsLinearControlReqResult_Object = MibScalar
sleFaultMonitor2pointsLinearControlReqResult = _SleFaultMonitor2pointsLinearControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 5),
    _SleFaultMonitor2pointsLinearControlReqResult_Type()
)
sleFaultMonitor2pointsLinearControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlReqResult.setStatus("current")


class _SleFaultMonitor2pointsLinearControlAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitor2pointsLinearControlAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitor2pointsLinearControlAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitor2pointsLinearControlAdminStatus_Object = MibScalar
sleFaultMonitor2pointsLinearControlAdminStatus = _SleFaultMonitor2pointsLinearControlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 6),
    _SleFaultMonitor2pointsLinearControlAdminStatus_Type()
)
sleFaultMonitor2pointsLinearControlAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitor2pointsLinearControlAdminStatus.setStatus("current")


class _SleFaultMonitor2PonitsLinearControlInterval_Type(Integer32):
    """Custom type sleFaultMonitor2PonitsLinearControlInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SleFaultMonitor2PonitsLinearControlInterval_Type.__name__ = "Integer32"
_SleFaultMonitor2PonitsLinearControlInterval_Object = MibScalar
sleFaultMonitor2PonitsLinearControlInterval = _SleFaultMonitor2PonitsLinearControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 7),
    _SleFaultMonitor2PonitsLinearControlInterval_Type()
)
sleFaultMonitor2PonitsLinearControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitor2PonitsLinearControlInterval.setStatus("current")


class _SleFaultMonitor2PointsLinearControlThreshold_Type(Integer32):
    """Custom type sleFaultMonitor2PointsLinearControlThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SleFaultMonitor2PointsLinearControlThreshold_Type.__name__ = "Integer32"
_SleFaultMonitor2PointsLinearControlThreshold_Object = MibScalar
sleFaultMonitor2PointsLinearControlThreshold = _SleFaultMonitor2PointsLinearControlThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 2, 8),
    _SleFaultMonitor2PointsLinearControlThreshold_Type()
)
sleFaultMonitor2PointsLinearControlThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitor2PointsLinearControlThreshold.setStatus("current")
_SleFaultMonitor2pointsLinearNotification_ObjectIdentity = ObjectIdentity
sleFaultMonitor2pointsLinearNotification = _SleFaultMonitor2pointsLinearNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 3)
)
_SleFaultMonitorRHM_ObjectIdentity = ObjectIdentity
sleFaultMonitorRHM = _SleFaultMonitorRHM_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4)
)
_SleFaultMonitorRHMInfo_ObjectIdentity = ObjectIdentity
sleFaultMonitorRHMInfo = _SleFaultMonitorRHMInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1)
)


class _SleFaultMonitorRHMAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorRHMAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorRHMAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorRHMAdminStatus_Object = MibScalar
sleFaultMonitorRHMAdminStatus = _SleFaultMonitorRHMAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 1),
    _SleFaultMonitorRHMAdminStatus_Type()
)
sleFaultMonitorRHMAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMAdminStatus.setStatus("current")


class _SleFaultMonitorRHMActionType_Type(Integer32):
    """Custom type sleFaultMonitorRHMActionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("switchover", 2))
    )


_SleFaultMonitorRHMActionType_Type.__name__ = "Integer32"
_SleFaultMonitorRHMActionType_Object = MibScalar
sleFaultMonitorRHMActionType = _SleFaultMonitorRHMActionType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 2),
    _SleFaultMonitorRHMActionType_Type()
)
sleFaultMonitorRHMActionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMActionType.setStatus("current")


class _SleFaultMonitorRHMActionThreshold_Type(Integer32):
    """Custom type sleFaultMonitorRHMActionThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1000),
    )


_SleFaultMonitorRHMActionThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorRHMActionThreshold_Object = MibScalar
sleFaultMonitorRHMActionThreshold = _SleFaultMonitorRHMActionThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 3),
    _SleFaultMonitorRHMActionThreshold_Type()
)
sleFaultMonitorRHMActionThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMActionThreshold.setStatus("current")


class _SleFaultMonitorRHMRebootThreshold_Type(Integer32):
    """Custom type sleFaultMonitorRHMRebootThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_SleFaultMonitorRHMRebootThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorRHMRebootThreshold_Object = MibScalar
sleFaultMonitorRHMRebootThreshold = _SleFaultMonitorRHMRebootThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 4),
    _SleFaultMonitorRHMRebootThreshold_Type()
)
sleFaultMonitorRHMRebootThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMRebootThreshold.setStatus("current")


class _SleFaultMonitorRHMRecoveryTime_Type(Integer32):
    """Custom type sleFaultMonitorRHMRecoveryTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 14400),
    )


_SleFaultMonitorRHMRecoveryTime_Type.__name__ = "Integer32"
_SleFaultMonitorRHMRecoveryTime_Object = MibScalar
sleFaultMonitorRHMRecoveryTime = _SleFaultMonitorRHMRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 5),
    _SleFaultMonitorRHMRecoveryTime_Type()
)
sleFaultMonitorRHMRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMRecoveryTime.setStatus("current")
_SleFaultMonitorRHMFaultCounter_Type = Integer32
_SleFaultMonitorRHMFaultCounter_Object = MibScalar
sleFaultMonitorRHMFaultCounter = _SleFaultMonitorRHMFaultCounter_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 6),
    _SleFaultMonitorRHMFaultCounter_Type()
)
sleFaultMonitorRHMFaultCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMFaultCounter.setStatus("current")
_SleFaultMonitorRHMRebootCounter_Type = Integer32
_SleFaultMonitorRHMRebootCounter_Object = MibScalar
sleFaultMonitorRHMRebootCounter = _SleFaultMonitorRHMRebootCounter_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 7),
    _SleFaultMonitorRHMRebootCounter_Type()
)
sleFaultMonitorRHMRebootCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMRebootCounter.setStatus("current")
_SleFaultMonitorRHMInterval_Type = Integer32
_SleFaultMonitorRHMInterval_Object = MibScalar
sleFaultMonitorRHMInterval = _SleFaultMonitorRHMInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 8),
    _SleFaultMonitorRHMInterval_Type()
)
sleFaultMonitorRHMInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMInterval.setStatus("current")
_SleFaultMonitorRHMLiveThreshold_Type = Integer32
_SleFaultMonitorRHMLiveThreshold_Object = MibScalar
sleFaultMonitorRHMLiveThreshold = _SleFaultMonitorRHMLiveThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 1, 9),
    _SleFaultMonitorRHMLiveThreshold_Type()
)
sleFaultMonitorRHMLiveThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMLiveThreshold.setStatus("current")
_SleFaultMonitorRHMHostTable_Object = MibTable
sleFaultMonitorRHMHostTable = _SleFaultMonitorRHMHostTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 2)
)
if mibBuilder.loadTexts:
    sleFaultMonitorRHMHostTable.setStatus("current")
_SleFaultMonitorRHMHostEntry_Object = MibTableRow
sleFaultMonitorRHMHostEntry = _SleFaultMonitorRHMHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 2, 1)
)
sleFaultMonitorRHMHostEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMHostAddr"),
)
if mibBuilder.loadTexts:
    sleFaultMonitorRHMHostEntry.setStatus("current")
_SleFaultMonitorRHMHostAddr_Type = IpAddress
_SleFaultMonitorRHMHostAddr_Object = MibTableColumn
sleFaultMonitorRHMHostAddr = _SleFaultMonitorRHMHostAddr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 2, 1, 1),
    _SleFaultMonitorRHMHostAddr_Type()
)
sleFaultMonitorRHMHostAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMHostAddr.setStatus("current")
_SleFaultMonitorRHMControl_ObjectIdentity = ObjectIdentity
sleFaultMonitorRHMControl = _SleFaultMonitorRHMControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3)
)


class _SleFaultMonitorRHMControlRequest_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("setRHMStatus", 1),
          ("setRHMActionThreshold", 2),
          ("setRHMRebootThreshold", 3),
          ("setInterval", 4),
          ("setLiveThreshold", 5),
          ("clearRHMHost", 6),
          ("setRHMHost", 7))
    )


_SleFaultMonitorRHMControlRequest_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlRequest_Object = MibScalar
sleFaultMonitorRHMControlRequest = _SleFaultMonitorRHMControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 1),
    _SleFaultMonitorRHMControlRequest_Type()
)
sleFaultMonitorRHMControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlRequest.setStatus("current")
_SleFaultMonitorRHMControlStatus_Type = SleControlStatusType
_SleFaultMonitorRHMControlStatus_Object = MibScalar
sleFaultMonitorRHMControlStatus = _SleFaultMonitorRHMControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 2),
    _SleFaultMonitorRHMControlStatus_Type()
)
sleFaultMonitorRHMControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlStatus.setStatus("current")
_SleFaultMonitorRHMControlTimer_Type = Unsigned32
_SleFaultMonitorRHMControlTimer_Object = MibScalar
sleFaultMonitorRHMControlTimer = _SleFaultMonitorRHMControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 3),
    _SleFaultMonitorRHMControlTimer_Type()
)
sleFaultMonitorRHMControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlTimer.setStatus("current")
_SleFaultMonitorRHMControlTimeStamp_Type = TimeTicks
_SleFaultMonitorRHMControlTimeStamp_Object = MibScalar
sleFaultMonitorRHMControlTimeStamp = _SleFaultMonitorRHMControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 4),
    _SleFaultMonitorRHMControlTimeStamp_Type()
)
sleFaultMonitorRHMControlTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlTimeStamp.setStatus("current")
_SleFaultMonitorRHMControlReqResult_Type = SleControlRequestResultType
_SleFaultMonitorRHMControlReqResult_Object = MibScalar
sleFaultMonitorRHMControlReqResult = _SleFaultMonitorRHMControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 5),
    _SleFaultMonitorRHMControlReqResult_Type()
)
sleFaultMonitorRHMControlReqResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlReqResult.setStatus("current")


class _SleFaultMonitorRHMControlAdminStatus_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SleFaultMonitorRHMControlAdminStatus_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlAdminStatus_Object = MibScalar
sleFaultMonitorRHMControlAdminStatus = _SleFaultMonitorRHMControlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 6),
    _SleFaultMonitorRHMControlAdminStatus_Type()
)
sleFaultMonitorRHMControlAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlAdminStatus.setStatus("current")


class _SleFaultMonitorRHMControlActionType_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlActionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("log", 1),
          ("switchover", 2))
    )


_SleFaultMonitorRHMControlActionType_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlActionType_Object = MibScalar
sleFaultMonitorRHMControlActionType = _SleFaultMonitorRHMControlActionType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 7),
    _SleFaultMonitorRHMControlActionType_Type()
)
sleFaultMonitorRHMControlActionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlActionType.setStatus("current")


class _SleFaultMonitorRHMControlActionThreshold_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlActionThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1000),
    )


_SleFaultMonitorRHMControlActionThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlActionThreshold_Object = MibScalar
sleFaultMonitorRHMControlActionThreshold = _SleFaultMonitorRHMControlActionThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 8),
    _SleFaultMonitorRHMControlActionThreshold_Type()
)
sleFaultMonitorRHMControlActionThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlActionThreshold.setStatus("current")


class _SleFaultMonitorRHMControlRebootThreshold_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlRebootThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_SleFaultMonitorRHMControlRebootThreshold_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlRebootThreshold_Object = MibScalar
sleFaultMonitorRHMControlRebootThreshold = _SleFaultMonitorRHMControlRebootThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 9),
    _SleFaultMonitorRHMControlRebootThreshold_Type()
)
sleFaultMonitorRHMControlRebootThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlRebootThreshold.setStatus("current")


class _SleFaultMonitorRHMControlRecoveryTime_Type(Integer32):
    """Custom type sleFaultMonitorRHMControlRecoveryTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 14400),
    )


_SleFaultMonitorRHMControlRecoveryTime_Type.__name__ = "Integer32"
_SleFaultMonitorRHMControlRecoveryTime_Object = MibScalar
sleFaultMonitorRHMControlRecoveryTime = _SleFaultMonitorRHMControlRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 10),
    _SleFaultMonitorRHMControlRecoveryTime_Type()
)
sleFaultMonitorRHMControlRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlRecoveryTime.setStatus("current")
_SleFaultMonitorRHMControlInterval_Type = Integer32
_SleFaultMonitorRHMControlInterval_Object = MibScalar
sleFaultMonitorRHMControlInterval = _SleFaultMonitorRHMControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 11),
    _SleFaultMonitorRHMControlInterval_Type()
)
sleFaultMonitorRHMControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlInterval.setStatus("current")
_SleFaultMonitorRHMControlLiveThreshold_Type = Integer32
_SleFaultMonitorRHMControlLiveThreshold_Object = MibScalar
sleFaultMonitorRHMControlLiveThreshold = _SleFaultMonitorRHMControlLiveThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 12),
    _SleFaultMonitorRHMControlLiveThreshold_Type()
)
sleFaultMonitorRHMControlLiveThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlLiveThreshold.setStatus("current")
_SleFaultMonitorRHMControlHostAddr_Type = IpAddress
_SleFaultMonitorRHMControlHostAddr_Object = MibScalar
sleFaultMonitorRHMControlHostAddr = _SleFaultMonitorRHMControlHostAddr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 3, 13),
    _SleFaultMonitorRHMControlHostAddr_Type()
)
sleFaultMonitorRHMControlHostAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleFaultMonitorRHMControlHostAddr.setStatus("current")
_SleFaultMonitorRHMNotification_ObjectIdentity = ObjectIdentity
sleFaultMonitorRHMNotification = _SleFaultMonitorRHMNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4)
)
_Sle2EthernetCfm_ObjectIdentity = ObjectIdentity
sle2EthernetCfm = _Sle2EthernetCfm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17)
)
_Sle2EthernetCfmBase_ObjectIdentity = ObjectIdentity
sle2EthernetCfmBase = _Sle2EthernetCfmBase_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1)
)
_Sle2EthCfmBaseGroup_ObjectIdentity = ObjectIdentity
sle2EthCfmBaseGroup = _Sle2EthCfmBaseGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 1)
)


class _Sle2EthCfmEnable_Type(Integer32):
    """Custom type sle2EthCfmEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmEnable_Type.__name__ = "Integer32"
_Sle2EthCfmEnable_Object = MibScalar
sle2EthCfmEnable = _Sle2EthCfmEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 1, 1),
    _Sle2EthCfmEnable_Type()
)
sle2EthCfmEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmEnable.setStatus("current")


class _Sle2EthCfmLmmFrameCountSimStatus_Type(Integer32):
    """Custom type sle2EthCfmLmmFrameCountSimStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("stop", 0),
          ("start", 1))
    )


_Sle2EthCfmLmmFrameCountSimStatus_Type.__name__ = "Integer32"
_Sle2EthCfmLmmFrameCountSimStatus_Object = MibScalar
sle2EthCfmLmmFrameCountSimStatus = _Sle2EthCfmLmmFrameCountSimStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 1, 2),
    _Sle2EthCfmLmmFrameCountSimStatus_Type()
)
sle2EthCfmLmmFrameCountSimStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmFrameCountSimStatus.setStatus("current")
_Sle2EthCfmBaseControl_ObjectIdentity = ObjectIdentity
sle2EthCfmBaseControl = _Sle2EthCfmBaseControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2)
)


class _Sle2EthCfmControlRequest_Type(Integer32):
    """Custom type sle2EthCfmControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("setCfmEnable", 1),
          ("setCfmLmmSimulator", 2))
    )


_Sle2EthCfmControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmControlRequest_Object = MibScalar
sle2EthCfmControlRequest = _Sle2EthCfmControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 1),
    _Sle2EthCfmControlRequest_Type()
)
sle2EthCfmControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlRequest.setStatus("current")
_Sle2EthCfmControlStatus_Type = SleControlStatusType
_Sle2EthCfmControlStatus_Object = MibScalar
sle2EthCfmControlStatus = _Sle2EthCfmControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 2),
    _Sle2EthCfmControlStatus_Type()
)
sle2EthCfmControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlStatus.setStatus("current")
_Sle2EthCfmControlTimer_Type = Gauge32
_Sle2EthCfmControlTimer_Object = MibScalar
sle2EthCfmControlTimer = _Sle2EthCfmControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 3),
    _Sle2EthCfmControlTimer_Type()
)
sle2EthCfmControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlTimer.setStatus("current")
_Sle2EthCfmControlTimeStamp_Type = TimeTicks
_Sle2EthCfmControlTimeStamp_Object = MibScalar
sle2EthCfmControlTimeStamp = _Sle2EthCfmControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 4),
    _Sle2EthCfmControlTimeStamp_Type()
)
sle2EthCfmControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlTimeStamp.setStatus("current")
_Sle2EthCfmControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmControlReqResult_Object = MibScalar
sle2EthCfmControlReqResult = _Sle2EthCfmControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 5),
    _Sle2EthCfmControlReqResult_Type()
)
sle2EthCfmControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlReqResult.setStatus("current")


class _Sle2EthCfmControlEnable_Type(Integer32):
    """Custom type sle2EthCfmControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmControlEnable_Type.__name__ = "Integer32"
_Sle2EthCfmControlEnable_Object = MibScalar
sle2EthCfmControlEnable = _Sle2EthCfmControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 6),
    _Sle2EthCfmControlEnable_Type()
)
sle2EthCfmControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlEnable.setStatus("current")


class _Sle2EthCfmControlLmmFrameCountSimStatus_Type(Integer32):
    """Custom type sle2EthCfmControlLmmFrameCountSimStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("stop", 0),
          ("start", 1))
    )


_Sle2EthCfmControlLmmFrameCountSimStatus_Type.__name__ = "Integer32"
_Sle2EthCfmControlLmmFrameCountSimStatus_Object = MibScalar
sle2EthCfmControlLmmFrameCountSimStatus = _Sle2EthCfmControlLmmFrameCountSimStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 2, 7),
    _Sle2EthCfmControlLmmFrameCountSimStatus_Type()
)
sle2EthCfmControlLmmFrameCountSimStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmControlLmmFrameCountSimStatus.setStatus("current")
_Sle2EthCfmBaseNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmBaseNotification = _Sle2EthCfmBaseNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 3)
)
_Sle2EthernetCfmBridge_ObjectIdentity = ObjectIdentity
sle2EthernetCfmBridge = _Sle2EthernetCfmBridge_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2)
)
_Sle2EthCfmBridgeTable_Object = MibTable
sle2EthCfmBridgeTable = _Sle2EthCfmBridgeTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmBridgeTable.setStatus("current")
_Sle2EthCfmBridgeEntry_Object = MibTableRow
sle2EthCfmBridgeEntry = _Sle2EthCfmBridgeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1)
)
sle2EthCfmBridgeEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmBridgeEntry.setStatus("current")


class _Sle2EthCfmBridgeId_Type(Integer32):
    """Custom type sle2EthCfmBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeId_Object = MibTableColumn
sle2EthCfmBridgeId = _Sle2EthCfmBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 1),
    _Sle2EthCfmBridgeId_Type()
)
sle2EthCfmBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeId.setStatus("current")


class _Sle2EthCfmBridgeDefaultMdLevel_Type(Integer32):
    """Custom type sle2EthCfmBridgeDefaultMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmBridgeDefaultMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeDefaultMdLevel_Object = MibTableColumn
sle2EthCfmBridgeDefaultMdLevel = _Sle2EthCfmBridgeDefaultMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 2),
    _Sle2EthCfmBridgeDefaultMdLevel_Type()
)
sle2EthCfmBridgeDefaultMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeDefaultMdLevel.setStatus("current")


class _Sle2EthCfmBridgeDefaultMepId_Type(Integer32):
    """Custom type sle2EthCfmBridgeDefaultMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_Sle2EthCfmBridgeDefaultMepId_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeDefaultMepId_Object = MibTableColumn
sle2EthCfmBridgeDefaultMepId = _Sle2EthCfmBridgeDefaultMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 3),
    _Sle2EthCfmBridgeDefaultMepId_Type()
)
sle2EthCfmBridgeDefaultMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeDefaultMepId.setStatus("current")


class _Sle2EthCfmBridgeAutomatic_Type(Integer32):
    """Custom type sle2EthCfmBridgeAutomatic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmBridgeAutomatic_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeAutomatic_Object = MibTableColumn
sle2EthCfmBridgeAutomatic = _Sle2EthCfmBridgeAutomatic_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 4),
    _Sle2EthCfmBridgeAutomatic_Type()
)
sle2EthCfmBridgeAutomatic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeAutomatic.setStatus("current")


class _Sle2EthCfmBridgeConfigDefaultMdLevel_Type(Integer32):
    """Custom type sle2EthCfmBridgeConfigDefaultMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmBridgeConfigDefaultMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeConfigDefaultMdLevel_Object = MibTableColumn
sle2EthCfmBridgeConfigDefaultMdLevel = _Sle2EthCfmBridgeConfigDefaultMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 5),
    _Sle2EthCfmBridgeConfigDefaultMdLevel_Type()
)
sle2EthCfmBridgeConfigDefaultMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeConfigDefaultMdLevel.setStatus("current")


class _Sle2EthCfmBridgeConfigDefaultMdMipCreation_Type(Integer32):
    """Custom type sle2EthCfmBridgeConfigDefaultMdMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmBridgeConfigDefaultMdMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeConfigDefaultMdMipCreation_Object = MibTableColumn
sle2EthCfmBridgeConfigDefaultMdMipCreation = _Sle2EthCfmBridgeConfigDefaultMdMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 6),
    _Sle2EthCfmBridgeConfigDefaultMdMipCreation_Type()
)
sle2EthCfmBridgeConfigDefaultMdMipCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeConfigDefaultMdMipCreation.setStatus("current")


class _Sle2EthCfmBridgeLtrCacheEnable_Type(Integer32):
    """Custom type sle2EthCfmBridgeLtrCacheEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmBridgeLtrCacheEnable_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeLtrCacheEnable_Object = MibTableColumn
sle2EthCfmBridgeLtrCacheEnable = _Sle2EthCfmBridgeLtrCacheEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 7),
    _Sle2EthCfmBridgeLtrCacheEnable_Type()
)
sle2EthCfmBridgeLtrCacheEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeLtrCacheEnable.setStatus("current")


class _Sle2EthCfmBridgeLtrCacheSize_Type(Integer32):
    """Custom type sle2EthCfmBridgeLtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_Sle2EthCfmBridgeLtrCacheSize_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeLtrCacheSize_Object = MibTableColumn
sle2EthCfmBridgeLtrCacheSize = _Sle2EthCfmBridgeLtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 1, 1, 8),
    _Sle2EthCfmBridgeLtrCacheSize_Type()
)
sle2EthCfmBridgeLtrCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeLtrCacheSize.setStatus("current")
_Sle2EthCfmBridgeControl_ObjectIdentity = ObjectIdentity
sle2EthCfmBridgeControl = _Sle2EthCfmBridgeControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2)
)


class _Sle2EthCfmBridgeControlRequest_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("setCfmBridgeProfile", 1),
          ("setCfmBridgeLtrCache", 2),
          ("clearCfmBridgeLtrChace", 3),
          ("setCfmBridgeAutomatic", 4),
          ("setCfmBridgeConfigDefaultMdLevel", 5))
    )


_Sle2EthCfmBridgeControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlRequest_Object = MibScalar
sle2EthCfmBridgeControlRequest = _Sle2EthCfmBridgeControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 1),
    _Sle2EthCfmBridgeControlRequest_Type()
)
sle2EthCfmBridgeControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlRequest.setStatus("current")
_Sle2EthCfmBridgeControlStatus_Type = SleControlStatusType
_Sle2EthCfmBridgeControlStatus_Object = MibScalar
sle2EthCfmBridgeControlStatus = _Sle2EthCfmBridgeControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 2),
    _Sle2EthCfmBridgeControlStatus_Type()
)
sle2EthCfmBridgeControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlStatus.setStatus("current")
_Sle2EthCfmBridgeControlTimer_Type = Gauge32
_Sle2EthCfmBridgeControlTimer_Object = MibScalar
sle2EthCfmBridgeControlTimer = _Sle2EthCfmBridgeControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 3),
    _Sle2EthCfmBridgeControlTimer_Type()
)
sle2EthCfmBridgeControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlTimer.setStatus("current")
_Sle2EthCfmBridgeControlTimeStamp_Type = TimeTicks
_Sle2EthCfmBridgeControlTimeStamp_Object = MibScalar
sle2EthCfmBridgeControlTimeStamp = _Sle2EthCfmBridgeControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 4),
    _Sle2EthCfmBridgeControlTimeStamp_Type()
)
sle2EthCfmBridgeControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlTimeStamp.setStatus("current")
_Sle2EthCfmBridgeControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmBridgeControlReqResult_Object = MibScalar
sle2EthCfmBridgeControlReqResult = _Sle2EthCfmBridgeControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 5),
    _Sle2EthCfmBridgeControlReqResult_Type()
)
sle2EthCfmBridgeControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlReqResult.setStatus("current")


class _Sle2EthCfmBridgeControlId_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmBridgeControlId_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlId_Object = MibScalar
sle2EthCfmBridgeControlId = _Sle2EthCfmBridgeControlId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 6),
    _Sle2EthCfmBridgeControlId_Type()
)
sle2EthCfmBridgeControlId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlId.setStatus("current")


class _Sle2EthCfmBridgeControlDefaultMdLevel_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlDefaultMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmBridgeControlDefaultMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlDefaultMdLevel_Object = MibScalar
sle2EthCfmBridgeControlDefaultMdLevel = _Sle2EthCfmBridgeControlDefaultMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 7),
    _Sle2EthCfmBridgeControlDefaultMdLevel_Type()
)
sle2EthCfmBridgeControlDefaultMdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlDefaultMdLevel.setStatus("current")


class _Sle2EthCfmBridgeControlDefaultMepId_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlDefaultMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_Sle2EthCfmBridgeControlDefaultMepId_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlDefaultMepId_Object = MibScalar
sle2EthCfmBridgeControlDefaultMepId = _Sle2EthCfmBridgeControlDefaultMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 8),
    _Sle2EthCfmBridgeControlDefaultMepId_Type()
)
sle2EthCfmBridgeControlDefaultMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlDefaultMepId.setStatus("current")


class _Sle2EthCfmBridgeControlAutomatic_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlAutomatic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmBridgeControlAutomatic_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlAutomatic_Object = MibScalar
sle2EthCfmBridgeControlAutomatic = _Sle2EthCfmBridgeControlAutomatic_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 9),
    _Sle2EthCfmBridgeControlAutomatic_Type()
)
sle2EthCfmBridgeControlAutomatic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlAutomatic.setStatus("current")


class _Sle2EthCfmBridgeControlConfigDefaultMdLevel_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlConfigDefaultMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmBridgeControlConfigDefaultMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlConfigDefaultMdLevel_Object = MibScalar
sle2EthCfmBridgeControlConfigDefaultMdLevel = _Sle2EthCfmBridgeControlConfigDefaultMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 10),
    _Sle2EthCfmBridgeControlConfigDefaultMdLevel_Type()
)
sle2EthCfmBridgeControlConfigDefaultMdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlConfigDefaultMdLevel.setStatus("current")


class _Sle2EthCfmBridgeControlConfigDefaultMdMipCreation_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlConfigDefaultMdMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmBridgeControlConfigDefaultMdMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlConfigDefaultMdMipCreation_Object = MibScalar
sle2EthCfmBridgeControlConfigDefaultMdMipCreation = _Sle2EthCfmBridgeControlConfigDefaultMdMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 11),
    _Sle2EthCfmBridgeControlConfigDefaultMdMipCreation_Type()
)
sle2EthCfmBridgeControlConfigDefaultMdMipCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlConfigDefaultMdMipCreation.setStatus("current")


class _Sle2EthCfmBridgeConntrolLtrCacheEnable_Type(Integer32):
    """Custom type sle2EthCfmBridgeConntrolLtrCacheEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmBridgeConntrolLtrCacheEnable_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeConntrolLtrCacheEnable_Object = MibScalar
sle2EthCfmBridgeConntrolLtrCacheEnable = _Sle2EthCfmBridgeConntrolLtrCacheEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 12),
    _Sle2EthCfmBridgeConntrolLtrCacheEnable_Type()
)
sle2EthCfmBridgeConntrolLtrCacheEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeConntrolLtrCacheEnable.setStatus("current")


class _Sle2EthCfmBridgeControlLtrCacheSize_Type(Integer32):
    """Custom type sle2EthCfmBridgeControlLtrCacheSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_Sle2EthCfmBridgeControlLtrCacheSize_Type.__name__ = "Integer32"
_Sle2EthCfmBridgeControlLtrCacheSize_Object = MibScalar
sle2EthCfmBridgeControlLtrCacheSize = _Sle2EthCfmBridgeControlLtrCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 2, 13),
    _Sle2EthCfmBridgeControlLtrCacheSize_Type()
)
sle2EthCfmBridgeControlLtrCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmBridgeControlLtrCacheSize.setStatus("current")
_Sle2EthCfmBridgeNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmBridgeNotification = _Sle2EthCfmBridgeNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3)
)
_Sle2EhternetCfmVlan_ObjectIdentity = ObjectIdentity
sle2EhternetCfmVlan = _Sle2EhternetCfmVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3)
)
_Sle2EthernetCfmVlanConfig_ObjectIdentity = ObjectIdentity
sle2EthernetCfmVlanConfig = _Sle2EthernetCfmVlanConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1)
)
_Sle2EthCfmVlanConfigTable_Object = MibTable
sle2EthCfmVlanConfigTable = _Sle2EthCfmVlanConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigTable.setStatus("current")
_Sle2EthCfmVlanConfigEntry_Object = MibTableRow
sle2EthCfmVlanConfigEntry = _Sle2EthCfmVlanConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 1, 1)
)
sle2EthCfmVlanConfigEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigPrimaryVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigSecondaryVid"),
)
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigEntry.setStatus("current")


class _Sle2EthCfmVlanConfigPrimaryVid_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigPrimaryVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmVlanConfigPrimaryVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigPrimaryVid_Object = MibTableColumn
sle2EthCfmVlanConfigPrimaryVid = _Sle2EthCfmVlanConfigPrimaryVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 1, 1, 1),
    _Sle2EthCfmVlanConfigPrimaryVid_Type()
)
sle2EthCfmVlanConfigPrimaryVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigPrimaryVid.setStatus("current")


class _Sle2EthCfmVlanConfigSecondaryVid_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigSecondaryVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmVlanConfigSecondaryVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigSecondaryVid_Object = MibTableColumn
sle2EthCfmVlanConfigSecondaryVid = _Sle2EthCfmVlanConfigSecondaryVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 1, 1, 2),
    _Sle2EthCfmVlanConfigSecondaryVid_Type()
)
sle2EthCfmVlanConfigSecondaryVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigSecondaryVid.setStatus("current")


class _Sle2EthCfmVlanConfigSecondaryBridgeId_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigSecondaryBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmVlanConfigSecondaryBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigSecondaryBridgeId_Object = MibTableColumn
sle2EthCfmVlanConfigSecondaryBridgeId = _Sle2EthCfmVlanConfigSecondaryBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 1, 1, 3),
    _Sle2EthCfmVlanConfigSecondaryBridgeId_Type()
)
sle2EthCfmVlanConfigSecondaryBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigSecondaryBridgeId.setStatus("current")
_Sle2EthCfmVlanConfigControl_ObjectIdentity = ObjectIdentity
sle2EthCfmVlanConfigControl = _Sle2EthCfmVlanConfigControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2)
)


class _Sle2EthCfmVlanConfigControlRequest_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("addCfmVlanConfVid", 1),
          ("delCfmVlanConfVid", 2))
    )


_Sle2EthCfmVlanConfigControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigControlRequest_Object = MibScalar
sle2EthCfmVlanConfigControlRequest = _Sle2EthCfmVlanConfigControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 1),
    _Sle2EthCfmVlanConfigControlRequest_Type()
)
sle2EthCfmVlanConfigControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlRequest.setStatus("current")
_Sle2EthCfmVlanConfigControlStatus_Type = SleControlStatusType
_Sle2EthCfmVlanConfigControlStatus_Object = MibScalar
sle2EthCfmVlanConfigControlStatus = _Sle2EthCfmVlanConfigControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 2),
    _Sle2EthCfmVlanConfigControlStatus_Type()
)
sle2EthCfmVlanConfigControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlStatus.setStatus("current")
_Sle2EthCfmVlanConfigControlTimer_Type = Gauge32
_Sle2EthCfmVlanConfigControlTimer_Object = MibScalar
sle2EthCfmVlanConfigControlTimer = _Sle2EthCfmVlanConfigControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 3),
    _Sle2EthCfmVlanConfigControlTimer_Type()
)
sle2EthCfmVlanConfigControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlTimer.setStatus("current")
_Sle2EthCfmVlanConfigControlTimeStamp_Type = TimeTicks
_Sle2EthCfmVlanConfigControlTimeStamp_Object = MibScalar
sle2EthCfmVlanConfigControlTimeStamp = _Sle2EthCfmVlanConfigControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 4),
    _Sle2EthCfmVlanConfigControlTimeStamp_Type()
)
sle2EthCfmVlanConfigControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlTimeStamp.setStatus("current")
_Sle2EthCfmVlanConfigControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmVlanConfigControlReqResult_Object = MibScalar
sle2EthCfmVlanConfigControlReqResult = _Sle2EthCfmVlanConfigControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 5),
    _Sle2EthCfmVlanConfigControlReqResult_Type()
)
sle2EthCfmVlanConfigControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlReqResult.setStatus("current")


class _Sle2EthCfmVlanConfigControlPrimaryBridgeId_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigControlPrimaryBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmVlanConfigControlPrimaryBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigControlPrimaryBridgeId_Object = MibScalar
sle2EthCfmVlanConfigControlPrimaryBridgeId = _Sle2EthCfmVlanConfigControlPrimaryBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 6),
    _Sle2EthCfmVlanConfigControlPrimaryBridgeId_Type()
)
sle2EthCfmVlanConfigControlPrimaryBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlPrimaryBridgeId.setStatus("current")


class _Sle2EthCfmVlanConfigControlPrimaryVid_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigControlPrimaryVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmVlanConfigControlPrimaryVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigControlPrimaryVid_Object = MibScalar
sle2EthCfmVlanConfigControlPrimaryVid = _Sle2EthCfmVlanConfigControlPrimaryVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 7),
    _Sle2EthCfmVlanConfigControlPrimaryVid_Type()
)
sle2EthCfmVlanConfigControlPrimaryVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlPrimaryVid.setStatus("current")


class _Sle2EthCfmVlanConfigControlSecondaryBridgeId_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigControlSecondaryBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmVlanConfigControlSecondaryBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigControlSecondaryBridgeId_Object = MibScalar
sle2EthCfmVlanConfigControlSecondaryBridgeId = _Sle2EthCfmVlanConfigControlSecondaryBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 8),
    _Sle2EthCfmVlanConfigControlSecondaryBridgeId_Type()
)
sle2EthCfmVlanConfigControlSecondaryBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlSecondaryBridgeId.setStatus("current")


class _Sle2EthCfmVlanConfigControlSecondaryVid_Type(Integer32):
    """Custom type sle2EthCfmVlanConfigControlSecondaryVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmVlanConfigControlSecondaryVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanConfigControlSecondaryVid_Object = MibScalar
sle2EthCfmVlanConfigControlSecondaryVid = _Sle2EthCfmVlanConfigControlSecondaryVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 2, 9),
    _Sle2EthCfmVlanConfigControlSecondaryVid_Type()
)
sle2EthCfmVlanConfigControlSecondaryVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanConfigControlSecondaryVid.setStatus("current")
_Sle2EthCfmVlanConfigNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmVlanConfigNotification = _Sle2EthCfmVlanConfigNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 3)
)
_Sle2EthernetCfmVlanInfo_ObjectIdentity = ObjectIdentity
sle2EthernetCfmVlanInfo = _Sle2EthernetCfmVlanInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2)
)
_Sle2EthCfmVlanInfoTable_Object = MibTable
sle2EthCfmVlanInfoTable = _Sle2EthCfmVlanInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoTable.setStatus("current")
_Sle2EthCfmVlanInfoEntry_Object = MibTableRow
sle2EthCfmVlanInfoEntry = _Sle2EthCfmVlanInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 1, 1)
)
sle2EthCfmVlanInfoEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoVid"),
)
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoEntry.setStatus("current")


class _Sle2EthCfmVlanInfoVid_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmVlanInfoVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoVid_Object = MibTableColumn
sle2EthCfmVlanInfoVid = _Sle2EthCfmVlanInfoVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 1, 1, 1),
    _Sle2EthCfmVlanInfoVid_Type()
)
sle2EthCfmVlanInfoVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoVid.setStatus("current")


class _Sle2EthCfmVlanInfoPriority_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmVlanInfoPriority_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoPriority_Object = MibTableColumn
sle2EthCfmVlanInfoPriority = _Sle2EthCfmVlanInfoPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 1, 1, 2),
    _Sle2EthCfmVlanInfoPriority_Type()
)
sle2EthCfmVlanInfoPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoPriority.setStatus("current")
_Sle2EthCfmVlanInfoControl_ObjectIdentity = ObjectIdentity
sle2EthCfmVlanInfoControl = _Sle2EthCfmVlanInfoControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2)
)


class _Sle2EthCfmVlanInfoControlRequest_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("setCfmVlanPriority", 1)
    )


_Sle2EthCfmVlanInfoControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoControlRequest_Object = MibScalar
sle2EthCfmVlanInfoControlRequest = _Sle2EthCfmVlanInfoControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 1),
    _Sle2EthCfmVlanInfoControlRequest_Type()
)
sle2EthCfmVlanInfoControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlRequest.setStatus("current")
_Sle2EthCfmVlanInfoControlStatus_Type = SleControlStatusType
_Sle2EthCfmVlanInfoControlStatus_Object = MibScalar
sle2EthCfmVlanInfoControlStatus = _Sle2EthCfmVlanInfoControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 2),
    _Sle2EthCfmVlanInfoControlStatus_Type()
)
sle2EthCfmVlanInfoControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlStatus.setStatus("current")
_Sle2EthCfmVlanInfoControlTimer_Type = Gauge32
_Sle2EthCfmVlanInfoControlTimer_Object = MibScalar
sle2EthCfmVlanInfoControlTimer = _Sle2EthCfmVlanInfoControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 3),
    _Sle2EthCfmVlanInfoControlTimer_Type()
)
sle2EthCfmVlanInfoControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlTimer.setStatus("current")
_Sle2EthCfmVlanInfoControlTimeStamp_Type = TimeTicks
_Sle2EthCfmVlanInfoControlTimeStamp_Object = MibScalar
sle2EthCfmVlanInfoControlTimeStamp = _Sle2EthCfmVlanInfoControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 4),
    _Sle2EthCfmVlanInfoControlTimeStamp_Type()
)
sle2EthCfmVlanInfoControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlTimeStamp.setStatus("current")
_Sle2EthCfmVlanInfoControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmVlanInfoControlReqResult_Object = MibScalar
sle2EthCfmVlanInfoControlReqResult = _Sle2EthCfmVlanInfoControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 5),
    _Sle2EthCfmVlanInfoControlReqResult_Type()
)
sle2EthCfmVlanInfoControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlReqResult.setStatus("current")


class _Sle2EthCfmVlanInfoControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmVlanInfoControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoControlBridgeId_Object = MibScalar
sle2EthCfmVlanInfoControlBridgeId = _Sle2EthCfmVlanInfoControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 6),
    _Sle2EthCfmVlanInfoControlBridgeId_Type()
)
sle2EthCfmVlanInfoControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlBridgeId.setStatus("current")


class _Sle2EthCfmVlanInfoControlVid_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoControlVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4094),
    )


_Sle2EthCfmVlanInfoControlVid_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoControlVid_Object = MibScalar
sle2EthCfmVlanInfoControlVid = _Sle2EthCfmVlanInfoControlVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 7),
    _Sle2EthCfmVlanInfoControlVid_Type()
)
sle2EthCfmVlanInfoControlVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlVid.setStatus("current")


class _Sle2EthCfmVlanInfoControlPriority_Type(Integer32):
    """Custom type sle2EthCfmVlanInfoControlPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmVlanInfoControlPriority_Type.__name__ = "Integer32"
_Sle2EthCfmVlanInfoControlPriority_Object = MibScalar
sle2EthCfmVlanInfoControlPriority = _Sle2EthCfmVlanInfoControlPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 2, 8),
    _Sle2EthCfmVlanInfoControlPriority_Type()
)
sle2EthCfmVlanInfoControlPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmVlanInfoControlPriority.setStatus("current")
_Sle2EthCfmVlanInfoNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmVlanInfoNotification = _Sle2EthCfmVlanInfoNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 3)
)
_Sle2EthernetCfmDefMdLevelEntry_ObjectIdentity = ObjectIdentity
sle2EthernetCfmDefMdLevelEntry = _Sle2EthernetCfmDefMdLevelEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4)
)
_Sle2EthCfmDefMdLevelEntryTable_Object = MibTable
sle2EthCfmDefMdLevelEntryTable = _Sle2EthCfmDefMdLevelEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryTable.setStatus("current")
_Sle2EthCfmDefMdLevelEntryEntry_Object = MibTableRow
sle2EthCfmDefMdLevelEntryEntry = _Sle2EthCfmDefMdLevelEntryEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 1, 1)
)
sle2EthCfmDefMdLevelEntryEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryVid"),
)
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryEntry.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryVid_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmDefMdLevelEntryVid_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryVid_Object = MibTableColumn
sle2EthCfmDefMdLevelEntryVid = _Sle2EthCfmDefMdLevelEntryVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 1, 1, 1),
    _Sle2EthCfmDefMdLevelEntryVid_Type()
)
sle2EthCfmDefMdLevelEntryVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryVid.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryLevel_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmDefMdLevelEntryLevel_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryLevel_Object = MibTableColumn
sle2EthCfmDefMdLevelEntryLevel = _Sle2EthCfmDefMdLevelEntryLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 1, 1, 2),
    _Sle2EthCfmDefMdLevelEntryLevel_Type()
)
sle2EthCfmDefMdLevelEntryLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryLevel.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryMipCreation_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmDefMdLevelEntryMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryMipCreation_Object = MibTableColumn
sle2EthCfmDefMdLevelEntryMipCreation = _Sle2EthCfmDefMdLevelEntryMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 1, 1, 3),
    _Sle2EthCfmDefMdLevelEntryMipCreation_Type()
)
sle2EthCfmDefMdLevelEntryMipCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryMipCreation.setStatus("current")
_Sle2EthCfmDefMdLevelEntryControl_ObjectIdentity = ObjectIdentity
sle2EthCfmDefMdLevelEntryControl = _Sle2EthCfmDefMdLevelEntryControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2)
)


class _Sle2EthCfmDefMdLevelEntryControlRequest_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("setCfmDefMdLevelEntry", 1),
          ("clearCfmDefMdLevelEntry", 2))
    )


_Sle2EthCfmDefMdLevelEntryControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryControlRequest_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlRequest = _Sle2EthCfmDefMdLevelEntryControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 1),
    _Sle2EthCfmDefMdLevelEntryControlRequest_Type()
)
sle2EthCfmDefMdLevelEntryControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlRequest.setStatus("current")
_Sle2EthCfmDefMdLevelEntryControlStatus_Type = SleControlStatusType
_Sle2EthCfmDefMdLevelEntryControlStatus_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlStatus = _Sle2EthCfmDefMdLevelEntryControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 2),
    _Sle2EthCfmDefMdLevelEntryControlStatus_Type()
)
sle2EthCfmDefMdLevelEntryControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlStatus.setStatus("current")
_Sle2EthCfmDefMdLevelEntryControlTimer_Type = Gauge32
_Sle2EthCfmDefMdLevelEntryControlTimer_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlTimer = _Sle2EthCfmDefMdLevelEntryControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 3),
    _Sle2EthCfmDefMdLevelEntryControlTimer_Type()
)
sle2EthCfmDefMdLevelEntryControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlTimer.setStatus("current")
_Sle2EthCfmDefMdLevelEntryControlTimeStamp_Type = TimeTicks
_Sle2EthCfmDefMdLevelEntryControlTimeStamp_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlTimeStamp = _Sle2EthCfmDefMdLevelEntryControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 4),
    _Sle2EthCfmDefMdLevelEntryControlTimeStamp_Type()
)
sle2EthCfmDefMdLevelEntryControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlTimeStamp.setStatus("current")
_Sle2EthCfmDefMdLevelEntryControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmDefMdLevelEntryControlReqResult_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlReqResult = _Sle2EthCfmDefMdLevelEntryControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 5),
    _Sle2EthCfmDefMdLevelEntryControlReqResult_Type()
)
sle2EthCfmDefMdLevelEntryControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlReqResult.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmDefMdLevelEntryControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryControlBridgeId_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlBridgeId = _Sle2EthCfmDefMdLevelEntryControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 6),
    _Sle2EthCfmDefMdLevelEntryControlBridgeId_Type()
)
sle2EthCfmDefMdLevelEntryControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlBridgeId.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryControlVid_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryControlVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmDefMdLevelEntryControlVid_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryControlVid_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlVid = _Sle2EthCfmDefMdLevelEntryControlVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 7),
    _Sle2EthCfmDefMdLevelEntryControlVid_Type()
)
sle2EthCfmDefMdLevelEntryControlVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlVid.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryControlLevel_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmDefMdLevelEntryControlLevel_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryControlLevel_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlLevel = _Sle2EthCfmDefMdLevelEntryControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 8),
    _Sle2EthCfmDefMdLevelEntryControlLevel_Type()
)
sle2EthCfmDefMdLevelEntryControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlLevel.setStatus("current")


class _Sle2EthCfmDefMdLevelEntryControlMipCreation_Type(Integer32):
    """Custom type sle2EthCfmDefMdLevelEntryControlMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmDefMdLevelEntryControlMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmDefMdLevelEntryControlMipCreation_Object = MibScalar
sle2EthCfmDefMdLevelEntryControlMipCreation = _Sle2EthCfmDefMdLevelEntryControlMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 2, 9),
    _Sle2EthCfmDefMdLevelEntryControlMipCreation_Type()
)
sle2EthCfmDefMdLevelEntryControlMipCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryControlMipCreation.setStatus("current")
_Sle2EthCfmDefMdLevelEntryNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmDefMdLevelEntryNotification = _Sle2EthCfmDefMdLevelEntryNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 3)
)
_Sle2EthernetCfmMd_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMd = _Sle2EthernetCfmMd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5)
)
_Sle2EthCfmMdTable_Object = MibTable
sle2EthCfmMdTable = _Sle2EthCfmMdTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmMdTable.setStatus("current")
_Sle2EthCfmMdEntry_Object = MibTableRow
sle2EthCfmMdEntry = _Sle2EthCfmMdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1, 1)
)
sle2EthCfmMdEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
)
if mibBuilder.loadTexts:
    sle2EthCfmMdEntry.setStatus("current")
_Sle2EthCfmMdName_Type = OctetString
_Sle2EthCfmMdName_Object = MibTableColumn
sle2EthCfmMdName = _Sle2EthCfmMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1, 1, 1),
    _Sle2EthCfmMdName_Type()
)
sle2EthCfmMdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMdName.setStatus("current")


class _Sle2EthCfmMdType_Type(Integer32):
    """Custom type sle2EthCfmMdType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              32)
        )
    )
    namedValues = NamedValues(
        *(("noName", 1),
          ("dnsBased", 2),
          ("mac", 3),
          ("characterString", 4),
          ("ituT", 32))
    )


_Sle2EthCfmMdType_Type.__name__ = "Integer32"
_Sle2EthCfmMdType_Object = MibTableColumn
sle2EthCfmMdType = _Sle2EthCfmMdType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1, 1, 2),
    _Sle2EthCfmMdType_Type()
)
sle2EthCfmMdType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMdType.setStatus("current")


class _Sle2EthCfmMdLevel_Type(Integer32):
    """Custom type sle2EthCfmMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmMdLevel_Object = MibTableColumn
sle2EthCfmMdLevel = _Sle2EthCfmMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1, 1, 3),
    _Sle2EthCfmMdLevel_Type()
)
sle2EthCfmMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMdLevel.setStatus("current")


class _Sle2EthCfmMdMipCreation_Type(Integer32):
    """Custom type sle2EthCfmMdMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmMdMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmMdMipCreation_Object = MibTableColumn
sle2EthCfmMdMipCreation = _Sle2EthCfmMdMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 1, 1, 4),
    _Sle2EthCfmMdMipCreation_Type()
)
sle2EthCfmMdMipCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMdMipCreation.setStatus("current")
_Sle2EthCfmMdControl_ObjectIdentity = ObjectIdentity
sle2EthCfmMdControl = _Sle2EthCfmMdControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2)
)


class _Sle2EthCfmMdControlRequest_Type(Integer32):
    """Custom type sle2EthCfmMdControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMd", 1),
          ("destoryCfmMd", 2))
    )


_Sle2EthCfmMdControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmMdControlRequest_Object = MibScalar
sle2EthCfmMdControlRequest = _Sle2EthCfmMdControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 1),
    _Sle2EthCfmMdControlRequest_Type()
)
sle2EthCfmMdControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlRequest.setStatus("current")
_Sle2EthCfmMdControlStatus_Type = SleControlStatusType
_Sle2EthCfmMdControlStatus_Object = MibScalar
sle2EthCfmMdControlStatus = _Sle2EthCfmMdControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 2),
    _Sle2EthCfmMdControlStatus_Type()
)
sle2EthCfmMdControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlStatus.setStatus("current")
_Sle2EthCfmMdControlTimer_Type = Gauge32
_Sle2EthCfmMdControlTimer_Object = MibScalar
sle2EthCfmMdControlTimer = _Sle2EthCfmMdControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 3),
    _Sle2EthCfmMdControlTimer_Type()
)
sle2EthCfmMdControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlTimer.setStatus("current")
_Sle2EthCfmMdControlTimeStamp_Type = TimeTicks
_Sle2EthCfmMdControlTimeStamp_Object = MibScalar
sle2EthCfmMdControlTimeStamp = _Sle2EthCfmMdControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 4),
    _Sle2EthCfmMdControlTimeStamp_Type()
)
sle2EthCfmMdControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlTimeStamp.setStatus("current")
_Sle2EthCfmMdControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmMdControlReqResult_Object = MibScalar
sle2EthCfmMdControlReqResult = _Sle2EthCfmMdControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 5),
    _Sle2EthCfmMdControlReqResult_Type()
)
sle2EthCfmMdControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlReqResult.setStatus("current")


class _Sle2EthCfmMdControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmMdControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmMdControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmMdControlBridgeId_Object = MibScalar
sle2EthCfmMdControlBridgeId = _Sle2EthCfmMdControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 6),
    _Sle2EthCfmMdControlBridgeId_Type()
)
sle2EthCfmMdControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlBridgeId.setStatus("current")


class _Sle2EthCfmMdControlType_Type(Integer32):
    """Custom type sle2EthCfmMdControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              32)
        )
    )
    namedValues = NamedValues(
        *(("noName", 1),
          ("dnsBased", 2),
          ("mac", 3),
          ("characterString", 4),
          ("ituT", 32))
    )


_Sle2EthCfmMdControlType_Type.__name__ = "Integer32"
_Sle2EthCfmMdControlType_Object = MibScalar
sle2EthCfmMdControlType = _Sle2EthCfmMdControlType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 7),
    _Sle2EthCfmMdControlType_Type()
)
sle2EthCfmMdControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlType.setStatus("current")
_Sle2EthCfmMdControlName_Type = OctetString
_Sle2EthCfmMdControlName_Object = MibScalar
sle2EthCfmMdControlName = _Sle2EthCfmMdControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 8),
    _Sle2EthCfmMdControlName_Type()
)
sle2EthCfmMdControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlName.setStatus("current")


class _Sle2EthCfmMdControlLevel_Type(Integer32):
    """Custom type sle2EthCfmMdControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMdControlLevel_Type.__name__ = "Integer32"
_Sle2EthCfmMdControlLevel_Object = MibScalar
sle2EthCfmMdControlLevel = _Sle2EthCfmMdControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 9),
    _Sle2EthCfmMdControlLevel_Type()
)
sle2EthCfmMdControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlLevel.setStatus("current")


class _Sle2EthCfmMdControlMipCreation_Type(Integer32):
    """Custom type sle2EthCfmMdControlMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3))
    )


_Sle2EthCfmMdControlMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmMdControlMipCreation_Object = MibScalar
sle2EthCfmMdControlMipCreation = _Sle2EthCfmMdControlMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 2, 10),
    _Sle2EthCfmMdControlMipCreation_Type()
)
sle2EthCfmMdControlMipCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMdControlMipCreation.setStatus("current")
_Sle2EthCfmMdNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmMdNotification = _Sle2EthCfmMdNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 3)
)
_Sle2EthernetCfmMa_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMa = _Sle2EthernetCfmMa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6)
)
_Sle2EthCfmMaTable_Object = MibTable
sle2EthCfmMaTable = _Sle2EthCfmMaTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmMaTable.setStatus("current")
_Sle2EthCfmMaEntry_Object = MibTableRow
sle2EthCfmMaEntry = _Sle2EthCfmMaEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1)
)
sle2EthCfmMaEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaName"),
)
if mibBuilder.loadTexts:
    sle2EthCfmMaEntry.setStatus("current")
_Sle2EthCfmMaName_Type = OctetString
_Sle2EthCfmMaName_Object = MibTableColumn
sle2EthCfmMaName = _Sle2EthCfmMaName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 1),
    _Sle2EthCfmMaName_Type()
)
sle2EthCfmMaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaName.setStatus("current")


class _Sle2EthCfmMaVid_Type(Integer32):
    """Custom type sle2EthCfmMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmMaVid_Object = MibTableColumn
sle2EthCfmMaVid = _Sle2EthCfmMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 2),
    _Sle2EthCfmMaVid_Type()
)
sle2EthCfmMaVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaVid.setStatus("current")


class _Sle2EthCfmMaType_Type(Integer32):
    """Custom type sle2EthCfmMaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("primaryVid", 1),
          ("string", 2),
          ("integer", 3),
          ("vpnId", 4))
    )


_Sle2EthCfmMaType_Type.__name__ = "Integer32"
_Sle2EthCfmMaType_Object = MibTableColumn
sle2EthCfmMaType = _Sle2EthCfmMaType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 3),
    _Sle2EthCfmMaType_Type()
)
sle2EthCfmMaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaType.setStatus("current")


class _Sle2EthCfmMaMipCreation_Type(Integer32):
    """Custom type sle2EthCfmMaMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3),
          ("defer", 4))
    )


_Sle2EthCfmMaMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmMaMipCreation_Object = MibTableColumn
sle2EthCfmMaMipCreation = _Sle2EthCfmMaMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 4),
    _Sle2EthCfmMaMipCreation_Type()
)
sle2EthCfmMaMipCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaMipCreation.setStatus("current")


class _Sle2EthCfmMaCcInterval_Type(Integer32):
    """Custom type sle2EthCfmMaCcInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_Sle2EthCfmMaCcInterval_Type.__name__ = "Integer32"
_Sle2EthCfmMaCcInterval_Object = MibTableColumn
sle2EthCfmMaCcInterval = _Sle2EthCfmMaCcInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 5),
    _Sle2EthCfmMaCcInterval_Type()
)
sle2EthCfmMaCcInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaCcInterval.setStatus("current")


class _Sle2EthCfmMaElmi_Type(Integer32):
    """Custom type sle2EthCfmMaElmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmMaElmi_Type.__name__ = "Integer32"
_Sle2EthCfmMaElmi_Object = MibTableColumn
sle2EthCfmMaElmi = _Sle2EthCfmMaElmi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 6),
    _Sle2EthCfmMaElmi_Type()
)
sle2EthCfmMaElmi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaElmi.setStatus("current")


class _Sle2EthCfmMaConnectivityStatus_Type(Integer32):
    """Custom type sle2EthCfmMaConnectivityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("unknow", 1),
          ("active", 2),
          ("partiallyActive", 3),
          ("notActive", 4),
          ("error", 5))
    )


_Sle2EthCfmMaConnectivityStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMaConnectivityStatus_Object = MibTableColumn
sle2EthCfmMaConnectivityStatus = _Sle2EthCfmMaConnectivityStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 7),
    _Sle2EthCfmMaConnectivityStatus_Type()
)
sle2EthCfmMaConnectivityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaConnectivityStatus.setStatus("current")
_Sle2EthCfmMaConfiguredRmepCount_Type = Integer32
_Sle2EthCfmMaConfiguredRmepCount_Object = MibTableColumn
sle2EthCfmMaConfiguredRmepCount = _Sle2EthCfmMaConfiguredRmepCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 8),
    _Sle2EthCfmMaConfiguredRmepCount_Type()
)
sle2EthCfmMaConfiguredRmepCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaConfiguredRmepCount.setStatus("current")
_Sle2EthCfmMaConvergedRmepCount_Type = Integer32
_Sle2EthCfmMaConvergedRmepCount_Object = MibTableColumn
sle2EthCfmMaConvergedRmepCount = _Sle2EthCfmMaConvergedRmepCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 1, 1, 9),
    _Sle2EthCfmMaConvergedRmepCount_Type()
)
sle2EthCfmMaConvergedRmepCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMaConvergedRmepCount.setStatus("current")
_Sle2EthCfmMaControl_ObjectIdentity = ObjectIdentity
sle2EthCfmMaControl = _Sle2EthCfmMaControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2)
)


class _Sle2EthCfmMaControlRequest_Type(Integer32):
    """Custom type sle2EthCfmMaControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("createCfmMa", 1),
          ("destoryCfmMa", 2),
          ("setCfmCcInterval", 3),
          ("setCfmElmi", 4))
    )


_Sle2EthCfmMaControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlRequest_Object = MibScalar
sle2EthCfmMaControlRequest = _Sle2EthCfmMaControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 1),
    _Sle2EthCfmMaControlRequest_Type()
)
sle2EthCfmMaControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlRequest.setStatus("current")
_Sle2EthCfmMaControlStatus_Type = SleControlStatusType
_Sle2EthCfmMaControlStatus_Object = MibScalar
sle2EthCfmMaControlStatus = _Sle2EthCfmMaControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 2),
    _Sle2EthCfmMaControlStatus_Type()
)
sle2EthCfmMaControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlStatus.setStatus("current")
_Sle2EthCfmMaControlTimer_Type = Gauge32
_Sle2EthCfmMaControlTimer_Object = MibScalar
sle2EthCfmMaControlTimer = _Sle2EthCfmMaControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 3),
    _Sle2EthCfmMaControlTimer_Type()
)
sle2EthCfmMaControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlTimer.setStatus("current")
_Sle2EthCfmMaControlTimeStamp_Type = TimeTicks
_Sle2EthCfmMaControlTimeStamp_Object = MibScalar
sle2EthCfmMaControlTimeStamp = _Sle2EthCfmMaControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 4),
    _Sle2EthCfmMaControlTimeStamp_Type()
)
sle2EthCfmMaControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlTimeStamp.setStatus("current")
_Sle2EthCfmMaControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmMaControlReqResult_Object = MibScalar
sle2EthCfmMaControlReqResult = _Sle2EthCfmMaControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 5),
    _Sle2EthCfmMaControlReqResult_Type()
)
sle2EthCfmMaControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlReqResult.setStatus("current")


class _Sle2EthCfmMaControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmMaControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmMaControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlBridgeId_Object = MibScalar
sle2EthCfmMaControlBridgeId = _Sle2EthCfmMaControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 6),
    _Sle2EthCfmMaControlBridgeId_Type()
)
sle2EthCfmMaControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlBridgeId.setStatus("current")
_Sle2EthCfmMaControlMdName_Type = OctetString
_Sle2EthCfmMaControlMdName_Object = MibScalar
sle2EthCfmMaControlMdName = _Sle2EthCfmMaControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 7),
    _Sle2EthCfmMaControlMdName_Type()
)
sle2EthCfmMaControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlMdName.setStatus("current")
_Sle2EthCfmMaControlName_Type = OctetString
_Sle2EthCfmMaControlName_Object = MibScalar
sle2EthCfmMaControlName = _Sle2EthCfmMaControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 8),
    _Sle2EthCfmMaControlName_Type()
)
sle2EthCfmMaControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlName.setStatus("current")


class _Sle2EthCfmMaControlType_Type(Integer32):
    """Custom type sle2EthCfmMaControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("primaryVid", 1),
          ("string", 2),
          ("integer", 3),
          ("vpnId", 4))
    )


_Sle2EthCfmMaControlType_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlType_Object = MibScalar
sle2EthCfmMaControlType = _Sle2EthCfmMaControlType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 9),
    _Sle2EthCfmMaControlType_Type()
)
sle2EthCfmMaControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlType.setStatus("current")


class _Sle2EthCfmMaControlVid_Type(Integer32):
    """Custom type sle2EthCfmMaControlVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMaControlVid_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlVid_Object = MibScalar
sle2EthCfmMaControlVid = _Sle2EthCfmMaControlVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 10),
    _Sle2EthCfmMaControlVid_Type()
)
sle2EthCfmMaControlVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlVid.setStatus("current")


class _Sle2EthCfmMaControlMipCreation_Type(Integer32):
    """Custom type sle2EthCfmMaControlMipCreation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("default", 2),
          ("explicit", 3),
          ("defer", 4))
    )


_Sle2EthCfmMaControlMipCreation_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlMipCreation_Object = MibScalar
sle2EthCfmMaControlMipCreation = _Sle2EthCfmMaControlMipCreation_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 11),
    _Sle2EthCfmMaControlMipCreation_Type()
)
sle2EthCfmMaControlMipCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlMipCreation.setStatus("current")


class _Sle2EthCfmMaControlCcmInterval_Type(Integer32):
    """Custom type sle2EthCfmMaControlCcmInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_Sle2EthCfmMaControlCcmInterval_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlCcmInterval_Object = MibScalar
sle2EthCfmMaControlCcmInterval = _Sle2EthCfmMaControlCcmInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 12),
    _Sle2EthCfmMaControlCcmInterval_Type()
)
sle2EthCfmMaControlCcmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlCcmInterval.setStatus("current")


class _Sle2EthCfmMaControlElmi_Type(Integer32):
    """Custom type sle2EthCfmMaControlElmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmMaControlElmi_Type.__name__ = "Integer32"
_Sle2EthCfmMaControlElmi_Object = MibScalar
sle2EthCfmMaControlElmi = _Sle2EthCfmMaControlElmi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 2, 13),
    _Sle2EthCfmMaControlElmi_Type()
)
sle2EthCfmMaControlElmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMaControlElmi.setStatus("current")
_Sle2EthCfmMaNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmMaNotification = _Sle2EthCfmMaNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 3)
)
_Sle2EthernetCfmMep_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMep = _Sle2EthernetCfmMep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7)
)
_Sle2EthernetCfmMepInfo_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMepInfo = _Sle2EthernetCfmMepInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1)
)
_Sle2EthCfmMepInfoTable_Object = MibTable
sle2EthCfmMepInfoTable = _Sle2EthCfmMepInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoTable.setStatus("current")
_Sle2EthCfmMepInfoEntry_Object = MibTableRow
sle2EthCfmMepInfoEntry = _Sle2EthCfmMepInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1)
)
sle2EthCfmMepInfoEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoEntry.setStatus("current")


class _Sle2EthCfmMepInfoId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoId_Object = MibTableColumn
sle2EthCfmMepInfoId = _Sle2EthCfmMepInfoId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 1),
    _Sle2EthCfmMepInfoId_Type()
)
sle2EthCfmMepInfoId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoId.setStatus("current")
_Sle2EthCfmMepInfoIfindex_Type = Integer32
_Sle2EthCfmMepInfoIfindex_Object = MibTableColumn
sle2EthCfmMepInfoIfindex = _Sle2EthCfmMepInfoIfindex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 2),
    _Sle2EthCfmMepInfoIfindex_Type()
)
sle2EthCfmMepInfoIfindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoIfindex.setStatus("current")


class _Sle2EthCfmMepInfoLocalVid_Type(Integer32):
    """Custom type sle2EthCfmMepInfoLocalVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMepInfoLocalVid_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoLocalVid_Object = MibTableColumn
sle2EthCfmMepInfoLocalVid = _Sle2EthCfmMepInfoLocalVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 3),
    _Sle2EthCfmMepInfoLocalVid_Type()
)
sle2EthCfmMepInfoLocalVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoLocalVid.setStatus("current")


class _Sle2EthCfmMepInfoDirection_Type(Integer32):
    """Custom type sle2EthCfmMepInfoDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_Sle2EthCfmMepInfoDirection_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoDirection_Object = MibTableColumn
sle2EthCfmMepInfoDirection = _Sle2EthCfmMepInfoDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 4),
    _Sle2EthCfmMepInfoDirection_Type()
)
sle2EthCfmMepInfoDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoDirection.setStatus("current")


class _Sle2EthCfmMepInfoActive_Type(Integer32):
    """Custom type sle2EthCfmMepInfoActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoActive_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoActive_Object = MibTableColumn
sle2EthCfmMepInfoActive = _Sle2EthCfmMepInfoActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 5),
    _Sle2EthCfmMepInfoActive_Type()
)
sle2EthCfmMepInfoActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoActive.setStatus("current")


class _Sle2EthCfmMepInfoUNI_Type(Integer32):
    """Custom type sle2EthCfmMepInfoUNI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoUNI_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoUNI_Object = MibTableColumn
sle2EthCfmMepInfoUNI = _Sle2EthCfmMepInfoUNI_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 6),
    _Sle2EthCfmMepInfoUNI_Type()
)
sle2EthCfmMepInfoUNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoUNI.setStatus("current")


class _Sle2EthCfmMepInfoCcmStatus_Type(Integer32):
    """Custom type sle2EthCfmMepInfoCcmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoCcmStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoCcmStatus_Object = MibTableColumn
sle2EthCfmMepInfoCcmStatus = _Sle2EthCfmMepInfoCcmStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 7),
    _Sle2EthCfmMepInfoCcmStatus_Type()
)
sle2EthCfmMepInfoCcmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoCcmStatus.setStatus("current")


class _Sle2EthCfmMepInfoCcmType_Type(Integer32):
    """Custom type sle2EthCfmMepInfoCcmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_Sle2EthCfmMepInfoCcmType_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoCcmType_Object = MibTableColumn
sle2EthCfmMepInfoCcmType = _Sle2EthCfmMepInfoCcmType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 8),
    _Sle2EthCfmMepInfoCcmType_Type()
)
sle2EthCfmMepInfoCcmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoCcmType.setStatus("current")


class _Sle2EthCfmMepInfoCcmRmepId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoCcmRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoCcmRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoCcmRmepId_Object = MibTableColumn
sle2EthCfmMepInfoCcmRmepId = _Sle2EthCfmMepInfoCcmRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 9),
    _Sle2EthCfmMepInfoCcmRmepId_Type()
)
sle2EthCfmMepInfoCcmRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoCcmRmepId.setStatus("current")
_Sle2EthCfmMepInfoLocalMacAddr_Type = OctetString
_Sle2EthCfmMepInfoLocalMacAddr_Object = MibTableColumn
sle2EthCfmMepInfoLocalMacAddr = _Sle2EthCfmMepInfoLocalMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 10),
    _Sle2EthCfmMepInfoLocalMacAddr_Type()
)
sle2EthCfmMepInfoLocalMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoLocalMacAddr.setStatus("current")


class _Sle2EthCfmMepInfoRdi_Type(Integer32):
    """Custom type sle2EthCfmMepInfoRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoRdi_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoRdi_Object = MibTableColumn
sle2EthCfmMepInfoRdi = _Sle2EthCfmMepInfoRdi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 11),
    _Sle2EthCfmMepInfoRdi_Type()
)
sle2EthCfmMepInfoRdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoRdi.setStatus("current")


class _Sle2EthCfmMepInfoService_Type(Integer32):
    """Custom type sle2EthCfmMepInfoService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inService", 0),
          ("outOfService", 1))
    )


_Sle2EthCfmMepInfoService_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoService_Object = MibTableColumn
sle2EthCfmMepInfoService = _Sle2EthCfmMepInfoService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 12),
    _Sle2EthCfmMepInfoService_Type()
)
sle2EthCfmMepInfoService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoService.setStatus("current")


class _Sle2EthCfmMepInfoLckLevel_Type(Integer32):
    """Custom type sle2EthCfmMepInfoLckLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepInfoLckLevel_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoLckLevel_Object = MibTableColumn
sle2EthCfmMepInfoLckLevel = _Sle2EthCfmMepInfoLckLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 13),
    _Sle2EthCfmMepInfoLckLevel_Type()
)
sle2EthCfmMepInfoLckLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoLckLevel.setStatus("current")


class _Sle2EthCfmMepInfoDlmState_Type(Integer32):
    """Custom type sle2EthCfmMepInfoDlmState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmMepInfoDlmState_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoDlmState_Object = MibTableColumn
sle2EthCfmMepInfoDlmState = _Sle2EthCfmMepInfoDlmState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 14),
    _Sle2EthCfmMepInfoDlmState_Type()
)
sle2EthCfmMepInfoDlmState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoDlmState.setStatus("current")


class _Sle2EthCfmMepInfoDlmRmepId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoDlmRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoDlmRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoDlmRmepId_Object = MibTableColumn
sle2EthCfmMepInfoDlmRmepId = _Sle2EthCfmMepInfoDlmRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 15),
    _Sle2EthCfmMepInfoDlmRmepId_Type()
)
sle2EthCfmMepInfoDlmRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoDlmRmepId.setStatus("current")


class _Sle2EthCfmMepInfoConnectivityStatus_Type(Integer32):
    """Custom type sle2EthCfmMepInfoConnectivityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("isolated", 1),
          ("fully", 2),
          ("partially", 3))
    )


_Sle2EthCfmMepInfoConnectivityStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoConnectivityStatus_Object = MibTableColumn
sle2EthCfmMepInfoConnectivityStatus = _Sle2EthCfmMepInfoConnectivityStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 16),
    _Sle2EthCfmMepInfoConnectivityStatus_Type()
)
sle2EthCfmMepInfoConnectivityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoConnectivityStatus.setStatus("current")


class _Sle2EthCfmMepInfoInterval_Type(Integer32):
    """Custom type sle2EthCfmMepInfoInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_Sle2EthCfmMepInfoInterval_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoInterval_Object = MibTableColumn
sle2EthCfmMepInfoInterval = _Sle2EthCfmMepInfoInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 1, 1, 17),
    _Sle2EthCfmMepInfoInterval_Type()
)
sle2EthCfmMepInfoInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoInterval.setStatus("current")
_Sle2EthCfmMepInfoControl_ObjectIdentity = ObjectIdentity
sle2EthCfmMepInfoControl = _Sle2EthCfmMepInfoControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2)
)


class _Sle2EthCfmMepInfoControlRequest_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("createEthCfmMep", 1),
          ("destoryEthCfmMep", 2),
          ("setEthCfmCcEnable", 3),
          ("setEthCfmService", 4),
          ("setEthCfmDlmm", 5),
          ("tarnsmitUnicastTst", 6),
          ("tarnsmitMulticastTst", 7),
          ("transmitUnicastLm", 8),
          ("transmitMulticastLm", 9),
          ("transmitUnicastDm", 10),
          ("transmitMulticastDm", 11),
          ("receive1Dm", 12),
          ("transmitTm", 13),
          ("receiveTm", 14),
          ("transmitExm", 15),
          ("transmitVsm", 16),
          ("transmitMcc", 17))
    )


_Sle2EthCfmMepInfoControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlRequest_Object = MibScalar
sle2EthCfmMepInfoControlRequest = _Sle2EthCfmMepInfoControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 1),
    _Sle2EthCfmMepInfoControlRequest_Type()
)
sle2EthCfmMepInfoControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlRequest.setStatus("current")
_Sle2EthCfmMepInfoControlStatus_Type = SleControlStatusType
_Sle2EthCfmMepInfoControlStatus_Object = MibScalar
sle2EthCfmMepInfoControlStatus = _Sle2EthCfmMepInfoControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 2),
    _Sle2EthCfmMepInfoControlStatus_Type()
)
sle2EthCfmMepInfoControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlStatus.setStatus("current")
_Sle2EthCfmMepInfoControlTimer_Type = Gauge32
_Sle2EthCfmMepInfoControlTimer_Object = MibScalar
sle2EthCfmMepInfoControlTimer = _Sle2EthCfmMepInfoControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 3),
    _Sle2EthCfmMepInfoControlTimer_Type()
)
sle2EthCfmMepInfoControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTimer.setStatus("current")
_Sle2EthCfmMepInfoControlTimeStamp_Type = TimeTicks
_Sle2EthCfmMepInfoControlTimeStamp_Object = MibScalar
sle2EthCfmMepInfoControlTimeStamp = _Sle2EthCfmMepInfoControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 4),
    _Sle2EthCfmMepInfoControlTimeStamp_Type()
)
sle2EthCfmMepInfoControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTimeStamp.setStatus("current")
_Sle2EthCfmMepInfoControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmMepInfoControlReqResult_Object = MibScalar
sle2EthCfmMepInfoControlReqResult = _Sle2EthCfmMepInfoControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 5),
    _Sle2EthCfmMepInfoControlReqResult_Type()
)
sle2EthCfmMepInfoControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlReqResult.setStatus("current")


class _Sle2EthCfmMepInfoControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmMepInfoControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlBridgeId_Object = MibScalar
sle2EthCfmMepInfoControlBridgeId = _Sle2EthCfmMepInfoControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 6),
    _Sle2EthCfmMepInfoControlBridgeId_Type()
)
sle2EthCfmMepInfoControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlBridgeId.setStatus("current")
_Sle2EthCfmMepInfoControlMdName_Type = OctetString
_Sle2EthCfmMepInfoControlMdName_Object = MibScalar
sle2EthCfmMepInfoControlMdName = _Sle2EthCfmMepInfoControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 7),
    _Sle2EthCfmMepInfoControlMdName_Type()
)
sle2EthCfmMepInfoControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlMdName.setStatus("current")


class _Sle2EthCfmMepInfoControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMepInfoControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlMaVid_Object = MibScalar
sle2EthCfmMepInfoControlMaVid = _Sle2EthCfmMepInfoControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 8),
    _Sle2EthCfmMepInfoControlMaVid_Type()
)
sle2EthCfmMepInfoControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlMaVid.setStatus("current")
_Sle2EthCfmMepInfoControlIfindex_Type = Integer32
_Sle2EthCfmMepInfoControlIfindex_Object = MibScalar
sle2EthCfmMepInfoControlIfindex = _Sle2EthCfmMepInfoControlIfindex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 9),
    _Sle2EthCfmMepInfoControlIfindex_Type()
)
sle2EthCfmMepInfoControlIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlIfindex.setStatus("current")


class _Sle2EthCfmMepInfoControlId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoControlId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlId_Object = MibScalar
sle2EthCfmMepInfoControlId = _Sle2EthCfmMepInfoControlId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 10),
    _Sle2EthCfmMepInfoControlId_Type()
)
sle2EthCfmMepInfoControlId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlId.setStatus("current")


class _Sle2EthCfmMepInfoControlLocalVid_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlLocalVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMepInfoControlLocalVid_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlLocalVid_Object = MibScalar
sle2EthCfmMepInfoControlLocalVid = _Sle2EthCfmMepInfoControlLocalVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 11),
    _Sle2EthCfmMepInfoControlLocalVid_Type()
)
sle2EthCfmMepInfoControlLocalVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlLocalVid.setStatus("current")


class _Sle2EthCfmMepInfoControlMepDirection_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlMepDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_Sle2EthCfmMepInfoControlMepDirection_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlMepDirection_Object = MibScalar
sle2EthCfmMepInfoControlMepDirection = _Sle2EthCfmMepInfoControlMepDirection_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 12),
    _Sle2EthCfmMepInfoControlMepDirection_Type()
)
sle2EthCfmMepInfoControlMepDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlMepDirection.setStatus("current")


class _Sle2EthCfmMepInfoControlActive_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoControlActive_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlActive_Object = MibScalar
sle2EthCfmMepInfoControlActive = _Sle2EthCfmMepInfoControlActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 13),
    _Sle2EthCfmMepInfoControlActive_Type()
)
sle2EthCfmMepInfoControlActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlActive.setStatus("current")


class _Sle2EthCfmMepInfoControlUNI_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlUNI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoControlUNI_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlUNI_Object = MibScalar
sle2EthCfmMepInfoControlUNI = _Sle2EthCfmMepInfoControlUNI_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 14),
    _Sle2EthCfmMepInfoControlUNI_Type()
)
sle2EthCfmMepInfoControlUNI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlUNI.setStatus("current")


class _Sle2EthCfmMepInfoControlCcmStatus_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlCcmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmMepInfoControlCcmStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlCcmStatus_Object = MibScalar
sle2EthCfmMepInfoControlCcmStatus = _Sle2EthCfmMepInfoControlCcmStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 15),
    _Sle2EthCfmMepInfoControlCcmStatus_Type()
)
sle2EthCfmMepInfoControlCcmStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlCcmStatus.setStatus("current")


class _Sle2EthCfmMepInfoControlFrameType_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_Sle2EthCfmMepInfoControlFrameType_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlFrameType_Object = MibScalar
sle2EthCfmMepInfoControlFrameType = _Sle2EthCfmMepInfoControlFrameType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 16),
    _Sle2EthCfmMepInfoControlFrameType_Type()
)
sle2EthCfmMepInfoControlFrameType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlFrameType.setStatus("current")


class _Sle2EthCfmMepInfoControlRmepId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoControlRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlRmepId_Object = MibScalar
sle2EthCfmMepInfoControlRmepId = _Sle2EthCfmMepInfoControlRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 17),
    _Sle2EthCfmMepInfoControlRmepId_Type()
)
sle2EthCfmMepInfoControlRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlRmepId.setStatus("current")


class _Sle2EthCfmMepInfoControlService_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inService", 0),
          ("outOfService", 1))
    )


_Sle2EthCfmMepInfoControlService_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlService_Object = MibScalar
sle2EthCfmMepInfoControlService = _Sle2EthCfmMepInfoControlService_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 18),
    _Sle2EthCfmMepInfoControlService_Type()
)
sle2EthCfmMepInfoControlService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlService.setStatus("current")


class _Sle2EthCfmMepInfoControlDlmState_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlDlmState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmMepInfoControlDlmState_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlDlmState_Object = MibScalar
sle2EthCfmMepInfoControlDlmState = _Sle2EthCfmMepInfoControlDlmState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 19),
    _Sle2EthCfmMepInfoControlDlmState_Type()
)
sle2EthCfmMepInfoControlDlmState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlDlmState.setStatus("current")


class _Sle2EthCfmMepInfoControlLckLevel_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlLckLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepInfoControlLckLevel_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlLckLevel_Object = MibScalar
sle2EthCfmMepInfoControlLckLevel = _Sle2EthCfmMepInfoControlLckLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 20),
    _Sle2EthCfmMepInfoControlLckLevel_Type()
)
sle2EthCfmMepInfoControlLckLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlLckLevel.setStatus("current")


class _Sle2EthCfmMepInfoControlTstPattern_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlTstPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_Sle2EthCfmMepInfoControlTstPattern_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlTstPattern_Object = MibScalar
sle2EthCfmMepInfoControlTstPattern = _Sle2EthCfmMepInfoControlTstPattern_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 21),
    _Sle2EthCfmMepInfoControlTstPattern_Type()
)
sle2EthCfmMepInfoControlTstPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTstPattern.setStatus("current")


class _Sle2EthCfmMepInfoControlTstRecursive_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlTstRecursive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepInfoControlTstRecursive_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlTstRecursive_Object = MibScalar
sle2EthCfmMepInfoControlTstRecursive = _Sle2EthCfmMepInfoControlTstRecursive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 22),
    _Sle2EthCfmMepInfoControlTstRecursive_Type()
)
sle2EthCfmMepInfoControlTstRecursive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTstRecursive.setStatus("current")


class _Sle2EthCfmMepInfoControlDuration_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_Sle2EthCfmMepInfoControlDuration_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlDuration_Object = MibScalar
sle2EthCfmMepInfoControlDuration = _Sle2EthCfmMepInfoControlDuration_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 23),
    _Sle2EthCfmMepInfoControlDuration_Type()
)
sle2EthCfmMepInfoControlDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlDuration.setStatus("current")
_Sle2EthCfmMepInfoControlTstTxInterval_Type = Integer32
_Sle2EthCfmMepInfoControlTstTxInterval_Object = MibScalar
sle2EthCfmMepInfoControlTstTxInterval = _Sle2EthCfmMepInfoControlTstTxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 24),
    _Sle2EthCfmMepInfoControlTstTxInterval_Type()
)
sle2EthCfmMepInfoControlTstTxInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTstTxInterval.setStatus("current")


class _Sle2EthCfmMepInfoControlTstLckInterval_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlTstLckInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_Sle2EthCfmMepInfoControlTstLckInterval_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlTstLckInterval_Object = MibScalar
sle2EthCfmMepInfoControlTstLckInterval = _Sle2EthCfmMepInfoControlTstLckInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 25),
    _Sle2EthCfmMepInfoControlTstLckInterval_Type()
)
sle2EthCfmMepInfoControlTstLckInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTstLckInterval.setStatus("current")


class _Sle2EthCfmMepInfoControlLckRmepId_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlLckRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepInfoControlLckRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlLckRmepId_Object = MibScalar
sle2EthCfmMepInfoControlLckRmepId = _Sle2EthCfmMepInfoControlLckRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 26),
    _Sle2EthCfmMepInfoControlLckRmepId_Type()
)
sle2EthCfmMepInfoControlLckRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlLckRmepId.setStatus("current")


class _Sle2EthCfmMepInfoControlInterval_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_Sle2EthCfmMepInfoControlInterval_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlInterval_Object = MibScalar
sle2EthCfmMepInfoControlInterval = _Sle2EthCfmMepInfoControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 27),
    _Sle2EthCfmMepInfoControlInterval_Type()
)
sle2EthCfmMepInfoControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlInterval.setStatus("current")


class _Sle2EthCfmMepInfoControlTransMode_Type(Integer32):
    """Custom type sle2EthCfmMepInfoControlTransMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("oneDm", 1),
          ("dvm", 2),
          ("dmm", 3))
    )


_Sle2EthCfmMepInfoControlTransMode_Type.__name__ = "Integer32"
_Sle2EthCfmMepInfoControlTransMode_Object = MibScalar
sle2EthCfmMepInfoControlTransMode = _Sle2EthCfmMepInfoControlTransMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 2, 28),
    _Sle2EthCfmMepInfoControlTransMode_Type()
)
sle2EthCfmMepInfoControlTransMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepInfoControlTransMode.setStatus("current")
_Sle2EthCfmMepInfoNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmMepInfoNotification = _Sle2EthCfmMepInfoNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3)
)
_Sle2EthernetCfmMepAttributs_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMepAttributs = _Sle2EthernetCfmMepAttributs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2)
)
_Sle2EthCfmMepAttrTable_Object = MibTable
sle2EthCfmMepAttrTable = _Sle2EthCfmMepAttrTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTable.setStatus("current")
_Sle2EthCfmMepAttrEntry_Object = MibTableRow
sle2EthCfmMepAttrEntry = _Sle2EthCfmMepAttrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1)
)
sle2EthCfmMepAttrEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrEntry.setStatus("current")


class _Sle2EthCfmMepAttrActive_Type(Integer32):
    """Custom type sle2EthCfmMepAttrActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrActive_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrActive_Object = MibTableColumn
sle2EthCfmMepAttrActive = _Sle2EthCfmMepAttrActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 1),
    _Sle2EthCfmMepAttrActive_Type()
)
sle2EthCfmMepAttrActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrActive.setStatus("current")


class _Sle2EthCfmMepAttrCcmLtmPriority_Type(Integer32):
    """Custom type sle2EthCfmMepAttrCcmLtmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepAttrCcmLtmPriority_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrCcmLtmPriority_Object = MibTableColumn
sle2EthCfmMepAttrCcmLtmPriority = _Sle2EthCfmMepAttrCcmLtmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 2),
    _Sle2EthCfmMepAttrCcmLtmPriority_Type()
)
sle2EthCfmMepAttrCcmLtmPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrCcmLtmPriority.setStatus("current")


class _Sle2EthCfmMepAttrLowPrDef_Type(Integer32):
    """Custom type sle2EthCfmMepAttrLowPrDef based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("allDef", 1),
          ("macRemErrXcon", 2),
          ("remErrXcon", 3),
          ("errXcon", 4),
          ("xcon", 5),
          ("noXcon", 6))
    )


_Sle2EthCfmMepAttrLowPrDef_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrLowPrDef_Object = MibTableColumn
sle2EthCfmMepAttrLowPrDef = _Sle2EthCfmMepAttrLowPrDef_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 3),
    _Sle2EthCfmMepAttrLowPrDef_Type()
)
sle2EthCfmMepAttrLowPrDef.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrLowPrDef.setStatus("current")


class _Sle2EthCfmMepAttrFngAlarmTime_Type(Integer32):
    """Custom type sle2EthCfmMepAttrFngAlarmTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(250, 1000),
    )


_Sle2EthCfmMepAttrFngAlarmTime_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrFngAlarmTime_Object = MibTableColumn
sle2EthCfmMepAttrFngAlarmTime = _Sle2EthCfmMepAttrFngAlarmTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 4),
    _Sle2EthCfmMepAttrFngAlarmTime_Type()
)
sle2EthCfmMepAttrFngAlarmTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrFngAlarmTime.setStatus("current")


class _Sle2EthCfmMepAttrResetFngTime_Type(Integer32):
    """Custom type sle2EthCfmMepAttrResetFngTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(250, 1000),
    )


_Sle2EthCfmMepAttrResetFngTime_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrResetFngTime_Object = MibTableColumn
sle2EthCfmMepAttrResetFngTime = _Sle2EthCfmMepAttrResetFngTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 5),
    _Sle2EthCfmMepAttrResetFngTime_Type()
)
sle2EthCfmMepAttrResetFngTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrResetFngTime.setStatus("current")
_Sle2EthCfmMepAttrCcmLtmFlag_Type = Integer32
_Sle2EthCfmMepAttrCcmLtmFlag_Object = MibTableColumn
sle2EthCfmMepAttrCcmLtmFlag = _Sle2EthCfmMepAttrCcmLtmFlag_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 6),
    _Sle2EthCfmMepAttrCcmLtmFlag_Type()
)
sle2EthCfmMepAttrCcmLtmFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrCcmLtmFlag.setStatus("current")
_Sle2EthCfmMepAttrTxLtmTargetMac_Type = OctetString
_Sle2EthCfmMepAttrTxLtmTargetMac_Object = MibTableColumn
sle2EthCfmMepAttrTxLtmTargetMac = _Sle2EthCfmMepAttrTxLtmTargetMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 7),
    _Sle2EthCfmMepAttrTxLtmTargetMac_Type()
)
sle2EthCfmMepAttrTxLtmTargetMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLtmTargetMac.setStatus("current")


class _Sle2EthCfmMepAttrTxLtmTargetMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLtmTargetMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepAttrTxLtmTargetMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLtmTargetMepId_Object = MibTableColumn
sle2EthCfmMepAttrTxLtmTargetMepId = _Sle2EthCfmMepAttrTxLtmTargetMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 8),
    _Sle2EthCfmMepAttrTxLtmTargetMepId_Type()
)
sle2EthCfmMepAttrTxLtmTargetMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLtmTargetMepId.setStatus("current")


class _Sle2EthCfmMepAttrTxLtmTargetIsMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLtmTargetIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrTxLtmTargetIsMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLtmTargetIsMepId_Object = MibTableColumn
sle2EthCfmMepAttrTxLtmTargetIsMepId = _Sle2EthCfmMepAttrTxLtmTargetIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 9),
    _Sle2EthCfmMepAttrTxLtmTargetIsMepId_Type()
)
sle2EthCfmMepAttrTxLtmTargetIsMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLtmTargetIsMepId.setStatus("current")


class _Sle2EthCfmMepAttrTxLtmTtl_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLtmTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Sle2EthCfmMepAttrTxLtmTtl_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLtmTtl_Object = MibTableColumn
sle2EthCfmMepAttrTxLtmTtl = _Sle2EthCfmMepAttrTxLtmTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 10),
    _Sle2EthCfmMepAttrTxLtmTtl_Type()
)
sle2EthCfmMepAttrTxLtmTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLtmTtl.setStatus("current")
_Sle2EthCfmMepAttrTxLtmEgressId_Type = OctetString
_Sle2EthCfmMepAttrTxLtmEgressId_Object = MibTableColumn
sle2EthCfmMepAttrTxLtmEgressId = _Sle2EthCfmMepAttrTxLtmEgressId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 11),
    _Sle2EthCfmMepAttrTxLtmEgressId_Type()
)
sle2EthCfmMepAttrTxLtmEgressId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLtmEgressId.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmStatus_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrTxLbmStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmStatus_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmStatus = _Sle2EthCfmMepAttrTxLbmStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 12),
    _Sle2EthCfmMepAttrTxLbmStatus_Type()
)
sle2EthCfmMepAttrTxLbmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmStatus.setStatus("current")
_Sle2EthCfmMepAttrTxLbmDestMac_Type = OctetString
_Sle2EthCfmMepAttrTxLbmDestMac_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmDestMac = _Sle2EthCfmMepAttrTxLbmDestMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 13),
    _Sle2EthCfmMepAttrTxLbmDestMac_Type()
)
sle2EthCfmMepAttrTxLbmDestMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmDestMac.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmDestMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_Sle2EthCfmMepAttrTxLbmDestMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmDestMepId_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmDestMepId = _Sle2EthCfmMepAttrTxLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 14),
    _Sle2EthCfmMepAttrTxLbmDestMepId_Type()
)
sle2EthCfmMepAttrTxLbmDestMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmDestMepId.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmDestIsMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmDestIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrTxLbmDestIsMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmDestIsMepId_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmDestIsMepId = _Sle2EthCfmMepAttrTxLbmDestIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 15),
    _Sle2EthCfmMepAttrTxLbmDestIsMepId_Type()
)
sle2EthCfmMepAttrTxLbmDestIsMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmDestIsMepId.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmMessages_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmMessages based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_Sle2EthCfmMepAttrTxLbmMessages_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmMessages_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmMessages = _Sle2EthCfmMepAttrTxLbmMessages_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 16),
    _Sle2EthCfmMepAttrTxLbmMessages_Type()
)
sle2EthCfmMepAttrTxLbmMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmMessages.setStatus("current")
_Sle2EthCfmMepAttrTxLbmDataTlv_Type = OctetString
_Sle2EthCfmMepAttrTxLbmDataTlv_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmDataTlv = _Sle2EthCfmMepAttrTxLbmDataTlv_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 17),
    _Sle2EthCfmMepAttrTxLbmDataTlv_Type()
)
sle2EthCfmMepAttrTxLbmDataTlv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmDataTlv.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmVlanPriority_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmVlanPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepAttrTxLbmVlanPriority_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmVlanPriority_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmVlanPriority = _Sle2EthCfmMepAttrTxLbmVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 18),
    _Sle2EthCfmMepAttrTxLbmVlanPriority_Type()
)
sle2EthCfmMepAttrTxLbmVlanPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmVlanPriority.setStatus("current")


class _Sle2EthCfmMepAttrTxLbmVlanDropEnable_Type(Integer32):
    """Custom type sle2EthCfmMepAttrTxLbmVlanDropEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrTxLbmVlanDropEnable_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrTxLbmVlanDropEnable_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmVlanDropEnable = _Sle2EthCfmMepAttrTxLbmVlanDropEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 19),
    _Sle2EthCfmMepAttrTxLbmVlanDropEnable_Type()
)
sle2EthCfmMepAttrTxLbmVlanDropEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmVlanDropEnable.setStatus("current")
_Sle2EthCfmMepAttrTxLbmTimeOut_Type = Integer32
_Sle2EthCfmMepAttrTxLbmTimeOut_Object = MibTableColumn
sle2EthCfmMepAttrTxLbmTimeOut = _Sle2EthCfmMepAttrTxLbmTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 20),
    _Sle2EthCfmMepAttrTxLbmTimeOut_Type()
)
sle2EthCfmMepAttrTxLbmTimeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrTxLbmTimeOut.setStatus("current")
_Sle2EthCfmMepAttrLbrTimeOut_Type = Integer32
_Sle2EthCfmMepAttrLbrTimeOut_Object = MibTableColumn
sle2EthCfmMepAttrLbrTimeOut = _Sle2EthCfmMepAttrLbrTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 1, 1, 21),
    _Sle2EthCfmMepAttrLbrTimeOut_Type()
)
sle2EthCfmMepAttrLbrTimeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrLbrTimeOut.setStatus("current")
_Sle2EthCfmMepAttrControl_ObjectIdentity = ObjectIdentity
sle2EthCfmMepAttrControl = _Sle2EthCfmMepAttrControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2)
)


class _Sle2EthCfmMepAttrControlRequest_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("setCfmFaultProfile", 1),
          ("setCfmTxLtmProfile", 2),
          ("setCfmTxLbmProfile", 3),
          ("clearAllCfmMepAttuributes", 4))
    )


_Sle2EthCfmMepAttrControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlRequest_Object = MibScalar
sle2EthCfmMepAttrControlRequest = _Sle2EthCfmMepAttrControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 1),
    _Sle2EthCfmMepAttrControlRequest_Type()
)
sle2EthCfmMepAttrControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlRequest.setStatus("current")
_Sle2EthCfmMepAttrControlStatus_Type = SleControlStatusType
_Sle2EthCfmMepAttrControlStatus_Object = MibScalar
sle2EthCfmMepAttrControlStatus = _Sle2EthCfmMepAttrControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 2),
    _Sle2EthCfmMepAttrControlStatus_Type()
)
sle2EthCfmMepAttrControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlStatus.setStatus("current")
_Sle2EthCfmMepAttrControlTimer_Type = Gauge32
_Sle2EthCfmMepAttrControlTimer_Object = MibScalar
sle2EthCfmMepAttrControlTimer = _Sle2EthCfmMepAttrControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 3),
    _Sle2EthCfmMepAttrControlTimer_Type()
)
sle2EthCfmMepAttrControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTimer.setStatus("current")
_Sle2EthCfmMepAttrControlTimeStamp_Type = TimeTicks
_Sle2EthCfmMepAttrControlTimeStamp_Object = MibScalar
sle2EthCfmMepAttrControlTimeStamp = _Sle2EthCfmMepAttrControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 4),
    _Sle2EthCfmMepAttrControlTimeStamp_Type()
)
sle2EthCfmMepAttrControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTimeStamp.setStatus("current")
_Sle2EthCfmMepAttrControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmMepAttrControlReqResult_Object = MibScalar
sle2EthCfmMepAttrControlReqResult = _Sle2EthCfmMepAttrControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 5),
    _Sle2EthCfmMepAttrControlReqResult_Type()
)
sle2EthCfmMepAttrControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlReqResult.setStatus("current")


class _Sle2EthCfmMepAttrControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmMepAttrControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlBridgeId_Object = MibScalar
sle2EthCfmMepAttrControlBridgeId = _Sle2EthCfmMepAttrControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 6),
    _Sle2EthCfmMepAttrControlBridgeId_Type()
)
sle2EthCfmMepAttrControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlBridgeId.setStatus("current")
_Sle2EthCfmMepAttrControlMdName_Type = OctetString
_Sle2EthCfmMepAttrControlMdName_Object = MibScalar
sle2EthCfmMepAttrControlMdName = _Sle2EthCfmMepAttrControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 7),
    _Sle2EthCfmMepAttrControlMdName_Type()
)
sle2EthCfmMepAttrControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlMdName.setStatus("current")


class _Sle2EthCfmMepAttrControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_Sle2EthCfmMepAttrControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlMaVid_Object = MibScalar
sle2EthCfmMepAttrControlMaVid = _Sle2EthCfmMepAttrControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 8),
    _Sle2EthCfmMepAttrControlMaVid_Type()
)
sle2EthCfmMepAttrControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlMaVid.setStatus("current")


class _Sle2EthCfmMepAttrControlMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmMepAttrControlMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlMepId_Object = MibScalar
sle2EthCfmMepAttrControlMepId = _Sle2EthCfmMepAttrControlMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 9),
    _Sle2EthCfmMepAttrControlMepId_Type()
)
sle2EthCfmMepAttrControlMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlMepId.setStatus("current")


class _Sle2EthCfmMepAttrControlActive_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrControlActive_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlActive_Object = MibScalar
sle2EthCfmMepAttrControlActive = _Sle2EthCfmMepAttrControlActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 10),
    _Sle2EthCfmMepAttrControlActive_Type()
)
sle2EthCfmMepAttrControlActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlActive.setStatus("current")


class _Sle2EthCfmMepAttrControlCcmLtmPriority_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlCcmLtmPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepAttrControlCcmLtmPriority_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlCcmLtmPriority_Object = MibScalar
sle2EthCfmMepAttrControlCcmLtmPriority = _Sle2EthCfmMepAttrControlCcmLtmPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 11),
    _Sle2EthCfmMepAttrControlCcmLtmPriority_Type()
)
sle2EthCfmMepAttrControlCcmLtmPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlCcmLtmPriority.setStatus("current")


class _Sle2EthCfmMepAttrContrlLowPrDef_Type(Integer32):
    """Custom type sle2EthCfmMepAttrContrlLowPrDef based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("allDef", 1),
          ("macRemErrXcon", 2),
          ("remErrXcon", 3),
          ("errXcon", 4),
          ("xcon", 5),
          ("noXcon", 6))
    )


_Sle2EthCfmMepAttrContrlLowPrDef_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrContrlLowPrDef_Object = MibScalar
sle2EthCfmMepAttrContrlLowPrDef = _Sle2EthCfmMepAttrContrlLowPrDef_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 12),
    _Sle2EthCfmMepAttrContrlLowPrDef_Type()
)
sle2EthCfmMepAttrContrlLowPrDef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrContrlLowPrDef.setStatus("current")


class _Sle2EthCfmMepAttrContrlFngAlarmTime_Type(Integer32):
    """Custom type sle2EthCfmMepAttrContrlFngAlarmTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(250, 1000),
    )


_Sle2EthCfmMepAttrContrlFngAlarmTime_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrContrlFngAlarmTime_Object = MibScalar
sle2EthCfmMepAttrContrlFngAlarmTime = _Sle2EthCfmMepAttrContrlFngAlarmTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 13),
    _Sle2EthCfmMepAttrContrlFngAlarmTime_Type()
)
sle2EthCfmMepAttrContrlFngAlarmTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrContrlFngAlarmTime.setStatus("current")


class _Sle2EthCfmMepAttrControlResetFngTime_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlResetFngTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(250, 1000),
    )


_Sle2EthCfmMepAttrControlResetFngTime_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlResetFngTime_Object = MibScalar
sle2EthCfmMepAttrControlResetFngTime = _Sle2EthCfmMepAttrControlResetFngTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 14),
    _Sle2EthCfmMepAttrControlResetFngTime_Type()
)
sle2EthCfmMepAttrControlResetFngTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlResetFngTime.setStatus("current")
_Sle2EthCfmMepAttrControlCcmLtmFlag_Type = Integer32
_Sle2EthCfmMepAttrControlCcmLtmFlag_Object = MibScalar
sle2EthCfmMepAttrControlCcmLtmFlag = _Sle2EthCfmMepAttrControlCcmLtmFlag_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 15),
    _Sle2EthCfmMepAttrControlCcmLtmFlag_Type()
)
sle2EthCfmMepAttrControlCcmLtmFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlCcmLtmFlag.setStatus("current")
_Sle2EthCfmMepAttrControlTxLtmTargetMac_Type = OctetString
_Sle2EthCfmMepAttrControlTxLtmTargetMac_Object = MibScalar
sle2EthCfmMepAttrControlTxLtmTargetMac = _Sle2EthCfmMepAttrControlTxLtmTargetMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 16),
    _Sle2EthCfmMepAttrControlTxLtmTargetMac_Type()
)
sle2EthCfmMepAttrControlTxLtmTargetMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLtmTargetMac.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLtmTargetMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLtmTargetMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_Sle2EthCfmMepAttrControlTxLtmTargetMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLtmTargetMepId_Object = MibScalar
sle2EthCfmMepAttrControlTxLtmTargetMepId = _Sle2EthCfmMepAttrControlTxLtmTargetMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 17),
    _Sle2EthCfmMepAttrControlTxLtmTargetMepId_Type()
)
sle2EthCfmMepAttrControlTxLtmTargetMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLtmTargetMepId.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLtmTargetIsMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLtmTargetIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrControlTxLtmTargetIsMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLtmTargetIsMepId_Object = MibScalar
sle2EthCfmMepAttrControlTxLtmTargetIsMepId = _Sle2EthCfmMepAttrControlTxLtmTargetIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 18),
    _Sle2EthCfmMepAttrControlTxLtmTargetIsMepId_Type()
)
sle2EthCfmMepAttrControlTxLtmTargetIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLtmTargetIsMepId.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLtmTtl_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLtmTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Sle2EthCfmMepAttrControlTxLtmTtl_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLtmTtl_Object = MibScalar
sle2EthCfmMepAttrControlTxLtmTtl = _Sle2EthCfmMepAttrControlTxLtmTtl_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 19),
    _Sle2EthCfmMepAttrControlTxLtmTtl_Type()
)
sle2EthCfmMepAttrControlTxLtmTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLtmTtl.setStatus("current")
_Sle2EthCfmMepAttrControlTxLtmEgressId_Type = OctetString
_Sle2EthCfmMepAttrControlTxLtmEgressId_Object = MibScalar
sle2EthCfmMepAttrControlTxLtmEgressId = _Sle2EthCfmMepAttrControlTxLtmEgressId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 20),
    _Sle2EthCfmMepAttrControlTxLtmEgressId_Type()
)
sle2EthCfmMepAttrControlTxLtmEgressId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLtmEgressId.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmStatus_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrControlTxLbmStatus_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmStatus_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmStatus = _Sle2EthCfmMepAttrControlTxLbmStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 21),
    _Sle2EthCfmMepAttrControlTxLbmStatus_Type()
)
sle2EthCfmMepAttrControlTxLbmStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmStatus.setStatus("current")
_Sle2EthCfmMepAttrControlTxLbmDestMacAddress_Type = OctetString
_Sle2EthCfmMepAttrControlTxLbmDestMacAddress_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmDestMacAddress = _Sle2EthCfmMepAttrControlTxLbmDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 22),
    _Sle2EthCfmMepAttrControlTxLbmDestMacAddress_Type()
)
sle2EthCfmMepAttrControlTxLbmDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmDestMacAddress.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmDestMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmDestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_Sle2EthCfmMepAttrControlTxLbmDestMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmDestMepId_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmDestMepId = _Sle2EthCfmMepAttrControlTxLbmDestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 23),
    _Sle2EthCfmMepAttrControlTxLbmDestMepId_Type()
)
sle2EthCfmMepAttrControlTxLbmDestMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmDestMepId.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmDestIsMepId_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmDestIsMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrControlTxLbmDestIsMepId_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmDestIsMepId_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmDestIsMepId = _Sle2EthCfmMepAttrControlTxLbmDestIsMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 24),
    _Sle2EthCfmMepAttrControlTxLbmDestIsMepId_Type()
)
sle2EthCfmMepAttrControlTxLbmDestIsMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmDestIsMepId.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmMessages_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmMessages based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_Sle2EthCfmMepAttrControlTxLbmMessages_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmMessages_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmMessages = _Sle2EthCfmMepAttrControlTxLbmMessages_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 25),
    _Sle2EthCfmMepAttrControlTxLbmMessages_Type()
)
sle2EthCfmMepAttrControlTxLbmMessages.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmMessages.setStatus("current")
_Sle2EthCfmMepAttrControlTxLbmDataTlv_Type = OctetString
_Sle2EthCfmMepAttrControlTxLbmDataTlv_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmDataTlv = _Sle2EthCfmMepAttrControlTxLbmDataTlv_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 26),
    _Sle2EthCfmMepAttrControlTxLbmDataTlv_Type()
)
sle2EthCfmMepAttrControlTxLbmDataTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmDataTlv.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmVlanPriority_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmVlanPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMepAttrControlTxLbmVlanPriority_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmVlanPriority_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmVlanPriority = _Sle2EthCfmMepAttrControlTxLbmVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 27),
    _Sle2EthCfmMepAttrControlTxLbmVlanPriority_Type()
)
sle2EthCfmMepAttrControlTxLbmVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmVlanPriority.setStatus("current")


class _Sle2EthCfmMepAttrControlTxLbmVlanDropEnable_Type(Integer32):
    """Custom type sle2EthCfmMepAttrControlTxLbmVlanDropEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmMepAttrControlTxLbmVlanDropEnable_Type.__name__ = "Integer32"
_Sle2EthCfmMepAttrControlTxLbmVlanDropEnable_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmVlanDropEnable = _Sle2EthCfmMepAttrControlTxLbmVlanDropEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 28),
    _Sle2EthCfmMepAttrControlTxLbmVlanDropEnable_Type()
)
sle2EthCfmMepAttrControlTxLbmVlanDropEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmVlanDropEnable.setStatus("current")
_Sle2EthCfmMepAttrControlTxLbmTimeOut_Type = Integer32
_Sle2EthCfmMepAttrControlTxLbmTimeOut_Object = MibScalar
sle2EthCfmMepAttrControlTxLbmTimeOut = _Sle2EthCfmMepAttrControlTxLbmTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 29),
    _Sle2EthCfmMepAttrControlTxLbmTimeOut_Type()
)
sle2EthCfmMepAttrControlTxLbmTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlTxLbmTimeOut.setStatus("current")
_Sle2EthCfmMepAttrControlLbrTimeOut_Type = Integer32
_Sle2EthCfmMepAttrControlLbrTimeOut_Object = MibScalar
sle2EthCfmMepAttrControlLbrTimeOut = _Sle2EthCfmMepAttrControlLbrTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 2, 30),
    _Sle2EthCfmMepAttrControlLbrTimeOut_Type()
)
sle2EthCfmMepAttrControlLbrTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmMepAttrControlLbrTimeOut.setStatus("current")
_Sle2EthCfmMepAttrNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmMepAttrNotification = _Sle2EthCfmMepAttrNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 3)
)
_Sle2EthernetCfmXcheck_ObjectIdentity = ObjectIdentity
sle2EthernetCfmXcheck = _Sle2EthernetCfmXcheck_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8)
)
_Sle2EthCfmXcheckTable_Object = MibTable
sle2EthCfmXcheckTable = _Sle2EthCfmXcheckTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmXcheckTable.setStatus("current")
_Sle2EthCfmXcheckEntry_Object = MibTableRow
sle2EthCfmXcheckEntry = _Sle2EthCfmXcheckEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 1, 1)
)
sle2EthCfmXcheckEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckRmepId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmXcheckEntry.setStatus("current")


class _Sle2EthCfmXcheckRmepId_Type(Integer32):
    """Custom type sle2EthCfmXcheckRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmXcheckRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmXcheckRmepId_Object = MibTableColumn
sle2EthCfmXcheckRmepId = _Sle2EthCfmXcheckRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 1, 1, 1),
    _Sle2EthCfmXcheckRmepId_Type()
)
sle2EthCfmXcheckRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckRmepId.setStatus("current")
_Sle2EthCfmXcheckRmepMac_Type = OctetString
_Sle2EthCfmXcheckRmepMac_Object = MibTableColumn
sle2EthCfmXcheckRmepMac = _Sle2EthCfmXcheckRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 1, 1, 2),
    _Sle2EthCfmXcheckRmepMac_Type()
)
sle2EthCfmXcheckRmepMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckRmepMac.setStatus("current")
_Sle2EthCfmXcheckControl_ObjectIdentity = ObjectIdentity
sle2EthCfmXcheckControl = _Sle2EthCfmXcheckControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2)
)


class _Sle2EthCfmXcheckControlRequest_Type(Integer32):
    """Custom type sle2EthCfmXcheckControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("createCfmXcheckMep", 1),
          ("destoryCfmXcheckMep", 2))
    )


_Sle2EthCfmXcheckControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmXcheckControlRequest_Object = MibScalar
sle2EthCfmXcheckControlRequest = _Sle2EthCfmXcheckControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 1),
    _Sle2EthCfmXcheckControlRequest_Type()
)
sle2EthCfmXcheckControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlRequest.setStatus("current")
_Sle2EthCfmXcheckControlStatus_Type = SleControlStatusType
_Sle2EthCfmXcheckControlStatus_Object = MibScalar
sle2EthCfmXcheckControlStatus = _Sle2EthCfmXcheckControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 2),
    _Sle2EthCfmXcheckControlStatus_Type()
)
sle2EthCfmXcheckControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlStatus.setStatus("current")
_Sle2EthCfmXcheckControlTimer_Type = Gauge32
_Sle2EthCfmXcheckControlTimer_Object = MibScalar
sle2EthCfmXcheckControlTimer = _Sle2EthCfmXcheckControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 3),
    _Sle2EthCfmXcheckControlTimer_Type()
)
sle2EthCfmXcheckControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlTimer.setStatus("current")
_Sle2EthCfmXcheckControlTimeStamp_Type = TimeTicks
_Sle2EthCfmXcheckControlTimeStamp_Object = MibScalar
sle2EthCfmXcheckControlTimeStamp = _Sle2EthCfmXcheckControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 4),
    _Sle2EthCfmXcheckControlTimeStamp_Type()
)
sle2EthCfmXcheckControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlTimeStamp.setStatus("current")
_Sle2EthCfmXcheckControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmXcheckControlReqResult_Object = MibScalar
sle2EthCfmXcheckControlReqResult = _Sle2EthCfmXcheckControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 5),
    _Sle2EthCfmXcheckControlReqResult_Type()
)
sle2EthCfmXcheckControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlReqResult.setStatus("current")


class _Sle2EthCfmXcheckControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmXcheckControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmXcheckControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmXcheckControlBridgeId_Object = MibScalar
sle2EthCfmXcheckControlBridgeId = _Sle2EthCfmXcheckControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 6),
    _Sle2EthCfmXcheckControlBridgeId_Type()
)
sle2EthCfmXcheckControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlBridgeId.setStatus("current")
_Sle2EthCfmXcheckControlMdName_Type = OctetString
_Sle2EthCfmXcheckControlMdName_Object = MibScalar
sle2EthCfmXcheckControlMdName = _Sle2EthCfmXcheckControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 7),
    _Sle2EthCfmXcheckControlMdName_Type()
)
sle2EthCfmXcheckControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlMdName.setStatus("current")


class _Sle2EthCfmXcheckControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmXcheckControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmXcheckControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmXcheckControlMaVid_Object = MibScalar
sle2EthCfmXcheckControlMaVid = _Sle2EthCfmXcheckControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 8),
    _Sle2EthCfmXcheckControlMaVid_Type()
)
sle2EthCfmXcheckControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlMaVid.setStatus("current")


class _Sle2EthCfmXcheckControlRmepId_Type(Integer32):
    """Custom type sle2EthCfmXcheckControlRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmXcheckControlRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmXcheckControlRmepId_Object = MibScalar
sle2EthCfmXcheckControlRmepId = _Sle2EthCfmXcheckControlRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 9),
    _Sle2EthCfmXcheckControlRmepId_Type()
)
sle2EthCfmXcheckControlRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlRmepId.setStatus("current")
_Sle2EthCfmXcheckControlRmepMac_Type = OctetString
_Sle2EthCfmXcheckControlRmepMac_Object = MibScalar
sle2EthCfmXcheckControlRmepMac = _Sle2EthCfmXcheckControlRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 2, 10),
    _Sle2EthCfmXcheckControlRmepMac_Type()
)
sle2EthCfmXcheckControlRmepMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmXcheckControlRmepMac.setStatus("current")
_Sle2EthCfmXcheckNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmXcheckNotification = _Sle2EthCfmXcheckNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 3)
)
_Sle2EthernetCfmLoopback_ObjectIdentity = ObjectIdentity
sle2EthernetCfmLoopback = _Sle2EthernetCfmLoopback_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9)
)
_Sle2EthCfmLoopbackTable_Object = MibTable
sle2EthCfmLoopbackTable = _Sle2EthCfmLoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmLoopbackTable.setStatus("current")
_Sle2EthCfmLoopbackEntry_Object = MibTableRow
sle2EthCfmLoopbackEntry = _Sle2EthCfmLoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1)
)
sle2EthCfmLoopbackEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmLoopbackEntry.setStatus("current")


class _Sle2EthCfmLbFrameType_Type(Integer32):
    """Custom type sle2EthCfmLbFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_Sle2EthCfmLbFrameType_Type.__name__ = "Integer32"
_Sle2EthCfmLbFrameType_Object = MibTableColumn
sle2EthCfmLbFrameType = _Sle2EthCfmLbFrameType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1, 1),
    _Sle2EthCfmLbFrameType_Type()
)
sle2EthCfmLbFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLbFrameType.setStatus("current")
_Sle2EthCfmLbReceivedCount_Type = Integer32
_Sle2EthCfmLbReceivedCount_Object = MibTableColumn
sle2EthCfmLbReceivedCount = _Sle2EthCfmLbReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1, 2),
    _Sle2EthCfmLbReceivedCount_Type()
)
sle2EthCfmLbReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLbReceivedCount.setStatus("current")
_Sle2EthCfmLbTxMessages_Type = Integer32
_Sle2EthCfmLbTxMessages_Object = MibTableColumn
sle2EthCfmLbTxMessages = _Sle2EthCfmLbTxMessages_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1, 3),
    _Sle2EthCfmLbTxMessages_Type()
)
sle2EthCfmLbTxMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLbTxMessages.setStatus("current")
_Sle2EthCfmLbResponseCount_Type = Integer32
_Sle2EthCfmLbResponseCount_Object = MibTableColumn
sle2EthCfmLbResponseCount = _Sle2EthCfmLbResponseCount_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1, 4),
    _Sle2EthCfmLbResponseCount_Type()
)
sle2EthCfmLbResponseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLbResponseCount.setStatus("current")
_Sle2EthCfmLbRemoteMacAddress_Type = OctetString
_Sle2EthCfmLbRemoteMacAddress_Object = MibTableColumn
sle2EthCfmLbRemoteMacAddress = _Sle2EthCfmLbRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 1, 1, 5),
    _Sle2EthCfmLbRemoteMacAddress_Type()
)
sle2EthCfmLbRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLbRemoteMacAddress.setStatus("current")
_Sle2EthCfmLoopbackControl_ObjectIdentity = ObjectIdentity
sle2EthCfmLoopbackControl = _Sle2EthCfmLoopbackControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2)
)


class _Sle2EthCfmLbControlRequest_Type(Integer32):
    """Custom type sle2EthCfmLbControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transmitMulticastLb", 1),
          ("transmitUnicastLb", 2),
          ("transmitMacLb", 3))
    )


_Sle2EthCfmLbControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlRequest_Object = MibScalar
sle2EthCfmLbControlRequest = _Sle2EthCfmLbControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 1),
    _Sle2EthCfmLbControlRequest_Type()
)
sle2EthCfmLbControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlRequest.setStatus("current")
_Sle2EthCfmLbControlStatus_Type = SleControlStatusType
_Sle2EthCfmLbControlStatus_Object = MibScalar
sle2EthCfmLbControlStatus = _Sle2EthCfmLbControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 2),
    _Sle2EthCfmLbControlStatus_Type()
)
sle2EthCfmLbControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlStatus.setStatus("current")
_Sle2EthCfmLbControlTimer_Type = Gauge32
_Sle2EthCfmLbControlTimer_Object = MibScalar
sle2EthCfmLbControlTimer = _Sle2EthCfmLbControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 3),
    _Sle2EthCfmLbControlTimer_Type()
)
sle2EthCfmLbControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlTimer.setStatus("current")
_Sle2EthCfmLbControlTimeStamp_Type = TimeTicks
_Sle2EthCfmLbControlTimeStamp_Object = MibScalar
sle2EthCfmLbControlTimeStamp = _Sle2EthCfmLbControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 4),
    _Sle2EthCfmLbControlTimeStamp_Type()
)
sle2EthCfmLbControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlTimeStamp.setStatus("current")
_Sle2EthCfmLbControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmLbControlReqResult_Object = MibScalar
sle2EthCfmLbControlReqResult = _Sle2EthCfmLbControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 5),
    _Sle2EthCfmLbControlReqResult_Type()
)
sle2EthCfmLbControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlReqResult.setStatus("current")


class _Sle2EthCfmLbControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmLbControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmLbControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlBridgeId_Object = MibScalar
sle2EthCfmLbControlBridgeId = _Sle2EthCfmLbControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 6),
    _Sle2EthCfmLbControlBridgeId_Type()
)
sle2EthCfmLbControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlBridgeId.setStatus("current")
_Sle2EthCfmLbControlMdName_Type = OctetString
_Sle2EthCfmLbControlMdName_Object = MibScalar
sle2EthCfmLbControlMdName = _Sle2EthCfmLbControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 7),
    _Sle2EthCfmLbControlMdName_Type()
)
sle2EthCfmLbControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlMdName.setStatus("current")


class _Sle2EthCfmLbControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmLbControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmLbControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlMaVid_Object = MibScalar
sle2EthCfmLbControlMaVid = _Sle2EthCfmLbControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 8),
    _Sle2EthCfmLbControlMaVid_Type()
)
sle2EthCfmLbControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlMaVid.setStatus("current")


class _Sle2EthCfmLbControlMepId_Type(Integer32):
    """Custom type sle2EthCfmLbControlMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmLbControlMepId_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlMepId_Object = MibScalar
sle2EthCfmLbControlMepId = _Sle2EthCfmLbControlMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 9),
    _Sle2EthCfmLbControlMepId_Type()
)
sle2EthCfmLbControlMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlMepId.setStatus("current")


class _Sle2EthCfmLbControlMdLevel_Type(Integer32):
    """Custom type sle2EthCfmLbControlMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmLbControlMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlMdLevel_Object = MibScalar
sle2EthCfmLbControlMdLevel = _Sle2EthCfmLbControlMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 10),
    _Sle2EthCfmLbControlMdLevel_Type()
)
sle2EthCfmLbControlMdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlMdLevel.setStatus("current")


class _Sle2EthCfmLbControlRmepId_Type(Integer32):
    """Custom type sle2EthCfmLbControlRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmLbControlRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlRmepId_Object = MibScalar
sle2EthCfmLbControlRmepId = _Sle2EthCfmLbControlRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 11),
    _Sle2EthCfmLbControlRmepId_Type()
)
sle2EthCfmLbControlRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlRmepId.setStatus("current")
_Sle2EthCfmLbControlRmepMac_Type = OctetString
_Sle2EthCfmLbControlRmepMac_Object = MibScalar
sle2EthCfmLbControlRmepMac = _Sle2EthCfmLbControlRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 12),
    _Sle2EthCfmLbControlRmepMac_Type()
)
sle2EthCfmLbControlRmepMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlRmepMac.setStatus("current")


class _Sle2EthCfmLbControlTlvType_Type(Integer32):
    """Custom type sle2EthCfmLbControlTlvType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tlvData", 1),
          ("tlvTest", 2))
    )


_Sle2EthCfmLbControlTlvType_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlTlvType_Object = MibScalar
sle2EthCfmLbControlTlvType = _Sle2EthCfmLbControlTlvType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 13),
    _Sle2EthCfmLbControlTlvType_Type()
)
sle2EthCfmLbControlTlvType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlTlvType.setStatus("current")


class _Sle2EthCfmLbControlTlvData_Type(Integer32):
    """Custom type sle2EthCfmLbControlTlvData based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9000),
    )


_Sle2EthCfmLbControlTlvData_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlTlvData_Object = MibScalar
sle2EthCfmLbControlTlvData = _Sle2EthCfmLbControlTlvData_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 14),
    _Sle2EthCfmLbControlTlvData_Type()
)
sle2EthCfmLbControlTlvData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlTlvData.setStatus("current")


class _Sle2EthCfmLbControlTlvTest_Type(Integer32):
    """Custom type sle2EthCfmLbControlTlvTest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("pattern1", 1),
          ("pattern2", 2),
          ("pattern3", 3),
          ("pattern4", 4))
    )


_Sle2EthCfmLbControlTlvTest_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlTlvTest_Object = MibScalar
sle2EthCfmLbControlTlvTest = _Sle2EthCfmLbControlTlvTest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 15),
    _Sle2EthCfmLbControlTlvTest_Type()
)
sle2EthCfmLbControlTlvTest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlTlvTest.setStatus("current")


class _Sle2EthCfmLbControlRecursive_Type(Integer32):
    """Custom type sle2EthCfmLbControlRecursive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmLbControlRecursive_Type.__name__ = "Integer32"
_Sle2EthCfmLbControlRecursive_Object = MibScalar
sle2EthCfmLbControlRecursive = _Sle2EthCfmLbControlRecursive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 2, 16),
    _Sle2EthCfmLbControlRecursive_Type()
)
sle2EthCfmLbControlRecursive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLbControlRecursive.setStatus("current")
_Sle2EthCfmLoopbackNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmLoopbackNotification = _Sle2EthCfmLoopbackNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 3)
)
_Sle2EthernetCfmLinkTrace_ObjectIdentity = ObjectIdentity
sle2EthernetCfmLinkTrace = _Sle2EthernetCfmLinkTrace_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10)
)
_Sle2EthCfmLinkTraceTable_Object = MibTable
sle2EthCfmLinkTraceTable = _Sle2EthCfmLinkTraceTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmLinkTraceTable.setStatus("current")
_Sle2EthCfmLinkTraceEntry_Object = MibTableRow
sle2EthCfmLinkTraceEntry = _Sle2EthCfmLinkTraceEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1)
)
sle2EthCfmLinkTraceEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmLinkTraceEntry.setStatus("current")
_Sle2EthCfmLtrMepMac_Type = OctetString
_Sle2EthCfmLtrMepMac_Object = MibTableColumn
sle2EthCfmLtrMepMac = _Sle2EthCfmLtrMepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 1),
    _Sle2EthCfmLtrMepMac_Type()
)
sle2EthCfmLtrMepMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrMepMac.setStatus("current")


class _Sle2EthCfmLtrHops_Type(Integer32):
    """Custom type sle2EthCfmLtrHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_Sle2EthCfmLtrHops_Type.__name__ = "Integer32"
_Sle2EthCfmLtrHops_Object = MibTableColumn
sle2EthCfmLtrHops = _Sle2EthCfmLtrHops_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 2),
    _Sle2EthCfmLtrHops_Type()
)
sle2EthCfmLtrHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrHops.setStatus("current")


class _Sle2EthCfmLtrRelay_Type(Integer32):
    """Custom type sle2EthCfmLtrRelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("rlyHit", 1),
          ("rlyFDB", 2),
          ("rlyMPDB", 3))
    )


_Sle2EthCfmLtrRelay_Type.__name__ = "Integer32"
_Sle2EthCfmLtrRelay_Object = MibTableColumn
sle2EthCfmLtrRelay = _Sle2EthCfmLtrRelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 3),
    _Sle2EthCfmLtrRelay_Type()
)
sle2EthCfmLtrRelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrRelay.setStatus("current")


class _Sle2EthCfmLtrIngressEgress_Type(Integer32):
    """Custom type sle2EthCfmLtrIngressEgress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ingress", 1),
          ("egress", 2))
    )


_Sle2EthCfmLtrIngressEgress_Type.__name__ = "Integer32"
_Sle2EthCfmLtrIngressEgress_Object = MibTableColumn
sle2EthCfmLtrIngressEgress = _Sle2EthCfmLtrIngressEgress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 4),
    _Sle2EthCfmLtrIngressEgress_Type()
)
sle2EthCfmLtrIngressEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrIngressEgress.setStatus("current")


class _Sle2EthCfmLtrIngress_Type(Integer32):
    """Custom type sle2EthCfmLtrIngress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ingNoTlv", 0),
          ("ingOK", 1),
          ("ingDown", 2),
          ("ingBlocked", 3),
          ("ingVid", 4))
    )


_Sle2EthCfmLtrIngress_Type.__name__ = "Integer32"
_Sle2EthCfmLtrIngress_Object = MibTableColumn
sle2EthCfmLtrIngress = _Sle2EthCfmLtrIngress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 5),
    _Sle2EthCfmLtrIngress_Type()
)
sle2EthCfmLtrIngress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrIngress.setStatus("current")


class _Sle2EthCfmLtrEgress_Type(Integer32):
    """Custom type sle2EthCfmLtrEgress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("egrNoTlv", 0),
          ("egrOK", 1),
          ("egrDown", 2),
          ("egrBlocked", 3),
          ("egrVid", 4))
    )


_Sle2EthCfmLtrEgress_Type.__name__ = "Integer32"
_Sle2EthCfmLtrEgress_Object = MibTableColumn
sle2EthCfmLtrEgress = _Sle2EthCfmLtrEgress_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 1, 1, 6),
    _Sle2EthCfmLtrEgress_Type()
)
sle2EthCfmLtrEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtrEgress.setStatus("current")
_Sle2EthCfmLinkTraceControl_ObjectIdentity = ObjectIdentity
sle2EthCfmLinkTraceControl = _Sle2EthCfmLinkTraceControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2)
)


class _Sle2EthCfmLtControlRequest_Type(Integer32):
    """Custom type sle2EthCfmLtControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("transmitLtDomain", 1),
          ("transmitLtLevel", 2))
    )


_Sle2EthCfmLtControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmLtControlRequest_Object = MibScalar
sle2EthCfmLtControlRequest = _Sle2EthCfmLtControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 1),
    _Sle2EthCfmLtControlRequest_Type()
)
sle2EthCfmLtControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlRequest.setStatus("current")
_Sle2EthCfmLtControlStatus_Type = SleControlStatusType
_Sle2EthCfmLtControlStatus_Object = MibScalar
sle2EthCfmLtControlStatus = _Sle2EthCfmLtControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 2),
    _Sle2EthCfmLtControlStatus_Type()
)
sle2EthCfmLtControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlStatus.setStatus("current")
_Sle2EthCfmLtControlTimer_Type = Gauge32
_Sle2EthCfmLtControlTimer_Object = MibScalar
sle2EthCfmLtControlTimer = _Sle2EthCfmLtControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 3),
    _Sle2EthCfmLtControlTimer_Type()
)
sle2EthCfmLtControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlTimer.setStatus("current")
_Sle2EthCfmLtControlTimeStamp_Type = TimeTicks
_Sle2EthCfmLtControlTimeStamp_Object = MibScalar
sle2EthCfmLtControlTimeStamp = _Sle2EthCfmLtControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 4),
    _Sle2EthCfmLtControlTimeStamp_Type()
)
sle2EthCfmLtControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlTimeStamp.setStatus("current")
_Sle2EthCfmLtControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmLtControlReqResult_Object = MibScalar
sle2EthCfmLtControlReqResult = _Sle2EthCfmLtControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 5),
    _Sle2EthCfmLtControlReqResult_Type()
)
sle2EthCfmLtControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlReqResult.setStatus("current")


class _Sle2EthCfmLtControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmLtControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmLtControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmLtControlBridgeId_Object = MibScalar
sle2EthCfmLtControlBridgeId = _Sle2EthCfmLtControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 6),
    _Sle2EthCfmLtControlBridgeId_Type()
)
sle2EthCfmLtControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlBridgeId.setStatus("current")
_Sle2EthCfmLtControlMdName_Type = OctetString
_Sle2EthCfmLtControlMdName_Object = MibScalar
sle2EthCfmLtControlMdName = _Sle2EthCfmLtControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 7),
    _Sle2EthCfmLtControlMdName_Type()
)
sle2EthCfmLtControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlMdName.setStatus("current")


class _Sle2EthCfmLtControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmLtControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmLtControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmLtControlMaVid_Object = MibScalar
sle2EthCfmLtControlMaVid = _Sle2EthCfmLtControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 8),
    _Sle2EthCfmLtControlMaVid_Type()
)
sle2EthCfmLtControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlMaVid.setStatus("current")


class _Sle2EthCfmLtControlLevel_Type(Integer32):
    """Custom type sle2EthCfmLtControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmLtControlLevel_Type.__name__ = "Integer32"
_Sle2EthCfmLtControlLevel_Object = MibScalar
sle2EthCfmLtControlLevel = _Sle2EthCfmLtControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 9),
    _Sle2EthCfmLtControlLevel_Type()
)
sle2EthCfmLtControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlLevel.setStatus("current")
_Sle2EthCfmLtControlRmepMac_Type = OctetString
_Sle2EthCfmLtControlRmepMac_Object = MibScalar
sle2EthCfmLtControlRmepMac = _Sle2EthCfmLtControlRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 10),
    _Sle2EthCfmLtControlRmepMac_Type()
)
sle2EthCfmLtControlRmepMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlRmepMac.setStatus("current")
_Sle2EthCfmLtControlMepId_Type = Integer32
_Sle2EthCfmLtControlMepId_Object = MibScalar
sle2EthCfmLtControlMepId = _Sle2EthCfmLtControlMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 2, 11),
    _Sle2EthCfmLtControlMepId_Type()
)
sle2EthCfmLtControlMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmLtControlMepId.setStatus("current")
_Sle2EthCfmLinkTraceNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmLinkTraceNotification = _Sle2EthCfmLinkTraceNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 3)
)
_Sle2EthernetCfmAis_ObjectIdentity = ObjectIdentity
sle2EthernetCfmAis = _Sle2EthernetCfmAis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11)
)
_Sle2EthernetCfmAisInfo_ObjectIdentity = ObjectIdentity
sle2EthernetCfmAisInfo = _Sle2EthernetCfmAisInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1)
)
_Sle2EthCfmAisInfoTable_Object = MibTable
sle2EthCfmAisInfoTable = _Sle2EthCfmAisInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoTable.setStatus("current")
_Sle2EthCfmAisInfoEntry_Object = MibTableRow
sle2EthCfmAisInfoEntry = _Sle2EthCfmAisInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1)
)
sle2EthCfmAisInfoEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoDefectConditions"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoLevel"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoRmepMac"),
)
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoEntry.setStatus("current")


class _Sle2EthCfmAisInfoStatus_Type(Integer32):
    """Custom type sle2EthCfmAisInfoStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmAisInfoStatus_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoStatus_Object = MibTableColumn
sle2EthCfmAisInfoStatus = _Sle2EthCfmAisInfoStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 1),
    _Sle2EthCfmAisInfoStatus_Type()
)
sle2EthCfmAisInfoStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoStatus.setStatus("current")


class _Sle2EthCfmAisInfoDefectConditions_Type(Integer32):
    """Custom type sle2EthCfmAisInfoDefectConditions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("loc", 2),
          ("mismerge", 3),
          ("unexpectedMep", 4),
          ("unexpectedMegLevel", 5),
          ("unexpectedPeriod", 6))
    )


_Sle2EthCfmAisInfoDefectConditions_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoDefectConditions_Object = MibTableColumn
sle2EthCfmAisInfoDefectConditions = _Sle2EthCfmAisInfoDefectConditions_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 2),
    _Sle2EthCfmAisInfoDefectConditions_Type()
)
sle2EthCfmAisInfoDefectConditions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoDefectConditions.setStatus("current")


class _Sle2EthCfmAisInfoLevel_Type(Integer32):
    """Custom type sle2EthCfmAisInfoLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmAisInfoLevel_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoLevel_Object = MibTableColumn
sle2EthCfmAisInfoLevel = _Sle2EthCfmAisInfoLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 3),
    _Sle2EthCfmAisInfoLevel_Type()
)
sle2EthCfmAisInfoLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoLevel.setStatus("current")


class _Sle2EthCfmAisInfoFrameType_Type(Integer32):
    """Custom type sle2EthCfmAisInfoFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_Sle2EthCfmAisInfoFrameType_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoFrameType_Object = MibTableColumn
sle2EthCfmAisInfoFrameType = _Sle2EthCfmAisInfoFrameType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 4),
    _Sle2EthCfmAisInfoFrameType_Type()
)
sle2EthCfmAisInfoFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoFrameType.setStatus("current")
_Sle2EthCfmAisInfoRmepMac_Type = OctetString
_Sle2EthCfmAisInfoRmepMac_Object = MibTableColumn
sle2EthCfmAisInfoRmepMac = _Sle2EthCfmAisInfoRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 5),
    _Sle2EthCfmAisInfoRmepMac_Type()
)
sle2EthCfmAisInfoRmepMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoRmepMac.setStatus("current")


class _Sle2EthCfmAisInfoInterval_Type(Integer32):
    """Custom type sle2EthCfmAisInfoInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_Sle2EthCfmAisInfoInterval_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoInterval_Object = MibTableColumn
sle2EthCfmAisInfoInterval = _Sle2EthCfmAisInfoInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 6),
    _Sle2EthCfmAisInfoInterval_Type()
)
sle2EthCfmAisInfoInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoInterval.setStatus("current")


class _Sle2EthCfmAisInfoReceivedDefectConditions_Type(Integer32):
    """Custom type sle2EthCfmAisInfoReceivedDefectConditions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("loc", 2),
          ("mismerge", 3),
          ("unexpectedMep", 4),
          ("unexpectedMegLevel", 5),
          ("unexpectedPeriod", 6))
    )


_Sle2EthCfmAisInfoReceivedDefectConditions_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoReceivedDefectConditions_Object = MibTableColumn
sle2EthCfmAisInfoReceivedDefectConditions = _Sle2EthCfmAisInfoReceivedDefectConditions_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 7),
    _Sle2EthCfmAisInfoReceivedDefectConditions_Type()
)
sle2EthCfmAisInfoReceivedDefectConditions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoReceivedDefectConditions.setStatus("current")


class _Sle2EthCfmAisInfoLastReceivedDefectCondition_Type(Integer32):
    """Custom type sle2EthCfmAisInfoLastReceivedDefectCondition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("loc", 2),
          ("mismerge", 3),
          ("unexpectedMep", 4),
          ("unexpectedMegLevel", 5),
          ("unexpectedPeriod", 6))
    )


_Sle2EthCfmAisInfoLastReceivedDefectCondition_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoLastReceivedDefectCondition_Object = MibTableColumn
sle2EthCfmAisInfoLastReceivedDefectCondition = _Sle2EthCfmAisInfoLastReceivedDefectCondition_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 1, 1, 8),
    _Sle2EthCfmAisInfoLastReceivedDefectCondition_Type()
)
sle2EthCfmAisInfoLastReceivedDefectCondition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoLastReceivedDefectCondition.setStatus("current")
_Sle2EthCfmAisInfoControl_ObjectIdentity = ObjectIdentity
sle2EthCfmAisInfoControl = _Sle2EthCfmAisInfoControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2)
)


class _Sle2EthCfmAisInfoControlRequest_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("setCfmAisInfoStatus", 1),
          ("setCfmAisInfoInterval", 2))
    )


_Sle2EthCfmAisInfoControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlRequest_Object = MibScalar
sle2EthCfmAisInfoControlRequest = _Sle2EthCfmAisInfoControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 1),
    _Sle2EthCfmAisInfoControlRequest_Type()
)
sle2EthCfmAisInfoControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlRequest.setStatus("current")
_Sle2EthCfmAisInfoControlStatus_Type = SleControlStatusType
_Sle2EthCfmAisInfoControlStatus_Object = MibScalar
sle2EthCfmAisInfoControlStatus = _Sle2EthCfmAisInfoControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 2),
    _Sle2EthCfmAisInfoControlStatus_Type()
)
sle2EthCfmAisInfoControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlStatus.setStatus("current")
_Sle2EthCfmAisInfoControlTimer_Type = Gauge32
_Sle2EthCfmAisInfoControlTimer_Object = MibScalar
sle2EthCfmAisInfoControlTimer = _Sle2EthCfmAisInfoControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 3),
    _Sle2EthCfmAisInfoControlTimer_Type()
)
sle2EthCfmAisInfoControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlTimer.setStatus("current")
_Sle2EthCfmAisInfoControlTimeStamp_Type = TimeTicks
_Sle2EthCfmAisInfoControlTimeStamp_Object = MibScalar
sle2EthCfmAisInfoControlTimeStamp = _Sle2EthCfmAisInfoControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 4),
    _Sle2EthCfmAisInfoControlTimeStamp_Type()
)
sle2EthCfmAisInfoControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlTimeStamp.setStatus("current")
_Sle2EthCfmAisInfoControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmAisInfoControlReqResult_Object = MibScalar
sle2EthCfmAisInfoControlReqResult = _Sle2EthCfmAisInfoControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 5),
    _Sle2EthCfmAisInfoControlReqResult_Type()
)
sle2EthCfmAisInfoControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlReqResult.setStatus("current")


class _Sle2EthCfmAisInfoControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmAisInfoControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlBridgeId_Object = MibScalar
sle2EthCfmAisInfoControlBridgeId = _Sle2EthCfmAisInfoControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 6),
    _Sle2EthCfmAisInfoControlBridgeId_Type()
)
sle2EthCfmAisInfoControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlBridgeId.setStatus("current")
_Sle2EthCfmAisInfoControlMdName_Type = OctetString
_Sle2EthCfmAisInfoControlMdName_Object = MibScalar
sle2EthCfmAisInfoControlMdName = _Sle2EthCfmAisInfoControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 7),
    _Sle2EthCfmAisInfoControlMdName_Type()
)
sle2EthCfmAisInfoControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlMdName.setStatus("current")


class _Sle2EthCfmAisInfoControlMaVid_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmAisInfoControlMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlMaVid_Object = MibScalar
sle2EthCfmAisInfoControlMaVid = _Sle2EthCfmAisInfoControlMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 8),
    _Sle2EthCfmAisInfoControlMaVid_Type()
)
sle2EthCfmAisInfoControlMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlMaVid.setStatus("current")


class _Sle2EthCfmAisInfoControlMepId_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmAisInfoControlMepId_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlMepId_Object = MibScalar
sle2EthCfmAisInfoControlMepId = _Sle2EthCfmAisInfoControlMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 9),
    _Sle2EthCfmAisInfoControlMepId_Type()
)
sle2EthCfmAisInfoControlMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlMepId.setStatus("current")


class _Sle2EthCfmAisInfoControlEnable_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmAisInfoControlEnable_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlEnable_Object = MibScalar
sle2EthCfmAisInfoControlEnable = _Sle2EthCfmAisInfoControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 10),
    _Sle2EthCfmAisInfoControlEnable_Type()
)
sle2EthCfmAisInfoControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlEnable.setStatus("current")


class _Sle2EthCfmAisInfoControlDefectConditions_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlDefectConditions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("loc", 2),
          ("mismerge", 3),
          ("unexpectedMep", 4),
          ("unexpectedMegLevel", 5),
          ("unexpectedPeriod", 6))
    )


_Sle2EthCfmAisInfoControlDefectConditions_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlDefectConditions_Object = MibScalar
sle2EthCfmAisInfoControlDefectConditions = _Sle2EthCfmAisInfoControlDefectConditions_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 11),
    _Sle2EthCfmAisInfoControlDefectConditions_Type()
)
sle2EthCfmAisInfoControlDefectConditions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlDefectConditions.setStatus("current")


class _Sle2EthCfmAisInfoControlLevel_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmAisInfoControlLevel_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlLevel_Object = MibScalar
sle2EthCfmAisInfoControlLevel = _Sle2EthCfmAisInfoControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 12),
    _Sle2EthCfmAisInfoControlLevel_Type()
)
sle2EthCfmAisInfoControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlLevel.setStatus("current")


class _Sle2EthCfmAisInfoControlFrameType_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_Sle2EthCfmAisInfoControlFrameType_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlFrameType_Object = MibScalar
sle2EthCfmAisInfoControlFrameType = _Sle2EthCfmAisInfoControlFrameType_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 13),
    _Sle2EthCfmAisInfoControlFrameType_Type()
)
sle2EthCfmAisInfoControlFrameType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlFrameType.setStatus("current")
_Sle2EthCfmAisInfoControlRmepMac_Type = OctetString
_Sle2EthCfmAisInfoControlRmepMac_Object = MibScalar
sle2EthCfmAisInfoControlRmepMac = _Sle2EthCfmAisInfoControlRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 14),
    _Sle2EthCfmAisInfoControlRmepMac_Type()
)
sle2EthCfmAisInfoControlRmepMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlRmepMac.setStatus("current")


class _Sle2EthCfmAisInfoControlInterval_Type(Integer32):
    """Custom type sle2EthCfmAisInfoControlInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_Sle2EthCfmAisInfoControlInterval_Type.__name__ = "Integer32"
_Sle2EthCfmAisInfoControlInterval_Object = MibScalar
sle2EthCfmAisInfoControlInterval = _Sle2EthCfmAisInfoControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 2, 15),
    _Sle2EthCfmAisInfoControlInterval_Type()
)
sle2EthCfmAisInfoControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoControlInterval.setStatus("current")
_Sle2EthCfmAisInfoNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmAisInfoNotification = _Sle2EthCfmAisInfoNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 3)
)
_Sle2EthernetCfmSrvAis_ObjectIdentity = ObjectIdentity
sle2EthernetCfmSrvAis = _Sle2EthernetCfmSrvAis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2)
)
_Sle2EthCfmSrvAisTable_Object = MibTable
sle2EthCfmSrvAisTable = _Sle2EthCfmSrvAisTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisTable.setStatus("current")
_Sle2EthCfmSrvAisEntry_Object = MibTableRow
sle2EthCfmSrvAisEntry = _Sle2EthCfmSrvAisEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1, 1)
)
sle2EthCfmSrvAisEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisIfIndex"),
)
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisEntry.setStatus("current")


class _Sle2EthCfmSrvAisIfIndex_Type(Integer32):
    """Custom type sle2EthCfmSrvAisIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Sle2EthCfmSrvAisIfIndex_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisIfIndex_Object = MibTableColumn
sle2EthCfmSrvAisIfIndex = _Sle2EthCfmSrvAisIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1, 1, 1),
    _Sle2EthCfmSrvAisIfIndex_Type()
)
sle2EthCfmSrvAisIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisIfIndex.setStatus("current")


class _Sle2EthCfmSrvAisEnable_Type(Integer32):
    """Custom type sle2EthCfmSrvAisEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmSrvAisEnable_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisEnable_Object = MibTableColumn
sle2EthCfmSrvAisEnable = _Sle2EthCfmSrvAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1, 1, 2),
    _Sle2EthCfmSrvAisEnable_Type()
)
sle2EthCfmSrvAisEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisEnable.setStatus("current")


class _Sle2EthCfmSrvAislevel_Type(Integer32):
    """Custom type sle2EthCfmSrvAislevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmSrvAislevel_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAislevel_Object = MibTableColumn
sle2EthCfmSrvAislevel = _Sle2EthCfmSrvAislevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1, 1, 3),
    _Sle2EthCfmSrvAislevel_Type()
)
sle2EthCfmSrvAislevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAislevel.setStatus("current")


class _Sle2EthCfmSrvAisInterval_Type(Integer32):
    """Custom type sle2EthCfmSrvAisInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_Sle2EthCfmSrvAisInterval_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisInterval_Object = MibTableColumn
sle2EthCfmSrvAisInterval = _Sle2EthCfmSrvAisInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 1, 1, 4),
    _Sle2EthCfmSrvAisInterval_Type()
)
sle2EthCfmSrvAisInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisInterval.setStatus("current")
_Sle2EthCfmSrvAisControl_ObjectIdentity = ObjectIdentity
sle2EthCfmSrvAisControl = _Sle2EthCfmSrvAisControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2)
)


class _Sle2EthCfmSrvAisControlRequest_Type(Integer32):
    """Custom type sle2EthCfmSrvAisControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("setCfmSrvAisEnable", 1)
    )


_Sle2EthCfmSrvAisControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisControlRequest_Object = MibScalar
sle2EthCfmSrvAisControlRequest = _Sle2EthCfmSrvAisControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 1),
    _Sle2EthCfmSrvAisControlRequest_Type()
)
sle2EthCfmSrvAisControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlRequest.setStatus("current")
_Sle2EthCfmSrvAisControlStatus_Type = SleControlStatusType
_Sle2EthCfmSrvAisControlStatus_Object = MibScalar
sle2EthCfmSrvAisControlStatus = _Sle2EthCfmSrvAisControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 2),
    _Sle2EthCfmSrvAisControlStatus_Type()
)
sle2EthCfmSrvAisControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlStatus.setStatus("current")
_Sle2EthCfmSrvAisControlTimer_Type = Gauge32
_Sle2EthCfmSrvAisControlTimer_Object = MibScalar
sle2EthCfmSrvAisControlTimer = _Sle2EthCfmSrvAisControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 3),
    _Sle2EthCfmSrvAisControlTimer_Type()
)
sle2EthCfmSrvAisControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlTimer.setStatus("current")
_Sle2EthCfmSrvAisControlTimeStamp_Type = TimeTicks
_Sle2EthCfmSrvAisControlTimeStamp_Object = MibScalar
sle2EthCfmSrvAisControlTimeStamp = _Sle2EthCfmSrvAisControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 4),
    _Sle2EthCfmSrvAisControlTimeStamp_Type()
)
sle2EthCfmSrvAisControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlTimeStamp.setStatus("current")
_Sle2EthCfmSrvAisControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmSrvAisControlReqResult_Object = MibScalar
sle2EthCfmSrvAisControlReqResult = _Sle2EthCfmSrvAisControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 5),
    _Sle2EthCfmSrvAisControlReqResult_Type()
)
sle2EthCfmSrvAisControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlReqResult.setStatus("current")


class _Sle2EthCfmSrvAisControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmSrvAisControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2EthCfmSrvAisControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisControlBridgeId_Object = MibScalar
sle2EthCfmSrvAisControlBridgeId = _Sle2EthCfmSrvAisControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 6),
    _Sle2EthCfmSrvAisControlBridgeId_Type()
)
sle2EthCfmSrvAisControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlBridgeId.setStatus("current")
_Sle2EthCfmSrvAisControlIfIndex_Type = Integer32
_Sle2EthCfmSrvAisControlIfIndex_Object = MibScalar
sle2EthCfmSrvAisControlIfIndex = _Sle2EthCfmSrvAisControlIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 7),
    _Sle2EthCfmSrvAisControlIfIndex_Type()
)
sle2EthCfmSrvAisControlIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlIfIndex.setStatus("current")


class _Sle2EthCfmSrvAisControlEnable_Type(Integer32):
    """Custom type sle2EthCfmSrvAisControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2EthCfmSrvAisControlEnable_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisControlEnable_Object = MibScalar
sle2EthCfmSrvAisControlEnable = _Sle2EthCfmSrvAisControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 8),
    _Sle2EthCfmSrvAisControlEnable_Type()
)
sle2EthCfmSrvAisControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlEnable.setStatus("current")


class _Sle2EthCfmSrvAisControlLevel_Type(Integer32):
    """Custom type sle2EthCfmSrvAisControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmSrvAisControlLevel_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisControlLevel_Object = MibScalar
sle2EthCfmSrvAisControlLevel = _Sle2EthCfmSrvAisControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 9),
    _Sle2EthCfmSrvAisControlLevel_Type()
)
sle2EthCfmSrvAisControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlLevel.setStatus("current")


class _Sle2EthCfmSrvAisControlInterval_Type(Integer32):
    """Custom type sle2EthCfmSrvAisControlInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_Sle2EthCfmSrvAisControlInterval_Type.__name__ = "Integer32"
_Sle2EthCfmSrvAisControlInterval_Object = MibScalar
sle2EthCfmSrvAisControlInterval = _Sle2EthCfmSrvAisControlInterval_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 2, 10),
    _Sle2EthCfmSrvAisControlInterval_Type()
)
sle2EthCfmSrvAisControlInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisControlInterval.setStatus("current")
_Sle2EthCfmSrvAisNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmSrvAisNotification = _Sle2EthCfmSrvAisNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 3)
)
_Sle2EthernetCfmLmStatus_ObjectIdentity = ObjectIdentity
sle2EthernetCfmLmStatus = _Sle2EthernetCfmLmStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12)
)
_Sle2EthCfmLmmStatusTable_Object = MibTable
sle2EthCfmLmmStatusTable = _Sle2EthCfmLmmStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusTable.setStatus("current")
_Sle2EthCfmLmmStatusEntry_Object = MibTableRow
sle2EthCfmLmmStatusEntry = _Sle2EthCfmLmmStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1)
)
sle2EthCfmLmmStatusEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusEntry.setStatus("current")


class _Sle2EthCfmLmmStatusRmepId_Type(Integer32):
    """Custom type sle2EthCfmLmmStatusRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmLmmStatusRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmLmmStatusRmepId_Object = MibTableColumn
sle2EthCfmLmmStatusRmepId = _Sle2EthCfmLmmStatusRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 1),
    _Sle2EthCfmLmmStatusRmepId_Type()
)
sle2EthCfmLmmStatusRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusRmepId.setStatus("current")
_Sle2EthCfmLmmStatusStartTime_Type = TimeTicks
_Sle2EthCfmLmmStatusStartTime_Object = MibTableColumn
sle2EthCfmLmmStatusStartTime = _Sle2EthCfmLmmStatusStartTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 2),
    _Sle2EthCfmLmmStatusStartTime_Type()
)
sle2EthCfmLmmStatusStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusStartTime.setStatus("current")
_Sle2EthCfmLmmStatusCurrentTime_Type = TimeTicks
_Sle2EthCfmLmmStatusCurrentTime_Object = MibTableColumn
sle2EthCfmLmmStatusCurrentTime = _Sle2EthCfmLmmStatusCurrentTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 3),
    _Sle2EthCfmLmmStatusCurrentTime_Type()
)
sle2EthCfmLmmStatusCurrentTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusCurrentTime.setStatus("current")
_Sle2EthCfmLmmStatusEndTime_Type = TimeTicks
_Sle2EthCfmLmmStatusEndTime_Object = MibTableColumn
sle2EthCfmLmmStatusEndTime = _Sle2EthCfmLmmStatusEndTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 4),
    _Sle2EthCfmLmmStatusEndTime_Type()
)
sle2EthCfmLmmStatusEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusEndTime.setStatus("current")
_Sle2EthCfmLmmStatusNeerLoss_Type = Integer32
_Sle2EthCfmLmmStatusNeerLoss_Object = MibTableColumn
sle2EthCfmLmmStatusNeerLoss = _Sle2EthCfmLmmStatusNeerLoss_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 5),
    _Sle2EthCfmLmmStatusNeerLoss_Type()
)
sle2EthCfmLmmStatusNeerLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusNeerLoss.setStatus("current")
_Sle2EthCfmLmmStatusFarLoss_Type = Integer32
_Sle2EthCfmLmmStatusFarLoss_Object = MibTableColumn
sle2EthCfmLmmStatusFarLoss = _Sle2EthCfmLmmStatusFarLoss_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 6),
    _Sle2EthCfmLmmStatusFarLoss_Type()
)
sle2EthCfmLmmStatusFarLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusFarLoss.setStatus("current")
_Sle2EthCfmLmmStatusCurNeerLoss_Type = Integer32
_Sle2EthCfmLmmStatusCurNeerLoss_Object = MibTableColumn
sle2EthCfmLmmStatusCurNeerLoss = _Sle2EthCfmLmmStatusCurNeerLoss_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 7),
    _Sle2EthCfmLmmStatusCurNeerLoss_Type()
)
sle2EthCfmLmmStatusCurNeerLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusCurNeerLoss.setStatus("current")
_Sle2EthCfmLmmStatusCurFarLoss_Type = Integer32
_Sle2EthCfmLmmStatusCurFarLoss_Object = MibTableColumn
sle2EthCfmLmmStatusCurFarLoss = _Sle2EthCfmLmmStatusCurFarLoss_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 12, 1, 1, 8),
    _Sle2EthCfmLmmStatusCurFarLoss_Type()
)
sle2EthCfmLmmStatusCurFarLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLmmStatusCurFarLoss.setStatus("current")
_Sle2EthernetCfmRmep_ObjectIdentity = ObjectIdentity
sle2EthernetCfmRmep = _Sle2EthernetCfmRmep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13)
)
_Sle2EthCfmRmepTable_Object = MibTable
sle2EthCfmRmepTable = _Sle2EthCfmRmepTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmRmepTable.setStatus("current")
_Sle2EthCfmRmepEntry_Object = MibTableRow
sle2EthCfmRmepEntry = _Sle2EthCfmRmepEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1)
)
sle2EthCfmRmepEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmRmepId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmRmepEntry.setStatus("current")


class _Sle2EthCfmRmepId_Type(Integer32):
    """Custom type sle2EthCfmRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmRmepId_Type.__name__ = "Integer32"
_Sle2EthCfmRmepId_Object = MibTableColumn
sle2EthCfmRmepId = _Sle2EthCfmRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 1),
    _Sle2EthCfmRmepId_Type()
)
sle2EthCfmRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepId.setStatus("current")


class _Sle2EthCfmRempMepId_Type(Integer32):
    """Custom type sle2EthCfmRempMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmRempMepId_Type.__name__ = "Integer32"
_Sle2EthCfmRempMepId_Object = MibTableColumn
sle2EthCfmRempMepId = _Sle2EthCfmRempMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 2),
    _Sle2EthCfmRempMepId_Type()
)
sle2EthCfmRempMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRempMepId.setStatus("current")


class _Sle2EthCfmRmepLevel_Type(Integer32):
    """Custom type sle2EthCfmRmepLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmRmepLevel_Type.__name__ = "Integer32"
_Sle2EthCfmRmepLevel_Object = MibTableColumn
sle2EthCfmRmepLevel = _Sle2EthCfmRmepLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 3),
    _Sle2EthCfmRmepLevel_Type()
)
sle2EthCfmRmepLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepLevel.setStatus("current")


class _Sle2EthCfmRmepMaVid_Type(Integer32):
    """Custom type sle2EthCfmRmepMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_Sle2EthCfmRmepMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmRmepMaVid_Object = MibTableColumn
sle2EthCfmRmepMaVid = _Sle2EthCfmRmepMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 4),
    _Sle2EthCfmRmepMaVid_Type()
)
sle2EthCfmRmepMaVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepMaVid.setStatus("current")


class _Sle2EthCfmRmepActiveState_Type(Integer32):
    """Custom type sle2EthCfmRmepActiveState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmRmepActiveState_Type.__name__ = "Integer32"
_Sle2EthCfmRmepActiveState_Object = MibTableColumn
sle2EthCfmRmepActiveState = _Sle2EthCfmRmepActiveState_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 5),
    _Sle2EthCfmRmepActiveState_Type()
)
sle2EthCfmRmepActiveState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepActiveState.setStatus("current")
_Sle2EthCfmRmepRemoteMac_Type = OctetString
_Sle2EthCfmRmepRemoteMac_Object = MibTableColumn
sle2EthCfmRmepRemoteMac = _Sle2EthCfmRmepRemoteMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 6),
    _Sle2EthCfmRmepRemoteMac_Type()
)
sle2EthCfmRmepRemoteMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepRemoteMac.setStatus("current")


class _Sle2EthCfmRmepRdi_Type(Integer32):
    """Custom type sle2EthCfmRmepRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_Sle2EthCfmRmepRdi_Type.__name__ = "Integer32"
_Sle2EthCfmRmepRdi_Object = MibTableColumn
sle2EthCfmRmepRdi = _Sle2EthCfmRmepRdi_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 7),
    _Sle2EthCfmRmepRdi_Type()
)
sle2EthCfmRmepRdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepRdi.setStatus("current")


class _Sle2EthCfmRmepFlags_Type(Integer32):
    """Custom type sle2EthCfmRmepFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("configured", 1),
          ("configuredLearnt", 2),
          ("learnt", 3))
    )


_Sle2EthCfmRmepFlags_Type.__name__ = "Integer32"
_Sle2EthCfmRmepFlags_Object = MibTableColumn
sle2EthCfmRmepFlags = _Sle2EthCfmRmepFlags_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 1, 1, 8),
    _Sle2EthCfmRmepFlags_Type()
)
sle2EthCfmRmepFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmRmepFlags.setStatus("current")
_Sle2EthCfmRmepControl_ObjectIdentity = ObjectIdentity
sle2EthCfmRmepControl = _Sle2EthCfmRmepControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2)
)


class _Sle2EthCfmRmepControlRequest_Type(Integer32):
    """Custom type sle2EthCfmRmepControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clearRmepDomain", 1),
          ("clearRmepLevel", 2))
    )


_Sle2EthCfmRmepControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmRmepControlRequest_Object = MibScalar
sle2EthCfmRmepControlRequest = _Sle2EthCfmRmepControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 1),
    _Sle2EthCfmRmepControlRequest_Type()
)
sle2EthCfmRmepControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlRequest.setStatus("current")
_Sle2EthCfmRmepControlStatus_Type = SleControlStatusType
_Sle2EthCfmRmepControlStatus_Object = MibScalar
sle2EthCfmRmepControlStatus = _Sle2EthCfmRmepControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 2),
    _Sle2EthCfmRmepControlStatus_Type()
)
sle2EthCfmRmepControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlStatus.setStatus("current")
_Sle2EthCfmRmepControlTimer_Type = Gauge32
_Sle2EthCfmRmepControlTimer_Object = MibScalar
sle2EthCfmRmepControlTimer = _Sle2EthCfmRmepControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 3),
    _Sle2EthCfmRmepControlTimer_Type()
)
sle2EthCfmRmepControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlTimer.setStatus("current")
_Sle2EthCfmRmepControlTimeStamp_Type = TimeTicks
_Sle2EthCfmRmepControlTimeStamp_Object = MibScalar
sle2EthCfmRmepControlTimeStamp = _Sle2EthCfmRmepControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 4),
    _Sle2EthCfmRmepControlTimeStamp_Type()
)
sle2EthCfmRmepControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlTimeStamp.setStatus("current")
_Sle2EthCfmRmepControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmRmepControlReqResult_Object = MibScalar
sle2EthCfmRmepControlReqResult = _Sle2EthCfmRmepControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 5),
    _Sle2EthCfmRmepControlReqResult_Type()
)
sle2EthCfmRmepControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlReqResult.setStatus("current")


class _Sle2EthCfmRmepControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmRmepControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmRmepControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmRmepControlBridgeId_Object = MibScalar
sle2EthCfmRmepControlBridgeId = _Sle2EthCfmRmepControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 6),
    _Sle2EthCfmRmepControlBridgeId_Type()
)
sle2EthCfmRmepControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlBridgeId.setStatus("current")
_Sle2EthCfmRmepControlMdName_Type = OctetString
_Sle2EthCfmRmepControlMdName_Object = MibScalar
sle2EthCfmRmepControlMdName = _Sle2EthCfmRmepControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 7),
    _Sle2EthCfmRmepControlMdName_Type()
)
sle2EthCfmRmepControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlMdName.setStatus("current")


class _Sle2EthCfmRmepControlMdLevel_Type(Integer32):
    """Custom type sle2EthCfmRmepControlMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmRmepControlMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmRmepControlMdLevel_Object = MibScalar
sle2EthCfmRmepControlMdLevel = _Sle2EthCfmRmepControlMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 2, 8),
    _Sle2EthCfmRmepControlMdLevel_Type()
)
sle2EthCfmRmepControlMdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmRmepControlMdLevel.setStatus("current")
_Sle2EthCfmRmepNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmRmepNotification = _Sle2EthCfmRmepNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 3)
)
_Sle2EthernetCfmMip_ObjectIdentity = ObjectIdentity
sle2EthernetCfmMip = _Sle2EthernetCfmMip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14)
)
_Sle2EthCfmMipTable_Object = MibTable
sle2EthCfmMipTable = _Sle2EthCfmMipTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmMipTable.setStatus("current")
_Sle2EthCfmMipEntry_Object = MibTableRow
sle2EthCfmMipEntry = _Sle2EthCfmMipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1, 1)
)
sle2EthCfmMipEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMipVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMipMdLevel"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMipIfindex"),
)
if mibBuilder.loadTexts:
    sle2EthCfmMipEntry.setStatus("current")


class _Sle2EthCfmMipVid_Type(Integer32):
    """Custom type sle2EthCfmMipVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2EthCfmMipVid_Type.__name__ = "Integer32"
_Sle2EthCfmMipVid_Object = MibTableColumn
sle2EthCfmMipVid = _Sle2EthCfmMipVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1, 1, 1),
    _Sle2EthCfmMipVid_Type()
)
sle2EthCfmMipVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMipVid.setStatus("current")


class _Sle2EthCfmMipMdLevel_Type(Integer32):
    """Custom type sle2EthCfmMipMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmMipMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmMipMdLevel_Object = MibTableColumn
sle2EthCfmMipMdLevel = _Sle2EthCfmMipMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1, 1, 2),
    _Sle2EthCfmMipMdLevel_Type()
)
sle2EthCfmMipMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMipMdLevel.setStatus("current")


class _Sle2EthCfmMipIfindex_Type(Integer32):
    """Custom type sle2EthCfmMipIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Sle2EthCfmMipIfindex_Type.__name__ = "Integer32"
_Sle2EthCfmMipIfindex_Object = MibTableColumn
sle2EthCfmMipIfindex = _Sle2EthCfmMipIfindex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1, 1, 3),
    _Sle2EthCfmMipIfindex_Type()
)
sle2EthCfmMipIfindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMipIfindex.setStatus("current")
_Sle2EthCfmMipLocalMac_Type = OctetString
_Sle2EthCfmMipLocalMac_Object = MibTableColumn
sle2EthCfmMipLocalMac = _Sle2EthCfmMipLocalMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 14, 1, 1, 4),
    _Sle2EthCfmMipLocalMac_Type()
)
sle2EthCfmMipLocalMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmMipLocalMac.setStatus("current")
_Sle2EthernetCfmStatistics_ObjectIdentity = ObjectIdentity
sle2EthernetCfmStatistics = _Sle2EthernetCfmStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15)
)
_Sle2EthCfmStatisticsTable_Object = MibTable
sle2EthCfmStatisticsTable = _Sle2EthCfmStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmStatisticsTable.setStatus("current")
_Sle2EthCfmStatisticsEntry_Object = MibTableRow
sle2EthCfmStatisticsEntry = _Sle2EthCfmStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1)
)
sle2EthCfmStatisticsEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
)
if mibBuilder.loadTexts:
    sle2EthCfmStatisticsEntry.setStatus("current")
_Sle2EthCfmStatCcmSent_Type = Gauge32
_Sle2EthCfmStatCcmSent_Object = MibTableColumn
sle2EthCfmStatCcmSent = _Sle2EthCfmStatCcmSent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 1),
    _Sle2EthCfmStatCcmSent_Type()
)
sle2EthCfmStatCcmSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatCcmSent.setStatus("current")
_Sle2EthCfmStatCcmRevOutOfSeq_Type = Gauge32
_Sle2EthCfmStatCcmRevOutOfSeq_Object = MibTableColumn
sle2EthCfmStatCcmRevOutOfSeq = _Sle2EthCfmStatCcmRevOutOfSeq_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 2),
    _Sle2EthCfmStatCcmRevOutOfSeq_Type()
)
sle2EthCfmStatCcmRevOutOfSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatCcmRevOutOfSeq.setStatus("current")
_Sle2EthCfmStatLbrSent_Type = Gauge32
_Sle2EthCfmStatLbrSent_Object = MibTableColumn
sle2EthCfmStatLbrSent = _Sle2EthCfmStatLbrSent_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 3),
    _Sle2EthCfmStatLbrSent_Type()
)
sle2EthCfmStatLbrSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatLbrSent.setStatus("current")
_Sle2EthCfmStatLbrRevValid_Type = Gauge32
_Sle2EthCfmStatLbrRevValid_Object = MibTableColumn
sle2EthCfmStatLbrRevValid = _Sle2EthCfmStatLbrRevValid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 4),
    _Sle2EthCfmStatLbrRevValid_Type()
)
sle2EthCfmStatLbrRevValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatLbrRevValid.setStatus("current")
_Sle2EthCfmStatLbrRevBadMsdu_Type = Gauge32
_Sle2EthCfmStatLbrRevBadMsdu_Object = MibTableColumn
sle2EthCfmStatLbrRevBadMsdu = _Sle2EthCfmStatLbrRevBadMsdu_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 5),
    _Sle2EthCfmStatLbrRevBadMsdu_Type()
)
sle2EthCfmStatLbrRevBadMsdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatLbrRevBadMsdu.setStatus("current")
_Sle2EthCfmStatLbrRevOutOfSeq_Type = Gauge32
_Sle2EthCfmStatLbrRevOutOfSeq_Object = MibTableColumn
sle2EthCfmStatLbrRevOutOfSeq = _Sle2EthCfmStatLbrRevOutOfSeq_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 6),
    _Sle2EthCfmStatLbrRevOutOfSeq_Type()
)
sle2EthCfmStatLbrRevOutOfSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatLbrRevOutOfSeq.setStatus("current")
_Sle2EthCfmStatLtrRevUnexpected_Type = Counter32
_Sle2EthCfmStatLtrRevUnexpected_Object = MibTableColumn
sle2EthCfmStatLtrRevUnexpected = _Sle2EthCfmStatLtrRevUnexpected_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 15, 1, 1, 7),
    _Sle2EthCfmStatLtrRevUnexpected_Type()
)
sle2EthCfmStatLtrRevUnexpected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmStatLtrRevUnexpected.setStatus("current")
_Sle2EthernetCfmActiveLevel_ObjectIdentity = ObjectIdentity
sle2EthernetCfmActiveLevel = _Sle2EthernetCfmActiveLevel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 16)
)
_Sle2EthCfmActiveLevelTable_Object = MibTable
sle2EthCfmActiveLevelTable = _Sle2EthCfmActiveLevelTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 16, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmActiveLevelTable.setStatus("current")
_Sle2EthCfmActiveLevelEntry_Object = MibTableRow
sle2EthCfmActiveLevelEntry = _Sle2EthCfmActiveLevelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 16, 1, 1)
)
sle2EthCfmActiveLevelEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmAcitveLevelIfIndex"),
)
if mibBuilder.loadTexts:
    sle2EthCfmActiveLevelEntry.setStatus("current")


class _Sle2EthCfmAcitveLevelIfIndex_Type(Integer32):
    """Custom type sle2EthCfmAcitveLevelIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Sle2EthCfmAcitveLevelIfIndex_Type.__name__ = "Integer32"
_Sle2EthCfmAcitveLevelIfIndex_Object = MibTableColumn
sle2EthCfmAcitveLevelIfIndex = _Sle2EthCfmAcitveLevelIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 16, 1, 1, 1),
    _Sle2EthCfmAcitveLevelIfIndex_Type()
)
sle2EthCfmAcitveLevelIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmAcitveLevelIfIndex.setStatus("current")


class _Sle2EthCfmActiveLevelStatus_Type(Bits):
    """Custom type sle2EthCfmActiveLevelStatus based on Bits"""
    namedValues = NamedValues(
        *(("level7", 0),
          ("level6", 1),
          ("level5", 2),
          ("level4", 3),
          ("level3", 4),
          ("level2", 5),
          ("level1", 6),
          ("level0", 7))
    )

_Sle2EthCfmActiveLevelStatus_Type.__name__ = "Bits"
_Sle2EthCfmActiveLevelStatus_Object = MibTableColumn
sle2EthCfmActiveLevelStatus = _Sle2EthCfmActiveLevelStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 16, 1, 1, 2),
    _Sle2EthCfmActiveLevelStatus_Type()
)
sle2EthCfmActiveLevelStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmActiveLevelStatus.setStatus("current")
_Sle2EthernetCfmError_ObjectIdentity = ObjectIdentity
sle2EthernetCfmError = _Sle2EthernetCfmError_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17)
)
_Sle2EthCfmErrorTable_Object = MibTable
sle2EthCfmErrorTable = _Sle2EthCfmErrorTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmErrorTable.setStatus("current")
_Sle2EthCfmErrorEntry_Object = MibTableRow
sle2EthCfmErrorEntry = _Sle2EthCfmErrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1)
)
sle2EthCfmErrorEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmErrorIndex"),
)
if mibBuilder.loadTexts:
    sle2EthCfmErrorEntry.setStatus("current")


class _Sle2EthCfmErrorIndex_Type(Integer32):
    """Custom type sle2EthCfmErrorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Sle2EthCfmErrorIndex_Type.__name__ = "Integer32"
_Sle2EthCfmErrorIndex_Object = MibTableColumn
sle2EthCfmErrorIndex = _Sle2EthCfmErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 1),
    _Sle2EthCfmErrorIndex_Type()
)
sle2EthCfmErrorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorIndex.setStatus("current")


class _Sle2EthCfmErrorMdLevel_Type(Integer32):
    """Custom type sle2EthCfmErrorMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmErrorMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmErrorMdLevel_Object = MibTableColumn
sle2EthCfmErrorMdLevel = _Sle2EthCfmErrorMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 2),
    _Sle2EthCfmErrorMdLevel_Type()
)
sle2EthCfmErrorMdLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorMdLevel.setStatus("current")


class _Sle2EthCfmErrorMaVid_Type(Integer32):
    """Custom type sle2EthCfmErrorMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_Sle2EthCfmErrorMaVid_Type.__name__ = "Integer32"
_Sle2EthCfmErrorMaVid_Object = MibTableColumn
sle2EthCfmErrorMaVid = _Sle2EthCfmErrorMaVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 3),
    _Sle2EthCfmErrorMaVid_Type()
)
sle2EthCfmErrorMaVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorMaVid.setStatus("current")


class _Sle2EthCfmErrorMepId_Type(Integer32):
    """Custom type sle2EthCfmErrorMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2EthCfmErrorMepId_Type.__name__ = "Integer32"
_Sle2EthCfmErrorMepId_Object = MibTableColumn
sle2EthCfmErrorMepId = _Sle2EthCfmErrorMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 4),
    _Sle2EthCfmErrorMepId_Type()
)
sle2EthCfmErrorMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorMepId.setStatus("current")
_Sle2EthCfmErrorRmepMac_Type = OctetString
_Sle2EthCfmErrorRmepMac_Object = MibTableColumn
sle2EthCfmErrorRmepMac = _Sle2EthCfmErrorRmepMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 5),
    _Sle2EthCfmErrorRmepMac_Type()
)
sle2EthCfmErrorRmepMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorRmepMac.setStatus("current")


class _Sle2EthCfmErrorReason_Type(Integer32):
    """Custom type sle2EthCfmErrorReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("rmepDown", 0),
          ("confError", 1),
          ("fowardLoop", 2),
          ("crossConnect", 3),
          ("missingRmep", 4),
          ("unknownMep", 5))
    )


_Sle2EthCfmErrorReason_Type.__name__ = "Integer32"
_Sle2EthCfmErrorReason_Object = MibTableColumn
sle2EthCfmErrorReason = _Sle2EthCfmErrorReason_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 6),
    _Sle2EthCfmErrorReason_Type()
)
sle2EthCfmErrorReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorReason.setStatus("current")
_Sle2EthCfmErrorServiceId_Type = OctetString
_Sle2EthCfmErrorServiceId_Object = MibTableColumn
sle2EthCfmErrorServiceId = _Sle2EthCfmErrorServiceId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 1, 1, 7),
    _Sle2EthCfmErrorServiceId_Type()
)
sle2EthCfmErrorServiceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmErrorServiceId.setStatus("current")
_Sle2EthCfmErrorControl_ObjectIdentity = ObjectIdentity
sle2EthCfmErrorControl = _Sle2EthCfmErrorControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2)
)


class _Sle2EthCfmErrorControlRequest_Type(Integer32):
    """Custom type sle2EthCfmErrorControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clearCfmErrorDomain", 1),
          ("clearCfmErrorLevel", 2))
    )


_Sle2EthCfmErrorControlRequest_Type.__name__ = "Integer32"
_Sle2EthCfmErrorControlRequest_Object = MibScalar
sle2EthCfmErrorControlRequest = _Sle2EthCfmErrorControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 1),
    _Sle2EthCfmErrorControlRequest_Type()
)
sle2EthCfmErrorControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlRequest.setStatus("current")
_Sle2EthCfmErrorControlStatus_Type = SleControlStatusType
_Sle2EthCfmErrorControlStatus_Object = MibScalar
sle2EthCfmErrorControlStatus = _Sle2EthCfmErrorControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 2),
    _Sle2EthCfmErrorControlStatus_Type()
)
sle2EthCfmErrorControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlStatus.setStatus("current")
_Sle2EthCfmErrorControlTimer_Type = Gauge32
_Sle2EthCfmErrorControlTimer_Object = MibScalar
sle2EthCfmErrorControlTimer = _Sle2EthCfmErrorControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 3),
    _Sle2EthCfmErrorControlTimer_Type()
)
sle2EthCfmErrorControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlTimer.setStatus("current")
_Sle2EthCfmErrorControlTimeStamp_Type = TimeTicks
_Sle2EthCfmErrorControlTimeStamp_Object = MibScalar
sle2EthCfmErrorControlTimeStamp = _Sle2EthCfmErrorControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 4),
    _Sle2EthCfmErrorControlTimeStamp_Type()
)
sle2EthCfmErrorControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlTimeStamp.setStatus("current")
_Sle2EthCfmErrorControlReqResult_Type = SleControlRequestResultType
_Sle2EthCfmErrorControlReqResult_Object = MibScalar
sle2EthCfmErrorControlReqResult = _Sle2EthCfmErrorControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 5),
    _Sle2EthCfmErrorControlReqResult_Type()
)
sle2EthCfmErrorControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlReqResult.setStatus("current")


class _Sle2EthCfmErrorControlBridgeId_Type(Integer32):
    """Custom type sle2EthCfmErrorControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Sle2EthCfmErrorControlBridgeId_Type.__name__ = "Integer32"
_Sle2EthCfmErrorControlBridgeId_Object = MibScalar
sle2EthCfmErrorControlBridgeId = _Sle2EthCfmErrorControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 6),
    _Sle2EthCfmErrorControlBridgeId_Type()
)
sle2EthCfmErrorControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlBridgeId.setStatus("current")
_Sle2EthCfmErrorControlMdName_Type = OctetString
_Sle2EthCfmErrorControlMdName_Object = MibScalar
sle2EthCfmErrorControlMdName = _Sle2EthCfmErrorControlMdName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 7),
    _Sle2EthCfmErrorControlMdName_Type()
)
sle2EthCfmErrorControlMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlMdName.setStatus("current")


class _Sle2EthCfmErrorControlMdLevel_Type(Integer32):
    """Custom type sle2EthCfmErrorControlMdLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2EthCfmErrorControlMdLevel_Type.__name__ = "Integer32"
_Sle2EthCfmErrorControlMdLevel_Object = MibScalar
sle2EthCfmErrorControlMdLevel = _Sle2EthCfmErrorControlMdLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 2, 8),
    _Sle2EthCfmErrorControlMdLevel_Type()
)
sle2EthCfmErrorControlMdLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2EthCfmErrorControlMdLevel.setStatus("current")
_Sle2EthCfmErrorNotification_ObjectIdentity = ObjectIdentity
sle2EthCfmErrorNotification = _Sle2EthCfmErrorNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 3)
)
_Sle2EthernetCfmLtCache_ObjectIdentity = ObjectIdentity
sle2EthernetCfmLtCache = _Sle2EthernetCfmLtCache_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18)
)
_Sle2EthCfmLtCacheTable_Object = MibTable
sle2EthCfmLtCacheTable = _Sle2EthCfmLtCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1)
)
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheTable.setStatus("current")
_Sle2EthCfmLtCacheEntry_Object = MibTableRow
sle2EthCfmLtCacheEntry = _Sle2EthCfmLtCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1, 1)
)
sle2EthCfmLtCacheEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2EthCfmLtCacheIndex"),
)
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheEntry.setStatus("current")


class _Sle2EthCfmLtCacheIndex_Type(Integer32):
    """Custom type sle2EthCfmLtCacheIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Sle2EthCfmLtCacheIndex_Type.__name__ = "Integer32"
_Sle2EthCfmLtCacheIndex_Object = MibTableColumn
sle2EthCfmLtCacheIndex = _Sle2EthCfmLtCacheIndex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1, 1, 1),
    _Sle2EthCfmLtCacheIndex_Type()
)
sle2EthCfmLtCacheIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheIndex.setStatus("current")
_Sle2EthCfmLtCacheSrcMac_Type = OctetString
_Sle2EthCfmLtCacheSrcMac_Object = MibTableColumn
sle2EthCfmLtCacheSrcMac = _Sle2EthCfmLtCacheSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1, 1, 2),
    _Sle2EthCfmLtCacheSrcMac_Type()
)
sle2EthCfmLtCacheSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheSrcMac.setStatus("current")


class _Sle2EthCfmLtCacheHops_Type(Integer32):
    """Custom type sle2EthCfmLtCacheHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_Sle2EthCfmLtCacheHops_Type.__name__ = "Integer32"
_Sle2EthCfmLtCacheHops_Object = MibTableColumn
sle2EthCfmLtCacheHops = _Sle2EthCfmLtCacheHops_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1, 1, 3),
    _Sle2EthCfmLtCacheHops_Type()
)
sle2EthCfmLtCacheHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheHops.setStatus("current")


class _Sle2EthCfmLtCacheRelay_Type(Integer32):
    """Custom type sle2EthCfmLtCacheRelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("rlyHit", 1),
          ("rlyFDB", 2),
          ("rlyMPDB", 3))
    )


_Sle2EthCfmLtCacheRelay_Type.__name__ = "Integer32"
_Sle2EthCfmLtCacheRelay_Object = MibTableColumn
sle2EthCfmLtCacheRelay = _Sle2EthCfmLtCacheRelay_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 18, 1, 1, 4),
    _Sle2EthCfmLtCacheRelay_Type()
)
sle2EthCfmLtCacheRelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2EthCfmLtCacheRelay.setStatus("current")
_Sle2Erps_ObjectIdentity = ObjectIdentity
sle2Erps = _Sle2Erps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18)
)
_Sle2ErpsPhyRing_ObjectIdentity = ObjectIdentity
sle2ErpsPhyRing = _Sle2ErpsPhyRing_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1)
)
_Sle2ErpsPhyRingTable_Object = MibTable
sle2ErpsPhyRingTable = _Sle2ErpsPhyRingTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1)
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingTable.setStatus("current")
_Sle2ErpsPhyRingEntry_Object = MibTableRow
sle2ErpsPhyRingEntry = _Sle2ErpsPhyRingEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1)
)
sle2ErpsPhyRingEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEntry.setStatus("current")


class _Sle2ErpsPhyRingBridgeId_Type(Integer32):
    """Custom type sle2ErpsPhyRingBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsPhyRingBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingBridgeId_Object = MibTableColumn
sle2ErpsPhyRingBridgeId = _Sle2ErpsPhyRingBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 1),
    _Sle2ErpsPhyRingBridgeId_Type()
)
sle2ErpsPhyRingBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingBridgeId.setStatus("current")
_Sle2ErpsPhyRingName_Type = OctetString
_Sle2ErpsPhyRingName_Object = MibTableColumn
sle2ErpsPhyRingName = _Sle2ErpsPhyRingName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 2),
    _Sle2ErpsPhyRingName_Type()
)
sle2ErpsPhyRingName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingName.setStatus("current")
_Sle2ErpsPhyRingEastPort_Type = Integer32
_Sle2ErpsPhyRingEastPort_Object = MibTableColumn
sle2ErpsPhyRingEastPort = _Sle2ErpsPhyRingEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 3),
    _Sle2ErpsPhyRingEastPort_Type()
)
sle2ErpsPhyRingEastPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastPort.setStatus("current")


class _Sle2ErpsPhyRingEastMepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingEastMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingEastMepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingEastMepId_Object = MibTableColumn
sle2ErpsPhyRingEastMepId = _Sle2ErpsPhyRingEastMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 4),
    _Sle2ErpsPhyRingEastMepId_Type()
)
sle2ErpsPhyRingEastMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastMepId.setStatus("current")


class _Sle2ErpsPhyRingEastRmepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingEastRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingEastRmepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingEastRmepId_Object = MibTableColumn
sle2ErpsPhyRingEastRmepId = _Sle2ErpsPhyRingEastRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 5),
    _Sle2ErpsPhyRingEastRmepId_Type()
)
sle2ErpsPhyRingEastRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastRmepId.setStatus("current")
_Sle2ErpsPhyRingWestPort_Type = Integer32
_Sle2ErpsPhyRingWestPort_Object = MibTableColumn
sle2ErpsPhyRingWestPort = _Sle2ErpsPhyRingWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 6),
    _Sle2ErpsPhyRingWestPort_Type()
)
sle2ErpsPhyRingWestPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestPort.setStatus("current")


class _Sle2ErpsPhyRingWestMepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingWestMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingWestMepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingWestMepId_Object = MibTableColumn
sle2ErpsPhyRingWestMepId = _Sle2ErpsPhyRingWestMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 7),
    _Sle2ErpsPhyRingWestMepId_Type()
)
sle2ErpsPhyRingWestMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestMepId.setStatus("current")


class _Sle2ErpsPhyRingWestRmepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingWestRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingWestRmepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingWestRmepId_Object = MibTableColumn
sle2ErpsPhyRingWestRmepId = _Sle2ErpsPhyRingWestRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 1, 1, 8),
    _Sle2ErpsPhyRingWestRmepId_Type()
)
sle2ErpsPhyRingWestRmepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestRmepId.setStatus("current")
_Sle2ErpsPhyRingControl_ObjectIdentity = ObjectIdentity
sle2ErpsPhyRingControl = _Sle2ErpsPhyRingControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2)
)


class _Sle2ErpsPhyRingControlRequest_Type(Integer32):
    """Custom type sle2ErpsPhyRingControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("createPhyRing", 1),
          ("destoryPhyRing", 2),
          ("addEastPort", 3),
          ("delEastPort", 4),
          ("addWestPort", 5),
          ("delWestPort", 6),
          ("addEastPortMepId", 7),
          ("delEastPortMepId", 8),
          ("addWestPortMepId", 9),
          ("delWestPortMepId", 10))
    )


_Sle2ErpsPhyRingControlRequest_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingControlRequest_Object = MibScalar
sle2ErpsPhyRingControlRequest = _Sle2ErpsPhyRingControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 1),
    _Sle2ErpsPhyRingControlRequest_Type()
)
sle2ErpsPhyRingControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlRequest.setStatus("current")
_Sle2ErpsPhyRingControlStatus_Type = SleControlStatusType
_Sle2ErpsPhyRingControlStatus_Object = MibScalar
sle2ErpsPhyRingControlStatus = _Sle2ErpsPhyRingControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 2),
    _Sle2ErpsPhyRingControlStatus_Type()
)
sle2ErpsPhyRingControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlStatus.setStatus("current")
_Sle2ErpsPhyRingControlTimer_Type = Gauge32
_Sle2ErpsPhyRingControlTimer_Object = MibScalar
sle2ErpsPhyRingControlTimer = _Sle2ErpsPhyRingControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 3),
    _Sle2ErpsPhyRingControlTimer_Type()
)
sle2ErpsPhyRingControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlTimer.setStatus("current")
_Sle2ErpsPhyRingControlTimeStamp_Type = TimeTicks
_Sle2ErpsPhyRingControlTimeStamp_Object = MibScalar
sle2ErpsPhyRingControlTimeStamp = _Sle2ErpsPhyRingControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 4),
    _Sle2ErpsPhyRingControlTimeStamp_Type()
)
sle2ErpsPhyRingControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlTimeStamp.setStatus("current")
_Sle2ErpsPhyRingControlReqResult_Type = SleControlRequestResultType
_Sle2ErpsPhyRingControlReqResult_Object = MibScalar
sle2ErpsPhyRingControlReqResult = _Sle2ErpsPhyRingControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 5),
    _Sle2ErpsPhyRingControlReqResult_Type()
)
sle2ErpsPhyRingControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlReqResult.setStatus("current")


class _Sle2ErpsPhyRingControlBridgeId_Type(Integer32):
    """Custom type sle2ErpsPhyRingControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsPhyRingControlBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingControlBridgeId_Object = MibScalar
sle2ErpsPhyRingControlBridgeId = _Sle2ErpsPhyRingControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 6),
    _Sle2ErpsPhyRingControlBridgeId_Type()
)
sle2ErpsPhyRingControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlBridgeId.setStatus("current")
_Sle2ErpsPhyRingControName_Type = OctetString
_Sle2ErpsPhyRingControName_Object = MibScalar
sle2ErpsPhyRingControName = _Sle2ErpsPhyRingControName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 7),
    _Sle2ErpsPhyRingControName_Type()
)
sle2ErpsPhyRingControName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControName.setStatus("current")
_Sle2ErpsPhyRingControEastPort_Type = Integer32
_Sle2ErpsPhyRingControEastPort_Object = MibScalar
sle2ErpsPhyRingControEastPort = _Sle2ErpsPhyRingControEastPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 8),
    _Sle2ErpsPhyRingControEastPort_Type()
)
sle2ErpsPhyRingControEastPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControEastPort.setStatus("current")
_Sle2ErpsPhyRingControWestPort_Type = Integer32
_Sle2ErpsPhyRingControWestPort_Object = MibScalar
sle2ErpsPhyRingControWestPort = _Sle2ErpsPhyRingControWestPort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 9),
    _Sle2ErpsPhyRingControWestPort_Type()
)
sle2ErpsPhyRingControWestPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControWestPort.setStatus("current")


class _Sle2ErpsPhyRingControlMepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingControlMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingControlMepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingControlMepId_Object = MibScalar
sle2ErpsPhyRingControlMepId = _Sle2ErpsPhyRingControlMepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 10),
    _Sle2ErpsPhyRingControlMepId_Type()
)
sle2ErpsPhyRingControlMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlMepId.setStatus("current")


class _Sle2ErpsPhyRingControlRmepId_Type(Integer32):
    """Custom type sle2ErpsPhyRingControlRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Sle2ErpsPhyRingControlRmepId_Type.__name__ = "Integer32"
_Sle2ErpsPhyRingControlRmepId_Object = MibScalar
sle2ErpsPhyRingControlRmepId = _Sle2ErpsPhyRingControlRmepId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 2, 11),
    _Sle2ErpsPhyRingControlRmepId_Type()
)
sle2ErpsPhyRingControlRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsPhyRingControlRmepId.setStatus("current")
_SleErpsPhyRingNotification_ObjectIdentity = ObjectIdentity
sleErpsPhyRingNotification = _SleErpsPhyRingNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3)
)
_Sle2ErpsProfile_ObjectIdentity = ObjectIdentity
sle2ErpsProfile = _Sle2ErpsProfile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2)
)
_Sle2ErpsProfileTable_Object = MibTable
sle2ErpsProfileTable = _Sle2ErpsProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1)
)
if mibBuilder.loadTexts:
    sle2ErpsProfileTable.setStatus("current")
_Sle2ErpsProfileEntry_Object = MibTableRow
sle2ErpsProfileEntry = _Sle2ErpsProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1)
)
sle2ErpsProfileEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsProfileBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsProfileName"),
)
if mibBuilder.loadTexts:
    sle2ErpsProfileEntry.setStatus("current")


class _Sle2ErpsProfileBridgeId_Type(Integer32):
    """Custom type sle2ErpsProfileBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsProfileBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsProfileBridgeId_Object = MibTableColumn
sle2ErpsProfileBridgeId = _Sle2ErpsProfileBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 1),
    _Sle2ErpsProfileBridgeId_Type()
)
sle2ErpsProfileBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileBridgeId.setStatus("current")
_Sle2ErpsProfileName_Type = OctetString
_Sle2ErpsProfileName_Object = MibTableColumn
sle2ErpsProfileName = _Sle2ErpsProfileName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 2),
    _Sle2ErpsProfileName_Type()
)
sle2ErpsProfileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileName.setStatus("current")


class _Sle2ErpsProfileHoldOffTime_Type(Integer32):
    """Custom type sle2ErpsProfileHoldOffTime based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_Sle2ErpsProfileHoldOffTime_Type.__name__ = "Integer32"
_Sle2ErpsProfileHoldOffTime_Object = MibTableColumn
sle2ErpsProfileHoldOffTime = _Sle2ErpsProfileHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 3),
    _Sle2ErpsProfileHoldOffTime_Type()
)
sle2ErpsProfileHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileHoldOffTime.setStatus("current")


class _Sle2ErpsProfileGuardTime_Type(Integer32):
    """Custom type sle2ErpsProfileGuardTime based on Integer32"""
    defaultValue = 500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_Sle2ErpsProfileGuardTime_Type.__name__ = "Integer32"
_Sle2ErpsProfileGuardTime_Object = MibTableColumn
sle2ErpsProfileGuardTime = _Sle2ErpsProfileGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 4),
    _Sle2ErpsProfileGuardTime_Type()
)
sle2ErpsProfileGuardTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileGuardTime.setStatus("current")


class _Sle2ErpsProfileWaitToRestore_Type(Integer32):
    """Custom type sle2ErpsProfileWaitToRestore based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_Sle2ErpsProfileWaitToRestore_Type.__name__ = "Integer32"
_Sle2ErpsProfileWaitToRestore_Object = MibTableColumn
sle2ErpsProfileWaitToRestore = _Sle2ErpsProfileWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 5),
    _Sle2ErpsProfileWaitToRestore_Type()
)
sle2ErpsProfileWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileWaitToRestore.setStatus("current")


class _Sle2ErpsProfileNonRevertive_Type(Integer32):
    """Custom type sle2ErpsProfileNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 0),
          ("nonRevertive", 1))
    )


_Sle2ErpsProfileNonRevertive_Type.__name__ = "Integer32"
_Sle2ErpsProfileNonRevertive_Object = MibTableColumn
sle2ErpsProfileNonRevertive = _Sle2ErpsProfileNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 1, 1, 6),
    _Sle2ErpsProfileNonRevertive_Type()
)
sle2ErpsProfileNonRevertive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsProfileNonRevertive.setStatus("current")
_Sle2ErpsProfileControl_ObjectIdentity = ObjectIdentity
sle2ErpsProfileControl = _Sle2ErpsProfileControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2)
)


class _Sle2ErpsProfileControlRequest_Type(Integer32):
    """Custom type sle2ErpsProfileControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("createErpsProfile", 1),
          ("destroyErpsProfile", 2),
          ("setProfileTimer", 3),
          ("setNoneRevertive", 4))
    )


_Sle2ErpsProfileControlRequest_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlRequest_Object = MibScalar
sle2ErpsProfileControlRequest = _Sle2ErpsProfileControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 1),
    _Sle2ErpsProfileControlRequest_Type()
)
sle2ErpsProfileControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlRequest.setStatus("current")
_Sle2ErpsProfileControlStatus_Type = SleControlStatusType
_Sle2ErpsProfileControlStatus_Object = MibScalar
sle2ErpsProfileControlStatus = _Sle2ErpsProfileControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 2),
    _Sle2ErpsProfileControlStatus_Type()
)
sle2ErpsProfileControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlStatus.setStatus("current")
_Sle2ErpsProfileControlTimer_Type = Gauge32
_Sle2ErpsProfileControlTimer_Object = MibScalar
sle2ErpsProfileControlTimer = _Sle2ErpsProfileControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 3),
    _Sle2ErpsProfileControlTimer_Type()
)
sle2ErpsProfileControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlTimer.setStatus("current")
_Sle2ErpsProfileControlTimeStamp_Type = TimeTicks
_Sle2ErpsProfileControlTimeStamp_Object = MibScalar
sle2ErpsProfileControlTimeStamp = _Sle2ErpsProfileControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 4),
    _Sle2ErpsProfileControlTimeStamp_Type()
)
sle2ErpsProfileControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlTimeStamp.setStatus("current")
_Sle2ErpsProfileControlReqResult_Type = SleControlStatusType
_Sle2ErpsProfileControlReqResult_Object = MibScalar
sle2ErpsProfileControlReqResult = _Sle2ErpsProfileControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 5),
    _Sle2ErpsProfileControlReqResult_Type()
)
sle2ErpsProfileControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlReqResult.setStatus("current")


class _Sle2ErpsProfileControlBridgeId_Type(Integer32):
    """Custom type sle2ErpsProfileControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsProfileControlBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlBridgeId_Object = MibScalar
sle2ErpsProfileControlBridgeId = _Sle2ErpsProfileControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 6),
    _Sle2ErpsProfileControlBridgeId_Type()
)
sle2ErpsProfileControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlBridgeId.setStatus("current")
_Sle2ErpsProfileControlName_Type = OctetString
_Sle2ErpsProfileControlName_Object = MibScalar
sle2ErpsProfileControlName = _Sle2ErpsProfileControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 7),
    _Sle2ErpsProfileControlName_Type()
)
sle2ErpsProfileControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlName.setStatus("current")


class _Sle2ErpsProfileControlHoldOffTime_Type(Integer32):
    """Custom type sle2ErpsProfileControlHoldOffTime based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_Sle2ErpsProfileControlHoldOffTime_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlHoldOffTime_Object = MibScalar
sle2ErpsProfileControlHoldOffTime = _Sle2ErpsProfileControlHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 8),
    _Sle2ErpsProfileControlHoldOffTime_Type()
)
sle2ErpsProfileControlHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlHoldOffTime.setStatus("current")


class _Sle2ErpsProfileControlGuardTime_Type(Integer32):
    """Custom type sle2ErpsProfileControlGuardTime based on Integer32"""
    defaultValue = 500


_Sle2ErpsProfileControlGuardTime_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlGuardTime_Object = MibScalar
sle2ErpsProfileControlGuardTime = _Sle2ErpsProfileControlGuardTime_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 9),
    _Sle2ErpsProfileControlGuardTime_Type()
)
sle2ErpsProfileControlGuardTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlGuardTime.setStatus("current")


class _Sle2ErpsProfileControlWaitToRestore_Type(Integer32):
    """Custom type sle2ErpsProfileControlWaitToRestore based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_Sle2ErpsProfileControlWaitToRestore_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlWaitToRestore_Object = MibScalar
sle2ErpsProfileControlWaitToRestore = _Sle2ErpsProfileControlWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 10),
    _Sle2ErpsProfileControlWaitToRestore_Type()
)
sle2ErpsProfileControlWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlWaitToRestore.setStatus("current")


class _Sle2ErpsProfileControlNonRevertive_Type(Integer32):
    """Custom type sle2ErpsProfileControlNonRevertive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 0),
          ("nonRevertive", 1))
    )


_Sle2ErpsProfileControlNonRevertive_Type.__name__ = "Integer32"
_Sle2ErpsProfileControlNonRevertive_Object = MibScalar
sle2ErpsProfileControlNonRevertive = _Sle2ErpsProfileControlNonRevertive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 2, 11),
    _Sle2ErpsProfileControlNonRevertive_Type()
)
sle2ErpsProfileControlNonRevertive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsProfileControlNonRevertive.setStatus("current")
_Sle2ErpsProfileNotification_ObjectIdentity = ObjectIdentity
sle2ErpsProfileNotification = _Sle2ErpsProfileNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 3)
)
_Sle2ErpsInstance_ObjectIdentity = ObjectIdentity
sle2ErpsInstance = _Sle2ErpsInstance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3)
)
_Sle2ErpsInstanceTable_Object = MibTable
sle2ErpsInstanceTable = _Sle2ErpsInstanceTable_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1)
)
if mibBuilder.loadTexts:
    sle2ErpsInstanceTable.setStatus("current")
_Sle2ErpsInstanceEntry_Object = MibTableRow
sle2ErpsInstanceEntry = _Sle2ErpsInstanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1)
)
sle2ErpsInstanceEntry.setIndexNames(
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
    (0, "SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
)
if mibBuilder.loadTexts:
    sle2ErpsInstanceEntry.setStatus("current")


class _Sle2ErpsInstBridgeId_Type(Integer32):
    """Custom type sle2ErpsInstBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsInstBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsInstBridgeId_Object = MibTableColumn
sle2ErpsInstBridgeId = _Sle2ErpsInstBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 1),
    _Sle2ErpsInstBridgeId_Type()
)
sle2ErpsInstBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstBridgeId.setStatus("current")
_Sle2ErpsInstName_Type = OctetString
_Sle2ErpsInstName_Object = MibTableColumn
sle2ErpsInstName = _Sle2ErpsInstName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 2),
    _Sle2ErpsInstName_Type()
)
sle2ErpsInstName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstName.setStatus("current")
_Sle2ErpsInstPhyRingName_Type = OctetString
_Sle2ErpsInstPhyRingName_Object = MibTableColumn
sle2ErpsInstPhyRingName = _Sle2ErpsInstPhyRingName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 3),
    _Sle2ErpsInstPhyRingName_Type()
)
sle2ErpsInstPhyRingName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstPhyRingName.setStatus("current")
_Sle2ErpsInstProfileName_Type = OctetString
_Sle2ErpsInstProfileName_Object = MibTableColumn
sle2ErpsInstProfileName = _Sle2ErpsInstProfileName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 4),
    _Sle2ErpsInstProfileName_Type()
)
sle2ErpsInstProfileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstProfileName.setStatus("current")


class _Sle2ErpsInstRingId_Type(Integer32):
    """Custom type sle2ErpsInstRingId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Sle2ErpsInstRingId_Type.__name__ = "Integer32"
_Sle2ErpsInstRingId_Object = MibTableColumn
sle2ErpsInstRingId = _Sle2ErpsInstRingId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 5),
    _Sle2ErpsInstRingId_Type()
)
sle2ErpsInstRingId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstRingId.setStatus("current")


class _Sle2ErpsInstLevel_Type(Integer32):
    """Custom type sle2ErpsInstLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2ErpsInstLevel_Type.__name__ = "Integer32"
_Sle2ErpsInstLevel_Object = MibTableColumn
sle2ErpsInstLevel = _Sle2ErpsInstLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 6),
    _Sle2ErpsInstLevel_Type()
)
sle2ErpsInstLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstLevel.setStatus("current")


class _Sle2ErpsInstRplRole_Type(Integer32):
    """Custom type sle2ErpsInstRplRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("owner", 1),
          ("neighbour", 2),
          ("nextNeighbor", 3))
    )


_Sle2ErpsInstRplRole_Type.__name__ = "Integer32"
_Sle2ErpsInstRplRole_Object = MibTableColumn
sle2ErpsInstRplRole = _Sle2ErpsInstRplRole_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 7),
    _Sle2ErpsInstRplRole_Type()
)
sle2ErpsInstRplRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstRplRole.setStatus("current")


class _Sle2ErpsInstRplRolePort_Type(Integer32):
    """Custom type sle2ErpsInstRplRolePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstRplRolePort_Type.__name__ = "Integer32"
_Sle2ErpsInstRplRolePort_Object = MibTableColumn
sle2ErpsInstRplRolePort = _Sle2ErpsInstRplRolePort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 8),
    _Sle2ErpsInstRplRolePort_Type()
)
sle2ErpsInstRplRolePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstRplRolePort.setStatus("current")


class _Sle2ErpsInstSubRingBlock_Type(Integer32):
    """Custom type sle2ErpsInstSubRingBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstSubRingBlock_Type.__name__ = "Integer32"
_Sle2ErpsInstSubRingBlock_Object = MibTableColumn
sle2ErpsInstSubRingBlock = _Sle2ErpsInstSubRingBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 9),
    _Sle2ErpsInstSubRingBlock_Type()
)
sle2ErpsInstSubRingBlock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstSubRingBlock.setStatus("current")


class _Sle2ErpsInstCtrlVlan_Type(Integer32):
    """Custom type sle2ErpsInstCtrlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2ErpsInstCtrlVlan_Type.__name__ = "Integer32"
_Sle2ErpsInstCtrlVlan_Object = MibTableColumn
sle2ErpsInstCtrlVlan = _Sle2ErpsInstCtrlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 10),
    _Sle2ErpsInstCtrlVlan_Type()
)
sle2ErpsInstCtrlVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstCtrlVlan.setStatus("current")
_Sle2ErpsInstTafficVlans_Type = OctetString
_Sle2ErpsInstTafficVlans_Object = MibTableColumn
sle2ErpsInstTafficVlans = _Sle2ErpsInstTafficVlans_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 11),
    _Sle2ErpsInstTafficVlans_Type()
)
sle2ErpsInstTafficVlans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstTafficVlans.setStatus("current")


class _Sle2ErpsInstChannelMode_Type(Integer32):
    """Custom type sle2ErpsInstChannelMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("nonVirtualChannel", 1),
          ("virtualChannel", 2))
    )


_Sle2ErpsInstChannelMode_Type.__name__ = "Integer32"
_Sle2ErpsInstChannelMode_Object = MibTableColumn
sle2ErpsInstChannelMode = _Sle2ErpsInstChannelMode_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 12),
    _Sle2ErpsInstChannelMode_Type()
)
sle2ErpsInstChannelMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstChannelMode.setStatus("current")


class _Sle2ErpsInstVChannelVid_Type(Integer32):
    """Custom type sle2ErpsInstVChannelVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2ErpsInstVChannelVid_Type.__name__ = "Integer32"
_Sle2ErpsInstVChannelVid_Object = MibTableColumn
sle2ErpsInstVChannelVid = _Sle2ErpsInstVChannelVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 13),
    _Sle2ErpsInstVChannelVid_Type()
)
sle2ErpsInstVChannelVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstVChannelVid.setStatus("current")
_Sle2ErpsInstVChannelAttachInstName_Type = OctetString
_Sle2ErpsInstVChannelAttachInstName_Object = MibTableColumn
sle2ErpsInstVChannelAttachInstName = _Sle2ErpsInstVChannelAttachInstName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 14),
    _Sle2ErpsInstVChannelAttachInstName_Type()
)
sle2ErpsInstVChannelAttachInstName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstVChannelAttachInstName.setStatus("current")


class _Sle2ErpsInstPropagateTc_Type(Integer32):
    """Custom type sle2ErpsInstPropagateTc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2ErpsInstPropagateTc_Type.__name__ = "Integer32"
_Sle2ErpsInstPropagateTc_Object = MibTableColumn
sle2ErpsInstPropagateTc = _Sle2ErpsInstPropagateTc_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 15),
    _Sle2ErpsInstPropagateTc_Type()
)
sle2ErpsInstPropagateTc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstPropagateTc.setStatus("current")


class _Sle2ErpsInstActive_Type(Integer32):
    """Custom type sle2ErpsInstActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2ErpsInstActive_Type.__name__ = "Integer32"
_Sle2ErpsInstActive_Object = MibTableColumn
sle2ErpsInstActive = _Sle2ErpsInstActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 16),
    _Sle2ErpsInstActive_Type()
)
sle2ErpsInstActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstActive.setStatus("current")


class _Sle2ErpsInstStatus_Type(Integer32):
    """Custom type sle2ErpsInstStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("init", 1),
          ("pending", 2),
          ("idle", 3),
          ("foreced", 4),
          ("protected", 5),
          ("manual", 6))
    )


_Sle2ErpsInstStatus_Type.__name__ = "Integer32"
_Sle2ErpsInstStatus_Object = MibTableColumn
sle2ErpsInstStatus = _Sle2ErpsInstStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 17),
    _Sle2ErpsInstStatus_Type()
)
sle2ErpsInstStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstStatus.setStatus("current")
_Sle2ErpsInstEastIfindex_Type = Integer32
_Sle2ErpsInstEastIfindex_Object = MibTableColumn
sle2ErpsInstEastIfindex = _Sle2ErpsInstEastIfindex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 18),
    _Sle2ErpsInstEastIfindex_Type()
)
sle2ErpsInstEastIfindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstEastIfindex.setStatus("current")


class _Sle2ErpsInstEastPortStatus_Type(Integer32):
    """Custom type sle2ErpsInstEastPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("unblocked", 1),
          ("blocked", 2),
          ("failed", 3),
          ("blockedFailed", 4))
    )


_Sle2ErpsInstEastPortStatus_Type.__name__ = "Integer32"
_Sle2ErpsInstEastPortStatus_Object = MibTableColumn
sle2ErpsInstEastPortStatus = _Sle2ErpsInstEastPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 19),
    _Sle2ErpsInstEastPortStatus_Type()
)
sle2ErpsInstEastPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstEastPortStatus.setStatus("current")
_Sle2ErpsInstWestIfindex_Type = Integer32
_Sle2ErpsInstWestIfindex_Object = MibTableColumn
sle2ErpsInstWestIfindex = _Sle2ErpsInstWestIfindex_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 20),
    _Sle2ErpsInstWestIfindex_Type()
)
sle2ErpsInstWestIfindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstWestIfindex.setStatus("current")


class _Sle2ErpsInstWestPortStatus_Type(Integer32):
    """Custom type sle2ErpsInstWestPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("unblocked", 1),
          ("blocked", 2),
          ("failed", 3),
          ("blockedFailed", 4))
    )


_Sle2ErpsInstWestPortStatus_Type.__name__ = "Integer32"
_Sle2ErpsInstWestPortStatus_Object = MibTableColumn
sle2ErpsInstWestPortStatus = _Sle2ErpsInstWestPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 21),
    _Sle2ErpsInstWestPortStatus_Type()
)
sle2ErpsInstWestPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstWestPortStatus.setStatus("current")


class _Sle2ErpsInstVersion_Type(Integer32):
    """Custom type sle2ErpsInstVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("version1", 1),
          ("version2", 2))
    )


_Sle2ErpsInstVersion_Type.__name__ = "Integer32"
_Sle2ErpsInstVersion_Object = MibTableColumn
sle2ErpsInstVersion = _Sle2ErpsInstVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 22),
    _Sle2ErpsInstVersion_Type()
)
sle2ErpsInstVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstVersion.setStatus("current")
_Sle2ErpsInstDataTrafficInheritanceInstName_Type = OctetString
_Sle2ErpsInstDataTrafficInheritanceInstName_Object = MibTableColumn
sle2ErpsInstDataTrafficInheritanceInstName = _Sle2ErpsInstDataTrafficInheritanceInstName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 1, 1, 23),
    _Sle2ErpsInstDataTrafficInheritanceInstName_Type()
)
sle2ErpsInstDataTrafficInheritanceInstName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sle2ErpsInstDataTrafficInheritanceInstName.setStatus("current")
_Sle2ErpsInstanceControl_ObjectIdentity = ObjectIdentity
sle2ErpsInstanceControl = _Sle2ErpsInstanceControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2)
)


class _Sle2ErpsInstControlRequest_Type(Integer32):
    """Custom type sle2ErpsInstControlRequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("createErpsInstance", 1),
          ("destoryErpsInstance", 2),
          ("addErpsInstPhyRing", 3),
          ("delErpsInstPhyRing", 4),
          ("addErpsInstProfile", 5),
          ("delErpsInstProfile", 6),
          ("setErpsInstRingId", 7),
          ("setErpsInstLevel", 8),
          ("setErpsInstRpl", 9),
          ("addErpsInstSubRing", 10),
          ("delErpsInstSubRing", 11),
          ("addErpsInstCtrlVlan", 12),
          ("delErpsInstCtrlVlan", 13),
          ("addErpsInstTrafficVlan", 14),
          ("delErpsInstTrafficVlan", 15),
          ("addErpsInstVitrualChannel", 16),
          ("delErpsInstVitrualChannel", 17),
          ("addErpsInstNoneVirtualChanel", 18),
          ("delErpsInstNoneVirtualChanel", 19),
          ("setErpsInstForcedSwitch", 20),
          ("setErpsInstManualSwitch", 21),
          ("clearErpsInst", 22),
          ("setErpsInstPropagateTc", 23),
          ("setErpsInstVersion", 24),
          ("setErpsInstActive", 25),
          ("setVlanInheritanceDataTraffic", 26),
          ("delVlanInheritanceDataTraffic", 27))
    )


_Sle2ErpsInstControlRequest_Type.__name__ = "Integer32"
_Sle2ErpsInstControlRequest_Object = MibScalar
sle2ErpsInstControlRequest = _Sle2ErpsInstControlRequest_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 1),
    _Sle2ErpsInstControlRequest_Type()
)
sle2ErpsInstControlRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlRequest.setStatus("current")
_Sle2ErpsInstControlStatus_Type = Integer32
_Sle2ErpsInstControlStatus_Object = MibScalar
sle2ErpsInstControlStatus = _Sle2ErpsInstControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 2),
    _Sle2ErpsInstControlStatus_Type()
)
sle2ErpsInstControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlStatus.setStatus("current")
_Sle2ErpsInstControlTimer_Type = Integer32
_Sle2ErpsInstControlTimer_Object = MibScalar
sle2ErpsInstControlTimer = _Sle2ErpsInstControlTimer_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 3),
    _Sle2ErpsInstControlTimer_Type()
)
sle2ErpsInstControlTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlTimer.setStatus("current")
_Sle2ErpsInstControlTimeStamp_Type = Integer32
_Sle2ErpsInstControlTimeStamp_Object = MibScalar
sle2ErpsInstControlTimeStamp = _Sle2ErpsInstControlTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 4),
    _Sle2ErpsInstControlTimeStamp_Type()
)
sle2ErpsInstControlTimeStamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlTimeStamp.setStatus("current")
_Sle2ErpsInstControlReqResult_Type = Integer32
_Sle2ErpsInstControlReqResult_Object = MibScalar
sle2ErpsInstControlReqResult = _Sle2ErpsInstControlReqResult_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 5),
    _Sle2ErpsInstControlReqResult_Type()
)
sle2ErpsInstControlReqResult.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlReqResult.setStatus("current")


class _Sle2ErpsInstControlBridgeId_Type(Integer32):
    """Custom type sle2ErpsInstControlBridgeId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
        ValueRangeConstraint(100, 100),
    )


_Sle2ErpsInstControlBridgeId_Type.__name__ = "Integer32"
_Sle2ErpsInstControlBridgeId_Object = MibScalar
sle2ErpsInstControlBridgeId = _Sle2ErpsInstControlBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 6),
    _Sle2ErpsInstControlBridgeId_Type()
)
sle2ErpsInstControlBridgeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlBridgeId.setStatus("current")
_Sle2ErpsInstControlName_Type = OctetString
_Sle2ErpsInstControlName_Object = MibScalar
sle2ErpsInstControlName = _Sle2ErpsInstControlName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 7),
    _Sle2ErpsInstControlName_Type()
)
sle2ErpsInstControlName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlName.setStatus("current")
_Sle2ErpsInstControlPhyRingName_Type = OctetString
_Sle2ErpsInstControlPhyRingName_Object = MibScalar
sle2ErpsInstControlPhyRingName = _Sle2ErpsInstControlPhyRingName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 8),
    _Sle2ErpsInstControlPhyRingName_Type()
)
sle2ErpsInstControlPhyRingName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlPhyRingName.setStatus("current")
_Sle2ErpsInstControlProfileName_Type = OctetString
_Sle2ErpsInstControlProfileName_Object = MibScalar
sle2ErpsInstControlProfileName = _Sle2ErpsInstControlProfileName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 9),
    _Sle2ErpsInstControlProfileName_Type()
)
sle2ErpsInstControlProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlProfileName.setStatus("current")


class _Sle2ErpsInstControlRingId_Type(Integer32):
    """Custom type sle2ErpsInstControlRingId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Sle2ErpsInstControlRingId_Type.__name__ = "Integer32"
_Sle2ErpsInstControlRingId_Object = MibScalar
sle2ErpsInstControlRingId = _Sle2ErpsInstControlRingId_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 10),
    _Sle2ErpsInstControlRingId_Type()
)
sle2ErpsInstControlRingId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlRingId.setStatus("current")


class _Sle2ErpsInstControlLevel_Type(Integer32):
    """Custom type sle2ErpsInstControlLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Sle2ErpsInstControlLevel_Type.__name__ = "Integer32"
_Sle2ErpsInstControlLevel_Object = MibScalar
sle2ErpsInstControlLevel = _Sle2ErpsInstControlLevel_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 11),
    _Sle2ErpsInstControlLevel_Type()
)
sle2ErpsInstControlLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlLevel.setStatus("current")


class _Sle2ErpsInstControlRplRole_Type(Integer32):
    """Custom type sle2ErpsInstControlRplRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("owner", 1),
          ("neighbour", 2),
          ("nextNeighbor", 3))
    )


_Sle2ErpsInstControlRplRole_Type.__name__ = "Integer32"
_Sle2ErpsInstControlRplRole_Object = MibScalar
sle2ErpsInstControlRplRole = _Sle2ErpsInstControlRplRole_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 12),
    _Sle2ErpsInstControlRplRole_Type()
)
sle2ErpsInstControlRplRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlRplRole.setStatus("current")


class _Sle2ErpsInstControlRplRolePort_Type(Integer32):
    """Custom type sle2ErpsInstControlRplRolePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstControlRplRolePort_Type.__name__ = "Integer32"
_Sle2ErpsInstControlRplRolePort_Object = MibScalar
sle2ErpsInstControlRplRolePort = _Sle2ErpsInstControlRplRolePort_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 13),
    _Sle2ErpsInstControlRplRolePort_Type()
)
sle2ErpsInstControlRplRolePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlRplRolePort.setStatus("current")


class _Sle2ErpsInstControlSubRingBlock_Type(Integer32):
    """Custom type sle2ErpsInstControlSubRingBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstControlSubRingBlock_Type.__name__ = "Integer32"
_Sle2ErpsInstControlSubRingBlock_Object = MibScalar
sle2ErpsInstControlSubRingBlock = _Sle2ErpsInstControlSubRingBlock_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 14),
    _Sle2ErpsInstControlSubRingBlock_Type()
)
sle2ErpsInstControlSubRingBlock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlSubRingBlock.setStatus("current")


class _Sle2ErpsInstControlCtrlVlan_Type(Integer32):
    """Custom type sle2ErpsInstControlCtrlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2ErpsInstControlCtrlVlan_Type.__name__ = "Integer32"
_Sle2ErpsInstControlCtrlVlan_Object = MibScalar
sle2ErpsInstControlCtrlVlan = _Sle2ErpsInstControlCtrlVlan_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 15),
    _Sle2ErpsInstControlCtrlVlan_Type()
)
sle2ErpsInstControlCtrlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlCtrlVlan.setStatus("current")


class _Sle2ErpsInstControlTafficVlans_Type(Integer32):
    """Custom type sle2ErpsInstControlTafficVlans based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4092),
    )


_Sle2ErpsInstControlTafficVlans_Type.__name__ = "Integer32"
_Sle2ErpsInstControlTafficVlans_Object = MibScalar
sle2ErpsInstControlTafficVlans = _Sle2ErpsInstControlTafficVlans_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 16),
    _Sle2ErpsInstControlTafficVlans_Type()
)
sle2ErpsInstControlTafficVlans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlTafficVlans.setStatus("current")


class _Sle2ErpsInstControlVChannelVid_Type(Integer32):
    """Custom type sle2ErpsInstControlVChannelVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Sle2ErpsInstControlVChannelVid_Type.__name__ = "Integer32"
_Sle2ErpsInstControlVChannelVid_Object = MibScalar
sle2ErpsInstControlVChannelVid = _Sle2ErpsInstControlVChannelVid_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 17),
    _Sle2ErpsInstControlVChannelVid_Type()
)
sle2ErpsInstControlVChannelVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlVChannelVid.setStatus("current")
_Sle2ErpsInstControlVChannelAttachInstName_Type = OctetString
_Sle2ErpsInstControlVChannelAttachInstName_Object = MibScalar
sle2ErpsInstControlVChannelAttachInstName = _Sle2ErpsInstControlVChannelAttachInstName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 18),
    _Sle2ErpsInstControlVChannelAttachInstName_Type()
)
sle2ErpsInstControlVChannelAttachInstName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlVChannelAttachInstName.setStatus("current")


class _Sle2ErpsInstControlForcedSwitch_Type(Integer32):
    """Custom type sle2ErpsInstControlForcedSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstControlForcedSwitch_Type.__name__ = "Integer32"
_Sle2ErpsInstControlForcedSwitch_Object = MibScalar
sle2ErpsInstControlForcedSwitch = _Sle2ErpsInstControlForcedSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 19),
    _Sle2ErpsInstControlForcedSwitch_Type()
)
sle2ErpsInstControlForcedSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlForcedSwitch.setStatus("current")


class _Sle2ErpsInstControlManualSwitch_Type(Integer32):
    """Custom type sle2ErpsInstControlManualSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("east", 1),
          ("west", 2))
    )


_Sle2ErpsInstControlManualSwitch_Type.__name__ = "Integer32"
_Sle2ErpsInstControlManualSwitch_Object = MibScalar
sle2ErpsInstControlManualSwitch = _Sle2ErpsInstControlManualSwitch_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 20),
    _Sle2ErpsInstControlManualSwitch_Type()
)
sle2ErpsInstControlManualSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlManualSwitch.setStatus("current")


class _Sle2ErpsInstControlPropagateTc_Type(Integer32):
    """Custom type sle2ErpsInstControlPropagateTc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2ErpsInstControlPropagateTc_Type.__name__ = "Integer32"
_Sle2ErpsInstControlPropagateTc_Object = MibScalar
sle2ErpsInstControlPropagateTc = _Sle2ErpsInstControlPropagateTc_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 21),
    _Sle2ErpsInstControlPropagateTc_Type()
)
sle2ErpsInstControlPropagateTc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlPropagateTc.setStatus("current")


class _Sle2ErpsInstControlVersion_Type(Integer32):
    """Custom type sle2ErpsInstControlVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2))
    )


_Sle2ErpsInstControlVersion_Type.__name__ = "Integer32"
_Sle2ErpsInstControlVersion_Object = MibScalar
sle2ErpsInstControlVersion = _Sle2ErpsInstControlVersion_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 22),
    _Sle2ErpsInstControlVersion_Type()
)
sle2ErpsInstControlVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlVersion.setStatus("current")


class _Sle2ErpsInstControlActive_Type(Integer32):
    """Custom type sle2ErpsInstControlActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Sle2ErpsInstControlActive_Type.__name__ = "Integer32"
_Sle2ErpsInstControlActive_Object = MibScalar
sle2ErpsInstControlActive = _Sle2ErpsInstControlActive_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 23),
    _Sle2ErpsInstControlActive_Type()
)
sle2ErpsInstControlActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlActive.setStatus("current")
_Sle2ErpsInstControlDataTrafficInheritanceInstName_Type = OctetString
_Sle2ErpsInstControlDataTrafficInheritanceInstName_Object = MibScalar
sle2ErpsInstControlDataTrafficInheritanceInstName = _Sle2ErpsInstControlDataTrafficInheritanceInstName_Object(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 2, 24),
    _Sle2ErpsInstControlDataTrafficInheritanceInstName_Type()
)
sle2ErpsInstControlDataTrafficInheritanceInstName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sle2ErpsInstControlDataTrafficInheritanceInstName.setStatus("current")
_Sle2ErpsInstanceNotification_ObjectIdentity = ObjectIdentity
sle2ErpsInstanceNotification = _Sle2ErpsInstanceNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3)
)

# Managed Objects groups

sleFaultMgmtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 19)
)
sleFaultMgmtGroup.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultDefaultSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultCriteriaSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultNotifiyActivity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlDefaultSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlCriteriaSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlNotifiyActivity"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityValue"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlValue"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificCode"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportingSourceType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportingSource"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificProblem"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificProblemText"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmTimeAndDate"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistorySpecific"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistorySeverity"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryText"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryTime"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleOamPortIndex"),
        ("SLE-FAULTMGMT-MIB", "sleOamMuxAction"),
        ("SLE-FAULTMGMT-MIB", "sleOamParAction"),
        ("SLE-FAULTMGMT-MIB", "sleOamAdminState"),
        ("SLE-FAULTMGMT-MIB", "sleOamMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamUnidirectionMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamFunctionsSupported"),
        ("SLE-FAULTMGMT-MIB", "sleOamPeerStatus"),
        ("SLE-FAULTMGMT-MIB", "sleOamPeerMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleOamPeerMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamPeerFunctionsSupported"),
        ("SLE-FAULTMGMT-MIB", "sleOamRemLoopback"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlPortAdminState"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlPortMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlPortUnidirectionMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlPortRemLoopback"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFSPOperationMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaActiveNetworkInterface"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaForceNetworkInterface"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaReportingInterval"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaNEMIFitted"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaForceReset"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaManagerAddress"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMinRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMaxRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTemperatureThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPartNumber"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSerialNumber"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFirmwareVersion"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFPGAVersion"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaHardwareRevision"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaCLEICode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTemperature"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRailVoltage"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPSUStates"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPSUType"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFansFitted"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFanState"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTransmitMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlPortIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlFSPOperationMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlForceNetworkInterface"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlReportingInterval"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlForceReset"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlMinRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlMaxRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTemperatureThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTransmitMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemInstance"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOperationalStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLineSpeed"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMACAddress"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaConnectorType"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAutonegiotation"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLossForwarding"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdminState"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemoteInterfaceIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaUserDefinedString"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemoteSignalling"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaConfiguration"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocalTechnologyAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdvertisedTechnologyAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaReceivedTechnologyAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocalSectorAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdvertisedSectorAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaReceivedSectorAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaDuplexCapabilities"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPHYType"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPHYTypeList"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMIIDetect"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPHYState"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGoodFramesTransmitted"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSingleCollisionFrames"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMultipleCollisionFrames"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGoodFramesReceived"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFCSErrors"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAlignmentErrors"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFramesTooLong"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaBytesTransmitted"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaBytesReceived"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSymbolErrors"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlPortIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlRemInstance"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlLineSpeed"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlAutonegiotation"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlLinkLossForwarding"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlUserDefinedString"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlAdvertisedTechnologyAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlAdvertisedSectorAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleType"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModulePartNumber"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleSerialNumber"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleFirmwareVersion"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleSoftwareVersion"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleHardwareRevision"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaModuleCLEICode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalThresholdLevel"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLength1"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLength2"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLength3"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLength4"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLengthCu"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaWaveLength"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLaserBias"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTransmitPower"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaReceivePower"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLaserTxTemperature"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlPortIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlRemInstance"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlThresholdLevel"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemMACAddress"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemPduConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocFlags"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemFlags"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemState"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemVendorOUI"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemDeviceNumber"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemVendorVersion"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrSymbolPeriodEventConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFrameEventConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFramePeriodEventConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFrameSecsSummaryEventConfig"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaPDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaUnsupportedCodesRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaInfoPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaInfoPDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaEventNotificationPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaUniqueEventNotificationPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaDupEventNotificationPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLoopbackControlPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLoopbackControlPDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVariableRequestPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVariableRequestPDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVariableResponsePDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVariableResponsePDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVendorPDUsTx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaVendorPDUsRx"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemFramesLostDuetoOAMErr"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrSymbolPeriodEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFrameSecsEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFramePeriodEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLocErrFrameSecsSummaryEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemErrSymbolPeriodEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemErrFrameSecsEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemoteErrorFramePeriodEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaRemoteErrorFrameSecsSummaryEvent"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlPortIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlRemInstance"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistorySeqNum"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificSeqNum"),
        ("SLE-FAULTMGMT-MIB", "sleFaultNextSeqNum"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDLevel"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDLevelIndex"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDLevelBlock"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlBlock"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDLevelOperStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731Enable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sleY1731SnmpServerTraps"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckStartDelay"),
        ("SLE-FAULTMGMT-MIB", "sleY1731DefaultMegLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731DefaultMegMhfCreation"),
        ("SLE-FAULTMGMT-MIB", "sleY1731PduToCfm"),
        ("SLE-FAULTMGMT-MIB", "sleY1731DedicatedVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlLtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlSnmpServerTraps"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlXcheckStartDelay"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDefaultMegLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDefaultMegMhfCreation"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlPduToCfm"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDedicatedVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegVid"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegOutOfService"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsRplOwner"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsWestPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsRplPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsState"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlVid"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlOutOfService"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsRplOwner"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsWestPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsRplPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepDirection"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepFngState"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepHighestPrDefect"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepAisTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLckTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepOutOfService"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepDlmEnabledRmep"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepDefects"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmSequenceErrors"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCciSentCcms"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepNextLbmTransId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbrIn"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbrInOutOfOrder"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTstLbrInBitError"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTstLbrInCrcError"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLtmNextSeqNumber"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepUnexpLtrIn"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbrOut"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTmLbrFirstLostId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTmLbrMaxRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossNearMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossNearMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossNearSum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossFarMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossFarMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossFarSum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlDirection"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlAisTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlLckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlLckTransmitEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlOutOfService"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlDlmEnabledRmep"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmDestMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmDestIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLbmLength"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmTargetMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmTargetMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmTargetIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmFlags"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmTtl"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLtmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmLength"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLbmPattern"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmPartDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmStartRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmIncRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmLength"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmLbmPattern"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstLength"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTstPattern"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReceiveTstDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstPartDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstStartRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstIncRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstLength"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitTmTstPattern"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReceiveTmTstDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitLmmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmit1dmIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmit1dmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmit1dmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmit1dmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmit1dmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReceive1dmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmIsUnicast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmDuration"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTransmitDmmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipType"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckMepState"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepState"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepFailedOkTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepRdi"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLoc"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTstCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTstOutOfOrder"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTstBitError"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTstCrcError"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTmTstCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveTmTstLostId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossNearMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossNearMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossNearSum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossFarMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossFarMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossFarSum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceive1dmCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731Rmep1dmFrameDelayMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731Rmep1dmFrameDelayMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731Rmep1dmFrameDelayAvg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731Rmep1dmFrameDelayVar"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepReceiveDmrCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepDmrFrameDelayMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepDmrFrameDelayMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepDmrFrameDelayAvg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepDmrFrameDelayVar"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LbrReceiveOrder"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LbrRemoteMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrSeqNumber"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrReceiveOrder"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrForwarded"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrTerminalMep"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrLastEgressIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrNextEgressIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrRelay"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrIngress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrIngressMac"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrIngressPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrEgress"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrEgressMac"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrEgressPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731ConfigErrorVid"),
        ("SLE-FAULTMGMT-MIB", "sleY1731ConfigErrorIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731ConfigErrorType"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbVlanId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbMacAddr"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepCreation"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRmepCreation"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkOamStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkOamStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbSuccessRate"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTmLbmCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTmLbrCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTmTstCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RMepControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsEastPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsWestPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsForcedSwitchEast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsForcedSwitchWest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsForcedSwitchEast"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsForcedSwitchWest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URDedicatedVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731UREnableStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URConnectivityCheckMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URPrimaryMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URSecondaryMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNodeConf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNodeConfPortNum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrustMemberCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlDedicatedVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlEnableStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlConnectivityCheckMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlPrimaryMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlSecondaryMepId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlControlVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNodeConf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNodeConfPortNum"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTrustMemberCount"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNodeConfPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CCIgnoreDefect"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RapsFloodingBlock"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlCCIgnoreDefect"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRapsFloodingBlock"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogDisableStatus"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogAction"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogInterval"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlDisableStatus"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlAction"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbRoundtripMin"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbRoundtripMax"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLbRoundtripAvg"),
        ("SLE-FAULTMGMT-MIB", "sleCfmEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sleCfmSnmpServerTraps"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckStartDelay"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlLtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlSnmpServerTraps"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlXcheckStartDelay"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkMdName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkMaVid"),
        ("SLE-FAULTMGMT-MIB", "sleCfmTrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmTrunkMdName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmTrunkMaVid"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlVid"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlXcheckEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepDirection"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepFngState"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepHighestPrDefect"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepDefects"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCciSentCcms"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepNextLbmTransId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepLbrIn"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepLbrInOutOfOrder"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepLtmNextSeqNumber"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepUnexpLtrIn"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlDirection"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlCcEnable"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultClearTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmDestMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmDestIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmCount"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmTimeout"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLbmPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLtmTargetMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLtmTargetMepId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLtmTargetIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLtmFlags"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTransmitLtmTtl"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipLevel"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipType"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckMepState"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepState"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepRdi"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmRmepInterfaceStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrSeqNumber"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrReceiveOrder"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrTtl"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrForwarded"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrTerminalMep"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrLastEgressIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrNextEgressIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrRelay"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrIngress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrIngressMac"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrIngressPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrEgress"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrEgressMac"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrEgressPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmConfigErrorVid"),
        ("SLE-FAULTMGMT-MIB", "sleCfmConfigErrorIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmConfigErrorType"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbVlanId"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbMacAddr"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingType"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingLevel"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingCtrlVlan"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingTrafficVlans"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingNodeId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingEnable"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingBridgeRole"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingState"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingEastPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWestPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWestPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingRplPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingIcPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingMultipleFailure"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPropagateTc"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingForcedSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWaitToBlock"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlType"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlCtrlVlan"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTrafficVlans"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWestPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlBridgeRole"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlMultipleFailure"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlPropagateTc"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWaitToBlock"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LbrTransId"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LbrRoundTripTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TlvPermission"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTlvPermission"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepPmEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossNearRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossNearAvgRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossFarRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcmFrameLossFarAvgRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlPmEnable"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossNearRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossNearAvgRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossFarRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepLmrFrameLossFarAvgRatio"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URSFCondition"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlSFCondition"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlMode"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URForceSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlForceSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogDefectCPUHigh"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogTemperHigh"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogTemperLow"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogMemLow"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogFanFail"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogPhyCRCFail"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogPhyDetectFail"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogSFUMateInitFail"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogDaemonHealthBad"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrTtl"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepDMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepDMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepDRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogGPIURavenLinkDown"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepRllcfGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcfGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleOamRemLoopbackCnt"),
        ("SLE-FAULTMGMT-MIB", "sleOamLm"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmAction"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFramePeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFramePeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFramePeriodTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameSecondSummaryWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameSecondSummaryThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameSecondSummaryTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmSymbolPeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmSymbolPeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmSymbolPeriodTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSeqNum"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameLength"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameErrors"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameErrorRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameEventRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodLength"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodErrors"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodErrorRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFramePeriodEventRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryLength"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryErrors"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryErrorRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemFrameSecondSummaryEventRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodLength"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodErrors"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodErrorRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmRemSymbolPeriodEventRunTotal"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlRemLoopbackPkCnt"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLm"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmAction"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFrameWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFrameThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFramePeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFramePeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFrameSecondSummaryWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmFrameSecondSummaryThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmSymbolPeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlLmSymbolPeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrRoundTripTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepRllcf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepRllcfHoldOff"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcfHoldOff"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingChannel"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPassThrough"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingManualSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingVerifiedTime"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingVirtualVlan"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingIcNode"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrafficVlan"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URState"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTrafficVlan"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportPairType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryPairType"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URManualSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlManualSwitch"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogNAKLockStatus"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogNakCompensate"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogRecoverActionMemLow"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogRecoverActionNak"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlNAKLockStatus"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlNAKCompensate"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlRecoverActionMemLow"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlRecoverActionNAK"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogNAK"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalInspectInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalStartupThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalNoKeepalive"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlInspectInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlStartupThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlNoKeepalive"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonName"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonPid"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonCrashAction"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonTimeoutAction"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonThresholded"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonStartupThresholded"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonWatchdogAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonWatchdogThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonWatchdogCount"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlCrashAction"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeoutAction"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlWatchdogAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlWatchdogThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PonitsLinearControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PointsLinearControlThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMActionType"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMActionThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMRebootThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMRecoveryTime"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMFaultCounter"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMRebootCounter"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMHostAddr"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlActionType"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlActionThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRebootThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRecoveryTime"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlHostAddr"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogFANRPMLow"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMLiveThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlLiveThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegMd"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlMd"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlName"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlThreshed"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlStartupThresh"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSpecificCode"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSourceType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSource"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmFrameCountSimStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlLmmFrameCountSimStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeDefaultMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeAutomatic"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeConfigDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeConfigDefaultMdMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeLtrCacheEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlDefaultMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlAutomatic"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlConfigDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlConfigDefaultMdMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeConntrolLtrCacheEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigPrimaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigSecondaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigSecondaryBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlPrimaryBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlPrimaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlSecondaryBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlSecondaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaElmi"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaConnectivityStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaConfiguredRmepCount"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaConvergedRmepCount"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlMipCreation"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlCcmInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlElmi"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoLocalVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDirection"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoUNI"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoLocalMacAddr"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoRdi"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoService"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoLckLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoConnectivityStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLocalVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMepDirection"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlUNI"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlCcmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlService"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLckLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstPattern"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstRecursive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstTxInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLckRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrCcmLtmPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrLowPrDef"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrFngAlarmTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrResetFngTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrCcmLtmFlag"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTtl"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmEgressId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmMessages"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDataTlv"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmVlanPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmVlanDropEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmTimeOut"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrLbrTimeOut"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlCcmLtmPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrContrlLowPrDef"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrContrlFngAlarmTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlResetFngTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlCcmLtmFlag"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLtmTargetMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLtmTargetMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLtmTargetIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLtmTtl"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLtmEgressId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmDestMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmDestIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmMessages"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmDataTlv"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmVlanPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmVlanDropEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTxLbmTimeOut"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlLbrTimeOut"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbReceivedCount"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbRemoteMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbTxMessages"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbResponseCount"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvData"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvTest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRecursive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrMepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrHops"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrRelay"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrIngressEgress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrIngress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrEgress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoDefectConditions"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoReceivedDefectConditions"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoLastReceivedDefectCondition"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlDefectConditions"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAislevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusStartTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusCurrentTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusEndTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusNeerLoss"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusFarLoss"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusCurNeerLoss"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmStatusCurFarLoss"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRempMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepActiveState"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepRemoteMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepRdi"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepFlags"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMipVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMipMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMipIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMipLocalMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatCcmSent"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatCcmRevOutOfSeq"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatLbrSent"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatLbrRevValid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatLbrRevBadMsdu"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatLbrRevOutOfSeq"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmStatLtrRevUnexpected"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAcitveLevelIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmActiveLevelStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorReason"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorServiceId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtCacheIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtCacheSrcMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtCacheHops"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtCacheRelay"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastPort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestPort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControEastPort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControWestPort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlWaitToRestore"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlNonRevertive"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstProfileName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRingId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRplRole"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRplRolePort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstSubRingBlock"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstCtrlVlan"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstTafficVlans"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVChannelVid"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVChannelAttachInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPropagateTc"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstEastPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstWestPortStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimer"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlProfileName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRingId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRplRole"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRplRolePort"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlSubRingBlock"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlCtrlVlan"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTafficVlans"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlVChannelVid"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlVChannelAttachInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlForcedSwitch"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlManualSwitch"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlPropagateTc"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlVersion"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlIcNode"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlChannel"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlPassThrough"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlVerifiedTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDlmState"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDlmRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDlmState"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTransMode"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvType"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstChannelMode"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstActive"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstEastIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstWestIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVersion"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDataTrafficInheritanceInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlDataTrafficInheritanceInstName"))
)
if mibBuilder.loadTexts:
    sleFaultMgmtGroup.setStatus("current")


# Notification objects

sleAlarmDefaultSeverityChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 3, 1)
)
sleAlarmDefaultSeverityChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultDefaultSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmDefaultSeverityChanged.setStatus(
        "current"
    )

sleAlarmDefaultCriteriaChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 3, 2)
)
sleAlarmDefaultCriteriaChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultCriteriaSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmDefaultCriteriaChanged.setStatus(
        "current"
    )

sleNotificationActivityChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 1, 3, 3)
)
sleNotificationActivityChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultNotifiyActivity"))
)
if mibBuilder.loadTexts:
    sleNotificationActivityChanged.setStatus(
        "current"
    )

sleAlarmSeveriityCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 3, 1)
)
sleAlarmSeveriityCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmSeverityValue"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmSeveriityCreated.setStatus(
        "current"
    )

sleAlarmSeveriityDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 3, 2)
)
sleAlarmSeveriityDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityValue"))
)
if mibBuilder.loadTexts:
    sleAlarmSeveriityDestroyed.setStatus(
        "current"
    )

sleAlarmSeverityChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 2, 3, 3)
)
sleAlarmSeverityChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmSeverityValue"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmSeverityChanged.setStatus(
        "current"
    )

sleAlarmReportNotified = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 2, 1)
)
sleAlarmReportNotified.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmSpecificCode"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportingSourceType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportingSource"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmTimeAndDate"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificSeverity"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificProblem"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificProblemText"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSpecificSeqNum"))
)
if mibBuilder.loadTexts:
    sleAlarmReportNotified.setStatus(
        "current"
    )

sleAlarmReportCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 4, 1)
)
sleAlarmReportCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmReportControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmReportCleared.setStatus(
        "current"
    )

sleAlarmReportDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 3, 4, 2)
)
sleAlarmReportDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmReportControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSpecificCode"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSourceType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportControlSource"))
)
if mibBuilder.loadTexts:
    sleAlarmReportDeleted.setStatus(
        "current"
    )

sleAlarmHistoryCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 4, 3, 1)
)
sleAlarmHistoryCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryControlReqResult"))
)
if mibBuilder.loadTexts:
    sleAlarmHistoryCleared.setStatus(
        "current"
    )

sleEfmOamPortProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 3, 1)
)
sleEfmOamPortProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleOamAdminState"),
        ("SLE-FAULTMGMT-MIB", "sleOamMode"),
        ("SLE-FAULTMGMT-MIB", "sleOamUnidirectionMode"))
)
if mibBuilder.loadTexts:
    sleEfmOamPortProfileChanged.setStatus(
        "current"
    )

sleEfmOamPortRemLoopback = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 3, 2)
)
sleEfmOamPortRemLoopback.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamRemLoopback"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlRemLoopbackPkCnt"))
)
if mibBuilder.loadTexts:
    sleEfmOamPortRemLoopback.setStatus(
        "current"
    )

sleEfmOamPortLinkMonitorChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 5, 3, 3)
)
sleEfmOamPortLinkMonitorChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFramePeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFramePeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmAction"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmSymbolPeriodThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmSymbolPeriodWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameSecondSummaryThresh"),
        ("SLE-FAULTMGMT-MIB", "sleOamLmFrameSecondSummaryWindow"),
        ("SLE-FAULTMGMT-MIB", "sleOamLm"),
        ("SLE-FAULTMGMT-MIB", "sleOamPortIndex"))
)
if mibBuilder.loadTexts:
    sleEfmOamPortLinkMonitorChanged.setStatus(
        "current"
    )

sleAdvaSystemProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 3, 1)
)
sleAdvaSystemProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaFSPOperationMode"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaForceNetworkInterface"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaReportingInterval"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaForceReset"))
)
if mibBuilder.loadTexts:
    sleAdvaSystemProfileChanged.setStatus(
        "current"
    )

sleAdvaAlarmProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 3, 2)
)
sleAdvaAlarmProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMinRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMaxRailVoltageThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTemperatureThreshold"))
)
if mibBuilder.loadTexts:
    sleAdvaAlarmProfileChanged.setStatus(
        "current"
    )

sleAdvaElectricalInterfaceChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 6, 3, 3)
)
sleAdvaElectricalInterfaceChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaTransmitMode"))
)
if mibBuilder.loadTexts:
    sleAdvaElectricalInterfaceChanged.setStatus(
        "current"
    )

sleAdvaGeneralProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 3, 1)
)
sleAdvaGeneralProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLineSpeed"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAutonegiotation"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaLinkLossForwarding"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaUserDefinedString"))
)
if mibBuilder.loadTexts:
    sleAdvaGeneralProfileChanged.setStatus(
        "current"
    )

sleAdvaAutonegProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 7, 3, 2)
)
sleAdvaAutonegProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdvertisedTechnologyAbility"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdvertisedSectorAbility"))
)
if mibBuilder.loadTexts:
    sleAdvaAutonegProfileChanged.setStatus(
        "current"
    )

sleAdvaOpticalAlarmChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 9, 3, 1)
)
sleAdvaOpticalAlarmChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalThresholdLevel"))
)
if mibBuilder.loadTexts:
    sleAdvaOpticalAlarmChanged.setStatus(
        "current"
    )

setAdvaOamProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 10, 3, 1)
)
setAdvaOamProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAdvaOamControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOamControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaMode"))
)
if mibBuilder.loadTexts:
    setAdvaOamProfileChanged.setStatus(
        "current"
    )

sleAlarmLEDOffChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 4, 1)
)
sleAlarmLEDOffChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlLevel"))
)
if mibBuilder.loadTexts:
    sleAlarmLEDOffChanged.setStatus(
        "current"
    )

sleAlarmLEDLevelChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 4, 2)
)
sleAlarmLEDLevelChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlType"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlLevel"))
)
if mibBuilder.loadTexts:
    sleAlarmLEDLevelChanged.setStatus(
        "current"
    )

sleAlarmLEDCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 4, 3)
)
sleAlarmLEDCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlType"))
)
if mibBuilder.loadTexts:
    sleAlarmLEDCleared.setStatus(
        "current"
    )

sleAlarmLEDBlockChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 11, 4, 4)
)
sleAlarmLEDBlockChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDControlBlock"))
)
if mibBuilder.loadTexts:
    sleAlarmLEDBlockChanged.setStatus(
        "current"
    )

sleY1731EnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 1)
)
sleY1731EnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlEnable"))
)
if mibBuilder.loadTexts:
    sleY1731EnableChanged.setStatus(
        "current"
    )

sleY1731TrunkEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 2)
)
sleY1731TrunkEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkEnable"))
)
if mibBuilder.loadTexts:
    sleY1731TrunkEnableChanged.setStatus(
        "current"
    )

sleY1731LtrCacheProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 3)
)
sleY1731LtrCacheProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlLtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlLtrCacheSize"))
)
if mibBuilder.loadTexts:
    sleY1731LtrCacheProfileChanged.setStatus(
        "current"
    )

sleY1731SnmpProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 4)
)
sleY1731SnmpProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlSnmpServerTraps"))
)
if mibBuilder.loadTexts:
    sleY1731SnmpProfileChanged.setStatus(
        "current"
    )

sleY1731XcheckProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 5)
)
sleY1731XcheckProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlXcheckStartDelay"))
)
if mibBuilder.loadTexts:
    sleY1731XcheckProfileChanged.setStatus(
        "current"
    )

sleY1731DefaultMegProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 6)
)
sleY1731DefaultMegProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDefaultMegLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDefaultMegMhfCreation"))
)
if mibBuilder.loadTexts:
    sleY1731DefaultMegProfileChanged.setStatus(
        "current"
    )

sleY1731PduToCfmChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 7)
)
sleY1731PduToCfmChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlPduToCfm"))
)
if mibBuilder.loadTexts:
    sleY1731PduToCfmChanged.setStatus(
        "current"
    )

sleY1731DedicatedVlanChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 8)
)
sleY1731DedicatedVlanChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlDedicatedVlan"))
)
if mibBuilder.loadTexts:
    sleY1731DedicatedVlanChanged.setStatus(
        "current"
    )

sleY1731MipCcdbDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 9)
)
sleY1731MipCcdbDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"))
)
if mibBuilder.loadTexts:
    sleY1731MipCcdbDestroyed.setStatus(
        "current"
    )

sleY1731LtrCacheDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 10)
)
sleY1731LtrCacheDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"))
)
if mibBuilder.loadTexts:
    sleY1731LtrCacheDestroyed.setStatus(
        "current"
    )

sleY1731RmepCreationChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 11)
)
sleY1731RmepCreationChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRmepCreation"))
)
if mibBuilder.loadTexts:
    sleY1731RmepCreationChanged.setStatus(
        "current"
    )

sleY1731TrunkOamStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 12)
)
sleY1731TrunkOamStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkOamStatus"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTrunkMeg"))
)
if mibBuilder.loadTexts:
    sleY1731TrunkOamStatusChanged.setStatus(
        "current"
    )

sleY1731CCIgnoreDefectChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 13)
)
sleY1731CCIgnoreDefectChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlCCIgnoreDefect"))
)
if mibBuilder.loadTexts:
    sleY1731CCIgnoreDefectChanged.setStatus(
        "current"
    )

sleY1731RapsFloodinBlockChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 14)
)
sleY1731RapsFloodinBlockChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRapsFloodingBlock"))
)
if mibBuilder.loadTexts:
    sleY1731RapsFloodinBlockChanged.setStatus(
        "current"
    )

sleY1731TlvPermissionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 1, 3, 15)
)
sleY1731TlvPermissionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731BaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731BaseControlTlvPermission"))
)
if mibBuilder.loadTexts:
    sleY1731TlvPermissionChanged.setStatus(
        "current"
    )

sleY1731MegCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 1)
)
sleY1731MegCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlVid"))
)
if mibBuilder.loadTexts:
    sleY1731MegCreated.setStatus(
        "current"
    )

sleY1731MegDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 2)
)
sleY1731MegDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"))
)
if mibBuilder.loadTexts:
    sleY1731MegDeleted.setStatus(
        "current"
    )

sleY1731MegMepEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 3)
)
sleY1731MegMepEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlMepEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegMepEnableChanged.setStatus(
        "current"
    )

sleY1731MegCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 4)
)
sleY1731MegCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegCcEnableChanged.setStatus(
        "current"
    )

sleY1731MegCcProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 5)
)
sleY1731MegCcProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlCcHoldTime"))
)
if mibBuilder.loadTexts:
    sleY1731MegCcProfileChanged.setStatus(
        "current"
    )

sleY1731MegFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 6)
)
sleY1731MegFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlFaultClearTime"))
)
if mibBuilder.loadTexts:
    sleY1731MegFaultProfileChanged.setStatus(
        "current"
    )

sleY1731MegXcheckEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 7)
)
sleY1731MegXcheckEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlXcheckEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegXcheckEnableChanged.setStatus(
        "current"
    )

sleY1731MegAisEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 8)
)
sleY1731MegAisEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegAisEnableChanged.setStatus(
        "current"
    )

sleY1731MegAisTransmitEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 9)
)
sleY1731MegAisTransmitEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisTransmitEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegAisTransmitEnableChanged.setStatus(
        "current"
    )

sleY1731MegAisProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 10)
)
sleY1731MegAisProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlAisPriority"))
)
if mibBuilder.loadTexts:
    sleY1731MegAisProfileChanged.setStatus(
        "current"
    )

sleY1731MegLckEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 11)
)
sleY1731MegLckEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegLckEnableChanged.setStatus(
        "current"
    )

sleY1731MegLckTransmitEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 12)
)
sleY1731MegLckTransmitEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckTransmitEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegLckTransmitEnableChanged.setStatus(
        "current"
    )

sleY1731MegLckProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 13)
)
sleY1731MegLckProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckLevel"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlLckPriority"))
)
if mibBuilder.loadTexts:
    sleY1731MegLckProfileChanged.setStatus(
        "current"
    )

sleY1731MegOutOfServiceChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 14)
)
sleY1731MegOutOfServiceChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlOutOfService"))
)
if mibBuilder.loadTexts:
    sleY1731MegOutOfServiceChanged.setStatus(
        "current"
    )

sleY1731MegRapsEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 15)
)
sleY1731MegRapsEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsEnableChanged.setStatus(
        "current"
    )

sleY1731MegRapsRingportsChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 16)
)
sleY1731MegRapsRingportsChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsWestPort"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsRingportsChanged.setStatus(
        "current"
    )

sleY1731MegRapsRplPortChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 17)
)
sleY1731MegRapsRplPortChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsRplPort"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsRplPortChanged.setStatus(
        "current"
    )

sleY1731MegRapsRplOwnerChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 18)
)
sleY1731MegRapsRplOwnerChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsRplOwner"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsRplOwnerChanged.setStatus(
        "current"
    )

sleY1731MegRapsTimerChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 19)
)
sleY1731MegRapsTimerChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsWaitToRestore"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsTimerChanged.setStatus(
        "current"
    )

sleY1731MegRemoteMepDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 20)
)
sleY1731MegRemoteMepDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MegRemoteMepDestroyed.setStatus(
        "current"
    )

sleY1731MegErrorDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 21)
)
sleY1731MegErrorDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MegErrorDestroyed.setStatus(
        "current"
    )

sleY1731MegRapsNonRevertiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 22)
)
sleY1731MegRapsNonRevertiveChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsNonRevertive"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsNonRevertiveChanged.setStatus(
        "current"
    )

sleY1731MegRapsForcedSwitchEastChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 23)
)
sleY1731MegRapsForcedSwitchEastChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsForcedSwitchEast"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsForcedSwitchEastChanged.setStatus(
        "current"
    )

sleY1731MegRapsForcedSwitchWestChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 24)
)
sleY1731MegRapsForcedSwitchWestChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlRapsForcedSwitchWest"))
)
if mibBuilder.loadTexts:
    sleY1731MegRapsForcedSwitchWestChanged.setStatus(
        "current"
    )

sleY1731MegMdAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 25)
)
sleY1731MegMdAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlMd"))
)
if mibBuilder.loadTexts:
    sleY1731MegMdAdded.setStatus(
        "current"
    )

sleY1731MegMdDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 2, 3, 26)
)
sleY1731MegMdDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MegControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegControlMd"))
)
if mibBuilder.loadTexts:
    sleY1731MegMdDeleted.setStatus(
        "current"
    )

sleY1731MepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 1)
)
sleY1731MepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlDirection"))
)
if mibBuilder.loadTexts:
    sleY1731MepCreated.setStatus(
        "current"
    )

sleY1731MepDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 2)
)
sleY1731MepDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepDeleted.setStatus(
        "current"
    )

sleY1731MepEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 3)
)
sleY1731MepEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepEnableChanged.setStatus(
        "current"
    )

sleY1731MepCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 4)
)
sleY1731MepCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlCcEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepCcEnableChanged.setStatus(
        "current"
    )

sleY1731MepFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 5)
)
sleY1731MepFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlFaultClearTime"))
)
if mibBuilder.loadTexts:
    sleY1731MepFaultProfileChanged.setStatus(
        "current"
    )

sleY1731MepAisEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 6)
)
sleY1731MepAisEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlAisEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepAisEnableChanged.setStatus(
        "current"
    )

sleY1731MepAisTransmitEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 7)
)
sleY1731MepAisTransmitEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlAisTransmitEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepAisTransmitEnableChanged.setStatus(
        "current"
    )

sleY1731MepLckEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 8)
)
sleY1731MepLckEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlLckEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepLckEnableChanged.setStatus(
        "current"
    )

sleY1731MepLckTransmitEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 9)
)
sleY1731MepLckTransmitEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlLckTransmitEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepLckTransmitEnableChanged.setStatus(
        "current"
    )

sleY1731MepOutOfServiceChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 10)
)
sleY1731MepOutOfServiceChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlOutOfService"))
)
if mibBuilder.loadTexts:
    sleY1731MepOutOfServiceChanged.setStatus(
        "current"
    )

sleY1731MepDlmEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 11)
)
sleY1731MepDlmEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlDlmEnabledRmep"))
)
if mibBuilder.loadTexts:
    sleY1731MepDlmEnableChanged.setStatus(
        "current"
    )

sleY1731MepTransmitLbmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 12)
)
sleY1731MepTransmitLbmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitLbmFinished.setStatus(
        "current"
    )

sleY1731MepTransmitLtmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 13)
)
sleY1731MepTransmitLtmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitLtmFinished.setStatus(
        "current"
    )

sleY1731MepTransmitTstLbmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 14)
)
sleY1731MepTransmitTstLbmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitTstLbmFinished.setStatus(
        "current"
    )

sleY1731MepTransmitTmLbmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 15)
)
sleY1731MepTransmitTmLbmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitTmLbmFinished.setStatus(
        "current"
    )

sleY1731MepTransmitTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 16)
)
sleY1731MepTransmitTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitTstFinished.setStatus(
        "current"
    )

sleY1731MepReceiveTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 17)
)
sleY1731MepReceiveTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepReceiveTstFinished.setStatus(
        "current"
    )

sleY1731MepTransmitTmTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 18)
)
sleY1731MepTransmitTmTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitTmTstFinished.setStatus(
        "current"
    )

sleY1731MepReceiveTmTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 19)
)
sleY1731MepReceiveTmTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepReceiveTmTstFinished.setStatus(
        "current"
    )

sleY1731MepTransmitLmmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 20)
)
sleY1731MepTransmitLmmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitLmmFinished.setStatus(
        "current"
    )

sleY1731MepTransmit1dmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 21)
)
sleY1731MepTransmit1dmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmit1dmFinished.setStatus(
        "current"
    )

sleY1731MepReceive1dmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 22)
)
sleY1731MepReceive1dmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepReceive1dmFinished.setStatus(
        "current"
    )

sleY1731MepTransmitDmmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 23)
)
sleY1731MepTransmitDmmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731MepTransmitDmmFinished.setStatus(
        "current"
    )

sleY1731MepPmEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 24)
)
sleY1731MepPmEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlPmEnable"))
)
if mibBuilder.loadTexts:
    sleY1731MepPmEnableChanged.setStatus(
        "current"
    )

sleY1731MepRllcfChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 3, 3, 25)
)
sleY1731MepRllcfChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcfHoldOff"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepControlRllcfGuardTime"))
)
if mibBuilder.loadTexts:
    sleY1731MepRllcfChanged.setStatus(
        "current"
    )

sleY1731MipCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 3, 1)
)
sleY1731MipCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlPort"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlLevel"))
)
if mibBuilder.loadTexts:
    sleY1731MipCreated.setStatus(
        "current"
    )

sleY1731MipDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 4, 3, 2)
)
sleY1731MipDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731MipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipControlPort"))
)
if mibBuilder.loadTexts:
    sleY1731MipDeleted.setStatus(
        "current"
    )

sleY1731XcheckMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 3, 1)
)
sleY1731XcheckMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731XcheckMepCreated.setStatus(
        "current"
    )

sleY1731XcheckMepDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 5, 3, 2)
)
sleY1731XcheckMepDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731XcheckMepDeleted.setStatus(
        "current"
    )

sleY1731CcMacCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 3, 1)
)
sleY1731CcMacCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731CcMacCreated.setStatus(
        "current"
    )

sleY1731CcMacDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 6, 3, 2)
)
sleY1731CcMacDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731CcMacDeleted.setStatus(
        "current"
    )

sleY1731AisMacCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 3, 1)
)
sleY1731AisMacCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731AisMacCreated.setStatus(
        "current"
    )

sleY1731AisMacDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 7, 3, 2)
)
sleY1731AisMacDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731AisMacDeleted.setStatus(
        "current"
    )

sleY1731LckMacCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 3, 1)
)
sleY1731LckMacCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731LckMacCreated.setStatus(
        "current"
    )

sleY1731LckMacDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 8, 3, 2)
)
sleY1731LckMacDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacControlAddress"))
)
if mibBuilder.loadTexts:
    sleY1731LckMacDeleted.setStatus(
        "current"
    )

sleY1731RmepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 3, 1)
)
sleY1731RmepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731RmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIfIndex"))
)
if mibBuilder.loadTexts:
    sleY1731RmepCreated.setStatus(
        "current"
    )

sleY1731RmepDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 9, 3, 2)
)
sleY1731RmepDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731RmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepControlIfIndex"))
)
if mibBuilder.loadTexts:
    sleY1731RmepDeleted.setStatus(
        "current"
    )

sleY1731URDedicatedVlanChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 1)
)
sleY1731URDedicatedVlanChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlDedicatedVlan"))
)
if mibBuilder.loadTexts:
    sleY1731URDedicatedVlanChanged.setStatus(
        "current"
    )

sleY1731UREnableStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 2)
)
sleY1731UREnableStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlEnableStatus"))
)
if mibBuilder.loadTexts:
    sleY1731UREnableStatusChanged.setStatus(
        "current"
    )

sleY1731URCCPrimaryMepIdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 3)
)
sleY1731URCCPrimaryMepIdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlConnectivityCheckMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlPrimaryMepId"))
)
if mibBuilder.loadTexts:
    sleY1731URCCPrimaryMepIdChanged.setStatus(
        "current"
    )

sleY1731URCCPrimaryMepIdCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 4)
)
sleY1731URCCPrimaryMepIdCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URCCPrimaryMepIdCleared.setStatus(
        "current"
    )

sleY1731URCCSecondaryMepIdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 5)
)
sleY1731URCCSecondaryMepIdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlConnectivityCheckMeg"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlSecondaryMepId"))
)
if mibBuilder.loadTexts:
    sleY1731URCCSecondaryMepIdChanged.setStatus(
        "current"
    )

sleY1731URCCSecondaryMepIdCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 6)
)
sleY1731URCCSecondaryMepIdCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URCCSecondaryMepIdCleared.setStatus(
        "current"
    )

sleY1731URControlVlanChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 7)
)
sleY1731URControlVlanChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlControlVlan"))
)
if mibBuilder.loadTexts:
    sleY1731URControlVlanChanged.setStatus(
        "current"
    )

sleY1731URControlVlanCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 8)
)
sleY1731URControlVlanCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URControlVlanCleared.setStatus(
        "current"
    )

sleY1731URNodeConfChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 9)
)
sleY1731URNodeConfChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNodeConf"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNodeConfPortNum"))
)
if mibBuilder.loadTexts:
    sleY1731URNodeConfChanged.setStatus(
        "current"
    )

sleY1731URNodeConfCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 10)
)
sleY1731URNodeConfCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNodeConf"))
)
if mibBuilder.loadTexts:
    sleY1731URNodeConfCleared.setStatus(
        "current"
    )

sleY1731URNonRevertiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 11)
)
sleY1731URNonRevertiveChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlNonRevertive"))
)
if mibBuilder.loadTexts:
    sleY1731URNonRevertiveChanged.setStatus(
        "current"
    )

sleY1731URTrustMemberCountChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 12)
)
sleY1731URTrustMemberCountChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTrustMemberCount"))
)
if mibBuilder.loadTexts:
    sleY1731URTrustMemberCountChanged.setStatus(
        "current"
    )

sleY1731URTrustMemberCountCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 13)
)
sleY1731URTrustMemberCountCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URTrustMemberCountCleared.setStatus(
        "current"
    )

sleY1731URWaitToRestoreChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 14)
)
sleY1731URWaitToRestoreChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlWaitToRestore"))
)
if mibBuilder.loadTexts:
    sleY1731URWaitToRestoreChanged.setStatus(
        "current"
    )

sleY1731URWaitToRestoreCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 15)
)
sleY1731URWaitToRestoreCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URWaitToRestoreCleared.setStatus(
        "current"
    )

sleY1731URForceSwitchChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 16)
)
sleY1731URForceSwitchChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlForceSwitch"))
)
if mibBuilder.loadTexts:
    sleY1731URForceSwitchChanged.setStatus(
        "current"
    )

sleY1731URManualSwitchChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 17)
)
sleY1731URManualSwitchChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlManualSwitch"))
)
if mibBuilder.loadTexts:
    sleY1731URManualSwitchChanged.setStatus(
        "current"
    )

sleY1731URSFConditionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 18)
)
sleY1731URSFConditionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"))
)
if mibBuilder.loadTexts:
    sleY1731URSFConditionChanged.setStatus(
        "current"
    )

sleY1731URTrafficVlanChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 19)
)
sleY1731URTrafficVlanChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegName"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTrafficVlan"))
)
if mibBuilder.loadTexts:
    sleY1731URTrafficVlanChanged.setStatus(
        "current"
    )

sleY1731URTrafficVlanCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 15, 3, 20)
)
sleY1731URTrafficVlanCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731URControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlMegIndex"))
)
if mibBuilder.loadTexts:
    sleY1731URTrafficVlanCleared.setStatus(
        "current"
    )

sleY1731LRMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 3, 1)
)
sleY1731LRMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDRmepIdentifier"))
)
if mibBuilder.loadTexts:
    sleY1731LRMepCreated.setStatus(
        "current"
    )

sleY1731LRMEPDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 12, 16, 3, 3)
)
sleY1731LRMEPDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlRmepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMegIndex"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepControlDRmepIdentifier"))
)
if mibBuilder.loadTexts:
    sleY1731LRMEPDeleted.setStatus(
        "current"
    )

sleCfmEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 1)
)
sleCfmEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlEnable"))
)
if mibBuilder.loadTexts:
    sleCfmEnableChanged.setStatus(
        "current"
    )

sleCfmLtrCacheProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 2)
)
sleCfmLtrCacheProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlLtrCacheHoldTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlLtrCacheSize"))
)
if mibBuilder.loadTexts:
    sleCfmLtrCacheProfileChanged.setStatus(
        "current"
    )

sleCfmSnmpServerTrapsChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 3)
)
sleCfmSnmpServerTrapsChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlSnmpServerTraps"))
)
if mibBuilder.loadTexts:
    sleCfmSnmpServerTrapsChanged.setStatus(
        "current"
    )

sleCfmXcheckStartDelayChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 4)
)
sleCfmXcheckStartDelayChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlXcheckStartDelay"))
)
if mibBuilder.loadTexts:
    sleCfmXcheckStartDelayChanged.setStatus(
        "current"
    )

sleCfmMipCcdbDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 5)
)
sleCfmMipCcdbDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"))
)
if mibBuilder.loadTexts:
    sleCfmMipCcdbDestroyed.setStatus(
        "current"
    )

sleCfmLtrCacheDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 6)
)
sleCfmLtrCacheDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"))
)
if mibBuilder.loadTexts:
    sleCfmLtrCacheDestroyed.setStatus(
        "current"
    )

sleCfmTrunkPortCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 7)
)
sleCfmTrunkPortCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkMdName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkMaVid"))
)
if mibBuilder.loadTexts:
    sleCfmTrunkPortCreated.setStatus(
        "current"
    )

sleCfmTrunkPortDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 1, 3, 8)
)
sleCfmTrunkPortDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmBaseControlStatus"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmBaseControlTrunkIndex"))
)
if mibBuilder.loadTexts:
    sleCfmTrunkPortDeleted.setStatus(
        "current"
    )

sleCfmMdCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 1)
)
sleCfmMdCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlLevel"))
)
if mibBuilder.loadTexts:
    sleCfmMdCreated.setStatus(
        "current"
    )

sleCfmMdDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 2)
)
sleCfmMdDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlName"))
)
if mibBuilder.loadTexts:
    sleCfmMdDeleted.setStatus(
        "current"
    )

sleCfmMdMepEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 3)
)
sleCfmMdMepEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlMepEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMdMepEnableChanged.setStatus(
        "current"
    )

sleCfmMdCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 4)
)
sleCfmMdCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMdCcEnableChanged.setStatus(
        "current"
    )

sleCfmMdCcProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 5)
)
sleCfmMdCcProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcLossThreshold"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcHoldTime"))
)
if mibBuilder.loadTexts:
    sleCfmMdCcProfileChanged.setStatus(
        "current"
    )

sleCfmMdFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 6)
)
sleCfmMdFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlFaultClearTime"))
)
if mibBuilder.loadTexts:
    sleCfmMdFaultProfileChanged.setStatus(
        "current"
    )

sleCfmMdXcheckEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 7)
)
sleCfmMdXcheckEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlXcheckEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMdXcheckEnableChanged.setStatus(
        "current"
    )

sleCfmMdErrorDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 8)
)
sleCfmMdErrorDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"))
)
if mibBuilder.loadTexts:
    sleCfmMdErrorDestoryed.setStatus(
        "current"
    )

sleCfmMdRmepDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 2, 3, 9)
)
sleCfmMdRmepDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlIndex"))
)
if mibBuilder.loadTexts:
    sleCfmMdRmepDestoryed.setStatus(
        "current"
    )

sleCfmMaCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 1)
)
sleCfmMaCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlVid"))
)
if mibBuilder.loadTexts:
    sleCfmMaCreated.setStatus(
        "current"
    )

sleCfmMaDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 2)
)
sleCfmMaDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlName"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"))
)
if mibBuilder.loadTexts:
    sleCfmMaDeleted.setStatus(
        "current"
    )

sleCfmMaMepEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 3)
)
sleCfmMaMepEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMepEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMaMepEnableChanged.setStatus(
        "current"
    )

sleCfmMaCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 4)
)
sleCfmMaCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMaCcEnableChanged.setStatus(
        "current"
    )

sleCfmMaCcProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 5)
)
sleCfmMaCcProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcInterval"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlCcLossThreshold"))
)
if mibBuilder.loadTexts:
    sleCfmMaCcProfileChanged.setStatus(
        "current"
    )

sleCfmMaFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 6)
)
sleCfmMaFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlFaultClearTime"))
)
if mibBuilder.loadTexts:
    sleCfmMaFaultProfileChanged.setStatus(
        "current"
    )

sleCfmMaXcheckEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 3, 3, 7)
)
sleCfmMaXcheckEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaControlXcheckEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMaXcheckEnableChanged.setStatus(
        "current"
    )

sleCfmMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 1)
)
sleCfmMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlDirection"))
)
if mibBuilder.loadTexts:
    sleCfmMepCreated.setStatus(
        "current"
    )

sleCfmMepDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 2)
)
sleCfmMepDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"))
)
if mibBuilder.loadTexts:
    sleCfmMepDeleted.setStatus(
        "current"
    )

sleCfmMepEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 3)
)
sleCfmMepEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMepEnableChanged.setStatus(
        "current"
    )

sleCfmMepCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 4)
)
sleCfmMepCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlCcEnable"))
)
if mibBuilder.loadTexts:
    sleCfmMepCcEnableChanged.setStatus(
        "current"
    )

sleCfmMepCcProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 5)
)
sleCfmMepCcProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdControlCcPriority"))
)
if mibBuilder.loadTexts:
    sleCfmMepCcProfileChanged.setStatus(
        "current"
    )

sleCfmMepFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 4, 3, 6)
)
sleCfmMepFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlMaIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultPriority"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultKeepTime"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepControlFaultClearTime"))
)
if mibBuilder.loadTexts:
    sleCfmMepFaultProfileChanged.setStatus(
        "current"
    )

sleCfmMipCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 3, 1)
)
sleCfmMipCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlPort"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlLevel"))
)
if mibBuilder.loadTexts:
    sleCfmMipCreated.setStatus(
        "current"
    )

sleCfmMipDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 5, 3, 2)
)
sleCfmMipDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmMipControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipControlPort"))
)
if mibBuilder.loadTexts:
    sleCfmMipDeleted.setStatus(
        "current"
    )

sleCfmXcheckMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 3, 1)
)
sleCfmXcheckMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMaIndex"))
)
if mibBuilder.loadTexts:
    sleCfmXcheckMepCreated.setStatus(
        "current"
    )

sleCfmXcheckMepDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 13, 6, 3, 2)
)
sleCfmXcheckMepDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMepIdentifier"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMdIndex"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckControlMaIndex"))
)
if mibBuilder.loadTexts:
    sleCfmXcheckMepDeleted.setStatus(
        "current"
    )

sleEMLogDisableStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 1)
)
sleEMLogDisableStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlDisableStatus"))
)
if mibBuilder.loadTexts:
    sleEMLogDisableStatusChanged.setStatus(
        "current"
    )

sleEMLogActionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 2)
)
sleEMLogActionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlAction"))
)
if mibBuilder.loadTexts:
    sleEMLogActionChanged.setStatus(
        "current"
    )

sleEMLogIntervalChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 3)
)
sleEMLogIntervalChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlInterval"))
)
if mibBuilder.loadTexts:
    sleEMLogIntervalChanged.setStatus(
        "current"
    )

sleEMLogNAKLockChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 4)
)
sleEMLogNAKLockChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlNAKLockStatus"))
)
if mibBuilder.loadTexts:
    sleEMLogNAKLockChanged.setStatus(
        "current"
    )

sleEMLogNAKCompensateChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 5)
)
sleEMLogNAKCompensateChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlNAKCompensate"))
)
if mibBuilder.loadTexts:
    sleEMLogNAKCompensateChanged.setStatus(
        "current"
    )

sleEMLogRecoverActionMemLowChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 6)
)
sleEMLogRecoverActionMemLowChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlRecoverActionMemLow"))
)
if mibBuilder.loadTexts:
    sleEMLogRecoverActionMemLowChanged.setStatus(
        "current"
    )

sleEMLogRecoverActionNAKChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 14, 3, 7)
)
sleEMLogRecoverActionNAKChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleEMLogControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogControlRecoverActionNAK"))
)
if mibBuilder.loadTexts:
    sleEMLogRecoverActionNAKChanged.setStatus(
        "current"
    )

sleRapsRingCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 1)
)
sleRapsRingCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlType"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlCtrlVlan"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTrafficVlans"))
)
if mibBuilder.loadTexts:
    sleRapsRingCreated.setStatus(
        "current"
    )

sleRapsRingDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 2)
)
sleRapsRingDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"))
)
if mibBuilder.loadTexts:
    sleRapsRingDeleted.setStatus(
        "current"
    )

sleRapsRingChannelChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 3)
)
sleRapsRingChannelChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlChannel"))
)
if mibBuilder.loadTexts:
    sleRapsRingChannelChanged.setStatus(
        "current"
    )

sleRapsRingEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 4)
)
sleRapsRingEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlEnable"))
)
if mibBuilder.loadTexts:
    sleRapsRingEnableChanged.setStatus(
        "current"
    )

sleRapsRingPortsCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 5)
)
sleRapsRingPortsCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlEastPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWestPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"))
)
if mibBuilder.loadTexts:
    sleRapsRingPortsCreated.setStatus(
        "current"
    )

sleRapsRingPortsDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 6)
)
sleRapsRingPortsDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"))
)
if mibBuilder.loadTexts:
    sleRapsRingPortsDestroyed.setStatus(
        "current"
    )

sleRapsRingRplPortChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 7)
)
sleRapsRingRplPortChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlBridgeRole"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"))
)
if mibBuilder.loadTexts:
    sleRapsRingRplPortChanged.setStatus(
        "current"
    )

sleRapsRingIcPortCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 8)
)
sleRapsRingIcPortCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlIcNode"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"))
)
if mibBuilder.loadTexts:
    sleRapsRingIcPortCreated.setStatus(
        "current"
    )

sleRapsRingIcPortDestroyed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 9)
)
sleRapsRingIcPortDestroyed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlId"))
)
if mibBuilder.loadTexts:
    sleRapsRingIcPortDestroyed.setStatus(
        "current"
    )

sleRapsRingMultipleFailureChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 10)
)
sleRapsRingMultipleFailureChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlMultipleFailure"))
)
if mibBuilder.loadTexts:
    sleRapsRingMultipleFailureChanged.setStatus(
        "current"
    )

sleRapsRingPropagateTcChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 11)
)
sleRapsRingPropagateTcChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlPropagateTc"))
)
if mibBuilder.loadTexts:
    sleRapsRingPropagateTcChanged.setStatus(
        "current"
    )

sleRapsRingNonRevertiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 12)
)
sleRapsRingNonRevertiveChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlNonRevertive"))
)
if mibBuilder.loadTexts:
    sleRapsRingNonRevertiveChanged.setStatus(
        "current"
    )

sleRapsRingForcedSwitchChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 13)
)
sleRapsRingForcedSwitchChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"))
)
if mibBuilder.loadTexts:
    sleRapsRingForcedSwitchChanged.setStatus(
        "current"
    )

sleRapsRingManualSwitchChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 14)
)
sleRapsRingManualSwitchChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlParamPort"))
)
if mibBuilder.loadTexts:
    sleRapsRingManualSwitchChanged.setStatus(
        "current"
    )

sleRapsRingSwitchCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 15)
)
sleRapsRingSwitchCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"))
)
if mibBuilder.loadTexts:
    sleRapsRingSwitchCleared.setStatus(
        "current"
    )

sleRapsRingHoldOffTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 16)
)
sleRapsRingHoldOffTimeChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlHoldOffTime"))
)
if mibBuilder.loadTexts:
    sleRapsRingHoldOffTimeChanged.setStatus(
        "current"
    )

sleRapsRingGuardTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 17)
)
sleRapsRingGuardTimeChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlGuardTime"))
)
if mibBuilder.loadTexts:
    sleRapsRingGuardTimeChanged.setStatus(
        "current"
    )

sleRapsRingWtrTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 18)
)
sleRapsRingWtrTimeChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWaitToRestore"))
)
if mibBuilder.loadTexts:
    sleRapsRingWtrTimeChanged.setStatus(
        "current"
    )

sleRapsRingWtbTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 19)
)
sleRapsRingWtbTimeChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlWaitToBlock"))
)
if mibBuilder.loadTexts:
    sleRapsRingWtbTimeChanged.setStatus(
        "current"
    )

sleRapsRingPassThroughChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 20)
)
sleRapsRingPassThroughChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlPassThrough"))
)
if mibBuilder.loadTexts:
    sleRapsRingPassThroughChanged.setStatus(
        "current"
    )

sleRapsRingVrfTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 15, 3, 21)
)
sleRapsRingVrfTimeChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleRapsRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlInstId"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingControlVerifiedTime"))
)
if mibBuilder.loadTexts:
    sleRapsRingVrfTimeChanged.setStatus(
        "current"
    )

setFaultMonitorGlobalInspectIntervalChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 3, 1)
)
setFaultMonitorGlobalInspectIntervalChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlInspectInterval"))
)
if mibBuilder.loadTexts:
    setFaultMonitorGlobalInspectIntervalChanged.setStatus(
        "current"
    )

setFaultMonitorGlobalStartupThresholdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 3, 2)
)
setFaultMonitorGlobalStartupThresholdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlStartupThreshold"))
)
if mibBuilder.loadTexts:
    setFaultMonitorGlobalStartupThresholdChanged.setStatus(
        "current"
    )

setFaultMonitorGlobalNoKeepaliveActionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 1, 3, 3)
)
setFaultMonitorGlobalNoKeepaliveActionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorGlobalControlNoKeepalive"))
)
if mibBuilder.loadTexts:
    setFaultMonitorGlobalNoKeepaliveActionChanged.setStatus(
        "current"
    )

setFaultMonitorDaemonAdminStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 4, 1)
)
setFaultMonitorDaemonAdminStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlAdminStatus"))
)
if mibBuilder.loadTexts:
    setFaultMonitorDaemonAdminStatusChanged.setStatus(
        "current"
    )

setFaultMonitorDaemonFaultActionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 4, 2)
)
setFaultMonitorDaemonFaultActionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlCrashAction"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeoutAction"))
)
if mibBuilder.loadTexts:
    setFaultMonitorDaemonFaultActionChanged.setStatus(
        "current"
    )

setFaultMonitorDaemonThresholdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 4, 3)
)
setFaultMonitorDaemonThresholdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlThreshold"))
)
if mibBuilder.loadTexts:
    setFaultMonitorDaemonThresholdChanged.setStatus(
        "current"
    )

setFaultMonitorDaemonWatchdogchanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 2, 4, 4)
)
setFaultMonitorDaemonWatchdogchanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlWatchdogAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorDaemonControlWatchdogThreshold"))
)
if mibBuilder.loadTexts:
    setFaultMonitorDaemonWatchdogchanged.setStatus(
        "current"
    )

sleFaultMonitor2PointsLinearAdminStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 3, 1)
)
sleFaultMonitor2PointsLinearAdminStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlAdminStatus"))
)
if mibBuilder.loadTexts:
    sleFaultMonitor2PointsLinearAdminStatusChanged.setStatus(
        "current"
    )

sleFaultMonitor2PointsLinearIntervalChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 3, 2)
)
sleFaultMonitor2PointsLinearIntervalChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PonitsLinearControlInterval"))
)
if mibBuilder.loadTexts:
    sleFaultMonitor2PointsLinearIntervalChanged.setStatus(
        "current"
    )

sleFaultMonitor2PointsLinearThresholdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 3, 3, 3)
)
sleFaultMonitor2PointsLinearThresholdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2pointsLinearControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PointsLinearControlThreshold"))
)
if mibBuilder.loadTexts:
    sleFaultMonitor2PointsLinearThresholdChanged.setStatus(
        "current"
    )

setRHMStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4, 1)
)
setRHMStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlAdminStatus"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlActionType"))
)
if mibBuilder.loadTexts:
    setRHMStatusChanged.setStatus(
        "current"
    )

setRHMActionThresholdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4, 2)
)
setRHMActionThresholdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlActionThreshold"))
)
if mibBuilder.loadTexts:
    setRHMActionThresholdChanged.setStatus(
        "current"
    )

setRHMRebootThresholdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4, 3)
)
setRHMRebootThresholdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRebootThreshold"))
)
if mibBuilder.loadTexts:
    setRHMRebootThresholdChanged.setStatus(
        "current"
    )

setRHMHostAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4, 4)
)
setRHMHostAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRebootThreshold"))
)
if mibBuilder.loadTexts:
    setRHMHostAdded.setStatus(
        "current"
    )

setRHMHostCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 16, 4, 4, 5)
)
setRHMHostCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitorRHMControlRebootThreshold"))
)
if mibBuilder.loadTexts:
    setRHMHostCleared.setStatus(
        "current"
    )

sle2EthCfmEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 3, 1)
)
sle2EthCfmEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmEnable"))
)
if mibBuilder.loadTexts:
    sle2EthCfmEnableChanged.setStatus(
        "current"
    )

sle2EthCfmLmmFrameCountSimulatorChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 1, 3, 2)
)
sle2EthCfmLmmFrameCountSimulatorChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmFrameCountSimStatus"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLmmFrameCountSimulatorChanged.setStatus(
        "current"
    )

setCfmBridgeProfile = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3, 1)
)
setCfmBridgeProfile.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeDefaultMepId"))
)
if mibBuilder.loadTexts:
    setCfmBridgeProfile.setStatus(
        "current"
    )

setCfmBridgeLtrCacheEnable = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3, 2)
)
setCfmBridgeLtrCacheEnable.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeLtrCacheSize"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeLtrCacheEnable"))
)
if mibBuilder.loadTexts:
    setCfmBridgeLtrCacheEnable.setStatus(
        "current"
    )

clearCfmBridgeLtrCache = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3, 3)
)
clearCfmBridgeLtrCache.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"))
)
if mibBuilder.loadTexts:
    clearCfmBridgeLtrCache.setStatus(
        "current"
    )

setCfmBridgeAutomatic = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3, 4)
)
setCfmBridgeAutomatic.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeAutomatic"))
)
if mibBuilder.loadTexts:
    setCfmBridgeAutomatic.setStatus(
        "current"
    )

setCfmBridgeConfigDefaultMdLevel = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 2, 3, 5)
)
setCfmBridgeConfigDefaultMdLevel.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeConfigDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeConfigDefaultMdMipCreation"))
)
if mibBuilder.loadTexts:
    setCfmBridgeConfigDefaultMdLevel.setStatus(
        "current"
    )

addCfmVlanConfVid = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 3, 1)
)
addCfmVlanConfVid.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigPrimaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigSecondaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigSecondaryBridgeId"))
)
if mibBuilder.loadTexts:
    addCfmVlanConfVid.setStatus(
        "current"
    )

delCfmVlanConfVid = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 1, 3, 2)
)
delCfmVlanConfVid.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlPrimaryBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlPrimaryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlSecondaryBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanConfigControlSecondaryVid"))
)
if mibBuilder.loadTexts:
    delCfmVlanConfVid.setStatus(
        "current"
    )

sle2EthCfmVlanPriorityChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 3, 2, 3, 1)
)
sle2EthCfmVlanPriorityChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanInfoPriority"))
)
if mibBuilder.loadTexts:
    sle2EthCfmVlanPriorityChanged.setStatus(
        "current"
    )

sle2EthCfmDefMdLevelEntryChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 3, 1)
)
sle2EthCfmDefMdLevelEntryChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryChanged.setStatus(
        "current"
    )

sle2EthCfmDefMdLevelEntryCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 4, 3, 2)
)
sle2EthCfmDefMdLevelEntryCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryControlMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmDefMdLevelEntryCleared.setStatus(
        "current"
    )

sle2EthCfmMdCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 3, 1)
)
sle2EthCfmMdCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMdCreated.setStatus(
        "current"
    )

sle2EthCfmMdDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 5, 3, 2)
)
sle2EthCfmMdDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdControlMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMdDestoryed.setStatus(
        "current"
    )

sle2EthCfmMaCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 3, 1)
)
sle2EthCfmMaCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMaCreated.setStatus(
        "current"
    )

sle2EthCfmMaDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 3, 2)
)
sle2EthCfmMaDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlMipCreation"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMaDestoryed.setStatus(
        "current"
    )

sle2EthCfmCcIntervalChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 3, 3)
)
sle2EthCfmCcIntervalChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaCcInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmCcIntervalChanged.setStatus(
        "current"
    )

sle2EthCfmElmiChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 6, 3, 4)
)
sle2EthCfmElmiChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaElmi"))
)
if mibBuilder.loadTexts:
    sle2EthCfmElmiChanged.setStatus(
        "current"
    )

sle2EthCfmMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 1)
)
sle2EthCfmMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoLocalVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDirection"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoActive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoUNI"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepCreated.setStatus(
        "current"
    )

sle2EthCfmMepDestory = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 2)
)
sle2EthCfmMepDestory.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMepDirection"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLocalVid"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepDestory.setStatus(
        "current"
    )

sle2EthCfmCcEnableChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 3)
)
sle2EthCfmCcEnableChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoCcmRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmCcEnableChanged.setStatus(
        "current"
    )

sle2EthCfmServiceChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 4)
)
sle2EthCfmServiceChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoService"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoLckLevel"))
)
if mibBuilder.loadTexts:
    sle2EthCfmServiceChanged.setStatus(
        "current"
    )

sle2EthCfmDualEndLmmChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 5)
)
sle2EthCfmDualEndLmmChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoIfindex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDlmState"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoDlmRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmDualEndLmmChanged.setStatus(
        "current"
    )

sle2EthCfmTransmitUnicastTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 6)
)
sle2EthCfmTransmitUnicastTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstPattern"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstRecursive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstTxInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLckRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitUnicastTstFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitMulticastTstFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 7)
)
sle2EthCfmTransmitMulticastTstFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstPattern"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstRecursive"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstTxInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTstLckInterval"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlLckRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitMulticastTstFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitUnicastLmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 8)
)
sle2EthCfmTransmitUnicastLmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitUnicastLmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitMulticastLmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 9)
)
sle2EthCfmTransmitMulticastLmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitMulticastLmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitUnicastDmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 10)
)
sle2EthCfmTransmitUnicastDmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTransMode"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitUnicastDmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitMuliticastDmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 11)
)
sle2EthCfmTransmitMuliticastDmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTransMode"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitMuliticastDmFinished.setStatus(
        "current"
    )

sle2EthCfmReceive1DmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 12)
)
sle2EthCfmReceive1DmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"))
)
if mibBuilder.loadTexts:
    sle2EthCfmReceive1DmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitTmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 13)
)
sle2EthCfmTransmitTmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitTmFinished.setStatus(
        "current"
    )

sle2EthCfmReceiveTmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 14)
)
sle2EthCfmReceiveTmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlDuration"))
)
if mibBuilder.loadTexts:
    sle2EthCfmReceiveTmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitExmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 15)
)
sle2EthCfmTransmitExmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitExmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitVsmFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 16)
)
sle2EthCfmTransmitVsmFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitVsmFinished.setStatus(
        "current"
    )

sle2EthCfmTransmitMccFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 1, 3, 17)
)
sle2EthCfmTransmitMccFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoControlRmepId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmTransmitMccFinished.setStatus(
        "current"
    )

sle2EthCfmMepFaultProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 3, 1)
)
sle2EthCfmMepFaultProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrCcmLtmPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrLowPrDef"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrFngAlarmTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrResetFngTime"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrActive"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepFaultProfileChanged.setStatus(
        "current"
    )

sle2EthCfmMepTxLtmProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 3, 2)
)
sle2EthCfmMepTxLtmProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrCcmLtmFlag"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTargetIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmTtl"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLtmEgressId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepTxLtmProfileChanged.setStatus(
        "current"
    )

sle2EthCfmMepTxLbmProfileChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 3, 3)
)
sle2EthCfmMepTxLbmProfileChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDestIsMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmMessages"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmDataTlv"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmVlanPriority"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmVlanDropEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrTxLbmTimeOut"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrLbrTimeOut"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepTxLbmProfileChanged.setStatus(
        "current"
    )

sle2EthCfmMepAuttributesAllCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 7, 2, 3, 4)
)
sle2EthCfmMepAuttributesAllCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAttrControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"))
)
if mibBuilder.loadTexts:
    sle2EthCfmMepAuttributesAllCleared.setStatus(
        "current"
    )

sle2EthCfmXcheckMepCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 3, 1)
)
sle2EthCfmXcheckMepCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckRmepMac"))
)
if mibBuilder.loadTexts:
    sle2EthCfmXcheckMepCreated.setStatus(
        "current"
    )

sle2EthCfmXcheckMepDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 8, 3, 2)
)
sle2EthCfmXcheckMepDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckControlRmepMac"))
)
if mibBuilder.loadTexts:
    sle2EthCfmXcheckMepDestoryed.setStatus(
        "current"
    )

sle2EthCfmLbTransmitMulticastFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 3, 1)
)
sle2EthCfmLbTransmitMulticastFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvData"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvTest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRecursive"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLbTransmitMulticastFinished.setStatus(
        "current"
    )

sle2EthCfmLbTransmitUnicastFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 3, 2)
)
sle2EthCfmLbTransmitUnicastFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRmepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvData"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvTest"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLbTransmitUnicastFinished.setStatus(
        "current"
    )

sle2EthCfmLbTransmitMacFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 3, 3)
)
sle2EthCfmLbTransmitMacFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlMdLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRmepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvData"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTlvTest"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLbTransmitMacFinished.setStatus(
        "current"
    )

sle2EthCfmLbrFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 9, 3, 4)
)
sle2EthCfmLbrFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbReceivedCount"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbRemoteMacAddress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbTxMessages"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbResponseCount"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLbrFinished.setStatus(
        "current"
    )

sle2EthCfmLtTransmitDomainFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 3, 1)
)
sle2EthCfmLtTransmitDomainFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRmepMac"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLtTransmitDomainFinished.setStatus(
        "current"
    )

sle2EthCfmLtTransmitLevelFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 3, 2)
)
sle2EthCfmLtTransmitLevelFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRmepMac"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLtTransmitLevelFinished.setStatus(
        "current"
    )

sle2EthCfmLtrFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 10, 3, 3)
)
sle2EthCfmLtrFinished.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrMepMac"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrHops"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrRelay"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrIngressEgress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrIngress"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrEgress"))
)
if mibBuilder.loadTexts:
    sle2EthCfmLtrFinished.setStatus(
        "current"
    )

sle2EthCfmAisInfoStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 3, 1)
)
sle2EthCfmAisInfoStatusChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoStatus"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoDefectConditions"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoLevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoFrameType"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoRmepMac"))
)
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoStatusChanged.setStatus(
        "current"
    )

sle2EthCfmAisInfoIntervalChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 1, 3, 2)
)
sle2EthCfmAisInfoIntervalChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepInfoId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmAisInfoIntervalChanged.setStatus(
        "current"
    )

sle2EthCfmSrvAisChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 11, 2, 3, 1)
)
sle2EthCfmSrvAisChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisIfIndex"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisEnable"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAislevel"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisInterval"))
)
if mibBuilder.loadTexts:
    sle2EthCfmSrvAisChanged.setStatus(
        "current"
    )

sle2EthCfmRmepDomainCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 3, 1)
)
sle2EthCfmRmepDomainCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlMdName"))
)
if mibBuilder.loadTexts:
    sle2EthCfmRmepDomainCleared.setStatus(
        "current"
    )

sle2EthCfmRmepLevelCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 13, 3, 2)
)
sle2EthCfmRmepLevelCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepControlMdLevel"))
)
if mibBuilder.loadTexts:
    sle2EthCfmRmepLevelCleared.setStatus(
        "current"
    )

sle2EthCfmErrorDomainCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 3, 1)
)
sle2EthCfmErrorDomainCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdName"))
)
if mibBuilder.loadTexts:
    sle2EthCfmErrorDomainCleared.setStatus(
        "current"
    )

sle2EthCfmErrorLevelCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 17, 17, 3, 2)
)
sle2EthCfmErrorLevelCleared.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorMdLevel"))
)
if mibBuilder.loadTexts:
    sle2EthCfmErrorLevelCleared.setStatus(
        "current"
    )

sle2ErpsPhyRingCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 1)
)
sle2ErpsPhyRingCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingCreated.setStatus(
        "current"
    )

sle2ErpsPhyRingDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 2)
)
sle2ErpsPhyRingDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingDestoryed.setStatus(
        "current"
    )

sle2ErpsPhyRingEastPortAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 3)
)
sle2ErpsPhyRingEastPortAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastPort"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastPortAdded.setStatus(
        "current"
    )

sle2ErpsPhyRingEastPortDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 4)
)
sle2ErpsPhyRingEastPortDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastPortDeleted.setStatus(
        "current"
    )

sle2ErpsPhyRingWestPortAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 5)
)
sle2ErpsPhyRingWestPortAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestPort"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestPortAdded.setStatus(
        "current"
    )

sle2ErpsPhyRingWestPortDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 6)
)
sle2ErpsPhyRingWestPortDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestPortDeleted.setStatus(
        "current"
    )

sle2ErpsPhyRingEastMepIdAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 7)
)
sle2ErpsPhyRingEastMepIdAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastRmepId"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastMepIdAdded.setStatus(
        "current"
    )

sle2ErpsPhyRingEastMepIdDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 8)
)
sle2ErpsPhyRingEastMepIdDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingEastMepIdDeleted.setStatus(
        "current"
    )

sle2ErpsPhyRingWestMepIdAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 9)
)
sle2ErpsPhyRingWestMepIdAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestMepId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestRmepId"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestMepIdAdded.setStatus(
        "current"
    )

sle2ErpsPhyRingWestMepIdDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 1, 3, 10)
)
sle2ErpsPhyRingWestMepIdDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingControName"))
)
if mibBuilder.loadTexts:
    sle2ErpsPhyRingWestMepIdDeleted.setStatus(
        "current"
    )

sle2ErpsProfileCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 3, 1)
)
sle2ErpsProfileCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileName"))
)
if mibBuilder.loadTexts:
    sle2ErpsProfileCreated.setStatus(
        "current"
    )

sle2ErpsProfileDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 3, 2)
)
sle2ErpsProfileDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsProfileDestoryed.setStatus(
        "current"
    )

sle2ErpsProfileTimerChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 3, 3)
)
sle2ErpsProfileTimerChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileHoldOffTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileGuardTime"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileWaitToRestore"))
)
if mibBuilder.loadTexts:
    sle2ErpsProfileTimerChanged.setStatus(
        "current"
    )

sle2ErpsProfileNoneRevertiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 2, 3, 4)
)
sle2ErpsProfileNoneRevertiveChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileNonRevertive"))
)
if mibBuilder.loadTexts:
    sle2ErpsProfileNoneRevertiveChanged.setStatus(
        "current"
    )

sle2ErpsInstCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 1)
)
sle2ErpsInstCreated.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstCreated.setStatus(
        "current"
    )

sle2ErpsInstDestoryed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 2)
)
sle2ErpsInstDestoryed.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstDestoryed.setStatus(
        "current"
    )

sle2ErpsInstPhyRingAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 3)
)
sle2ErpsInstPhyRingAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPhyRingName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstPhyRingAdded.setStatus(
        "current"
    )

sle2ErpsInstPhyRingDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 4)
)
sle2ErpsInstPhyRingDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstPhyRingDeleted.setStatus(
        "current"
    )

sle2ErpsInstProfileAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 5)
)
sle2ErpsInstProfileAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstProfileName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstProfileAdded.setStatus(
        "current"
    )

sle2ErpsInstProfileDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 6)
)
sle2ErpsInstProfileDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstProfileDeleted.setStatus(
        "current"
    )

sle2ErpsInstRingIdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 7)
)
sle2ErpsInstRingIdChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRingId"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstRingIdChanged.setStatus(
        "current"
    )

sle2ErpsInstLevelChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 8)
)
sle2ErpsInstLevelChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstLevel"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstLevelChanged.setStatus(
        "current"
    )

sle2ErpsInstRplRoleChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 9)
)
sle2ErpsInstRplRoleChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRplRole"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRplRolePort"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstRplRoleChanged.setStatus(
        "current"
    )

sle2ErpsInstSubRingAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 10)
)
sle2ErpsInstSubRingAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstSubRingBlock"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstSubRingAdded.setStatus(
        "current"
    )

sle2ErpsInstSubRingDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 11)
)
sle2ErpsInstSubRingDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstSubRingDeleted.setStatus(
        "current"
    )

sle2ErpsInstCtrlVlanAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 12)
)
sle2ErpsInstCtrlVlanAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstCtrlVlan"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstCtrlVlanAdded.setStatus(
        "current"
    )

sle2ErpsInstCtrlVlanDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 13)
)
sle2ErpsInstCtrlVlanDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlCtrlVlan"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstCtrlVlanDeleted.setStatus(
        "current"
    )

sle2ErpsInstDataTrafficVlanAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 14)
)
sle2ErpsInstDataTrafficVlanAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstTafficVlans"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstDataTrafficVlanAdded.setStatus(
        "current"
    )

sle2ErpsInstDataTrafficVlanDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 15)
)
sle2ErpsInstDataTrafficVlanDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTafficVlans"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstDataTrafficVlanDeleted.setStatus(
        "current"
    )

sle2ErpsInstVitrualChannelAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 16)
)
sle2ErpsInstVitrualChannelAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVChannelVid"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVChannelAttachInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstChannelMode"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstVitrualChannelAdded.setStatus(
        "current"
    )

sle2ErpsInstVitrualChannelDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 17)
)
sle2ErpsInstVitrualChannelDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstVitrualChannelDeleted.setStatus(
        "current"
    )

sle2ErpsInstNoneVirtualChannelAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 18)
)
sle2ErpsInstNoneVirtualChannelAdded.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstChannelMode"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstNoneVirtualChannelAdded.setStatus(
        "current"
    )

sle2ErpsInstNoneVirtualChannelDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 19)
)
sle2ErpsInstNoneVirtualChannelDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstNoneVirtualChannelDeleted.setStatus(
        "current"
    )

sle2ErpsInstForcedSwichChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 20)
)
sle2ErpsInstForcedSwichChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlForcedSwitch"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstForcedSwichChanged.setStatus(
        "current"
    )

sle2ErpsInstManualSwichChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 21)
)
sle2ErpsInstManualSwichChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlManualSwitch"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstManualSwichChanged.setStatus(
        "current"
    )

sle2ErpsInstClearChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 22)
)
sle2ErpsInstClearChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstClearChanged.setStatus(
        "current"
    )

sle2ErpsInstPropagateTcChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 23)
)
sle2ErpsInstPropagateTcChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPropagateTc"))
)
if mibBuilder.loadTexts:
    sle2ErpsInstPropagateTcChanged.setStatus(
        "current"
    )

sle2ErpInstVersionChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 24)
)
sle2ErpInstVersionChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstEastVersion"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstWestVersion"))
)
if mibBuilder.loadTexts:
    sle2ErpInstVersionChanged.setStatus(
        "current"
    )

sle2ErpInstActiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 25)
)
sle2ErpInstActiveChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstActive"))
)
if mibBuilder.loadTexts:
    sle2ErpInstActiveChanged.setStatus(
        "current"
    )

sle2ErpInstDataTrafficInheritanceInstNameChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 26)
)
sle2ErpInstDataTrafficInheritanceInstNameChanged.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDataTrafficInheritanceInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"))
)
if mibBuilder.loadTexts:
    sle2ErpInstDataTrafficInheritanceInstNameChanged.setStatus(
        "current"
    )

sle2ErpInstDataTrafficInheritanceInstNameDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 18, 3, 3, 27)
)
sle2ErpInstDataTrafficInheritanceInstNameDeleted.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlRequest"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlReqResult"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDataTrafficInheritanceInstName"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstControlTimeStamp"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstBridgeId"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstName"))
)
if mibBuilder.loadTexts:
    sle2ErpInstDataTrafficInheritanceInstNameDeleted.setStatus(
        "current"
    )


# Notifications groups

sleFaultMgmtNotificationGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6296, 101, 4, 20)
)
sleFaultMgmtNotificationGroup.setObjects(
      *(("SLE-FAULTMGMT-MIB", "sleAlarmDefaultSeverityChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmDefaultCriteriaChanged"),
        ("SLE-FAULTMGMT-MIB", "sleNotificationActivityChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeveriityCreated"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeveriityDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmSeverityChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportNotified"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmHistoryCleared"),
        ("SLE-FAULTMGMT-MIB", "sleEfmOamPortProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEfmOamPortRemLoopback"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaSystemProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAlarmProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaElectricalInterfaceChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaGeneralProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaAutonegProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAdvaOpticalAlarmChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDOffChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDLevelChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDCleared"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmLEDBlockChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731EnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrCacheProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731SnmpProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731DefaultMegProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731PduToCfmChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731DedicatedVlanChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCcdbDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LtrCacheDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegMepEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegCcProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegXcheckEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisTransmitEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegAisProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckTransmitEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegLckProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegOutOfServiceChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsRingportsChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsRplPortChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsRplOwnerChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsTimerChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRemoteMepDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegErrorDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepAisEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepAisTransmitEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLckEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepLckTransmitEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepOutOfServiceChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepDlmEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitLbmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitLtmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitTstLbmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitTmLbmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepReceiveTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitTmTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepReceiveTmTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitLmmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmit1dmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepReceive1dmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepTransmitDmmFinished"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MipDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731XcheckMepDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CcMacDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731AisMacDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LckMacDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepCreationChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TrunkOamStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RmepDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsNonRevertiveChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsForcedSwitchEastChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegRapsForcedSwitchWestChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URDedicatedVlanChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731UREnableStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URCCPrimaryMepIdChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URCCPrimaryMepIdCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URCCSecondaryMepIdChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URCCSecondaryMepIdCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlVlanChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNodeConfChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNodeConfCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URNonRevertiveChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrustMemberCountChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrustMemberCountCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URWaitToRestoreChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URWaitToRestoreCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URControlVlanCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URForceSwitchChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URManualSwitchChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731CCIgnoreDefectChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731RapsFloodinBlockChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogDisableStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogActionChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogIntervalChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrCacheProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmSnmpServerTrapsChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckStartDelayChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCcdbDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleCfmLtrCacheDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleCfmTrunkPortCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmTrunkPortDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdMepEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdCcProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdXcheckEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdErrorDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMdRmepDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaMepEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaCcProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMaXcheckEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepCcProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMepFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmMipDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleCfmXcheckMepDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingCreated"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPortsCreated"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPortsDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingRplPortChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingMultipleFailureChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPropagateTcChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingNonRevertiveChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingForcedSwitchChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingManualSwitchChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingSwitchCleared"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingHoldOffTimeChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingGuardTimeChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWtrTimeChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingWtbTimeChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731TlvPermissionChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepPmEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sleY1731LRMEPDeleted"),
        ("SLE-FAULTMGMT-MIB", "setAdvaOamProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportCleared"),
        ("SLE-FAULTMGMT-MIB", "sleEfmOamPortLinkMonitorChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingIcPortCreated"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingIcPortDestroyed"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrafficVlanChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URTrafficVlanCleared"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogNAKLockChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogNAKCompensateChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogRecoverActionMemLowChanged"),
        ("SLE-FAULTMGMT-MIB", "sleEMLogRecoverActionNAKChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorGlobalInspectIntervalChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorGlobalStartupThresholdChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorGlobalNoKeepaliveActionChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorDaemonAdminStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorDaemonFaultActionChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorDaemonThresholdChanged"),
        ("SLE-FAULTMGMT-MIB", "setFaultMonitorDaemonWatchdogchanged"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PointsLinearAdminStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PointsLinearIntervalChanged"),
        ("SLE-FAULTMGMT-MIB", "sleFaultMonitor2PointsLinearThresholdChanged"),
        ("SLE-FAULTMGMT-MIB", "setRHMStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "setRHMActionThresholdChanged"),
        ("SLE-FAULTMGMT-MIB", "setRHMRebootThresholdChanged"),
        ("SLE-FAULTMGMT-MIB", "setRHMHostAdded"),
        ("SLE-FAULTMGMT-MIB", "setRHMHostCleared"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegMdAdded"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MegMdDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleAlarmReportDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLmmFrameCountSimulatorChanged"),
        ("SLE-FAULTMGMT-MIB", "setCfmBridgeProfile"),
        ("SLE-FAULTMGMT-MIB", "setCfmBridgeLtrCacheEnable"),
        ("SLE-FAULTMGMT-MIB", "clearCfmBridgeLtrCache"),
        ("SLE-FAULTMGMT-MIB", "setCfmBridgeAutomatic"),
        ("SLE-FAULTMGMT-MIB", "setCfmBridgeConfigDefaultMdLevel"),
        ("SLE-FAULTMGMT-MIB", "addCfmVlanConfVid"),
        ("SLE-FAULTMGMT-MIB", "delCfmVlanConfVid"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmVlanPriorityChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDefMdLevelEntryCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMdDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMaDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmCcIntervalChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmElmiChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepDestory"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmCcEnableChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmServiceChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitUnicastTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitMulticastTstFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitExmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitVsmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitMccFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepFaultProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepTxLtmProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepTxLbmProfileChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmMepAuttributesAllCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckMepCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmXcheckMepDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbTransmitMulticastFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbTransmitUnicastFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbTransmitMacFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLbrFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtTransmitDomainFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtTransmitLevelFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmLtrFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoStatusChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmAisInfoIntervalChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmSrvAisChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepDomainCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmRmepLevelCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorDomainCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmErrorLevelCleared"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastPortAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastPortDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestPortAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestPortDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileTimerChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsProfileNoneRevertiveChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstCreated"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDestoryed"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRingIdChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstLevelChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstRplRoleChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstSubRingAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstSubRingDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstCtrlVlanAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstCtrlVlanDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDataTrafficVlanAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstDataTrafficVlanDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstForcedSwichChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstManualSwichChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstClearChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPropagateTcChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpInstVersionChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpInstDataTrafficInheritanceInstNameChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpInstDataTrafficInheritanceInstNameDeleted"),
        ("SLE-FAULTMGMT-MIB", "sleY1731URSFConditionChanged"),
        ("SLE-FAULTMGMT-MIB", "sleY1731MepRllcfChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingChannelChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingPassThroughChanged"),
        ("SLE-FAULTMGMT-MIB", "sleRapsRingVrfTimeChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmDualEndLmmChanged"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitUnicastLmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitMulticastLmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitUnicastDmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitMuliticastDmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmReceive1DmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmTransmitTmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2EthCfmReceiveTmFinished"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastMepIdAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingEastMepIdDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestMepIdAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsPhyRingWestMepIdDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPhyRingAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstPhyRingDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstProfileAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstProfileDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVitrualChannelAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstVitrualChannelDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstNoneVirtualChannelAdded"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpsInstNoneVirtualChannelDeleted"),
        ("SLE-FAULTMGMT-MIB", "sle2ErpInstActiveChanged"))
)
if mibBuilder.loadTexts:
    sleFaultMgmtNotificationGroup.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "SLE-FAULTMGMT-MIB",
    **{"SpecificNum": SpecificNum,
       "sleFaultMgmt": sleFaultMgmt,
       "sleFaultMgmtBase": sleFaultMgmtBase,
       "sleFaultMgmtBaseGroup": sleFaultMgmtBaseGroup,
       "sleFaultDefaultSeverity": sleFaultDefaultSeverity,
       "sleFaultCriteriaSeverity": sleFaultCriteriaSeverity,
       "sleFaultNotifiyActivity": sleFaultNotifiyActivity,
       "sleFaultNextSeqNum": sleFaultNextSeqNum,
       "sleFaultMgmtBaseControl": sleFaultMgmtBaseControl,
       "sleFaultControlRequest": sleFaultControlRequest,
       "sleFaultControlStatus": sleFaultControlStatus,
       "sleFaultControlTimer": sleFaultControlTimer,
       "sleFaultControlTimeStamp": sleFaultControlTimeStamp,
       "sleFaultControlReqResult": sleFaultControlReqResult,
       "sleFaultControlDefaultSeverity": sleFaultControlDefaultSeverity,
       "sleFaultControlCriteriaSeverity": sleFaultControlCriteriaSeverity,
       "sleFaultControlNotifiyActivity": sleFaultControlNotifiyActivity,
       "sleFaultMgmtBaseNotification": sleFaultMgmtBaseNotification,
       "sleAlarmDefaultSeverityChanged": sleAlarmDefaultSeverityChanged,
       "sleAlarmDefaultCriteriaChanged": sleAlarmDefaultCriteriaChanged,
       "sleNotificationActivityChanged": sleNotificationActivityChanged,
       "sleAlarmSeverity": sleAlarmSeverity,
       "sleAlarmSeverityTable": sleAlarmSeverityTable,
       "sleAlarmSeverityEntry": sleAlarmSeverityEntry,
       "sleAlarmSeverityIndex": sleAlarmSeverityIndex,
       "sleAlarmSeverityValue": sleAlarmSeverityValue,
       "sleAlarmSeverityControl": sleAlarmSeverityControl,
       "sleAlarmSeverityControlRequest": sleAlarmSeverityControlRequest,
       "sleAlarmSeverityControlStatus": sleAlarmSeverityControlStatus,
       "sleAlarmSeverityControlTimer": sleAlarmSeverityControlTimer,
       "sleAlarmSeverityControlTimeStamp": sleAlarmSeverityControlTimeStamp,
       "sleAlarmSeverityControlReqResult": sleAlarmSeverityControlReqResult,
       "sleAlarmSeverityControlIndex": sleAlarmSeverityControlIndex,
       "sleAlarmSeverityControlValue": sleAlarmSeverityControlValue,
       "sleAlarmSeverityNotification": sleAlarmSeverityNotification,
       "sleAlarmSeveriityCreated": sleAlarmSeveriityCreated,
       "sleAlarmSeveriityDestroyed": sleAlarmSeveriityDestroyed,
       "sleAlarmSeverityChanged": sleAlarmSeverityChanged,
       "sleAlarmReport": sleAlarmReport,
       "sleAlarmReportTable": sleAlarmReportTable,
       "sleAlarmReportEntry": sleAlarmReportEntry,
       "sleAlarmSpecificCode": sleAlarmSpecificCode,
       "sleAlarmReportingSourceType": sleAlarmReportingSourceType,
       "sleAlarmReportingSource": sleAlarmReportingSource,
       "sleAlarmSpecificSeverity": sleAlarmSpecificSeverity,
       "sleAlarmSpecificProblem": sleAlarmSpecificProblem,
       "sleAlarmSpecificProblemText": sleAlarmSpecificProblemText,
       "sleAlarmTimeAndDate": sleAlarmTimeAndDate,
       "sleAlarmSpecificSeqNum": sleAlarmSpecificSeqNum,
       "sleAlarmReportPairType": sleAlarmReportPairType,
       "sleAlarmReportNotification": sleAlarmReportNotification,
       "sleAlarmReportNotified": sleAlarmReportNotified,
       "sleAlarmReportControl": sleAlarmReportControl,
       "sleAlarmReportControlRequest": sleAlarmReportControlRequest,
       "sleAlarmReportControlStatus": sleAlarmReportControlStatus,
       "sleAlarmReportControlTimer": sleAlarmReportControlTimer,
       "sleAlarmReportControlTimeStamp": sleAlarmReportControlTimeStamp,
       "sleAlarmReportControlReqResult": sleAlarmReportControlReqResult,
       "sleAlarmReportControlSpecificCode": sleAlarmReportControlSpecificCode,
       "sleAlarmReportControlSourceType": sleAlarmReportControlSourceType,
       "sleAlarmReportControlSource": sleAlarmReportControlSource,
       "sleAlarmReportNotifications": sleAlarmReportNotifications,
       "sleAlarmReportCleared": sleAlarmReportCleared,
       "sleAlarmReportDeleted": sleAlarmReportDeleted,
       "sleAlarmHistory": sleAlarmHistory,
       "sleAlarmHistoryTable": sleAlarmHistoryTable,
       "sleAlarmHistoryEntry": sleAlarmHistoryEntry,
       "sleAlarmHistoryIndex": sleAlarmHistoryIndex,
       "sleAlarmHistorySpecific": sleAlarmHistorySpecific,
       "sleAlarmHistorySeverity": sleAlarmHistorySeverity,
       "sleAlarmHistoryText": sleAlarmHistoryText,
       "sleAlarmHistoryTime": sleAlarmHistoryTime,
       "sleAlarmHistorySeqNum": sleAlarmHistorySeqNum,
       "sleAlarmHistoryPairType": sleAlarmHistoryPairType,
       "sleAlarmHistoryControl": sleAlarmHistoryControl,
       "sleAlarmHistoryControlRequest": sleAlarmHistoryControlRequest,
       "sleAlarmHistoryControlStatus": sleAlarmHistoryControlStatus,
       "sleAlarmHistoryControlTimer": sleAlarmHistoryControlTimer,
       "sleAlarmHistoryControlTimeStamp": sleAlarmHistoryControlTimeStamp,
       "sleAlarmHistoryControlReqResult": sleAlarmHistoryControlReqResult,
       "sleAlarmHistoryNotification": sleAlarmHistoryNotification,
       "sleAlarmHistoryCleared": sleAlarmHistoryCleared,
       "sleEfmOam": sleEfmOam,
       "sleEfmOamTable": sleEfmOamTable,
       "sleEfmOamEntry": sleEfmOamEntry,
       "sleOamPortIndex": sleOamPortIndex,
       "sleOamMuxAction": sleOamMuxAction,
       "sleOamParAction": sleOamParAction,
       "sleOamAdminState": sleOamAdminState,
       "sleOamMode": sleOamMode,
       "sleOamUnidirectionMode": sleOamUnidirectionMode,
       "sleOamFunctionsSupported": sleOamFunctionsSupported,
       "sleOamPeerStatus": sleOamPeerStatus,
       "sleOamPeerMacAddress": sleOamPeerMacAddress,
       "sleOamPeerMode": sleOamPeerMode,
       "sleOamPeerFunctionsSupported": sleOamPeerFunctionsSupported,
       "sleOamRemLoopback": sleOamRemLoopback,
       "sleOamRemLoopbackCnt": sleOamRemLoopbackCnt,
       "sleOamLm": sleOamLm,
       "sleOamLmAction": sleOamLmAction,
       "sleOamLmFrameWindow": sleOamLmFrameWindow,
       "sleOamLmFrameThresh": sleOamLmFrameThresh,
       "sleOamLmFrameTotal": sleOamLmFrameTotal,
       "sleOamLmFramePeriodWindow": sleOamLmFramePeriodWindow,
       "sleOamLmFramePeriodThresh": sleOamLmFramePeriodThresh,
       "sleOamLmFramePeriodTotal": sleOamLmFramePeriodTotal,
       "sleOamLmFrameSecondSummaryWindow": sleOamLmFrameSecondSummaryWindow,
       "sleOamLmFrameSecondSummaryThresh": sleOamLmFrameSecondSummaryThresh,
       "sleOamLmFrameSecondSummaryTotal": sleOamLmFrameSecondSummaryTotal,
       "sleOamLmSymbolPeriodWindow": sleOamLmSymbolPeriodWindow,
       "sleOamLmSymbolPeriodThresh": sleOamLmSymbolPeriodThresh,
       "sleOamLmSymbolPeriodTotal": sleOamLmSymbolPeriodTotal,
       "sleOamLmRemSeqNum": sleOamLmRemSeqNum,
       "sleOamLmRemFrameLength": sleOamLmRemFrameLength,
       "sleOamLmRemFrameTimeStamp": sleOamLmRemFrameTimeStamp,
       "sleOamLmRemFrameWindow": sleOamLmRemFrameWindow,
       "sleOamLmRemFrameThresh": sleOamLmRemFrameThresh,
       "sleOamLmRemFrameErrors": sleOamLmRemFrameErrors,
       "sleOamLmRemFrameErrorRunTotal": sleOamLmRemFrameErrorRunTotal,
       "sleOamLmRemFrameEventRunTotal": sleOamLmRemFrameEventRunTotal,
       "sleOamLmRemFramePeriodLength": sleOamLmRemFramePeriodLength,
       "sleOamLmRemFramePeriodTimeStamp": sleOamLmRemFramePeriodTimeStamp,
       "sleOamLmRemFramePeriodWindow": sleOamLmRemFramePeriodWindow,
       "sleOamLmRemFramePeriodThresh": sleOamLmRemFramePeriodThresh,
       "sleOamLmRemFramePeriodErrors": sleOamLmRemFramePeriodErrors,
       "sleOamLmRemFramePeriodErrorRunTotal": sleOamLmRemFramePeriodErrorRunTotal,
       "sleOamLmRemFramePeriodEventRunTotal": sleOamLmRemFramePeriodEventRunTotal,
       "sleOamLmRemFrameSecondSummaryLength": sleOamLmRemFrameSecondSummaryLength,
       "sleOamLmRemFrameSecondSummaryTimeStamp": sleOamLmRemFrameSecondSummaryTimeStamp,
       "sleOamLmRemFrameSecondSummaryWindow": sleOamLmRemFrameSecondSummaryWindow,
       "sleOamLmRemFrameSecondSummaryThresh": sleOamLmRemFrameSecondSummaryThresh,
       "sleOamLmRemFrameSecondSummaryErrors": sleOamLmRemFrameSecondSummaryErrors,
       "sleOamLmRemFrameSecondSummaryErrorRunTotal": sleOamLmRemFrameSecondSummaryErrorRunTotal,
       "sleOamLmRemFrameSecondSummaryEventRunTotal": sleOamLmRemFrameSecondSummaryEventRunTotal,
       "sleOamLmRemSymbolPeriodLength": sleOamLmRemSymbolPeriodLength,
       "sleOamLmRemSymbolPeriodTimeStamp": sleOamLmRemSymbolPeriodTimeStamp,
       "sleOamLmRemSymbolPeriodWindow": sleOamLmRemSymbolPeriodWindow,
       "sleOamLmRemSymbolPeriodThresh": sleOamLmRemSymbolPeriodThresh,
       "sleOamLmRemSymbolPeriodErrors": sleOamLmRemSymbolPeriodErrors,
       "sleOamLmRemSymbolPeriodErrorRunTotal": sleOamLmRemSymbolPeriodErrorRunTotal,
       "sleOamLmRemSymbolPeriodEventRunTotal": sleOamLmRemSymbolPeriodEventRunTotal,
       "sleEfmOamControl": sleEfmOamControl,
       "sleOamControlRequest": sleOamControlRequest,
       "sleOamControlStatus": sleOamControlStatus,
       "sleOamControlTimer": sleOamControlTimer,
       "sleOamControlTimeStamp": sleOamControlTimeStamp,
       "sleOamControlReqResult": sleOamControlReqResult,
       "sleOamControlIndex": sleOamControlIndex,
       "sleOamControlPortAdminState": sleOamControlPortAdminState,
       "sleOamControlPortMode": sleOamControlPortMode,
       "sleOamControlPortUnidirectionMode": sleOamControlPortUnidirectionMode,
       "sleOamControlPortRemLoopback": sleOamControlPortRemLoopback,
       "sleOamControlRemLoopbackPkCnt": sleOamControlRemLoopbackPkCnt,
       "sleOamControlLm": sleOamControlLm,
       "sleOamControlLmAction": sleOamControlLmAction,
       "sleOamControlLmFrameWindow": sleOamControlLmFrameWindow,
       "sleOamControlLmFrameThresh": sleOamControlLmFrameThresh,
       "sleOamControlLmFramePeriodWindow": sleOamControlLmFramePeriodWindow,
       "sleOamControlLmFramePeriodThresh": sleOamControlLmFramePeriodThresh,
       "sleOamControlLmFrameSecondSummaryWindow": sleOamControlLmFrameSecondSummaryWindow,
       "sleOamControlLmFrameSecondSummaryThresh": sleOamControlLmFrameSecondSummaryThresh,
       "sleOamControlLmSymbolPeriodWindow": sleOamControlLmSymbolPeriodWindow,
       "sleOamControlLmSymbolPeriodThresh": sleOamControlLmSymbolPeriodThresh,
       "sleEfmOamNotification": sleEfmOamNotification,
       "sleEfmOamPortProfileChanged": sleEfmOamPortProfileChanged,
       "sleEfmOamPortRemLoopback": sleEfmOamPortRemLoopback,
       "sleEfmOamPortLinkMonitorChanged": sleEfmOamPortLinkMonitorChanged,
       "sleAdvaSystem": sleAdvaSystem,
       "sleAdvaSystemTable": sleAdvaSystemTable,
       "sleAdvaSystemEntry": sleAdvaSystemEntry,
       "sleAdvaFSPOperationMode": sleAdvaFSPOperationMode,
       "sleAdvaActiveNetworkInterface": sleAdvaActiveNetworkInterface,
       "sleAdvaForceNetworkInterface": sleAdvaForceNetworkInterface,
       "sleAdvaReportingInterval": sleAdvaReportingInterval,
       "sleAdvaNEMIFitted": sleAdvaNEMIFitted,
       "sleAdvaForceReset": sleAdvaForceReset,
       "sleAdvaManagerAddress": sleAdvaManagerAddress,
       "sleAdvaMinRailVoltageThreshold": sleAdvaMinRailVoltageThreshold,
       "sleAdvaMaxRailVoltageThreshold": sleAdvaMaxRailVoltageThreshold,
       "sleAdvaTemperatureThreshold": sleAdvaTemperatureThreshold,
       "sleAdvaPartNumber": sleAdvaPartNumber,
       "sleAdvaSerialNumber": sleAdvaSerialNumber,
       "sleAdvaFirmwareVersion": sleAdvaFirmwareVersion,
       "sleAdvaFPGAVersion": sleAdvaFPGAVersion,
       "sleAdvaHardwareRevision": sleAdvaHardwareRevision,
       "sleAdvaCLEICode": sleAdvaCLEICode,
       "sleAdvaTemperature": sleAdvaTemperature,
       "sleAdvaRailVoltage": sleAdvaRailVoltage,
       "sleAdvaPSUStates": sleAdvaPSUStates,
       "sleAdvaPSUType": sleAdvaPSUType,
       "sleAdvaFansFitted": sleAdvaFansFitted,
       "sleAdvaFanState": sleAdvaFanState,
       "sleAdvaTransmitMode": sleAdvaTransmitMode,
       "sleAdvaSystemControl": sleAdvaSystemControl,
       "sleAdvaSystemControlRequest": sleAdvaSystemControlRequest,
       "sleAdvaSystemControlStatus": sleAdvaSystemControlStatus,
       "sleAdvaSystemControlTimer": sleAdvaSystemControlTimer,
       "sleAdvaSystemControlTimeStamp": sleAdvaSystemControlTimeStamp,
       "sleAdvaSystemControlReqResult": sleAdvaSystemControlReqResult,
       "sleAdvaSystemControlPortIndex": sleAdvaSystemControlPortIndex,
       "sleAdvaSystemControlFSPOperationMode": sleAdvaSystemControlFSPOperationMode,
       "sleAdvaSystemControlForceNetworkInterface": sleAdvaSystemControlForceNetworkInterface,
       "sleAdvaSystemControlReportingInterval": sleAdvaSystemControlReportingInterval,
       "sleAdvaSystemControlForceReset": sleAdvaSystemControlForceReset,
       "sleAdvaSystemControlMinRailVoltageThreshold": sleAdvaSystemControlMinRailVoltageThreshold,
       "sleAdvaSystemControlMaxRailVoltageThreshold": sleAdvaSystemControlMaxRailVoltageThreshold,
       "sleAdvaSystemControlTemperatureThreshold": sleAdvaSystemControlTemperatureThreshold,
       "sleAdvaSystemControlTransmitMode": sleAdvaSystemControlTransmitMode,
       "sleAdvaSystemNotification": sleAdvaSystemNotification,
       "sleAdvaSystemProfileChanged": sleAdvaSystemProfileChanged,
       "sleAdvaAlarmProfileChanged": sleAdvaAlarmProfileChanged,
       "sleAdvaElectricalInterfaceChanged": sleAdvaElectricalInterfaceChanged,
       "sleAdvaGeneral": sleAdvaGeneral,
       "sleAdvaGeneralTable": sleAdvaGeneralTable,
       "sleAdvaGeneralEntry": sleAdvaGeneralEntry,
       "sleAdvaRemInstance": sleAdvaRemInstance,
       "sleAdvaOperationalStatus": sleAdvaOperationalStatus,
       "sleAdvaLineSpeed": sleAdvaLineSpeed,
       "sleAdvaMACAddress": sleAdvaMACAddress,
       "sleAdvaConnectorType": sleAdvaConnectorType,
       "sleAdvaAutonegiotation": sleAdvaAutonegiotation,
       "sleAdvaLinkLossForwarding": sleAdvaLinkLossForwarding,
       "sleAdvaAdminState": sleAdvaAdminState,
       "sleAdvaRemoteInterfaceIndex": sleAdvaRemoteInterfaceIndex,
       "sleAdvaUserDefinedString": sleAdvaUserDefinedString,
       "sleAdvaRemoteSignalling": sleAdvaRemoteSignalling,
       "sleAdvaConfiguration": sleAdvaConfiguration,
       "sleAdvaLocalTechnologyAbility": sleAdvaLocalTechnologyAbility,
       "sleAdvaAdvertisedTechnologyAbility": sleAdvaAdvertisedTechnologyAbility,
       "sleAdvaReceivedTechnologyAbility": sleAdvaReceivedTechnologyAbility,
       "sleAdvaLocalSectorAbility": sleAdvaLocalSectorAbility,
       "sleAdvaAdvertisedSectorAbility": sleAdvaAdvertisedSectorAbility,
       "sleAdvaReceivedSectorAbility": sleAdvaReceivedSectorAbility,
       "sleAdvaDuplexCapabilities": sleAdvaDuplexCapabilities,
       "sleAdvaPHYType": sleAdvaPHYType,
       "sleAdvaPHYTypeList": sleAdvaPHYTypeList,
       "sleAdvaMIIDetect": sleAdvaMIIDetect,
       "sleAdvaPHYState": sleAdvaPHYState,
       "sleAdvaGoodFramesTransmitted": sleAdvaGoodFramesTransmitted,
       "sleAdvaSingleCollisionFrames": sleAdvaSingleCollisionFrames,
       "sleAdvaMultipleCollisionFrames": sleAdvaMultipleCollisionFrames,
       "sleAdvaGoodFramesReceived": sleAdvaGoodFramesReceived,
       "sleAdvaFCSErrors": sleAdvaFCSErrors,
       "sleAdvaAlignmentErrors": sleAdvaAlignmentErrors,
       "sleAdvaFramesTooLong": sleAdvaFramesTooLong,
       "sleAdvaBytesTransmitted": sleAdvaBytesTransmitted,
       "sleAdvaBytesReceived": sleAdvaBytesReceived,
       "sleAdvaSymbolErrors": sleAdvaSymbolErrors,
       "sleAdvaGeneralControl": sleAdvaGeneralControl,
       "sleAdvaGeneralControlRequest": sleAdvaGeneralControlRequest,
       "sleAdvaGeneralControlStatus": sleAdvaGeneralControlStatus,
       "sleAdvaGeneralControlTimer": sleAdvaGeneralControlTimer,
       "sleAdvaGeneralControlTimeStamp": sleAdvaGeneralControlTimeStamp,
       "sleAdvaGeneralControlReqResult": sleAdvaGeneralControlReqResult,
       "sleAdvaGeneralControlPortIndex": sleAdvaGeneralControlPortIndex,
       "sleAdvaGeneralControlRemInstance": sleAdvaGeneralControlRemInstance,
       "sleAdvaGeneralControlLineSpeed": sleAdvaGeneralControlLineSpeed,
       "sleAdvaGeneralControlAutonegiotation": sleAdvaGeneralControlAutonegiotation,
       "sleAdvaGeneralControlLinkLossForwarding": sleAdvaGeneralControlLinkLossForwarding,
       "sleAdvaGeneralControlUserDefinedString": sleAdvaGeneralControlUserDefinedString,
       "sleAdvaGeneralControlAdvertisedTechnologyAbility": sleAdvaGeneralControlAdvertisedTechnologyAbility,
       "sleAdvaGeneralControlAdvertisedSectorAbility": sleAdvaGeneralControlAdvertisedSectorAbility,
       "sleAdvaGeneralNotification": sleAdvaGeneralNotification,
       "sleAdvaGeneralProfileChanged": sleAdvaGeneralProfileChanged,
       "sleAdvaAutonegProfileChanged": sleAdvaAutonegProfileChanged,
       "sleAdvaModule": sleAdvaModule,
       "sleAdvaModuleTable": sleAdvaModuleTable,
       "sleAdvaModuleEntry": sleAdvaModuleEntry,
       "sleAdvaModuleType": sleAdvaModuleType,
       "sleAdvaModulePartNumber": sleAdvaModulePartNumber,
       "sleAdvaModuleSerialNumber": sleAdvaModuleSerialNumber,
       "sleAdvaModuleFirmwareVersion": sleAdvaModuleFirmwareVersion,
       "sleAdvaModuleSoftwareVersion": sleAdvaModuleSoftwareVersion,
       "sleAdvaModuleHardwareRevision": sleAdvaModuleHardwareRevision,
       "sleAdvaModuleCLEICode": sleAdvaModuleCLEICode,
       "sleAdvaOptical": sleAdvaOptical,
       "sleAdvaOpticalTable": sleAdvaOpticalTable,
       "sleAdvaOpticalEntry": sleAdvaOpticalEntry,
       "sleAdvaOpticalThresholdLevel": sleAdvaOpticalThresholdLevel,
       "sleAdvaLinkLength1": sleAdvaLinkLength1,
       "sleAdvaLinkLength2": sleAdvaLinkLength2,
       "sleAdvaLinkLength3": sleAdvaLinkLength3,
       "sleAdvaLinkLength4": sleAdvaLinkLength4,
       "sleAdvaLinkLengthCu": sleAdvaLinkLengthCu,
       "sleAdvaWaveLength": sleAdvaWaveLength,
       "sleAdvaLaserBias": sleAdvaLaserBias,
       "sleAdvaTransmitPower": sleAdvaTransmitPower,
       "sleAdvaReceivePower": sleAdvaReceivePower,
       "sleAdvaLaserTxTemperature": sleAdvaLaserTxTemperature,
       "sleAdvaOpticalControl": sleAdvaOpticalControl,
       "sleAdvaOpticalControlRequest": sleAdvaOpticalControlRequest,
       "sleAdvaOpticalControlStatus": sleAdvaOpticalControlStatus,
       "sleAdvaOpticalControlTimer": sleAdvaOpticalControlTimer,
       "sleAdvaOpticalControlTimeStamp": sleAdvaOpticalControlTimeStamp,
       "sleAdvaOpticalControlReqResult": sleAdvaOpticalControlReqResult,
       "sleAdvaOpticalControlPortIndex": sleAdvaOpticalControlPortIndex,
       "sleAdvaOpticalControlRemInstance": sleAdvaOpticalControlRemInstance,
       "sleAdvaOpticalControlThresholdLevel": sleAdvaOpticalControlThresholdLevel,
       "sleAdvaOpticalNotification": sleAdvaOpticalNotification,
       "sleAdvaOpticalAlarmChanged": sleAdvaOpticalAlarmChanged,
       "sleAdvaOam": sleAdvaOam,
       "sleAdvaOamTable": sleAdvaOamTable,
       "sleAdvaOamEntry": sleAdvaOamEntry,
       "sleAdvaAdminStatus": sleAdvaAdminStatus,
       "sleAdvaMode": sleAdvaMode,
       "sleAdvaRemMACAddress": sleAdvaRemMACAddress,
       "sleAdvaRemConfig": sleAdvaRemConfig,
       "sleAdvaRemPduConfig": sleAdvaRemPduConfig,
       "sleAdvaLocFlags": sleAdvaLocFlags,
       "sleAdvaRemFlags": sleAdvaRemFlags,
       "sleAdvaRemState": sleAdvaRemState,
       "sleAdvaRemVendorOUI": sleAdvaRemVendorOUI,
       "sleAdvaRemDeviceNumber": sleAdvaRemDeviceNumber,
       "sleAdvaRemVendorVersion": sleAdvaRemVendorVersion,
       "sleAdvaLocErrSymbolPeriodEventConfig": sleAdvaLocErrSymbolPeriodEventConfig,
       "sleAdvaLocErrFrameEventConfig": sleAdvaLocErrFrameEventConfig,
       "sleAdvaLocErrFramePeriodEventConfig": sleAdvaLocErrFramePeriodEventConfig,
       "sleAdvaLocErrFrameSecsSummaryEventConfig": sleAdvaLocErrFrameSecsSummaryEventConfig,
       "sleAdvaPDUsTx": sleAdvaPDUsTx,
       "sleAdvaPDUsRx": sleAdvaPDUsRx,
       "sleAdvaUnsupportedCodesRx": sleAdvaUnsupportedCodesRx,
       "sleAdvaInfoPDUsTx": sleAdvaInfoPDUsTx,
       "sleAdvaInfoPDUsRx": sleAdvaInfoPDUsRx,
       "sleAdvaEventNotificationPDUsTx": sleAdvaEventNotificationPDUsTx,
       "sleAdvaUniqueEventNotificationPDUsTx": sleAdvaUniqueEventNotificationPDUsTx,
       "sleAdvaDupEventNotificationPDUsTx": sleAdvaDupEventNotificationPDUsTx,
       "sleAdvaLoopbackControlPDUsTx": sleAdvaLoopbackControlPDUsTx,
       "sleAdvaLoopbackControlPDUsRx": sleAdvaLoopbackControlPDUsRx,
       "sleAdvaVariableRequestPDUsTx": sleAdvaVariableRequestPDUsTx,
       "sleAdvaVariableRequestPDUsRx": sleAdvaVariableRequestPDUsRx,
       "sleAdvaVariableResponsePDUsTx": sleAdvaVariableResponsePDUsTx,
       "sleAdvaVariableResponsePDUsRx": sleAdvaVariableResponsePDUsRx,
       "sleAdvaVendorPDUsTx": sleAdvaVendorPDUsTx,
       "sleAdvaVendorPDUsRx": sleAdvaVendorPDUsRx,
       "sleAdvaRemFramesLostDuetoOAMErr": sleAdvaRemFramesLostDuetoOAMErr,
       "sleAdvaLocErrSymbolPeriodEvent": sleAdvaLocErrSymbolPeriodEvent,
       "sleAdvaLocErrFrameSecsEvent": sleAdvaLocErrFrameSecsEvent,
       "sleAdvaLocErrFramePeriodEvent": sleAdvaLocErrFramePeriodEvent,
       "sleAdvaLocErrFrameSecsSummaryEvent": sleAdvaLocErrFrameSecsSummaryEvent,
       "sleAdvaRemErrSymbolPeriodEvent": sleAdvaRemErrSymbolPeriodEvent,
       "sleAdvaRemErrFrameSecsEvent": sleAdvaRemErrFrameSecsEvent,
       "sleAdvaRemoteErrorFramePeriodEvent": sleAdvaRemoteErrorFramePeriodEvent,
       "sleAdvaRemoteErrorFrameSecsSummaryEvent": sleAdvaRemoteErrorFrameSecsSummaryEvent,
       "sleAdvaOamControl": sleAdvaOamControl,
       "sleAdvaOamControlRequest": sleAdvaOamControlRequest,
       "sleAdvaOamControlStatus": sleAdvaOamControlStatus,
       "sleAdvaOamControlTimer": sleAdvaOamControlTimer,
       "sleAdvaOamControlTimeStamp": sleAdvaOamControlTimeStamp,
       "sleAdvaOamControlReqResult": sleAdvaOamControlReqResult,
       "sleAdvaOamControlPortIndex": sleAdvaOamControlPortIndex,
       "sleAdvaOamControlRemInstance": sleAdvaOamControlRemInstance,
       "sleAdvaOamControlAdminStatus": sleAdvaOamControlAdminStatus,
       "sleAdvaOamControlMode": sleAdvaOamControlMode,
       "sleAdvaOamNotification": sleAdvaOamNotification,
       "setAdvaOamProfileChanged": setAdvaOamProfileChanged,
       "sleAlarmLED": sleAlarmLED,
       "sleAlarmLEDTable": sleAlarmLEDTable,
       "sleAlarmLEDEntry": sleAlarmLEDEntry,
       "sleAlarmLEDType": sleAlarmLEDType,
       "sleAlarmLEDStatus": sleAlarmLEDStatus,
       "sleAlarmLEDLevel": sleAlarmLEDLevel,
       "sleAlarmLEDLevelTable": sleAlarmLEDLevelTable,
       "sleAlarmLEDLevelEntry": sleAlarmLEDLevelEntry,
       "sleAlarmLEDLevelIndex": sleAlarmLEDLevelIndex,
       "sleAlarmLEDLevelBlock": sleAlarmLEDLevelBlock,
       "sleAlarmLEDLevelOperStatus": sleAlarmLEDLevelOperStatus,
       "sleAlarmLEDControl": sleAlarmLEDControl,
       "sleAlarmLEDControlRequest": sleAlarmLEDControlRequest,
       "sleAlarmLEDControlStatus": sleAlarmLEDControlStatus,
       "sleAlarmLEDControlTimer": sleAlarmLEDControlTimer,
       "sleAlarmLEDControlTimeStamp": sleAlarmLEDControlTimeStamp,
       "sleAlarmLEDControlReqResult": sleAlarmLEDControlReqResult,
       "sleAlarmLEDControlType": sleAlarmLEDControlType,
       "sleAlarmLEDControlLevel": sleAlarmLEDControlLevel,
       "sleAlarmLEDControlBlock": sleAlarmLEDControlBlock,
       "sleAlarmLEDNotification": sleAlarmLEDNotification,
       "sleAlarmLEDOffChanged": sleAlarmLEDOffChanged,
       "sleAlarmLEDLevelChanged": sleAlarmLEDLevelChanged,
       "sleAlarmLEDCleared": sleAlarmLEDCleared,
       "sleAlarmLEDBlockChanged": sleAlarmLEDBlockChanged,
       "sleY1731Oam": sleY1731Oam,
       "sleY1731Base": sleY1731Base,
       "sleY1731BaseGroup": sleY1731BaseGroup,
       "sleY1731Enable": sleY1731Enable,
       "sleY1731TrunkEnable": sleY1731TrunkEnable,
       "sleY1731LtrCacheHoldTime": sleY1731LtrCacheHoldTime,
       "sleY1731LtrCacheSize": sleY1731LtrCacheSize,
       "sleY1731SnmpServerTraps": sleY1731SnmpServerTraps,
       "sleY1731XcheckStartDelay": sleY1731XcheckStartDelay,
       "sleY1731DefaultMegLevel": sleY1731DefaultMegLevel,
       "sleY1731DefaultMegMhfCreation": sleY1731DefaultMegMhfCreation,
       "sleY1731PduToCfm": sleY1731PduToCfm,
       "sleY1731DedicatedVlan": sleY1731DedicatedVlan,
       "sleY1731RmepCreation": sleY1731RmepCreation,
       "sleY1731CCIgnoreDefect": sleY1731CCIgnoreDefect,
       "sleY1731RapsFloodingBlock": sleY1731RapsFloodingBlock,
       "sleY1731TlvPermission": sleY1731TlvPermission,
       "sleY1731BaseControl": sleY1731BaseControl,
       "sleY1731BaseControlRequest": sleY1731BaseControlRequest,
       "sleY1731BaseControlStatus": sleY1731BaseControlStatus,
       "sleY1731BaseControlTimer": sleY1731BaseControlTimer,
       "sleY1731BaseControlTimeStamp": sleY1731BaseControlTimeStamp,
       "sleY1731BaseControlReqResult": sleY1731BaseControlReqResult,
       "sleY1731BaseControlEnable": sleY1731BaseControlEnable,
       "sleY1731BaseControlTrunkEnable": sleY1731BaseControlTrunkEnable,
       "sleY1731BaseControlLtrCacheHoldTime": sleY1731BaseControlLtrCacheHoldTime,
       "sleY1731BaseControlLtrCacheSize": sleY1731BaseControlLtrCacheSize,
       "sleY1731BaseControlSnmpServerTraps": sleY1731BaseControlSnmpServerTraps,
       "sleY1731BaseControlXcheckStartDelay": sleY1731BaseControlXcheckStartDelay,
       "sleY1731BaseControlDefaultMegLevel": sleY1731BaseControlDefaultMegLevel,
       "sleY1731BaseControlDefaultMegMhfCreation": sleY1731BaseControlDefaultMegMhfCreation,
       "sleY1731BaseControlPduToCfm": sleY1731BaseControlPduToCfm,
       "sleY1731BaseControlDedicatedVlan": sleY1731BaseControlDedicatedVlan,
       "sleY1731BaseControlRmepCreation": sleY1731BaseControlRmepCreation,
       "sleY1731BaseControlTrunkIndex": sleY1731BaseControlTrunkIndex,
       "sleY1731BaseControlTrunkOamStatus": sleY1731BaseControlTrunkOamStatus,
       "sleY1731BaseControlTrunkMeg": sleY1731BaseControlTrunkMeg,
       "sleY1731BaseControlCCIgnoreDefect": sleY1731BaseControlCCIgnoreDefect,
       "sleY1731BaseControlRapsFloodingBlock": sleY1731BaseControlRapsFloodingBlock,
       "sleY1731BaseControlTlvPermission": sleY1731BaseControlTlvPermission,
       "sleY1731BaseNotification": sleY1731BaseNotification,
       "sleY1731EnableChanged": sleY1731EnableChanged,
       "sleY1731TrunkEnableChanged": sleY1731TrunkEnableChanged,
       "sleY1731LtrCacheProfileChanged": sleY1731LtrCacheProfileChanged,
       "sleY1731SnmpProfileChanged": sleY1731SnmpProfileChanged,
       "sleY1731XcheckProfileChanged": sleY1731XcheckProfileChanged,
       "sleY1731DefaultMegProfileChanged": sleY1731DefaultMegProfileChanged,
       "sleY1731PduToCfmChanged": sleY1731PduToCfmChanged,
       "sleY1731DedicatedVlanChanged": sleY1731DedicatedVlanChanged,
       "sleY1731MipCcdbDestroyed": sleY1731MipCcdbDestroyed,
       "sleY1731LtrCacheDestroyed": sleY1731LtrCacheDestroyed,
       "sleY1731RmepCreationChanged": sleY1731RmepCreationChanged,
       "sleY1731TrunkOamStatusChanged": sleY1731TrunkOamStatusChanged,
       "sleY1731CCIgnoreDefectChanged": sleY1731CCIgnoreDefectChanged,
       "sleY1731RapsFloodinBlockChanged": sleY1731RapsFloodinBlockChanged,
       "sleY1731TlvPermissionChanged": sleY1731TlvPermissionChanged,
       "sleY1731TrunkTable": sleY1731TrunkTable,
       "sleY1731TrunkEntry": sleY1731TrunkEntry,
       "sleY1731TrunkIndex": sleY1731TrunkIndex,
       "sleY1731TrunkOamStatus": sleY1731TrunkOamStatus,
       "sleY1731TrunkMeg": sleY1731TrunkMeg,
       "sleY1731Meg": sleY1731Meg,
       "sleY1731MegTable": sleY1731MegTable,
       "sleY1731MegEntry": sleY1731MegEntry,
       "sleY1731MegIndex": sleY1731MegIndex,
       "sleY1731MegName": sleY1731MegName,
       "sleY1731MegLevel": sleY1731MegLevel,
       "sleY1731MegVid": sleY1731MegVid,
       "sleY1731MegMepEnable": sleY1731MegMepEnable,
       "sleY1731MegCcEnable": sleY1731MegCcEnable,
       "sleY1731MegCcInterval": sleY1731MegCcInterval,
       "sleY1731MegCcPriority": sleY1731MegCcPriority,
       "sleY1731MegCcLossThreshold": sleY1731MegCcLossThreshold,
       "sleY1731MegCcHoldTime": sleY1731MegCcHoldTime,
       "sleY1731MegFaultPriority": sleY1731MegFaultPriority,
       "sleY1731MegFaultKeepTime": sleY1731MegFaultKeepTime,
       "sleY1731MegFaultClearTime": sleY1731MegFaultClearTime,
       "sleY1731MegXcheckEnable": sleY1731MegXcheckEnable,
       "sleY1731MegAisEnable": sleY1731MegAisEnable,
       "sleY1731MegAisTransmitEnable": sleY1731MegAisTransmitEnable,
       "sleY1731MegAisInterval": sleY1731MegAisInterval,
       "sleY1731MegAisLevel": sleY1731MegAisLevel,
       "sleY1731MegAisPriority": sleY1731MegAisPriority,
       "sleY1731MegLckEnable": sleY1731MegLckEnable,
       "sleY1731MegLckTransmitEnable": sleY1731MegLckTransmitEnable,
       "sleY1731MegLckInterval": sleY1731MegLckInterval,
       "sleY1731MegLckLevel": sleY1731MegLckLevel,
       "sleY1731MegLckPriority": sleY1731MegLckPriority,
       "sleY1731MegOutOfService": sleY1731MegOutOfService,
       "sleY1731MegRapsEnable": sleY1731MegRapsEnable,
       "sleY1731MegRapsRplOwner": sleY1731MegRapsRplOwner,
       "sleY1731MegRapsEastPort": sleY1731MegRapsEastPort,
       "sleY1731MegRapsWestPort": sleY1731MegRapsWestPort,
       "sleY1731MegRapsRplPort": sleY1731MegRapsRplPort,
       "sleY1731MegRapsHoldOffTime": sleY1731MegRapsHoldOffTime,
       "sleY1731MegRapsGuardTime": sleY1731MegRapsGuardTime,
       "sleY1731MegRapsWaitToRestore": sleY1731MegRapsWaitToRestore,
       "sleY1731MegRapsState": sleY1731MegRapsState,
       "sleY1731MegRapsEastPortStatus": sleY1731MegRapsEastPortStatus,
       "sleY1731MegRapsWestPortStatus": sleY1731MegRapsWestPortStatus,
       "sleY1731MegRapsNonRevertive": sleY1731MegRapsNonRevertive,
       "sleY1731MegRapsForcedSwitchEast": sleY1731MegRapsForcedSwitchEast,
       "sleY1731MegRapsForcedSwitchWest": sleY1731MegRapsForcedSwitchWest,
       "sleY1731MegMd": sleY1731MegMd,
       "sleY1731MegControl": sleY1731MegControl,
       "sleY1731MegControlRequest": sleY1731MegControlRequest,
       "sleY1731MegControlStatus": sleY1731MegControlStatus,
       "sleY1731MegControlTimer": sleY1731MegControlTimer,
       "sleY1731MegControlTimeStamp": sleY1731MegControlTimeStamp,
       "sleY1731MegControlReqResult": sleY1731MegControlReqResult,
       "sleY1731MegControlIndex": sleY1731MegControlIndex,
       "sleY1731MegControlName": sleY1731MegControlName,
       "sleY1731MegControlLevel": sleY1731MegControlLevel,
       "sleY1731MegControlVid": sleY1731MegControlVid,
       "sleY1731MegControlMepEnable": sleY1731MegControlMepEnable,
       "sleY1731MegControlCcEnable": sleY1731MegControlCcEnable,
       "sleY1731MegControlCcInterval": sleY1731MegControlCcInterval,
       "sleY1731MegControlCcPriority": sleY1731MegControlCcPriority,
       "sleY1731MegControlCcLossThreshold": sleY1731MegControlCcLossThreshold,
       "sleY1731MegControlCcHoldTime": sleY1731MegControlCcHoldTime,
       "sleY1731MegControlFaultPriority": sleY1731MegControlFaultPriority,
       "sleY1731MegControlFaultKeepTime": sleY1731MegControlFaultKeepTime,
       "sleY1731MegControlFaultClearTime": sleY1731MegControlFaultClearTime,
       "sleY1731MegControlXcheckEnable": sleY1731MegControlXcheckEnable,
       "sleY1731MegControlAisEnable": sleY1731MegControlAisEnable,
       "sleY1731MegControlAisTransmitEnable": sleY1731MegControlAisTransmitEnable,
       "sleY1731MegControlAisInterval": sleY1731MegControlAisInterval,
       "sleY1731MegControlAisLevel": sleY1731MegControlAisLevel,
       "sleY1731MegControlAisPriority": sleY1731MegControlAisPriority,
       "sleY1731MegControlLckEnable": sleY1731MegControlLckEnable,
       "sleY1731MegControlLckTransmitEnable": sleY1731MegControlLckTransmitEnable,
       "sleY1731MegControlLckInterval": sleY1731MegControlLckInterval,
       "sleY1731MegControlLckLevel": sleY1731MegControlLckLevel,
       "sleY1731MegControlLckPriority": sleY1731MegControlLckPriority,
       "sleY1731MegControlOutOfService": sleY1731MegControlOutOfService,
       "sleY1731MegControlRapsEnable": sleY1731MegControlRapsEnable,
       "sleY1731MegControlRapsRplOwner": sleY1731MegControlRapsRplOwner,
       "sleY1731MegControlRapsEastPort": sleY1731MegControlRapsEastPort,
       "sleY1731MegControlRapsWestPort": sleY1731MegControlRapsWestPort,
       "sleY1731MegControlRapsRplPort": sleY1731MegControlRapsRplPort,
       "sleY1731MegControlRapsHoldOffTime": sleY1731MegControlRapsHoldOffTime,
       "sleY1731MegControlRapsGuardTime": sleY1731MegControlRapsGuardTime,
       "sleY1731MegControlRapsWaitToRestore": sleY1731MegControlRapsWaitToRestore,
       "sleY1731MegControlRapsNonRevertive": sleY1731MegControlRapsNonRevertive,
       "sleY1731MegControlRapsForcedSwitchEast": sleY1731MegControlRapsForcedSwitchEast,
       "sleY1731MegControlRapsForcedSwitchWest": sleY1731MegControlRapsForcedSwitchWest,
       "sleY1731MegControlMd": sleY1731MegControlMd,
       "sleY1731MegNotification": sleY1731MegNotification,
       "sleY1731MegCreated": sleY1731MegCreated,
       "sleY1731MegDeleted": sleY1731MegDeleted,
       "sleY1731MegMepEnableChanged": sleY1731MegMepEnableChanged,
       "sleY1731MegCcEnableChanged": sleY1731MegCcEnableChanged,
       "sleY1731MegCcProfileChanged": sleY1731MegCcProfileChanged,
       "sleY1731MegFaultProfileChanged": sleY1731MegFaultProfileChanged,
       "sleY1731MegXcheckEnableChanged": sleY1731MegXcheckEnableChanged,
       "sleY1731MegAisEnableChanged": sleY1731MegAisEnableChanged,
       "sleY1731MegAisTransmitEnableChanged": sleY1731MegAisTransmitEnableChanged,
       "sleY1731MegAisProfileChanged": sleY1731MegAisProfileChanged,
       "sleY1731MegLckEnableChanged": sleY1731MegLckEnableChanged,
       "sleY1731MegLckTransmitEnableChanged": sleY1731MegLckTransmitEnableChanged,
       "sleY1731MegLckProfileChanged": sleY1731MegLckProfileChanged,
       "sleY1731MegOutOfServiceChanged": sleY1731MegOutOfServiceChanged,
       "sleY1731MegRapsEnableChanged": sleY1731MegRapsEnableChanged,
       "sleY1731MegRapsRingportsChanged": sleY1731MegRapsRingportsChanged,
       "sleY1731MegRapsRplPortChanged": sleY1731MegRapsRplPortChanged,
       "sleY1731MegRapsRplOwnerChanged": sleY1731MegRapsRplOwnerChanged,
       "sleY1731MegRapsTimerChanged": sleY1731MegRapsTimerChanged,
       "sleY1731MegRemoteMepDestroyed": sleY1731MegRemoteMepDestroyed,
       "sleY1731MegErrorDestroyed": sleY1731MegErrorDestroyed,
       "sleY1731MegRapsNonRevertiveChanged": sleY1731MegRapsNonRevertiveChanged,
       "sleY1731MegRapsForcedSwitchEastChanged": sleY1731MegRapsForcedSwitchEastChanged,
       "sleY1731MegRapsForcedSwitchWestChanged": sleY1731MegRapsForcedSwitchWestChanged,
       "sleY1731MegMdAdded": sleY1731MegMdAdded,
       "sleY1731MegMdDeleted": sleY1731MegMdDeleted,
       "sleY1731Mep": sleY1731Mep,
       "sleY1731MepTable": sleY1731MepTable,
       "sleY1731MepEntry": sleY1731MepEntry,
       "sleY1731MepIdentifier": sleY1731MepIdentifier,
       "sleY1731MepIfIndex": sleY1731MepIfIndex,
       "sleY1731MepDirection": sleY1731MepDirection,
       "sleY1731MepEnable": sleY1731MepEnable,
       "sleY1731MepFngState": sleY1731MepFngState,
       "sleY1731MepCcEnable": sleY1731MepCcEnable,
       "sleY1731MepMacAddress": sleY1731MepMacAddress,
       "sleY1731MepFaultPriority": sleY1731MepFaultPriority,
       "sleY1731MepFaultKeepTime": sleY1731MepFaultKeepTime,
       "sleY1731MepFaultClearTime": sleY1731MepFaultClearTime,
       "sleY1731MepHighestPrDefect": sleY1731MepHighestPrDefect,
       "sleY1731MepAisEnable": sleY1731MepAisEnable,
       "sleY1731MepAisTransmitEnable": sleY1731MepAisTransmitEnable,
       "sleY1731MepLckEnable": sleY1731MepLckEnable,
       "sleY1731MepLckTransmitEnable": sleY1731MepLckTransmitEnable,
       "sleY1731MepOutOfService": sleY1731MepOutOfService,
       "sleY1731MepDlmEnabledRmep": sleY1731MepDlmEnabledRmep,
       "sleY1731MepDefects": sleY1731MepDefects,
       "sleY1731MepCcmSequenceErrors": sleY1731MepCcmSequenceErrors,
       "sleY1731MepCciSentCcms": sleY1731MepCciSentCcms,
       "sleY1731MepNextLbmTransId": sleY1731MepNextLbmTransId,
       "sleY1731MepLbSuccessRate": sleY1731MepLbSuccessRate,
       "sleY1731MepLbRoundtripMin": sleY1731MepLbRoundtripMin,
       "sleY1731MepLbRoundtripMax": sleY1731MepLbRoundtripMax,
       "sleY1731MepLbRoundtripAvg": sleY1731MepLbRoundtripAvg,
       "sleY1731MepLbrIn": sleY1731MepLbrIn,
       "sleY1731MepLbrInOutOfOrder": sleY1731MepLbrInOutOfOrder,
       "sleY1731MepTstLbrInBitError": sleY1731MepTstLbrInBitError,
       "sleY1731MepTstLbrInCrcError": sleY1731MepTstLbrInCrcError,
       "sleY1731MepLtmNextSeqNumber": sleY1731MepLtmNextSeqNumber,
       "sleY1731MepUnexpLtrIn": sleY1731MepUnexpLtrIn,
       "sleY1731MepLbrOut": sleY1731MepLbrOut,
       "sleY1731MepTmLbmCount": sleY1731MepTmLbmCount,
       "sleY1731MepTmLbrCount": sleY1731MepTmLbrCount,
       "sleY1731MepTmLbrFirstLostId": sleY1731MepTmLbrFirstLostId,
       "sleY1731MepTmLbrMaxRate": sleY1731MepTmLbrMaxRate,
       "sleY1731MepTmTstCount": sleY1731MepTmTstCount,
       "sleY1731MepCcmFrameLossNearMin": sleY1731MepCcmFrameLossNearMin,
       "sleY1731MepCcmFrameLossNearMax": sleY1731MepCcmFrameLossNearMax,
       "sleY1731MepCcmFrameLossNearSum": sleY1731MepCcmFrameLossNearSum,
       "sleY1731MepCcmFrameLossFarMin": sleY1731MepCcmFrameLossFarMin,
       "sleY1731MepCcmFrameLossFarMax": sleY1731MepCcmFrameLossFarMax,
       "sleY1731MepCcmFrameLossFarSum": sleY1731MepCcmFrameLossFarSum,
       "sleY1731MepPmEnable": sleY1731MepPmEnable,
       "sleY1731MepCcmFrameLossNearRatio": sleY1731MepCcmFrameLossNearRatio,
       "sleY1731MepCcmFrameLossNearAvgRatio": sleY1731MepCcmFrameLossNearAvgRatio,
       "sleY1731MepCcmFrameLossFarRatio": sleY1731MepCcmFrameLossFarRatio,
       "sleY1731MepCcmFrameLossFarAvgRatio": sleY1731MepCcmFrameLossFarAvgRatio,
       "sleY1731MepRllcf": sleY1731MepRllcf,
       "sleY1731MepRllcfHoldOff": sleY1731MepRllcfHoldOff,
       "sleY1731MepRllcfGuardTime": sleY1731MepRllcfGuardTime,
       "sleY1731MepControl": sleY1731MepControl,
       "sleY1731MepControlRequest": sleY1731MepControlRequest,
       "sleY1731MepControlStatus": sleY1731MepControlStatus,
       "sleY1731MepControlTimer": sleY1731MepControlTimer,
       "sleY1731MepControlTimeStamp": sleY1731MepControlTimeStamp,
       "sleY1731MepControlReqResult": sleY1731MepControlReqResult,
       "sleY1731MepControlIdentifier": sleY1731MepControlIdentifier,
       "sleY1731MepControlMegIndex": sleY1731MepControlMegIndex,
       "sleY1731MepControlIfIndex": sleY1731MepControlIfIndex,
       "sleY1731MepControlDirection": sleY1731MepControlDirection,
       "sleY1731MepControlEnable": sleY1731MepControlEnable,
       "sleY1731MepControlCcEnable": sleY1731MepControlCcEnable,
       "sleY1731MepControlFaultPriority": sleY1731MepControlFaultPriority,
       "sleY1731MepControlFaultKeepTime": sleY1731MepControlFaultKeepTime,
       "sleY1731MepControlFaultClearTime": sleY1731MepControlFaultClearTime,
       "sleY1731MepControlAisEnable": sleY1731MepControlAisEnable,
       "sleY1731MepControlAisTransmitEnable": sleY1731MepControlAisTransmitEnable,
       "sleY1731MepControlLckEnable": sleY1731MepControlLckEnable,
       "sleY1731MepControlLckTransmitEnable": sleY1731MepControlLckTransmitEnable,
       "sleY1731MepControlOutOfService": sleY1731MepControlOutOfService,
       "sleY1731MepControlDlmEnabledRmep": sleY1731MepControlDlmEnabledRmep,
       "sleY1731MepControlTransmitLbmIsUnicast": sleY1731MepControlTransmitLbmIsUnicast,
       "sleY1731MepControlTransmitLbmDestMacAddress": sleY1731MepControlTransmitLbmDestMacAddress,
       "sleY1731MepControlTransmitLbmDestMepId": sleY1731MepControlTransmitLbmDestMepId,
       "sleY1731MepControlTransmitLbmDestIsMepId": sleY1731MepControlTransmitLbmDestIsMepId,
       "sleY1731MepControlTransmitLbmCount": sleY1731MepControlTransmitLbmCount,
       "sleY1731MepControlTransmitLbmInterval": sleY1731MepControlTransmitLbmInterval,
       "sleY1731MepControlTransmitLbmTimeout": sleY1731MepControlTransmitLbmTimeout,
       "sleY1731MepControlTransmitLbmPriority": sleY1731MepControlTransmitLbmPriority,
       "sleY1731MepControlTransmitLbmLength": sleY1731MepControlTransmitLbmLength,
       "sleY1731MepControlTransmitLtmTargetMacAddress": sleY1731MepControlTransmitLtmTargetMacAddress,
       "sleY1731MepControlTransmitLtmTargetMepId": sleY1731MepControlTransmitLtmTargetMepId,
       "sleY1731MepControlTransmitLtmTargetIsMepId": sleY1731MepControlTransmitLtmTargetIsMepId,
       "sleY1731MepControlTransmitLtmFlags": sleY1731MepControlTransmitLtmFlags,
       "sleY1731MepControlTransmitLtmTtl": sleY1731MepControlTransmitLtmTtl,
       "sleY1731MepControlTransmitLtmPriority": sleY1731MepControlTransmitLtmPriority,
       "sleY1731MepControlTransmitTstLbmDestMepId": sleY1731MepControlTransmitTstLbmDestMepId,
       "sleY1731MepControlTransmitTstLbmDuration": sleY1731MepControlTransmitTstLbmDuration,
       "sleY1731MepControlTransmitTstLbmInterval": sleY1731MepControlTransmitTstLbmInterval,
       "sleY1731MepControlTransmitTstLbmTimeout": sleY1731MepControlTransmitTstLbmTimeout,
       "sleY1731MepControlTransmitTstLbmPriority": sleY1731MepControlTransmitTstLbmPriority,
       "sleY1731MepControlTransmitTstLbmLength": sleY1731MepControlTransmitTstLbmLength,
       "sleY1731MepControlTransmitTstLbmPattern": sleY1731MepControlTransmitTstLbmPattern,
       "sleY1731MepControlTransmitTmLbmDestMepId": sleY1731MepControlTransmitTmLbmDestMepId,
       "sleY1731MepControlTransmitTmLbmDuration": sleY1731MepControlTransmitTmLbmDuration,
       "sleY1731MepControlTransmitTmLbmPartDuration": sleY1731MepControlTransmitTmLbmPartDuration,
       "sleY1731MepControlTransmitTmLbmStartRate": sleY1731MepControlTransmitTmLbmStartRate,
       "sleY1731MepControlTransmitTmLbmIncRate": sleY1731MepControlTransmitTmLbmIncRate,
       "sleY1731MepControlTransmitTmLbmTimeout": sleY1731MepControlTransmitTmLbmTimeout,
       "sleY1731MepControlTransmitTmLbmPriority": sleY1731MepControlTransmitTmLbmPriority,
       "sleY1731MepControlTransmitTmLbmLength": sleY1731MepControlTransmitTmLbmLength,
       "sleY1731MepControlTransmitTmLbmPattern": sleY1731MepControlTransmitTmLbmPattern,
       "sleY1731MepControlTransmitTstIsUnicast": sleY1731MepControlTransmitTstIsUnicast,
       "sleY1731MepControlTransmitTstDestMepId": sleY1731MepControlTransmitTstDestMepId,
       "sleY1731MepControlTransmitTstDuration": sleY1731MepControlTransmitTstDuration,
       "sleY1731MepControlTransmitTstInterval": sleY1731MepControlTransmitTstInterval,
       "sleY1731MepControlTransmitTstPriority": sleY1731MepControlTransmitTstPriority,
       "sleY1731MepControlTransmitTstLength": sleY1731MepControlTransmitTstLength,
       "sleY1731MepControlTransmitTstPattern": sleY1731MepControlTransmitTstPattern,
       "sleY1731MepControlReceiveTstDuration": sleY1731MepControlReceiveTstDuration,
       "sleY1731MepControlTransmitTmTstIsUnicast": sleY1731MepControlTransmitTmTstIsUnicast,
       "sleY1731MepControlTransmitTmTstDestMepId": sleY1731MepControlTransmitTmTstDestMepId,
       "sleY1731MepControlTransmitTmTstDuration": sleY1731MepControlTransmitTmTstDuration,
       "sleY1731MepControlTransmitTmTstPartDuration": sleY1731MepControlTransmitTmTstPartDuration,
       "sleY1731MepControlTransmitTmTstStartRate": sleY1731MepControlTransmitTmTstStartRate,
       "sleY1731MepControlTransmitTmTstIncRate": sleY1731MepControlTransmitTmTstIncRate,
       "sleY1731MepControlTransmitTmTstTimeout": sleY1731MepControlTransmitTmTstTimeout,
       "sleY1731MepControlTransmitTmTstPriority": sleY1731MepControlTransmitTmTstPriority,
       "sleY1731MepControlTransmitTmTstLength": sleY1731MepControlTransmitTmTstLength,
       "sleY1731MepControlTransmitTmTstPattern": sleY1731MepControlTransmitTmTstPattern,
       "sleY1731MepControlReceiveTmTstDuration": sleY1731MepControlReceiveTmTstDuration,
       "sleY1731MepControlTransmitLmmIsUnicast": sleY1731MepControlTransmitLmmIsUnicast,
       "sleY1731MepControlTransmitLmmDestMepId": sleY1731MepControlTransmitLmmDestMepId,
       "sleY1731MepControlTransmitLmmDuration": sleY1731MepControlTransmitLmmDuration,
       "sleY1731MepControlTransmitLmmInterval": sleY1731MepControlTransmitLmmInterval,
       "sleY1731MepControlTransmitLmmTimeout": sleY1731MepControlTransmitLmmTimeout,
       "sleY1731MepControlTransmitLmmPriority": sleY1731MepControlTransmitLmmPriority,
       "sleY1731MepControlTransmit1dmIsUnicast": sleY1731MepControlTransmit1dmIsUnicast,
       "sleY1731MepControlTransmit1dmDestMepId": sleY1731MepControlTransmit1dmDestMepId,
       "sleY1731MepControlTransmit1dmDuration": sleY1731MepControlTransmit1dmDuration,
       "sleY1731MepControlTransmit1dmInterval": sleY1731MepControlTransmit1dmInterval,
       "sleY1731MepControlTransmit1dmPriority": sleY1731MepControlTransmit1dmPriority,
       "sleY1731MepControlReceive1dmDuration": sleY1731MepControlReceive1dmDuration,
       "sleY1731MepControlTransmitDmmIsUnicast": sleY1731MepControlTransmitDmmIsUnicast,
       "sleY1731MepControlTransmitDmmDestMepId": sleY1731MepControlTransmitDmmDestMepId,
       "sleY1731MepControlTransmitDmmDuration": sleY1731MepControlTransmitDmmDuration,
       "sleY1731MepControlTransmitDmmInterval": sleY1731MepControlTransmitDmmInterval,
       "sleY1731MepControlTransmitDmmTimeout": sleY1731MepControlTransmitDmmTimeout,
       "sleY1731MepControlTransmitDmmPriority": sleY1731MepControlTransmitDmmPriority,
       "sleY1731MepControlPmEnable": sleY1731MepControlPmEnable,
       "sleY1731MepControlRllcf": sleY1731MepControlRllcf,
       "sleY1731MepControlRllcfHoldOff": sleY1731MepControlRllcfHoldOff,
       "sleY1731MepControlRllcfGuardTime": sleY1731MepControlRllcfGuardTime,
       "sleY1731MepNotification": sleY1731MepNotification,
       "sleY1731MepCreated": sleY1731MepCreated,
       "sleY1731MepDeleted": sleY1731MepDeleted,
       "sleY1731MepEnableChanged": sleY1731MepEnableChanged,
       "sleY1731MepCcEnableChanged": sleY1731MepCcEnableChanged,
       "sleY1731MepFaultProfileChanged": sleY1731MepFaultProfileChanged,
       "sleY1731MepAisEnableChanged": sleY1731MepAisEnableChanged,
       "sleY1731MepAisTransmitEnableChanged": sleY1731MepAisTransmitEnableChanged,
       "sleY1731MepLckEnableChanged": sleY1731MepLckEnableChanged,
       "sleY1731MepLckTransmitEnableChanged": sleY1731MepLckTransmitEnableChanged,
       "sleY1731MepOutOfServiceChanged": sleY1731MepOutOfServiceChanged,
       "sleY1731MepDlmEnableChanged": sleY1731MepDlmEnableChanged,
       "sleY1731MepTransmitLbmFinished": sleY1731MepTransmitLbmFinished,
       "sleY1731MepTransmitLtmFinished": sleY1731MepTransmitLtmFinished,
       "sleY1731MepTransmitTstLbmFinished": sleY1731MepTransmitTstLbmFinished,
       "sleY1731MepTransmitTmLbmFinished": sleY1731MepTransmitTmLbmFinished,
       "sleY1731MepTransmitTstFinished": sleY1731MepTransmitTstFinished,
       "sleY1731MepReceiveTstFinished": sleY1731MepReceiveTstFinished,
       "sleY1731MepTransmitTmTstFinished": sleY1731MepTransmitTmTstFinished,
       "sleY1731MepReceiveTmTstFinished": sleY1731MepReceiveTmTstFinished,
       "sleY1731MepTransmitLmmFinished": sleY1731MepTransmitLmmFinished,
       "sleY1731MepTransmit1dmFinished": sleY1731MepTransmit1dmFinished,
       "sleY1731MepReceive1dmFinished": sleY1731MepReceive1dmFinished,
       "sleY1731MepTransmitDmmFinished": sleY1731MepTransmitDmmFinished,
       "sleY1731MepPmEnableChanged": sleY1731MepPmEnableChanged,
       "sleY1731MepRllcfChanged": sleY1731MepRllcfChanged,
       "sleY1731Mip": sleY1731Mip,
       "sleY1731MipTable": sleY1731MipTable,
       "sleY1731MipEntry": sleY1731MipEntry,
       "sleY1731MipPort": sleY1731MipPort,
       "sleY1731MipLevel": sleY1731MipLevel,
       "sleY1731MipType": sleY1731MipType,
       "sleY1731MipControl": sleY1731MipControl,
       "sleY1731MipControlRequest": sleY1731MipControlRequest,
       "sleY1731MipControlStatus": sleY1731MipControlStatus,
       "sleY1731MipControlTimer": sleY1731MipControlTimer,
       "sleY1731MipControlTimeStamp": sleY1731MipControlTimeStamp,
       "sleY1731MipControlReqResult": sleY1731MipControlReqResult,
       "sleY1731MipControlPort": sleY1731MipControlPort,
       "sleY1731MipControlLevel": sleY1731MipControlLevel,
       "sleY1731MipNotification": sleY1731MipNotification,
       "sleY1731MipCreated": sleY1731MipCreated,
       "sleY1731MipDeleted": sleY1731MipDeleted,
       "sleY1731Xcheck": sleY1731Xcheck,
       "sleY1731XcheckTable": sleY1731XcheckTable,
       "sleY1731XcheckEntry": sleY1731XcheckEntry,
       "sleY1731XcheckMepIdentifier": sleY1731XcheckMepIdentifier,
       "sleY1731XcheckMepState": sleY1731XcheckMepState,
       "sleY1731XcheckControl": sleY1731XcheckControl,
       "sleY1731XcheckControlRequest": sleY1731XcheckControlRequest,
       "sleY1731XcheckControlStatus": sleY1731XcheckControlStatus,
       "sleY1731XcheckControlTimer": sleY1731XcheckControlTimer,
       "sleY1731XcheckControlTimeStamp": sleY1731XcheckControlTimeStamp,
       "sleY1731XcheckControlReqResult": sleY1731XcheckControlReqResult,
       "sleY1731XcheckControlMepIdentifier": sleY1731XcheckControlMepIdentifier,
       "sleY1731XcheckControlMegIndex": sleY1731XcheckControlMegIndex,
       "sleY1731XcheckNotification": sleY1731XcheckNotification,
       "sleY1731XcheckMepCreated": sleY1731XcheckMepCreated,
       "sleY1731XcheckMepDeleted": sleY1731XcheckMepDeleted,
       "sleY1731CcMac": sleY1731CcMac,
       "sleY1731CcMacTable": sleY1731CcMacTable,
       "sleY1731CcMacEntry": sleY1731CcMacEntry,
       "sleY1731CcMacAddress": sleY1731CcMacAddress,
       "sleY1731CcMacControl": sleY1731CcMacControl,
       "sleY1731CcMacControlRequest": sleY1731CcMacControlRequest,
       "sleY1731CcMacControlStatus": sleY1731CcMacControlStatus,
       "sleY1731CcMacControlTimer": sleY1731CcMacControlTimer,
       "sleY1731CcMacControlTimeStamp": sleY1731CcMacControlTimeStamp,
       "sleY1731CcMacControlReqResult": sleY1731CcMacControlReqResult,
       "sleY1731CcMacControlMegIndex": sleY1731CcMacControlMegIndex,
       "sleY1731CcMacControlMepIdentifier": sleY1731CcMacControlMepIdentifier,
       "sleY1731CcMacControlAddress": sleY1731CcMacControlAddress,
       "sleY1731CcMacNotification": sleY1731CcMacNotification,
       "sleY1731CcMacCreated": sleY1731CcMacCreated,
       "sleY1731CcMacDeleted": sleY1731CcMacDeleted,
       "sleY1731AisMac": sleY1731AisMac,
       "sleY1731AisMacTable": sleY1731AisMacTable,
       "sleY1731AisMacEntry": sleY1731AisMacEntry,
       "sleY1731AisMacAddress": sleY1731AisMacAddress,
       "sleY1731AisMacControl": sleY1731AisMacControl,
       "sleY1731AisMacControlRequest": sleY1731AisMacControlRequest,
       "sleY1731AisMacControlStatus": sleY1731AisMacControlStatus,
       "sleY1731AisMacControlTimer": sleY1731AisMacControlTimer,
       "sleY1731AisMacControlTimeStamp": sleY1731AisMacControlTimeStamp,
       "sleY1731AisMacControlReqResult": sleY1731AisMacControlReqResult,
       "sleY1731AisMacControlMegIndex": sleY1731AisMacControlMegIndex,
       "sleY1731AisMacControlMepIdentifier": sleY1731AisMacControlMepIdentifier,
       "sleY1731AisMacControlAddress": sleY1731AisMacControlAddress,
       "sleY1731AisMacNotification": sleY1731AisMacNotification,
       "sleY1731AisMacCreated": sleY1731AisMacCreated,
       "sleY1731AisMacDeleted": sleY1731AisMacDeleted,
       "sleY1731LckMac": sleY1731LckMac,
       "sleY1731LckMacTable": sleY1731LckMacTable,
       "sleY1731LckMacEntry": sleY1731LckMacEntry,
       "sleY1731LckMacAddress": sleY1731LckMacAddress,
       "sleY1731LckMacControl": sleY1731LckMacControl,
       "sleY1731LckMacControlRequest": sleY1731LckMacControlRequest,
       "sleY1731LckMacControlStatus": sleY1731LckMacControlStatus,
       "sleY1731LckMacControlTimer": sleY1731LckMacControlTimer,
       "sleY1731LckMacControlTimeStamp": sleY1731LckMacControlTimeStamp,
       "sleY1731LckMacControlReqResult": sleY1731LckMacControlReqResult,
       "sleY1731LckMacControlMegIndex": sleY1731LckMacControlMegIndex,
       "sleY1731LckMacControlMepIdentifier": sleY1731LckMacControlMepIdentifier,
       "sleY1731LckMacControlAddress": sleY1731LckMacControlAddress,
       "sleY1731LckMacNotification": sleY1731LckMacNotification,
       "sleY1731LckMacCreated": sleY1731LckMacCreated,
       "sleY1731LckMacDeleted": sleY1731LckMacDeleted,
       "sleY1731Rmep": sleY1731Rmep,
       "sleY1731RmepTable": sleY1731RmepTable,
       "sleY1731RmepEntry": sleY1731RmepEntry,
       "sleY1731RmepIdentifier": sleY1731RmepIdentifier,
       "sleY1731RmepState": sleY1731RmepState,
       "sleY1731RmepFailedOkTime": sleY1731RmepFailedOkTime,
       "sleY1731RmepMacAddress": sleY1731RmepMacAddress,
       "sleY1731RmepIfIndex": sleY1731RmepIfIndex,
       "sleY1731RmepRdi": sleY1731RmepRdi,
       "sleY1731RmepLoc": sleY1731RmepLoc,
       "sleY1731RmepReceiveTstCount": sleY1731RmepReceiveTstCount,
       "sleY1731RmepReceiveTstOutOfOrder": sleY1731RmepReceiveTstOutOfOrder,
       "sleY1731RmepReceiveTstBitError": sleY1731RmepReceiveTstBitError,
       "sleY1731RmepReceiveTstCrcError": sleY1731RmepReceiveTstCrcError,
       "sleY1731RmepReceiveTmTstCount": sleY1731RmepReceiveTmTstCount,
       "sleY1731RmepReceiveTmTstLostId": sleY1731RmepReceiveTmTstLostId,
       "sleY1731RmepLmrFrameLossNearMin": sleY1731RmepLmrFrameLossNearMin,
       "sleY1731RmepLmrFrameLossNearMax": sleY1731RmepLmrFrameLossNearMax,
       "sleY1731RmepLmrFrameLossNearSum": sleY1731RmepLmrFrameLossNearSum,
       "sleY1731RmepLmrFrameLossFarMin": sleY1731RmepLmrFrameLossFarMin,
       "sleY1731RmepLmrFrameLossFarMax": sleY1731RmepLmrFrameLossFarMax,
       "sleY1731RmepLmrFrameLossFarSum": sleY1731RmepLmrFrameLossFarSum,
       "sleY1731RmepReceive1dmCount": sleY1731RmepReceive1dmCount,
       "sleY1731Rmep1dmFrameDelayMin": sleY1731Rmep1dmFrameDelayMin,
       "sleY1731Rmep1dmFrameDelayMax": sleY1731Rmep1dmFrameDelayMax,
       "sleY1731Rmep1dmFrameDelayAvg": sleY1731Rmep1dmFrameDelayAvg,
       "sleY1731Rmep1dmFrameDelayVar": sleY1731Rmep1dmFrameDelayVar,
       "sleY1731RmepReceiveDmrCount": sleY1731RmepReceiveDmrCount,
       "sleY1731RmepDmrFrameDelayMin": sleY1731RmepDmrFrameDelayMin,
       "sleY1731RmepDmrFrameDelayMax": sleY1731RmepDmrFrameDelayMax,
       "sleY1731RmepDmrFrameDelayAvg": sleY1731RmepDmrFrameDelayAvg,
       "sleY1731RmepDmrFrameDelayVar": sleY1731RmepDmrFrameDelayVar,
       "sleY1731RmepLmrFrameLossNearRatio": sleY1731RmepLmrFrameLossNearRatio,
       "sleY1731RmepLmrFrameLossNearAvgRatio": sleY1731RmepLmrFrameLossNearAvgRatio,
       "sleY1731RmepLmrFrameLossFarRatio": sleY1731RmepLmrFrameLossFarRatio,
       "sleY1731RmepLmrFrameLossFarAvgRatio": sleY1731RmepLmrFrameLossFarAvgRatio,
       "sleY1731RmepControl": sleY1731RmepControl,
       "sleY1731RmepControlRequest": sleY1731RmepControlRequest,
       "sleY1731RMepControlStatus": sleY1731RMepControlStatus,
       "sleY1731RmepControlTimer": sleY1731RmepControlTimer,
       "sleY1731RmepControlTimeStamp": sleY1731RmepControlTimeStamp,
       "sleY1731RmepControlReqResult": sleY1731RmepControlReqResult,
       "sleY1731RmepControlIdentifier": sleY1731RmepControlIdentifier,
       "sleY1731RmepControlMegIndex": sleY1731RmepControlMegIndex,
       "sleY1731RmepControlIfIndex": sleY1731RmepControlIfIndex,
       "sleY1731RmepNotification": sleY1731RmepNotification,
       "sleY1731RmepCreated": sleY1731RmepCreated,
       "sleY1731RmepDeleted": sleY1731RmepDeleted,
       "sleY1731LbrMcast": sleY1731LbrMcast,
       "sleY1731LbrMcastTable": sleY1731LbrMcastTable,
       "sleY1731LbrMcastEntry": sleY1731LbrMcastEntry,
       "sleY1731LbrReceiveOrder": sleY1731LbrReceiveOrder,
       "sleY1731LbrRemoteMacAddress": sleY1731LbrRemoteMacAddress,
       "sleY1731LbrUcast": sleY1731LbrUcast,
       "sleY1731LbrUcastTable": sleY1731LbrUcastTable,
       "sleY1731LbrUcastEntry": sleY1731LbrUcastEntry,
       "sleY1731LbrTransId": sleY1731LbrTransId,
       "sleY1731LbrRoundTripTime": sleY1731LbrRoundTripTime,
       "sleY1731Ltr": sleY1731Ltr,
       "sleY1731LtrTable": sleY1731LtrTable,
       "sleY1731LtrEntry": sleY1731LtrEntry,
       "sleY1731LtrSeqNumber": sleY1731LtrSeqNumber,
       "sleY1731LtrReceiveOrder": sleY1731LtrReceiveOrder,
       "sleY1731LtrRoundTripTime": sleY1731LtrRoundTripTime,
       "sleY1731LtrTtl": sleY1731LtrTtl,
       "sleY1731LtrForwarded": sleY1731LtrForwarded,
       "sleY1731LtrTerminalMep": sleY1731LtrTerminalMep,
       "sleY1731LtrLastEgressIdentifier": sleY1731LtrLastEgressIdentifier,
       "sleY1731LtrNextEgressIdentifier": sleY1731LtrNextEgressIdentifier,
       "sleY1731LtrRelay": sleY1731LtrRelay,
       "sleY1731LtrIngress": sleY1731LtrIngress,
       "sleY1731LtrIngressMac": sleY1731LtrIngressMac,
       "sleY1731LtrIngressPort": sleY1731LtrIngressPort,
       "sleY1731LtrEgress": sleY1731LtrEgress,
       "sleY1731LtrEgressMac": sleY1731LtrEgressMac,
       "sleY1731LtrEgressPort": sleY1731LtrEgressPort,
       "sleY1731ConfigError": sleY1731ConfigError,
       "sleY1731ConfigErrorTable": sleY1731ConfigErrorTable,
       "sleY1731ConfigErrorEntry": sleY1731ConfigErrorEntry,
       "sleY1731ConfigErrorVid": sleY1731ConfigErrorVid,
       "sleY1731ConfigErrorIfIndex": sleY1731ConfigErrorIfIndex,
       "sleY1731ConfigErrorType": sleY1731ConfigErrorType,
       "sleY1731MipCcdb": sleY1731MipCcdb,
       "sleY1731MipCcdbTable": sleY1731MipCcdbTable,
       "sleY1731MipCcdbEntry": sleY1731MipCcdbEntry,
       "sleY1731MipCcdbIndex": sleY1731MipCcdbIndex,
       "sleY1731MipCcdbVlanId": sleY1731MipCcdbVlanId,
       "sleY1731MipCcdbMacAddr": sleY1731MipCcdbMacAddr,
       "sleY1731MipCcdbPort": sleY1731MipCcdbPort,
       "sleY1731MipCcdbKeepTime": sleY1731MipCcdbKeepTime,
       "sleY1731UplinkRedundancy": sleY1731UplinkRedundancy,
       "sleY1731URTable": sleY1731URTable,
       "sleY1731UREntry": sleY1731UREntry,
       "sleY1731URMegIndex": sleY1731URMegIndex,
       "sleY1731URMegName": sleY1731URMegName,
       "sleY1731URDedicatedVlan": sleY1731URDedicatedVlan,
       "sleY1731UREnableStatus": sleY1731UREnableStatus,
       "sleY1731URConnectivityCheckMeg": sleY1731URConnectivityCheckMeg,
       "sleY1731URPrimaryMepId": sleY1731URPrimaryMepId,
       "sleY1731URSecondaryMepId": sleY1731URSecondaryMepId,
       "sleY1731URControlVlan": sleY1731URControlVlan,
       "sleY1731URNodeConf": sleY1731URNodeConf,
       "sleY1731URNodeConfPortNum": sleY1731URNodeConfPortNum,
       "sleY1731URNodeConfPortStatus": sleY1731URNodeConfPortStatus,
       "sleY1731URNonRevertive": sleY1731URNonRevertive,
       "sleY1731URTrustMemberCount": sleY1731URTrustMemberCount,
       "sleY1731URWaitToRestore": sleY1731URWaitToRestore,
       "sleY1731URForceSwitch": sleY1731URForceSwitch,
       "sleY1731URSFCondition": sleY1731URSFCondition,
       "sleY1731URTrafficVlan": sleY1731URTrafficVlan,
       "sleY1731URState": sleY1731URState,
       "sleY1731URManualSwitch": sleY1731URManualSwitch,
       "sleY1731URControl": sleY1731URControl,
       "sleY1731URControlRequest": sleY1731URControlRequest,
       "sleY1731URControlStatus": sleY1731URControlStatus,
       "sleY1731URControlTimer": sleY1731URControlTimer,
       "sleY1731URControlTimeStamp": sleY1731URControlTimeStamp,
       "sleY1731URControlReqResult": sleY1731URControlReqResult,
       "sleY1731URControlMegIndex": sleY1731URControlMegIndex,
       "sleY1731URControlMegName": sleY1731URControlMegName,
       "sleY1731URControlDedicatedVlan": sleY1731URControlDedicatedVlan,
       "sleY1731URControlEnableStatus": sleY1731URControlEnableStatus,
       "sleY1731URControlConnectivityCheckMeg": sleY1731URControlConnectivityCheckMeg,
       "sleY1731URControlPrimaryMepId": sleY1731URControlPrimaryMepId,
       "sleY1731URControlSecondaryMepId": sleY1731URControlSecondaryMepId,
       "sleY1731URControlControlVlan": sleY1731URControlControlVlan,
       "sleY1731URControlNodeConf": sleY1731URControlNodeConf,
       "sleY1731URControlNodeConfPortNum": sleY1731URControlNodeConfPortNum,
       "sleY1731URControlNonRevertive": sleY1731URControlNonRevertive,
       "sleY1731URControlTrustMemberCount": sleY1731URControlTrustMemberCount,
       "sleY1731URControlWaitToRestore": sleY1731URControlWaitToRestore,
       "sleY1731URControlForceSwitch": sleY1731URControlForceSwitch,
       "sleY1731URControlSFCondition": sleY1731URControlSFCondition,
       "sleY1731URControlTrafficVlan": sleY1731URControlTrafficVlan,
       "sleY1731URControlManualSwitch": sleY1731URControlManualSwitch,
       "sleY1731URNotification": sleY1731URNotification,
       "sleY1731URDedicatedVlanChanged": sleY1731URDedicatedVlanChanged,
       "sleY1731UREnableStatusChanged": sleY1731UREnableStatusChanged,
       "sleY1731URCCPrimaryMepIdChanged": sleY1731URCCPrimaryMepIdChanged,
       "sleY1731URCCPrimaryMepIdCleared": sleY1731URCCPrimaryMepIdCleared,
       "sleY1731URCCSecondaryMepIdChanged": sleY1731URCCSecondaryMepIdChanged,
       "sleY1731URCCSecondaryMepIdCleared": sleY1731URCCSecondaryMepIdCleared,
       "sleY1731URControlVlanChanged": sleY1731URControlVlanChanged,
       "sleY1731URControlVlanCleared": sleY1731URControlVlanCleared,
       "sleY1731URNodeConfChanged": sleY1731URNodeConfChanged,
       "sleY1731URNodeConfCleared": sleY1731URNodeConfCleared,
       "sleY1731URNonRevertiveChanged": sleY1731URNonRevertiveChanged,
       "sleY1731URTrustMemberCountChanged": sleY1731URTrustMemberCountChanged,
       "sleY1731URTrustMemberCountCleared": sleY1731URTrustMemberCountCleared,
       "sleY1731URWaitToRestoreChanged": sleY1731URWaitToRestoreChanged,
       "sleY1731URWaitToRestoreCleared": sleY1731URWaitToRestoreCleared,
       "sleY1731URForceSwitchChanged": sleY1731URForceSwitchChanged,
       "sleY1731URManualSwitchChanged": sleY1731URManualSwitchChanged,
       "sleY1731URSFConditionChanged": sleY1731URSFConditionChanged,
       "sleY1731URTrafficVlanChanged": sleY1731URTrafficVlanChanged,
       "sleY1731URTrafficVlanCleared": sleY1731URTrafficVlanCleared,
       "sleY1731LocRefMep": sleY1731LocRefMep,
       "sleY1731LocRefMepTable": sleY1731LocRefMepTable,
       "sleY1731LocRefMepEntry": sleY1731LocRefMepEntry,
       "sleY1731LRMepIndex": sleY1731LRMepIndex,
       "sleY1731LRMepDMegIndex": sleY1731LRMepDMegIndex,
       "sleY1731LRMepDMepIdentifier": sleY1731LRMepDMepIdentifier,
       "sleY1731LRMepDRmepIdentifier": sleY1731LRMepDRmepIdentifier,
       "sleY1731LocRefMepControl": sleY1731LocRefMepControl,
       "sleY1731LRMepControlRequest": sleY1731LRMepControlRequest,
       "sleY1731LRMepControlStatus": sleY1731LRMepControlStatus,
       "sleY1731LRMepControlTimer": sleY1731LRMepControlTimer,
       "sleY1731LRMepControlTimeStamp": sleY1731LRMepControlTimeStamp,
       "sleY1731LRMepControlReqResult": sleY1731LRMepControlReqResult,
       "sleY1731LRMepControlMegIndex": sleY1731LRMepControlMegIndex,
       "sleY1731LRMepControlMepIdentifier": sleY1731LRMepControlMepIdentifier,
       "sleY1731LRMepControlRmepIdentifier": sleY1731LRMepControlRmepIdentifier,
       "sleY1731LRMepControlDMegIndex": sleY1731LRMepControlDMegIndex,
       "sleY1731LRMepControlDMepIdentifier": sleY1731LRMepControlDMepIdentifier,
       "sleY1731LRMepControlDRmepIdentifier": sleY1731LRMepControlDRmepIdentifier,
       "sleY1731LocRefMepNotification": sleY1731LocRefMepNotification,
       "sleY1731LRMepCreated": sleY1731LRMepCreated,
       "sleY1731LRMEPDeleted": sleY1731LRMEPDeleted,
       "sleCfmOam": sleCfmOam,
       "sleCfmBase": sleCfmBase,
       "sleCfmBaseGroup": sleCfmBaseGroup,
       "sleCfmEnable": sleCfmEnable,
       "sleCfmLtrCacheHoldTime": sleCfmLtrCacheHoldTime,
       "sleCfmLtrCacheSize": sleCfmLtrCacheSize,
       "sleCfmSnmpServerTraps": sleCfmSnmpServerTraps,
       "sleCfmXcheckStartDelay": sleCfmXcheckStartDelay,
       "sleCfmBaseControl": sleCfmBaseControl,
       "sleCfmBaseControlRequest": sleCfmBaseControlRequest,
       "sleCfmBaseControlStatus": sleCfmBaseControlStatus,
       "sleCfmBaseControlTimer": sleCfmBaseControlTimer,
       "sleCfmBaseControlTimeStamp": sleCfmBaseControlTimeStamp,
       "sleCfmBaseControlReqResult": sleCfmBaseControlReqResult,
       "sleCfmBaseControlEnable": sleCfmBaseControlEnable,
       "sleCfmBaseControlLtrCacheHoldTime": sleCfmBaseControlLtrCacheHoldTime,
       "sleCfmBaseControlLtrCacheSize": sleCfmBaseControlLtrCacheSize,
       "sleCfmBaseControlSnmpServerTraps": sleCfmBaseControlSnmpServerTraps,
       "sleCfmBaseControlXcheckStartDelay": sleCfmBaseControlXcheckStartDelay,
       "sleCfmBaseControlTrunkIndex": sleCfmBaseControlTrunkIndex,
       "sleCfmBaseControlTrunkMdName": sleCfmBaseControlTrunkMdName,
       "sleCfmBaseControlTrunkMaVid": sleCfmBaseControlTrunkMaVid,
       "sleCfmBaseNotification": sleCfmBaseNotification,
       "sleCfmEnableChanged": sleCfmEnableChanged,
       "sleCfmLtrCacheProfileChanged": sleCfmLtrCacheProfileChanged,
       "sleCfmSnmpServerTrapsChanged": sleCfmSnmpServerTrapsChanged,
       "sleCfmXcheckStartDelayChanged": sleCfmXcheckStartDelayChanged,
       "sleCfmMipCcdbDestroyed": sleCfmMipCcdbDestroyed,
       "sleCfmLtrCacheDestroyed": sleCfmLtrCacheDestroyed,
       "sleCfmTrunkPortCreated": sleCfmTrunkPortCreated,
       "sleCfmTrunkPortDeleted": sleCfmTrunkPortDeleted,
       "sleCfmTrunkTable": sleCfmTrunkTable,
       "sleCfmTrunkEntry": sleCfmTrunkEntry,
       "sleCfmTrunkIndex": sleCfmTrunkIndex,
       "sleCfmTrunkMdName": sleCfmTrunkMdName,
       "sleCfmTrunkMaVid": sleCfmTrunkMaVid,
       "sleCfmMd": sleCfmMd,
       "sleCfmMdTable": sleCfmMdTable,
       "sleCfmMdEntry": sleCfmMdEntry,
       "sleCfmMdIndex": sleCfmMdIndex,
       "sleCfmMdName": sleCfmMdName,
       "sleCfmMdLevel": sleCfmMdLevel,
       "sleCfmMdMepEnable": sleCfmMdMepEnable,
       "sleCfmMdCcEnable": sleCfmMdCcEnable,
       "sleCfmMdCcInterval": sleCfmMdCcInterval,
       "sleCfmMdCcPriority": sleCfmMdCcPriority,
       "sleCfmMdCcLossThreshold": sleCfmMdCcLossThreshold,
       "sleCfmMdCcHoldTime": sleCfmMdCcHoldTime,
       "sleCfmMdFaultPriority": sleCfmMdFaultPriority,
       "sleCfmMdFaultKeepTime": sleCfmMdFaultKeepTime,
       "sleCfmMdFaultClearTime": sleCfmMdFaultClearTime,
       "sleCfmMdXcheckEnable": sleCfmMdXcheckEnable,
       "sleCfmMdControl": sleCfmMdControl,
       "sleCfmMdControlRequest": sleCfmMdControlRequest,
       "sleCfmMdControlStatus": sleCfmMdControlStatus,
       "sleCfmMdControlTimer": sleCfmMdControlTimer,
       "sleCfmMdControlTimeStamp": sleCfmMdControlTimeStamp,
       "sleCfmMdControlReqResult": sleCfmMdControlReqResult,
       "sleCfmMdControlIndex": sleCfmMdControlIndex,
       "sleCfmMdControlName": sleCfmMdControlName,
       "sleCfmMdControlLevel": sleCfmMdControlLevel,
       "sleCfmMdControlMepEnable": sleCfmMdControlMepEnable,
       "sleCfmMdControlCcEnable": sleCfmMdControlCcEnable,
       "sleCfmMdControlCcInterval": sleCfmMdControlCcInterval,
       "sleCfmMdControlCcPriority": sleCfmMdControlCcPriority,
       "sleCfmMdControlCcLossThreshold": sleCfmMdControlCcLossThreshold,
       "sleCfmMdControlCcHoldTime": sleCfmMdControlCcHoldTime,
       "sleCfmMdControlFaultPriority": sleCfmMdControlFaultPriority,
       "sleCfmMdControlFaultKeepTime": sleCfmMdControlFaultKeepTime,
       "sleCfmMdControlFaultClearTime": sleCfmMdControlFaultClearTime,
       "sleCfmMdControlXcheckEnable": sleCfmMdControlXcheckEnable,
       "sleCfmMdNotification": sleCfmMdNotification,
       "sleCfmMdCreated": sleCfmMdCreated,
       "sleCfmMdDeleted": sleCfmMdDeleted,
       "sleCfmMdMepEnableChanged": sleCfmMdMepEnableChanged,
       "sleCfmMdCcEnableChanged": sleCfmMdCcEnableChanged,
       "sleCfmMdCcProfileChanged": sleCfmMdCcProfileChanged,
       "sleCfmMdFaultProfileChanged": sleCfmMdFaultProfileChanged,
       "sleCfmMdXcheckEnableChanged": sleCfmMdXcheckEnableChanged,
       "sleCfmMdErrorDestoryed": sleCfmMdErrorDestoryed,
       "sleCfmMdRmepDestoryed": sleCfmMdRmepDestoryed,
       "sleCfmMa": sleCfmMa,
       "sleCfmMaTable": sleCfmMaTable,
       "sleCfmMaEntry": sleCfmMaEntry,
       "sleCfmMaIndex": sleCfmMaIndex,
       "sleCfmMaName": sleCfmMaName,
       "sleCfmMaVid": sleCfmMaVid,
       "sleCfmMaMepEnable": sleCfmMaMepEnable,
       "sleCfmMaCcEnable": sleCfmMaCcEnable,
       "sleCfmMaCcInterval": sleCfmMaCcInterval,
       "sleCfmMaCcPriority": sleCfmMaCcPriority,
       "sleCfmMaCcLossThreshold": sleCfmMaCcLossThreshold,
       "sleCfmMaCcFaultPriority": sleCfmMaCcFaultPriority,
       "sleCfmMaCcFaultKeepTime": sleCfmMaCcFaultKeepTime,
       "sleCfmMaCcFaultClearTime": sleCfmMaCcFaultClearTime,
       "sleCfmMaXcheckEnable": sleCfmMaXcheckEnable,
       "sleCfmMaControl": sleCfmMaControl,
       "sleCfmMaControlRequest": sleCfmMaControlRequest,
       "sleCfmMaControlStatus": sleCfmMaControlStatus,
       "sleCfmMaControlTimer": sleCfmMaControlTimer,
       "sleCfmMaControlTimeStamp": sleCfmMaControlTimeStamp,
       "sleCfmMaControlReqResult": sleCfmMaControlReqResult,
       "sleCfmMaControlIndex": sleCfmMaControlIndex,
       "sleCfmMaControlName": sleCfmMaControlName,
       "sleCfmMaControlVid": sleCfmMaControlVid,
       "sleCfmMaControlMdIndex": sleCfmMaControlMdIndex,
       "sleCfmMaControlMepEnable": sleCfmMaControlMepEnable,
       "sleCfmMaControlCcEnable": sleCfmMaControlCcEnable,
       "sleCfmMaControlCcInterval": sleCfmMaControlCcInterval,
       "sleCfmMaControlCcPriority": sleCfmMaControlCcPriority,
       "sleCfmMaControlCcLossThreshold": sleCfmMaControlCcLossThreshold,
       "sleCfmMaControlFaultPriority": sleCfmMaControlFaultPriority,
       "sleCfmMaControlFaultKeepTime": sleCfmMaControlFaultKeepTime,
       "sleCfmMaControlFaultClearTime": sleCfmMaControlFaultClearTime,
       "sleCfmMaControlXcheckEnable": sleCfmMaControlXcheckEnable,
       "sleCfmMaNotification": sleCfmMaNotification,
       "sleCfmMaCreated": sleCfmMaCreated,
       "sleCfmMaDeleted": sleCfmMaDeleted,
       "sleCfmMaMepEnableChanged": sleCfmMaMepEnableChanged,
       "sleCfmMaCcEnableChanged": sleCfmMaCcEnableChanged,
       "sleCfmMaCcProfileChanged": sleCfmMaCcProfileChanged,
       "sleCfmMaFaultProfileChanged": sleCfmMaFaultProfileChanged,
       "sleCfmMaXcheckEnableChanged": sleCfmMaXcheckEnableChanged,
       "sleCfmMep": sleCfmMep,
       "sleCfmMepTable": sleCfmMepTable,
       "sleCfmMepEntry": sleCfmMepEntry,
       "sleCfmMepIdentifier": sleCfmMepIdentifier,
       "sleCfmMepIfIndex": sleCfmMepIfIndex,
       "sleCfmMepDirection": sleCfmMepDirection,
       "sleCfmMepEnable": sleCfmMepEnable,
       "sleCfmMepFngState": sleCfmMepFngState,
       "sleCfmMepCcEnable": sleCfmMepCcEnable,
       "sleCfmMepMacAddress": sleCfmMepMacAddress,
       "sleCfmMepCcPriority": sleCfmMepCcPriority,
       "sleCfmMepFaultPriority": sleCfmMepFaultPriority,
       "sleCfmMepFaultKeepTime": sleCfmMepFaultKeepTime,
       "sleCfmMepFaultClearTime": sleCfmMepFaultClearTime,
       "sleCfmMepHighestPrDefect": sleCfmMepHighestPrDefect,
       "sleCfmMepDefects": sleCfmMepDefects,
       "sleCfmMepCciSentCcms": sleCfmMepCciSentCcms,
       "sleCfmMepNextLbmTransId": sleCfmMepNextLbmTransId,
       "sleCfmMepLbrIn": sleCfmMepLbrIn,
       "sleCfmMepLbrInOutOfOrder": sleCfmMepLbrInOutOfOrder,
       "sleCfmMepLtmNextSeqNumber": sleCfmMepLtmNextSeqNumber,
       "sleCfmMepUnexpLtrIn": sleCfmMepUnexpLtrIn,
       "sleCfmMepControl": sleCfmMepControl,
       "sleCfmMepControlRequest": sleCfmMepControlRequest,
       "sleCfmMepControlStatus": sleCfmMepControlStatus,
       "sleCfmMepControlTimer": sleCfmMepControlTimer,
       "sleCfmMepControlTimeStamp": sleCfmMepControlTimeStamp,
       "sleCfmMepControlReqResult": sleCfmMepControlReqResult,
       "sleCfmMepControlIdentifier": sleCfmMepControlIdentifier,
       "sleCfmMepControlMdIndex": sleCfmMepControlMdIndex,
       "sleCfmMepControlMaIndex": sleCfmMepControlMaIndex,
       "sleCfmMepControlIfIndex": sleCfmMepControlIfIndex,
       "sleCfmMepControlDirection": sleCfmMepControlDirection,
       "sleCfmMepControlEnable": sleCfmMepControlEnable,
       "sleCfmMepControlCcEnable": sleCfmMepControlCcEnable,
       "sleCfmMepControlCcPriority": sleCfmMepControlCcPriority,
       "sleCfmMepControlFaultPriority": sleCfmMepControlFaultPriority,
       "sleCfmMepControlFaultKeepTime": sleCfmMepControlFaultKeepTime,
       "sleCfmMepControlFaultClearTime": sleCfmMepControlFaultClearTime,
       "sleCfmMepControlTransmitLbmDestMacAddress": sleCfmMepControlTransmitLbmDestMacAddress,
       "sleCfmMepControlTransmitLbmDestMepId": sleCfmMepControlTransmitLbmDestMepId,
       "sleCfmMepControlTransmitLbmDestIsMepId": sleCfmMepControlTransmitLbmDestIsMepId,
       "sleCfmMepControlTransmitLbmCount": sleCfmMepControlTransmitLbmCount,
       "sleCfmMepControlTransmitLbmInterval": sleCfmMepControlTransmitLbmInterval,
       "sleCfmMepControlTransmitLbmTimeout": sleCfmMepControlTransmitLbmTimeout,
       "sleCfmMepControlTransmitLbmPriority": sleCfmMepControlTransmitLbmPriority,
       "sleCfmMepControlTransmitLtmTargetMacAddress": sleCfmMepControlTransmitLtmTargetMacAddress,
       "sleCfmMepControlTransmitLtmTargetMepId": sleCfmMepControlTransmitLtmTargetMepId,
       "sleCfmMepControlTransmitLtmTargetIsMepId": sleCfmMepControlTransmitLtmTargetIsMepId,
       "sleCfmMepControlTransmitLtmFlags": sleCfmMepControlTransmitLtmFlags,
       "sleCfmMepControlTransmitLtmTtl": sleCfmMepControlTransmitLtmTtl,
       "sleCfmMepNotification": sleCfmMepNotification,
       "sleCfmMepCreated": sleCfmMepCreated,
       "sleCfmMepDeleted": sleCfmMepDeleted,
       "sleCfmMepEnableChanged": sleCfmMepEnableChanged,
       "sleCfmMepCcEnableChanged": sleCfmMepCcEnableChanged,
       "sleCfmMepCcProfileChanged": sleCfmMepCcProfileChanged,
       "sleCfmMepFaultProfileChanged": sleCfmMepFaultProfileChanged,
       "sleCfmMip": sleCfmMip,
       "sleCfmMipTable": sleCfmMipTable,
       "sleCfmMipEntry": sleCfmMipEntry,
       "sleCfmMipPort": sleCfmMipPort,
       "sleCfmMipLevel": sleCfmMipLevel,
       "sleCfmMipType": sleCfmMipType,
       "sleCfmMipControl": sleCfmMipControl,
       "sleCfmMipControlRequest": sleCfmMipControlRequest,
       "sleCfmMipControlStatus": sleCfmMipControlStatus,
       "sleCfmMipControlTimer": sleCfmMipControlTimer,
       "sleCfmMipControlTimeStamp": sleCfmMipControlTimeStamp,
       "sleCfmMipControlReqResult": sleCfmMipControlReqResult,
       "sleCfmMipControlPort": sleCfmMipControlPort,
       "sleCfmMipControlLevel": sleCfmMipControlLevel,
       "sleCfmMipNotification": sleCfmMipNotification,
       "sleCfmMipCreated": sleCfmMipCreated,
       "sleCfmMipDeleted": sleCfmMipDeleted,
       "sleCfmXcheck": sleCfmXcheck,
       "sleCfmXcheckTable": sleCfmXcheckTable,
       "sleCfmXcheckEntry": sleCfmXcheckEntry,
       "sleCfmXcheckMepIdentifier": sleCfmXcheckMepIdentifier,
       "sleCfmXcheckMepState": sleCfmXcheckMepState,
       "sleCfmXcheckControl": sleCfmXcheckControl,
       "sleCfmXcheckControlRequest": sleCfmXcheckControlRequest,
       "sleCfmXcheckControlStatus": sleCfmXcheckControlStatus,
       "sleCfmXcheckControlTimer": sleCfmXcheckControlTimer,
       "sleCfmXcheckControlTimeStamp": sleCfmXcheckControlTimeStamp,
       "sleCfmXcheckControlReqResult": sleCfmXcheckControlReqResult,
       "sleCfmXcheckControlMepIdentifier": sleCfmXcheckControlMepIdentifier,
       "sleCfmXcheckControlMdIndex": sleCfmXcheckControlMdIndex,
       "sleCfmXcheckControlMaIndex": sleCfmXcheckControlMaIndex,
       "sleCfmXcheckNotification": sleCfmXcheckNotification,
       "sleCfmXcheckMepCreated": sleCfmXcheckMepCreated,
       "sleCfmXcheckMepDeleted": sleCfmXcheckMepDeleted,
       "sleCfmRmep": sleCfmRmep,
       "sleCfmRmepTable": sleCfmRmepTable,
       "sleCfmRmepEntry": sleCfmRmepEntry,
       "sleCfmRmepIdentifier": sleCfmRmepIdentifier,
       "sleCfmRmepState": sleCfmRmepState,
       "sleCfmRmepMacAddress": sleCfmRmepMacAddress,
       "sleCfmRmepIfIndex": sleCfmRmepIfIndex,
       "sleCfmRmepRdi": sleCfmRmepRdi,
       "sleCfmRmepPortStatus": sleCfmRmepPortStatus,
       "sleCfmRmepInterfaceStatus": sleCfmRmepInterfaceStatus,
       "sleCfmLtr": sleCfmLtr,
       "sleCfmLtrTable": sleCfmLtrTable,
       "sleCfmLtrEntry": sleCfmLtrEntry,
       "sleCfmLtrSeqNumber": sleCfmLtrSeqNumber,
       "sleCfmLtrReceiveOrder": sleCfmLtrReceiveOrder,
       "sleCfmLtrTtl": sleCfmLtrTtl,
       "sleCfmLtrForwarded": sleCfmLtrForwarded,
       "sleCfmLtrTerminalMep": sleCfmLtrTerminalMep,
       "sleCfmLtrLastEgressIdentifier": sleCfmLtrLastEgressIdentifier,
       "sleCfmLtrNextEgressIdentifier": sleCfmLtrNextEgressIdentifier,
       "sleCfmLtrRelay": sleCfmLtrRelay,
       "sleCfmLtrIngress": sleCfmLtrIngress,
       "sleCfmLtrIngressMac": sleCfmLtrIngressMac,
       "sleCfmLtrIngressPort": sleCfmLtrIngressPort,
       "sleCfmLtrEgress": sleCfmLtrEgress,
       "sleCfmLtrEgressMac": sleCfmLtrEgressMac,
       "sleCfmLtrEgressPort": sleCfmLtrEgressPort,
       "sleCfmConfigError": sleCfmConfigError,
       "sleCfmConfigErrorTable": sleCfmConfigErrorTable,
       "sleCfmConfigErrorEntry": sleCfmConfigErrorEntry,
       "sleCfmConfigErrorVid": sleCfmConfigErrorVid,
       "sleCfmConfigErrorIfIndex": sleCfmConfigErrorIfIndex,
       "sleCfmConfigErrorType": sleCfmConfigErrorType,
       "sleCfmMipCcdb": sleCfmMipCcdb,
       "sleCfmMipCcdbTable": sleCfmMipCcdbTable,
       "sleCfmMipCcdbEntry": sleCfmMipCcdbEntry,
       "sleCfmMipCcdbIndex": sleCfmMipCcdbIndex,
       "sleCfmMipCcdbVlanId": sleCfmMipCcdbVlanId,
       "sleCfmMipCcdbMacAddr": sleCfmMipCcdbMacAddr,
       "sleCfmMipCcdbPort": sleCfmMipCcdbPort,
       "sleCfmMipCcdbKeepTime": sleCfmMipCcdbKeepTime,
       "sleEMLog": sleEMLog,
       "sleEMLogInfo": sleEMLogInfo,
       "sleEMLogDisableStatus": sleEMLogDisableStatus,
       "sleEMLogAction": sleEMLogAction,
       "sleEMLogInterval": sleEMLogInterval,
       "sleEMLogNAKLockStatus": sleEMLogNAKLockStatus,
       "sleEMLogNakCompensate": sleEMLogNakCompensate,
       "sleEMLogRecoverActionMemLow": sleEMLogRecoverActionMemLow,
       "sleEMLogRecoverActionNak": sleEMLogRecoverActionNak,
       "sleEMLogControl": sleEMLogControl,
       "sleEMLogControlRequest": sleEMLogControlRequest,
       "sleEMLogControlStatus": sleEMLogControlStatus,
       "sleEMLogControlTimer": sleEMLogControlTimer,
       "sleEMLogControlTimeStamp": sleEMLogControlTimeStamp,
       "sleEMLogControlReqResult": sleEMLogControlReqResult,
       "sleEMLogControlDisableStatus": sleEMLogControlDisableStatus,
       "sleEMLogControlAction": sleEMLogControlAction,
       "sleEMLogControlInterval": sleEMLogControlInterval,
       "sleEMLogControlNAKLockStatus": sleEMLogControlNAKLockStatus,
       "sleEMLogControlNAKCompensate": sleEMLogControlNAKCompensate,
       "sleEMLogControlRecoverActionMemLow": sleEMLogControlRecoverActionMemLow,
       "sleEMLogControlRecoverActionNAK": sleEMLogControlRecoverActionNAK,
       "sleEMLogNotification": sleEMLogNotification,
       "sleEMLogDisableStatusChanged": sleEMLogDisableStatusChanged,
       "sleEMLogActionChanged": sleEMLogActionChanged,
       "sleEMLogIntervalChanged": sleEMLogIntervalChanged,
       "sleEMLogNAKLockChanged": sleEMLogNAKLockChanged,
       "sleEMLogNAKCompensateChanged": sleEMLogNAKCompensateChanged,
       "sleEMLogRecoverActionMemLowChanged": sleEMLogRecoverActionMemLowChanged,
       "sleEMLogRecoverActionNAKChanged": sleEMLogRecoverActionNAKChanged,
       "sleEMLogDefectInfo": sleEMLogDefectInfo,
       "sleEMLogDefectCPUHigh": sleEMLogDefectCPUHigh,
       "sleEMLogTemperHigh": sleEMLogTemperHigh,
       "sleEMLogTemperLow": sleEMLogTemperLow,
       "sleEMLogMemLow": sleEMLogMemLow,
       "sleEMLogFanFail": sleEMLogFanFail,
       "sleEMLogPhyCRCFail": sleEMLogPhyCRCFail,
       "sleEMLogPhyDetectFail": sleEMLogPhyDetectFail,
       "sleEMLogSFUMateInitFail": sleEMLogSFUMateInitFail,
       "sleEMLogDaemonHealthBad": sleEMLogDaemonHealthBad,
       "sleEMLogGPIURavenLinkDown": sleEMLogGPIURavenLinkDown,
       "sleEMLogFANRPMLow": sleEMLogFANRPMLow,
       "sleEMLogNAK": sleEMLogNAK,
       "sleRapsRing": sleRapsRing,
       "sleRapsRingTable": sleRapsRingTable,
       "sleRapsRingEntry": sleRapsRingEntry,
       "sleRapsRingId": sleRapsRingId,
       "sleRapsRingType": sleRapsRingType,
       "sleRapsRingLevel": sleRapsRingLevel,
       "sleRapsRingCtrlVlan": sleRapsRingCtrlVlan,
       "sleRapsRingTrafficVlans": sleRapsRingTrafficVlans,
       "sleRapsRingVirtualVlan": sleRapsRingVirtualVlan,
       "sleRapsRingNodeId": sleRapsRingNodeId,
       "sleRapsRingEnable": sleRapsRingEnable,
       "sleRapsRingBridgeRole": sleRapsRingBridgeRole,
       "sleRapsRingState": sleRapsRingState,
       "sleRapsRingEastPort": sleRapsRingEastPort,
       "sleRapsRingEastPortStatus": sleRapsRingEastPortStatus,
       "sleRapsRingWestPort": sleRapsRingWestPort,
       "sleRapsRingWestPortStatus": sleRapsRingWestPortStatus,
       "sleRapsRingRplPort": sleRapsRingRplPort,
       "sleRapsRingIcPort": sleRapsRingIcPort,
       "sleRapsRingIcNode": sleRapsRingIcNode,
       "sleRapsRingMultipleFailure": sleRapsRingMultipleFailure,
       "sleRapsRingPropagateTc": sleRapsRingPropagateTc,
       "sleRapsRingNonRevertive": sleRapsRingNonRevertive,
       "sleRapsRingForcedSwitch": sleRapsRingForcedSwitch,
       "sleRapsRingManualSwitch": sleRapsRingManualSwitch,
       "sleRapsRingHoldOffTime": sleRapsRingHoldOffTime,
       "sleRapsRingGuardTime": sleRapsRingGuardTime,
       "sleRapsRingWaitToRestore": sleRapsRingWaitToRestore,
       "sleRapsRingWaitToBlock": sleRapsRingWaitToBlock,
       "sleRapsRingInstId": sleRapsRingInstId,
       "sleRapsRingChannel": sleRapsRingChannel,
       "sleRapsRingPassThrough": sleRapsRingPassThrough,
       "sleRapsRingVerifiedTime": sleRapsRingVerifiedTime,
       "sleRapsRingControl": sleRapsRingControl,
       "sleRapsRingControlRequest": sleRapsRingControlRequest,
       "sleRapsRingControlStatus": sleRapsRingControlStatus,
       "sleRapsRingControlTimer": sleRapsRingControlTimer,
       "sleRapsRingControlTimeStamp": sleRapsRingControlTimeStamp,
       "sleRapsRingControlReqResult": sleRapsRingControlReqResult,
       "sleRapsRingControlId": sleRapsRingControlId,
       "sleRapsRingControlType": sleRapsRingControlType,
       "sleRapsRingControlLevel": sleRapsRingControlLevel,
       "sleRapsRingControlCtrlVlan": sleRapsRingControlCtrlVlan,
       "sleRapsRingControlTrafficVlans": sleRapsRingControlTrafficVlans,
       "sleRapsRingControlChannel": sleRapsRingControlChannel,
       "sleRapsRingControlEnable": sleRapsRingControlEnable,
       "sleRapsRingControlEastPort": sleRapsRingControlEastPort,
       "sleRapsRingControlWestPort": sleRapsRingControlWestPort,
       "sleRapsRingControlParamPort": sleRapsRingControlParamPort,
       "sleRapsRingControlBridgeRole": sleRapsRingControlBridgeRole,
       "sleRapsRingControlIcNode": sleRapsRingControlIcNode,
       "sleRapsRingControlMultipleFailure": sleRapsRingControlMultipleFailure,
       "sleRapsRingControlPropagateTc": sleRapsRingControlPropagateTc,
       "sleRapsRingControlNonRevertive": sleRapsRingControlNonRevertive,
       "sleRapsRingControlHoldOffTime": sleRapsRingControlHoldOffTime,
       "sleRapsRingControlGuardTime": sleRapsRingControlGuardTime,
       "sleRapsRingControlWaitToRestore": sleRapsRingControlWaitToRestore,
       "sleRapsRingControlWaitToBlock": sleRapsRingControlWaitToBlock,
       "sleRapsRingControlInstId": sleRapsRingControlInstId,
       "sleRapsRingControlPassThrough": sleRapsRingControlPassThrough,
       "sleRapsRingControlVerifiedTime": sleRapsRingControlVerifiedTime,
       "sleRapsRingNotification": sleRapsRingNotification,
       "sleRapsRingCreated": sleRapsRingCreated,
       "sleRapsRingDeleted": sleRapsRingDeleted,
       "sleRapsRingChannelChanged": sleRapsRingChannelChanged,
       "sleRapsRingEnableChanged": sleRapsRingEnableChanged,
       "sleRapsRingPortsCreated": sleRapsRingPortsCreated,
       "sleRapsRingPortsDestroyed": sleRapsRingPortsDestroyed,
       "sleRapsRingRplPortChanged": sleRapsRingRplPortChanged,
       "sleRapsRingIcPortCreated": sleRapsRingIcPortCreated,
       "sleRapsRingIcPortDestroyed": sleRapsRingIcPortDestroyed,
       "sleRapsRingMultipleFailureChanged": sleRapsRingMultipleFailureChanged,
       "sleRapsRingPropagateTcChanged": sleRapsRingPropagateTcChanged,
       "sleRapsRingNonRevertiveChanged": sleRapsRingNonRevertiveChanged,
       "sleRapsRingForcedSwitchChanged": sleRapsRingForcedSwitchChanged,
       "sleRapsRingManualSwitchChanged": sleRapsRingManualSwitchChanged,
       "sleRapsRingSwitchCleared": sleRapsRingSwitchCleared,
       "sleRapsRingHoldOffTimeChanged": sleRapsRingHoldOffTimeChanged,
       "sleRapsRingGuardTimeChanged": sleRapsRingGuardTimeChanged,
       "sleRapsRingWtrTimeChanged": sleRapsRingWtrTimeChanged,
       "sleRapsRingWtbTimeChanged": sleRapsRingWtbTimeChanged,
       "sleRapsRingPassThroughChanged": sleRapsRingPassThroughChanged,
       "sleRapsRingVrfTimeChanged": sleRapsRingVrfTimeChanged,
       "sleFaultMonitor": sleFaultMonitor,
       "sleFaultMonitorGlobal": sleFaultMonitorGlobal,
       "sleFaultMonitorGlobalBase": sleFaultMonitorGlobalBase,
       "sleFaultMonitorGlobalInspectInterval": sleFaultMonitorGlobalInspectInterval,
       "sleFaultMonitorGlobalStartupThreshold": sleFaultMonitorGlobalStartupThreshold,
       "sleFaultMonitorGlobalNoKeepalive": sleFaultMonitorGlobalNoKeepalive,
       "sleFaultMonitorGlobalControl": sleFaultMonitorGlobalControl,
       "sleFaultMonitorGlobalControlRequest": sleFaultMonitorGlobalControlRequest,
       "sleFaultMonitorGlobalControlStatus": sleFaultMonitorGlobalControlStatus,
       "sleFaultMonitorGlobalControlTimer": sleFaultMonitorGlobalControlTimer,
       "sleFaultMonitorGlobalControlTimeStamp": sleFaultMonitorGlobalControlTimeStamp,
       "sleFaultMonitorGlobalControlReqResult": sleFaultMonitorGlobalControlReqResult,
       "sleFaultMonitorGlobalControlInspectInterval": sleFaultMonitorGlobalControlInspectInterval,
       "sleFaultMonitorGlobalControlStartupThreshold": sleFaultMonitorGlobalControlStartupThreshold,
       "sleFaultMonitorGlobalControlNoKeepalive": sleFaultMonitorGlobalControlNoKeepalive,
       "sleFaultMonitorGlobalNotification": sleFaultMonitorGlobalNotification,
       "setFaultMonitorGlobalInspectIntervalChanged": setFaultMonitorGlobalInspectIntervalChanged,
       "setFaultMonitorGlobalStartupThresholdChanged": setFaultMonitorGlobalStartupThresholdChanged,
       "setFaultMonitorGlobalNoKeepaliveActionChanged": setFaultMonitorGlobalNoKeepaliveActionChanged,
       "sleFaultMonitorDaemonConfig": sleFaultMonitorDaemonConfig,
       "sleFaultMonitorDaemonTable": sleFaultMonitorDaemonTable,
       "sleFaultMonitorDaemonEntry": sleFaultMonitorDaemonEntry,
       "sleFaultMonitorDaemonName": sleFaultMonitorDaemonName,
       "sleFaultMonitorDaemonPid": sleFaultMonitorDaemonPid,
       "sleFaultMonitorDaemonAdminStatus": sleFaultMonitorDaemonAdminStatus,
       "sleFaultMonitorDaemonCrashAction": sleFaultMonitorDaemonCrashAction,
       "sleFaultMonitorDaemonTimeoutAction": sleFaultMonitorDaemonTimeoutAction,
       "sleFaultMonitorDaemonThreshold": sleFaultMonitorDaemonThreshold,
       "sleFaultMonitorDaemonThresholded": sleFaultMonitorDaemonThresholded,
       "sleFaultMonitorDaemonStartupThresholded": sleFaultMonitorDaemonStartupThresholded,
       "sleFaultMonitorDaemonWatchdogAdminStatus": sleFaultMonitorDaemonWatchdogAdminStatus,
       "sleFaultMonitorDaemonWatchdogThreshold": sleFaultMonitorDaemonWatchdogThreshold,
       "sleFaultMonitorDaemonWatchdogCount": sleFaultMonitorDaemonWatchdogCount,
       "sleFaultMonitorDaemonControl": sleFaultMonitorDaemonControl,
       "sleFaultMonitorDaemonControlRequest": sleFaultMonitorDaemonControlRequest,
       "sleFaultMonitorDaemonControlStatus": sleFaultMonitorDaemonControlStatus,
       "sleFaultMonitorDaemonControlTimer": sleFaultMonitorDaemonControlTimer,
       "sleFaultMonitorDaemonControlTimeStamp": sleFaultMonitorDaemonControlTimeStamp,
       "sleFaultMonitorDaemonControlReqResult": sleFaultMonitorDaemonControlReqResult,
       "sleFaultMonitorDaemonControlName": sleFaultMonitorDaemonControlName,
       "sleFaultMonitorDaemonControlAdminStatus": sleFaultMonitorDaemonControlAdminStatus,
       "sleFaultMonitorDaemonControlCrashAction": sleFaultMonitorDaemonControlCrashAction,
       "sleFaultMonitorDaemonControlTimeoutAction": sleFaultMonitorDaemonControlTimeoutAction,
       "sleFaultMonitorDaemonControlThreshold": sleFaultMonitorDaemonControlThreshold,
       "sleFaultMonitorDaemonControlThreshed": sleFaultMonitorDaemonControlThreshed,
       "sleFaultMonitorDaemonControlStartupThresh": sleFaultMonitorDaemonControlStartupThresh,
       "sleFaultMonitorDaemonControlWatchdogAdminStatus": sleFaultMonitorDaemonControlWatchdogAdminStatus,
       "sleFaultMonitorDaemonControlWatchdogThreshold": sleFaultMonitorDaemonControlWatchdogThreshold,
       "sleFaultMonitorDaemonNotification": sleFaultMonitorDaemonNotification,
       "setFaultMonitorDaemonAdminStatusChanged": setFaultMonitorDaemonAdminStatusChanged,
       "setFaultMonitorDaemonFaultActionChanged": setFaultMonitorDaemonFaultActionChanged,
       "setFaultMonitorDaemonThresholdChanged": setFaultMonitorDaemonThresholdChanged,
       "setFaultMonitorDaemonWatchdogchanged": setFaultMonitorDaemonWatchdogchanged,
       "sleFaultMonitor2pointsLinear": sleFaultMonitor2pointsLinear,
       "sleFaultMonitor2pointsLinearInfo": sleFaultMonitor2pointsLinearInfo,
       "sleFaultMonitor2pointsLinearAdminStatus": sleFaultMonitor2pointsLinearAdminStatus,
       "sleFaultMonitor2pointsLinearInterval": sleFaultMonitor2pointsLinearInterval,
       "sleFaultMonitor2pointsLinearThreshold": sleFaultMonitor2pointsLinearThreshold,
       "sleFaultMonitor2pointsLinearControl": sleFaultMonitor2pointsLinearControl,
       "sleFaultMonitor2pointsLinearControlRequest": sleFaultMonitor2pointsLinearControlRequest,
       "sleFaultMonitor2pointsLinearControlStatus": sleFaultMonitor2pointsLinearControlStatus,
       "sleFaultMonitor2pointsLinearControlTimer": sleFaultMonitor2pointsLinearControlTimer,
       "sleFaultMonitor2pointsLinearControlTimeStamp": sleFaultMonitor2pointsLinearControlTimeStamp,
       "sleFaultMonitor2pointsLinearControlReqResult": sleFaultMonitor2pointsLinearControlReqResult,
       "sleFaultMonitor2pointsLinearControlAdminStatus": sleFaultMonitor2pointsLinearControlAdminStatus,
       "sleFaultMonitor2PonitsLinearControlInterval": sleFaultMonitor2PonitsLinearControlInterval,
       "sleFaultMonitor2PointsLinearControlThreshold": sleFaultMonitor2PointsLinearControlThreshold,
       "sleFaultMonitor2pointsLinearNotification": sleFaultMonitor2pointsLinearNotification,
       "sleFaultMonitor2PointsLinearAdminStatusChanged": sleFaultMonitor2PointsLinearAdminStatusChanged,
       "sleFaultMonitor2PointsLinearIntervalChanged": sleFaultMonitor2PointsLinearIntervalChanged,
       "sleFaultMonitor2PointsLinearThresholdChanged": sleFaultMonitor2PointsLinearThresholdChanged,
       "sleFaultMonitorRHM": sleFaultMonitorRHM,
       "sleFaultMonitorRHMInfo": sleFaultMonitorRHMInfo,
       "sleFaultMonitorRHMAdminStatus": sleFaultMonitorRHMAdminStatus,
       "sleFaultMonitorRHMActionType": sleFaultMonitorRHMActionType,
       "sleFaultMonitorRHMActionThreshold": sleFaultMonitorRHMActionThreshold,
       "sleFaultMonitorRHMRebootThreshold": sleFaultMonitorRHMRebootThreshold,
       "sleFaultMonitorRHMRecoveryTime": sleFaultMonitorRHMRecoveryTime,
       "sleFaultMonitorRHMFaultCounter": sleFaultMonitorRHMFaultCounter,
       "sleFaultMonitorRHMRebootCounter": sleFaultMonitorRHMRebootCounter,
       "sleFaultMonitorRHMInterval": sleFaultMonitorRHMInterval,
       "sleFaultMonitorRHMLiveThreshold": sleFaultMonitorRHMLiveThreshold,
       "sleFaultMonitorRHMHostTable": sleFaultMonitorRHMHostTable,
       "sleFaultMonitorRHMHostEntry": sleFaultMonitorRHMHostEntry,
       "sleFaultMonitorRHMHostAddr": sleFaultMonitorRHMHostAddr,
       "sleFaultMonitorRHMControl": sleFaultMonitorRHMControl,
       "sleFaultMonitorRHMControlRequest": sleFaultMonitorRHMControlRequest,
       "sleFaultMonitorRHMControlStatus": sleFaultMonitorRHMControlStatus,
       "sleFaultMonitorRHMControlTimer": sleFaultMonitorRHMControlTimer,
       "sleFaultMonitorRHMControlTimeStamp": sleFaultMonitorRHMControlTimeStamp,
       "sleFaultMonitorRHMControlReqResult": sleFaultMonitorRHMControlReqResult,
       "sleFaultMonitorRHMControlAdminStatus": sleFaultMonitorRHMControlAdminStatus,
       "sleFaultMonitorRHMControlActionType": sleFaultMonitorRHMControlActionType,
       "sleFaultMonitorRHMControlActionThreshold": sleFaultMonitorRHMControlActionThreshold,
       "sleFaultMonitorRHMControlRebootThreshold": sleFaultMonitorRHMControlRebootThreshold,
       "sleFaultMonitorRHMControlRecoveryTime": sleFaultMonitorRHMControlRecoveryTime,
       "sleFaultMonitorRHMControlInterval": sleFaultMonitorRHMControlInterval,
       "sleFaultMonitorRHMControlLiveThreshold": sleFaultMonitorRHMControlLiveThreshold,
       "sleFaultMonitorRHMControlHostAddr": sleFaultMonitorRHMControlHostAddr,
       "sleFaultMonitorRHMNotification": sleFaultMonitorRHMNotification,
       "setRHMStatusChanged": setRHMStatusChanged,
       "setRHMActionThresholdChanged": setRHMActionThresholdChanged,
       "setRHMRebootThresholdChanged": setRHMRebootThresholdChanged,
       "setRHMHostAdded": setRHMHostAdded,
       "setRHMHostCleared": setRHMHostCleared,
       "sle2EthernetCfm": sle2EthernetCfm,
       "sle2EthernetCfmBase": sle2EthernetCfmBase,
       "sle2EthCfmBaseGroup": sle2EthCfmBaseGroup,
       "sle2EthCfmEnable": sle2EthCfmEnable,
       "sle2EthCfmLmmFrameCountSimStatus": sle2EthCfmLmmFrameCountSimStatus,
       "sle2EthCfmBaseControl": sle2EthCfmBaseControl,
       "sle2EthCfmControlRequest": sle2EthCfmControlRequest,
       "sle2EthCfmControlStatus": sle2EthCfmControlStatus,
       "sle2EthCfmControlTimer": sle2EthCfmControlTimer,
       "sle2EthCfmControlTimeStamp": sle2EthCfmControlTimeStamp,
       "sle2EthCfmControlReqResult": sle2EthCfmControlReqResult,
       "sle2EthCfmControlEnable": sle2EthCfmControlEnable,
       "sle2EthCfmControlLmmFrameCountSimStatus": sle2EthCfmControlLmmFrameCountSimStatus,
       "sle2EthCfmBaseNotification": sle2EthCfmBaseNotification,
       "sle2EthCfmEnableChanged": sle2EthCfmEnableChanged,
       "sle2EthCfmLmmFrameCountSimulatorChanged": sle2EthCfmLmmFrameCountSimulatorChanged,
       "sle2EthernetCfmBridge": sle2EthernetCfmBridge,
       "sle2EthCfmBridgeTable": sle2EthCfmBridgeTable,
       "sle2EthCfmBridgeEntry": sle2EthCfmBridgeEntry,
       "sle2EthCfmBridgeId": sle2EthCfmBridgeId,
       "sle2EthCfmBridgeDefaultMdLevel": sle2EthCfmBridgeDefaultMdLevel,
       "sle2EthCfmBridgeDefaultMepId": sle2EthCfmBridgeDefaultMepId,
       "sle2EthCfmBridgeAutomatic": sle2EthCfmBridgeAutomatic,
       "sle2EthCfmBridgeConfigDefaultMdLevel": sle2EthCfmBridgeConfigDefaultMdLevel,
       "sle2EthCfmBridgeConfigDefaultMdMipCreation": sle2EthCfmBridgeConfigDefaultMdMipCreation,
       "sle2EthCfmBridgeLtrCacheEnable": sle2EthCfmBridgeLtrCacheEnable,
       "sle2EthCfmBridgeLtrCacheSize": sle2EthCfmBridgeLtrCacheSize,
       "sle2EthCfmBridgeControl": sle2EthCfmBridgeControl,
       "sle2EthCfmBridgeControlRequest": sle2EthCfmBridgeControlRequest,
       "sle2EthCfmBridgeControlStatus": sle2EthCfmBridgeControlStatus,
       "sle2EthCfmBridgeControlTimer": sle2EthCfmBridgeControlTimer,
       "sle2EthCfmBridgeControlTimeStamp": sle2EthCfmBridgeControlTimeStamp,
       "sle2EthCfmBridgeControlReqResult": sle2EthCfmBridgeControlReqResult,
       "sle2EthCfmBridgeControlId": sle2EthCfmBridgeControlId,
       "sle2EthCfmBridgeControlDefaultMdLevel": sle2EthCfmBridgeControlDefaultMdLevel,
       "sle2EthCfmBridgeControlDefaultMepId": sle2EthCfmBridgeControlDefaultMepId,
       "sle2EthCfmBridgeControlAutomatic": sle2EthCfmBridgeControlAutomatic,
       "sle2EthCfmBridgeControlConfigDefaultMdLevel": sle2EthCfmBridgeControlConfigDefaultMdLevel,
       "sle2EthCfmBridgeControlConfigDefaultMdMipCreation": sle2EthCfmBridgeControlConfigDefaultMdMipCreation,
       "sle2EthCfmBridgeConntrolLtrCacheEnable": sle2EthCfmBridgeConntrolLtrCacheEnable,
       "sle2EthCfmBridgeControlLtrCacheSize": sle2EthCfmBridgeControlLtrCacheSize,
       "sle2EthCfmBridgeNotification": sle2EthCfmBridgeNotification,
       "setCfmBridgeProfile": setCfmBridgeProfile,
       "setCfmBridgeLtrCacheEnable": setCfmBridgeLtrCacheEnable,
       "clearCfmBridgeLtrCache": clearCfmBridgeLtrCache,
       "setCfmBridgeAutomatic": setCfmBridgeAutomatic,
       "setCfmBridgeConfigDefaultMdLevel": setCfmBridgeConfigDefaultMdLevel,
       "sle2EhternetCfmVlan": sle2EhternetCfmVlan,
       "sle2EthernetCfmVlanConfig": sle2EthernetCfmVlanConfig,
       "sle2EthCfmVlanConfigTable": sle2EthCfmVlanConfigTable,
       "sle2EthCfmVlanConfigEntry": sle2EthCfmVlanConfigEntry,
       "sle2EthCfmVlanConfigPrimaryVid": sle2EthCfmVlanConfigPrimaryVid,
       "sle2EthCfmVlanConfigSecondaryVid": sle2EthCfmVlanConfigSecondaryVid,
       "sle2EthCfmVlanConfigSecondaryBridgeId": sle2EthCfmVlanConfigSecondaryBridgeId,
       "sle2EthCfmVlanConfigControl": sle2EthCfmVlanConfigControl,
       "sle2EthCfmVlanConfigControlRequest": sle2EthCfmVlanConfigControlRequest,
       "sle2EthCfmVlanConfigControlStatus": sle2EthCfmVlanConfigControlStatus,
       "sle2EthCfmVlanConfigControlTimer": sle2EthCfmVlanConfigControlTimer,
       "sle2EthCfmVlanConfigControlTimeStamp": sle2EthCfmVlanConfigControlTimeStamp,
       "sle2EthCfmVlanConfigControlReqResult": sle2EthCfmVlanConfigControlReqResult,
       "sle2EthCfmVlanConfigControlPrimaryBridgeId": sle2EthCfmVlanConfigControlPrimaryBridgeId,
       "sle2EthCfmVlanConfigControlPrimaryVid": sle2EthCfmVlanConfigControlPrimaryVid,
       "sle2EthCfmVlanConfigControlSecondaryBridgeId": sle2EthCfmVlanConfigControlSecondaryBridgeId,
       "sle2EthCfmVlanConfigControlSecondaryVid": sle2EthCfmVlanConfigControlSecondaryVid,
       "sle2EthCfmVlanConfigNotification": sle2EthCfmVlanConfigNotification,
       "addCfmVlanConfVid": addCfmVlanConfVid,
       "delCfmVlanConfVid": delCfmVlanConfVid,
       "sle2EthernetCfmVlanInfo": sle2EthernetCfmVlanInfo,
       "sle2EthCfmVlanInfoTable": sle2EthCfmVlanInfoTable,
       "sle2EthCfmVlanInfoEntry": sle2EthCfmVlanInfoEntry,
       "sle2EthCfmVlanInfoVid": sle2EthCfmVlanInfoVid,
       "sle2EthCfmVlanInfoPriority": sle2EthCfmVlanInfoPriority,
       "sle2EthCfmVlanInfoControl": sle2EthCfmVlanInfoControl,
       "sle2EthCfmVlanInfoControlRequest": sle2EthCfmVlanInfoControlRequest,
       "sle2EthCfmVlanInfoControlStatus": sle2EthCfmVlanInfoControlStatus,
       "sle2EthCfmVlanInfoControlTimer": sle2EthCfmVlanInfoControlTimer,
       "sle2EthCfmVlanInfoControlTimeStamp": sle2EthCfmVlanInfoControlTimeStamp,
       "sle2EthCfmVlanInfoControlReqResult": sle2EthCfmVlanInfoControlReqResult,
       "sle2EthCfmVlanInfoControlBridgeId": sle2EthCfmVlanInfoControlBridgeId,
       "sle2EthCfmVlanInfoControlVid": sle2EthCfmVlanInfoControlVid,
       "sle2EthCfmVlanInfoControlPriority": sle2EthCfmVlanInfoControlPriority,
       "sle2EthCfmVlanInfoNotification": sle2EthCfmVlanInfoNotification,
       "sle2EthCfmVlanPriorityChanged": sle2EthCfmVlanPriorityChanged,
       "sle2EthernetCfmDefMdLevelEntry": sle2EthernetCfmDefMdLevelEntry,
       "sle2EthCfmDefMdLevelEntryTable": sle2EthCfmDefMdLevelEntryTable,
       "sle2EthCfmDefMdLevelEntryEntry": sle2EthCfmDefMdLevelEntryEntry,
       "sle2EthCfmDefMdLevelEntryVid": sle2EthCfmDefMdLevelEntryVid,
       "sle2EthCfmDefMdLevelEntryLevel": sle2EthCfmDefMdLevelEntryLevel,
       "sle2EthCfmDefMdLevelEntryMipCreation": sle2EthCfmDefMdLevelEntryMipCreation,
       "sle2EthCfmDefMdLevelEntryControl": sle2EthCfmDefMdLevelEntryControl,
       "sle2EthCfmDefMdLevelEntryControlRequest": sle2EthCfmDefMdLevelEntryControlRequest,
       "sle2EthCfmDefMdLevelEntryControlStatus": sle2EthCfmDefMdLevelEntryControlStatus,
       "sle2EthCfmDefMdLevelEntryControlTimer": sle2EthCfmDefMdLevelEntryControlTimer,
       "sle2EthCfmDefMdLevelEntryControlTimeStamp": sle2EthCfmDefMdLevelEntryControlTimeStamp,
       "sle2EthCfmDefMdLevelEntryControlReqResult": sle2EthCfmDefMdLevelEntryControlReqResult,
       "sle2EthCfmDefMdLevelEntryControlBridgeId": sle2EthCfmDefMdLevelEntryControlBridgeId,
       "sle2EthCfmDefMdLevelEntryControlVid": sle2EthCfmDefMdLevelEntryControlVid,
       "sle2EthCfmDefMdLevelEntryControlLevel": sle2EthCfmDefMdLevelEntryControlLevel,
       "sle2EthCfmDefMdLevelEntryControlMipCreation": sle2EthCfmDefMdLevelEntryControlMipCreation,
       "sle2EthCfmDefMdLevelEntryNotification": sle2EthCfmDefMdLevelEntryNotification,
       "sle2EthCfmDefMdLevelEntryChanged": sle2EthCfmDefMdLevelEntryChanged,
       "sle2EthCfmDefMdLevelEntryCleared": sle2EthCfmDefMdLevelEntryCleared,
       "sle2EthernetCfmMd": sle2EthernetCfmMd,
       "sle2EthCfmMdTable": sle2EthCfmMdTable,
       "sle2EthCfmMdEntry": sle2EthCfmMdEntry,
       "sle2EthCfmMdName": sle2EthCfmMdName,
       "sle2EthCfmMdType": sle2EthCfmMdType,
       "sle2EthCfmMdLevel": sle2EthCfmMdLevel,
       "sle2EthCfmMdMipCreation": sle2EthCfmMdMipCreation,
       "sle2EthCfmMdControl": sle2EthCfmMdControl,
       "sle2EthCfmMdControlRequest": sle2EthCfmMdControlRequest,
       "sle2EthCfmMdControlStatus": sle2EthCfmMdControlStatus,
       "sle2EthCfmMdControlTimer": sle2EthCfmMdControlTimer,
       "sle2EthCfmMdControlTimeStamp": sle2EthCfmMdControlTimeStamp,
       "sle2EthCfmMdControlReqResult": sle2EthCfmMdControlReqResult,
       "sle2EthCfmMdControlBridgeId": sle2EthCfmMdControlBridgeId,
       "sle2EthCfmMdControlType": sle2EthCfmMdControlType,
       "sle2EthCfmMdControlName": sle2EthCfmMdControlName,
       "sle2EthCfmMdControlLevel": sle2EthCfmMdControlLevel,
       "sle2EthCfmMdControlMipCreation": sle2EthCfmMdControlMipCreation,
       "sle2EthCfmMdNotification": sle2EthCfmMdNotification,
       "sle2EthCfmMdCreated": sle2EthCfmMdCreated,
       "sle2EthCfmMdDestoryed": sle2EthCfmMdDestoryed,
       "sle2EthernetCfmMa": sle2EthernetCfmMa,
       "sle2EthCfmMaTable": sle2EthCfmMaTable,
       "sle2EthCfmMaEntry": sle2EthCfmMaEntry,
       "sle2EthCfmMaName": sle2EthCfmMaName,
       "sle2EthCfmMaVid": sle2EthCfmMaVid,
       "sle2EthCfmMaType": sle2EthCfmMaType,
       "sle2EthCfmMaMipCreation": sle2EthCfmMaMipCreation,
       "sle2EthCfmMaCcInterval": sle2EthCfmMaCcInterval,
       "sle2EthCfmMaElmi": sle2EthCfmMaElmi,
       "sle2EthCfmMaConnectivityStatus": sle2EthCfmMaConnectivityStatus,
       "sle2EthCfmMaConfiguredRmepCount": sle2EthCfmMaConfiguredRmepCount,
       "sle2EthCfmMaConvergedRmepCount": sle2EthCfmMaConvergedRmepCount,
       "sle2EthCfmMaControl": sle2EthCfmMaControl,
       "sle2EthCfmMaControlRequest": sle2EthCfmMaControlRequest,
       "sle2EthCfmMaControlStatus": sle2EthCfmMaControlStatus,
       "sle2EthCfmMaControlTimer": sle2EthCfmMaControlTimer,
       "sle2EthCfmMaControlTimeStamp": sle2EthCfmMaControlTimeStamp,
       "sle2EthCfmMaControlReqResult": sle2EthCfmMaControlReqResult,
       "sle2EthCfmMaControlBridgeId": sle2EthCfmMaControlBridgeId,
       "sle2EthCfmMaControlMdName": sle2EthCfmMaControlMdName,
       "sle2EthCfmMaControlName": sle2EthCfmMaControlName,
       "sle2EthCfmMaControlType": sle2EthCfmMaControlType,
       "sle2EthCfmMaControlVid": sle2EthCfmMaControlVid,
       "sle2EthCfmMaControlMipCreation": sle2EthCfmMaControlMipCreation,
       "sle2EthCfmMaControlCcmInterval": sle2EthCfmMaControlCcmInterval,
       "sle2EthCfmMaControlElmi": sle2EthCfmMaControlElmi,
       "sle2EthCfmMaNotification": sle2EthCfmMaNotification,
       "sle2EthCfmMaCreated": sle2EthCfmMaCreated,
       "sle2EthCfmMaDestoryed": sle2EthCfmMaDestoryed,
       "sle2EthCfmCcIntervalChanged": sle2EthCfmCcIntervalChanged,
       "sle2EthCfmElmiChanged": sle2EthCfmElmiChanged,
       "sle2EthernetCfmMep": sle2EthernetCfmMep,
       "sle2EthernetCfmMepInfo": sle2EthernetCfmMepInfo,
       "sle2EthCfmMepInfoTable": sle2EthCfmMepInfoTable,
       "sle2EthCfmMepInfoEntry": sle2EthCfmMepInfoEntry,
       "sle2EthCfmMepInfoId": sle2EthCfmMepInfoId,
       "sle2EthCfmMepInfoIfindex": sle2EthCfmMepInfoIfindex,
       "sle2EthCfmMepInfoLocalVid": sle2EthCfmMepInfoLocalVid,
       "sle2EthCfmMepInfoDirection": sle2EthCfmMepInfoDirection,
       "sle2EthCfmMepInfoActive": sle2EthCfmMepInfoActive,
       "sle2EthCfmMepInfoUNI": sle2EthCfmMepInfoUNI,
       "sle2EthCfmMepInfoCcmStatus": sle2EthCfmMepInfoCcmStatus,
       "sle2EthCfmMepInfoCcmType": sle2EthCfmMepInfoCcmType,
       "sle2EthCfmMepInfoCcmRmepId": sle2EthCfmMepInfoCcmRmepId,
       "sle2EthCfmMepInfoLocalMacAddr": sle2EthCfmMepInfoLocalMacAddr,
       "sle2EthCfmMepInfoRdi": sle2EthCfmMepInfoRdi,
       "sle2EthCfmMepInfoService": sle2EthCfmMepInfoService,
       "sle2EthCfmMepInfoLckLevel": sle2EthCfmMepInfoLckLevel,
       "sle2EthCfmMepInfoDlmState": sle2EthCfmMepInfoDlmState,
       "sle2EthCfmMepInfoDlmRmepId": sle2EthCfmMepInfoDlmRmepId,
       "sle2EthCfmMepInfoConnectivityStatus": sle2EthCfmMepInfoConnectivityStatus,
       "sle2EthCfmMepInfoInterval": sle2EthCfmMepInfoInterval,
       "sle2EthCfmMepInfoControl": sle2EthCfmMepInfoControl,
       "sle2EthCfmMepInfoControlRequest": sle2EthCfmMepInfoControlRequest,
       "sle2EthCfmMepInfoControlStatus": sle2EthCfmMepInfoControlStatus,
       "sle2EthCfmMepInfoControlTimer": sle2EthCfmMepInfoControlTimer,
       "sle2EthCfmMepInfoControlTimeStamp": sle2EthCfmMepInfoControlTimeStamp,
       "sle2EthCfmMepInfoControlReqResult": sle2EthCfmMepInfoControlReqResult,
       "sle2EthCfmMepInfoControlBridgeId": sle2EthCfmMepInfoControlBridgeId,
       "sle2EthCfmMepInfoControlMdName": sle2EthCfmMepInfoControlMdName,
       "sle2EthCfmMepInfoControlMaVid": sle2EthCfmMepInfoControlMaVid,
       "sle2EthCfmMepInfoControlIfindex": sle2EthCfmMepInfoControlIfindex,
       "sle2EthCfmMepInfoControlId": sle2EthCfmMepInfoControlId,
       "sle2EthCfmMepInfoControlLocalVid": sle2EthCfmMepInfoControlLocalVid,
       "sle2EthCfmMepInfoControlMepDirection": sle2EthCfmMepInfoControlMepDirection,
       "sle2EthCfmMepInfoControlActive": sle2EthCfmMepInfoControlActive,
       "sle2EthCfmMepInfoControlUNI": sle2EthCfmMepInfoControlUNI,
       "sle2EthCfmMepInfoControlCcmStatus": sle2EthCfmMepInfoControlCcmStatus,
       "sle2EthCfmMepInfoControlFrameType": sle2EthCfmMepInfoControlFrameType,
       "sle2EthCfmMepInfoControlRmepId": sle2EthCfmMepInfoControlRmepId,
       "sle2EthCfmMepInfoControlService": sle2EthCfmMepInfoControlService,
       "sle2EthCfmMepInfoControlDlmState": sle2EthCfmMepInfoControlDlmState,
       "sle2EthCfmMepInfoControlLckLevel": sle2EthCfmMepInfoControlLckLevel,
       "sle2EthCfmMepInfoControlTstPattern": sle2EthCfmMepInfoControlTstPattern,
       "sle2EthCfmMepInfoControlTstRecursive": sle2EthCfmMepInfoControlTstRecursive,
       "sle2EthCfmMepInfoControlDuration": sle2EthCfmMepInfoControlDuration,
       "sle2EthCfmMepInfoControlTstTxInterval": sle2EthCfmMepInfoControlTstTxInterval,
       "sle2EthCfmMepInfoControlTstLckInterval": sle2EthCfmMepInfoControlTstLckInterval,
       "sle2EthCfmMepInfoControlLckRmepId": sle2EthCfmMepInfoControlLckRmepId,
       "sle2EthCfmMepInfoControlInterval": sle2EthCfmMepInfoControlInterval,
       "sle2EthCfmMepInfoControlTransMode": sle2EthCfmMepInfoControlTransMode,
       "sle2EthCfmMepInfoNotification": sle2EthCfmMepInfoNotification,
       "sle2EthCfmMepCreated": sle2EthCfmMepCreated,
       "sle2EthCfmMepDestory": sle2EthCfmMepDestory,
       "sle2EthCfmCcEnableChanged": sle2EthCfmCcEnableChanged,
       "sle2EthCfmServiceChanged": sle2EthCfmServiceChanged,
       "sle2EthCfmDualEndLmmChanged": sle2EthCfmDualEndLmmChanged,
       "sle2EthCfmTransmitUnicastTstFinished": sle2EthCfmTransmitUnicastTstFinished,
       "sle2EthCfmTransmitMulticastTstFinished": sle2EthCfmTransmitMulticastTstFinished,
       "sle2EthCfmTransmitUnicastLmFinished": sle2EthCfmTransmitUnicastLmFinished,
       "sle2EthCfmTransmitMulticastLmFinished": sle2EthCfmTransmitMulticastLmFinished,
       "sle2EthCfmTransmitUnicastDmFinished": sle2EthCfmTransmitUnicastDmFinished,
       "sle2EthCfmTransmitMuliticastDmFinished": sle2EthCfmTransmitMuliticastDmFinished,
       "sle2EthCfmReceive1DmFinished": sle2EthCfmReceive1DmFinished,
       "sle2EthCfmTransmitTmFinished": sle2EthCfmTransmitTmFinished,
       "sle2EthCfmReceiveTmFinished": sle2EthCfmReceiveTmFinished,
       "sle2EthCfmTransmitExmFinished": sle2EthCfmTransmitExmFinished,
       "sle2EthCfmTransmitVsmFinished": sle2EthCfmTransmitVsmFinished,
       "sle2EthCfmTransmitMccFinished": sle2EthCfmTransmitMccFinished,
       "sle2EthernetCfmMepAttributs": sle2EthernetCfmMepAttributs,
       "sle2EthCfmMepAttrTable": sle2EthCfmMepAttrTable,
       "sle2EthCfmMepAttrEntry": sle2EthCfmMepAttrEntry,
       "sle2EthCfmMepAttrActive": sle2EthCfmMepAttrActive,
       "sle2EthCfmMepAttrCcmLtmPriority": sle2EthCfmMepAttrCcmLtmPriority,
       "sle2EthCfmMepAttrLowPrDef": sle2EthCfmMepAttrLowPrDef,
       "sle2EthCfmMepAttrFngAlarmTime": sle2EthCfmMepAttrFngAlarmTime,
       "sle2EthCfmMepAttrResetFngTime": sle2EthCfmMepAttrResetFngTime,
       "sle2EthCfmMepAttrCcmLtmFlag": sle2EthCfmMepAttrCcmLtmFlag,
       "sle2EthCfmMepAttrTxLtmTargetMac": sle2EthCfmMepAttrTxLtmTargetMac,
       "sle2EthCfmMepAttrTxLtmTargetMepId": sle2EthCfmMepAttrTxLtmTargetMepId,
       "sle2EthCfmMepAttrTxLtmTargetIsMepId": sle2EthCfmMepAttrTxLtmTargetIsMepId,
       "sle2EthCfmMepAttrTxLtmTtl": sle2EthCfmMepAttrTxLtmTtl,
       "sle2EthCfmMepAttrTxLtmEgressId": sle2EthCfmMepAttrTxLtmEgressId,
       "sle2EthCfmMepAttrTxLbmStatus": sle2EthCfmMepAttrTxLbmStatus,
       "sle2EthCfmMepAttrTxLbmDestMac": sle2EthCfmMepAttrTxLbmDestMac,
       "sle2EthCfmMepAttrTxLbmDestMepId": sle2EthCfmMepAttrTxLbmDestMepId,
       "sle2EthCfmMepAttrTxLbmDestIsMepId": sle2EthCfmMepAttrTxLbmDestIsMepId,
       "sle2EthCfmMepAttrTxLbmMessages": sle2EthCfmMepAttrTxLbmMessages,
       "sle2EthCfmMepAttrTxLbmDataTlv": sle2EthCfmMepAttrTxLbmDataTlv,
       "sle2EthCfmMepAttrTxLbmVlanPriority": sle2EthCfmMepAttrTxLbmVlanPriority,
       "sle2EthCfmMepAttrTxLbmVlanDropEnable": sle2EthCfmMepAttrTxLbmVlanDropEnable,
       "sle2EthCfmMepAttrTxLbmTimeOut": sle2EthCfmMepAttrTxLbmTimeOut,
       "sle2EthCfmMepAttrLbrTimeOut": sle2EthCfmMepAttrLbrTimeOut,
       "sle2EthCfmMepAttrControl": sle2EthCfmMepAttrControl,
       "sle2EthCfmMepAttrControlRequest": sle2EthCfmMepAttrControlRequest,
       "sle2EthCfmMepAttrControlStatus": sle2EthCfmMepAttrControlStatus,
       "sle2EthCfmMepAttrControlTimer": sle2EthCfmMepAttrControlTimer,
       "sle2EthCfmMepAttrControlTimeStamp": sle2EthCfmMepAttrControlTimeStamp,
       "sle2EthCfmMepAttrControlReqResult": sle2EthCfmMepAttrControlReqResult,
       "sle2EthCfmMepAttrControlBridgeId": sle2EthCfmMepAttrControlBridgeId,
       "sle2EthCfmMepAttrControlMdName": sle2EthCfmMepAttrControlMdName,
       "sle2EthCfmMepAttrControlMaVid": sle2EthCfmMepAttrControlMaVid,
       "sle2EthCfmMepAttrControlMepId": sle2EthCfmMepAttrControlMepId,
       "sle2EthCfmMepAttrControlActive": sle2EthCfmMepAttrControlActive,
       "sle2EthCfmMepAttrControlCcmLtmPriority": sle2EthCfmMepAttrControlCcmLtmPriority,
       "sle2EthCfmMepAttrContrlLowPrDef": sle2EthCfmMepAttrContrlLowPrDef,
       "sle2EthCfmMepAttrContrlFngAlarmTime": sle2EthCfmMepAttrContrlFngAlarmTime,
       "sle2EthCfmMepAttrControlResetFngTime": sle2EthCfmMepAttrControlResetFngTime,
       "sle2EthCfmMepAttrControlCcmLtmFlag": sle2EthCfmMepAttrControlCcmLtmFlag,
       "sle2EthCfmMepAttrControlTxLtmTargetMac": sle2EthCfmMepAttrControlTxLtmTargetMac,
       "sle2EthCfmMepAttrControlTxLtmTargetMepId": sle2EthCfmMepAttrControlTxLtmTargetMepId,
       "sle2EthCfmMepAttrControlTxLtmTargetIsMepId": sle2EthCfmMepAttrControlTxLtmTargetIsMepId,
       "sle2EthCfmMepAttrControlTxLtmTtl": sle2EthCfmMepAttrControlTxLtmTtl,
       "sle2EthCfmMepAttrControlTxLtmEgressId": sle2EthCfmMepAttrControlTxLtmEgressId,
       "sle2EthCfmMepAttrControlTxLbmStatus": sle2EthCfmMepAttrControlTxLbmStatus,
       "sle2EthCfmMepAttrControlTxLbmDestMacAddress": sle2EthCfmMepAttrControlTxLbmDestMacAddress,
       "sle2EthCfmMepAttrControlTxLbmDestMepId": sle2EthCfmMepAttrControlTxLbmDestMepId,
       "sle2EthCfmMepAttrControlTxLbmDestIsMepId": sle2EthCfmMepAttrControlTxLbmDestIsMepId,
       "sle2EthCfmMepAttrControlTxLbmMessages": sle2EthCfmMepAttrControlTxLbmMessages,
       "sle2EthCfmMepAttrControlTxLbmDataTlv": sle2EthCfmMepAttrControlTxLbmDataTlv,
       "sle2EthCfmMepAttrControlTxLbmVlanPriority": sle2EthCfmMepAttrControlTxLbmVlanPriority,
       "sle2EthCfmMepAttrControlTxLbmVlanDropEnable": sle2EthCfmMepAttrControlTxLbmVlanDropEnable,
       "sle2EthCfmMepAttrControlTxLbmTimeOut": sle2EthCfmMepAttrControlTxLbmTimeOut,
       "sle2EthCfmMepAttrControlLbrTimeOut": sle2EthCfmMepAttrControlLbrTimeOut,
       "sle2EthCfmMepAttrNotification": sle2EthCfmMepAttrNotification,
       "sle2EthCfmMepFaultProfileChanged": sle2EthCfmMepFaultProfileChanged,
       "sle2EthCfmMepTxLtmProfileChanged": sle2EthCfmMepTxLtmProfileChanged,
       "sle2EthCfmMepTxLbmProfileChanged": sle2EthCfmMepTxLbmProfileChanged,
       "sle2EthCfmMepAuttributesAllCleared": sle2EthCfmMepAuttributesAllCleared,
       "sle2EthernetCfmXcheck": sle2EthernetCfmXcheck,
       "sle2EthCfmXcheckTable": sle2EthCfmXcheckTable,
       "sle2EthCfmXcheckEntry": sle2EthCfmXcheckEntry,
       "sle2EthCfmXcheckRmepId": sle2EthCfmXcheckRmepId,
       "sle2EthCfmXcheckRmepMac": sle2EthCfmXcheckRmepMac,
       "sle2EthCfmXcheckControl": sle2EthCfmXcheckControl,
       "sle2EthCfmXcheckControlRequest": sle2EthCfmXcheckControlRequest,
       "sle2EthCfmXcheckControlStatus": sle2EthCfmXcheckControlStatus,
       "sle2EthCfmXcheckControlTimer": sle2EthCfmXcheckControlTimer,
       "sle2EthCfmXcheckControlTimeStamp": sle2EthCfmXcheckControlTimeStamp,
       "sle2EthCfmXcheckControlReqResult": sle2EthCfmXcheckControlReqResult,
       "sle2EthCfmXcheckControlBridgeId": sle2EthCfmXcheckControlBridgeId,
       "sle2EthCfmXcheckControlMdName": sle2EthCfmXcheckControlMdName,
       "sle2EthCfmXcheckControlMaVid": sle2EthCfmXcheckControlMaVid,
       "sle2EthCfmXcheckControlRmepId": sle2EthCfmXcheckControlRmepId,
       "sle2EthCfmXcheckControlRmepMac": sle2EthCfmXcheckControlRmepMac,
       "sle2EthCfmXcheckNotification": sle2EthCfmXcheckNotification,
       "sle2EthCfmXcheckMepCreated": sle2EthCfmXcheckMepCreated,
       "sle2EthCfmXcheckMepDestoryed": sle2EthCfmXcheckMepDestoryed,
       "sle2EthernetCfmLoopback": sle2EthernetCfmLoopback,
       "sle2EthCfmLoopbackTable": sle2EthCfmLoopbackTable,
       "sle2EthCfmLoopbackEntry": sle2EthCfmLoopbackEntry,
       "sle2EthCfmLbFrameType": sle2EthCfmLbFrameType,
       "sle2EthCfmLbReceivedCount": sle2EthCfmLbReceivedCount,
       "sle2EthCfmLbTxMessages": sle2EthCfmLbTxMessages,
       "sle2EthCfmLbResponseCount": sle2EthCfmLbResponseCount,
       "sle2EthCfmLbRemoteMacAddress": sle2EthCfmLbRemoteMacAddress,
       "sle2EthCfmLoopbackControl": sle2EthCfmLoopbackControl,
       "sle2EthCfmLbControlRequest": sle2EthCfmLbControlRequest,
       "sle2EthCfmLbControlStatus": sle2EthCfmLbControlStatus,
       "sle2EthCfmLbControlTimer": sle2EthCfmLbControlTimer,
       "sle2EthCfmLbControlTimeStamp": sle2EthCfmLbControlTimeStamp,
       "sle2EthCfmLbControlReqResult": sle2EthCfmLbControlReqResult,
       "sle2EthCfmLbControlBridgeId": sle2EthCfmLbControlBridgeId,
       "sle2EthCfmLbControlMdName": sle2EthCfmLbControlMdName,
       "sle2EthCfmLbControlMaVid": sle2EthCfmLbControlMaVid,
       "sle2EthCfmLbControlMepId": sle2EthCfmLbControlMepId,
       "sle2EthCfmLbControlMdLevel": sle2EthCfmLbControlMdLevel,
       "sle2EthCfmLbControlRmepId": sle2EthCfmLbControlRmepId,
       "sle2EthCfmLbControlRmepMac": sle2EthCfmLbControlRmepMac,
       "sle2EthCfmLbControlTlvType": sle2EthCfmLbControlTlvType,
       "sle2EthCfmLbControlTlvData": sle2EthCfmLbControlTlvData,
       "sle2EthCfmLbControlTlvTest": sle2EthCfmLbControlTlvTest,
       "sle2EthCfmLbControlRecursive": sle2EthCfmLbControlRecursive,
       "sle2EthCfmLoopbackNotification": sle2EthCfmLoopbackNotification,
       "sle2EthCfmLbTransmitMulticastFinished": sle2EthCfmLbTransmitMulticastFinished,
       "sle2EthCfmLbTransmitUnicastFinished": sle2EthCfmLbTransmitUnicastFinished,
       "sle2EthCfmLbTransmitMacFinished": sle2EthCfmLbTransmitMacFinished,
       "sle2EthCfmLbrFinished": sle2EthCfmLbrFinished,
       "sle2EthernetCfmLinkTrace": sle2EthernetCfmLinkTrace,
       "sle2EthCfmLinkTraceTable": sle2EthCfmLinkTraceTable,
       "sle2EthCfmLinkTraceEntry": sle2EthCfmLinkTraceEntry,
       "sle2EthCfmLtrMepMac": sle2EthCfmLtrMepMac,
       "sle2EthCfmLtrHops": sle2EthCfmLtrHops,
       "sle2EthCfmLtrRelay": sle2EthCfmLtrRelay,
       "sle2EthCfmLtrIngressEgress": sle2EthCfmLtrIngressEgress,
       "sle2EthCfmLtrIngress": sle2EthCfmLtrIngress,
       "sle2EthCfmLtrEgress": sle2EthCfmLtrEgress,
       "sle2EthCfmLinkTraceControl": sle2EthCfmLinkTraceControl,
       "sle2EthCfmLtControlRequest": sle2EthCfmLtControlRequest,
       "sle2EthCfmLtControlStatus": sle2EthCfmLtControlStatus,
       "sle2EthCfmLtControlTimer": sle2EthCfmLtControlTimer,
       "sle2EthCfmLtControlTimeStamp": sle2EthCfmLtControlTimeStamp,
       "sle2EthCfmLtControlReqResult": sle2EthCfmLtControlReqResult,
       "sle2EthCfmLtControlBridgeId": sle2EthCfmLtControlBridgeId,
       "sle2EthCfmLtControlMdName": sle2EthCfmLtControlMdName,
       "sle2EthCfmLtControlMaVid": sle2EthCfmLtControlMaVid,
       "sle2EthCfmLtControlLevel": sle2EthCfmLtControlLevel,
       "sle2EthCfmLtControlRmepMac": sle2EthCfmLtControlRmepMac,
       "sle2EthCfmLtControlMepId": sle2EthCfmLtControlMepId,
       "sle2EthCfmLinkTraceNotification": sle2EthCfmLinkTraceNotification,
       "sle2EthCfmLtTransmitDomainFinished": sle2EthCfmLtTransmitDomainFinished,
       "sle2EthCfmLtTransmitLevelFinished": sle2EthCfmLtTransmitLevelFinished,
       "sle2EthCfmLtrFinished": sle2EthCfmLtrFinished,
       "sle2EthernetCfmAis": sle2EthernetCfmAis,
       "sle2EthernetCfmAisInfo": sle2EthernetCfmAisInfo,
       "sle2EthCfmAisInfoTable": sle2EthCfmAisInfoTable,
       "sle2EthCfmAisInfoEntry": sle2EthCfmAisInfoEntry,
       "sle2EthCfmAisInfoStatus": sle2EthCfmAisInfoStatus,
       "sle2EthCfmAisInfoDefectConditions": sle2EthCfmAisInfoDefectConditions,
       "sle2EthCfmAisInfoLevel": sle2EthCfmAisInfoLevel,
       "sle2EthCfmAisInfoFrameType": sle2EthCfmAisInfoFrameType,
       "sle2EthCfmAisInfoRmepMac": sle2EthCfmAisInfoRmepMac,
       "sle2EthCfmAisInfoInterval": sle2EthCfmAisInfoInterval,
       "sle2EthCfmAisInfoReceivedDefectConditions": sle2EthCfmAisInfoReceivedDefectConditions,
       "sle2EthCfmAisInfoLastReceivedDefectCondition": sle2EthCfmAisInfoLastReceivedDefectCondition,
       "sle2EthCfmAisInfoControl": sle2EthCfmAisInfoControl,
       "sle2EthCfmAisInfoControlRequest": sle2EthCfmAisInfoControlRequest,
       "sle2EthCfmAisInfoControlStatus": sle2EthCfmAisInfoControlStatus,
       "sle2EthCfmAisInfoControlTimer": sle2EthCfmAisInfoControlTimer,
       "sle2EthCfmAisInfoControlTimeStamp": sle2EthCfmAisInfoControlTimeStamp,
       "sle2EthCfmAisInfoControlReqResult": sle2EthCfmAisInfoControlReqResult,
       "sle2EthCfmAisInfoControlBridgeId": sle2EthCfmAisInfoControlBridgeId,
       "sle2EthCfmAisInfoControlMdName": sle2EthCfmAisInfoControlMdName,
       "sle2EthCfmAisInfoControlMaVid": sle2EthCfmAisInfoControlMaVid,
       "sle2EthCfmAisInfoControlMepId": sle2EthCfmAisInfoControlMepId,
       "sle2EthCfmAisInfoControlEnable": sle2EthCfmAisInfoControlEnable,
       "sle2EthCfmAisInfoControlDefectConditions": sle2EthCfmAisInfoControlDefectConditions,
       "sle2EthCfmAisInfoControlLevel": sle2EthCfmAisInfoControlLevel,
       "sle2EthCfmAisInfoControlFrameType": sle2EthCfmAisInfoControlFrameType,
       "sle2EthCfmAisInfoControlRmepMac": sle2EthCfmAisInfoControlRmepMac,
       "sle2EthCfmAisInfoControlInterval": sle2EthCfmAisInfoControlInterval,
       "sle2EthCfmAisInfoNotification": sle2EthCfmAisInfoNotification,
       "sle2EthCfmAisInfoStatusChanged": sle2EthCfmAisInfoStatusChanged,
       "sle2EthCfmAisInfoIntervalChanged": sle2EthCfmAisInfoIntervalChanged,
       "sle2EthernetCfmSrvAis": sle2EthernetCfmSrvAis,
       "sle2EthCfmSrvAisTable": sle2EthCfmSrvAisTable,
       "sle2EthCfmSrvAisEntry": sle2EthCfmSrvAisEntry,
       "sle2EthCfmSrvAisIfIndex": sle2EthCfmSrvAisIfIndex,
       "sle2EthCfmSrvAisEnable": sle2EthCfmSrvAisEnable,
       "sle2EthCfmSrvAislevel": sle2EthCfmSrvAislevel,
       "sle2EthCfmSrvAisInterval": sle2EthCfmSrvAisInterval,
       "sle2EthCfmSrvAisControl": sle2EthCfmSrvAisControl,
       "sle2EthCfmSrvAisControlRequest": sle2EthCfmSrvAisControlRequest,
       "sle2EthCfmSrvAisControlStatus": sle2EthCfmSrvAisControlStatus,
       "sle2EthCfmSrvAisControlTimer": sle2EthCfmSrvAisControlTimer,
       "sle2EthCfmSrvAisControlTimeStamp": sle2EthCfmSrvAisControlTimeStamp,
       "sle2EthCfmSrvAisControlReqResult": sle2EthCfmSrvAisControlReqResult,
       "sle2EthCfmSrvAisControlBridgeId": sle2EthCfmSrvAisControlBridgeId,
       "sle2EthCfmSrvAisControlIfIndex": sle2EthCfmSrvAisControlIfIndex,
       "sle2EthCfmSrvAisControlEnable": sle2EthCfmSrvAisControlEnable,
       "sle2EthCfmSrvAisControlLevel": sle2EthCfmSrvAisControlLevel,
       "sle2EthCfmSrvAisControlInterval": sle2EthCfmSrvAisControlInterval,
       "sle2EthCfmSrvAisNotification": sle2EthCfmSrvAisNotification,
       "sle2EthCfmSrvAisChanged": sle2EthCfmSrvAisChanged,
       "sle2EthernetCfmLmStatus": sle2EthernetCfmLmStatus,
       "sle2EthCfmLmmStatusTable": sle2EthCfmLmmStatusTable,
       "sle2EthCfmLmmStatusEntry": sle2EthCfmLmmStatusEntry,
       "sle2EthCfmLmmStatusRmepId": sle2EthCfmLmmStatusRmepId,
       "sle2EthCfmLmmStatusStartTime": sle2EthCfmLmmStatusStartTime,
       "sle2EthCfmLmmStatusCurrentTime": sle2EthCfmLmmStatusCurrentTime,
       "sle2EthCfmLmmStatusEndTime": sle2EthCfmLmmStatusEndTime,
       "sle2EthCfmLmmStatusNeerLoss": sle2EthCfmLmmStatusNeerLoss,
       "sle2EthCfmLmmStatusFarLoss": sle2EthCfmLmmStatusFarLoss,
       "sle2EthCfmLmmStatusCurNeerLoss": sle2EthCfmLmmStatusCurNeerLoss,
       "sle2EthCfmLmmStatusCurFarLoss": sle2EthCfmLmmStatusCurFarLoss,
       "sle2EthernetCfmRmep": sle2EthernetCfmRmep,
       "sle2EthCfmRmepTable": sle2EthCfmRmepTable,
       "sle2EthCfmRmepEntry": sle2EthCfmRmepEntry,
       "sle2EthCfmRmepId": sle2EthCfmRmepId,
       "sle2EthCfmRempMepId": sle2EthCfmRempMepId,
       "sle2EthCfmRmepLevel": sle2EthCfmRmepLevel,
       "sle2EthCfmRmepMaVid": sle2EthCfmRmepMaVid,
       "sle2EthCfmRmepActiveState": sle2EthCfmRmepActiveState,
       "sle2EthCfmRmepRemoteMac": sle2EthCfmRmepRemoteMac,
       "sle2EthCfmRmepRdi": sle2EthCfmRmepRdi,
       "sle2EthCfmRmepFlags": sle2EthCfmRmepFlags,
       "sle2EthCfmRmepControl": sle2EthCfmRmepControl,
       "sle2EthCfmRmepControlRequest": sle2EthCfmRmepControlRequest,
       "sle2EthCfmRmepControlStatus": sle2EthCfmRmepControlStatus,
       "sle2EthCfmRmepControlTimer": sle2EthCfmRmepControlTimer,
       "sle2EthCfmRmepControlTimeStamp": sle2EthCfmRmepControlTimeStamp,
       "sle2EthCfmRmepControlReqResult": sle2EthCfmRmepControlReqResult,
       "sle2EthCfmRmepControlBridgeId": sle2EthCfmRmepControlBridgeId,
       "sle2EthCfmRmepControlMdName": sle2EthCfmRmepControlMdName,
       "sle2EthCfmRmepControlMdLevel": sle2EthCfmRmepControlMdLevel,
       "sle2EthCfmRmepNotification": sle2EthCfmRmepNotification,
       "sle2EthCfmRmepDomainCleared": sle2EthCfmRmepDomainCleared,
       "sle2EthCfmRmepLevelCleared": sle2EthCfmRmepLevelCleared,
       "sle2EthernetCfmMip": sle2EthernetCfmMip,
       "sle2EthCfmMipTable": sle2EthCfmMipTable,
       "sle2EthCfmMipEntry": sle2EthCfmMipEntry,
       "sle2EthCfmMipVid": sle2EthCfmMipVid,
       "sle2EthCfmMipMdLevel": sle2EthCfmMipMdLevel,
       "sle2EthCfmMipIfindex": sle2EthCfmMipIfindex,
       "sle2EthCfmMipLocalMac": sle2EthCfmMipLocalMac,
       "sle2EthernetCfmStatistics": sle2EthernetCfmStatistics,
       "sle2EthCfmStatisticsTable": sle2EthCfmStatisticsTable,
       "sle2EthCfmStatisticsEntry": sle2EthCfmStatisticsEntry,
       "sle2EthCfmStatCcmSent": sle2EthCfmStatCcmSent,
       "sle2EthCfmStatCcmRevOutOfSeq": sle2EthCfmStatCcmRevOutOfSeq,
       "sle2EthCfmStatLbrSent": sle2EthCfmStatLbrSent,
       "sle2EthCfmStatLbrRevValid": sle2EthCfmStatLbrRevValid,
       "sle2EthCfmStatLbrRevBadMsdu": sle2EthCfmStatLbrRevBadMsdu,
       "sle2EthCfmStatLbrRevOutOfSeq": sle2EthCfmStatLbrRevOutOfSeq,
       "sle2EthCfmStatLtrRevUnexpected": sle2EthCfmStatLtrRevUnexpected,
       "sle2EthernetCfmActiveLevel": sle2EthernetCfmActiveLevel,
       "sle2EthCfmActiveLevelTable": sle2EthCfmActiveLevelTable,
       "sle2EthCfmActiveLevelEntry": sle2EthCfmActiveLevelEntry,
       "sle2EthCfmAcitveLevelIfIndex": sle2EthCfmAcitveLevelIfIndex,
       "sle2EthCfmActiveLevelStatus": sle2EthCfmActiveLevelStatus,
       "sle2EthernetCfmError": sle2EthernetCfmError,
       "sle2EthCfmErrorTable": sle2EthCfmErrorTable,
       "sle2EthCfmErrorEntry": sle2EthCfmErrorEntry,
       "sle2EthCfmErrorIndex": sle2EthCfmErrorIndex,
       "sle2EthCfmErrorMdLevel": sle2EthCfmErrorMdLevel,
       "sle2EthCfmErrorMaVid": sle2EthCfmErrorMaVid,
       "sle2EthCfmErrorMepId": sle2EthCfmErrorMepId,
       "sle2EthCfmErrorRmepMac": sle2EthCfmErrorRmepMac,
       "sle2EthCfmErrorReason": sle2EthCfmErrorReason,
       "sle2EthCfmErrorServiceId": sle2EthCfmErrorServiceId,
       "sle2EthCfmErrorControl": sle2EthCfmErrorControl,
       "sle2EthCfmErrorControlRequest": sle2EthCfmErrorControlRequest,
       "sle2EthCfmErrorControlStatus": sle2EthCfmErrorControlStatus,
       "sle2EthCfmErrorControlTimer": sle2EthCfmErrorControlTimer,
       "sle2EthCfmErrorControlTimeStamp": sle2EthCfmErrorControlTimeStamp,
       "sle2EthCfmErrorControlReqResult": sle2EthCfmErrorControlReqResult,
       "sle2EthCfmErrorControlBridgeId": sle2EthCfmErrorControlBridgeId,
       "sle2EthCfmErrorControlMdName": sle2EthCfmErrorControlMdName,
       "sle2EthCfmErrorControlMdLevel": sle2EthCfmErrorControlMdLevel,
       "sle2EthCfmErrorNotification": sle2EthCfmErrorNotification,
       "sle2EthCfmErrorDomainCleared": sle2EthCfmErrorDomainCleared,
       "sle2EthCfmErrorLevelCleared": sle2EthCfmErrorLevelCleared,
       "sle2EthernetCfmLtCache": sle2EthernetCfmLtCache,
       "sle2EthCfmLtCacheTable": sle2EthCfmLtCacheTable,
       "sle2EthCfmLtCacheEntry": sle2EthCfmLtCacheEntry,
       "sle2EthCfmLtCacheIndex": sle2EthCfmLtCacheIndex,
       "sle2EthCfmLtCacheSrcMac": sle2EthCfmLtCacheSrcMac,
       "sle2EthCfmLtCacheHops": sle2EthCfmLtCacheHops,
       "sle2EthCfmLtCacheRelay": sle2EthCfmLtCacheRelay,
       "sle2Erps": sle2Erps,
       "sle2ErpsPhyRing": sle2ErpsPhyRing,
       "sle2ErpsPhyRingTable": sle2ErpsPhyRingTable,
       "sle2ErpsPhyRingEntry": sle2ErpsPhyRingEntry,
       "sle2ErpsPhyRingBridgeId": sle2ErpsPhyRingBridgeId,
       "sle2ErpsPhyRingName": sle2ErpsPhyRingName,
       "sle2ErpsPhyRingEastPort": sle2ErpsPhyRingEastPort,
       "sle2ErpsPhyRingEastMepId": sle2ErpsPhyRingEastMepId,
       "sle2ErpsPhyRingEastRmepId": sle2ErpsPhyRingEastRmepId,
       "sle2ErpsPhyRingWestPort": sle2ErpsPhyRingWestPort,
       "sle2ErpsPhyRingWestMepId": sle2ErpsPhyRingWestMepId,
       "sle2ErpsPhyRingWestRmepId": sle2ErpsPhyRingWestRmepId,
       "sle2ErpsPhyRingControl": sle2ErpsPhyRingControl,
       "sle2ErpsPhyRingControlRequest": sle2ErpsPhyRingControlRequest,
       "sle2ErpsPhyRingControlStatus": sle2ErpsPhyRingControlStatus,
       "sle2ErpsPhyRingControlTimer": sle2ErpsPhyRingControlTimer,
       "sle2ErpsPhyRingControlTimeStamp": sle2ErpsPhyRingControlTimeStamp,
       "sle2ErpsPhyRingControlReqResult": sle2ErpsPhyRingControlReqResult,
       "sle2ErpsPhyRingControlBridgeId": sle2ErpsPhyRingControlBridgeId,
       "sle2ErpsPhyRingControName": sle2ErpsPhyRingControName,
       "sle2ErpsPhyRingControEastPort": sle2ErpsPhyRingControEastPort,
       "sle2ErpsPhyRingControWestPort": sle2ErpsPhyRingControWestPort,
       "sle2ErpsPhyRingControlMepId": sle2ErpsPhyRingControlMepId,
       "sle2ErpsPhyRingControlRmepId": sle2ErpsPhyRingControlRmepId,
       "sleErpsPhyRingNotification": sleErpsPhyRingNotification,
       "sle2ErpsPhyRingCreated": sle2ErpsPhyRingCreated,
       "sle2ErpsPhyRingDestoryed": sle2ErpsPhyRingDestoryed,
       "sle2ErpsPhyRingEastPortAdded": sle2ErpsPhyRingEastPortAdded,
       "sle2ErpsPhyRingEastPortDeleted": sle2ErpsPhyRingEastPortDeleted,
       "sle2ErpsPhyRingWestPortAdded": sle2ErpsPhyRingWestPortAdded,
       "sle2ErpsPhyRingWestPortDeleted": sle2ErpsPhyRingWestPortDeleted,
       "sle2ErpsPhyRingEastMepIdAdded": sle2ErpsPhyRingEastMepIdAdded,
       "sle2ErpsPhyRingEastMepIdDeleted": sle2ErpsPhyRingEastMepIdDeleted,
       "sle2ErpsPhyRingWestMepIdAdded": sle2ErpsPhyRingWestMepIdAdded,
       "sle2ErpsPhyRingWestMepIdDeleted": sle2ErpsPhyRingWestMepIdDeleted,
       "sle2ErpsProfile": sle2ErpsProfile,
       "sle2ErpsProfileTable": sle2ErpsProfileTable,
       "sle2ErpsProfileEntry": sle2ErpsProfileEntry,
       "sle2ErpsProfileBridgeId": sle2ErpsProfileBridgeId,
       "sle2ErpsProfileName": sle2ErpsProfileName,
       "sle2ErpsProfileHoldOffTime": sle2ErpsProfileHoldOffTime,
       "sle2ErpsProfileGuardTime": sle2ErpsProfileGuardTime,
       "sle2ErpsProfileWaitToRestore": sle2ErpsProfileWaitToRestore,
       "sle2ErpsProfileNonRevertive": sle2ErpsProfileNonRevertive,
       "sle2ErpsProfileControl": sle2ErpsProfileControl,
       "sle2ErpsProfileControlRequest": sle2ErpsProfileControlRequest,
       "sle2ErpsProfileControlStatus": sle2ErpsProfileControlStatus,
       "sle2ErpsProfileControlTimer": sle2ErpsProfileControlTimer,
       "sle2ErpsProfileControlTimeStamp": sle2ErpsProfileControlTimeStamp,
       "sle2ErpsProfileControlReqResult": sle2ErpsProfileControlReqResult,
       "sle2ErpsProfileControlBridgeId": sle2ErpsProfileControlBridgeId,
       "sle2ErpsProfileControlName": sle2ErpsProfileControlName,
       "sle2ErpsProfileControlHoldOffTime": sle2ErpsProfileControlHoldOffTime,
       "sle2ErpsProfileControlGuardTime": sle2ErpsProfileControlGuardTime,
       "sle2ErpsProfileControlWaitToRestore": sle2ErpsProfileControlWaitToRestore,
       "sle2ErpsProfileControlNonRevertive": sle2ErpsProfileControlNonRevertive,
       "sle2ErpsProfileNotification": sle2ErpsProfileNotification,
       "sle2ErpsProfileCreated": sle2ErpsProfileCreated,
       "sle2ErpsProfileDestoryed": sle2ErpsProfileDestoryed,
       "sle2ErpsProfileTimerChanged": sle2ErpsProfileTimerChanged,
       "sle2ErpsProfileNoneRevertiveChanged": sle2ErpsProfileNoneRevertiveChanged,
       "sle2ErpsInstance": sle2ErpsInstance,
       "sle2ErpsInstanceTable": sle2ErpsInstanceTable,
       "sle2ErpsInstanceEntry": sle2ErpsInstanceEntry,
       "sle2ErpsInstBridgeId": sle2ErpsInstBridgeId,
       "sle2ErpsInstName": sle2ErpsInstName,
       "sle2ErpsInstPhyRingName": sle2ErpsInstPhyRingName,
       "sle2ErpsInstProfileName": sle2ErpsInstProfileName,
       "sle2ErpsInstRingId": sle2ErpsInstRingId,
       "sle2ErpsInstLevel": sle2ErpsInstLevel,
       "sle2ErpsInstRplRole": sle2ErpsInstRplRole,
       "sle2ErpsInstRplRolePort": sle2ErpsInstRplRolePort,
       "sle2ErpsInstSubRingBlock": sle2ErpsInstSubRingBlock,
       "sle2ErpsInstCtrlVlan": sle2ErpsInstCtrlVlan,
       "sle2ErpsInstTafficVlans": sle2ErpsInstTafficVlans,
       "sle2ErpsInstChannelMode": sle2ErpsInstChannelMode,
       "sle2ErpsInstVChannelVid": sle2ErpsInstVChannelVid,
       "sle2ErpsInstVChannelAttachInstName": sle2ErpsInstVChannelAttachInstName,
       "sle2ErpsInstPropagateTc": sle2ErpsInstPropagateTc,
       "sle2ErpsInstActive": sle2ErpsInstActive,
       "sle2ErpsInstStatus": sle2ErpsInstStatus,
       "sle2ErpsInstEastIfindex": sle2ErpsInstEastIfindex,
       "sle2ErpsInstEastPortStatus": sle2ErpsInstEastPortStatus,
       "sle2ErpsInstWestIfindex": sle2ErpsInstWestIfindex,
       "sle2ErpsInstWestPortStatus": sle2ErpsInstWestPortStatus,
       "sle2ErpsInstVersion": sle2ErpsInstVersion,
       "sle2ErpsInstDataTrafficInheritanceInstName": sle2ErpsInstDataTrafficInheritanceInstName,
       "sle2ErpsInstanceControl": sle2ErpsInstanceControl,
       "sle2ErpsInstControlRequest": sle2ErpsInstControlRequest,
       "sle2ErpsInstControlStatus": sle2ErpsInstControlStatus,
       "sle2ErpsInstControlTimer": sle2ErpsInstControlTimer,
       "sle2ErpsInstControlTimeStamp": sle2ErpsInstControlTimeStamp,
       "sle2ErpsInstControlReqResult": sle2ErpsInstControlReqResult,
       "sle2ErpsInstControlBridgeId": sle2ErpsInstControlBridgeId,
       "sle2ErpsInstControlName": sle2ErpsInstControlName,
       "sle2ErpsInstControlPhyRingName": sle2ErpsInstControlPhyRingName,
       "sle2ErpsInstControlProfileName": sle2ErpsInstControlProfileName,
       "sle2ErpsInstControlRingId": sle2ErpsInstControlRingId,
       "sle2ErpsInstControlLevel": sle2ErpsInstControlLevel,
       "sle2ErpsInstControlRplRole": sle2ErpsInstControlRplRole,
       "sle2ErpsInstControlRplRolePort": sle2ErpsInstControlRplRolePort,
       "sle2ErpsInstControlSubRingBlock": sle2ErpsInstControlSubRingBlock,
       "sle2ErpsInstControlCtrlVlan": sle2ErpsInstControlCtrlVlan,
       "sle2ErpsInstControlTafficVlans": sle2ErpsInstControlTafficVlans,
       "sle2ErpsInstControlVChannelVid": sle2ErpsInstControlVChannelVid,
       "sle2ErpsInstControlVChannelAttachInstName": sle2ErpsInstControlVChannelAttachInstName,
       "sle2ErpsInstControlForcedSwitch": sle2ErpsInstControlForcedSwitch,
       "sle2ErpsInstControlManualSwitch": sle2ErpsInstControlManualSwitch,
       "sle2ErpsInstControlPropagateTc": sle2ErpsInstControlPropagateTc,
       "sle2ErpsInstControlVersion": sle2ErpsInstControlVersion,
       "sle2ErpsInstControlActive": sle2ErpsInstControlActive,
       "sle2ErpsInstControlDataTrafficInheritanceInstName": sle2ErpsInstControlDataTrafficInheritanceInstName,
       "sle2ErpsInstanceNotification": sle2ErpsInstanceNotification,
       "sle2ErpsInstCreated": sle2ErpsInstCreated,
       "sle2ErpsInstDestoryed": sle2ErpsInstDestoryed,
       "sle2ErpsInstPhyRingAdded": sle2ErpsInstPhyRingAdded,
       "sle2ErpsInstPhyRingDeleted": sle2ErpsInstPhyRingDeleted,
       "sle2ErpsInstProfileAdded": sle2ErpsInstProfileAdded,
       "sle2ErpsInstProfileDeleted": sle2ErpsInstProfileDeleted,
       "sle2ErpsInstRingIdChanged": sle2ErpsInstRingIdChanged,
       "sle2ErpsInstLevelChanged": sle2ErpsInstLevelChanged,
       "sle2ErpsInstRplRoleChanged": sle2ErpsInstRplRoleChanged,
       "sle2ErpsInstSubRingAdded": sle2ErpsInstSubRingAdded,
       "sle2ErpsInstSubRingDeleted": sle2ErpsInstSubRingDeleted,
       "sle2ErpsInstCtrlVlanAdded": sle2ErpsInstCtrlVlanAdded,
       "sle2ErpsInstCtrlVlanDeleted": sle2ErpsInstCtrlVlanDeleted,
       "sle2ErpsInstDataTrafficVlanAdded": sle2ErpsInstDataTrafficVlanAdded,
       "sle2ErpsInstDataTrafficVlanDeleted": sle2ErpsInstDataTrafficVlanDeleted,
       "sle2ErpsInstVitrualChannelAdded": sle2ErpsInstVitrualChannelAdded,
       "sle2ErpsInstVitrualChannelDeleted": sle2ErpsInstVitrualChannelDeleted,
       "sle2ErpsInstNoneVirtualChannelAdded": sle2ErpsInstNoneVirtualChannelAdded,
       "sle2ErpsInstNoneVirtualChannelDeleted": sle2ErpsInstNoneVirtualChannelDeleted,
       "sle2ErpsInstForcedSwichChanged": sle2ErpsInstForcedSwichChanged,
       "sle2ErpsInstManualSwichChanged": sle2ErpsInstManualSwichChanged,
       "sle2ErpsInstClearChanged": sle2ErpsInstClearChanged,
       "sle2ErpsInstPropagateTcChanged": sle2ErpsInstPropagateTcChanged,
       "sle2ErpInstVersionChanged": sle2ErpInstVersionChanged,
       "sle2ErpInstActiveChanged": sle2ErpInstActiveChanged,
       "sle2ErpInstDataTrafficInheritanceInstNameChanged": sle2ErpInstDataTrafficInheritanceInstNameChanged,
       "sle2ErpInstDataTrafficInheritanceInstNameDeleted": sle2ErpInstDataTrafficInheritanceInstNameDeleted,
       "sleFaultMgmtGroup": sleFaultMgmtGroup,
       "sleFaultMgmtNotificationGroup": sleFaultMgmtNotificationGroup}
)
