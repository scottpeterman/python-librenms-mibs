# SNMP MIB module (CM-FACILITY-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\adva\CM-FACILITY-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 11:15:04 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(fsp150cm,) = mibBuilder.importSymbols(
    "ADVA-MIB",
    "fsp150cm")

(AdminState,
 AfpTagControl,
 CmTrafficACLPriorityType,
 CmTrafficAclFilterActionType,
 CmTrafficAclFilterType,
 CmTrafficAclProtocolType,
 EthernetMediaType,
 EthernetPortSpeed,
 F3DisplayString,
 FlowSecState,
 IpVersion,
 OperationalState,
 PriorityMapMode,
 SecondaryState,
 SfpConnectorValue,
 SfpIdentifierValue,
 SfpMediaType,
 SignalDirectionType,
 TDMFrequencySourceType,
 TrafficDirection,
 UsbOperationalMode,
 VlanEthertype,
 VlanId,
 VlanPriority,
 VlanTagType) = mibBuilder.importSymbols(
    "CM-COMMON-MIB",
    "AdminState",
    "AfpTagControl",
    "CmTrafficACLPriorityType",
    "CmTrafficAclFilterActionType",
    "CmTrafficAclFilterType",
    "CmTrafficAclProtocolType",
    "EthernetMediaType",
    "EthernetPortSpeed",
    "F3DisplayString",
    "FlowSecState",
    "IpVersion",
    "OperationalState",
    "PriorityMapMode",
    "SecondaryState",
    "SfpConnectorValue",
    "SfpIdentifierValue",
    "SfpMediaType",
    "SignalDirectionType",
    "TDMFrequencySourceType",
    "TrafficDirection",
    "UsbOperationalMode",
    "VlanEthertype",
    "VlanId",
    "VlanPriority",
    "VlanTagType")

(f3UsbHostIndex,
 neIndex,
 networkElementEntry,
 shelfIndex,
 slotIndex) = mibBuilder.importSymbols(
    "CM-ENTITY-MIB",
    "f3UsbHostIndex",
    "neIndex",
    "networkElementEntry",
    "shelfIndex",
    "slotIndex")

(PhysicalIndex,) = mibBuilder.importSymbols(
    "ENTITY-MIB",
    "PhysicalIndex")

(f3LagIndex,) = mibBuilder.importSymbols(
    "F3-LAG-MIB",
    "f3LagIndex")

(ClkSignalType,
 SSMQualityLevel,
 SquelchControl,
 TimeSource) = mibBuilder.importSymbols(
    "F3-SYNC-MIB",
    "ClkSignalType",
    "SSMQualityLevel",
    "SquelchControl",
    "TimeSource")

(InterfaceIndex,) = mibBuilder.importSymbols(
    "IF-MIB",
    "InterfaceIndex")

(Ipv6Address,) = mibBuilder.importSymbols(
    "IPV6-TC",
    "Ipv6Address")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DateAndTime,
 DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 StorageType,
 TextualConvention,
 TruthValue,
 VariablePointer) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "StorageType",
    "TextualConvention",
    "TruthValue",
    "VariablePointer")


# MODULE-IDENTITY

cmFacilityMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4)
)
if mibBuilder.loadTexts:
    cmFacilityMIB.setRevisions(
        ("2021-01-27 00:00",)
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class LocationMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("navigation", 1),
          ("survey-in", 2),
          ("fixed", 3))
    )



class TimeAdvanceMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("auto", 1),
          ("fixed", 2))
    )



class SynceRxSsmQl(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("ql-dnu", 1),
          ("ssm-based", 2),
          ("ql-prc", 3))
    )



class SynceMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("slave", 1),
          ("master", 2))
    )



class SciSignalMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("sci-1pps", 1),
          ("sci-2M", 2),
          ("sci-10M", 3))
    )



class SciSignalDirection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("output", 1),
          ("input", 2))
    )



class SciRxSsmQL(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("prc", 1),
          ("dnu", 2))
    )



class XDSLAnnex(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("annexa", 1),
          ("annexb", 2),
          ("annexc", 3),
          ("annexl", 4),
          ("annexm", 5))
    )



class XDSLMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("vdsl2", 1),
          ("adsl2Plus", 2),
          ("adsl2", 3),
          ("unkown", 4))
    )



class XDSLCarrierSet(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("auto", 1),
          ("a43", 2),
          ("b43", 3),
          ("v43", 4),
          ("a43c", 5))
    )



class XDSLStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("showtime", 1),
          ("training", 2),
          ("handshake", 3),
          ("idle", 4),
          ("other", 5))
    )



class XDSLControlChannel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("none", 1),
          ("pppoe", 2))
    )



class VDSLProfileField(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("unknown", 1),
          ("profile-8a", 2),
          ("profile-8b", 3),
          ("profile-8c", 4),
          ("profile-8d", 5),
          ("profile-12a", 6),
          ("profile-12b", 7),
          ("profile-17a", 8),
          ("profile-30a", 9))
    )



class VDSLProfileFields(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("profile-8a", 0),
          ("profile-8b", 1),
          ("profile-8c", 2),
          ("profile-8d", 3),
          ("profile-12a", 4),
          ("profile-12b", 5),
          ("profile-17a", 6),
          ("profile-30a", 7))
    )


class XDSLModulationMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("vdsl2", 1))
    )



class PPPoEConnectionStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("connected", 1),
          ("connecting", 2),
          ("disconnected", 3))
    )



class CmEthernetSvcPortMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("connection-oriented", 1),
          ("connection-less", 2))
    )



class CmEthernetSvcType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("epl", 1),
          ("evpl", 2))
    )



class CmEthernetTrafficSvcType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all-to-one", 1),
          ("service-multiplexing", 2))
    )



class CmAclConfiguration(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("all-bk-l2", 1),
          ("all-bk-l2-ipv4", 2),
          ("two-bk-l2-ipv4", 3),
          ("one-bk-l2-ipv4", 4),
          ("none-bk-l2-ipv4", 5))
    )



class CmAfpType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("tagged", 1),
          ("untagged", 2),
          ("all", 3))
    )



class CmEthernetDiagAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("autoneg", 1),
          ("cable", 2),
          ("loopback", 3),
          ("efm-oam-lpbk", 4),
          ("all", 5))
    )



class CmDiagCableCondType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("cableshort", 1),
          ("cableopen", 2),
          ("cableimpedance", 3),
          ("cablenotfound", 4),
          ("cableok", 5),
          ("cablefailed", 6),
          ("cablenotrun", 7))
    )



class CmDiagAutoNegCondType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("autonegok", 1),
          ("autonegfailed", 2),
          ("autonegnotrun", 3))
    )



class CmDiagLpbkCondType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("lpbkok", 1),
          ("lpbkfailed", 2),
          ("lpbknotrun", 3))
    )



class CmDiagEfmOamLpbkCondType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("efmlpbkok", 1),
          ("efmlpbkfailed", 2),
          ("efmlpbkfailednendNA", 3),
          ("efmlpbkfailedfendNA", 4),
          ("efmlpbknotrun", 5))
    )



class CmDiagTestStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("initial", 1),
          ("in-progress", 2),
          ("stopped", 3),
          ("completed", 4),
          ("aborted", 5))
    )



class CmControlProtocolFilterType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("efmoam", 1),
          ("pause", 2))
    )



class CmLoopbackType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28)
        )
    )
    namedValues = NamedValues(
        *(("lpbk-none", 1),
          ("efm-oam-remote", 2),
          ("efm-oam-remote-timed", 3),
          ("facility-port", 4),
          ("facility-port-timed", 5),
          ("facility-vlan", 6),
          ("terminal-port", 7),
          ("terminal-port-timed", 8),
          ("terminal-vlan", 9),
          ("efm-oam-tailend", 10),
          ("facility-payload", 11),
          ("facility-payload-timed", 12),
          ("remote-facility", 13),
          ("remote-facility-payload", 14),
          ("tailend-facility", 15),
          ("tailend-facility-payload", 16),
          ("terminal-itag", 17),
          ("facility-itag", 18),
          ("jdsu-terminal-port-tailend", 19),
          ("jdsu-terminal-vlan-tailend", 20),
          ("jdsu-facility-port-tailend", 21),
          ("jdsu-facility-vlan-tailend", 22),
          ("facility-och", 23),
          ("facility-och-timed", 24),
          ("terminal-och", 25),
          ("terminal-och-timed", 26),
          ("jdsu-facility-port-l3-tailend", 27),
          ("jdsu-facility-vlan-l3-tailend", 28))
    )



class CmSwapSADAType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("noswapSADA", 1),
          ("swapSADA", 2),
          ("swapDAOverrideSA", 3),
          ("swapSADAMacOnly", 4),
          ("swapDAOverridesSAMacOnly", 5),
          ("swapIP", 6),
          ("swapTCPUDP", 7))
    )



class CmControlProtocolDispType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("discard", 1),
          ("peer", 2),
          ("pass-thru", 3),
          ("use-group-setting", 4),
          ("not-active", 5),
          ("use-port-setting", 6),
          ("pass-thru-l2pt", 7),
          ("useMacSetting", 8))
    )



class CmLinkLossFwdSignalType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("llf-efm-signal", 1),
          ("llf-link-down", 2),
          ("llf-odu-ais", 3),
          ("llf-odu-lck", 4),
          ("llf-odu-tim", 5),
          ("llf-odu-bdi", 6),
          ("llf-opu-plm", 7),
          ("llf-opu-csf", 8),
          ("llf-eth-epc", 9))
    )



class CmLinkLossFwdTriggerTypes(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("trig-efm-signal", 1),
          ("trig-link-down", 2),
          ("trig-odu-ais", 3),
          ("trig-odu-lck", 4),
          ("trig-odu-tim", 5),
          ("trig-odu-bdi", 6),
          ("trig-opu-plm", 7),
          ("trig-opu-csf", 8))
    )


class CmLinkLossFwdTxActionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("llf-tx-no-action", 1),
          ("llf-tx-efm-signal", 2),
          ("llf-tx-link-down", 3),
          ("llf-odu-ais", 4),
          ("llf-opu-csf", 5),
          ("llf-otu-ais", 6))
    )



class CmRemoteLinkIds(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("remoteLinkId1", 1),
          ("remoteLinkId2", 2),
          ("remoteLinkId3", 3),
          ("remoteLinkId4", 4),
          ("remoteLinkId5", 5),
          ("remoteLinkId6", 6),
          ("remoteLinkId7", 7),
          ("remoteLinkId8", 8),
          ("remoteLinkId9", 9),
          ("remoteLinkId10", 10),
          ("remoteLinkId11", 11),
          ("remoteLinkId12", 12),
          ("remoteLinkId13", 13),
          ("remoteLinkId14", 14),
          ("remoteLinkId15", 15),
          ("remoteLinkId16", 16),
          ("remoteLinkId17", 17),
          ("remoteLinkId18", 18),
          ("remoteLinkId19", 19),
          ("remoteLinkId20", 20),
          ("remoteLinkId21", 21),
          ("remoteLinkId22", 22),
          ("remoteLinkId23", 23),
          ("remoteLinkId24", 24),
          ("remoteLinkId25", 25),
          ("remoteLinkId26", 26))
    )


class CmOamMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("active", 1),
          ("passive", 2))
    )



class CmOamAdminState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("enabled", 1),
          ("disabled", 2))
    )



class CmOamDiscoveryState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("fault", 1),
          ("activesendlocal", 2),
          ("passivewait", 3),
          ("sendlocalremote", 4),
          ("sendlocalremoteok", 5),
          ("sendany", 6))
    )



class CmFlowType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("portbased", 1),
          ("regular", 2),
          ("default", 3))
    )



class CmEthernetMDIXType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 1),
          ("auto-mdix", 2),
          ("crossed", 3),
          ("uncrossed", 4),
          ("notAvailable", 5))
    )



class FlowTrafficType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("shaped-only", 1),
          ("policed-shaped", 2),
          ("policed-only", 3))
    )



class FlowVlanActionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no-action", 1),
          ("add-vlan", 2),
          ("remove-vlan", 3))
    )



class FlowTagControl(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("push", 2),
          ("swapvid", 3),
          ("pushvid", 4),
          ("pop", 5),
          ("pushisid", 6))
    )



class PrioMapControlType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("swap", 2))
    )



class PolicerAlgorithmType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("srTCM", 1),
          ("trTCM", 2))
    )



class PolicerColorMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("color-aware", 1),
          ("color-blind", 2))
    )



class BitsPortType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bits-in", 1),
          ("bits-out", 2))
    )



class BitsPortLineType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("t1", 1),
          ("e1", 2),
          ("type-2048kHz", 3),
          ("other", 4))
    )



class BitsPortLineCode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("t1-b8zs", 2),
          ("t1-ami", 3),
          ("e1-hdb3", 4),
          ("e1-ami", 5))
    )



class BitsFrameFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("t1-sf", 2),
          ("t1-esf", 3),
          ("e1-unframed", 4),
          ("e1-crc4", 5),
          ("e1-dualframe", 6))
    )



class SaBitDesignation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("bit4", 2),
          ("bit5", 3),
          ("bit6", 4),
          ("bit7", 5),
          ("bit8", 6))
    )



class CmActiveControlProtocolsType(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("ciscoGroup", 1),
          ("isl", 2),
          ("pagp", 3),
          ("udld", 4),
          ("cdp", 5),
          ("vtp", 6),
          ("dtp", 7),
          ("pvstpplus", 8),
          ("uplinkfast", 9),
          ("vlanbridge", 10),
          ("l2pt", 11),
          ("bridgegroup", 12),
          ("bpdu", 13),
          ("pause", 14),
          ("lacp", 15),
          ("lacpmarker", 16),
          ("efmoam", 17),
          ("ssm", 18),
          ("portauthen", 19),
          ("bridgereserved", 20),
          ("lanbridges", 21),
          ("garpgroup", 22),
          ("gmrp", 23),
          ("gvrp", 24),
          ("garp", 25),
          ("lldp", 26),
          ("elmi", 27),
          ("mac00", 28),
          ("mac01", 29),
          ("mac02", 30),
          ("mac03", 31),
          ("mac04", 32),
          ("mac05", 33),
          ("mac06", 34),
          ("mac07", 35),
          ("mac08", 36),
          ("mac09", 37),
          ("mac0A", 38),
          ("mac0B", 39),
          ("mac0C", 40),
          ("mac0D", 41),
          ("mac0E", 42),
          ("mac0F", 43),
          ("nearestlldp", 44),
          ("nontpmrlldp", 45),
          ("customerlldp", 46),
          ("ptpNonfwdUntagged", 47),
          ("ptpNonfwdTagged", 48))
    )


class PcpDEEncType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("enc-none", 1),
          ("enc-7p1d", 2),
          ("enc-6p2d", 3),
          ("enc-5p3d", 4),
          ("enc-custom", 5))
    )



class PcpDEPairsAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("apply-pairs", 1))
    )



class LineBuildOut(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("lbo-0-133ft", 1),
          ("lbo-133-266ft", 2),
          ("lbo-266-399ft", 3),
          ("lbo-399-533ft", 4),
          ("lbo-533-655ft", 5),
          ("lbo-7dot5db", 6),
          ("lbo-15db", 7),
          ("lbo-22dot5db", 8))
    )



class BitsPortImpedanceMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("bits-120Ohm", 1),
          ("bits-100Ohm", 2),
          ("bits-75Ohm", 3),
          ("bits-50Ohm", 4))
    )



class ShapingType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("port-based", 1),
          ("flow-based", 2),
          ("llq", 3))
    )



class XgePhyType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("lan", 1),
          ("wan", 2),
          ("otn", 3))
    )



class F3Usb3GDCNPINCodeActionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("enable-pin", 1),
          ("disable-pin", 2),
          ("change-pin", 3),
          ("authentication-pin", 4),
          ("unlock-pin", 5))
    )



class F3Usb3GSimCardState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("ok", 1),
          ("notinserted", 2),
          ("networkrejected", 3),
          ("unknown", 4))
    )



class F3Usb3GNetworkConnectionState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("connecting", 1),
          ("connected", 2),
          ("disconnected", 3))
    )



class F3Usb3GRecvSignalStrengthInd(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("high", 1),
          ("medium", 2),
          ("low", 3),
          ("none", 4))
    )



class TrailTraceFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("onebytemode", 1),
          ("sixteenbytemode", 2),
          ("sixtyfourbytemode", 3))
    )



class MultiplexingStructure(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("vt-sts1", 1),
          ("sts1spe-sts1", 2),
          ("sts3cspe-sts3c", 3),
          ("vc12-vc4-aug", 4),
          ("vc12-vc3-aug", 5),
          ("vc3-aug", 6),
          ("vc3-vc4-aug", 7),
          ("vc4-aug", 8),
          ("custom", 9))
    )



class EoTDMMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("eosdh", 1),
          ("eopdh", 2))
    )



class BitErrRate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ber-1e-1", 1),
          ("ber-1e-2", 2),
          ("ber-1e-3", 3),
          ("ber-1e-4", 4),
          ("ber-1e-5", 5),
          ("ber-1e-6", 6),
          ("ber-1e-7", 7),
          ("ber-1e-8", 8),
          ("ber-1e-9", 9),
          ("ber-1e-10", 10))
    )



class GFPEncapsulationType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("gfp", 1),
          ("gfp-fcs", 2),
          ("gfp-novcat", 3),
          ("gfp-zerovcat", 4),
          ("gfp-fcs-novcat", 5),
          ("gfp-fcs-zerovcat", 6),
          ("x86", 7))
    )



class PPSInputRate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pulse-per-sec", 1),
          ("pulse-per-2sec", 2))
    )



class PPSPhyInterfaceType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("pps", 1),
          ("tod", 2))
    )



class OCNSTMPortType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("oc12", 1),
          ("oc3", 2),
          ("stm4", 3),
          ("stm1", 4))
    )



class E1T1LineType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("t1", 1),
          ("e1", 2))
    )



class E1T1LineCode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("t1-b8zs", 2),
          ("t1-ami", 3),
          ("e1-hdb3", 4),
          ("e1-ami", 5))
    )



class E1T1FrameFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("t1-sf", 2),
          ("t1-esf", 3),
          ("e1-unframed", 4),
          ("e1-crc4", 5),
          ("e1-dualframe", 6),
          ("t1-unframed", 7),
          ("e1-basicframe", 8))
    )



class E1T1RcvSensitivity(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high-range", 1),
          ("low-range", 2))
    )



class E3T3FrameFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("dsx3CbitParity", 1),
          ("g832", 2),
          ("e3Unframed", 3),
          ("dsx3M23", 4),
          ("g751", 5),
          ("dsx3Unframed", 6))
    )



class TDMPathType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("t1", 1),
          ("e1", 2),
          ("t3", 3),
          ("e3", 4),
          ("vc12", 5),
          ("vc3", 6),
          ("vc4", 7),
          ("vt15", 8),
          ("sts1", 9),
          ("sts3c", 10))
    )



class PPSGenCondition(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tracked-1sat", 1),
          ("tracked-3sat", 2))
    )



class GPSAntennaStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("short", 2),
          ("normal", 3),
          ("unavailable", 4))
    )



class PolicingControl(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("a2n", 1),
          ("n2a", 2),
          ("a2nN2a", 3),
          ("n2n", 4))
    )



class FlowConfigType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("access", 1),
          ("passThru", 2))
    )



class G3AuthStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("ok", 2),
          ("input-pin", 3),
          ("input-puk", 4),
          ("locked", 5),
          ("none", 6))
    )



class PsePowerLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("class1", 1),
          ("class2", 2),
          ("class0andclass3", 3),
          ("class4", 4))
    )



class PSENonStandardPD(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )



class LearningAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("block", 1),
          ("forward", 2))
    )



class SfpChannelIdentifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101)
        )
    )
    namedValues = NamedValues(
        *(("not-applicable", 0),
          ("none", 1),
          ("frequency-19610", 2),
          ("frequency-19595", 3),
          ("frequency-19585", 4),
          ("frequency-19575", 5),
          ("frequency-19565", 6),
          ("frequency-19555", 7),
          ("frequency-19545", 8),
          ("frequency-19535", 9),
          ("frequency-19525", 10),
          ("frequency-19515", 11),
          ("frequency-19505", 12),
          ("frequency-19495", 13),
          ("frequency-19485", 14),
          ("frequency-19475", 15),
          ("frequency-19465", 16),
          ("frequency-19455", 17),
          ("frequency-19445", 18),
          ("frequency-19435", 19),
          ("frequency-19425", 20),
          ("frequency-19415", 21),
          ("frequency-19405", 22),
          ("frequency-19395", 23),
          ("frequency-19385", 24),
          ("frequency-19375", 25),
          ("frequency-19365", 26),
          ("frequency-19355", 27),
          ("frequency-19345", 28),
          ("frequency-19335", 29),
          ("frequency-19325", 30),
          ("frequency-19315", 31),
          ("frequency-19305", 32),
          ("frequency-19295", 33),
          ("frequency-19285", 34),
          ("frequency-19275", 35),
          ("frequency-19265", 36),
          ("frequency-19255", 37),
          ("frequency-19245", 38),
          ("frequency-19235", 39),
          ("frequency-19225", 40),
          ("frequency-19215", 41),
          ("frequency-19205", 42),
          ("frequency-19600", 43),
          ("frequency-19590", 44),
          ("frequency-19580", 45),
          ("frequency-19570", 46),
          ("frequency-19560", 47),
          ("frequency-19550", 48),
          ("frequency-19540", 49),
          ("frequency-19530", 50),
          ("frequency-19520", 51),
          ("frequency-19510", 52),
          ("frequency-19500", 53),
          ("frequency-19490", 54),
          ("frequency-19480", 55),
          ("frequency-19470", 56),
          ("frequency-19460", 57),
          ("frequency-19450", 58),
          ("frequency-19440", 59),
          ("frequency-19430", 60),
          ("frequency-19420", 61),
          ("frequency-19410", 62),
          ("frequency-19400", 63),
          ("frequency-19390", 64),
          ("frequency-19380", 65),
          ("frequency-19370", 66),
          ("frequency-19360", 67),
          ("frequency-19350", 68),
          ("frequency-19340", 69),
          ("frequency-19330", 70),
          ("frequency-19320", 71),
          ("frequency-19310", 72),
          ("frequency-19300", 73),
          ("frequency-19290", 74),
          ("frequency-19280", 75),
          ("frequency-19270", 76),
          ("frequency-19260", 77),
          ("frequency-19250", 78),
          ("frequency-19240", 79),
          ("frequency-19230", 80),
          ("frequency-19220", 81),
          ("frequency-19210", 82),
          ("frequency-19200", 83),
          ("frequency-19195", 84),
          ("frequency-19190", 85),
          ("frequency-19185", 86),
          ("frequency-19180", 87),
          ("frequency-19175", 88),
          ("frequency-19170", 89),
          ("frequency-19165", 90),
          ("frequency-19160", 91),
          ("frequency-19155", 92),
          ("frequency-19150", 93),
          ("frequency-19145", 94),
          ("frequency-19140", 95),
          ("frequency-19135", 96),
          ("frequency-19130", 97),
          ("frequency-19125", 98),
          ("notTunable", 99),
          ("frequency-19605", 100),
          ("autoTuning", 101))
    )



class BandwidthProfileMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lineRate", 1),
          ("informationRate", 2))
    )



class LearningConfigAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 1),
          ("flushFwdTable", 2),
          ("clearBlock", 3),
          ("resetAgingTimer", 4))
    )



class TrafficPortDeleteEntitiesAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no-action", 1),
          ("delete-esa-entities", 2),
          ("delete-cfm-entities", 3))
    )



class UsbDCNMobileNetworkType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("secondGeneration", 2),
          ("thirdGeneration", 3),
          ("fourthGeneration", 4),
          ("notApplicable", 5))
    )



class TxDeiAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("setToZero", 1),
          ("markColor", 2),
          ("noChange", 3))
    )



class RxDeiAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignore", 1),
          ("use", 2))
    )



class DeiOuterTagType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("stag", 1),
          ("ctagOrStag", 2))
    )



class ConstellationType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("gps-only", 1),
          ("glonass-only", 2),
          ("gps-and-glonass", 3),
          ("beidou-and-gps", 4),
          ("beidou-only", 5))
    )



class TODOutputFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nmea", 1),
          ("ccsa", 2))
    )



class ConstellationTypesBitMap(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("gps", 0),
          ("glonass", 1),
          ("beidou", 2),
          ("galileo", 3),
          ("sbas", 4),
          ("qzss", 5))
    )


class InstallationType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("full-sky-view", 1),
          ("limited-sky-view", 2))
    )



class WIFIEncryptionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("wpa-psk", 1),
          ("wpa2-psk", 2),
          ("wpa-wpa2-psk", 3))
    )



class DHCPType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("client", 1),
          ("server", 2))
    )



class CosMappingMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("eompls", 2),
          ("vxlan", 3),
          ("gre", 4),
          ("sr-mpls", 5))
    )



class EthernetPortTrafficModel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accessFlow", 1),
          ("flowpoint", 2))
    )



class SatelliteHealth(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("na", 1),
          ("ok", 2),
          ("weak", 3),
          ("dead", 4),
          ("no-data-modulation", 5))
    )



class DelayOption(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nanoseconds", 2),
          ("meters", 3))
    )



class AclRuleOperation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("accept", 1),
          ("deny", 2))
    )



class EfIdentificationType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("five-tuple", 1),
          ("seven-tuple", 2))
    )



class UsbOperationalMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cellular-modem", 1),
          ("srv-access", 2))
    )



class SaBitsState(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("bit4", 0),
          ("bit5", 1),
          ("bit6", 2),
          ("bit7", 3),
          ("bit8", 4))
    )


class SignalShape(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sine", 1),
          ("square", 2))
    )



class SignalFrequency(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("frequency-100kHz", 1),
          ("frequency-1MHz", 2),
          ("frequency-1544kHz", 3),
          ("frequency-2048kHz", 4),
          ("frequency-5MHz", 5),
          ("frequency-10MHz", 6),
          ("frequency-25MHz", 7),
          ("frequency-50MHz", 8))
    )



class PpsPolarity(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("positive", 1),
          ("negative", 2))
    )



class PpsPortImpedanceMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-available", 0),
          ("pps-50Ohm", 1),
          ("pps-1MOhm", 2))
    )



class AclNoMatchDispositionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 1),
          ("deny", 2))
    )



class EfIdentificationFieldType(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("srcMac", 0),
          ("destMac", 1),
          ("srcIp", 2),
          ("destIp", 3),
          ("ipProtocol", 4),
          ("srcPort", 5),
          ("destPort", 6))
    )


class ToggleValue(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2),
          ("not-available", 3))
    )



class IrigTimeCode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("irig-a002", 1),
          ("irig-a007", 2),
          ("irig-a132", 3),
          ("irig-a137", 4),
          ("irig-b002", 5),
          ("irig-b004", 6),
          ("irig-b006", 7),
          ("irig-b007", 8),
          ("irig-b122", 9),
          ("irig-b124", 10),
          ("irig-b126", 11),
          ("irig-b127", 12),
          ("irig-g002", 13),
          ("irig-g007", 14),
          ("irig-g142", 15),
          ("irig-g146", 16),
          ("pps", 17),
          ("ppm", 18),
          ("pph", 19),
          ("have-quick", 20))
    )



class IrigControlField(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ieee1344", 1),
          ("ieee37-118", 2))
    )



class IrigRelayOperation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("every-hour", 1),
          ("every-minute", 2),
          ("locked", 3),
          ("alarm", 4))
    )



class IrigOutputType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("digital", 1),
          ("analog", 2),
          ("optical", 3))
    )



class IrigDigitalSignalVoltage(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("digital-5v", 1),
          ("digital-10v", 2))
    )



class IrigGroupExtensionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("patch-panel", 1),
          ("extension-cable", 2),
          ("none", 3))
    )



class CcPortDutyCycle(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cycle-63-37", 1),
          ("cycle-50-50", 2))
    )



class CcActivePortState(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("port1", 0),
          ("port2", 1),
          ("port3", 2),
          ("port4", 3),
          ("port5", 4),
          ("port6", 5),
          ("port7", 6),
          ("port8", 9))
    )


class DynamicModelType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("portable", 0),
          ("stationary", 1),
          ("pedestrian", 2),
          ("automotive", 3),
          ("sea", 4),
          ("airborne1g", 5),
          ("airborne2g", 6),
          ("airborne4g", 7))
    )



class PoEStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("searching", 1),
          ("detection", 2),
          ("classification", 3),
          ("powerout", 4),
          ("idle", 5),
          ("failed", 6),
          ("na", 7))
    )



class PlugType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("generic", 1),
          ("gMetro", 2))
    )



class PlugMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tailEnd", 1),
          ("headEnd", 2))
    )



class RelativeChannelIdentifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("channel1", 1),
          ("channel2", 2),
          ("channel3", 3),
          ("channel4", 4),
          ("channel5", 5),
          ("channel6", 6),
          ("channel7", 7),
          ("channel8", 8),
          ("channel9", 9))
    )



class ChannelType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ituCband", 1),
          ("relativeChannelNumber", 2),
          ("frequency", 3))
    )



class OutOfBandChannelStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 1),
          ("disabled", 2),
          ("idle", 3),
          ("communicationInProgress", 4),
          ("communicationError", 5),
          ("autoTunningInProgress", 6))
    )



class GMetroAutoTuningMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pairedTuning", 1),
          ("blindTuning", 2),
          ("autonomousTuning", 3))
    )



class FrequencyIdentifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49)
        )
    )
    namedValues = NamedValues(
        *(("frequency19120", 1),
          ("frequency19130", 2),
          ("frequency19140", 3),
          ("frequency19150", 4),
          ("frequency19160", 5),
          ("frequency19170", 6),
          ("frequency19180", 7),
          ("frequency19190", 8),
          ("frequency19200", 9),
          ("frequency19210", 10),
          ("frequency19220", 11),
          ("frequency19230", 12),
          ("frequency19240", 13),
          ("frequency19250", 14),
          ("frequency19260", 15),
          ("frequency19270", 16),
          ("frequency19280", 17),
          ("frequency19290", 18),
          ("frequency19300", 19),
          ("frequency19310", 20),
          ("frequency19320", 21),
          ("frequency19330", 22),
          ("frequency19340", 23),
          ("frequency19350", 24),
          ("frequency19360", 25),
          ("frequency19370", 26),
          ("frequency19380", 27),
          ("frequency19390", 28),
          ("frequency19400", 29),
          ("frequency19410", 30),
          ("frequency19420", 31),
          ("frequency19430", 32),
          ("frequency19440", 33),
          ("frequency19450", 34),
          ("frequency19460", 35),
          ("frequency19470", 36),
          ("frequency19480", 37),
          ("frequency19490", 38),
          ("frequency19500", 39),
          ("frequency19510", 40),
          ("frequency19520", 41),
          ("frequency19530", 42),
          ("frequency19540", 43),
          ("frequency19550", 44),
          ("frequency19560", 45),
          ("frequency19570", 46),
          ("frequency19580", 47),
          ("frequency19590", 48),
          ("frequency19600", 49))
    )



class ITUCBandChannelIdentifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49)
        )
    )
    namedValues = NamedValues(
        *(("c12", 1),
          ("c13", 2),
          ("c14", 3),
          ("c15", 4),
          ("c16", 5),
          ("c17", 6),
          ("c18", 7),
          ("c19", 8),
          ("c20", 9),
          ("c21", 10),
          ("c22", 11),
          ("c23", 12),
          ("c24", 13),
          ("c25", 14),
          ("c26", 15),
          ("c27", 16),
          ("c28", 17),
          ("c29", 18),
          ("c30", 19),
          ("c31", 20),
          ("c32", 21),
          ("c33", 22),
          ("c34", 23),
          ("c35", 24),
          ("c36", 25),
          ("c37", 26),
          ("c38", 27),
          ("c39", 28),
          ("c40", 29),
          ("c41", 30),
          ("c42", 31),
          ("c43", 32),
          ("c44", 33),
          ("c45", 34),
          ("c46", 35),
          ("c47", 36),
          ("c48", 37),
          ("c49", 38),
          ("c50", 39),
          ("c51", 40),
          ("c52", 41),
          ("c53", 42),
          ("c54", 43),
          ("c55", 44),
          ("c56", 45),
          ("c57", 46),
          ("c58", 47),
          ("c59", 48),
          ("c60", 49))
    )



class E3T3Type(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("e3", 1),
          ("t3", 2))
    )



class PortState(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("port1", 0),
          ("port2", 1),
          ("port3", 2),
          ("port4", 3),
          ("port5", 4),
          ("port6", 5),
          ("port7", 6),
          ("port8", 7))
    )


# MIB Managed Objects in the order of their OIDs

_CmFacilityObjects_ObjectIdentity = ObjectIdentity
cmFacilityObjects = _CmFacilityObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1)
)
_CmEthernetAccPortTable_Object = MibTable
cmEthernetAccPortTable = _CmEthernetAccPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortTable.setStatus("current")
_CmEthernetAccPortEntry_Object = MibTableRow
cmEthernetAccPortEntry = _CmEthernetAccPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1)
)
cmEthernetAccPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetAccPortEntry.setStatus("current")


class _CmEthernetAccPortIndex_Type(Integer32):
    """Custom type cmEthernetAccPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetAccPortIndex_Type.__name__ = "Integer32"
_CmEthernetAccPortIndex_Object = MibTableColumn
cmEthernetAccPortIndex = _CmEthernetAccPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 1),
    _CmEthernetAccPortIndex_Type()
)
cmEthernetAccPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortIndex.setStatus("current")
_CmEthernetAccPortIfIndex_Type = InterfaceIndex
_CmEthernetAccPortIfIndex_Object = MibTableColumn
cmEthernetAccPortIfIndex = _CmEthernetAccPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 2),
    _CmEthernetAccPortIfIndex_Type()
)
cmEthernetAccPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortIfIndex.setStatus("current")
_CmEthernetAccPortEntityIndex_Type = PhysicalIndex
_CmEthernetAccPortEntityIndex_Object = MibTableColumn
cmEthernetAccPortEntityIndex = _CmEthernetAccPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 3),
    _CmEthernetAccPortEntityIndex_Type()
)
cmEthernetAccPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortEntityIndex.setStatus("current")
_CmEthernetAccPortAdminState_Type = AdminState
_CmEthernetAccPortAdminState_Object = MibTableColumn
cmEthernetAccPortAdminState = _CmEthernetAccPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 4),
    _CmEthernetAccPortAdminState_Type()
)
cmEthernetAccPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortAdminState.setStatus("current")
_CmEthernetAccPortOperationalState_Type = OperationalState
_CmEthernetAccPortOperationalState_Object = MibTableColumn
cmEthernetAccPortOperationalState = _CmEthernetAccPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 5),
    _CmEthernetAccPortOperationalState_Type()
)
cmEthernetAccPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOperationalState.setStatus("current")
_CmEthernetAccPortSecondaryState_Type = SecondaryState
_CmEthernetAccPortSecondaryState_Object = MibTableColumn
cmEthernetAccPortSecondaryState = _CmEthernetAccPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 6),
    _CmEthernetAccPortSecondaryState_Type()
)
cmEthernetAccPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSecondaryState.setStatus("current")
_CmEthernetAccPortMTU_Type = Integer32
_CmEthernetAccPortMTU_Object = MibTableColumn
cmEthernetAccPortMTU = _CmEthernetAccPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 7),
    _CmEthernetAccPortMTU_Type()
)
cmEthernetAccPortMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortMTU.setStatus("current")
_CmEthernetAccPortMediaType_Type = EthernetMediaType
_CmEthernetAccPortMediaType_Object = MibTableColumn
cmEthernetAccPortMediaType = _CmEthernetAccPortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 8),
    _CmEthernetAccPortMediaType_Type()
)
cmEthernetAccPortMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortMediaType.setStatus("current")
_CmEthernetAccPortConfigSpeed_Type = EthernetPortSpeed
_CmEthernetAccPortConfigSpeed_Object = MibTableColumn
cmEthernetAccPortConfigSpeed = _CmEthernetAccPortConfigSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 9),
    _CmEthernetAccPortConfigSpeed_Type()
)
cmEthernetAccPortConfigSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortConfigSpeed.setStatus("current")
_CmEthernetAccPortNegotiatedSpeed_Type = EthernetPortSpeed
_CmEthernetAccPortNegotiatedSpeed_Object = MibTableColumn
cmEthernetAccPortNegotiatedSpeed = _CmEthernetAccPortNegotiatedSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 10),
    _CmEthernetAccPortNegotiatedSpeed_Type()
)
cmEthernetAccPortNegotiatedSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortNegotiatedSpeed.setStatus("current")
_CmEthernetAccPortMDIXType_Type = CmEthernetMDIXType
_CmEthernetAccPortMDIXType_Object = MibTableColumn
cmEthernetAccPortMDIXType = _CmEthernetAccPortMDIXType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 11),
    _CmEthernetAccPortMDIXType_Type()
)
cmEthernetAccPortMDIXType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortMDIXType.setStatus("current")
_CmEthernetAccPortJumboFramesEnabled_Type = TruthValue
_CmEthernetAccPortJumboFramesEnabled_Object = MibTableColumn
cmEthernetAccPortJumboFramesEnabled = _CmEthernetAccPortJumboFramesEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 12),
    _CmEthernetAccPortJumboFramesEnabled_Type()
)
cmEthernetAccPortJumboFramesEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortJumboFramesEnabled.setStatus("current")


class _CmEthernetAccPortSfpVendorName_Type(DisplayString):
    """Custom type cmEthernetAccPortSfpVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetAccPortSfpVendorName_Type.__name__ = "DisplayString"
_CmEthernetAccPortSfpVendorName_Object = MibTableColumn
cmEthernetAccPortSfpVendorName = _CmEthernetAccPortSfpVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 13),
    _CmEthernetAccPortSfpVendorName_Type()
)
cmEthernetAccPortSfpVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpVendorName.setStatus("current")


class _CmEthernetAccPortSfpPartNumber_Type(DisplayString):
    """Custom type cmEthernetAccPortSfpPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetAccPortSfpPartNumber_Type.__name__ = "DisplayString"
_CmEthernetAccPortSfpPartNumber_Object = MibTableColumn
cmEthernetAccPortSfpPartNumber = _CmEthernetAccPortSfpPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 14),
    _CmEthernetAccPortSfpPartNumber_Type()
)
cmEthernetAccPortSfpPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpPartNumber.setStatus("current")


class _CmEthernetAccPortSfpSerialNumber_Type(DisplayString):
    """Custom type cmEthernetAccPortSfpSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetAccPortSfpSerialNumber_Type.__name__ = "DisplayString"
_CmEthernetAccPortSfpSerialNumber_Object = MibTableColumn
cmEthernetAccPortSfpSerialNumber = _CmEthernetAccPortSfpSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 15),
    _CmEthernetAccPortSfpSerialNumber_Type()
)
cmEthernetAccPortSfpSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpSerialNumber.setStatus("current")
_CmEthernetAccPortSfpDateOfManufacture_Type = DateAndTime
_CmEthernetAccPortSfpDateOfManufacture_Object = MibTableColumn
cmEthernetAccPortSfpDateOfManufacture = _CmEthernetAccPortSfpDateOfManufacture_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 16),
    _CmEthernetAccPortSfpDateOfManufacture_Type()
)
cmEthernetAccPortSfpDateOfManufacture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpDateOfManufacture.setStatus("current")
_CmEthernetAccPortSfpConnectorValue_Type = SfpConnectorValue
_CmEthernetAccPortSfpConnectorValue_Object = MibTableColumn
cmEthernetAccPortSfpConnectorValue = _CmEthernetAccPortSfpConnectorValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 17),
    _CmEthernetAccPortSfpConnectorValue_Type()
)
cmEthernetAccPortSfpConnectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpConnectorValue.setStatus("current")
_CmEthernetAccPortInitiateDiag_Type = CmEthernetDiagAction
_CmEthernetAccPortInitiateDiag_Object = MibTableColumn
cmEthernetAccPortInitiateDiag = _CmEthernetAccPortInitiateDiag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 18),
    _CmEthernetAccPortInitiateDiag_Type()
)
cmEthernetAccPortInitiateDiag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortInitiateDiag.setStatus("current")
_CmEthernetAccPortDiagnosePair1Cond_Type = CmDiagCableCondType
_CmEthernetAccPortDiagnosePair1Cond_Object = MibTableColumn
cmEthernetAccPortDiagnosePair1Cond = _CmEthernetAccPortDiagnosePair1Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 19),
    _CmEthernetAccPortDiagnosePair1Cond_Type()
)
cmEthernetAccPortDiagnosePair1Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnosePair1Cond.setStatus("current")
_CmEthernetAccPortDiagnosePair2Cond_Type = CmDiagCableCondType
_CmEthernetAccPortDiagnosePair2Cond_Object = MibTableColumn
cmEthernetAccPortDiagnosePair2Cond = _CmEthernetAccPortDiagnosePair2Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 20),
    _CmEthernetAccPortDiagnosePair2Cond_Type()
)
cmEthernetAccPortDiagnosePair2Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnosePair2Cond.setStatus("current")
_CmEthernetAccPortDiagnosePair3Cond_Type = CmDiagCableCondType
_CmEthernetAccPortDiagnosePair3Cond_Object = MibTableColumn
cmEthernetAccPortDiagnosePair3Cond = _CmEthernetAccPortDiagnosePair3Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 21),
    _CmEthernetAccPortDiagnosePair3Cond_Type()
)
cmEthernetAccPortDiagnosePair3Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnosePair3Cond.setStatus("current")
_CmEthernetAccPortDiagnosePair4Cond_Type = CmDiagCableCondType
_CmEthernetAccPortDiagnosePair4Cond_Object = MibTableColumn
cmEthernetAccPortDiagnosePair4Cond = _CmEthernetAccPortDiagnosePair4Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 22),
    _CmEthernetAccPortDiagnosePair4Cond_Type()
)
cmEthernetAccPortDiagnosePair4Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnosePair4Cond.setStatus("current")
_CmEthernetAccPortDiagnoseAutoNegCond_Type = CmDiagAutoNegCondType
_CmEthernetAccPortDiagnoseAutoNegCond_Object = MibTableColumn
cmEthernetAccPortDiagnoseAutoNegCond = _CmEthernetAccPortDiagnoseAutoNegCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 23),
    _CmEthernetAccPortDiagnoseAutoNegCond_Type()
)
cmEthernetAccPortDiagnoseAutoNegCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseAutoNegCond.setStatus("current")
_CmEthernetAccPortDiagnoseLpbkCond_Type = CmDiagLpbkCondType
_CmEthernetAccPortDiagnoseLpbkCond_Object = MibTableColumn
cmEthernetAccPortDiagnoseLpbkCond = _CmEthernetAccPortDiagnoseLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 24),
    _CmEthernetAccPortDiagnoseLpbkCond_Type()
)
cmEthernetAccPortDiagnoseLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseLpbkCond.setStatus("current")
_CmEthernetAccPortDiagnoseEfmLpbkCond_Type = CmDiagEfmOamLpbkCondType
_CmEthernetAccPortDiagnoseEfmLpbkCond_Object = MibTableColumn
cmEthernetAccPortDiagnoseEfmLpbkCond = _CmEthernetAccPortDiagnoseEfmLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 25),
    _CmEthernetAccPortDiagnoseEfmLpbkCond_Type()
)
cmEthernetAccPortDiagnoseEfmLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseEfmLpbkCond.setStatus("current")


class _CmEthernetAccPortDiagnoseResult_Type(DisplayString):
    """Custom type cmEthernetAccPortDiagnoseResult based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetAccPortDiagnoseResult_Type.__name__ = "DisplayString"
_CmEthernetAccPortDiagnoseResult_Object = MibTableColumn
cmEthernetAccPortDiagnoseResult = _CmEthernetAccPortDiagnoseResult_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 26),
    _CmEthernetAccPortDiagnoseResult_Type()
)
cmEthernetAccPortDiagnoseResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseResult.setStatus("current")
_CmEthernetAccPortDiagnoseTestStatus_Type = CmDiagTestStatus
_CmEthernetAccPortDiagnoseTestStatus_Object = MibTableColumn
cmEthernetAccPortDiagnoseTestStatus = _CmEthernetAccPortDiagnoseTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 27),
    _CmEthernetAccPortDiagnoseTestStatus_Type()
)
cmEthernetAccPortDiagnoseTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseTestStatus.setStatus("current")
_CmEthernetAccPortDiagnoseTestTime_Type = DateAndTime
_CmEthernetAccPortDiagnoseTestTime_Object = MibTableColumn
cmEthernetAccPortDiagnoseTestTime = _CmEthernetAccPortDiagnoseTestTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 28),
    _CmEthernetAccPortDiagnoseTestTime_Type()
)
cmEthernetAccPortDiagnoseTestTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnoseTestTime.setStatus("current")
_CmEthernetAccPortLoopbackConfig_Type = CmLoopbackType
_CmEthernetAccPortLoopbackConfig_Object = MibTableColumn
cmEthernetAccPortLoopbackConfig = _CmEthernetAccPortLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 29),
    _CmEthernetAccPortLoopbackConfig_Type()
)
cmEthernetAccPortLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackConfig.setStatus("current")
_CmEthernetAccPortLoopbackStatus_Type = CmLoopbackType
_CmEthernetAccPortLoopbackStatus_Object = MibTableColumn
cmEthernetAccPortLoopbackStatus = _CmEthernetAccPortLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 30),
    _CmEthernetAccPortLoopbackStatus_Type()
)
cmEthernetAccPortLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackStatus.setStatus("current")


class _CmEthernetAccPortLoopbackTime_Type(Integer32):
    """Custom type cmEthernetAccPortLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_CmEthernetAccPortLoopbackTime_Type.__name__ = "Integer32"
_CmEthernetAccPortLoopbackTime_Object = MibTableColumn
cmEthernetAccPortLoopbackTime = _CmEthernetAccPortLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 31),
    _CmEthernetAccPortLoopbackTime_Type()
)
cmEthernetAccPortLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackTime.setStatus("current")
_CmEthernetAccPortLoopbackSwapSADA_Type = CmSwapSADAType
_CmEthernetAccPortLoopbackSwapSADA_Object = MibTableColumn
cmEthernetAccPortLoopbackSwapSADA = _CmEthernetAccPortLoopbackSwapSADA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 32),
    _CmEthernetAccPortLoopbackSwapSADA_Type()
)
cmEthernetAccPortLoopbackSwapSADA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackSwapSADA.setStatus("current")


class _CmEthernetAccPortOuterVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetAccPortOuterVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetAccPortOuterVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetAccPortOuterVlanLoopbackMask_Object = MibTableColumn
cmEthernetAccPortOuterVlanLoopbackMask = _CmEthernetAccPortOuterVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 33),
    _CmEthernetAccPortOuterVlanLoopbackMask_Type()
)
cmEthernetAccPortOuterVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterVlanLoopbackMask.setStatus("current")


class _CmEthernetAccPortOuterVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetAccPortOuterVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortOuterVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetAccPortOuterVlanLoopback1_Object = MibTableColumn
cmEthernetAccPortOuterVlanLoopback1 = _CmEthernetAccPortOuterVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 34),
    _CmEthernetAccPortOuterVlanLoopback1_Type()
)
cmEthernetAccPortOuterVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterVlanLoopback1.setStatus("current")


class _CmEthernetAccPortOuterVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetAccPortOuterVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortOuterVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetAccPortOuterVlanLoopback2_Object = MibTableColumn
cmEthernetAccPortOuterVlanLoopback2 = _CmEthernetAccPortOuterVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 35),
    _CmEthernetAccPortOuterVlanLoopback2_Type()
)
cmEthernetAccPortOuterVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterVlanLoopback2.setStatus("current")


class _CmEthernetAccPortOuterVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetAccPortOuterVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortOuterVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetAccPortOuterVlanLoopback3_Object = MibTableColumn
cmEthernetAccPortOuterVlanLoopback3 = _CmEthernetAccPortOuterVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 36),
    _CmEthernetAccPortOuterVlanLoopback3_Type()
)
cmEthernetAccPortOuterVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterVlanLoopback3.setStatus("current")


class _CmEthernetAccPortInnerVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetAccPortInnerVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetAccPortInnerVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetAccPortInnerVlanLoopbackMask_Object = MibTableColumn
cmEthernetAccPortInnerVlanLoopbackMask = _CmEthernetAccPortInnerVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 37),
    _CmEthernetAccPortInnerVlanLoopbackMask_Type()
)
cmEthernetAccPortInnerVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortInnerVlanLoopbackMask.setStatus("current")


class _CmEthernetAccPortInnerVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetAccPortInnerVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortInnerVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetAccPortInnerVlanLoopback1_Object = MibTableColumn
cmEthernetAccPortInnerVlanLoopback1 = _CmEthernetAccPortInnerVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 38),
    _CmEthernetAccPortInnerVlanLoopback1_Type()
)
cmEthernetAccPortInnerVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortInnerVlanLoopback1.setStatus("current")


class _CmEthernetAccPortInnerVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetAccPortInnerVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortInnerVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetAccPortInnerVlanLoopback2_Object = MibTableColumn
cmEthernetAccPortInnerVlanLoopback2 = _CmEthernetAccPortInnerVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 39),
    _CmEthernetAccPortInnerVlanLoopback2_Type()
)
cmEthernetAccPortInnerVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortInnerVlanLoopback2.setStatus("current")


class _CmEthernetAccPortInnerVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetAccPortInnerVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetAccPortInnerVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetAccPortInnerVlanLoopback3_Object = MibTableColumn
cmEthernetAccPortInnerVlanLoopback3 = _CmEthernetAccPortInnerVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 40),
    _CmEthernetAccPortInnerVlanLoopback3_Type()
)
cmEthernetAccPortInnerVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortInnerVlanLoopback3.setStatus("current")
_CmEthernetAccPortLinkLossFwdEnabled_Type = TruthValue
_CmEthernetAccPortLinkLossFwdEnabled_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdEnabled = _CmEthernetAccPortLinkLossFwdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 41),
    _CmEthernetAccPortLinkLossFwdEnabled_Type()
)
cmEthernetAccPortLinkLossFwdEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdEnabled.setStatus("current")
_CmEthernetAccPortLinkLossFwdSignalType_Type = CmLinkLossFwdSignalType
_CmEthernetAccPortLinkLossFwdSignalType_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdSignalType = _CmEthernetAccPortLinkLossFwdSignalType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 42),
    _CmEthernetAccPortLinkLossFwdSignalType_Type()
)
cmEthernetAccPortLinkLossFwdSignalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdSignalType.setStatus("deprecated")
_CmEthernetAccPortLinkLossFwdTriggerTypes_Type = CmLinkLossFwdTriggerTypes
_CmEthernetAccPortLinkLossFwdTriggerTypes_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdTriggerTypes = _CmEthernetAccPortLinkLossFwdTriggerTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 43),
    _CmEthernetAccPortLinkLossFwdTriggerTypes_Type()
)
cmEthernetAccPortLinkLossFwdTriggerTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdTriggerTypes.setStatus("current")
_CmEthernetAccPortLinkLossFwdDelay_Type = Integer32
_CmEthernetAccPortLinkLossFwdDelay_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdDelay = _CmEthernetAccPortLinkLossFwdDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 44),
    _CmEthernetAccPortLinkLossFwdDelay_Type()
)
cmEthernetAccPortLinkLossFwdDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdDelay.setStatus("current")
_CmEthernetAccPortLinkLossFwdActive_Type = TruthValue
_CmEthernetAccPortLinkLossFwdActive_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdActive = _CmEthernetAccPortLinkLossFwdActive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 45),
    _CmEthernetAccPortLinkLossFwdActive_Type()
)
cmEthernetAccPortLinkLossFwdActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdActive.setStatus("current")
_CmEthernetAccPortLinkLossFwdPartnerEnabled_Type = TruthValue
_CmEthernetAccPortLinkLossFwdPartnerEnabled_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdPartnerEnabled = _CmEthernetAccPortLinkLossFwdPartnerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 46),
    _CmEthernetAccPortLinkLossFwdPartnerEnabled_Type()
)
cmEthernetAccPortLinkLossFwdPartnerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdPartnerEnabled.setStatus("current")
_CmEthernetAccPortLinkLossFwdLocalLinkId_Type = Integer32
_CmEthernetAccPortLinkLossFwdLocalLinkId_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdLocalLinkId = _CmEthernetAccPortLinkLossFwdLocalLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 47),
    _CmEthernetAccPortLinkLossFwdLocalLinkId_Type()
)
cmEthernetAccPortLinkLossFwdLocalLinkId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdLocalLinkId.setStatus("current")
_CmEthernetAccPortLinkLossFwdRemoteLinkIds_Type = CmRemoteLinkIds
_CmEthernetAccPortLinkLossFwdRemoteLinkIds_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdRemoteLinkIds = _CmEthernetAccPortLinkLossFwdRemoteLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 48),
    _CmEthernetAccPortLinkLossFwdRemoteLinkIds_Type()
)
cmEthernetAccPortLinkLossFwdRemoteLinkIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdRemoteLinkIds.setStatus("current")
_CmEthernetAccPortOamId_Type = Integer32
_CmEthernetAccPortOamId_Object = MibTableColumn
cmEthernetAccPortOamId = _CmEthernetAccPortOamId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 49),
    _CmEthernetAccPortOamId_Type()
)
cmEthernetAccPortOamId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamId.setStatus("current")
_CmEthernetAccPortOamAdminDisposition_Type = CmControlProtocolDispType
_CmEthernetAccPortOamAdminDisposition_Object = MibTableColumn
cmEthernetAccPortOamAdminDisposition = _CmEthernetAccPortOamAdminDisposition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 50),
    _CmEthernetAccPortOamAdminDisposition_Type()
)
cmEthernetAccPortOamAdminDisposition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamAdminDisposition.setStatus("deprecated")
_CmEthernetAccPortOamDiscoveryState_Type = CmOamDiscoveryState
_CmEthernetAccPortOamDiscoveryState_Object = MibTableColumn
cmEthernetAccPortOamDiscoveryState = _CmEthernetAccPortOamDiscoveryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 51),
    _CmEthernetAccPortOamDiscoveryState_Type()
)
cmEthernetAccPortOamDiscoveryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamDiscoveryState.setStatus("current")
_CmEthernetAccPortOamLocalVarRtrvsEnabled_Type = TruthValue
_CmEthernetAccPortOamLocalVarRtrvsEnabled_Object = MibTableColumn
cmEthernetAccPortOamLocalVarRtrvsEnabled = _CmEthernetAccPortOamLocalVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 52),
    _CmEthernetAccPortOamLocalVarRtrvsEnabled_Type()
)
cmEthernetAccPortOamLocalVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalVarRtrvsEnabled.setStatus("current")
_CmEthernetAccPortOamLocalLinkEventsEnabled_Type = TruthValue
_CmEthernetAccPortOamLocalLinkEventsEnabled_Object = MibTableColumn
cmEthernetAccPortOamLocalLinkEventsEnabled = _CmEthernetAccPortOamLocalLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 53),
    _CmEthernetAccPortOamLocalLinkEventsEnabled_Type()
)
cmEthernetAccPortOamLocalLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalLinkEventsEnabled.setStatus("current")
_CmEthernetAccPortOamLocalOamLoopbacksSupported_Type = TruthValue
_CmEthernetAccPortOamLocalOamLoopbacksSupported_Object = MibTableColumn
cmEthernetAccPortOamLocalOamLoopbacksSupported = _CmEthernetAccPortOamLocalOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 54),
    _CmEthernetAccPortOamLocalOamLoopbacksSupported_Type()
)
cmEthernetAccPortOamLocalOamLoopbacksSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalOamLoopbacksSupported.setStatus("current")
_CmEthernetAccPortOamLocalUnidirSupportEnabled_Type = TruthValue
_CmEthernetAccPortOamLocalUnidirSupportEnabled_Object = MibTableColumn
cmEthernetAccPortOamLocalUnidirSupportEnabled = _CmEthernetAccPortOamLocalUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 55),
    _CmEthernetAccPortOamLocalUnidirSupportEnabled_Type()
)
cmEthernetAccPortOamLocalUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalUnidirSupportEnabled.setStatus("current")
_CmEthernetAccPortOamLocalMaxPDUSize_Type = Integer32
_CmEthernetAccPortOamLocalMaxPDUSize_Object = MibTableColumn
cmEthernetAccPortOamLocalMaxPDUSize = _CmEthernetAccPortOamLocalMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 56),
    _CmEthernetAccPortOamLocalMaxPDUSize_Type()
)
cmEthernetAccPortOamLocalMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalMaxPDUSize.setStatus("current")
_CmEthernetAccPortOamLocalMode_Type = CmOamMode
_CmEthernetAccPortOamLocalMode_Object = MibTableColumn
cmEthernetAccPortOamLocalMode = _CmEthernetAccPortOamLocalMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 57),
    _CmEthernetAccPortOamLocalMode_Type()
)
cmEthernetAccPortOamLocalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamLocalMode.setStatus("current")
_CmEthernetAccPortOamRemoteMacAddress_Type = MacAddress
_CmEthernetAccPortOamRemoteMacAddress_Object = MibTableColumn
cmEthernetAccPortOamRemoteMacAddress = _CmEthernetAccPortOamRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 58),
    _CmEthernetAccPortOamRemoteMacAddress_Type()
)
cmEthernetAccPortOamRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteMacAddress.setStatus("current")
_CmEthernetAccPortOamRemoteVarRtrvsEnabled_Type = TruthValue
_CmEthernetAccPortOamRemoteVarRtrvsEnabled_Object = MibTableColumn
cmEthernetAccPortOamRemoteVarRtrvsEnabled = _CmEthernetAccPortOamRemoteVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 59),
    _CmEthernetAccPortOamRemoteVarRtrvsEnabled_Type()
)
cmEthernetAccPortOamRemoteVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteVarRtrvsEnabled.setStatus("current")
_CmEthernetAccPortOamRemoteLinkEventsEnabled_Type = TruthValue
_CmEthernetAccPortOamRemoteLinkEventsEnabled_Object = MibTableColumn
cmEthernetAccPortOamRemoteLinkEventsEnabled = _CmEthernetAccPortOamRemoteLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 60),
    _CmEthernetAccPortOamRemoteLinkEventsEnabled_Type()
)
cmEthernetAccPortOamRemoteLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteLinkEventsEnabled.setStatus("current")
_CmEthernetAccPortOamRemoteOamLoopbacksSupported_Type = TruthValue
_CmEthernetAccPortOamRemoteOamLoopbacksSupported_Object = MibTableColumn
cmEthernetAccPortOamRemoteOamLoopbacksSupported = _CmEthernetAccPortOamRemoteOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 61),
    _CmEthernetAccPortOamRemoteOamLoopbacksSupported_Type()
)
cmEthernetAccPortOamRemoteOamLoopbacksSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteOamLoopbacksSupported.setStatus("current")
_CmEthernetAccPortOamRemoteUnidirSupportEnabled_Type = TruthValue
_CmEthernetAccPortOamRemoteUnidirSupportEnabled_Object = MibTableColumn
cmEthernetAccPortOamRemoteUnidirSupportEnabled = _CmEthernetAccPortOamRemoteUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 62),
    _CmEthernetAccPortOamRemoteUnidirSupportEnabled_Type()
)
cmEthernetAccPortOamRemoteUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteUnidirSupportEnabled.setStatus("current")
_CmEthernetAccPortOamRemoteMaxPDUSize_Type = Integer32
_CmEthernetAccPortOamRemoteMaxPDUSize_Object = MibTableColumn
cmEthernetAccPortOamRemoteMaxPDUSize = _CmEthernetAccPortOamRemoteMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 63),
    _CmEthernetAccPortOamRemoteMaxPDUSize_Type()
)
cmEthernetAccPortOamRemoteMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteMaxPDUSize.setStatus("current")
_CmEthernetAccPortOamRemoteMode_Type = CmOamMode
_CmEthernetAccPortOamRemoteMode_Object = MibTableColumn
cmEthernetAccPortOamRemoteMode = _CmEthernetAccPortOamRemoteMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 64),
    _CmEthernetAccPortOamRemoteMode_Type()
)
cmEthernetAccPortOamRemoteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamRemoteMode.setStatus("current")
_CmEthernetAccPortMode_Type = CmEthernetSvcPortMode
_CmEthernetAccPortMode_Object = MibTableColumn
cmEthernetAccPortMode = _CmEthernetAccPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 65),
    _CmEthernetAccPortMode_Type()
)
cmEthernetAccPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortMode.setStatus("current")
_CmEthernetAccPortSvcType_Type = CmEthernetSvcType
_CmEthernetAccPortSvcType_Object = MibTableColumn
cmEthernetAccPortSvcType = _CmEthernetAccPortSvcType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 66),
    _CmEthernetAccPortSvcType_Type()
)
cmEthernetAccPortSvcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortSvcType.setStatus("current")
_CmEthernetAccPortRxPauseDisposition_Type = CmControlProtocolDispType
_CmEthernetAccPortRxPauseDisposition_Object = MibTableColumn
cmEthernetAccPortRxPauseDisposition = _CmEthernetAccPortRxPauseDisposition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 67),
    _CmEthernetAccPortRxPauseDisposition_Type()
)
cmEthernetAccPortRxPauseDisposition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortRxPauseDisposition.setStatus("deprecated")
_CmEthernetAccPortTxPauseEnabled_Type = TruthValue
_CmEthernetAccPortTxPauseEnabled_Object = MibTableColumn
cmEthernetAccPortTxPauseEnabled = _CmEthernetAccPortTxPauseEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 68),
    _CmEthernetAccPortTxPauseEnabled_Type()
)
cmEthernetAccPortTxPauseEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortTxPauseEnabled.setStatus("current")
_CmEthernetAccPortAfpType_Type = CmAfpType
_CmEthernetAccPortAfpType_Object = MibTableColumn
cmEthernetAccPortAfpType = _CmEthernetAccPortAfpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 69),
    _CmEthernetAccPortAfpType_Type()
)
cmEthernetAccPortAfpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortAfpType.setStatus("current")
_CmEthernetAccPortMDIXStatus_Type = CmEthernetMDIXType
_CmEthernetAccPortMDIXStatus_Object = MibTableColumn
cmEthernetAccPortMDIXStatus = _CmEthernetAccPortMDIXStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 70),
    _CmEthernetAccPortMDIXStatus_Type()
)
cmEthernetAccPortMDIXStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortMDIXStatus.setStatus("current")
_CmEthernetAccPortSfpReach_Type = Integer32
_CmEthernetAccPortSfpReach_Object = MibTableColumn
cmEthernetAccPortSfpReach = _CmEthernetAccPortSfpReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 71),
    _CmEthernetAccPortSfpReach_Type()
)
cmEthernetAccPortSfpReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpReach.setStatus("current")
_CmEthernetAccPortSfpLaserWaveLength_Type = Integer32
_CmEthernetAccPortSfpLaserWaveLength_Object = MibTableColumn
cmEthernetAccPortSfpLaserWaveLength = _CmEthernetAccPortSfpLaserWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 72),
    _CmEthernetAccPortSfpLaserWaveLength_Type()
)
cmEthernetAccPortSfpLaserWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpLaserWaveLength.setStatus("current")
_CmEthernetAccPortSfpMediaType_Type = SfpMediaType
_CmEthernetAccPortSfpMediaType_Object = MibTableColumn
cmEthernetAccPortSfpMediaType = _CmEthernetAccPortSfpMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 73),
    _CmEthernetAccPortSfpMediaType_Type()
)
cmEthernetAccPortSfpMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpMediaType.setStatus("current")
_CmEthernetAccPortOamEnabled_Type = TruthValue
_CmEthernetAccPortOamEnabled_Object = MibTableColumn
cmEthernetAccPortOamEnabled = _CmEthernetAccPortOamEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 74),
    _CmEthernetAccPortOamEnabled_Type()
)
cmEthernetAccPortOamEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamEnabled.setStatus("current")
_CmEthernetAccPortOamAdminState_Type = CmOamAdminState
_CmEthernetAccPortOamAdminState_Object = MibTableColumn
cmEthernetAccPortOamAdminState = _CmEthernetAccPortOamAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 75),
    _CmEthernetAccPortOamAdminState_Type()
)
cmEthernetAccPortOamAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortOamAdminState.setStatus("current")
_CmEthernetAccPortShapingEnabled_Type = TruthValue
_CmEthernetAccPortShapingEnabled_Object = MibTableColumn
cmEthernetAccPortShapingEnabled = _CmEthernetAccPortShapingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 76),
    _CmEthernetAccPortShapingEnabled_Type()
)
cmEthernetAccPortShapingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortShapingEnabled.setStatus("current")
_CmEthernetAccPortShapedSpeedLo_Type = Unsigned32
_CmEthernetAccPortShapedSpeedLo_Object = MibTableColumn
cmEthernetAccPortShapedSpeedLo = _CmEthernetAccPortShapedSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 77),
    _CmEthernetAccPortShapedSpeedLo_Type()
)
cmEthernetAccPortShapedSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortShapedSpeedLo.setStatus("current")
_CmEthernetAccPortShapedSpeedHi_Type = Unsigned32
_CmEthernetAccPortShapedSpeedHi_Object = MibTableColumn
cmEthernetAccPortShapedSpeedHi = _CmEthernetAccPortShapedSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 78),
    _CmEthernetAccPortShapedSpeedHi_Type()
)
cmEthernetAccPortShapedSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortShapedSpeedHi.setStatus("current")
_CmEthernetAccPortQinQEtherType_Type = Unsigned32
_CmEthernetAccPortQinQEtherType_Object = MibTableColumn
cmEthernetAccPortQinQEtherType = _CmEthernetAccPortQinQEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 79),
    _CmEthernetAccPortQinQEtherType_Type()
)
cmEthernetAccPortQinQEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortQinQEtherType.setStatus("current")
_CmEthernetAccPortRxPauseEnabled_Type = TruthValue
_CmEthernetAccPortRxPauseEnabled_Object = MibTableColumn
cmEthernetAccPortRxPauseEnabled = _CmEthernetAccPortRxPauseEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 80),
    _CmEthernetAccPortRxPauseEnabled_Type()
)
cmEthernetAccPortRxPauseEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortRxPauseEnabled.setStatus("current")
_CmEthernetAccPortAutoDiagEnabled_Type = TruthValue
_CmEthernetAccPortAutoDiagEnabled_Object = MibTableColumn
cmEthernetAccPortAutoDiagEnabled = _CmEthernetAccPortAutoDiagEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 81),
    _CmEthernetAccPortAutoDiagEnabled_Type()
)
cmEthernetAccPortAutoDiagEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortAutoDiagEnabled.setStatus("current")
_CmEthernetAccPortLinkLossFwdTxActionType_Type = CmLinkLossFwdTxActionType
_CmEthernetAccPortLinkLossFwdTxActionType_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdTxActionType = _CmEthernetAccPortLinkLossFwdTxActionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 82),
    _CmEthernetAccPortLinkLossFwdTxActionType_Type()
)
cmEthernetAccPortLinkLossFwdTxActionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdTxActionType.setStatus("current")
_CmEthernetAccPortLinkLossFwdRxRLDLinkIds_Type = CmRemoteLinkIds
_CmEthernetAccPortLinkLossFwdRxRLDLinkIds_Object = MibTableColumn
cmEthernetAccPortLinkLossFwdRxRLDLinkIds = _CmEthernetAccPortLinkLossFwdRxRLDLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 83),
    _CmEthernetAccPortLinkLossFwdRxRLDLinkIds_Type()
)
cmEthernetAccPortLinkLossFwdRxRLDLinkIds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLinkLossFwdRxRLDLinkIds.setStatus("current")
_CmEthernetAccPortN2AVlanTrunkingEnabled_Type = TruthValue
_CmEthernetAccPortN2AVlanTrunkingEnabled_Object = MibTableColumn
cmEthernetAccPortN2AVlanTrunkingEnabled = _CmEthernetAccPortN2AVlanTrunkingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 84),
    _CmEthernetAccPortN2AVlanTrunkingEnabled_Type()
)
cmEthernetAccPortN2AVlanTrunkingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortN2AVlanTrunkingEnabled.setStatus("current")
_CmEthernetAccPortA2NPushPVIDEnabled_Type = TruthValue
_CmEthernetAccPortA2NPushPVIDEnabled_Object = MibTableColumn
cmEthernetAccPortA2NPushPVIDEnabled = _CmEthernetAccPortA2NPushPVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 85),
    _CmEthernetAccPortA2NPushPVIDEnabled_Type()
)
cmEthernetAccPortA2NPushPVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortA2NPushPVIDEnabled.setStatus("current")
_CmEthernetAccPortN2APopPVIDEnabled_Type = TruthValue
_CmEthernetAccPortN2APopPVIDEnabled_Object = MibTableColumn
cmEthernetAccPortN2APopPVIDEnabled = _CmEthernetAccPortN2APopPVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 86),
    _CmEthernetAccPortN2APopPVIDEnabled_Type()
)
cmEthernetAccPortN2APopPVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortN2APopPVIDEnabled.setStatus("current")
_CmEthernetAccPortPortVlanId_Type = VlanId
_CmEthernetAccPortPortVlanId_Object = MibTableColumn
cmEthernetAccPortPortVlanId = _CmEthernetAccPortPortVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 87),
    _CmEthernetAccPortPortVlanId_Type()
)
cmEthernetAccPortPortVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPortVlanId.setStatus("current")
_CmEthernetAccPortPortVlanPriority_Type = VlanPriority
_CmEthernetAccPortPortVlanPriority_Object = MibTableColumn
cmEthernetAccPortPortVlanPriority = _CmEthernetAccPortPortVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 88),
    _CmEthernetAccPortPortVlanPriority_Type()
)
cmEthernetAccPortPortVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPortVlanPriority.setStatus("current")
_CmEthernetAccPortPrioMapMode_Type = PriorityMapMode
_CmEthernetAccPortPrioMapMode_Object = MibTableColumn
cmEthernetAccPortPrioMapMode = _CmEthernetAccPortPrioMapMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 89),
    _CmEthernetAccPortPrioMapMode_Type()
)
cmEthernetAccPortPrioMapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPrioMapMode.setStatus("current")
_CmEthernetAccPortSyncEEnabled_Type = TruthValue
_CmEthernetAccPortSyncEEnabled_Object = MibTableColumn
cmEthernetAccPortSyncEEnabled = _CmEthernetAccPortSyncEEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 90),
    _CmEthernetAccPortSyncEEnabled_Type()
)
cmEthernetAccPortSyncEEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortSyncEEnabled.setStatus("current")
_CmEthernetAccPortQLModeEnabled_Type = TruthValue
_CmEthernetAccPortQLModeEnabled_Object = MibTableColumn
cmEthernetAccPortQLModeEnabled = _CmEthernetAccPortQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 91),
    _CmEthernetAccPortQLModeEnabled_Type()
)
cmEthernetAccPortQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortQLModeEnabled.setStatus("current")
_CmEthernetAccPortExpectedQL_Type = SSMQualityLevel
_CmEthernetAccPortExpectedQL_Object = MibTableColumn
cmEthernetAccPortExpectedQL = _CmEthernetAccPortExpectedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 92),
    _CmEthernetAccPortExpectedQL_Type()
)
cmEthernetAccPortExpectedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortExpectedQL.setStatus("current")
_CmEthernetAccPortAssumedQL_Type = SSMQualityLevel
_CmEthernetAccPortAssumedQL_Object = MibTableColumn
cmEthernetAccPortAssumedQL = _CmEthernetAccPortAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 93),
    _CmEthernetAccPortAssumedQL_Type()
)
cmEthernetAccPortAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortAssumedQL.setStatus("current")
_CmEthernetAccPortReceivedQL_Type = SSMQualityLevel
_CmEthernetAccPortReceivedQL_Object = MibTableColumn
cmEthernetAccPortReceivedQL = _CmEthernetAccPortReceivedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 94),
    _CmEthernetAccPortReceivedQL_Type()
)
cmEthernetAccPortReceivedQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortReceivedQL.setStatus("current")
_CmEthernetAccPortTransmitQL_Type = SSMQualityLevel
_CmEthernetAccPortTransmitQL_Object = MibTableColumn
cmEthernetAccPortTransmitQL = _CmEthernetAccPortTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 95),
    _CmEthernetAccPortTransmitQL_Type()
)
cmEthernetAccPortTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortTransmitQL.setStatus("current")
_CmEthernetAccPortDeiEnable_Type = TruthValue
_CmEthernetAccPortDeiEnable_Object = MibTableColumn
cmEthernetAccPortDeiEnable = _CmEthernetAccPortDeiEnable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 96),
    _CmEthernetAccPortDeiEnable_Type()
)
cmEthernetAccPortDeiEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortDeiEnable.setStatus("deprecated")
_CmEthernetAccPortPcpDEEncType_Type = PcpDEEncType
_CmEthernetAccPortPcpDEEncType_Object = MibTableColumn
cmEthernetAccPortPcpDEEncType = _CmEthernetAccPortPcpDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 97),
    _CmEthernetAccPortPcpDEEncType_Type()
)
cmEthernetAccPortPcpDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPcpDEEncType.setStatus("current")
_CmEthernetAccPortPcpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetAccPortPcpDEPairsAction_Object = MibTableColumn
cmEthernetAccPortPcpDEPairsAction = _CmEthernetAccPortPcpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 98),
    _CmEthernetAccPortPcpDEPairsAction_Type()
)
cmEthernetAccPortPcpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPcpDEPairsAction.setStatus("current")
_CmEthernetAccPortSSMRemoteMacAddress_Type = MacAddress
_CmEthernetAccPortSSMRemoteMacAddress_Object = MibTableColumn
cmEthernetAccPortSSMRemoteMacAddress = _CmEthernetAccPortSSMRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 99),
    _CmEthernetAccPortSSMRemoteMacAddress_Type()
)
cmEthernetAccPortSSMRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSSMRemoteMacAddress.setStatus("current")
_CmEthernetAccPortXgePhyType_Type = XgePhyType
_CmEthernetAccPortXgePhyType_Object = MibTableColumn
cmEthernetAccPortXgePhyType = _CmEthernetAccPortXgePhyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 100),
    _CmEthernetAccPortXgePhyType_Type()
)
cmEthernetAccPortXgePhyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortXgePhyType.setStatus("current")
_CmEthernetAccPortLoopbackSourceMacControlEnabled_Type = TruthValue
_CmEthernetAccPortLoopbackSourceMacControlEnabled_Object = MibTableColumn
cmEthernetAccPortLoopbackSourceMacControlEnabled = _CmEthernetAccPortLoopbackSourceMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 101),
    _CmEthernetAccPortLoopbackSourceMacControlEnabled_Type()
)
cmEthernetAccPortLoopbackSourceMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackSourceMacControlEnabled.setStatus("current")
_CmEthernetAccPortLoopbackDestMacControlEnabled_Type = TruthValue
_CmEthernetAccPortLoopbackDestMacControlEnabled_Object = MibTableColumn
cmEthernetAccPortLoopbackDestMacControlEnabled = _CmEthernetAccPortLoopbackDestMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 102),
    _CmEthernetAccPortLoopbackDestMacControlEnabled_Type()
)
cmEthernetAccPortLoopbackDestMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackDestMacControlEnabled.setStatus("current")
_CmEthernetAccPortLoopbackSourceMacAddress_Type = MacAddress
_CmEthernetAccPortLoopbackSourceMacAddress_Object = MibTableColumn
cmEthernetAccPortLoopbackSourceMacAddress = _CmEthernetAccPortLoopbackSourceMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 103),
    _CmEthernetAccPortLoopbackSourceMacAddress_Type()
)
cmEthernetAccPortLoopbackSourceMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackSourceMacAddress.setStatus("current")
_CmEthernetAccPortLoopbackDestMacAddress_Type = MacAddress
_CmEthernetAccPortLoopbackDestMacAddress_Object = MibTableColumn
cmEthernetAccPortLoopbackDestMacAddress = _CmEthernetAccPortLoopbackDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 104),
    _CmEthernetAccPortLoopbackDestMacAddress_Type()
)
cmEthernetAccPortLoopbackDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackDestMacAddress.setStatus("current")
_CmEthernetAccPortLoopbackBlockingEnabled_Type = TruthValue
_CmEthernetAccPortLoopbackBlockingEnabled_Object = MibTableColumn
cmEthernetAccPortLoopbackBlockingEnabled = _CmEthernetAccPortLoopbackBlockingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 105),
    _CmEthernetAccPortLoopbackBlockingEnabled_Type()
)
cmEthernetAccPortLoopbackBlockingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackBlockingEnabled.setStatus("current")
_CmEthernetAccPortRxDeiAction_Type = RxDeiAction
_CmEthernetAccPortRxDeiAction_Object = MibTableColumn
cmEthernetAccPortRxDeiAction = _CmEthernetAccPortRxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 106),
    _CmEthernetAccPortRxDeiAction_Type()
)
cmEthernetAccPortRxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortRxDeiAction.setStatus("current")
_CmEthernetAccPortTxDeiAction_Type = TxDeiAction
_CmEthernetAccPortTxDeiAction_Object = MibTableColumn
cmEthernetAccPortTxDeiAction = _CmEthernetAccPortTxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 107),
    _CmEthernetAccPortTxDeiAction_Type()
)
cmEthernetAccPortTxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortTxDeiAction.setStatus("current")
_CmEthernetAccPortRxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetAccPortRxDeiOuterTagType_Object = MibTableColumn
cmEthernetAccPortRxDeiOuterTagType = _CmEthernetAccPortRxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 108),
    _CmEthernetAccPortRxDeiOuterTagType_Type()
)
cmEthernetAccPortRxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortRxDeiOuterTagType.setStatus("current")
_CmEthernetAccPortTxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetAccPortTxDeiOuterTagType_Object = MibTableColumn
cmEthernetAccPortTxDeiOuterTagType = _CmEthernetAccPortTxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 109),
    _CmEthernetAccPortTxDeiOuterTagType_Type()
)
cmEthernetAccPortTxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortTxDeiOuterTagType.setStatus("current")
_CmEthernetAccPortLaserWDMChannel_Type = SfpChannelIdentifier
_CmEthernetAccPortLaserWDMChannel_Object = MibTableColumn
cmEthernetAccPortLaserWDMChannel = _CmEthernetAccPortLaserWDMChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 110),
    _CmEthernetAccPortLaserWDMChannel_Type()
)
cmEthernetAccPortLaserWDMChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLaserWDMChannel.setStatus("current")
_CmEthernetAccPortLaserIsTunable_Type = TruthValue
_CmEthernetAccPortLaserIsTunable_Object = MibTableColumn
cmEthernetAccPortLaserIsTunable = _CmEthernetAccPortLaserIsTunable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 111),
    _CmEthernetAccPortLaserIsTunable_Type()
)
cmEthernetAccPortLaserIsTunable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLaserIsTunable.setStatus("current")
_CmEthernetAccPortLaserFrequency_Type = Unsigned32
_CmEthernetAccPortLaserFrequency_Object = MibTableColumn
cmEthernetAccPortLaserFrequency = _CmEthernetAccPortLaserFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 112),
    _CmEthernetAccPortLaserFrequency_Type()
)
cmEthernetAccPortLaserFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortLaserFrequency.setStatus("current")
_CmEthernetAccPortMediaTypeAutoSelected_Type = EthernetMediaType
_CmEthernetAccPortMediaTypeAutoSelected_Object = MibTableColumn
cmEthernetAccPortMediaTypeAutoSelected = _CmEthernetAccPortMediaTypeAutoSelected_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 113),
    _CmEthernetAccPortMediaTypeAutoSelected_Type()
)
cmEthernetAccPortMediaTypeAutoSelected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortMediaTypeAutoSelected.setStatus("current")
_CmEthernetAccPortLowLatencyQueuingEnabled_Type = TruthValue
_CmEthernetAccPortLowLatencyQueuingEnabled_Object = MibTableColumn
cmEthernetAccPortLowLatencyQueuingEnabled = _CmEthernetAccPortLowLatencyQueuingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 114),
    _CmEthernetAccPortLowLatencyQueuingEnabled_Type()
)
cmEthernetAccPortLowLatencyQueuingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLowLatencyQueuingEnabled.setStatus("current")
_CmEthernetAccPortA2nSwapPriorityVIDEnabled_Type = TruthValue
_CmEthernetAccPortA2nSwapPriorityVIDEnabled_Object = MibTableColumn
cmEthernetAccPortA2nSwapPriorityVIDEnabled = _CmEthernetAccPortA2nSwapPriorityVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 115),
    _CmEthernetAccPortA2nSwapPriorityVIDEnabled_Type()
)
cmEthernetAccPortA2nSwapPriorityVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortA2nSwapPriorityVIDEnabled.setStatus("current")
_CmEthernetAccPortN2aSwapPriorityVIDEnabled_Type = TruthValue
_CmEthernetAccPortN2aSwapPriorityVIDEnabled_Object = MibTableColumn
cmEthernetAccPortN2aSwapPriorityVIDEnabled = _CmEthernetAccPortN2aSwapPriorityVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 116),
    _CmEthernetAccPortN2aSwapPriorityVIDEnabled_Type()
)
cmEthernetAccPortN2aSwapPriorityVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortN2aSwapPriorityVIDEnabled.setStatus("current")
_CmEthernetAccPortSwapPriorityVID_Type = VlanId
_CmEthernetAccPortSwapPriorityVID_Object = MibTableColumn
cmEthernetAccPortSwapPriorityVID = _CmEthernetAccPortSwapPriorityVID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 117),
    _CmEthernetAccPortSwapPriorityVID_Type()
)
cmEthernetAccPortSwapPriorityVID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortSwapPriorityVID.setStatus("current")
_CmEthernetAccPortDiagnosticMacAddress_Type = MacAddress
_CmEthernetAccPortDiagnosticMacAddress_Object = MibTableColumn
cmEthernetAccPortDiagnosticMacAddress = _CmEthernetAccPortDiagnosticMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 118),
    _CmEthernetAccPortDiagnosticMacAddress_Type()
)
cmEthernetAccPortDiagnosticMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortDiagnosticMacAddress.setStatus("current")


class _CmEthernetAccPortIngressCOSPriority_Type(VlanTagType):
    """Custom type cmEthernetAccPortIngressCOSPriority based on VlanTagType"""
    defaultValue = 2


_CmEthernetAccPortIngressCOSPriority_Type.__name__ = "VlanTagType"
_CmEthernetAccPortIngressCOSPriority_Object = MibTableColumn
cmEthernetAccPortIngressCOSPriority = _CmEthernetAccPortIngressCOSPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 119),
    _CmEthernetAccPortIngressCOSPriority_Type()
)
cmEthernetAccPortIngressCOSPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortIngressCOSPriority.setStatus("deprecated")


class _CmEthernetAccPortDefaultCOS_Type(Integer32):
    """Custom type cmEthernetAccPortDefaultCOS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmEthernetAccPortDefaultCOS_Type.__name__ = "Integer32"
_CmEthernetAccPortDefaultCOS_Object = MibTableColumn
cmEthernetAccPortDefaultCOS = _CmEthernetAccPortDefaultCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 120),
    _CmEthernetAccPortDefaultCOS_Type()
)
cmEthernetAccPortDefaultCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortDefaultCOS.setStatus("deprecated")


class _CmEthernetAccPortTrafficModel_Type(EthernetPortTrafficModel):
    """Custom type cmEthernetAccPortTrafficModel based on EthernetPortTrafficModel"""
    defaultValue = 1


_CmEthernetAccPortTrafficModel_Type.__name__ = "EthernetPortTrafficModel"
_CmEthernetAccPortTrafficModel_Object = MibTableColumn
cmEthernetAccPortTrafficModel = _CmEthernetAccPortTrafficModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 121),
    _CmEthernetAccPortTrafficModel_Type()
)
cmEthernetAccPortTrafficModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortTrafficModel.setStatus("current")
_CmEthernetAccPortIndependentShaperBW_Type = TruthValue
_CmEthernetAccPortIndependentShaperBW_Object = MibTableColumn
cmEthernetAccPortIndependentShaperBW = _CmEthernetAccPortIndependentShaperBW_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 122),
    _CmEthernetAccPortIndependentShaperBW_Type()
)
cmEthernetAccPortIndependentShaperBW.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortIndependentShaperBW.setStatus("current")
_CmEthernetAccPortJdsuLoopbackSrcIp_Type = IpAddress
_CmEthernetAccPortJdsuLoopbackSrcIp_Object = MibTableColumn
cmEthernetAccPortJdsuLoopbackSrcIp = _CmEthernetAccPortJdsuLoopbackSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 123),
    _CmEthernetAccPortJdsuLoopbackSrcIp_Type()
)
cmEthernetAccPortJdsuLoopbackSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortJdsuLoopbackSrcIp.setStatus("current")
_CmEthernetAccPortWfqSegmentationCOS_Type = Integer32
_CmEthernetAccPortWfqSegmentationCOS_Object = MibTableColumn
cmEthernetAccPortWfqSegmentationCOS = _CmEthernetAccPortWfqSegmentationCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 124),
    _CmEthernetAccPortWfqSegmentationCOS_Type()
)
cmEthernetAccPortWfqSegmentationCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortWfqSegmentationCOS.setStatus("current")
_CmEthernetAccPortWfqGroupCOS_Type = Integer32
_CmEthernetAccPortWfqGroupCOS_Object = MibTableColumn
cmEthernetAccPortWfqGroupCOS = _CmEthernetAccPortWfqGroupCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 125),
    _CmEthernetAccPortWfqGroupCOS_Type()
)
cmEthernetAccPortWfqGroupCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortWfqGroupCOS.setStatus("current")
_CmEthernetAccPortWfqGroupEirLo_Type = Unsigned32
_CmEthernetAccPortWfqGroupEirLo_Object = MibTableColumn
cmEthernetAccPortWfqGroupEirLo = _CmEthernetAccPortWfqGroupEirLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 126),
    _CmEthernetAccPortWfqGroupEirLo_Type()
)
cmEthernetAccPortWfqGroupEirLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortWfqGroupEirLo.setStatus("current")
_CmEthernetAccPortWfqGroupEirHi_Type = Unsigned32
_CmEthernetAccPortWfqGroupEirHi_Object = MibTableColumn
cmEthernetAccPortWfqGroupEirHi = _CmEthernetAccPortWfqGroupEirHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 127),
    _CmEthernetAccPortWfqGroupEirHi_Type()
)
cmEthernetAccPortWfqGroupEirHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortWfqGroupEirHi.setStatus("current")
_CmEthernetAccPortSilentStartControl_Type = TruthValue
_CmEthernetAccPortSilentStartControl_Object = MibTableColumn
cmEthernetAccPortSilentStartControl = _CmEthernetAccPortSilentStartControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 128),
    _CmEthernetAccPortSilentStartControl_Type()
)
cmEthernetAccPortSilentStartControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortSilentStartControl.setStatus("current")
_CmEthernetAccPortSfpLinkLength_Type = Integer32
_CmEthernetAccPortSfpLinkLength_Object = MibTableColumn
cmEthernetAccPortSfpLinkLength = _CmEthernetAccPortSfpLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 129),
    _CmEthernetAccPortSfpLinkLength_Type()
)
cmEthernetAccPortSfpLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpLinkLength.setStatus("current")
_CmEthernetAccPortOuterTagTpidOverride_Type = TruthValue
_CmEthernetAccPortOuterTagTpidOverride_Object = MibTableColumn
cmEthernetAccPortOuterTagTpidOverride = _CmEthernetAccPortOuterTagTpidOverride_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 130),
    _CmEthernetAccPortOuterTagTpidOverride_Type()
)
cmEthernetAccPortOuterTagTpidOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterTagTpidOverride.setStatus("current")
_CmEthernetAccPortOuterTagTpid_Type = Unsigned32
_CmEthernetAccPortOuterTagTpid_Object = MibTableColumn
cmEthernetAccPortOuterTagTpid = _CmEthernetAccPortOuterTagTpid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 131),
    _CmEthernetAccPortOuterTagTpid_Type()
)
cmEthernetAccPortOuterTagTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortOuterTagTpid.setStatus("current")


class _CmEthernetAccPortSfpName_Type(DisplayString):
    """Custom type cmEthernetAccPortSfpName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetAccPortSfpName_Type.__name__ = "DisplayString"
_CmEthernetAccPortSfpName_Object = MibTableColumn
cmEthernetAccPortSfpName = _CmEthernetAccPortSfpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 132),
    _CmEthernetAccPortSfpName_Type()
)
cmEthernetAccPortSfpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpName.setStatus("current")


class _CmEthernetAccPortSfpHardwareRevision_Type(DisplayString):
    """Custom type cmEthernetAccPortSfpHardwareRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetAccPortSfpHardwareRevision_Type.__name__ = "DisplayString"
_CmEthernetAccPortSfpHardwareRevision_Object = MibTableColumn
cmEthernetAccPortSfpHardwareRevision = _CmEthernetAccPortSfpHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 133),
    _CmEthernetAccPortSfpHardwareRevision_Type()
)
cmEthernetAccPortSfpHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpHardwareRevision.setStatus("current")
_CmEthernetAccPortPersistentLoopbackControl_Type = TruthValue
_CmEthernetAccPortPersistentLoopbackControl_Object = MibTableColumn
cmEthernetAccPortPersistentLoopbackControl = _CmEthernetAccPortPersistentLoopbackControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 134),
    _CmEthernetAccPortPersistentLoopbackControl_Type()
)
cmEthernetAccPortPersistentLoopbackControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPersistentLoopbackControl.setStatus("current")
_CmEthernetAccPortLoopbackTestReflectorIPv4AddressControl_Type = TruthValue
_CmEthernetAccPortLoopbackTestReflectorIPv4AddressControl_Object = MibTableColumn
cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl = _CmEthernetAccPortLoopbackTestReflectorIPv4AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 135),
    _CmEthernetAccPortLoopbackTestReflectorIPv4AddressControl_Type()
)
cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl.setStatus("current")
_CmEthernetAccPortLoopbackTestReflectorIPv4Address_Type = IpAddress
_CmEthernetAccPortLoopbackTestReflectorIPv4Address_Object = MibTableColumn
cmEthernetAccPortLoopbackTestReflectorIPv4Address = _CmEthernetAccPortLoopbackTestReflectorIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 136),
    _CmEthernetAccPortLoopbackTestReflectorIPv4Address_Type()
)
cmEthernetAccPortLoopbackTestReflectorIPv4Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackTestReflectorIPv4Address.setStatus("current")
_CmEthernetAccPortLoopbackTestReflectorIPv6AddressControl_Type = TruthValue
_CmEthernetAccPortLoopbackTestReflectorIPv6AddressControl_Object = MibTableColumn
cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl = _CmEthernetAccPortLoopbackTestReflectorIPv6AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 137),
    _CmEthernetAccPortLoopbackTestReflectorIPv6AddressControl_Type()
)
cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl.setStatus("current")
_CmEthernetAccPortLoopbackTestReflectorIPv6Address_Type = Ipv6Address
_CmEthernetAccPortLoopbackTestReflectorIPv6Address_Object = MibTableColumn
cmEthernetAccPortLoopbackTestReflectorIPv6Address = _CmEthernetAccPortLoopbackTestReflectorIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 138),
    _CmEthernetAccPortLoopbackTestReflectorIPv6Address_Type()
)
cmEthernetAccPortLoopbackTestReflectorIPv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortLoopbackTestReflectorIPv6Address.setStatus("current")
_CmEthernetAccPortPowerdDeviceDetection_Type = ToggleValue
_CmEthernetAccPortPowerdDeviceDetection_Object = MibTableColumn
cmEthernetAccPortPowerdDeviceDetection = _CmEthernetAccPortPowerdDeviceDetection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 139),
    _CmEthernetAccPortPowerdDeviceDetection_Type()
)
cmEthernetAccPortPowerdDeviceDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortPowerdDeviceDetection.setStatus("current")
_CmEthernetAccPortPoEStatus_Type = PoEStatus
_CmEthernetAccPortPoEStatus_Object = MibTableColumn
cmEthernetAccPortPoEStatus = _CmEthernetAccPortPoEStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 140),
    _CmEthernetAccPortPoEStatus_Type()
)
cmEthernetAccPortPoEStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortPoEStatus.setStatus("current")
_CmEthernetAccPortSfpIdentifierValue_Type = SfpIdentifierValue
_CmEthernetAccPortSfpIdentifierValue_Object = MibTableColumn
cmEthernetAccPortSfpIdentifierValue = _CmEthernetAccPortSfpIdentifierValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 1, 1, 141),
    _CmEthernetAccPortSfpIdentifierValue_Type()
)
cmEthernetAccPortSfpIdentifierValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortSfpIdentifierValue.setStatus("current")
_CmEthernetAccPortCpdTable_Object = MibTable
cmEthernetAccPortCpdTable = _CmEthernetAccPortCpdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdTable.setStatus("current")
_CmEthernetAccPortCpdEntry_Object = MibTableRow
cmEthernetAccPortCpdEntry = _CmEthernetAccPortCpdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1)
)
cmEthernetAccPortCpdEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortCpdIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdEntry.setStatus("current")


class _CmEthernetAccPortCpdIndex_Type(Integer32):
    """Custom type cmEthernetAccPortCpdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetAccPortCpdIndex_Type.__name__ = "Integer32"
_CmEthernetAccPortCpdIndex_Object = MibTableColumn
cmEthernetAccPortCpdIndex = _CmEthernetAccPortCpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 1),
    _CmEthernetAccPortCpdIndex_Type()
)
cmEthernetAccPortCpdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdIndex.setStatus("current")
_CmEthernetAccPortCpdFilterType_Type = CmControlProtocolFilterType
_CmEthernetAccPortCpdFilterType_Object = MibTableColumn
cmEthernetAccPortCpdFilterType = _CmEthernetAccPortCpdFilterType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 2),
    _CmEthernetAccPortCpdFilterType_Type()
)
cmEthernetAccPortCpdFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdFilterType.setStatus("current")


class _CmEthernetAccPortCpdFilterDescr_Type(DisplayString):
    """Custom type cmEthernetAccPortCpdFilterDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetAccPortCpdFilterDescr_Type.__name__ = "DisplayString"
_CmEthernetAccPortCpdFilterDescr_Object = MibTableColumn
cmEthernetAccPortCpdFilterDescr = _CmEthernetAccPortCpdFilterDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 3),
    _CmEthernetAccPortCpdFilterDescr_Type()
)
cmEthernetAccPortCpdFilterDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdFilterDescr.setStatus("current")
_CmEthernetAccPortCpdDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdDispType_Object = MibTableColumn
cmEthernetAccPortCpdDispType = _CmEthernetAccPortCpdDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 4),
    _CmEthernetAccPortCpdDispType_Type()
)
cmEthernetAccPortCpdDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdDispType.setStatus("current")
_CmEthernetAccPortCpdMacAddressMatch_Type = MacAddress
_CmEthernetAccPortCpdMacAddressMatch_Object = MibTableColumn
cmEthernetAccPortCpdMacAddressMatch = _CmEthernetAccPortCpdMacAddressMatch_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 5),
    _CmEthernetAccPortCpdMacAddressMatch_Type()
)
cmEthernetAccPortCpdMacAddressMatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdMacAddressMatch.setStatus("current")
_CmEthernetAccPortCpdMacAddressMask_Type = MacAddress
_CmEthernetAccPortCpdMacAddressMask_Object = MibTableColumn
cmEthernetAccPortCpdMacAddressMask = _CmEthernetAccPortCpdMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 6),
    _CmEthernetAccPortCpdMacAddressMask_Type()
)
cmEthernetAccPortCpdMacAddressMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdMacAddressMask.setStatus("current")


class _CmEthernetAccPortCpdEthertype_Type(Integer32):
    """Custom type cmEthernetAccPortCpdEthertype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmEthernetAccPortCpdEthertype_Type.__name__ = "Integer32"
_CmEthernetAccPortCpdEthertype_Object = MibTableColumn
cmEthernetAccPortCpdEthertype = _CmEthernetAccPortCpdEthertype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 7),
    _CmEthernetAccPortCpdEthertype_Type()
)
cmEthernetAccPortCpdEthertype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdEthertype.setStatus("current")
_CmEthernetAccPortCpdEthertypeMask_Type = Integer32
_CmEthernetAccPortCpdEthertypeMask_Object = MibTableColumn
cmEthernetAccPortCpdEthertypeMask = _CmEthernetAccPortCpdEthertypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 8),
    _CmEthernetAccPortCpdEthertypeMask_Type()
)
cmEthernetAccPortCpdEthertypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdEthertypeMask.setStatus("current")
_CmEthernetAccPortCpdSubtype_Type = Integer32
_CmEthernetAccPortCpdSubtype_Object = MibTableColumn
cmEthernetAccPortCpdSubtype = _CmEthernetAccPortCpdSubtype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 9),
    _CmEthernetAccPortCpdSubtype_Type()
)
cmEthernetAccPortCpdSubtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdSubtype.setStatus("current")
_CmEthernetAccPortCpdSubtypeMask_Type = Integer32
_CmEthernetAccPortCpdSubtypeMask_Object = MibTableColumn
cmEthernetAccPortCpdSubtypeMask = _CmEthernetAccPortCpdSubtypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 2, 1, 10),
    _CmEthernetAccPortCpdSubtypeMask_Type()
)
cmEthernetAccPortCpdSubtypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdSubtypeMask.setStatus("current")
_CmEthernetAccPortClbTable_Object = MibTable
cmEthernetAccPortClbTable = _CmEthernetAccPortClbTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortClbTable.setStatus("current")
_CmEthernetAccPortClbEntry_Object = MibTableRow
cmEthernetAccPortClbEntry = _CmEthernetAccPortClbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3, 1)
)
cmEthernetAccPortClbEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortClbIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetAccPortClbEntry.setStatus("current")


class _CmEthernetAccPortClbIndex_Type(Integer32):
    """Custom type cmEthernetAccPortClbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_CmEthernetAccPortClbIndex_Type.__name__ = "Integer32"
_CmEthernetAccPortClbIndex_Object = MibTableColumn
cmEthernetAccPortClbIndex = _CmEthernetAccPortClbIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3, 1, 1),
    _CmEthernetAccPortClbIndex_Type()
)
cmEthernetAccPortClbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortClbIndex.setStatus("current")
_CmEthernetAccPortClbEnabled_Type = TruthValue
_CmEthernetAccPortClbEnabled_Object = MibTableColumn
cmEthernetAccPortClbEnabled = _CmEthernetAccPortClbEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3, 1, 2),
    _CmEthernetAccPortClbEnabled_Type()
)
cmEthernetAccPortClbEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortClbEnabled.setStatus("current")
_CmEthernetAccPortClbLength_Type = DisplayString
_CmEthernetAccPortClbLength_Object = MibTableColumn
cmEthernetAccPortClbLength = _CmEthernetAccPortClbLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3, 1, 3),
    _CmEthernetAccPortClbLength_Type()
)
cmEthernetAccPortClbLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortClbLength.setStatus("current")


class _CmEthernetAccPortClbDescr_Type(DisplayString):
    """Custom type cmEthernetAccPortClbDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetAccPortClbDescr_Type.__name__ = "DisplayString"
_CmEthernetAccPortClbDescr_Object = MibTableColumn
cmEthernetAccPortClbDescr = _CmEthernetAccPortClbDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 3, 1, 4),
    _CmEthernetAccPortClbDescr_Type()
)
cmEthernetAccPortClbDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortClbDescr.setStatus("current")
_CmFlowTable_Object = MibTable
cmFlowTable = _CmFlowTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4)
)
if mibBuilder.loadTexts:
    cmFlowTable.setStatus("current")
_CmFlowEntry_Object = MibTableRow
cmFlowEntry = _CmFlowEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1)
)
cmFlowEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowIndex"),
)
if mibBuilder.loadTexts:
    cmFlowEntry.setStatus("current")


class _CmFlowIndex_Type(Integer32):
    """Custom type cmFlowIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 400),
    )


_CmFlowIndex_Type.__name__ = "Integer32"
_CmFlowIndex_Object = MibTableColumn
cmFlowIndex = _CmFlowIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 1),
    _CmFlowIndex_Type()
)
cmFlowIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowIndex.setStatus("current")


class _CmFlowCircuitName_Type(DisplayString):
    """Custom type cmFlowCircuitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmFlowCircuitName_Type.__name__ = "DisplayString"
_CmFlowCircuitName_Object = MibTableColumn
cmFlowCircuitName = _CmFlowCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 2),
    _CmFlowCircuitName_Type()
)
cmFlowCircuitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCircuitName.setStatus("current")
_CmFlowAdminState_Type = AdminState
_CmFlowAdminState_Object = MibTableColumn
cmFlowAdminState = _CmFlowAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 3),
    _CmFlowAdminState_Type()
)
cmFlowAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowAdminState.setStatus("current")
_CmFlowOperationalState_Type = OperationalState
_CmFlowOperationalState_Object = MibTableColumn
cmFlowOperationalState = _CmFlowOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 4),
    _CmFlowOperationalState_Type()
)
cmFlowOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowOperationalState.setStatus("current")
_CmFlowSecondaryState_Type = SecondaryState
_CmFlowSecondaryState_Object = MibTableColumn
cmFlowSecondaryState = _CmFlowSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 5),
    _CmFlowSecondaryState_Type()
)
cmFlowSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowSecondaryState.setStatus("current")
_CmFlowType_Type = CmFlowType
_CmFlowType_Object = MibTableColumn
cmFlowType = _CmFlowType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 6),
    _CmFlowType_Type()
)
cmFlowType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowType.setStatus("current")
_CmFlowMultiCOS_Type = TruthValue
_CmFlowMultiCOS_Object = MibTableColumn
cmFlowMultiCOS = _CmFlowMultiCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 7),
    _CmFlowMultiCOS_Type()
)
cmFlowMultiCOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowMultiCOS.setStatus("current")
_CmFlowA2NCIR_Type = Unsigned32
_CmFlowA2NCIR_Object = MibTableColumn
cmFlowA2NCIR = _CmFlowA2NCIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 8),
    _CmFlowA2NCIR_Type()
)
cmFlowA2NCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowA2NCIR.setStatus("current")
_CmFlowA2NEIR_Type = Unsigned32
_CmFlowA2NEIR_Object = MibTableColumn
cmFlowA2NEIR = _CmFlowA2NEIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 9),
    _CmFlowA2NEIR_Type()
)
cmFlowA2NEIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowA2NEIR.setStatus("current")
_CmFlowN2ARateLimitingEnabled_Type = TruthValue
_CmFlowN2ARateLimitingEnabled_Object = MibTableColumn
cmFlowN2ARateLimitingEnabled = _CmFlowN2ARateLimitingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 10),
    _CmFlowN2ARateLimitingEnabled_Type()
)
cmFlowN2ARateLimitingEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2ARateLimitingEnabled.setStatus("current")
_CmFlowN2ACIR_Type = Unsigned32
_CmFlowN2ACIR_Object = MibTableColumn
cmFlowN2ACIR = _CmFlowN2ACIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 11),
    _CmFlowN2ACIR_Type()
)
cmFlowN2ACIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2ACIR.setStatus("current")
_CmFlowN2AEIR_Type = Unsigned32
_CmFlowN2AEIR_Object = MibTableColumn
cmFlowN2AEIR = _CmFlowN2AEIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 12),
    _CmFlowN2AEIR_Type()
)
cmFlowN2AEIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2AEIR.setStatus("current")
_CmFlowStorageType_Type = StorageType
_CmFlowStorageType_Object = MibTableColumn
cmFlowStorageType = _CmFlowStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 13),
    _CmFlowStorageType_Type()
)
cmFlowStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowStorageType.setStatus("current")
_CmFlowRowStatus_Type = RowStatus
_CmFlowRowStatus_Object = MibTableColumn
cmFlowRowStatus = _CmFlowRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 14),
    _CmFlowRowStatus_Type()
)
cmFlowRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowRowStatus.setStatus("current")
_CmFlowTrafficType_Type = FlowTrafficType
_CmFlowTrafficType_Object = MibTableColumn
cmFlowTrafficType = _CmFlowTrafficType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 15),
    _CmFlowTrafficType_Type()
)
cmFlowTrafficType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowTrafficType.setStatus("current")


class _CmFlowCOS_Type(Integer32):
    """Custom type cmFlowCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmFlowCOS_Type.__name__ = "Integer32"
_CmFlowCOS_Object = MibTableColumn
cmFlowCOS = _CmFlowCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 16),
    _CmFlowCOS_Type()
)
cmFlowCOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCOS.setStatus("current")


class _CmFlowVlanMemberList_Type(DisplayString):
    """Custom type cmFlowVlanMemberList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CmFlowVlanMemberList_Type.__name__ = "DisplayString"
_CmFlowVlanMemberList_Object = MibTableColumn
cmFlowVlanMemberList = _CmFlowVlanMemberList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 17),
    _CmFlowVlanMemberList_Type()
)
cmFlowVlanMemberList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowVlanMemberList.setStatus("current")
_CmFlowAction_Type = FlowVlanActionType
_CmFlowAction_Object = MibTableColumn
cmFlowAction = _CmFlowAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 18),
    _CmFlowAction_Type()
)
cmFlowAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowAction.setStatus("current")


class _CmFlowActionVlan_Type(DisplayString):
    """Custom type cmFlowActionVlan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmFlowActionVlan_Type.__name__ = "DisplayString"
_CmFlowActionVlan_Object = MibTableColumn
cmFlowActionVlan = _CmFlowActionVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 19),
    _CmFlowActionVlan_Type()
)
cmFlowActionVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowActionVlan.setStatus("current")
_CmFlowUntaggedMemberEnabled_Type = TruthValue
_CmFlowUntaggedMemberEnabled_Object = MibTableColumn
cmFlowUntaggedMemberEnabled = _CmFlowUntaggedMemberEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 20),
    _CmFlowUntaggedMemberEnabled_Type()
)
cmFlowUntaggedMemberEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowUntaggedMemberEnabled.setStatus("current")
_CmFlowA2NCIRHi_Type = Unsigned32
_CmFlowA2NCIRHi_Object = MibTableColumn
cmFlowA2NCIRHi = _CmFlowA2NCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 21),
    _CmFlowA2NCIRHi_Type()
)
cmFlowA2NCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowA2NCIRHi.setStatus("current")
_CmFlowA2NEIRHi_Type = Unsigned32
_CmFlowA2NEIRHi_Object = MibTableColumn
cmFlowA2NEIRHi = _CmFlowA2NEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 22),
    _CmFlowA2NEIRHi_Type()
)
cmFlowA2NEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowA2NEIRHi.setStatus("current")
_CmFlowN2ACIRHi_Type = Unsigned32
_CmFlowN2ACIRHi_Object = MibTableColumn
cmFlowN2ACIRHi = _CmFlowN2ACIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 23),
    _CmFlowN2ACIRHi_Type()
)
cmFlowN2ACIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2ACIRHi.setStatus("current")
_CmFlowN2AEIRHi_Type = Unsigned32
_CmFlowN2AEIRHi_Object = MibTableColumn
cmFlowN2AEIRHi = _CmFlowN2AEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 24),
    _CmFlowN2AEIRHi_Type()
)
cmFlowN2AEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2AEIRHi.setStatus("current")
_CmFlowHCOSMgmtEnabled_Type = TruthValue
_CmFlowHCOSMgmtEnabled_Object = MibTableColumn
cmFlowHCOSMgmtEnabled = _CmFlowHCOSMgmtEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 25),
    _CmFlowHCOSMgmtEnabled_Type()
)
cmFlowHCOSMgmtEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowHCOSMgmtEnabled.setStatus("current")
_CmFlowGuaranteedA2NBandwidthLo_Type = Unsigned32
_CmFlowGuaranteedA2NBandwidthLo_Object = MibTableColumn
cmFlowGuaranteedA2NBandwidthLo = _CmFlowGuaranteedA2NBandwidthLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 26),
    _CmFlowGuaranteedA2NBandwidthLo_Type()
)
cmFlowGuaranteedA2NBandwidthLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowGuaranteedA2NBandwidthLo.setStatus("current")
_CmFlowGuaranteedA2NBandwidthHi_Type = Unsigned32
_CmFlowGuaranteedA2NBandwidthHi_Object = MibTableColumn
cmFlowGuaranteedA2NBandwidthHi = _CmFlowGuaranteedA2NBandwidthHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 27),
    _CmFlowGuaranteedA2NBandwidthHi_Type()
)
cmFlowGuaranteedA2NBandwidthHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowGuaranteedA2NBandwidthHi.setStatus("current")
_CmFlowMaximumA2NBandwidthLo_Type = Unsigned32
_CmFlowMaximumA2NBandwidthLo_Object = MibTableColumn
cmFlowMaximumA2NBandwidthLo = _CmFlowMaximumA2NBandwidthLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 28),
    _CmFlowMaximumA2NBandwidthLo_Type()
)
cmFlowMaximumA2NBandwidthLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowMaximumA2NBandwidthLo.setStatus("current")
_CmFlowMaximumA2NBandwidthHi_Type = Unsigned32
_CmFlowMaximumA2NBandwidthHi_Object = MibTableColumn
cmFlowMaximumA2NBandwidthHi = _CmFlowMaximumA2NBandwidthHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 29),
    _CmFlowMaximumA2NBandwidthHi_Type()
)
cmFlowMaximumA2NBandwidthHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowMaximumA2NBandwidthHi.setStatus("current")
_CmFlowCTagControl_Type = FlowTagControl
_CmFlowCTagControl_Object = MibTableColumn
cmFlowCTagControl = _CmFlowCTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 30),
    _CmFlowCTagControl_Type()
)
cmFlowCTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCTagControl.setStatus("current")
_CmFlowCTagVlanId_Type = VlanId
_CmFlowCTagVlanId_Object = MibTableColumn
cmFlowCTagVlanId = _CmFlowCTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 31),
    _CmFlowCTagVlanId_Type()
)
cmFlowCTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCTagVlanId.setStatus("current")
_CmFlowCTagVlanPriority_Type = VlanPriority
_CmFlowCTagVlanPriority_Object = MibTableColumn
cmFlowCTagVlanPriority = _CmFlowCTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 32),
    _CmFlowCTagVlanPriority_Type()
)
cmFlowCTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCTagVlanPriority.setStatus("current")
_CmFlowCTagMatchRxPrio_Type = TruthValue
_CmFlowCTagMatchRxPrio_Object = MibTableColumn
cmFlowCTagMatchRxPrio = _CmFlowCTagMatchRxPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 33),
    _CmFlowCTagMatchRxPrio_Type()
)
cmFlowCTagMatchRxPrio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowCTagMatchRxPrio.setStatus("current")
_CmFlowSTagControl_Type = FlowTagControl
_CmFlowSTagControl_Object = MibTableColumn
cmFlowSTagControl = _CmFlowSTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 34),
    _CmFlowSTagControl_Type()
)
cmFlowSTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowSTagControl.setStatus("current")
_CmFlowSTagVlanId_Type = VlanId
_CmFlowSTagVlanId_Object = MibTableColumn
cmFlowSTagVlanId = _CmFlowSTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 35),
    _CmFlowSTagVlanId_Type()
)
cmFlowSTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowSTagVlanId.setStatus("current")
_CmFlowSTagVlanPriority_Type = VlanPriority
_CmFlowSTagVlanPriority_Object = MibTableColumn
cmFlowSTagVlanPriority = _CmFlowSTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 36),
    _CmFlowSTagVlanPriority_Type()
)
cmFlowSTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowSTagVlanPriority.setStatus("current")
_CmFlowOuterTagPrioEnabled_Type = TruthValue
_CmFlowOuterTagPrioEnabled_Object = MibTableColumn
cmFlowOuterTagPrioEnabled = _CmFlowOuterTagPrioEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 37),
    _CmFlowOuterTagPrioEnabled_Type()
)
cmFlowOuterTagPrioEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowOuterTagPrioEnabled.setStatus("current")
_CmFlowN2ACOSPriorityTagType_Type = VlanTagType
_CmFlowN2ACOSPriorityTagType_Object = MibTableColumn
cmFlowN2ACOSPriorityTagType = _CmFlowN2ACOSPriorityTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 38),
    _CmFlowN2ACOSPriorityTagType_Type()
)
cmFlowN2ACOSPriorityTagType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2ACOSPriorityTagType.setStatus("current")


class _CmFlowESFramesLossThreshold_Type(Integer32):
    """Custom type cmFlowESFramesLossThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CmFlowESFramesLossThreshold_Type.__name__ = "Integer32"
_CmFlowESFramesLossThreshold_Object = MibTableColumn
cmFlowESFramesLossThreshold = _CmFlowESFramesLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 39),
    _CmFlowESFramesLossThreshold_Type()
)
cmFlowESFramesLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowESFramesLossThreshold.setStatus("current")


class _CmFlowSESFramesLossThresholdRatio_Type(Integer32):
    """Custom type cmFlowSESFramesLossThresholdRatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CmFlowSESFramesLossThresholdRatio_Type.__name__ = "Integer32"
_CmFlowSESFramesLossThresholdRatio_Object = MibTableColumn
cmFlowSESFramesLossThresholdRatio = _CmFlowSESFramesLossThresholdRatio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 40),
    _CmFlowSESFramesLossThresholdRatio_Type()
)
cmFlowSESFramesLossThresholdRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowSESFramesLossThresholdRatio.setStatus("current")
_CmFlowPolicingEnabled_Type = TruthValue
_CmFlowPolicingEnabled_Object = MibTableColumn
cmFlowPolicingEnabled = _CmFlowPolicingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 41),
    _CmFlowPolicingEnabled_Type()
)
cmFlowPolicingEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPolicingEnabled.setStatus("current")
_CmFlowPreserveSTagProperties_Type = TruthValue
_CmFlowPreserveSTagProperties_Object = MibTableColumn
cmFlowPreserveSTagProperties = _CmFlowPreserveSTagProperties_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 42),
    _CmFlowPreserveSTagProperties_Type()
)
cmFlowPreserveSTagProperties.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPreserveSTagProperties.setStatus("current")
_CmFlowInnerTagPrioEnabled_Type = TruthValue
_CmFlowInnerTagPrioEnabled_Object = MibTableColumn
cmFlowInnerTagPrioEnabled = _CmFlowInnerTagPrioEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 43),
    _CmFlowInnerTagPrioEnabled_Type()
)
cmFlowInnerTagPrioEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowInnerTagPrioEnabled.setStatus("current")
_CmFlowN2AOuterTagPrioEnabled_Type = TruthValue
_CmFlowN2AOuterTagPrioEnabled_Object = MibTableColumn
cmFlowN2AOuterTagPrioEnabled = _CmFlowN2AOuterTagPrioEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 44),
    _CmFlowN2AOuterTagPrioEnabled_Type()
)
cmFlowN2AOuterTagPrioEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2AOuterTagPrioEnabled.setStatus("current")
_CmFlowA2NShapingType_Type = ShapingType
_CmFlowA2NShapingType_Object = MibTableColumn
cmFlowA2NShapingType = _CmFlowA2NShapingType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 45),
    _CmFlowA2NShapingType_Type()
)
cmFlowA2NShapingType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowA2NShapingType.setStatus("current")
_CmFlowN2AShapingType_Type = ShapingType
_CmFlowN2AShapingType_Object = MibTableColumn
cmFlowN2AShapingType = _CmFlowN2AShapingType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 46),
    _CmFlowN2AShapingType_Type()
)
cmFlowN2AShapingType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2AShapingType.setStatus("current")
_CmFlowSTagMatchRxPrio_Type = TruthValue
_CmFlowSTagMatchRxPrio_Object = MibTableColumn
cmFlowSTagMatchRxPrio = _CmFlowSTagMatchRxPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 47),
    _CmFlowSTagMatchRxPrio_Type()
)
cmFlowSTagMatchRxPrio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowSTagMatchRxPrio.setStatus("current")
_CmFlowAutoBandwidthConfigEnabled_Type = TruthValue
_CmFlowAutoBandwidthConfigEnabled_Object = MibTableColumn
cmFlowAutoBandwidthConfigEnabled = _CmFlowAutoBandwidthConfigEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 48),
    _CmFlowAutoBandwidthConfigEnabled_Type()
)
cmFlowAutoBandwidthConfigEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowAutoBandwidthConfigEnabled.setStatus("current")
_CmFlowPort1_Type = VariablePointer
_CmFlowPort1_Object = MibTableColumn
cmFlowPort1 = _CmFlowPort1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 49),
    _CmFlowPort1_Type()
)
cmFlowPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPort1.setStatus("current")
_CmFlowPort2_Type = VariablePointer
_CmFlowPort2_Object = MibTableColumn
cmFlowPort2 = _CmFlowPort2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 50),
    _CmFlowPort2_Type()
)
cmFlowPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPort2.setStatus("current")
_CmFlowPolicingControl_Type = PolicingControl
_CmFlowPolicingControl_Object = MibTableColumn
cmFlowPolicingControl = _CmFlowPolicingControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 51),
    _CmFlowPolicingControl_Type()
)
cmFlowPolicingControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPolicingControl.setStatus("current")


class _CmFlowAutoCIRPercentage_Type(Integer32):
    """Custom type cmFlowAutoCIRPercentage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CmFlowAutoCIRPercentage_Type.__name__ = "Integer32"
_CmFlowAutoCIRPercentage_Object = MibTableColumn
cmFlowAutoCIRPercentage = _CmFlowAutoCIRPercentage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 52),
    _CmFlowAutoCIRPercentage_Type()
)
cmFlowAutoCIRPercentage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowAutoCIRPercentage.setStatus("current")
_CmFlowLoopAvoidanceObject_Type = VariablePointer
_CmFlowLoopAvoidanceObject_Object = MibTableColumn
cmFlowLoopAvoidanceObject = _CmFlowLoopAvoidanceObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 53),
    _CmFlowLoopAvoidanceObject_Type()
)
cmFlowLoopAvoidanceObject.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowLoopAvoidanceObject.setStatus("current")
_CmFlowConfigType_Type = FlowConfigType
_CmFlowConfigType_Object = MibTableColumn
cmFlowConfigType = _CmFlowConfigType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 54),
    _CmFlowConfigType_Type()
)
cmFlowConfigType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowConfigType.setStatus("current")
_CmFlowN2NForwardingEnabled_Type = TruthValue
_CmFlowN2NForwardingEnabled_Object = MibTableColumn
cmFlowN2NForwardingEnabled = _CmFlowN2NForwardingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 55),
    _CmFlowN2NForwardingEnabled_Type()
)
cmFlowN2NForwardingEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowN2NForwardingEnabled.setStatus("current")
_CmFlowA2NMulticastRateLimitControl_Type = TruthValue
_CmFlowA2NMulticastRateLimitControl_Object = MibTableColumn
cmFlowA2NMulticastRateLimitControl = _CmFlowA2NMulticastRateLimitControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 56),
    _CmFlowA2NMulticastRateLimitControl_Type()
)
cmFlowA2NMulticastRateLimitControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NMulticastRateLimitControl.setStatus("current")
_CmFlowA2NMulticastRateLimitLo_Type = Unsigned32
_CmFlowA2NMulticastRateLimitLo_Object = MibTableColumn
cmFlowA2NMulticastRateLimitLo = _CmFlowA2NMulticastRateLimitLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 57),
    _CmFlowA2NMulticastRateLimitLo_Type()
)
cmFlowA2NMulticastRateLimitLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NMulticastRateLimitLo.setStatus("current")
_CmFlowA2NMulticastRateLimitHi_Type = Unsigned32
_CmFlowA2NMulticastRateLimitHi_Object = MibTableColumn
cmFlowA2NMulticastRateLimitHi = _CmFlowA2NMulticastRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 58),
    _CmFlowA2NMulticastRateLimitHi_Type()
)
cmFlowA2NMulticastRateLimitHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NMulticastRateLimitHi.setStatus("current")
_CmFlowA2NBroadcastRateLimitControl_Type = TruthValue
_CmFlowA2NBroadcastRateLimitControl_Object = MibTableColumn
cmFlowA2NBroadcastRateLimitControl = _CmFlowA2NBroadcastRateLimitControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 59),
    _CmFlowA2NBroadcastRateLimitControl_Type()
)
cmFlowA2NBroadcastRateLimitControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NBroadcastRateLimitControl.setStatus("current")
_CmFlowA2NBroadcastRateLimitLo_Type = Unsigned32
_CmFlowA2NBroadcastRateLimitLo_Object = MibTableColumn
cmFlowA2NBroadcastRateLimitLo = _CmFlowA2NBroadcastRateLimitLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 60),
    _CmFlowA2NBroadcastRateLimitLo_Type()
)
cmFlowA2NBroadcastRateLimitLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NBroadcastRateLimitLo.setStatus("current")
_CmFlowA2NBroadcastRateLimitHi_Type = Unsigned32
_CmFlowA2NBroadcastRateLimitHi_Object = MibTableColumn
cmFlowA2NBroadcastRateLimitHi = _CmFlowA2NBroadcastRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 61),
    _CmFlowA2NBroadcastRateLimitHi_Type()
)
cmFlowA2NBroadcastRateLimitHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NBroadcastRateLimitHi.setStatus("current")
_CmFlowA2NCombinedRateLimitControl_Type = TruthValue
_CmFlowA2NCombinedRateLimitControl_Object = MibTableColumn
cmFlowA2NCombinedRateLimitControl = _CmFlowA2NCombinedRateLimitControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 62),
    _CmFlowA2NCombinedRateLimitControl_Type()
)
cmFlowA2NCombinedRateLimitControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NCombinedRateLimitControl.setStatus("current")
_CmFlowA2NCombinedRateLimitLo_Type = Unsigned32
_CmFlowA2NCombinedRateLimitLo_Object = MibTableColumn
cmFlowA2NCombinedRateLimitLo = _CmFlowA2NCombinedRateLimitLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 63),
    _CmFlowA2NCombinedRateLimitLo_Type()
)
cmFlowA2NCombinedRateLimitLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NCombinedRateLimitLo.setStatus("current")
_CmFlowA2NCombinedRateLimitHi_Type = Unsigned32
_CmFlowA2NCombinedRateLimitHi_Object = MibTableColumn
cmFlowA2NCombinedRateLimitHi = _CmFlowA2NCombinedRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 64),
    _CmFlowA2NCombinedRateLimitHi_Type()
)
cmFlowA2NCombinedRateLimitHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowA2NCombinedRateLimitHi.setStatus("current")
_CmFlowRefPrioMapProfile_Type = VariablePointer
_CmFlowRefPrioMapProfile_Object = MibTableColumn
cmFlowRefPrioMapProfile = _CmFlowRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 65),
    _CmFlowRefPrioMapProfile_Type()
)
cmFlowRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowRefPrioMapProfile.setStatus("current")
_CmFlowRefEoMplsPwObject_Type = VariablePointer
_CmFlowRefEoMplsPwObject_Object = MibTableColumn
cmFlowRefEoMplsPwObject = _CmFlowRefEoMplsPwObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 66),
    _CmFlowRefEoMplsPwObject_Type()
)
cmFlowRefEoMplsPwObject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowRefEoMplsPwObject.setStatus("current")
_CmFlowRefN2APrioMapProfile_Type = VariablePointer
_CmFlowRefN2APrioMapProfile_Object = MibTableColumn
cmFlowRefN2APrioMapProfile = _CmFlowRefN2APrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 67),
    _CmFlowRefN2APrioMapProfile_Type()
)
cmFlowRefN2APrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowRefN2APrioMapProfile.setStatus("current")
_CmFlowSecureBlockingEnabled_Type = TruthValue
_CmFlowSecureBlockingEnabled_Object = MibTableColumn
cmFlowSecureBlockingEnabled = _CmFlowSecureBlockingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 68),
    _CmFlowSecureBlockingEnabled_Type()
)
cmFlowSecureBlockingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowSecureBlockingEnabled.setStatus("current")
_CmFlowRefConnectGuardFlowList_Type = DisplayString
_CmFlowRefConnectGuardFlowList_Object = MibTableColumn
cmFlowRefConnectGuardFlowList = _CmFlowRefConnectGuardFlowList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 69),
    _CmFlowRefConnectGuardFlowList_Type()
)
cmFlowRefConnectGuardFlowList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowRefConnectGuardFlowList.setStatus("current")
_CmFlowSecureStateList_Type = DisplayString
_CmFlowSecureStateList_Object = MibTableColumn
cmFlowSecureStateList = _CmFlowSecureStateList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 70),
    _CmFlowSecureStateList_Type()
)
cmFlowSecureStateList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowSecureStateList.setStatus("current")
_CmFlowIndependentA2NShaperBW_Type = TruthValue
_CmFlowIndependentA2NShaperBW_Object = MibTableColumn
cmFlowIndependentA2NShaperBW = _CmFlowIndependentA2NShaperBW_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 71),
    _CmFlowIndependentA2NShaperBW_Type()
)
cmFlowIndependentA2NShaperBW.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowIndependentA2NShaperBW.setStatus("current")
_CmFlowWfqSegmentationCOS_Type = Integer32
_CmFlowWfqSegmentationCOS_Object = MibTableColumn
cmFlowWfqSegmentationCOS = _CmFlowWfqSegmentationCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 72),
    _CmFlowWfqSegmentationCOS_Type()
)
cmFlowWfqSegmentationCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowWfqSegmentationCOS.setStatus("current")
_CmFlowWfqGroupCOS_Type = Integer32
_CmFlowWfqGroupCOS_Object = MibTableColumn
cmFlowWfqGroupCOS = _CmFlowWfqGroupCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 73),
    _CmFlowWfqGroupCOS_Type()
)
cmFlowWfqGroupCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowWfqGroupCOS.setStatus("current")
_CmFlowWfqGroupEirLo_Type = Unsigned32
_CmFlowWfqGroupEirLo_Object = MibTableColumn
cmFlowWfqGroupEirLo = _CmFlowWfqGroupEirLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 74),
    _CmFlowWfqGroupEirLo_Type()
)
cmFlowWfqGroupEirLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowWfqGroupEirLo.setStatus("current")
_CmFlowWfqGroupEirHi_Type = Unsigned32
_CmFlowWfqGroupEirHi_Object = MibTableColumn
cmFlowWfqGroupEirHi = _CmFlowWfqGroupEirHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 4, 1, 75),
    _CmFlowWfqGroupEirHi_Type()
)
cmFlowWfqGroupEirHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowWfqGroupEirHi.setStatus("current")
_CmFlowCpdTable_Object = MibTable
cmFlowCpdTable = _CmFlowCpdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5)
)
if mibBuilder.loadTexts:
    cmFlowCpdTable.setStatus("current")
_CmFlowCpdEntry_Object = MibTableRow
cmFlowCpdEntry = _CmFlowCpdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1)
)
cmFlowCpdEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowCpdIndex"),
)
if mibBuilder.loadTexts:
    cmFlowCpdEntry.setStatus("current")


class _CmFlowCpdIndex_Type(Integer32):
    """Custom type cmFlowCpdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmFlowCpdIndex_Type.__name__ = "Integer32"
_CmFlowCpdIndex_Object = MibTableColumn
cmFlowCpdIndex = _CmFlowCpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 1),
    _CmFlowCpdIndex_Type()
)
cmFlowCpdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowCpdIndex.setStatus("current")
_CmFlowCpdFilterType_Type = CmControlProtocolFilterType
_CmFlowCpdFilterType_Object = MibTableColumn
cmFlowCpdFilterType = _CmFlowCpdFilterType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 2),
    _CmFlowCpdFilterType_Type()
)
cmFlowCpdFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowCpdFilterType.setStatus("current")


class _CmFlowCpdFilterDescr_Type(DisplayString):
    """Custom type cmFlowCpdFilterDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmFlowCpdFilterDescr_Type.__name__ = "DisplayString"
_CmFlowCpdFilterDescr_Object = MibTableColumn
cmFlowCpdFilterDescr = _CmFlowCpdFilterDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 3),
    _CmFlowCpdFilterDescr_Type()
)
cmFlowCpdFilterDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowCpdFilterDescr.setStatus("current")
_CmFlowCpdDispType_Type = CmControlProtocolDispType
_CmFlowCpdDispType_Object = MibTableColumn
cmFlowCpdDispType = _CmFlowCpdDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 4),
    _CmFlowCpdDispType_Type()
)
cmFlowCpdDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdDispType.setStatus("current")
_CmFlowCpdMacAddressMatch_Type = MacAddress
_CmFlowCpdMacAddressMatch_Object = MibTableColumn
cmFlowCpdMacAddressMatch = _CmFlowCpdMacAddressMatch_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 5),
    _CmFlowCpdMacAddressMatch_Type()
)
cmFlowCpdMacAddressMatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdMacAddressMatch.setStatus("current")
_CmFlowCpdMacAddressMask_Type = MacAddress
_CmFlowCpdMacAddressMask_Object = MibTableColumn
cmFlowCpdMacAddressMask = _CmFlowCpdMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 6),
    _CmFlowCpdMacAddressMask_Type()
)
cmFlowCpdMacAddressMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdMacAddressMask.setStatus("current")


class _CmFlowCpdEthertype_Type(Integer32):
    """Custom type cmFlowCpdEthertype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmFlowCpdEthertype_Type.__name__ = "Integer32"
_CmFlowCpdEthertype_Object = MibTableColumn
cmFlowCpdEthertype = _CmFlowCpdEthertype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 7),
    _CmFlowCpdEthertype_Type()
)
cmFlowCpdEthertype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdEthertype.setStatus("current")
_CmFlowCpdEthertypeMask_Type = Integer32
_CmFlowCpdEthertypeMask_Object = MibTableColumn
cmFlowCpdEthertypeMask = _CmFlowCpdEthertypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 8),
    _CmFlowCpdEthertypeMask_Type()
)
cmFlowCpdEthertypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdEthertypeMask.setStatus("current")
_CmFlowCpdSubtype_Type = Integer32
_CmFlowCpdSubtype_Object = MibTableColumn
cmFlowCpdSubtype = _CmFlowCpdSubtype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 9),
    _CmFlowCpdSubtype_Type()
)
cmFlowCpdSubtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdSubtype.setStatus("current")
_CmFlowCpdSubtypeMask_Type = Integer32
_CmFlowCpdSubtypeMask_Object = MibTableColumn
cmFlowCpdSubtypeMask = _CmFlowCpdSubtypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 5, 1, 10),
    _CmFlowCpdSubtypeMask_Type()
)
cmFlowCpdSubtypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdSubtypeMask.setStatus("current")
_CmQosShaperTable_Object = MibTable
cmQosShaperTable = _CmQosShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6)
)
if mibBuilder.loadTexts:
    cmQosShaperTable.setStatus("current")
_CmQosShaperEntry_Object = MibTableRow
cmQosShaperEntry = _CmQosShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1)
)
cmQosShaperEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowIndex"),
    (0, "CM-FACILITY-MIB", "cmQosShaperTypeIndex"),
    (0, "CM-FACILITY-MIB", "cmQosShaperIndex"),
)
if mibBuilder.loadTexts:
    cmQosShaperEntry.setStatus("current")


class _CmQosShaperTypeIndex_Type(Integer32):
    """Custom type cmQosShaperTypeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CmQosShaperTypeIndex_Type.__name__ = "Integer32"
_CmQosShaperTypeIndex_Object = MibTableColumn
cmQosShaperTypeIndex = _CmQosShaperTypeIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 1),
    _CmQosShaperTypeIndex_Type()
)
cmQosShaperTypeIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperTypeIndex.setStatus("current")


class _CmQosShaperIndex_Type(Integer32):
    """Custom type cmQosShaperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CmQosShaperIndex_Type.__name__ = "Integer32"
_CmQosShaperIndex_Object = MibTableColumn
cmQosShaperIndex = _CmQosShaperIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 2),
    _CmQosShaperIndex_Type()
)
cmQosShaperIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperIndex.setStatus("current")
_CmQosShaperDirection_Type = TrafficDirection
_CmQosShaperDirection_Object = MibTableColumn
cmQosShaperDirection = _CmQosShaperDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 3),
    _CmQosShaperDirection_Type()
)
cmQosShaperDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperDirection.setStatus("current")
_CmQosShaperAdminState_Type = AdminState
_CmQosShaperAdminState_Object = MibTableColumn
cmQosShaperAdminState = _CmQosShaperAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 4),
    _CmQosShaperAdminState_Type()
)
cmQosShaperAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperAdminState.setStatus("current")
_CmQosShaperOperationalState_Type = OperationalState
_CmQosShaperOperationalState_Object = MibTableColumn
cmQosShaperOperationalState = _CmQosShaperOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 5),
    _CmQosShaperOperationalState_Type()
)
cmQosShaperOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperOperationalState.setStatus("current")
_CmQosShaperSecondaryState_Type = SecondaryState
_CmQosShaperSecondaryState_Object = MibTableColumn
cmQosShaperSecondaryState = _CmQosShaperSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 6),
    _CmQosShaperSecondaryState_Type()
)
cmQosShaperSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperSecondaryState.setStatus("current")
_CmQosShaperCIR_Type = Unsigned32
_CmQosShaperCIR_Object = MibTableColumn
cmQosShaperCIR = _CmQosShaperCIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 7),
    _CmQosShaperCIR_Type()
)
cmQosShaperCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperCIR.setStatus("current")
_CmQosShaperCBS_Type = Unsigned32
_CmQosShaperCBS_Object = MibTableColumn
cmQosShaperCBS = _CmQosShaperCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 8),
    _CmQosShaperCBS_Type()
)
cmQosShaperCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperCBS.setStatus("current")
_CmQosShaperEIR_Type = Unsigned32
_CmQosShaperEIR_Object = MibTableColumn
cmQosShaperEIR = _CmQosShaperEIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 9),
    _CmQosShaperEIR_Type()
)
cmQosShaperEIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperEIR.setStatus("current")
_CmQosShaperEBS_Type = Unsigned32
_CmQosShaperEBS_Object = MibTableColumn
cmQosShaperEBS = _CmQosShaperEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 10),
    _CmQosShaperEBS_Type()
)
cmQosShaperEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperEBS.setStatus("current")
_CmQosShaperBufferSize_Type = Unsigned32
_CmQosShaperBufferSize_Object = MibTableColumn
cmQosShaperBufferSize = _CmQosShaperBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 11),
    _CmQosShaperBufferSize_Type()
)
cmQosShaperBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperBufferSize.setStatus("current")
_CmQosShaperStorageType_Type = StorageType
_CmQosShaperStorageType_Object = MibTableColumn
cmQosShaperStorageType = _CmQosShaperStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 12),
    _CmQosShaperStorageType_Type()
)
cmQosShaperStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperStorageType.setStatus("current")
_CmQosShaperRowStatus_Type = RowStatus
_CmQosShaperRowStatus_Object = MibTableColumn
cmQosShaperRowStatus = _CmQosShaperRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 13),
    _CmQosShaperRowStatus_Type()
)
cmQosShaperRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperRowStatus.setStatus("current")


class _CmQosShaperCOS_Type(Integer32):
    """Custom type cmQosShaperCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmQosShaperCOS_Type.__name__ = "Integer32"
_CmQosShaperCOS_Object = MibTableColumn
cmQosShaperCOS = _CmQosShaperCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 14),
    _CmQosShaperCOS_Type()
)
cmQosShaperCOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperCOS.setStatus("current")
_CmQosShaperCIRHi_Type = Unsigned32
_CmQosShaperCIRHi_Object = MibTableColumn
cmQosShaperCIRHi = _CmQosShaperCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 15),
    _CmQosShaperCIRHi_Type()
)
cmQosShaperCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperCIRHi.setStatus("current")
_CmQosShaperEIRHi_Type = Unsigned32
_CmQosShaperEIRHi_Object = MibTableColumn
cmQosShaperEIRHi = _CmQosShaperEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 16),
    _CmQosShaperEIRHi_Type()
)
cmQosShaperEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperEIRHi.setStatus("current")
_CmQosShaperSoamCIRLo_Type = Unsigned32
_CmQosShaperSoamCIRLo_Object = MibTableColumn
cmQosShaperSoamCIRLo = _CmQosShaperSoamCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 17),
    _CmQosShaperSoamCIRLo_Type()
)
cmQosShaperSoamCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperSoamCIRLo.setStatus("current")
_CmQosShaperSoamCIRHi_Type = Unsigned32
_CmQosShaperSoamCIRHi_Object = MibTableColumn
cmQosShaperSoamCIRHi = _CmQosShaperSoamCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 18),
    _CmQosShaperSoamCIRHi_Type()
)
cmQosShaperSoamCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperSoamCIRHi.setStatus("current")
_CmQosShaperSoamEIRLo_Type = Unsigned32
_CmQosShaperSoamEIRLo_Object = MibTableColumn
cmQosShaperSoamEIRLo = _CmQosShaperSoamEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 19),
    _CmQosShaperSoamEIRLo_Type()
)
cmQosShaperSoamEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperSoamEIRLo.setStatus("current")
_CmQosShaperSoamEIRHi_Type = Unsigned32
_CmQosShaperSoamEIRHi_Object = MibTableColumn
cmQosShaperSoamEIRHi = _CmQosShaperSoamEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 20),
    _CmQosShaperSoamEIRHi_Type()
)
cmQosShaperSoamEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperSoamEIRHi.setStatus("current")
_CmQosShaperWredGreenMinQueueThreshold_Type = Unsigned32
_CmQosShaperWredGreenMinQueueThreshold_Object = MibTableColumn
cmQosShaperWredGreenMinQueueThreshold = _CmQosShaperWredGreenMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 21),
    _CmQosShaperWredGreenMinQueueThreshold_Type()
)
cmQosShaperWredGreenMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredGreenMinQueueThreshold.setStatus("current")
_CmQosShaperWredGreenMaxQueueThreshold_Type = Unsigned32
_CmQosShaperWredGreenMaxQueueThreshold_Object = MibTableColumn
cmQosShaperWredGreenMaxQueueThreshold = _CmQosShaperWredGreenMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 22),
    _CmQosShaperWredGreenMaxQueueThreshold_Type()
)
cmQosShaperWredGreenMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredGreenMaxQueueThreshold.setStatus("current")
_CmQosShaperWredGreenDropProbability_Type = Unsigned32
_CmQosShaperWredGreenDropProbability_Object = MibTableColumn
cmQosShaperWredGreenDropProbability = _CmQosShaperWredGreenDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 23),
    _CmQosShaperWredGreenDropProbability_Type()
)
cmQosShaperWredGreenDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredGreenDropProbability.setStatus("current")
_CmQosShaperWredYellowMinQueueThreshold_Type = Unsigned32
_CmQosShaperWredYellowMinQueueThreshold_Object = MibTableColumn
cmQosShaperWredYellowMinQueueThreshold = _CmQosShaperWredYellowMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 24),
    _CmQosShaperWredYellowMinQueueThreshold_Type()
)
cmQosShaperWredYellowMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredYellowMinQueueThreshold.setStatus("current")
_CmQosShaperWredYellowMaxQueueThreshold_Type = Unsigned32
_CmQosShaperWredYellowMaxQueueThreshold_Object = MibTableColumn
cmQosShaperWredYellowMaxQueueThreshold = _CmQosShaperWredYellowMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 25),
    _CmQosShaperWredYellowMaxQueueThreshold_Type()
)
cmQosShaperWredYellowMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredYellowMaxQueueThreshold.setStatus("current")
_CmQosShaperWredYellowDropProbability_Type = Unsigned32
_CmQosShaperWredYellowDropProbability_Object = MibTableColumn
cmQosShaperWredYellowDropProbability = _CmQosShaperWredYellowDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 26),
    _CmQosShaperWredYellowDropProbability_Type()
)
cmQosShaperWredYellowDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperWredYellowDropProbability.setStatus("current")
_CmQosShaperAvgFrameSizeBeforeFragment_Type = Integer32
_CmQosShaperAvgFrameSizeBeforeFragment_Object = MibTableColumn
cmQosShaperAvgFrameSizeBeforeFragment = _CmQosShaperAvgFrameSizeBeforeFragment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 27),
    _CmQosShaperAvgFrameSizeBeforeFragment_Type()
)
cmQosShaperAvgFrameSizeBeforeFragment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperAvgFrameSizeBeforeFragment.setStatus("current")
_CmQosShaperWfqWeight_Type = Integer32
_CmQosShaperWfqWeight_Object = MibTableColumn
cmQosShaperWfqWeight = _CmQosShaperWfqWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 6, 1, 28),
    _CmQosShaperWfqWeight_Type()
)
cmQosShaperWfqWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperWfqWeight.setStatus("current")
_CmEthernetNetPortTable_Object = MibTable
cmEthernetNetPortTable = _CmEthernetNetPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortTable.setStatus("current")
_CmEthernetNetPortEntry_Object = MibTableRow
cmEthernetNetPortEntry = _CmEthernetNetPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1)
)
cmEthernetNetPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetNetPortEntry.setStatus("current")


class _CmEthernetNetPortIndex_Type(Integer32):
    """Custom type cmEthernetNetPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetNetPortIndex_Type.__name__ = "Integer32"
_CmEthernetNetPortIndex_Object = MibTableColumn
cmEthernetNetPortIndex = _CmEthernetNetPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 1),
    _CmEthernetNetPortIndex_Type()
)
cmEthernetNetPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortIndex.setStatus("current")
_CmEthernetNetPortIfIndex_Type = InterfaceIndex
_CmEthernetNetPortIfIndex_Object = MibTableColumn
cmEthernetNetPortIfIndex = _CmEthernetNetPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 2),
    _CmEthernetNetPortIfIndex_Type()
)
cmEthernetNetPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortIfIndex.setStatus("current")
_CmEthernetNetPortEntityIndex_Type = PhysicalIndex
_CmEthernetNetPortEntityIndex_Object = MibTableColumn
cmEthernetNetPortEntityIndex = _CmEthernetNetPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 3),
    _CmEthernetNetPortEntityIndex_Type()
)
cmEthernetNetPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortEntityIndex.setStatus("current")
_CmEthernetNetPortAdminState_Type = AdminState
_CmEthernetNetPortAdminState_Object = MibTableColumn
cmEthernetNetPortAdminState = _CmEthernetNetPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 4),
    _CmEthernetNetPortAdminState_Type()
)
cmEthernetNetPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortAdminState.setStatus("current")
_CmEthernetNetPortOperationalState_Type = OperationalState
_CmEthernetNetPortOperationalState_Object = MibTableColumn
cmEthernetNetPortOperationalState = _CmEthernetNetPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 5),
    _CmEthernetNetPortOperationalState_Type()
)
cmEthernetNetPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOperationalState.setStatus("current")
_CmEthernetNetPortSecondaryState_Type = SecondaryState
_CmEthernetNetPortSecondaryState_Object = MibTableColumn
cmEthernetNetPortSecondaryState = _CmEthernetNetPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 6),
    _CmEthernetNetPortSecondaryState_Type()
)
cmEthernetNetPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSecondaryState.setStatus("current")
_CmEthernetNetPortMTU_Type = Integer32
_CmEthernetNetPortMTU_Object = MibTableColumn
cmEthernetNetPortMTU = _CmEthernetNetPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 7),
    _CmEthernetNetPortMTU_Type()
)
cmEthernetNetPortMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortMTU.setStatus("current")
_CmEthernetNetPortMediaType_Type = EthernetMediaType
_CmEthernetNetPortMediaType_Object = MibTableColumn
cmEthernetNetPortMediaType = _CmEthernetNetPortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 8),
    _CmEthernetNetPortMediaType_Type()
)
cmEthernetNetPortMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortMediaType.setStatus("current")
_CmEthernetNetPortConfigSpeed_Type = EthernetPortSpeed
_CmEthernetNetPortConfigSpeed_Object = MibTableColumn
cmEthernetNetPortConfigSpeed = _CmEthernetNetPortConfigSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 9),
    _CmEthernetNetPortConfigSpeed_Type()
)
cmEthernetNetPortConfigSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortConfigSpeed.setStatus("current")
_CmEthernetNetPortNegotiatedSpeed_Type = EthernetPortSpeed
_CmEthernetNetPortNegotiatedSpeed_Object = MibTableColumn
cmEthernetNetPortNegotiatedSpeed = _CmEthernetNetPortNegotiatedSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 10),
    _CmEthernetNetPortNegotiatedSpeed_Type()
)
cmEthernetNetPortNegotiatedSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortNegotiatedSpeed.setStatus("current")
_CmEthernetNetPortMDIXType_Type = CmEthernetMDIXType
_CmEthernetNetPortMDIXType_Object = MibTableColumn
cmEthernetNetPortMDIXType = _CmEthernetNetPortMDIXType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 11),
    _CmEthernetNetPortMDIXType_Type()
)
cmEthernetNetPortMDIXType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortMDIXType.setStatus("current")
_CmEthernetNetPortJumboFramesEnabled_Type = TruthValue
_CmEthernetNetPortJumboFramesEnabled_Object = MibTableColumn
cmEthernetNetPortJumboFramesEnabled = _CmEthernetNetPortJumboFramesEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 12),
    _CmEthernetNetPortJumboFramesEnabled_Type()
)
cmEthernetNetPortJumboFramesEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortJumboFramesEnabled.setStatus("current")


class _CmEthernetNetPortSfpVendorName_Type(DisplayString):
    """Custom type cmEthernetNetPortSfpVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetNetPortSfpVendorName_Type.__name__ = "DisplayString"
_CmEthernetNetPortSfpVendorName_Object = MibTableColumn
cmEthernetNetPortSfpVendorName = _CmEthernetNetPortSfpVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 13),
    _CmEthernetNetPortSfpVendorName_Type()
)
cmEthernetNetPortSfpVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpVendorName.setStatus("current")


class _CmEthernetNetPortSfpPartNumber_Type(DisplayString):
    """Custom type cmEthernetNetPortSfpPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetNetPortSfpPartNumber_Type.__name__ = "DisplayString"
_CmEthernetNetPortSfpPartNumber_Object = MibTableColumn
cmEthernetNetPortSfpPartNumber = _CmEthernetNetPortSfpPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 14),
    _CmEthernetNetPortSfpPartNumber_Type()
)
cmEthernetNetPortSfpPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpPartNumber.setStatus("current")


class _CmEthernetNetPortSfpSerialNumber_Type(DisplayString):
    """Custom type cmEthernetNetPortSfpSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetNetPortSfpSerialNumber_Type.__name__ = "DisplayString"
_CmEthernetNetPortSfpSerialNumber_Object = MibTableColumn
cmEthernetNetPortSfpSerialNumber = _CmEthernetNetPortSfpSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 15),
    _CmEthernetNetPortSfpSerialNumber_Type()
)
cmEthernetNetPortSfpSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpSerialNumber.setStatus("current")
_CmEthernetNetPortSfpDateOfManufacture_Type = DateAndTime
_CmEthernetNetPortSfpDateOfManufacture_Object = MibTableColumn
cmEthernetNetPortSfpDateOfManufacture = _CmEthernetNetPortSfpDateOfManufacture_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 16),
    _CmEthernetNetPortSfpDateOfManufacture_Type()
)
cmEthernetNetPortSfpDateOfManufacture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpDateOfManufacture.setStatus("current")
_CmEthernetNetPortSfpConnectorValue_Type = SfpConnectorValue
_CmEthernetNetPortSfpConnectorValue_Object = MibTableColumn
cmEthernetNetPortSfpConnectorValue = _CmEthernetNetPortSfpConnectorValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 17),
    _CmEthernetNetPortSfpConnectorValue_Type()
)
cmEthernetNetPortSfpConnectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpConnectorValue.setStatus("current")
_CmEthernetNetPortInitiateDiag_Type = CmEthernetDiagAction
_CmEthernetNetPortInitiateDiag_Object = MibTableColumn
cmEthernetNetPortInitiateDiag = _CmEthernetNetPortInitiateDiag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 18),
    _CmEthernetNetPortInitiateDiag_Type()
)
cmEthernetNetPortInitiateDiag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInitiateDiag.setStatus("current")
_CmEthernetNetPortDiagnosePair1Cond_Type = CmDiagCableCondType
_CmEthernetNetPortDiagnosePair1Cond_Object = MibTableColumn
cmEthernetNetPortDiagnosePair1Cond = _CmEthernetNetPortDiagnosePair1Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 19),
    _CmEthernetNetPortDiagnosePair1Cond_Type()
)
cmEthernetNetPortDiagnosePair1Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnosePair1Cond.setStatus("current")
_CmEthernetNetPortDiagnosePair2Cond_Type = CmDiagCableCondType
_CmEthernetNetPortDiagnosePair2Cond_Object = MibTableColumn
cmEthernetNetPortDiagnosePair2Cond = _CmEthernetNetPortDiagnosePair2Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 20),
    _CmEthernetNetPortDiagnosePair2Cond_Type()
)
cmEthernetNetPortDiagnosePair2Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnosePair2Cond.setStatus("current")
_CmEthernetNetPortDiagnosePair3Cond_Type = CmDiagCableCondType
_CmEthernetNetPortDiagnosePair3Cond_Object = MibTableColumn
cmEthernetNetPortDiagnosePair3Cond = _CmEthernetNetPortDiagnosePair3Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 21),
    _CmEthernetNetPortDiagnosePair3Cond_Type()
)
cmEthernetNetPortDiagnosePair3Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnosePair3Cond.setStatus("current")
_CmEthernetNetPortDiagnosePair4Cond_Type = CmDiagCableCondType
_CmEthernetNetPortDiagnosePair4Cond_Object = MibTableColumn
cmEthernetNetPortDiagnosePair4Cond = _CmEthernetNetPortDiagnosePair4Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 22),
    _CmEthernetNetPortDiagnosePair4Cond_Type()
)
cmEthernetNetPortDiagnosePair4Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnosePair4Cond.setStatus("current")
_CmEthernetNetPortDiagnoseAutoNegCond_Type = CmDiagAutoNegCondType
_CmEthernetNetPortDiagnoseAutoNegCond_Object = MibTableColumn
cmEthernetNetPortDiagnoseAutoNegCond = _CmEthernetNetPortDiagnoseAutoNegCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 23),
    _CmEthernetNetPortDiagnoseAutoNegCond_Type()
)
cmEthernetNetPortDiagnoseAutoNegCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseAutoNegCond.setStatus("current")
_CmEthernetNetPortDiagnoseLpbkCond_Type = CmDiagLpbkCondType
_CmEthernetNetPortDiagnoseLpbkCond_Object = MibTableColumn
cmEthernetNetPortDiagnoseLpbkCond = _CmEthernetNetPortDiagnoseLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 24),
    _CmEthernetNetPortDiagnoseLpbkCond_Type()
)
cmEthernetNetPortDiagnoseLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseLpbkCond.setStatus("current")
_CmEthernetNetPortDiagnoseEfmLpbkCond_Type = CmDiagEfmOamLpbkCondType
_CmEthernetNetPortDiagnoseEfmLpbkCond_Object = MibTableColumn
cmEthernetNetPortDiagnoseEfmLpbkCond = _CmEthernetNetPortDiagnoseEfmLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 25),
    _CmEthernetNetPortDiagnoseEfmLpbkCond_Type()
)
cmEthernetNetPortDiagnoseEfmLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseEfmLpbkCond.setStatus("current")


class _CmEthernetNetPortDiagnoseResult_Type(DisplayString):
    """Custom type cmEthernetNetPortDiagnoseResult based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetNetPortDiagnoseResult_Type.__name__ = "DisplayString"
_CmEthernetNetPortDiagnoseResult_Object = MibTableColumn
cmEthernetNetPortDiagnoseResult = _CmEthernetNetPortDiagnoseResult_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 26),
    _CmEthernetNetPortDiagnoseResult_Type()
)
cmEthernetNetPortDiagnoseResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseResult.setStatus("current")
_CmEthernetNetPortDiagnoseTestStatus_Type = CmDiagTestStatus
_CmEthernetNetPortDiagnoseTestStatus_Object = MibTableColumn
cmEthernetNetPortDiagnoseTestStatus = _CmEthernetNetPortDiagnoseTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 27),
    _CmEthernetNetPortDiagnoseTestStatus_Type()
)
cmEthernetNetPortDiagnoseTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseTestStatus.setStatus("current")
_CmEthernetNetPortDiagnoseTestTime_Type = DateAndTime
_CmEthernetNetPortDiagnoseTestTime_Object = MibTableColumn
cmEthernetNetPortDiagnoseTestTime = _CmEthernetNetPortDiagnoseTestTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 28),
    _CmEthernetNetPortDiagnoseTestTime_Type()
)
cmEthernetNetPortDiagnoseTestTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnoseTestTime.setStatus("current")
_CmEthernetNetPortLoopbackConfig_Type = CmLoopbackType
_CmEthernetNetPortLoopbackConfig_Object = MibTableColumn
cmEthernetNetPortLoopbackConfig = _CmEthernetNetPortLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 29),
    _CmEthernetNetPortLoopbackConfig_Type()
)
cmEthernetNetPortLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackConfig.setStatus("current")
_CmEthernetNetPortLoopbackStatus_Type = CmLoopbackType
_CmEthernetNetPortLoopbackStatus_Object = MibTableColumn
cmEthernetNetPortLoopbackStatus = _CmEthernetNetPortLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 30),
    _CmEthernetNetPortLoopbackStatus_Type()
)
cmEthernetNetPortLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackStatus.setStatus("current")


class _CmEthernetNetPortLoopbackTime_Type(Integer32):
    """Custom type cmEthernetNetPortLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_CmEthernetNetPortLoopbackTime_Type.__name__ = "Integer32"
_CmEthernetNetPortLoopbackTime_Object = MibTableColumn
cmEthernetNetPortLoopbackTime = _CmEthernetNetPortLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 31),
    _CmEthernetNetPortLoopbackTime_Type()
)
cmEthernetNetPortLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackTime.setStatus("current")
_CmEthernetNetPortLoopbackSwapSADA_Type = CmSwapSADAType
_CmEthernetNetPortLoopbackSwapSADA_Object = MibTableColumn
cmEthernetNetPortLoopbackSwapSADA = _CmEthernetNetPortLoopbackSwapSADA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 32),
    _CmEthernetNetPortLoopbackSwapSADA_Type()
)
cmEthernetNetPortLoopbackSwapSADA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackSwapSADA.setStatus("current")


class _CmEthernetNetPortOuterVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetNetPortOuterVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetNetPortOuterVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetNetPortOuterVlanLoopbackMask_Object = MibTableColumn
cmEthernetNetPortOuterVlanLoopbackMask = _CmEthernetNetPortOuterVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 33),
    _CmEthernetNetPortOuterVlanLoopbackMask_Type()
)
cmEthernetNetPortOuterVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterVlanLoopbackMask.setStatus("current")


class _CmEthernetNetPortOuterVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetNetPortOuterVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortOuterVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetNetPortOuterVlanLoopback1_Object = MibTableColumn
cmEthernetNetPortOuterVlanLoopback1 = _CmEthernetNetPortOuterVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 34),
    _CmEthernetNetPortOuterVlanLoopback1_Type()
)
cmEthernetNetPortOuterVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterVlanLoopback1.setStatus("current")


class _CmEthernetNetPortOuterVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetNetPortOuterVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortOuterVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetNetPortOuterVlanLoopback2_Object = MibTableColumn
cmEthernetNetPortOuterVlanLoopback2 = _CmEthernetNetPortOuterVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 35),
    _CmEthernetNetPortOuterVlanLoopback2_Type()
)
cmEthernetNetPortOuterVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterVlanLoopback2.setStatus("current")


class _CmEthernetNetPortOuterVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetNetPortOuterVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortOuterVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetNetPortOuterVlanLoopback3_Object = MibTableColumn
cmEthernetNetPortOuterVlanLoopback3 = _CmEthernetNetPortOuterVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 36),
    _CmEthernetNetPortOuterVlanLoopback3_Type()
)
cmEthernetNetPortOuterVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterVlanLoopback3.setStatus("current")


class _CmEthernetNetPortInnerVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetNetPortInnerVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetNetPortInnerVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetNetPortInnerVlanLoopbackMask_Object = MibTableColumn
cmEthernetNetPortInnerVlanLoopbackMask = _CmEthernetNetPortInnerVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 37),
    _CmEthernetNetPortInnerVlanLoopbackMask_Type()
)
cmEthernetNetPortInnerVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInnerVlanLoopbackMask.setStatus("current")


class _CmEthernetNetPortInnerVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetNetPortInnerVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortInnerVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetNetPortInnerVlanLoopback1_Object = MibTableColumn
cmEthernetNetPortInnerVlanLoopback1 = _CmEthernetNetPortInnerVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 38),
    _CmEthernetNetPortInnerVlanLoopback1_Type()
)
cmEthernetNetPortInnerVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInnerVlanLoopback1.setStatus("current")


class _CmEthernetNetPortInnerVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetNetPortInnerVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortInnerVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetNetPortInnerVlanLoopback2_Object = MibTableColumn
cmEthernetNetPortInnerVlanLoopback2 = _CmEthernetNetPortInnerVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 39),
    _CmEthernetNetPortInnerVlanLoopback2_Type()
)
cmEthernetNetPortInnerVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInnerVlanLoopback2.setStatus("current")


class _CmEthernetNetPortInnerVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetNetPortInnerVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetNetPortInnerVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetNetPortInnerVlanLoopback3_Object = MibTableColumn
cmEthernetNetPortInnerVlanLoopback3 = _CmEthernetNetPortInnerVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 40),
    _CmEthernetNetPortInnerVlanLoopback3_Type()
)
cmEthernetNetPortInnerVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInnerVlanLoopback3.setStatus("current")
_CmEthernetNetPortLinkLossFwdEnabled_Type = TruthValue
_CmEthernetNetPortLinkLossFwdEnabled_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdEnabled = _CmEthernetNetPortLinkLossFwdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 41),
    _CmEthernetNetPortLinkLossFwdEnabled_Type()
)
cmEthernetNetPortLinkLossFwdEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdEnabled.setStatus("current")
_CmEthernetNetPortLinkLossFwdSignalType_Type = CmLinkLossFwdSignalType
_CmEthernetNetPortLinkLossFwdSignalType_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdSignalType = _CmEthernetNetPortLinkLossFwdSignalType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 42),
    _CmEthernetNetPortLinkLossFwdSignalType_Type()
)
cmEthernetNetPortLinkLossFwdSignalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdSignalType.setStatus("deprecated")
_CmEthernetNetPortLinkLossFwdTriggerTypes_Type = CmLinkLossFwdTriggerTypes
_CmEthernetNetPortLinkLossFwdTriggerTypes_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdTriggerTypes = _CmEthernetNetPortLinkLossFwdTriggerTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 43),
    _CmEthernetNetPortLinkLossFwdTriggerTypes_Type()
)
cmEthernetNetPortLinkLossFwdTriggerTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdTriggerTypes.setStatus("current")
_CmEthernetNetPortLinkLossFwdDelay_Type = Integer32
_CmEthernetNetPortLinkLossFwdDelay_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdDelay = _CmEthernetNetPortLinkLossFwdDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 44),
    _CmEthernetNetPortLinkLossFwdDelay_Type()
)
cmEthernetNetPortLinkLossFwdDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdDelay.setStatus("current")
_CmEthernetNetPortLinkLossFwdActive_Type = TruthValue
_CmEthernetNetPortLinkLossFwdActive_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdActive = _CmEthernetNetPortLinkLossFwdActive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 45),
    _CmEthernetNetPortLinkLossFwdActive_Type()
)
cmEthernetNetPortLinkLossFwdActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdActive.setStatus("current")
_CmEthernetNetPortLinkLossFwdPartnerEnabled_Type = TruthValue
_CmEthernetNetPortLinkLossFwdPartnerEnabled_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdPartnerEnabled = _CmEthernetNetPortLinkLossFwdPartnerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 46),
    _CmEthernetNetPortLinkLossFwdPartnerEnabled_Type()
)
cmEthernetNetPortLinkLossFwdPartnerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdPartnerEnabled.setStatus("current")
_CmEthernetNetPortLinkLossFwdLocalLinkId_Type = Integer32
_CmEthernetNetPortLinkLossFwdLocalLinkId_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdLocalLinkId = _CmEthernetNetPortLinkLossFwdLocalLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 47),
    _CmEthernetNetPortLinkLossFwdLocalLinkId_Type()
)
cmEthernetNetPortLinkLossFwdLocalLinkId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdLocalLinkId.setStatus("current")
_CmEthernetNetPortLinkLossFwdRemoteLinkIds_Type = CmRemoteLinkIds
_CmEthernetNetPortLinkLossFwdRemoteLinkIds_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdRemoteLinkIds = _CmEthernetNetPortLinkLossFwdRemoteLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 48),
    _CmEthernetNetPortLinkLossFwdRemoteLinkIds_Type()
)
cmEthernetNetPortLinkLossFwdRemoteLinkIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdRemoteLinkIds.setStatus("current")
_CmEthernetNetPortOamId_Type = Integer32
_CmEthernetNetPortOamId_Object = MibTableColumn
cmEthernetNetPortOamId = _CmEthernetNetPortOamId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 49),
    _CmEthernetNetPortOamId_Type()
)
cmEthernetNetPortOamId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamId.setStatus("current")
_CmEthernetNetPortOamAdminDisposition_Type = CmControlProtocolDispType
_CmEthernetNetPortOamAdminDisposition_Object = MibTableColumn
cmEthernetNetPortOamAdminDisposition = _CmEthernetNetPortOamAdminDisposition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 50),
    _CmEthernetNetPortOamAdminDisposition_Type()
)
cmEthernetNetPortOamAdminDisposition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamAdminDisposition.setStatus("deprecated")
_CmEthernetNetPortOamDiscoveryState_Type = CmOamDiscoveryState
_CmEthernetNetPortOamDiscoveryState_Object = MibTableColumn
cmEthernetNetPortOamDiscoveryState = _CmEthernetNetPortOamDiscoveryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 51),
    _CmEthernetNetPortOamDiscoveryState_Type()
)
cmEthernetNetPortOamDiscoveryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamDiscoveryState.setStatus("current")
_CmEthernetNetPortOamLocalVarRtrvsEnabled_Type = TruthValue
_CmEthernetNetPortOamLocalVarRtrvsEnabled_Object = MibTableColumn
cmEthernetNetPortOamLocalVarRtrvsEnabled = _CmEthernetNetPortOamLocalVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 52),
    _CmEthernetNetPortOamLocalVarRtrvsEnabled_Type()
)
cmEthernetNetPortOamLocalVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalVarRtrvsEnabled.setStatus("current")
_CmEthernetNetPortOamLocalLinkEventsEnabled_Type = TruthValue
_CmEthernetNetPortOamLocalLinkEventsEnabled_Object = MibTableColumn
cmEthernetNetPortOamLocalLinkEventsEnabled = _CmEthernetNetPortOamLocalLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 53),
    _CmEthernetNetPortOamLocalLinkEventsEnabled_Type()
)
cmEthernetNetPortOamLocalLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalLinkEventsEnabled.setStatus("current")
_CmEthernetNetPortOamLocalOamLoopbacksSupported_Type = TruthValue
_CmEthernetNetPortOamLocalOamLoopbacksSupported_Object = MibTableColumn
cmEthernetNetPortOamLocalOamLoopbacksSupported = _CmEthernetNetPortOamLocalOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 54),
    _CmEthernetNetPortOamLocalOamLoopbacksSupported_Type()
)
cmEthernetNetPortOamLocalOamLoopbacksSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalOamLoopbacksSupported.setStatus("current")
_CmEthernetNetPortOamLocalUnidirSupportEnabled_Type = TruthValue
_CmEthernetNetPortOamLocalUnidirSupportEnabled_Object = MibTableColumn
cmEthernetNetPortOamLocalUnidirSupportEnabled = _CmEthernetNetPortOamLocalUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 55),
    _CmEthernetNetPortOamLocalUnidirSupportEnabled_Type()
)
cmEthernetNetPortOamLocalUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalUnidirSupportEnabled.setStatus("current")
_CmEthernetNetPortOamLocalMaxPDUSize_Type = Integer32
_CmEthernetNetPortOamLocalMaxPDUSize_Object = MibTableColumn
cmEthernetNetPortOamLocalMaxPDUSize = _CmEthernetNetPortOamLocalMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 56),
    _CmEthernetNetPortOamLocalMaxPDUSize_Type()
)
cmEthernetNetPortOamLocalMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalMaxPDUSize.setStatus("current")
_CmEthernetNetPortOamLocalMode_Type = CmOamMode
_CmEthernetNetPortOamLocalMode_Object = MibTableColumn
cmEthernetNetPortOamLocalMode = _CmEthernetNetPortOamLocalMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 57),
    _CmEthernetNetPortOamLocalMode_Type()
)
cmEthernetNetPortOamLocalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamLocalMode.setStatus("current")
_CmEthernetNetPortOamRemoteMacAddress_Type = MacAddress
_CmEthernetNetPortOamRemoteMacAddress_Object = MibTableColumn
cmEthernetNetPortOamRemoteMacAddress = _CmEthernetNetPortOamRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 58),
    _CmEthernetNetPortOamRemoteMacAddress_Type()
)
cmEthernetNetPortOamRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteMacAddress.setStatus("current")
_CmEthernetNetPortOamRemoteVarRtrvsEnabled_Type = TruthValue
_CmEthernetNetPortOamRemoteVarRtrvsEnabled_Object = MibTableColumn
cmEthernetNetPortOamRemoteVarRtrvsEnabled = _CmEthernetNetPortOamRemoteVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 59),
    _CmEthernetNetPortOamRemoteVarRtrvsEnabled_Type()
)
cmEthernetNetPortOamRemoteVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteVarRtrvsEnabled.setStatus("current")
_CmEthernetNetPortOamRemoteLinkEventsEnabled_Type = TruthValue
_CmEthernetNetPortOamRemoteLinkEventsEnabled_Object = MibTableColumn
cmEthernetNetPortOamRemoteLinkEventsEnabled = _CmEthernetNetPortOamRemoteLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 60),
    _CmEthernetNetPortOamRemoteLinkEventsEnabled_Type()
)
cmEthernetNetPortOamRemoteLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteLinkEventsEnabled.setStatus("current")
_CmEthernetNetPortOamRemoteOamLoopbacksSupported_Type = TruthValue
_CmEthernetNetPortOamRemoteOamLoopbacksSupported_Object = MibTableColumn
cmEthernetNetPortOamRemoteOamLoopbacksSupported = _CmEthernetNetPortOamRemoteOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 61),
    _CmEthernetNetPortOamRemoteOamLoopbacksSupported_Type()
)
cmEthernetNetPortOamRemoteOamLoopbacksSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteOamLoopbacksSupported.setStatus("current")
_CmEthernetNetPortOamRemoteUnidirSupportEnabled_Type = TruthValue
_CmEthernetNetPortOamRemoteUnidirSupportEnabled_Object = MibTableColumn
cmEthernetNetPortOamRemoteUnidirSupportEnabled = _CmEthernetNetPortOamRemoteUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 62),
    _CmEthernetNetPortOamRemoteUnidirSupportEnabled_Type()
)
cmEthernetNetPortOamRemoteUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteUnidirSupportEnabled.setStatus("current")
_CmEthernetNetPortOamRemoteMaxPDUSize_Type = Integer32
_CmEthernetNetPortOamRemoteMaxPDUSize_Object = MibTableColumn
cmEthernetNetPortOamRemoteMaxPDUSize = _CmEthernetNetPortOamRemoteMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 63),
    _CmEthernetNetPortOamRemoteMaxPDUSize_Type()
)
cmEthernetNetPortOamRemoteMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteMaxPDUSize.setStatus("current")
_CmEthernetNetPortOamRemoteMode_Type = CmOamMode
_CmEthernetNetPortOamRemoteMode_Object = MibTableColumn
cmEthernetNetPortOamRemoteMode = _CmEthernetNetPortOamRemoteMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 64),
    _CmEthernetNetPortOamRemoteMode_Type()
)
cmEthernetNetPortOamRemoteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamRemoteMode.setStatus("current")
_CmEthernetNetPortRxPauseDisposition_Type = CmControlProtocolDispType
_CmEthernetNetPortRxPauseDisposition_Object = MibTableColumn
cmEthernetNetPortRxPauseDisposition = _CmEthernetNetPortRxPauseDisposition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 65),
    _CmEthernetNetPortRxPauseDisposition_Type()
)
cmEthernetNetPortRxPauseDisposition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortRxPauseDisposition.setStatus("current")
_CmEthernetNetPortTxPauseEnabled_Type = TruthValue
_CmEthernetNetPortTxPauseEnabled_Object = MibTableColumn
cmEthernetNetPortTxPauseEnabled = _CmEthernetNetPortTxPauseEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 66),
    _CmEthernetNetPortTxPauseEnabled_Type()
)
cmEthernetNetPortTxPauseEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortTxPauseEnabled.setStatus("current")
_CmEthernetNetPortAfpType_Type = CmAfpType
_CmEthernetNetPortAfpType_Object = MibTableColumn
cmEthernetNetPortAfpType = _CmEthernetNetPortAfpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 67),
    _CmEthernetNetPortAfpType_Type()
)
cmEthernetNetPortAfpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortAfpType.setStatus("current")
_CmEthernetNetPortMDIXStatus_Type = CmEthernetMDIXType
_CmEthernetNetPortMDIXStatus_Object = MibTableColumn
cmEthernetNetPortMDIXStatus = _CmEthernetNetPortMDIXStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 68),
    _CmEthernetNetPortMDIXStatus_Type()
)
cmEthernetNetPortMDIXStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortMDIXStatus.setStatus("current")
_CmEthernetNetPortSfpReach_Type = Integer32
_CmEthernetNetPortSfpReach_Object = MibTableColumn
cmEthernetNetPortSfpReach = _CmEthernetNetPortSfpReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 69),
    _CmEthernetNetPortSfpReach_Type()
)
cmEthernetNetPortSfpReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpReach.setStatus("current")
_CmEthernetNetPortSfpLaserWaveLength_Type = Integer32
_CmEthernetNetPortSfpLaserWaveLength_Object = MibTableColumn
cmEthernetNetPortSfpLaserWaveLength = _CmEthernetNetPortSfpLaserWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 70),
    _CmEthernetNetPortSfpLaserWaveLength_Type()
)
cmEthernetNetPortSfpLaserWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpLaserWaveLength.setStatus("current")
_CmEthernetNetPortSfpMediaType_Type = SfpMediaType
_CmEthernetNetPortSfpMediaType_Object = MibTableColumn
cmEthernetNetPortSfpMediaType = _CmEthernetNetPortSfpMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 71),
    _CmEthernetNetPortSfpMediaType_Type()
)
cmEthernetNetPortSfpMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpMediaType.setStatus("current")
_CmEthernetNetPortOamEnabled_Type = TruthValue
_CmEthernetNetPortOamEnabled_Object = MibTableColumn
cmEthernetNetPortOamEnabled = _CmEthernetNetPortOamEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 72),
    _CmEthernetNetPortOamEnabled_Type()
)
cmEthernetNetPortOamEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamEnabled.setStatus("current")
_CmEthernetNetPortOamAdminState_Type = CmOamAdminState
_CmEthernetNetPortOamAdminState_Object = MibTableColumn
cmEthernetNetPortOamAdminState = _CmEthernetNetPortOamAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 73),
    _CmEthernetNetPortOamAdminState_Type()
)
cmEthernetNetPortOamAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortOamAdminState.setStatus("current")
_CmEthernetNetPortShapingEnabled_Type = TruthValue
_CmEthernetNetPortShapingEnabled_Object = MibTableColumn
cmEthernetNetPortShapingEnabled = _CmEthernetNetPortShapingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 74),
    _CmEthernetNetPortShapingEnabled_Type()
)
cmEthernetNetPortShapingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortShapingEnabled.setStatus("current")
_CmEthernetNetPortShapedSpeedLo_Type = Unsigned32
_CmEthernetNetPortShapedSpeedLo_Object = MibTableColumn
cmEthernetNetPortShapedSpeedLo = _CmEthernetNetPortShapedSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 75),
    _CmEthernetNetPortShapedSpeedLo_Type()
)
cmEthernetNetPortShapedSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortShapedSpeedLo.setStatus("current")
_CmEthernetNetPortShapedSpeedHi_Type = Unsigned32
_CmEthernetNetPortShapedSpeedHi_Object = MibTableColumn
cmEthernetNetPortShapedSpeedHi = _CmEthernetNetPortShapedSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 76),
    _CmEthernetNetPortShapedSpeedHi_Type()
)
cmEthernetNetPortShapedSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortShapedSpeedHi.setStatus("current")
_CmEthernetNetPortQinQEtherType_Type = Unsigned32
_CmEthernetNetPortQinQEtherType_Object = MibTableColumn
cmEthernetNetPortQinQEtherType = _CmEthernetNetPortQinQEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 77),
    _CmEthernetNetPortQinQEtherType_Type()
)
cmEthernetNetPortQinQEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortQinQEtherType.setStatus("current")
_CmEthernetNetPortLinkLossFwdTxActionType_Type = CmLinkLossFwdTxActionType
_CmEthernetNetPortLinkLossFwdTxActionType_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdTxActionType = _CmEthernetNetPortLinkLossFwdTxActionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 78),
    _CmEthernetNetPortLinkLossFwdTxActionType_Type()
)
cmEthernetNetPortLinkLossFwdTxActionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdTxActionType.setStatus("current")
_CmEthernetNetPortLinkLossFwdRxRLDLinkIds_Type = CmRemoteLinkIds
_CmEthernetNetPortLinkLossFwdRxRLDLinkIds_Object = MibTableColumn
cmEthernetNetPortLinkLossFwdRxRLDLinkIds = _CmEthernetNetPortLinkLossFwdRxRLDLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 79),
    _CmEthernetNetPortLinkLossFwdRxRLDLinkIds_Type()
)
cmEthernetNetPortLinkLossFwdRxRLDLinkIds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLinkLossFwdRxRLDLinkIds.setStatus("current")
_CmEthernetNetPortAutoDiagEnabled_Type = TruthValue
_CmEthernetNetPortAutoDiagEnabled_Object = MibTableColumn
cmEthernetNetPortAutoDiagEnabled = _CmEthernetNetPortAutoDiagEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 80),
    _CmEthernetNetPortAutoDiagEnabled_Type()
)
cmEthernetNetPortAutoDiagEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortAutoDiagEnabled.setStatus("current")
_CmEthernetNetPortSyncEEnabled_Type = TruthValue
_CmEthernetNetPortSyncEEnabled_Object = MibTableColumn
cmEthernetNetPortSyncEEnabled = _CmEthernetNetPortSyncEEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 81),
    _CmEthernetNetPortSyncEEnabled_Type()
)
cmEthernetNetPortSyncEEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortSyncEEnabled.setStatus("current")
_CmEthernetNetPortQLModeEnabled_Type = TruthValue
_CmEthernetNetPortQLModeEnabled_Object = MibTableColumn
cmEthernetNetPortQLModeEnabled = _CmEthernetNetPortQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 82),
    _CmEthernetNetPortQLModeEnabled_Type()
)
cmEthernetNetPortQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortQLModeEnabled.setStatus("current")
_CmEthernetNetPortExpectedQL_Type = SSMQualityLevel
_CmEthernetNetPortExpectedQL_Object = MibTableColumn
cmEthernetNetPortExpectedQL = _CmEthernetNetPortExpectedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 83),
    _CmEthernetNetPortExpectedQL_Type()
)
cmEthernetNetPortExpectedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortExpectedQL.setStatus("current")
_CmEthernetNetPortAssumedQL_Type = SSMQualityLevel
_CmEthernetNetPortAssumedQL_Object = MibTableColumn
cmEthernetNetPortAssumedQL = _CmEthernetNetPortAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 84),
    _CmEthernetNetPortAssumedQL_Type()
)
cmEthernetNetPortAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortAssumedQL.setStatus("current")
_CmEthernetNetPortReceivedQL_Type = SSMQualityLevel
_CmEthernetNetPortReceivedQL_Object = MibTableColumn
cmEthernetNetPortReceivedQL = _CmEthernetNetPortReceivedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 85),
    _CmEthernetNetPortReceivedQL_Type()
)
cmEthernetNetPortReceivedQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortReceivedQL.setStatus("current")
_CmEthernetNetPortTransmitQL_Type = SSMQualityLevel
_CmEthernetNetPortTransmitQL_Object = MibTableColumn
cmEthernetNetPortTransmitQL = _CmEthernetNetPortTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 86),
    _CmEthernetNetPortTransmitQL_Type()
)
cmEthernetNetPortTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortTransmitQL.setStatus("current")
_CmEthernetNetPortPrioMapMode_Type = PriorityMapMode
_CmEthernetNetPortPrioMapMode_Object = MibTableColumn
cmEthernetNetPortPrioMapMode = _CmEthernetNetPortPrioMapMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 87),
    _CmEthernetNetPortPrioMapMode_Type()
)
cmEthernetNetPortPrioMapMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortPrioMapMode.setStatus("current")
_CmEthernetNetPortDeiEnable_Type = TruthValue
_CmEthernetNetPortDeiEnable_Object = MibTableColumn
cmEthernetNetPortDeiEnable = _CmEthernetNetPortDeiEnable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 88),
    _CmEthernetNetPortDeiEnable_Type()
)
cmEthernetNetPortDeiEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortDeiEnable.setStatus("deprecated")
_CmEthernetNetPortPcpDEEncType_Type = PcpDEEncType
_CmEthernetNetPortPcpDEEncType_Object = MibTableColumn
cmEthernetNetPortPcpDEEncType = _CmEthernetNetPortPcpDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 89),
    _CmEthernetNetPortPcpDEEncType_Type()
)
cmEthernetNetPortPcpDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPcpDEEncType.setStatus("current")
_CmEthernetNetPortPcpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetNetPortPcpDEPairsAction_Object = MibTableColumn
cmEthernetNetPortPcpDEPairsAction = _CmEthernetNetPortPcpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 90),
    _CmEthernetNetPortPcpDEPairsAction_Type()
)
cmEthernetNetPortPcpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPcpDEPairsAction.setStatus("current")
_CmEthernetNetPortSSMRemoteMacAddress_Type = MacAddress
_CmEthernetNetPortSSMRemoteMacAddress_Object = MibTableColumn
cmEthernetNetPortSSMRemoteMacAddress = _CmEthernetNetPortSSMRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 91),
    _CmEthernetNetPortSSMRemoteMacAddress_Type()
)
cmEthernetNetPortSSMRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSSMRemoteMacAddress.setStatus("current")
_CmEthernetNetPortXgePhyType_Type = XgePhyType
_CmEthernetNetPortXgePhyType_Object = MibTableColumn
cmEthernetNetPortXgePhyType = _CmEthernetNetPortXgePhyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 92),
    _CmEthernetNetPortXgePhyType_Type()
)
cmEthernetNetPortXgePhyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXgePhyType.setStatus("current")
_CmEthernetNetPortLoopbackSourceMacControlEnabled_Type = TruthValue
_CmEthernetNetPortLoopbackSourceMacControlEnabled_Object = MibTableColumn
cmEthernetNetPortLoopbackSourceMacControlEnabled = _CmEthernetNetPortLoopbackSourceMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 93),
    _CmEthernetNetPortLoopbackSourceMacControlEnabled_Type()
)
cmEthernetNetPortLoopbackSourceMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackSourceMacControlEnabled.setStatus("current")
_CmEthernetNetPortLoopbackDestMacControlEnabled_Type = TruthValue
_CmEthernetNetPortLoopbackDestMacControlEnabled_Object = MibTableColumn
cmEthernetNetPortLoopbackDestMacControlEnabled = _CmEthernetNetPortLoopbackDestMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 94),
    _CmEthernetNetPortLoopbackDestMacControlEnabled_Type()
)
cmEthernetNetPortLoopbackDestMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackDestMacControlEnabled.setStatus("current")
_CmEthernetNetPortLoopbackSourceMacAddress_Type = MacAddress
_CmEthernetNetPortLoopbackSourceMacAddress_Object = MibTableColumn
cmEthernetNetPortLoopbackSourceMacAddress = _CmEthernetNetPortLoopbackSourceMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 95),
    _CmEthernetNetPortLoopbackSourceMacAddress_Type()
)
cmEthernetNetPortLoopbackSourceMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackSourceMacAddress.setStatus("current")
_CmEthernetNetPortLoopbackDestMacAddress_Type = MacAddress
_CmEthernetNetPortLoopbackDestMacAddress_Object = MibTableColumn
cmEthernetNetPortLoopbackDestMacAddress = _CmEthernetNetPortLoopbackDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 96),
    _CmEthernetNetPortLoopbackDestMacAddress_Type()
)
cmEthernetNetPortLoopbackDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackDestMacAddress.setStatus("current")
_CmEthernetNetPortLoopbackBlockingEnabled_Type = TruthValue
_CmEthernetNetPortLoopbackBlockingEnabled_Object = MibTableColumn
cmEthernetNetPortLoopbackBlockingEnabled = _CmEthernetNetPortLoopbackBlockingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 97),
    _CmEthernetNetPortLoopbackBlockingEnabled_Type()
)
cmEthernetNetPortLoopbackBlockingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackBlockingEnabled.setStatus("current")
_CmEthernetNetPortRxDeiAction_Type = RxDeiAction
_CmEthernetNetPortRxDeiAction_Object = MibTableColumn
cmEthernetNetPortRxDeiAction = _CmEthernetNetPortRxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 98),
    _CmEthernetNetPortRxDeiAction_Type()
)
cmEthernetNetPortRxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortRxDeiAction.setStatus("current")
_CmEthernetNetPortTxDeiAction_Type = TxDeiAction
_CmEthernetNetPortTxDeiAction_Object = MibTableColumn
cmEthernetNetPortTxDeiAction = _CmEthernetNetPortTxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 99),
    _CmEthernetNetPortTxDeiAction_Type()
)
cmEthernetNetPortTxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortTxDeiAction.setStatus("current")
_CmEthernetNetPortRxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetNetPortRxDeiOuterTagType_Object = MibTableColumn
cmEthernetNetPortRxDeiOuterTagType = _CmEthernetNetPortRxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 100),
    _CmEthernetNetPortRxDeiOuterTagType_Type()
)
cmEthernetNetPortRxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortRxDeiOuterTagType.setStatus("current")
_CmEthernetNetPortTxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetNetPortTxDeiOuterTagType_Object = MibTableColumn
cmEthernetNetPortTxDeiOuterTagType = _CmEthernetNetPortTxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 101),
    _CmEthernetNetPortTxDeiOuterTagType_Type()
)
cmEthernetNetPortTxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortTxDeiOuterTagType.setStatus("current")
_CmEthernetNetPortLaserWDMChannel_Type = SfpChannelIdentifier
_CmEthernetNetPortLaserWDMChannel_Object = MibTableColumn
cmEthernetNetPortLaserWDMChannel = _CmEthernetNetPortLaserWDMChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 102),
    _CmEthernetNetPortLaserWDMChannel_Type()
)
cmEthernetNetPortLaserWDMChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLaserWDMChannel.setStatus("current")
_CmEthernetNetPortLaserIsTunable_Type = TruthValue
_CmEthernetNetPortLaserIsTunable_Object = MibTableColumn
cmEthernetNetPortLaserIsTunable = _CmEthernetNetPortLaserIsTunable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 103),
    _CmEthernetNetPortLaserIsTunable_Type()
)
cmEthernetNetPortLaserIsTunable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLaserIsTunable.setStatus("current")
_CmEthernetNetPortLaserFrequency_Type = Unsigned32
_CmEthernetNetPortLaserFrequency_Object = MibTableColumn
cmEthernetNetPortLaserFrequency = _CmEthernetNetPortLaserFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 104),
    _CmEthernetNetPortLaserFrequency_Type()
)
cmEthernetNetPortLaserFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortLaserFrequency.setStatus("current")
_CmEthernetNetPortMediaTypeAutoSelected_Type = EthernetMediaType
_CmEthernetNetPortMediaTypeAutoSelected_Object = MibTableColumn
cmEthernetNetPortMediaTypeAutoSelected = _CmEthernetNetPortMediaTypeAutoSelected_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 105),
    _CmEthernetNetPortMediaTypeAutoSelected_Type()
)
cmEthernetNetPortMediaTypeAutoSelected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortMediaTypeAutoSelected.setStatus("current")
_CmEthernetNetPortLowLatencyQueuingEnabled_Type = TruthValue
_CmEthernetNetPortLowLatencyQueuingEnabled_Object = MibTableColumn
cmEthernetNetPortLowLatencyQueuingEnabled = _CmEthernetNetPortLowLatencyQueuingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 106),
    _CmEthernetNetPortLowLatencyQueuingEnabled_Type()
)
cmEthernetNetPortLowLatencyQueuingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLowLatencyQueuingEnabled.setStatus("current")
_CmEthernetNetPortDiagnosticMacAddress_Type = MacAddress
_CmEthernetNetPortDiagnosticMacAddress_Object = MibTableColumn
cmEthernetNetPortDiagnosticMacAddress = _CmEthernetNetPortDiagnosticMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 107),
    _CmEthernetNetPortDiagnosticMacAddress_Type()
)
cmEthernetNetPortDiagnosticMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortDiagnosticMacAddress.setStatus("current")


class _CmEthernetNetPortIngressCOSPriority_Type(VlanTagType):
    """Custom type cmEthernetNetPortIngressCOSPriority based on VlanTagType"""
    defaultValue = 2


_CmEthernetNetPortIngressCOSPriority_Type.__name__ = "VlanTagType"
_CmEthernetNetPortIngressCOSPriority_Object = MibTableColumn
cmEthernetNetPortIngressCOSPriority = _CmEthernetNetPortIngressCOSPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 108),
    _CmEthernetNetPortIngressCOSPriority_Type()
)
cmEthernetNetPortIngressCOSPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortIngressCOSPriority.setStatus("deprecated")


class _CmEthernetNetPortDefaultCOS_Type(Integer32):
    """Custom type cmEthernetNetPortDefaultCOS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmEthernetNetPortDefaultCOS_Type.__name__ = "Integer32"
_CmEthernetNetPortDefaultCOS_Object = MibTableColumn
cmEthernetNetPortDefaultCOS = _CmEthernetNetPortDefaultCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 109),
    _CmEthernetNetPortDefaultCOS_Type()
)
cmEthernetNetPortDefaultCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortDefaultCOS.setStatus("deprecated")


class _CmEthernetNetPortTrafficModel_Type(EthernetPortTrafficModel):
    """Custom type cmEthernetNetPortTrafficModel based on EthernetPortTrafficModel"""
    defaultValue = 1


_CmEthernetNetPortTrafficModel_Type.__name__ = "EthernetPortTrafficModel"
_CmEthernetNetPortTrafficModel_Object = MibTableColumn
cmEthernetNetPortTrafficModel = _CmEthernetNetPortTrafficModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 110),
    _CmEthernetNetPortTrafficModel_Type()
)
cmEthernetNetPortTrafficModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortTrafficModel.setStatus("current")
_CmEthernetNetPortIndependentShaperBW_Type = TruthValue
_CmEthernetNetPortIndependentShaperBW_Object = MibTableColumn
cmEthernetNetPortIndependentShaperBW = _CmEthernetNetPortIndependentShaperBW_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 111),
    _CmEthernetNetPortIndependentShaperBW_Type()
)
cmEthernetNetPortIndependentShaperBW.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortIndependentShaperBW.setStatus("current")
_CmEthernetNetPortExpDEEncType_Type = PcpDEEncType
_CmEthernetNetPortExpDEEncType_Object = MibTableColumn
cmEthernetNetPortExpDEEncType = _CmEthernetNetPortExpDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 112),
    _CmEthernetNetPortExpDEEncType_Type()
)
cmEthernetNetPortExpDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortExpDEEncType.setStatus("current")
_CmEthernetNetPortExpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetNetPortExpDEPairsAction_Object = MibTableColumn
cmEthernetNetPortExpDEPairsAction = _CmEthernetNetPortExpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 113),
    _CmEthernetNetPortExpDEPairsAction_Type()
)
cmEthernetNetPortExpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortExpDEPairsAction.setStatus("current")
_CmEthernetNetPortIpPrecDEEncType_Type = PcpDEEncType
_CmEthernetNetPortIpPrecDEEncType_Object = MibTableColumn
cmEthernetNetPortIpPrecDEEncType = _CmEthernetNetPortIpPrecDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 114),
    _CmEthernetNetPortIpPrecDEEncType_Type()
)
cmEthernetNetPortIpPrecDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortIpPrecDEEncType.setStatus("current")
_CmEthernetNetPortIpPrecDEPairsAction_Type = PcpDEPairsAction
_CmEthernetNetPortIpPrecDEPairsAction_Object = MibTableColumn
cmEthernetNetPortIpPrecDEPairsAction = _CmEthernetNetPortIpPrecDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 115),
    _CmEthernetNetPortIpPrecDEPairsAction_Type()
)
cmEthernetNetPortIpPrecDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortIpPrecDEPairsAction.setStatus("current")
_CmEthernetNetPortEncapPcpDEEncodingType_Type = PcpDEEncType
_CmEthernetNetPortEncapPcpDEEncodingType_Object = MibTableColumn
cmEthernetNetPortEncapPcpDEEncodingType = _CmEthernetNetPortEncapPcpDEEncodingType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 116),
    _CmEthernetNetPortEncapPcpDEEncodingType_Type()
)
cmEthernetNetPortEncapPcpDEEncodingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortEncapPcpDEEncodingType.setStatus("current")
_CmEthernetNetPortEncapPcpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetNetPortEncapPcpDEPairsAction_Object = MibTableColumn
cmEthernetNetPortEncapPcpDEPairsAction = _CmEthernetNetPortEncapPcpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 117),
    _CmEthernetNetPortEncapPcpDEPairsAction_Type()
)
cmEthernetNetPortEncapPcpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortEncapPcpDEPairsAction.setStatus("current")
_CmEthernetNetPortJdsuLoopbackSrcIp_Type = IpAddress
_CmEthernetNetPortJdsuLoopbackSrcIp_Object = MibTableColumn
cmEthernetNetPortJdsuLoopbackSrcIp = _CmEthernetNetPortJdsuLoopbackSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 118),
    _CmEthernetNetPortJdsuLoopbackSrcIp_Type()
)
cmEthernetNetPortJdsuLoopbackSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortJdsuLoopbackSrcIp.setStatus("current")
_CmEthernetNetPortWfqSegmentationCOS_Type = Integer32
_CmEthernetNetPortWfqSegmentationCOS_Object = MibTableColumn
cmEthernetNetPortWfqSegmentationCOS = _CmEthernetNetPortWfqSegmentationCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 119),
    _CmEthernetNetPortWfqSegmentationCOS_Type()
)
cmEthernetNetPortWfqSegmentationCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortWfqSegmentationCOS.setStatus("current")
_CmEthernetNetPortWfqGroupCOS_Type = Integer32
_CmEthernetNetPortWfqGroupCOS_Object = MibTableColumn
cmEthernetNetPortWfqGroupCOS = _CmEthernetNetPortWfqGroupCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 120),
    _CmEthernetNetPortWfqGroupCOS_Type()
)
cmEthernetNetPortWfqGroupCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortWfqGroupCOS.setStatus("current")
_CmEthernetNetPortWfqGroupEirLo_Type = Unsigned32
_CmEthernetNetPortWfqGroupEirLo_Object = MibTableColumn
cmEthernetNetPortWfqGroupEirLo = _CmEthernetNetPortWfqGroupEirLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 121),
    _CmEthernetNetPortWfqGroupEirLo_Type()
)
cmEthernetNetPortWfqGroupEirLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortWfqGroupEirLo.setStatus("current")
_CmEthernetNetPortWfqGroupEirHi_Type = Unsigned32
_CmEthernetNetPortWfqGroupEirHi_Object = MibTableColumn
cmEthernetNetPortWfqGroupEirHi = _CmEthernetNetPortWfqGroupEirHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 122),
    _CmEthernetNetPortWfqGroupEirHi_Type()
)
cmEthernetNetPortWfqGroupEirHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortWfqGroupEirHi.setStatus("current")
_CmEthernetNetPortSilentStartControl_Type = TruthValue
_CmEthernetNetPortSilentStartControl_Object = MibTableColumn
cmEthernetNetPortSilentStartControl = _CmEthernetNetPortSilentStartControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 123),
    _CmEthernetNetPortSilentStartControl_Type()
)
cmEthernetNetPortSilentStartControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortSilentStartControl.setStatus("current")
_CmEthernetNetPortSfpLinkLength_Type = Integer32
_CmEthernetNetPortSfpLinkLength_Object = MibTableColumn
cmEthernetNetPortSfpLinkLength = _CmEthernetNetPortSfpLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 124),
    _CmEthernetNetPortSfpLinkLength_Type()
)
cmEthernetNetPortSfpLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpLinkLength.setStatus("current")
_CmEthernetNetPortOuterTagTpidOverride_Type = TruthValue
_CmEthernetNetPortOuterTagTpidOverride_Object = MibTableColumn
cmEthernetNetPortOuterTagTpidOverride = _CmEthernetNetPortOuterTagTpidOverride_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 125),
    _CmEthernetNetPortOuterTagTpidOverride_Type()
)
cmEthernetNetPortOuterTagTpidOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterTagTpidOverride.setStatus("current")
_CmEthernetNetPortOuterTagTpid_Type = Unsigned32
_CmEthernetNetPortOuterTagTpid_Object = MibTableColumn
cmEthernetNetPortOuterTagTpid = _CmEthernetNetPortOuterTagTpid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 126),
    _CmEthernetNetPortOuterTagTpid_Type()
)
cmEthernetNetPortOuterTagTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortOuterTagTpid.setStatus("current")


class _CmEthernetNetPortSfpName_Type(DisplayString):
    """Custom type cmEthernetNetPortSfpName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetNetPortSfpName_Type.__name__ = "DisplayString"
_CmEthernetNetPortSfpName_Object = MibTableColumn
cmEthernetNetPortSfpName = _CmEthernetNetPortSfpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 127),
    _CmEthernetNetPortSfpName_Type()
)
cmEthernetNetPortSfpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpName.setStatus("current")


class _CmEthernetNetPortSfpHardwareRevision_Type(DisplayString):
    """Custom type cmEthernetNetPortSfpHardwareRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetNetPortSfpHardwareRevision_Type.__name__ = "DisplayString"
_CmEthernetNetPortSfpHardwareRevision_Object = MibTableColumn
cmEthernetNetPortSfpHardwareRevision = _CmEthernetNetPortSfpHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 128),
    _CmEthernetNetPortSfpHardwareRevision_Type()
)
cmEthernetNetPortSfpHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpHardwareRevision.setStatus("current")
_CmEthernetNetPortPersistentLoopbackControl_Type = TruthValue
_CmEthernetNetPortPersistentLoopbackControl_Object = MibTableColumn
cmEthernetNetPortPersistentLoopbackControl = _CmEthernetNetPortPersistentLoopbackControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 129),
    _CmEthernetNetPortPersistentLoopbackControl_Type()
)
cmEthernetNetPortPersistentLoopbackControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPersistentLoopbackControl.setStatus("current")
_CmEthernetNetPortLoopbackTestReflectorIPv4AddressControl_Type = TruthValue
_CmEthernetNetPortLoopbackTestReflectorIPv4AddressControl_Object = MibTableColumn
cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl = _CmEthernetNetPortLoopbackTestReflectorIPv4AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 130),
    _CmEthernetNetPortLoopbackTestReflectorIPv4AddressControl_Type()
)
cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl.setStatus("current")
_CmEthernetNetPortLoopbackTestReflectorIPv4Address_Type = IpAddress
_CmEthernetNetPortLoopbackTestReflectorIPv4Address_Object = MibTableColumn
cmEthernetNetPortLoopbackTestReflectorIPv4Address = _CmEthernetNetPortLoopbackTestReflectorIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 131),
    _CmEthernetNetPortLoopbackTestReflectorIPv4Address_Type()
)
cmEthernetNetPortLoopbackTestReflectorIPv4Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackTestReflectorIPv4Address.setStatus("current")
_CmEthernetNetPortLoopbackTestReflectorIPv6AddressControl_Type = TruthValue
_CmEthernetNetPortLoopbackTestReflectorIPv6AddressControl_Object = MibTableColumn
cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl = _CmEthernetNetPortLoopbackTestReflectorIPv6AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 132),
    _CmEthernetNetPortLoopbackTestReflectorIPv6AddressControl_Type()
)
cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl.setStatus("current")
_CmEthernetNetPortLoopbackTestReflectorIPv6Address_Type = Ipv6Address
_CmEthernetNetPortLoopbackTestReflectorIPv6Address_Object = MibTableColumn
cmEthernetNetPortLoopbackTestReflectorIPv6Address = _CmEthernetNetPortLoopbackTestReflectorIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 133),
    _CmEthernetNetPortLoopbackTestReflectorIPv6Address_Type()
)
cmEthernetNetPortLoopbackTestReflectorIPv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortLoopbackTestReflectorIPv6Address.setStatus("current")
_CmEthernetNetPortSfpIdentifierValue_Type = SfpIdentifierValue
_CmEthernetNetPortSfpIdentifierValue_Object = MibTableColumn
cmEthernetNetPortSfpIdentifierValue = _CmEthernetNetPortSfpIdentifierValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 7, 1, 134),
    _CmEthernetNetPortSfpIdentifierValue_Type()
)
cmEthernetNetPortSfpIdentifierValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortSfpIdentifierValue.setStatus("current")
_CmEthernetNetPortCpdTable_Object = MibTable
cmEthernetNetPortCpdTable = _CmEthernetNetPortCpdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdTable.setStatus("current")
_CmEthernetNetPortCpdEntry_Object = MibTableRow
cmEthernetNetPortCpdEntry = _CmEthernetNetPortCpdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1)
)
cmEthernetNetPortCpdEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortCpdIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdEntry.setStatus("current")


class _CmEthernetNetPortCpdIndex_Type(Integer32):
    """Custom type cmEthernetNetPortCpdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetNetPortCpdIndex_Type.__name__ = "Integer32"
_CmEthernetNetPortCpdIndex_Object = MibTableColumn
cmEthernetNetPortCpdIndex = _CmEthernetNetPortCpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 1),
    _CmEthernetNetPortCpdIndex_Type()
)
cmEthernetNetPortCpdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdIndex.setStatus("current")
_CmEthernetNetPortCpdFilterType_Type = CmControlProtocolFilterType
_CmEthernetNetPortCpdFilterType_Object = MibTableColumn
cmEthernetNetPortCpdFilterType = _CmEthernetNetPortCpdFilterType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 2),
    _CmEthernetNetPortCpdFilterType_Type()
)
cmEthernetNetPortCpdFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdFilterType.setStatus("current")


class _CmEthernetNetPortCpdFilterDescr_Type(DisplayString):
    """Custom type cmEthernetNetPortCpdFilterDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetNetPortCpdFilterDescr_Type.__name__ = "DisplayString"
_CmEthernetNetPortCpdFilterDescr_Object = MibTableColumn
cmEthernetNetPortCpdFilterDescr = _CmEthernetNetPortCpdFilterDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 3),
    _CmEthernetNetPortCpdFilterDescr_Type()
)
cmEthernetNetPortCpdFilterDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdFilterDescr.setStatus("current")
_CmEthernetNetPortCpdDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdDispType_Object = MibTableColumn
cmEthernetNetPortCpdDispType = _CmEthernetNetPortCpdDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 4),
    _CmEthernetNetPortCpdDispType_Type()
)
cmEthernetNetPortCpdDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdDispType.setStatus("current")
_CmEthernetNetPortCpdMacAddressMatch_Type = MacAddress
_CmEthernetNetPortCpdMacAddressMatch_Object = MibTableColumn
cmEthernetNetPortCpdMacAddressMatch = _CmEthernetNetPortCpdMacAddressMatch_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 5),
    _CmEthernetNetPortCpdMacAddressMatch_Type()
)
cmEthernetNetPortCpdMacAddressMatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdMacAddressMatch.setStatus("current")
_CmEthernetNetPortCpdMacAddressMask_Type = MacAddress
_CmEthernetNetPortCpdMacAddressMask_Object = MibTableColumn
cmEthernetNetPortCpdMacAddressMask = _CmEthernetNetPortCpdMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 6),
    _CmEthernetNetPortCpdMacAddressMask_Type()
)
cmEthernetNetPortCpdMacAddressMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdMacAddressMask.setStatus("current")


class _CmEthernetNetPortCpdEthertype_Type(Integer32):
    """Custom type cmEthernetNetPortCpdEthertype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmEthernetNetPortCpdEthertype_Type.__name__ = "Integer32"
_CmEthernetNetPortCpdEthertype_Object = MibTableColumn
cmEthernetNetPortCpdEthertype = _CmEthernetNetPortCpdEthertype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 7),
    _CmEthernetNetPortCpdEthertype_Type()
)
cmEthernetNetPortCpdEthertype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdEthertype.setStatus("current")
_CmEthernetNetPortCpdEthertypeMask_Type = Integer32
_CmEthernetNetPortCpdEthertypeMask_Object = MibTableColumn
cmEthernetNetPortCpdEthertypeMask = _CmEthernetNetPortCpdEthertypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 8),
    _CmEthernetNetPortCpdEthertypeMask_Type()
)
cmEthernetNetPortCpdEthertypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdEthertypeMask.setStatus("current")
_CmEthernetNetPortCpdSubtype_Type = Integer32
_CmEthernetNetPortCpdSubtype_Object = MibTableColumn
cmEthernetNetPortCpdSubtype = _CmEthernetNetPortCpdSubtype_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 9),
    _CmEthernetNetPortCpdSubtype_Type()
)
cmEthernetNetPortCpdSubtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdSubtype.setStatus("current")
_CmEthernetNetPortCpdSubtypeMask_Type = Integer32
_CmEthernetNetPortCpdSubtypeMask_Object = MibTableColumn
cmEthernetNetPortCpdSubtypeMask = _CmEthernetNetPortCpdSubtypeMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 8, 1, 10),
    _CmEthernetNetPortCpdSubtypeMask_Type()
)
cmEthernetNetPortCpdSubtypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdSubtypeMask.setStatus("current")
_CmEthernetMgmtPortTable_Object = MibTable
cmEthernetMgmtPortTable = _CmEthernetMgmtPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9)
)
if mibBuilder.loadTexts:
    cmEthernetMgmtPortTable.setStatus("current")
_CmEthernetMgmtPortEntry_Object = MibTableRow
cmEthernetMgmtPortEntry = _CmEthernetMgmtPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1)
)
cmEthernetMgmtPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetMgmtPortIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetMgmtPortEntry.setStatus("current")


class _CmEthernetMgmtPortIndex_Type(Integer32):
    """Custom type cmEthernetMgmtPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetMgmtPortIndex_Type.__name__ = "Integer32"
_CmEthernetMgmtPortIndex_Object = MibTableColumn
cmEthernetMgmtPortIndex = _CmEthernetMgmtPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 1),
    _CmEthernetMgmtPortIndex_Type()
)
cmEthernetMgmtPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortIndex.setStatus("current")
_CmEthernetMgmtPortEntityIndex_Type = PhysicalIndex
_CmEthernetMgmtPortEntityIndex_Object = MibTableColumn
cmEthernetMgmtPortEntityIndex = _CmEthernetMgmtPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 2),
    _CmEthernetMgmtPortEntityIndex_Type()
)
cmEthernetMgmtPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortEntityIndex.setStatus("current")
_CmEthernetMgmtPortAdminState_Type = AdminState
_CmEthernetMgmtPortAdminState_Object = MibTableColumn
cmEthernetMgmtPortAdminState = _CmEthernetMgmtPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 3),
    _CmEthernetMgmtPortAdminState_Type()
)
cmEthernetMgmtPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortAdminState.setStatus("current")
_CmEthernetMgmtPortOperationalState_Type = OperationalState
_CmEthernetMgmtPortOperationalState_Object = MibTableColumn
cmEthernetMgmtPortOperationalState = _CmEthernetMgmtPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 4),
    _CmEthernetMgmtPortOperationalState_Type()
)
cmEthernetMgmtPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortOperationalState.setStatus("current")
_CmEthernetMgmtPortSecondaryState_Type = SecondaryState
_CmEthernetMgmtPortSecondaryState_Object = MibTableColumn
cmEthernetMgmtPortSecondaryState = _CmEthernetMgmtPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 5),
    _CmEthernetMgmtPortSecondaryState_Type()
)
cmEthernetMgmtPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortSecondaryState.setStatus("current")
_CmEthernetMgmtPortMTU_Type = Integer32
_CmEthernetMgmtPortMTU_Object = MibTableColumn
cmEthernetMgmtPortMTU = _CmEthernetMgmtPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 6),
    _CmEthernetMgmtPortMTU_Type()
)
cmEthernetMgmtPortMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortMTU.setStatus("current")
_CmEthernetMgmtPortConfigSpeed_Type = EthernetPortSpeed
_CmEthernetMgmtPortConfigSpeed_Object = MibTableColumn
cmEthernetMgmtPortConfigSpeed = _CmEthernetMgmtPortConfigSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 7),
    _CmEthernetMgmtPortConfigSpeed_Type()
)
cmEthernetMgmtPortConfigSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortConfigSpeed.setStatus("current")
_CmEthernetMgmtPortNegotiatedSpeed_Type = EthernetPortSpeed
_CmEthernetMgmtPortNegotiatedSpeed_Object = MibTableColumn
cmEthernetMgmtPortNegotiatedSpeed = _CmEthernetMgmtPortNegotiatedSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 8),
    _CmEthernetMgmtPortNegotiatedSpeed_Type()
)
cmEthernetMgmtPortNegotiatedSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortNegotiatedSpeed.setStatus("current")
_CmEthernetMgmtPortMDIXType_Type = CmEthernetMDIXType
_CmEthernetMgmtPortMDIXType_Object = MibTableColumn
cmEthernetMgmtPortMDIXType = _CmEthernetMgmtPortMDIXType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 9),
    _CmEthernetMgmtPortMDIXType_Type()
)
cmEthernetMgmtPortMDIXType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortMDIXType.setStatus("current")
_CmEthernetMgmtPortMDIXStatus_Type = CmEthernetMDIXType
_CmEthernetMgmtPortMDIXStatus_Object = MibTableColumn
cmEthernetMgmtPortMDIXStatus = _CmEthernetMgmtPortMDIXStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 10),
    _CmEthernetMgmtPortMDIXStatus_Type()
)
cmEthernetMgmtPortMDIXStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortMDIXStatus.setStatus("current")
_CmEthernetMgmtPortMediaType_Type = EthernetMediaType
_CmEthernetMgmtPortMediaType_Object = MibTableColumn
cmEthernetMgmtPortMediaType = _CmEthernetMgmtPortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 9, 1, 11),
    _CmEthernetMgmtPortMediaType_Type()
)
cmEthernetMgmtPortMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetMgmtPortMediaType.setStatus("current")
_CmPrioMapTable_Object = MibTable
cmPrioMapTable = _CmPrioMapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10)
)
if mibBuilder.loadTexts:
    cmPrioMapTable.setStatus("current")
_CmPrioMapEntry_Object = MibTableRow
cmPrioMapEntry = _CmPrioMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1)
)
cmPrioMapEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmPrioMapIndex"),
)
if mibBuilder.loadTexts:
    cmPrioMapEntry.setStatus("current")


class _CmPrioMapIndex_Type(Integer32):
    """Custom type cmPrioMapIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CmPrioMapIndex_Type.__name__ = "Integer32"
_CmPrioMapIndex_Object = MibTableColumn
cmPrioMapIndex = _CmPrioMapIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 1),
    _CmPrioMapIndex_Type()
)
cmPrioMapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmPrioMapIndex.setStatus("current")


class _CmPrioMapInPriority_Type(Integer32):
    """Custom type cmPrioMapInPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CmPrioMapInPriority_Type.__name__ = "Integer32"
_CmPrioMapInPriority_Object = MibTableColumn
cmPrioMapInPriority = _CmPrioMapInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 2),
    _CmPrioMapInPriority_Type()
)
cmPrioMapInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapInPriority.setStatus("current")
_CmPrioMapXTagControl_Type = PrioMapControlType
_CmPrioMapXTagControl_Object = MibTableColumn
cmPrioMapXTagControl = _CmPrioMapXTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 3),
    _CmPrioMapXTagControl_Type()
)
cmPrioMapXTagControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapXTagControl.setStatus("current")
_CmPrioMapXTagPriority_Type = VlanPriority
_CmPrioMapXTagPriority_Object = MibTableColumn
cmPrioMapXTagPriority = _CmPrioMapXTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 4),
    _CmPrioMapXTagPriority_Type()
)
cmPrioMapXTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapXTagPriority.setStatus("current")


class _CmPrioMapCOS_Type(Integer32):
    """Custom type cmPrioMapCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmPrioMapCOS_Type.__name__ = "Integer32"
_CmPrioMapCOS_Object = MibTableColumn
cmPrioMapCOS = _CmPrioMapCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 5),
    _CmPrioMapCOS_Type()
)
cmPrioMapCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapCOS.setStatus("current")
_CmPrioMapOuterTagPriority_Type = VlanPriority
_CmPrioMapOuterTagPriority_Object = MibTableColumn
cmPrioMapOuterTagPriority = _CmPrioMapOuterTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 6),
    _CmPrioMapOuterTagPriority_Type()
)
cmPrioMapOuterTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapOuterTagPriority.setStatus("current")
_CmPrioMapInnerTagPriority_Type = VlanPriority
_CmPrioMapInnerTagPriority_Object = MibTableColumn
cmPrioMapInnerTagPriority = _CmPrioMapInnerTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 10, 1, 7),
    _CmPrioMapInnerTagPriority_Type()
)
cmPrioMapInnerTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapInnerTagPriority.setStatus("current")
_CmQosFlowPolicerTable_Object = MibTable
cmQosFlowPolicerTable = _CmQosFlowPolicerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11)
)
if mibBuilder.loadTexts:
    cmQosFlowPolicerTable.setStatus("current")
_CmQosFlowPolicerEntry_Object = MibTableRow
cmQosFlowPolicerEntry = _CmQosFlowPolicerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1)
)
cmQosFlowPolicerEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowIndex"),
    (0, "CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"),
    (0, "CM-FACILITY-MIB", "cmQosFlowPolicerIndex"),
)
if mibBuilder.loadTexts:
    cmQosFlowPolicerEntry.setStatus("current")


class _CmQosFlowPolicerTypeIndex_Type(Integer32):
    """Custom type cmQosFlowPolicerTypeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CmQosFlowPolicerTypeIndex_Type.__name__ = "Integer32"
_CmQosFlowPolicerTypeIndex_Object = MibTableColumn
cmQosFlowPolicerTypeIndex = _CmQosFlowPolicerTypeIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 1),
    _CmQosFlowPolicerTypeIndex_Type()
)
cmQosFlowPolicerTypeIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerTypeIndex.setStatus("current")


class _CmQosFlowPolicerIndex_Type(Integer32):
    """Custom type cmQosFlowPolicerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CmQosFlowPolicerIndex_Type.__name__ = "Integer32"
_CmQosFlowPolicerIndex_Object = MibTableColumn
cmQosFlowPolicerIndex = _CmQosFlowPolicerIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 2),
    _CmQosFlowPolicerIndex_Type()
)
cmQosFlowPolicerIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerIndex.setStatus("current")
_CmQosFlowPolicerDirection_Type = TrafficDirection
_CmQosFlowPolicerDirection_Object = MibTableColumn
cmQosFlowPolicerDirection = _CmQosFlowPolicerDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 3),
    _CmQosFlowPolicerDirection_Type()
)
cmQosFlowPolicerDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerDirection.setStatus("current")
_CmQosFlowPolicerAdminState_Type = AdminState
_CmQosFlowPolicerAdminState_Object = MibTableColumn
cmQosFlowPolicerAdminState = _CmQosFlowPolicerAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 4),
    _CmQosFlowPolicerAdminState_Type()
)
cmQosFlowPolicerAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerAdminState.setStatus("current")
_CmQosFlowPolicerOperationalState_Type = OperationalState
_CmQosFlowPolicerOperationalState_Object = MibTableColumn
cmQosFlowPolicerOperationalState = _CmQosFlowPolicerOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 5),
    _CmQosFlowPolicerOperationalState_Type()
)
cmQosFlowPolicerOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosFlowPolicerOperationalState.setStatus("current")
_CmQosFlowPolicerSecondaryState_Type = SecondaryState
_CmQosFlowPolicerSecondaryState_Object = MibTableColumn
cmQosFlowPolicerSecondaryState = _CmQosFlowPolicerSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 6),
    _CmQosFlowPolicerSecondaryState_Type()
)
cmQosFlowPolicerSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosFlowPolicerSecondaryState.setStatus("current")
_CmQosFlowPolicerCIRLo_Type = Unsigned32
_CmQosFlowPolicerCIRLo_Object = MibTableColumn
cmQosFlowPolicerCIRLo = _CmQosFlowPolicerCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 7),
    _CmQosFlowPolicerCIRLo_Type()
)
cmQosFlowPolicerCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCIRLo.setStatus("current")
_CmQosFlowPolicerCIRHi_Type = Unsigned32
_CmQosFlowPolicerCIRHi_Object = MibTableColumn
cmQosFlowPolicerCIRHi = _CmQosFlowPolicerCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 8),
    _CmQosFlowPolicerCIRHi_Type()
)
cmQosFlowPolicerCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCIRHi.setStatus("current")
_CmQosFlowPolicerEIRLo_Type = Unsigned32
_CmQosFlowPolicerEIRLo_Object = MibTableColumn
cmQosFlowPolicerEIRLo = _CmQosFlowPolicerEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 9),
    _CmQosFlowPolicerEIRLo_Type()
)
cmQosFlowPolicerEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEIRLo.setStatus("current")
_CmQosFlowPolicerEIRHi_Type = Unsigned32
_CmQosFlowPolicerEIRHi_Object = MibTableColumn
cmQosFlowPolicerEIRHi = _CmQosFlowPolicerEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 10),
    _CmQosFlowPolicerEIRHi_Type()
)
cmQosFlowPolicerEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEIRHi.setStatus("current")
_CmQosFlowPolicerCBS_Type = Integer32
_CmQosFlowPolicerCBS_Object = MibTableColumn
cmQosFlowPolicerCBS = _CmQosFlowPolicerCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 11),
    _CmQosFlowPolicerCBS_Type()
)
cmQosFlowPolicerCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCBS.setStatus("current")
_CmQosFlowPolicerEBS_Type = Integer32
_CmQosFlowPolicerEBS_Object = MibTableColumn
cmQosFlowPolicerEBS = _CmQosFlowPolicerEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 12),
    _CmQosFlowPolicerEBS_Type()
)
cmQosFlowPolicerEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEBS.setStatus("current")
_CmQosFlowPolicerAlgorithm_Type = PolicerAlgorithmType
_CmQosFlowPolicerAlgorithm_Object = MibTableColumn
cmQosFlowPolicerAlgorithm = _CmQosFlowPolicerAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 13),
    _CmQosFlowPolicerAlgorithm_Type()
)
cmQosFlowPolicerAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosFlowPolicerAlgorithm.setStatus("current")
_CmQosFlowPolicerColorMode_Type = PolicerColorMode
_CmQosFlowPolicerColorMode_Object = MibTableColumn
cmQosFlowPolicerColorMode = _CmQosFlowPolicerColorMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 14),
    _CmQosFlowPolicerColorMode_Type()
)
cmQosFlowPolicerColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerColorMode.setStatus("current")
_CmQosFlowPolicerColorMarkingFlag_Type = TruthValue
_CmQosFlowPolicerColorMarkingFlag_Object = MibTableColumn
cmQosFlowPolicerColorMarkingFlag = _CmQosFlowPolicerColorMarkingFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 15),
    _CmQosFlowPolicerColorMarkingFlag_Type()
)
cmQosFlowPolicerColorMarkingFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerColorMarkingFlag.setStatus("deprecated")
_CmQosFlowPolicerCouplingFlag_Type = TruthValue
_CmQosFlowPolicerCouplingFlag_Object = MibTableColumn
cmQosFlowPolicerCouplingFlag = _CmQosFlowPolicerCouplingFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 16),
    _CmQosFlowPolicerCouplingFlag_Type()
)
cmQosFlowPolicerCouplingFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCouplingFlag.setStatus("current")
_CmQosFlowPolicerAssociatedShaper_Type = VariablePointer
_CmQosFlowPolicerAssociatedShaper_Object = MibTableColumn
cmQosFlowPolicerAssociatedShaper = _CmQosFlowPolicerAssociatedShaper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 17),
    _CmQosFlowPolicerAssociatedShaper_Type()
)
cmQosFlowPolicerAssociatedShaper.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerAssociatedShaper.setStatus("current")
_CmQosFlowPolicerStorageType_Type = StorageType
_CmQosFlowPolicerStorageType_Object = MibTableColumn
cmQosFlowPolicerStorageType = _CmQosFlowPolicerStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 18),
    _CmQosFlowPolicerStorageType_Type()
)
cmQosFlowPolicerStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerStorageType.setStatus("current")
_CmQosFlowPolicerRowStatus_Type = RowStatus
_CmQosFlowPolicerRowStatus_Object = MibTableColumn
cmQosFlowPolicerRowStatus = _CmQosFlowPolicerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 19),
    _CmQosFlowPolicerRowStatus_Type()
)
cmQosFlowPolicerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosFlowPolicerRowStatus.setStatus("current")
_CmQosFlowPolicerCIRMaxHi_Type = Unsigned32
_CmQosFlowPolicerCIRMaxHi_Object = MibTableColumn
cmQosFlowPolicerCIRMaxHi = _CmQosFlowPolicerCIRMaxHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 20),
    _CmQosFlowPolicerCIRMaxHi_Type()
)
cmQosFlowPolicerCIRMaxHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCIRMaxHi.setStatus("current")
_CmQosFlowPolicerCIRMaxLo_Type = Unsigned32
_CmQosFlowPolicerCIRMaxLo_Object = MibTableColumn
cmQosFlowPolicerCIRMaxLo = _CmQosFlowPolicerCIRMaxLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 21),
    _CmQosFlowPolicerCIRMaxLo_Type()
)
cmQosFlowPolicerCIRMaxLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerCIRMaxLo.setStatus("current")
_CmQosFlowPolicerEIRMaxHi_Type = Unsigned32
_CmQosFlowPolicerEIRMaxHi_Object = MibTableColumn
cmQosFlowPolicerEIRMaxHi = _CmQosFlowPolicerEIRMaxHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 22),
    _CmQosFlowPolicerEIRMaxHi_Type()
)
cmQosFlowPolicerEIRMaxHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEIRMaxHi.setStatus("current")
_CmQosFlowPolicerEIRMaxLo_Type = Unsigned32
_CmQosFlowPolicerEIRMaxLo_Object = MibTableColumn
cmQosFlowPolicerEIRMaxLo = _CmQosFlowPolicerEIRMaxLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 23),
    _CmQosFlowPolicerEIRMaxLo_Type()
)
cmQosFlowPolicerEIRMaxLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEIRMaxLo.setStatus("current")
_CmQosFlowPolicerEnvelopeObject_Type = VariablePointer
_CmQosFlowPolicerEnvelopeObject_Object = MibTableColumn
cmQosFlowPolicerEnvelopeObject = _CmQosFlowPolicerEnvelopeObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 24),
    _CmQosFlowPolicerEnvelopeObject_Type()
)
cmQosFlowPolicerEnvelopeObject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerEnvelopeObject.setStatus("current")
_CmQosFlowPolicerRank_Type = Integer32
_CmQosFlowPolicerRank_Object = MibTableColumn
cmQosFlowPolicerRank = _CmQosFlowPolicerRank_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 25),
    _CmQosFlowPolicerRank_Type()
)
cmQosFlowPolicerRank.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerRank.setStatus("current")
_CmQosFlowPolicerPolicingEnabled_Type = TruthValue
_CmQosFlowPolicerPolicingEnabled_Object = MibTableColumn
cmQosFlowPolicerPolicingEnabled = _CmQosFlowPolicerPolicingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 11, 1, 26),
    _CmQosFlowPolicerPolicingEnabled_Type()
)
cmQosFlowPolicerPolicingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosFlowPolicerPolicingEnabled.setStatus("current")
_CmAccPortQosShaperTable_Object = MibTable
cmAccPortQosShaperTable = _CmAccPortQosShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12)
)
if mibBuilder.loadTexts:
    cmAccPortQosShaperTable.setStatus("current")
_CmAccPortQosShaperEntry_Object = MibTableRow
cmAccPortQosShaperEntry = _CmAccPortQosShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1)
)
cmAccPortQosShaperEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmAccPortQosShaperIndex"),
)
if mibBuilder.loadTexts:
    cmAccPortQosShaperEntry.setStatus("current")


class _CmAccPortQosShaperIndex_Type(Integer32):
    """Custom type cmAccPortQosShaperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmAccPortQosShaperIndex_Type.__name__ = "Integer32"
_CmAccPortQosShaperIndex_Object = MibTableColumn
cmAccPortQosShaperIndex = _CmAccPortQosShaperIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 1),
    _CmAccPortQosShaperIndex_Type()
)
cmAccPortQosShaperIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperIndex.setStatus("current")
_CmAccPortQosShaperDirection_Type = TrafficDirection
_CmAccPortQosShaperDirection_Object = MibTableColumn
cmAccPortQosShaperDirection = _CmAccPortQosShaperDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 2),
    _CmAccPortQosShaperDirection_Type()
)
cmAccPortQosShaperDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortQosShaperDirection.setStatus("current")
_CmAccPortQosShaperAdminState_Type = AdminState
_CmAccPortQosShaperAdminState_Object = MibTableColumn
cmAccPortQosShaperAdminState = _CmAccPortQosShaperAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 3),
    _CmAccPortQosShaperAdminState_Type()
)
cmAccPortQosShaperAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortQosShaperAdminState.setStatus("current")
_CmAccPortQosShaperOperationalState_Type = OperationalState
_CmAccPortQosShaperOperationalState_Object = MibTableColumn
cmAccPortQosShaperOperationalState = _CmAccPortQosShaperOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 4),
    _CmAccPortQosShaperOperationalState_Type()
)
cmAccPortQosShaperOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortQosShaperOperationalState.setStatus("current")
_CmAccPortQosShaperSecondaryState_Type = SecondaryState
_CmAccPortQosShaperSecondaryState_Object = MibTableColumn
cmAccPortQosShaperSecondaryState = _CmAccPortQosShaperSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 5),
    _CmAccPortQosShaperSecondaryState_Type()
)
cmAccPortQosShaperSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortQosShaperSecondaryState.setStatus("current")
_CmAccPortQosShaperCIRLo_Type = Unsigned32
_CmAccPortQosShaperCIRLo_Object = MibTableColumn
cmAccPortQosShaperCIRLo = _CmAccPortQosShaperCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 6),
    _CmAccPortQosShaperCIRLo_Type()
)
cmAccPortQosShaperCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperCIRLo.setStatus("current")
_CmAccPortQosShaperCIRHi_Type = Unsigned32
_CmAccPortQosShaperCIRHi_Object = MibTableColumn
cmAccPortQosShaperCIRHi = _CmAccPortQosShaperCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 7),
    _CmAccPortQosShaperCIRHi_Type()
)
cmAccPortQosShaperCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperCIRHi.setStatus("current")
_CmAccPortQosShaperEIRLo_Type = Unsigned32
_CmAccPortQosShaperEIRLo_Object = MibTableColumn
cmAccPortQosShaperEIRLo = _CmAccPortQosShaperEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 8),
    _CmAccPortQosShaperEIRLo_Type()
)
cmAccPortQosShaperEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperEIRLo.setStatus("current")
_CmAccPortQosShaperEIRHi_Type = Unsigned32
_CmAccPortQosShaperEIRHi_Object = MibTableColumn
cmAccPortQosShaperEIRHi = _CmAccPortQosShaperEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 9),
    _CmAccPortQosShaperEIRHi_Type()
)
cmAccPortQosShaperEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperEIRHi.setStatus("current")
_CmAccPortQosShaperCBS_Type = Unsigned32
_CmAccPortQosShaperCBS_Object = MibTableColumn
cmAccPortQosShaperCBS = _CmAccPortQosShaperCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 10),
    _CmAccPortQosShaperCBS_Type()
)
cmAccPortQosShaperCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperCBS.setStatus("current")
_CmAccPortQosShaperEBS_Type = Unsigned32
_CmAccPortQosShaperEBS_Object = MibTableColumn
cmAccPortQosShaperEBS = _CmAccPortQosShaperEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 11),
    _CmAccPortQosShaperEBS_Type()
)
cmAccPortQosShaperEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperEBS.setStatus("current")
_CmAccPortQosShaperBufferSize_Type = Unsigned32
_CmAccPortQosShaperBufferSize_Object = MibTableColumn
cmAccPortQosShaperBufferSize = _CmAccPortQosShaperBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 12),
    _CmAccPortQosShaperBufferSize_Type()
)
cmAccPortQosShaperBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperBufferSize.setStatus("current")


class _CmAccPortQosShaperCOS_Type(Integer32):
    """Custom type cmAccPortQosShaperCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmAccPortQosShaperCOS_Type.__name__ = "Integer32"
_CmAccPortQosShaperCOS_Object = MibTableColumn
cmAccPortQosShaperCOS = _CmAccPortQosShaperCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 13),
    _CmAccPortQosShaperCOS_Type()
)
cmAccPortQosShaperCOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortQosShaperCOS.setStatus("current")
_CmAccPortQosShaperSoamCIRLo_Type = Unsigned32
_CmAccPortQosShaperSoamCIRLo_Object = MibTableColumn
cmAccPortQosShaperSoamCIRLo = _CmAccPortQosShaperSoamCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 14),
    _CmAccPortQosShaperSoamCIRLo_Type()
)
cmAccPortQosShaperSoamCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperSoamCIRLo.setStatus("current")
_CmAccPortQosShaperSoamCIRHi_Type = Unsigned32
_CmAccPortQosShaperSoamCIRHi_Object = MibTableColumn
cmAccPortQosShaperSoamCIRHi = _CmAccPortQosShaperSoamCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 15),
    _CmAccPortQosShaperSoamCIRHi_Type()
)
cmAccPortQosShaperSoamCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperSoamCIRHi.setStatus("current")
_CmAccPortQosShaperSoamEIRLo_Type = Unsigned32
_CmAccPortQosShaperSoamEIRLo_Object = MibTableColumn
cmAccPortQosShaperSoamEIRLo = _CmAccPortQosShaperSoamEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 16),
    _CmAccPortQosShaperSoamEIRLo_Type()
)
cmAccPortQosShaperSoamEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperSoamEIRLo.setStatus("current")
_CmAccPortQosShaperSoamEIRHi_Type = Unsigned32
_CmAccPortQosShaperSoamEIRHi_Object = MibTableColumn
cmAccPortQosShaperSoamEIRHi = _CmAccPortQosShaperSoamEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 17),
    _CmAccPortQosShaperSoamEIRHi_Type()
)
cmAccPortQosShaperSoamEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperSoamEIRHi.setStatus("current")
_CmAccPortQosShaperWredGreenMinQueueThreshold_Type = Unsigned32
_CmAccPortQosShaperWredGreenMinQueueThreshold_Object = MibTableColumn
cmAccPortQosShaperWredGreenMinQueueThreshold = _CmAccPortQosShaperWredGreenMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 18),
    _CmAccPortQosShaperWredGreenMinQueueThreshold_Type()
)
cmAccPortQosShaperWredGreenMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredGreenMinQueueThreshold.setStatus("current")
_CmAccPortQosShaperWredGreenMaxQueueThreshold_Type = Unsigned32
_CmAccPortQosShaperWredGreenMaxQueueThreshold_Object = MibTableColumn
cmAccPortQosShaperWredGreenMaxQueueThreshold = _CmAccPortQosShaperWredGreenMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 19),
    _CmAccPortQosShaperWredGreenMaxQueueThreshold_Type()
)
cmAccPortQosShaperWredGreenMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredGreenMaxQueueThreshold.setStatus("current")
_CmAccPortQosShaperWredGreenDropProbability_Type = Unsigned32
_CmAccPortQosShaperWredGreenDropProbability_Object = MibTableColumn
cmAccPortQosShaperWredGreenDropProbability = _CmAccPortQosShaperWredGreenDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 20),
    _CmAccPortQosShaperWredGreenDropProbability_Type()
)
cmAccPortQosShaperWredGreenDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredGreenDropProbability.setStatus("current")
_CmAccPortQosShaperWredYellowMinQueueThreshold_Type = Unsigned32
_CmAccPortQosShaperWredYellowMinQueueThreshold_Object = MibTableColumn
cmAccPortQosShaperWredYellowMinQueueThreshold = _CmAccPortQosShaperWredYellowMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 21),
    _CmAccPortQosShaperWredYellowMinQueueThreshold_Type()
)
cmAccPortQosShaperWredYellowMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredYellowMinQueueThreshold.setStatus("current")
_CmAccPortQosShaperWredYellowMaxQueueThreshold_Type = Unsigned32
_CmAccPortQosShaperWredYellowMaxQueueThreshold_Object = MibTableColumn
cmAccPortQosShaperWredYellowMaxQueueThreshold = _CmAccPortQosShaperWredYellowMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 22),
    _CmAccPortQosShaperWredYellowMaxQueueThreshold_Type()
)
cmAccPortQosShaperWredYellowMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredYellowMaxQueueThreshold.setStatus("current")
_CmAccPortQosShaperWredYellowDropProbability_Type = Unsigned32
_CmAccPortQosShaperWredYellowDropProbability_Object = MibTableColumn
cmAccPortQosShaperWredYellowDropProbability = _CmAccPortQosShaperWredYellowDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 23),
    _CmAccPortQosShaperWredYellowDropProbability_Type()
)
cmAccPortQosShaperWredYellowDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWredYellowDropProbability.setStatus("current")
_CmAccPortQosShaperAvgFrameSizeBeforeFragment_Type = Integer32
_CmAccPortQosShaperAvgFrameSizeBeforeFragment_Object = MibTableColumn
cmAccPortQosShaperAvgFrameSizeBeforeFragment = _CmAccPortQosShaperAvgFrameSizeBeforeFragment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 24),
    _CmAccPortQosShaperAvgFrameSizeBeforeFragment_Type()
)
cmAccPortQosShaperAvgFrameSizeBeforeFragment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortQosShaperAvgFrameSizeBeforeFragment.setStatus("current")
_CmAccPortQosShaperWfqWeight_Type = Integer32
_CmAccPortQosShaperWfqWeight_Object = MibTableColumn
cmAccPortQosShaperWfqWeight = _CmAccPortQosShaperWfqWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 12, 1, 25),
    _CmAccPortQosShaperWfqWeight_Type()
)
cmAccPortQosShaperWfqWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortQosShaperWfqWeight.setStatus("current")
_CmEthernetAccPortCpdV2Table_Object = MibTable
cmEthernetAccPortCpdV2Table = _CmEthernetAccPortCpdV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Table.setStatus("current")
_CmEthernetAccPortCpdV2Entry_Object = MibTableRow
cmEthernetAccPortCpdV2Entry = _CmEthernetAccPortCpdV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1)
)
cmEthernetAccPortCpdV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Index"),
)
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Entry.setStatus("current")
_CmEthernetAccPortCpdV2Index_Type = Integer32
_CmEthernetAccPortCpdV2Index_Object = MibTableColumn
cmEthernetAccPortCpdV2Index = _CmEthernetAccPortCpdV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 1),
    _CmEthernetAccPortCpdV2Index_Type()
)
cmEthernetAccPortCpdV2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Index.setStatus("current")
_CmEthernetAccPortCpdV2CiscoGroupDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2CiscoGroupDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2CiscoGroupDispType = _CmEthernetAccPortCpdV2CiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 2),
    _CmEthernetAccPortCpdV2CiscoGroupDispType_Type()
)
cmEthernetAccPortCpdV2CiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2CiscoGroupDispType.setStatus("deprecated")
_CmEthernetAccPortCpdV2IslDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2IslDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2IslDispType = _CmEthernetAccPortCpdV2IslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 3),
    _CmEthernetAccPortCpdV2IslDispType_Type()
)
cmEthernetAccPortCpdV2IslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2IslDispType.setStatus("current")
_CmEthernetAccPortCpdV2PagpDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PagpDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PagpDispType = _CmEthernetAccPortCpdV2PagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 4),
    _CmEthernetAccPortCpdV2PagpDispType_Type()
)
cmEthernetAccPortCpdV2PagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PagpDispType.setStatus("current")
_CmEthernetAccPortCpdV2UdldDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2UdldDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2UdldDispType = _CmEthernetAccPortCpdV2UdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 5),
    _CmEthernetAccPortCpdV2UdldDispType_Type()
)
cmEthernetAccPortCpdV2UdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2UdldDispType.setStatus("current")
_CmEthernetAccPortCpdV2CdpDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2CdpDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2CdpDispType = _CmEthernetAccPortCpdV2CdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 6),
    _CmEthernetAccPortCpdV2CdpDispType_Type()
)
cmEthernetAccPortCpdV2CdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2CdpDispType.setStatus("current")
_CmEthernetAccPortCpdV2VtpDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2VtpDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2VtpDispType = _CmEthernetAccPortCpdV2VtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 7),
    _CmEthernetAccPortCpdV2VtpDispType_Type()
)
cmEthernetAccPortCpdV2VtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2VtpDispType.setStatus("current")
_CmEthernetAccPortCpdV2DtpDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2DtpDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2DtpDispType = _CmEthernetAccPortCpdV2DtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 8),
    _CmEthernetAccPortCpdV2DtpDispType_Type()
)
cmEthernetAccPortCpdV2DtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2DtpDispType.setStatus("current")
_CmEthernetAccPortCpdV2PvstpPlusDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PvstpPlusDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PvstpPlusDispType = _CmEthernetAccPortCpdV2PvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 9),
    _CmEthernetAccPortCpdV2PvstpPlusDispType_Type()
)
cmEthernetAccPortCpdV2PvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PvstpPlusDispType.setStatus("current")
_CmEthernetAccPortCpdV2UplinkFastDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2UplinkFastDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2UplinkFastDispType = _CmEthernetAccPortCpdV2UplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 10),
    _CmEthernetAccPortCpdV2UplinkFastDispType_Type()
)
cmEthernetAccPortCpdV2UplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2UplinkFastDispType.setStatus("current")
_CmEthernetAccPortCpdV2VlanBridgeDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2VlanBridgeDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2VlanBridgeDispType = _CmEthernetAccPortCpdV2VlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 11),
    _CmEthernetAccPortCpdV2VlanBridgeDispType_Type()
)
cmEthernetAccPortCpdV2VlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2VlanBridgeDispType.setStatus("current")
_CmEthernetAccPortCpdV2L2PTDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2L2PTDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2L2PTDispType = _CmEthernetAccPortCpdV2L2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 12),
    _CmEthernetAccPortCpdV2L2PTDispType_Type()
)
cmEthernetAccPortCpdV2L2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2L2PTDispType.setStatus("current")
_CmEthernetAccPortCpdV2BridgeGroupDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2BridgeGroupDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2BridgeGroupDispType = _CmEthernetAccPortCpdV2BridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 13),
    _CmEthernetAccPortCpdV2BridgeGroupDispType_Type()
)
cmEthernetAccPortCpdV2BridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2BridgeGroupDispType.setStatus("deprecated")
_CmEthernetAccPortCpdV2BPDUDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2BPDUDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2BPDUDispType = _CmEthernetAccPortCpdV2BPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 14),
    _CmEthernetAccPortCpdV2BPDUDispType_Type()
)
cmEthernetAccPortCpdV2BPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2BPDUDispType.setStatus("current")
_CmEthernetAccPortCpdV2PauseDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PauseDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PauseDispType = _CmEthernetAccPortCpdV2PauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 15),
    _CmEthernetAccPortCpdV2PauseDispType_Type()
)
cmEthernetAccPortCpdV2PauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PauseDispType.setStatus("current")
_CmEthernetAccPortCpdV2LACPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2LACPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2LACPDispType = _CmEthernetAccPortCpdV2LACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 16),
    _CmEthernetAccPortCpdV2LACPDispType_Type()
)
cmEthernetAccPortCpdV2LACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2LACPDispType.setStatus("current")
_CmEthernetAccPortCpdV2LACPMarkerDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2LACPMarkerDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2LACPMarkerDispType = _CmEthernetAccPortCpdV2LACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 17),
    _CmEthernetAccPortCpdV2LACPMarkerDispType_Type()
)
cmEthernetAccPortCpdV2LACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2LACPMarkerDispType.setStatus("current")
_CmEthernetAccPortCpdV2EfmOamDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2EfmOamDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2EfmOamDispType = _CmEthernetAccPortCpdV2EfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 18),
    _CmEthernetAccPortCpdV2EfmOamDispType_Type()
)
cmEthernetAccPortCpdV2EfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2EfmOamDispType.setStatus("current")
_CmEthernetAccPortCpdV2SSMDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2SSMDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2SSMDispType = _CmEthernetAccPortCpdV2SSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 19),
    _CmEthernetAccPortCpdV2SSMDispType_Type()
)
cmEthernetAccPortCpdV2SSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2SSMDispType.setStatus("current")
_CmEthernetAccPortCpdV2PortAuthenDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PortAuthenDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PortAuthenDispType = _CmEthernetAccPortCpdV2PortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 20),
    _CmEthernetAccPortCpdV2PortAuthenDispType_Type()
)
cmEthernetAccPortCpdV2PortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PortAuthenDispType.setStatus("current")
_CmEthernetAccPortCpdV2BridgeReservedDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2BridgeReservedDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2BridgeReservedDispType = _CmEthernetAccPortCpdV2BridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 21),
    _CmEthernetAccPortCpdV2BridgeReservedDispType_Type()
)
cmEthernetAccPortCpdV2BridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2BridgeReservedDispType.setStatus("deprecated")
_CmEthernetAccPortCpdV2LANBridgesDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2LANBridgesDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2LANBridgesDispType = _CmEthernetAccPortCpdV2LANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 22),
    _CmEthernetAccPortCpdV2LANBridgesDispType_Type()
)
cmEthernetAccPortCpdV2LANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2LANBridgesDispType.setStatus("current")
_CmEthernetAccPortCpdV2GARPGroupDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2GARPGroupDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2GARPGroupDispType = _CmEthernetAccPortCpdV2GARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 23),
    _CmEthernetAccPortCpdV2GARPGroupDispType_Type()
)
cmEthernetAccPortCpdV2GARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2GARPGroupDispType.setStatus("deprecated")
_CmEthernetAccPortCpdV2GMRPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2GMRPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2GMRPDispType = _CmEthernetAccPortCpdV2GMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 24),
    _CmEthernetAccPortCpdV2GMRPDispType_Type()
)
cmEthernetAccPortCpdV2GMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2GMRPDispType.setStatus("current")
_CmEthernetAccPortCpdV2GVRPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2GVRPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2GVRPDispType = _CmEthernetAccPortCpdV2GVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 25),
    _CmEthernetAccPortCpdV2GVRPDispType_Type()
)
cmEthernetAccPortCpdV2GVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2GVRPDispType.setStatus("current")
_CmEthernetAccPortCpdV2GARPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2GARPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2GARPDispType = _CmEthernetAccPortCpdV2GARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 26),
    _CmEthernetAccPortCpdV2GARPDispType_Type()
)
cmEthernetAccPortCpdV2GARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2GARPDispType.setStatus("current")
_CmEthernetAccPortCpdV2LLDPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2LLDPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2LLDPDispType = _CmEthernetAccPortCpdV2LLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 27),
    _CmEthernetAccPortCpdV2LLDPDispType_Type()
)
cmEthernetAccPortCpdV2LLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2LLDPDispType.setStatus("deprecated")
_CmEthernetAccPortCpdV2ELMIDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2ELMIDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2ELMIDispType = _CmEthernetAccPortCpdV2ELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 28),
    _CmEthernetAccPortCpdV2ELMIDispType_Type()
)
cmEthernetAccPortCpdV2ELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2ELMIDispType.setStatus("current")
_CmEthernetAccPortCpdV2L2PTTunnelMac_Type = MacAddress
_CmEthernetAccPortCpdV2L2PTTunnelMac_Object = MibTableColumn
cmEthernetAccPortCpdV2L2PTTunnelMac = _CmEthernetAccPortCpdV2L2PTTunnelMac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 29),
    _CmEthernetAccPortCpdV2L2PTTunnelMac_Type()
)
cmEthernetAccPortCpdV2L2PTTunnelMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2L2PTTunnelMac.setStatus("current")
_CmEthernetAccPortCpdV2Mac00DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac00DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac00DispType = _CmEthernetAccPortCpdV2Mac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 30),
    _CmEthernetAccPortCpdV2Mac00DispType_Type()
)
cmEthernetAccPortCpdV2Mac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac00DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac01DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac01DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac01DispType = _CmEthernetAccPortCpdV2Mac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 31),
    _CmEthernetAccPortCpdV2Mac01DispType_Type()
)
cmEthernetAccPortCpdV2Mac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac01DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac02DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac02DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac02DispType = _CmEthernetAccPortCpdV2Mac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 32),
    _CmEthernetAccPortCpdV2Mac02DispType_Type()
)
cmEthernetAccPortCpdV2Mac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac02DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac03DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac03DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac03DispType = _CmEthernetAccPortCpdV2Mac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 33),
    _CmEthernetAccPortCpdV2Mac03DispType_Type()
)
cmEthernetAccPortCpdV2Mac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac03DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac04DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac04DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac04DispType = _CmEthernetAccPortCpdV2Mac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 34),
    _CmEthernetAccPortCpdV2Mac04DispType_Type()
)
cmEthernetAccPortCpdV2Mac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac04DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac05DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac05DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac05DispType = _CmEthernetAccPortCpdV2Mac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 35),
    _CmEthernetAccPortCpdV2Mac05DispType_Type()
)
cmEthernetAccPortCpdV2Mac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac05DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac06DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac06DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac06DispType = _CmEthernetAccPortCpdV2Mac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 36),
    _CmEthernetAccPortCpdV2Mac06DispType_Type()
)
cmEthernetAccPortCpdV2Mac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac06DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac07DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac07DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac07DispType = _CmEthernetAccPortCpdV2Mac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 37),
    _CmEthernetAccPortCpdV2Mac07DispType_Type()
)
cmEthernetAccPortCpdV2Mac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac07DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac08DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac08DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac08DispType = _CmEthernetAccPortCpdV2Mac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 38),
    _CmEthernetAccPortCpdV2Mac08DispType_Type()
)
cmEthernetAccPortCpdV2Mac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac08DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac09DispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac09DispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac09DispType = _CmEthernetAccPortCpdV2Mac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 39),
    _CmEthernetAccPortCpdV2Mac09DispType_Type()
)
cmEthernetAccPortCpdV2Mac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac09DispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0ADispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0ADispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0ADispType = _CmEthernetAccPortCpdV2Mac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 40),
    _CmEthernetAccPortCpdV2Mac0ADispType_Type()
)
cmEthernetAccPortCpdV2Mac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0ADispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0BDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0BDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0BDispType = _CmEthernetAccPortCpdV2Mac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 41),
    _CmEthernetAccPortCpdV2Mac0BDispType_Type()
)
cmEthernetAccPortCpdV2Mac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0BDispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0CDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0CDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0CDispType = _CmEthernetAccPortCpdV2Mac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 42),
    _CmEthernetAccPortCpdV2Mac0CDispType_Type()
)
cmEthernetAccPortCpdV2Mac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0CDispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0DDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0DDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0DDispType = _CmEthernetAccPortCpdV2Mac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 43),
    _CmEthernetAccPortCpdV2Mac0DDispType_Type()
)
cmEthernetAccPortCpdV2Mac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0DDispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0EDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0EDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0EDispType = _CmEthernetAccPortCpdV2Mac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 44),
    _CmEthernetAccPortCpdV2Mac0EDispType_Type()
)
cmEthernetAccPortCpdV2Mac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0EDispType.setStatus("current")
_CmEthernetAccPortCpdV2Mac0FDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2Mac0FDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2Mac0FDispType = _CmEthernetAccPortCpdV2Mac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 45),
    _CmEthernetAccPortCpdV2Mac0FDispType_Type()
)
cmEthernetAccPortCpdV2Mac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2Mac0FDispType.setStatus("current")
_CmEthernetAccPortCpdV2NearestLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2NearestLLDPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2NearestLLDPDispType = _CmEthernetAccPortCpdV2NearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 46),
    _CmEthernetAccPortCpdV2NearestLLDPDispType_Type()
)
cmEthernetAccPortCpdV2NearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2NearestLLDPDispType.setStatus("current")
_CmEthernetAccPortCpdV2NonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2NonTpmrLLDPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2NonTpmrLLDPDispType = _CmEthernetAccPortCpdV2NonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 47),
    _CmEthernetAccPortCpdV2NonTpmrLLDPDispType_Type()
)
cmEthernetAccPortCpdV2NonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2NonTpmrLLDPDispType.setStatus("current")
_CmEthernetAccPortCpdV2CustomerLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2CustomerLLDPDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2CustomerLLDPDispType = _CmEthernetAccPortCpdV2CustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 48),
    _CmEthernetAccPortCpdV2CustomerLLDPDispType_Type()
)
cmEthernetAccPortCpdV2CustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2CustomerLLDPDispType.setStatus("current")
_CmEthernetAccPortCpdV2PtpUntaggedDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PtpUntaggedDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PtpUntaggedDispType = _CmEthernetAccPortCpdV2PtpUntaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 49),
    _CmEthernetAccPortCpdV2PtpUntaggedDispType_Type()
)
cmEthernetAccPortCpdV2PtpUntaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PtpUntaggedDispType.setStatus("current")
_CmEthernetAccPortCpdV2PtpTaggedDispType_Type = CmControlProtocolDispType
_CmEthernetAccPortCpdV2PtpTaggedDispType_Object = MibTableColumn
cmEthernetAccPortCpdV2PtpTaggedDispType = _CmEthernetAccPortCpdV2PtpTaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 13, 1, 50),
    _CmEthernetAccPortCpdV2PtpTaggedDispType_Type()
)
cmEthernetAccPortCpdV2PtpTaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortCpdV2PtpTaggedDispType.setStatus("current")
_CmFlowCpdV2Table_Object = MibTable
cmFlowCpdV2Table = _CmFlowCpdV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14)
)
if mibBuilder.loadTexts:
    cmFlowCpdV2Table.setStatus("current")
_CmFlowCpdV2Entry_Object = MibTableRow
cmFlowCpdV2Entry = _CmFlowCpdV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1)
)
cmFlowCpdV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowCpdV2Index"),
)
if mibBuilder.loadTexts:
    cmFlowCpdV2Entry.setStatus("current")
_CmFlowCpdV2Index_Type = Integer32
_CmFlowCpdV2Index_Object = MibTableColumn
cmFlowCpdV2Index = _CmFlowCpdV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 1),
    _CmFlowCpdV2Index_Type()
)
cmFlowCpdV2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowCpdV2Index.setStatus("current")
_CmFlowCpdV2CiscoGroupDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2CiscoGroupDispType_Object = MibTableColumn
cmFlowCpdV2CiscoGroupDispType = _CmFlowCpdV2CiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 2),
    _CmFlowCpdV2CiscoGroupDispType_Type()
)
cmFlowCpdV2CiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2CiscoGroupDispType.setStatus("deprecated")
_CmFlowCpdV2IslDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2IslDispType_Object = MibTableColumn
cmFlowCpdV2IslDispType = _CmFlowCpdV2IslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 3),
    _CmFlowCpdV2IslDispType_Type()
)
cmFlowCpdV2IslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2IslDispType.setStatus("current")
_CmFlowCpdV2PagpDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2PagpDispType_Object = MibTableColumn
cmFlowCpdV2PagpDispType = _CmFlowCpdV2PagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 4),
    _CmFlowCpdV2PagpDispType_Type()
)
cmFlowCpdV2PagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2PagpDispType.setStatus("current")
_CmFlowCpdV2UdldDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2UdldDispType_Object = MibTableColumn
cmFlowCpdV2UdldDispType = _CmFlowCpdV2UdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 5),
    _CmFlowCpdV2UdldDispType_Type()
)
cmFlowCpdV2UdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2UdldDispType.setStatus("current")
_CmFlowCpdV2CdpDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2CdpDispType_Object = MibTableColumn
cmFlowCpdV2CdpDispType = _CmFlowCpdV2CdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 6),
    _CmFlowCpdV2CdpDispType_Type()
)
cmFlowCpdV2CdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2CdpDispType.setStatus("current")
_CmFlowCpdV2VtpDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2VtpDispType_Object = MibTableColumn
cmFlowCpdV2VtpDispType = _CmFlowCpdV2VtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 7),
    _CmFlowCpdV2VtpDispType_Type()
)
cmFlowCpdV2VtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2VtpDispType.setStatus("current")
_CmFlowCpdV2DtpDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2DtpDispType_Object = MibTableColumn
cmFlowCpdV2DtpDispType = _CmFlowCpdV2DtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 8),
    _CmFlowCpdV2DtpDispType_Type()
)
cmFlowCpdV2DtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2DtpDispType.setStatus("current")
_CmFlowCpdV2PvstpPlusDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2PvstpPlusDispType_Object = MibTableColumn
cmFlowCpdV2PvstpPlusDispType = _CmFlowCpdV2PvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 9),
    _CmFlowCpdV2PvstpPlusDispType_Type()
)
cmFlowCpdV2PvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2PvstpPlusDispType.setStatus("current")
_CmFlowCpdV2UplinkFastDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2UplinkFastDispType_Object = MibTableColumn
cmFlowCpdV2UplinkFastDispType = _CmFlowCpdV2UplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 10),
    _CmFlowCpdV2UplinkFastDispType_Type()
)
cmFlowCpdV2UplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2UplinkFastDispType.setStatus("current")
_CmFlowCpdV2VlanBridgeDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2VlanBridgeDispType_Object = MibTableColumn
cmFlowCpdV2VlanBridgeDispType = _CmFlowCpdV2VlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 11),
    _CmFlowCpdV2VlanBridgeDispType_Type()
)
cmFlowCpdV2VlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2VlanBridgeDispType.setStatus("current")
_CmFlowCpdV2L2PTDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2L2PTDispType_Object = MibTableColumn
cmFlowCpdV2L2PTDispType = _CmFlowCpdV2L2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 12),
    _CmFlowCpdV2L2PTDispType_Type()
)
cmFlowCpdV2L2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2L2PTDispType.setStatus("current")
_CmFlowCpdV2BridgeGroupDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2BridgeGroupDispType_Object = MibTableColumn
cmFlowCpdV2BridgeGroupDispType = _CmFlowCpdV2BridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 13),
    _CmFlowCpdV2BridgeGroupDispType_Type()
)
cmFlowCpdV2BridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2BridgeGroupDispType.setStatus("deprecated")
_CmFlowCpdV2BPDUDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2BPDUDispType_Object = MibTableColumn
cmFlowCpdV2BPDUDispType = _CmFlowCpdV2BPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 14),
    _CmFlowCpdV2BPDUDispType_Type()
)
cmFlowCpdV2BPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2BPDUDispType.setStatus("current")
_CmFlowCpdV2PauseDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2PauseDispType_Object = MibTableColumn
cmFlowCpdV2PauseDispType = _CmFlowCpdV2PauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 15),
    _CmFlowCpdV2PauseDispType_Type()
)
cmFlowCpdV2PauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2PauseDispType.setStatus("current")
_CmFlowCpdV2LACPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2LACPDispType_Object = MibTableColumn
cmFlowCpdV2LACPDispType = _CmFlowCpdV2LACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 16),
    _CmFlowCpdV2LACPDispType_Type()
)
cmFlowCpdV2LACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2LACPDispType.setStatus("current")
_CmFlowCpdV2LACPMarkerDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2LACPMarkerDispType_Object = MibTableColumn
cmFlowCpdV2LACPMarkerDispType = _CmFlowCpdV2LACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 17),
    _CmFlowCpdV2LACPMarkerDispType_Type()
)
cmFlowCpdV2LACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2LACPMarkerDispType.setStatus("current")
_CmFlowCpdV2EfmOamDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2EfmOamDispType_Object = MibTableColumn
cmFlowCpdV2EfmOamDispType = _CmFlowCpdV2EfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 18),
    _CmFlowCpdV2EfmOamDispType_Type()
)
cmFlowCpdV2EfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2EfmOamDispType.setStatus("current")
_CmFlowCpdV2SSMDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2SSMDispType_Object = MibTableColumn
cmFlowCpdV2SSMDispType = _CmFlowCpdV2SSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 19),
    _CmFlowCpdV2SSMDispType_Type()
)
cmFlowCpdV2SSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2SSMDispType.setStatus("current")
_CmFlowCpdV2PortAuthenDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2PortAuthenDispType_Object = MibTableColumn
cmFlowCpdV2PortAuthenDispType = _CmFlowCpdV2PortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 20),
    _CmFlowCpdV2PortAuthenDispType_Type()
)
cmFlowCpdV2PortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2PortAuthenDispType.setStatus("current")
_CmFlowCpdV2BridgeReservedDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2BridgeReservedDispType_Object = MibTableColumn
cmFlowCpdV2BridgeReservedDispType = _CmFlowCpdV2BridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 21),
    _CmFlowCpdV2BridgeReservedDispType_Type()
)
cmFlowCpdV2BridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2BridgeReservedDispType.setStatus("deprecated")
_CmFlowCpdV2LANBridgesDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2LANBridgesDispType_Object = MibTableColumn
cmFlowCpdV2LANBridgesDispType = _CmFlowCpdV2LANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 22),
    _CmFlowCpdV2LANBridgesDispType_Type()
)
cmFlowCpdV2LANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2LANBridgesDispType.setStatus("current")
_CmFlowCpdV2GARPGroupDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2GARPGroupDispType_Object = MibTableColumn
cmFlowCpdV2GARPGroupDispType = _CmFlowCpdV2GARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 23),
    _CmFlowCpdV2GARPGroupDispType_Type()
)
cmFlowCpdV2GARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2GARPGroupDispType.setStatus("deprecated")
_CmFlowCpdV2GMRPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2GMRPDispType_Object = MibTableColumn
cmFlowCpdV2GMRPDispType = _CmFlowCpdV2GMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 24),
    _CmFlowCpdV2GMRPDispType_Type()
)
cmFlowCpdV2GMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2GMRPDispType.setStatus("current")
_CmFlowCpdV2GVRPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2GVRPDispType_Object = MibTableColumn
cmFlowCpdV2GVRPDispType = _CmFlowCpdV2GVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 25),
    _CmFlowCpdV2GVRPDispType_Type()
)
cmFlowCpdV2GVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2GVRPDispType.setStatus("current")
_CmFlowCpdV2GARPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2GARPDispType_Object = MibTableColumn
cmFlowCpdV2GARPDispType = _CmFlowCpdV2GARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 26),
    _CmFlowCpdV2GARPDispType_Type()
)
cmFlowCpdV2GARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2GARPDispType.setStatus("current")
_CmFlowCpdV2ActiveControlProtocols_Type = CmActiveControlProtocolsType
_CmFlowCpdV2ActiveControlProtocols_Object = MibTableColumn
cmFlowCpdV2ActiveControlProtocols = _CmFlowCpdV2ActiveControlProtocols_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 27),
    _CmFlowCpdV2ActiveControlProtocols_Type()
)
cmFlowCpdV2ActiveControlProtocols.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowCpdV2ActiveControlProtocols.setStatus("current")
_CmFlowCpdV2LLDPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2LLDPDispType_Object = MibTableColumn
cmFlowCpdV2LLDPDispType = _CmFlowCpdV2LLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 28),
    _CmFlowCpdV2LLDPDispType_Type()
)
cmFlowCpdV2LLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2LLDPDispType.setStatus("deprecated")
_CmFlowCpdV2ELMIDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2ELMIDispType_Object = MibTableColumn
cmFlowCpdV2ELMIDispType = _CmFlowCpdV2ELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 29),
    _CmFlowCpdV2ELMIDispType_Type()
)
cmFlowCpdV2ELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2ELMIDispType.setStatus("current")
_CmFlowCpdV2Mac00DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac00DispType_Object = MibTableColumn
cmFlowCpdV2Mac00DispType = _CmFlowCpdV2Mac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 30),
    _CmFlowCpdV2Mac00DispType_Type()
)
cmFlowCpdV2Mac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac00DispType.setStatus("current")
_CmFlowCpdV2Mac01DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac01DispType_Object = MibTableColumn
cmFlowCpdV2Mac01DispType = _CmFlowCpdV2Mac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 31),
    _CmFlowCpdV2Mac01DispType_Type()
)
cmFlowCpdV2Mac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac01DispType.setStatus("current")
_CmFlowCpdV2Mac02DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac02DispType_Object = MibTableColumn
cmFlowCpdV2Mac02DispType = _CmFlowCpdV2Mac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 32),
    _CmFlowCpdV2Mac02DispType_Type()
)
cmFlowCpdV2Mac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac02DispType.setStatus("current")
_CmFlowCpdV2Mac03DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac03DispType_Object = MibTableColumn
cmFlowCpdV2Mac03DispType = _CmFlowCpdV2Mac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 33),
    _CmFlowCpdV2Mac03DispType_Type()
)
cmFlowCpdV2Mac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac03DispType.setStatus("current")
_CmFlowCpdV2Mac04DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac04DispType_Object = MibTableColumn
cmFlowCpdV2Mac04DispType = _CmFlowCpdV2Mac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 34),
    _CmFlowCpdV2Mac04DispType_Type()
)
cmFlowCpdV2Mac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac04DispType.setStatus("current")
_CmFlowCpdV2Mac05DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac05DispType_Object = MibTableColumn
cmFlowCpdV2Mac05DispType = _CmFlowCpdV2Mac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 35),
    _CmFlowCpdV2Mac05DispType_Type()
)
cmFlowCpdV2Mac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac05DispType.setStatus("current")
_CmFlowCpdV2Mac06DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac06DispType_Object = MibTableColumn
cmFlowCpdV2Mac06DispType = _CmFlowCpdV2Mac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 36),
    _CmFlowCpdV2Mac06DispType_Type()
)
cmFlowCpdV2Mac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac06DispType.setStatus("current")
_CmFlowCpdV2Mac07DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac07DispType_Object = MibTableColumn
cmFlowCpdV2Mac07DispType = _CmFlowCpdV2Mac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 37),
    _CmFlowCpdV2Mac07DispType_Type()
)
cmFlowCpdV2Mac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac07DispType.setStatus("current")
_CmFlowCpdV2Mac08DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac08DispType_Object = MibTableColumn
cmFlowCpdV2Mac08DispType = _CmFlowCpdV2Mac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 38),
    _CmFlowCpdV2Mac08DispType_Type()
)
cmFlowCpdV2Mac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac08DispType.setStatus("current")
_CmFlowCpdV2Mac09DispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac09DispType_Object = MibTableColumn
cmFlowCpdV2Mac09DispType = _CmFlowCpdV2Mac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 39),
    _CmFlowCpdV2Mac09DispType_Type()
)
cmFlowCpdV2Mac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac09DispType.setStatus("current")
_CmFlowCpdV2Mac0ADispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0ADispType_Object = MibTableColumn
cmFlowCpdV2Mac0ADispType = _CmFlowCpdV2Mac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 40),
    _CmFlowCpdV2Mac0ADispType_Type()
)
cmFlowCpdV2Mac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0ADispType.setStatus("current")
_CmFlowCpdV2Mac0BDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0BDispType_Object = MibTableColumn
cmFlowCpdV2Mac0BDispType = _CmFlowCpdV2Mac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 41),
    _CmFlowCpdV2Mac0BDispType_Type()
)
cmFlowCpdV2Mac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0BDispType.setStatus("current")
_CmFlowCpdV2Mac0CDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0CDispType_Object = MibTableColumn
cmFlowCpdV2Mac0CDispType = _CmFlowCpdV2Mac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 42),
    _CmFlowCpdV2Mac0CDispType_Type()
)
cmFlowCpdV2Mac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0CDispType.setStatus("current")
_CmFlowCpdV2Mac0DDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0DDispType_Object = MibTableColumn
cmFlowCpdV2Mac0DDispType = _CmFlowCpdV2Mac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 43),
    _CmFlowCpdV2Mac0DDispType_Type()
)
cmFlowCpdV2Mac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0DDispType.setStatus("current")
_CmFlowCpdV2Mac0EDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0EDispType_Object = MibTableColumn
cmFlowCpdV2Mac0EDispType = _CmFlowCpdV2Mac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 44),
    _CmFlowCpdV2Mac0EDispType_Type()
)
cmFlowCpdV2Mac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0EDispType.setStatus("current")
_CmFlowCpdV2Mac0FDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2Mac0FDispType_Object = MibTableColumn
cmFlowCpdV2Mac0FDispType = _CmFlowCpdV2Mac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 45),
    _CmFlowCpdV2Mac0FDispType_Type()
)
cmFlowCpdV2Mac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2Mac0FDispType.setStatus("current")
_CmFlowCpdV2NearestLLDPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2NearestLLDPDispType_Object = MibTableColumn
cmFlowCpdV2NearestLLDPDispType = _CmFlowCpdV2NearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 46),
    _CmFlowCpdV2NearestLLDPDispType_Type()
)
cmFlowCpdV2NearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2NearestLLDPDispType.setStatus("current")
_CmFlowCpdV2NonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2NonTpmrLLDPDispType_Object = MibTableColumn
cmFlowCpdV2NonTpmrLLDPDispType = _CmFlowCpdV2NonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 47),
    _CmFlowCpdV2NonTpmrLLDPDispType_Type()
)
cmFlowCpdV2NonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2NonTpmrLLDPDispType.setStatus("current")
_CmFlowCpdV2CustomerLLDPDispType_Type = CmControlProtocolDispType
_CmFlowCpdV2CustomerLLDPDispType_Object = MibTableColumn
cmFlowCpdV2CustomerLLDPDispType = _CmFlowCpdV2CustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 14, 1, 48),
    _CmFlowCpdV2CustomerLLDPDispType_Type()
)
cmFlowCpdV2CustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowCpdV2CustomerLLDPDispType.setStatus("current")
_CmEthernetNetPortCpdV2Table_Object = MibTable
cmEthernetNetPortCpdV2Table = _CmEthernetNetPortCpdV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Table.setStatus("current")
_CmEthernetNetPortCpdV2Entry_Object = MibTableRow
cmEthernetNetPortCpdV2Entry = _CmEthernetNetPortCpdV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1)
)
cmEthernetNetPortCpdV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Index"),
)
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Entry.setStatus("current")
_CmEthernetNetPortCpdV2Index_Type = Integer32
_CmEthernetNetPortCpdV2Index_Object = MibTableColumn
cmEthernetNetPortCpdV2Index = _CmEthernetNetPortCpdV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 1),
    _CmEthernetNetPortCpdV2Index_Type()
)
cmEthernetNetPortCpdV2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Index.setStatus("current")
_CmEthernetNetPortCpdV2CiscoGroupDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2CiscoGroupDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2CiscoGroupDispType = _CmEthernetNetPortCpdV2CiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 2),
    _CmEthernetNetPortCpdV2CiscoGroupDispType_Type()
)
cmEthernetNetPortCpdV2CiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2CiscoGroupDispType.setStatus("deprecated")
_CmEthernetNetPortCpdV2IslDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2IslDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2IslDispType = _CmEthernetNetPortCpdV2IslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 3),
    _CmEthernetNetPortCpdV2IslDispType_Type()
)
cmEthernetNetPortCpdV2IslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2IslDispType.setStatus("current")
_CmEthernetNetPortCpdV2PagpDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PagpDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PagpDispType = _CmEthernetNetPortCpdV2PagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 4),
    _CmEthernetNetPortCpdV2PagpDispType_Type()
)
cmEthernetNetPortCpdV2PagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PagpDispType.setStatus("current")
_CmEthernetNetPortCpdV2UdldDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2UdldDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2UdldDispType = _CmEthernetNetPortCpdV2UdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 5),
    _CmEthernetNetPortCpdV2UdldDispType_Type()
)
cmEthernetNetPortCpdV2UdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2UdldDispType.setStatus("current")
_CmEthernetNetPortCpdV2CdpDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2CdpDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2CdpDispType = _CmEthernetNetPortCpdV2CdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 6),
    _CmEthernetNetPortCpdV2CdpDispType_Type()
)
cmEthernetNetPortCpdV2CdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2CdpDispType.setStatus("current")
_CmEthernetNetPortCpdV2VtpDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2VtpDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2VtpDispType = _CmEthernetNetPortCpdV2VtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 7),
    _CmEthernetNetPortCpdV2VtpDispType_Type()
)
cmEthernetNetPortCpdV2VtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2VtpDispType.setStatus("current")
_CmEthernetNetPortCpdV2DtpDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2DtpDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2DtpDispType = _CmEthernetNetPortCpdV2DtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 8),
    _CmEthernetNetPortCpdV2DtpDispType_Type()
)
cmEthernetNetPortCpdV2DtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2DtpDispType.setStatus("current")
_CmEthernetNetPortCpdV2PvstpPlusDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PvstpPlusDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PvstpPlusDispType = _CmEthernetNetPortCpdV2PvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 9),
    _CmEthernetNetPortCpdV2PvstpPlusDispType_Type()
)
cmEthernetNetPortCpdV2PvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PvstpPlusDispType.setStatus("current")
_CmEthernetNetPortCpdV2UplinkFastDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2UplinkFastDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2UplinkFastDispType = _CmEthernetNetPortCpdV2UplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 10),
    _CmEthernetNetPortCpdV2UplinkFastDispType_Type()
)
cmEthernetNetPortCpdV2UplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2UplinkFastDispType.setStatus("current")
_CmEthernetNetPortCpdV2VlanBridgeDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2VlanBridgeDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2VlanBridgeDispType = _CmEthernetNetPortCpdV2VlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 11),
    _CmEthernetNetPortCpdV2VlanBridgeDispType_Type()
)
cmEthernetNetPortCpdV2VlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2VlanBridgeDispType.setStatus("current")
_CmEthernetNetPortCpdV2L2PTDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2L2PTDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2L2PTDispType = _CmEthernetNetPortCpdV2L2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 12),
    _CmEthernetNetPortCpdV2L2PTDispType_Type()
)
cmEthernetNetPortCpdV2L2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2L2PTDispType.setStatus("current")
_CmEthernetNetPortCpdV2BridgeGroupDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2BridgeGroupDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2BridgeGroupDispType = _CmEthernetNetPortCpdV2BridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 13),
    _CmEthernetNetPortCpdV2BridgeGroupDispType_Type()
)
cmEthernetNetPortCpdV2BridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2BridgeGroupDispType.setStatus("deprecated")
_CmEthernetNetPortCpdV2BPDUDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2BPDUDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2BPDUDispType = _CmEthernetNetPortCpdV2BPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 14),
    _CmEthernetNetPortCpdV2BPDUDispType_Type()
)
cmEthernetNetPortCpdV2BPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2BPDUDispType.setStatus("current")
_CmEthernetNetPortCpdV2PauseDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PauseDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PauseDispType = _CmEthernetNetPortCpdV2PauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 15),
    _CmEthernetNetPortCpdV2PauseDispType_Type()
)
cmEthernetNetPortCpdV2PauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PauseDispType.setStatus("current")
_CmEthernetNetPortCpdV2LACPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2LACPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2LACPDispType = _CmEthernetNetPortCpdV2LACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 16),
    _CmEthernetNetPortCpdV2LACPDispType_Type()
)
cmEthernetNetPortCpdV2LACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2LACPDispType.setStatus("current")
_CmEthernetNetPortCpdV2LACPMarkerDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2LACPMarkerDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2LACPMarkerDispType = _CmEthernetNetPortCpdV2LACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 17),
    _CmEthernetNetPortCpdV2LACPMarkerDispType_Type()
)
cmEthernetNetPortCpdV2LACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2LACPMarkerDispType.setStatus("current")
_CmEthernetNetPortCpdV2EfmOamDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2EfmOamDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2EfmOamDispType = _CmEthernetNetPortCpdV2EfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 18),
    _CmEthernetNetPortCpdV2EfmOamDispType_Type()
)
cmEthernetNetPortCpdV2EfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2EfmOamDispType.setStatus("current")
_CmEthernetNetPortCpdV2SSMDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2SSMDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2SSMDispType = _CmEthernetNetPortCpdV2SSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 19),
    _CmEthernetNetPortCpdV2SSMDispType_Type()
)
cmEthernetNetPortCpdV2SSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2SSMDispType.setStatus("current")
_CmEthernetNetPortCpdV2PortAuthenDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PortAuthenDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PortAuthenDispType = _CmEthernetNetPortCpdV2PortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 20),
    _CmEthernetNetPortCpdV2PortAuthenDispType_Type()
)
cmEthernetNetPortCpdV2PortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PortAuthenDispType.setStatus("current")
_CmEthernetNetPortCpdV2BridgeReservedDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2BridgeReservedDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2BridgeReservedDispType = _CmEthernetNetPortCpdV2BridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 21),
    _CmEthernetNetPortCpdV2BridgeReservedDispType_Type()
)
cmEthernetNetPortCpdV2BridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2BridgeReservedDispType.setStatus("deprecated")
_CmEthernetNetPortCpdV2LANBridgesDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2LANBridgesDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2LANBridgesDispType = _CmEthernetNetPortCpdV2LANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 22),
    _CmEthernetNetPortCpdV2LANBridgesDispType_Type()
)
cmEthernetNetPortCpdV2LANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2LANBridgesDispType.setStatus("current")
_CmEthernetNetPortCpdV2GARPGroupDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2GARPGroupDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2GARPGroupDispType = _CmEthernetNetPortCpdV2GARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 23),
    _CmEthernetNetPortCpdV2GARPGroupDispType_Type()
)
cmEthernetNetPortCpdV2GARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2GARPGroupDispType.setStatus("deprecated")
_CmEthernetNetPortCpdV2GMRPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2GMRPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2GMRPDispType = _CmEthernetNetPortCpdV2GMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 24),
    _CmEthernetNetPortCpdV2GMRPDispType_Type()
)
cmEthernetNetPortCpdV2GMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2GMRPDispType.setStatus("current")
_CmEthernetNetPortCpdV2GVRPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2GVRPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2GVRPDispType = _CmEthernetNetPortCpdV2GVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 25),
    _CmEthernetNetPortCpdV2GVRPDispType_Type()
)
cmEthernetNetPortCpdV2GVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2GVRPDispType.setStatus("current")
_CmEthernetNetPortCpdV2GARPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2GARPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2GARPDispType = _CmEthernetNetPortCpdV2GARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 26),
    _CmEthernetNetPortCpdV2GARPDispType_Type()
)
cmEthernetNetPortCpdV2GARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2GARPDispType.setStatus("current")
_CmEthernetNetPortCpdV2LLDPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2LLDPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2LLDPDispType = _CmEthernetNetPortCpdV2LLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 27),
    _CmEthernetNetPortCpdV2LLDPDispType_Type()
)
cmEthernetNetPortCpdV2LLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2LLDPDispType.setStatus("deprecated")
_CmEthernetNetPortCpdV2ELMIDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2ELMIDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2ELMIDispType = _CmEthernetNetPortCpdV2ELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 28),
    _CmEthernetNetPortCpdV2ELMIDispType_Type()
)
cmEthernetNetPortCpdV2ELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2ELMIDispType.setStatus("current")
_CmEthernetNetPortCpdV2L2PTTunnelMac_Type = MacAddress
_CmEthernetNetPortCpdV2L2PTTunnelMac_Object = MibTableColumn
cmEthernetNetPortCpdV2L2PTTunnelMac = _CmEthernetNetPortCpdV2L2PTTunnelMac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 29),
    _CmEthernetNetPortCpdV2L2PTTunnelMac_Type()
)
cmEthernetNetPortCpdV2L2PTTunnelMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2L2PTTunnelMac.setStatus("current")
_CmEthernetNetPortCpdV2Mac00DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac00DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac00DispType = _CmEthernetNetPortCpdV2Mac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 30),
    _CmEthernetNetPortCpdV2Mac00DispType_Type()
)
cmEthernetNetPortCpdV2Mac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac00DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac01DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac01DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac01DispType = _CmEthernetNetPortCpdV2Mac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 31),
    _CmEthernetNetPortCpdV2Mac01DispType_Type()
)
cmEthernetNetPortCpdV2Mac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac01DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac02DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac02DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac02DispType = _CmEthernetNetPortCpdV2Mac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 32),
    _CmEthernetNetPortCpdV2Mac02DispType_Type()
)
cmEthernetNetPortCpdV2Mac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac02DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac03DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac03DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac03DispType = _CmEthernetNetPortCpdV2Mac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 33),
    _CmEthernetNetPortCpdV2Mac03DispType_Type()
)
cmEthernetNetPortCpdV2Mac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac03DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac04DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac04DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac04DispType = _CmEthernetNetPortCpdV2Mac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 34),
    _CmEthernetNetPortCpdV2Mac04DispType_Type()
)
cmEthernetNetPortCpdV2Mac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac04DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac05DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac05DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac05DispType = _CmEthernetNetPortCpdV2Mac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 35),
    _CmEthernetNetPortCpdV2Mac05DispType_Type()
)
cmEthernetNetPortCpdV2Mac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac05DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac06DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac06DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac06DispType = _CmEthernetNetPortCpdV2Mac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 36),
    _CmEthernetNetPortCpdV2Mac06DispType_Type()
)
cmEthernetNetPortCpdV2Mac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac06DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac07DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac07DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac07DispType = _CmEthernetNetPortCpdV2Mac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 37),
    _CmEthernetNetPortCpdV2Mac07DispType_Type()
)
cmEthernetNetPortCpdV2Mac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac07DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac08DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac08DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac08DispType = _CmEthernetNetPortCpdV2Mac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 38),
    _CmEthernetNetPortCpdV2Mac08DispType_Type()
)
cmEthernetNetPortCpdV2Mac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac08DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac09DispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac09DispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac09DispType = _CmEthernetNetPortCpdV2Mac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 39),
    _CmEthernetNetPortCpdV2Mac09DispType_Type()
)
cmEthernetNetPortCpdV2Mac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac09DispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0ADispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0ADispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0ADispType = _CmEthernetNetPortCpdV2Mac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 40),
    _CmEthernetNetPortCpdV2Mac0ADispType_Type()
)
cmEthernetNetPortCpdV2Mac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0ADispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0BDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0BDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0BDispType = _CmEthernetNetPortCpdV2Mac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 41),
    _CmEthernetNetPortCpdV2Mac0BDispType_Type()
)
cmEthernetNetPortCpdV2Mac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0BDispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0CDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0CDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0CDispType = _CmEthernetNetPortCpdV2Mac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 42),
    _CmEthernetNetPortCpdV2Mac0CDispType_Type()
)
cmEthernetNetPortCpdV2Mac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0CDispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0DDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0DDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0DDispType = _CmEthernetNetPortCpdV2Mac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 43),
    _CmEthernetNetPortCpdV2Mac0DDispType_Type()
)
cmEthernetNetPortCpdV2Mac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0DDispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0EDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0EDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0EDispType = _CmEthernetNetPortCpdV2Mac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 44),
    _CmEthernetNetPortCpdV2Mac0EDispType_Type()
)
cmEthernetNetPortCpdV2Mac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0EDispType.setStatus("current")
_CmEthernetNetPortCpdV2Mac0FDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2Mac0FDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2Mac0FDispType = _CmEthernetNetPortCpdV2Mac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 45),
    _CmEthernetNetPortCpdV2Mac0FDispType_Type()
)
cmEthernetNetPortCpdV2Mac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2Mac0FDispType.setStatus("current")
_CmEthernetNetPortCpdV2NearestLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2NearestLLDPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2NearestLLDPDispType = _CmEthernetNetPortCpdV2NearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 46),
    _CmEthernetNetPortCpdV2NearestLLDPDispType_Type()
)
cmEthernetNetPortCpdV2NearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2NearestLLDPDispType.setStatus("current")
_CmEthernetNetPortCpdV2NonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2NonTpmrLLDPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2NonTpmrLLDPDispType = _CmEthernetNetPortCpdV2NonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 47),
    _CmEthernetNetPortCpdV2NonTpmrLLDPDispType_Type()
)
cmEthernetNetPortCpdV2NonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2NonTpmrLLDPDispType.setStatus("current")
_CmEthernetNetPortCpdV2CustomerLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2CustomerLLDPDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2CustomerLLDPDispType = _CmEthernetNetPortCpdV2CustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 48),
    _CmEthernetNetPortCpdV2CustomerLLDPDispType_Type()
)
cmEthernetNetPortCpdV2CustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2CustomerLLDPDispType.setStatus("current")
_CmEthernetNetPortCpdV2PtpUntaggedDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PtpUntaggedDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PtpUntaggedDispType = _CmEthernetNetPortCpdV2PtpUntaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 49),
    _CmEthernetNetPortCpdV2PtpUntaggedDispType_Type()
)
cmEthernetNetPortCpdV2PtpUntaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PtpUntaggedDispType.setStatus("current")
_CmEthernetNetPortCpdV2PtpTaggedDispType_Type = CmControlProtocolDispType
_CmEthernetNetPortCpdV2PtpTaggedDispType_Object = MibTableColumn
cmEthernetNetPortCpdV2PtpTaggedDispType = _CmEthernetNetPortCpdV2PtpTaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 15, 1, 50),
    _CmEthernetNetPortCpdV2PtpTaggedDispType_Type()
)
cmEthernetNetPortCpdV2PtpTaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortCpdV2PtpTaggedDispType.setStatus("current")
_BitsPortTable_Object = MibTable
bitsPortTable = _BitsPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16)
)
if mibBuilder.loadTexts:
    bitsPortTable.setStatus("current")
_BitsPortEntry_Object = MibTableRow
bitsPortEntry = _BitsPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1)
)
bitsPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "bitsPortTypeIndex"),
    (0, "CM-FACILITY-MIB", "bitsPortIndex"),
)
if mibBuilder.loadTexts:
    bitsPortEntry.setStatus("current")


class _BitsPortTypeIndex_Type(Integer32):
    """Custom type bitsPortTypeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_BitsPortTypeIndex_Type.__name__ = "Integer32"
_BitsPortTypeIndex_Object = MibTableColumn
bitsPortTypeIndex = _BitsPortTypeIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 1),
    _BitsPortTypeIndex_Type()
)
bitsPortTypeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortTypeIndex.setStatus("current")


class _BitsPortIndex_Type(Integer32):
    """Custom type bitsPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BitsPortIndex_Type.__name__ = "Integer32"
_BitsPortIndex_Object = MibTableColumn
bitsPortIndex = _BitsPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 2),
    _BitsPortIndex_Type()
)
bitsPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortIndex.setStatus("current")
_BitsPortIfIndex_Type = InterfaceIndex
_BitsPortIfIndex_Object = MibTableColumn
bitsPortIfIndex = _BitsPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 3),
    _BitsPortIfIndex_Type()
)
bitsPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortIfIndex.setStatus("current")
_BitsPortEntityIndex_Type = PhysicalIndex
_BitsPortEntityIndex_Object = MibTableColumn
bitsPortEntityIndex = _BitsPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 4),
    _BitsPortEntityIndex_Type()
)
bitsPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortEntityIndex.setStatus("current")
_BitsPortAdminState_Type = AdminState
_BitsPortAdminState_Object = MibTableColumn
bitsPortAdminState = _BitsPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 5),
    _BitsPortAdminState_Type()
)
bitsPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortAdminState.setStatus("current")
_BitsPortOperationalState_Type = OperationalState
_BitsPortOperationalState_Object = MibTableColumn
bitsPortOperationalState = _BitsPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 6),
    _BitsPortOperationalState_Type()
)
bitsPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortOperationalState.setStatus("current")
_BitsPortSecondaryState_Type = SecondaryState
_BitsPortSecondaryState_Object = MibTableColumn
bitsPortSecondaryState = _BitsPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 7),
    _BitsPortSecondaryState_Type()
)
bitsPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortSecondaryState.setStatus("current")
_BitsPortType_Type = BitsPortType
_BitsPortType_Object = MibTableColumn
bitsPortType = _BitsPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 8),
    _BitsPortType_Type()
)
bitsPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortType.setStatus("current")
_BitsPortLineType_Type = BitsPortLineType
_BitsPortLineType_Object = MibTableColumn
bitsPortLineType = _BitsPortLineType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 9),
    _BitsPortLineType_Type()
)
bitsPortLineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortLineType.setStatus("current")
_BitsPortLineCode_Type = BitsPortLineCode
_BitsPortLineCode_Object = MibTableColumn
bitsPortLineCode = _BitsPortLineCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 10),
    _BitsPortLineCode_Type()
)
bitsPortLineCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortLineCode.setStatus("current")
_BitsPortFrameFormat_Type = BitsFrameFormat
_BitsPortFrameFormat_Object = MibTableColumn
bitsPortFrameFormat = _BitsPortFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 11),
    _BitsPortFrameFormat_Type()
)
bitsPortFrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortFrameFormat.setStatus("current")
_BitsPortSaBitDesignation_Type = SaBitDesignation
_BitsPortSaBitDesignation_Object = MibTableColumn
bitsPortSaBitDesignation = _BitsPortSaBitDesignation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 12),
    _BitsPortSaBitDesignation_Type()
)
bitsPortSaBitDesignation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortSaBitDesignation.setStatus("current")
_BitsPortQLModeEnabled_Type = TruthValue
_BitsPortQLModeEnabled_Object = MibTableColumn
bitsPortQLModeEnabled = _BitsPortQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 13),
    _BitsPortQLModeEnabled_Type()
)
bitsPortQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortQLModeEnabled.setStatus("current")
_BitsPortExpectedQL_Type = SSMQualityLevel
_BitsPortExpectedQL_Object = MibTableColumn
bitsPortExpectedQL = _BitsPortExpectedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 14),
    _BitsPortExpectedQL_Type()
)
bitsPortExpectedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortExpectedQL.setStatus("current")
_BitsPortAssumedQL_Type = SSMQualityLevel
_BitsPortAssumedQL_Object = MibTableColumn
bitsPortAssumedQL = _BitsPortAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 15),
    _BitsPortAssumedQL_Type()
)
bitsPortAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortAssumedQL.setStatus("current")
_BitsPortReceivedQL_Type = SSMQualityLevel
_BitsPortReceivedQL_Object = MibTableColumn
bitsPortReceivedQL = _BitsPortReceivedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 16),
    _BitsPortReceivedQL_Type()
)
bitsPortReceivedQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortReceivedQL.setStatus("current")
_BitsPortTransmitQL_Type = SSMQualityLevel
_BitsPortTransmitQL_Object = MibTableColumn
bitsPortTransmitQL = _BitsPortTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 17),
    _BitsPortTransmitQL_Type()
)
bitsPortTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortTransmitQL.setStatus("current")
_BitsPortSquelchQL_Type = SSMQualityLevel
_BitsPortSquelchQL_Object = MibTableColumn
bitsPortSquelchQL = _BitsPortSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 18),
    _BitsPortSquelchQL_Type()
)
bitsPortSquelchQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortSquelchQL.setStatus("current")
_BitsPortLineBuildOut_Type = LineBuildOut
_BitsPortLineBuildOut_Object = MibTableColumn
bitsPortLineBuildOut = _BitsPortLineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 19),
    _BitsPortLineBuildOut_Type()
)
bitsPortLineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortLineBuildOut.setStatus("current")
_BitsPortImpedance_Type = BitsPortImpedanceMode
_BitsPortImpedance_Object = MibTableColumn
bitsPortImpedance = _BitsPortImpedance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 20),
    _BitsPortImpedance_Type()
)
bitsPortImpedance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortImpedance.setStatus("current")
_BitsPortCrc4_Type = TruthValue
_BitsPortCrc4_Object = MibTableColumn
bitsPortCrc4 = _BitsPortCrc4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 21),
    _BitsPortCrc4_Type()
)
bitsPortCrc4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortCrc4.setStatus("current")


class _BitsPortIdleCode_Type(Integer32):
    """Custom type bitsPortIdleCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BitsPortIdleCode_Type.__name__ = "Integer32"
_BitsPortIdleCode_Object = MibTableColumn
bitsPortIdleCode = _BitsPortIdleCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 22),
    _BitsPortIdleCode_Type()
)
bitsPortIdleCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortIdleCode.setStatus("current")
_BitsPortAis_Type = TruthValue
_BitsPortAis_Object = MibTableColumn
bitsPortAis = _BitsPortAis_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 23),
    _BitsPortAis_Type()
)
bitsPortAis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortAis.setStatus("current")
_BitsPortSaBitsAdminState_Type = SaBitsState
_BitsPortSaBitsAdminState_Object = MibTableColumn
bitsPortSaBitsAdminState = _BitsPortSaBitsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 24),
    _BitsPortSaBitsAdminState_Type()
)
bitsPortSaBitsAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortSaBitsAdminState.setStatus("current")
_BitsPortSquelchControl_Type = SquelchControl
_BitsPortSquelchControl_Object = MibTableColumn
bitsPortSquelchControl = _BitsPortSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 25),
    _BitsPortSquelchControl_Type()
)
bitsPortSquelchControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortSquelchControl.setStatus("current")
_BitsPortSignalShape_Type = SignalShape
_BitsPortSignalShape_Object = MibTableColumn
bitsPortSignalShape = _BitsPortSignalShape_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 26),
    _BitsPortSignalShape_Type()
)
bitsPortSignalShape.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bitsPortSignalShape.setStatus("current")
_BitsPortSignalFrequency_Type = SignalFrequency
_BitsPortSignalFrequency_Object = MibTableColumn
bitsPortSignalFrequency = _BitsPortSignalFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 16, 1, 27),
    _BitsPortSignalFrequency_Type()
)
bitsPortSignalFrequency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bitsPortSignalFrequency.setStatus("current")
_Ieee1588EthernetPortTable_Object = MibTable
ieee1588EthernetPortTable = _Ieee1588EthernetPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17)
)
if mibBuilder.loadTexts:
    ieee1588EthernetPortTable.setStatus("current")
_Ieee1588EthernetPortEntry_Object = MibTableRow
ieee1588EthernetPortEntry = _Ieee1588EthernetPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1)
)
ieee1588EthernetPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ieee1588EthernetPortIndex"),
)
if mibBuilder.loadTexts:
    ieee1588EthernetPortEntry.setStatus("current")
_Ieee1588EthernetPortIndex_Type = Integer32
_Ieee1588EthernetPortIndex_Object = MibTableColumn
ieee1588EthernetPortIndex = _Ieee1588EthernetPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 1),
    _Ieee1588EthernetPortIndex_Type()
)
ieee1588EthernetPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortIndex.setStatus("current")
_Ieee1588EthernetPortIfIndex_Type = InterfaceIndex
_Ieee1588EthernetPortIfIndex_Object = MibTableColumn
ieee1588EthernetPortIfIndex = _Ieee1588EthernetPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 2),
    _Ieee1588EthernetPortIfIndex_Type()
)
ieee1588EthernetPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortIfIndex.setStatus("current")
_Ieee1588EthernetPortEntityIndex_Type = PhysicalIndex
_Ieee1588EthernetPortEntityIndex_Object = MibTableColumn
ieee1588EthernetPortEntityIndex = _Ieee1588EthernetPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 3),
    _Ieee1588EthernetPortEntityIndex_Type()
)
ieee1588EthernetPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortEntityIndex.setStatus("current")
_Ieee1588EthernetPortAdminState_Type = AdminState
_Ieee1588EthernetPortAdminState_Object = MibTableColumn
ieee1588EthernetPortAdminState = _Ieee1588EthernetPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 4),
    _Ieee1588EthernetPortAdminState_Type()
)
ieee1588EthernetPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ieee1588EthernetPortAdminState.setStatus("current")
_Ieee1588EthernetPortOperationalState_Type = OperationalState
_Ieee1588EthernetPortOperationalState_Object = MibTableColumn
ieee1588EthernetPortOperationalState = _Ieee1588EthernetPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 5),
    _Ieee1588EthernetPortOperationalState_Type()
)
ieee1588EthernetPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortOperationalState.setStatus("current")
_Ieee1588EthernetPortSecondaryState_Type = SecondaryState
_Ieee1588EthernetPortSecondaryState_Object = MibTableColumn
ieee1588EthernetPortSecondaryState = _Ieee1588EthernetPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 6),
    _Ieee1588EthernetPortSecondaryState_Type()
)
ieee1588EthernetPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortSecondaryState.setStatus("current")
_Ieee1588EthernetPortMTU_Type = Integer32
_Ieee1588EthernetPortMTU_Object = MibTableColumn
ieee1588EthernetPortMTU = _Ieee1588EthernetPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 7),
    _Ieee1588EthernetPortMTU_Type()
)
ieee1588EthernetPortMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ieee1588EthernetPortMTU.setStatus("current")
_Ieee1588EthernetPortMediaType_Type = EthernetMediaType
_Ieee1588EthernetPortMediaType_Object = MibTableColumn
ieee1588EthernetPortMediaType = _Ieee1588EthernetPortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 8),
    _Ieee1588EthernetPortMediaType_Type()
)
ieee1588EthernetPortMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ieee1588EthernetPortMediaType.setStatus("current")
_Ieee1588EthernetPortConfigSpeed_Type = EthernetPortSpeed
_Ieee1588EthernetPortConfigSpeed_Object = MibTableColumn
ieee1588EthernetPortConfigSpeed = _Ieee1588EthernetPortConfigSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 9),
    _Ieee1588EthernetPortConfigSpeed_Type()
)
ieee1588EthernetPortConfigSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ieee1588EthernetPortConfigSpeed.setStatus("current")
_Ieee1588EthernetPortNegotiatedSpeed_Type = EthernetPortSpeed
_Ieee1588EthernetPortNegotiatedSpeed_Object = MibTableColumn
ieee1588EthernetPortNegotiatedSpeed = _Ieee1588EthernetPortNegotiatedSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 10),
    _Ieee1588EthernetPortNegotiatedSpeed_Type()
)
ieee1588EthernetPortNegotiatedSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ieee1588EthernetPortNegotiatedSpeed.setStatus("current")
_Ieee1588EthernetPortMDIXType_Type = CmEthernetMDIXType
_Ieee1588EthernetPortMDIXType_Object = MibTableColumn
ieee1588EthernetPortMDIXType = _Ieee1588EthernetPortMDIXType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 17, 1, 11),
    _Ieee1588EthernetPortMDIXType_Type()
)
ieee1588EthernetPortMDIXType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ieee1588EthernetPortMDIXType.setStatus("current")
_Gps10MHzPortTable_Object = MibTable
gps10MHzPortTable = _Gps10MHzPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18)
)
if mibBuilder.loadTexts:
    gps10MHzPortTable.setStatus("current")
_Gps10MHzPortEntry_Object = MibTableRow
gps10MHzPortEntry = _Gps10MHzPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1)
)
gps10MHzPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "gps10MHzPortIndex"),
)
if mibBuilder.loadTexts:
    gps10MHzPortEntry.setStatus("current")
_Gps10MHzPortIndex_Type = Integer32
_Gps10MHzPortIndex_Object = MibTableColumn
gps10MHzPortIndex = _Gps10MHzPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 1),
    _Gps10MHzPortIndex_Type()
)
gps10MHzPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortIndex.setStatus("current")
_Gps10MHzPortIfIndex_Type = InterfaceIndex
_Gps10MHzPortIfIndex_Object = MibTableColumn
gps10MHzPortIfIndex = _Gps10MHzPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 2),
    _Gps10MHzPortIfIndex_Type()
)
gps10MHzPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortIfIndex.setStatus("current")
_Gps10MHzPortEntityIndex_Type = PhysicalIndex
_Gps10MHzPortEntityIndex_Object = MibTableColumn
gps10MHzPortEntityIndex = _Gps10MHzPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 3),
    _Gps10MHzPortEntityIndex_Type()
)
gps10MHzPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortEntityIndex.setStatus("current")
_Gps10MHzPortAdminState_Type = AdminState
_Gps10MHzPortAdminState_Object = MibTableColumn
gps10MHzPortAdminState = _Gps10MHzPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 4),
    _Gps10MHzPortAdminState_Type()
)
gps10MHzPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortAdminState.setStatus("current")
_Gps10MHzPortOperationalState_Type = OperationalState
_Gps10MHzPortOperationalState_Object = MibTableColumn
gps10MHzPortOperationalState = _Gps10MHzPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 5),
    _Gps10MHzPortOperationalState_Type()
)
gps10MHzPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortOperationalState.setStatus("current")
_Gps10MHzPortSecondaryState_Type = SecondaryState
_Gps10MHzPortSecondaryState_Object = MibTableColumn
gps10MHzPortSecondaryState = _Gps10MHzPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 6),
    _Gps10MHzPortSecondaryState_Type()
)
gps10MHzPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortSecondaryState.setStatus("current")
_Gps10MHzPortSignalDirection_Type = SignalDirectionType
_Gps10MHzPortSignalDirection_Object = MibTableColumn
gps10MHzPortSignalDirection = _Gps10MHzPortSignalDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 7),
    _Gps10MHzPortSignalDirection_Type()
)
gps10MHzPortSignalDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortSignalDirection.setStatus("current")
_Gps10MHzPortSquelchControl_Type = SquelchControl
_Gps10MHzPortSquelchControl_Object = MibTableColumn
gps10MHzPortSquelchControl = _Gps10MHzPortSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 8),
    _Gps10MHzPortSquelchControl_Type()
)
gps10MHzPortSquelchControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortSquelchControl.setStatus("current")
_Gps10MHzPortSquelchQL_Type = SSMQualityLevel
_Gps10MHzPortSquelchQL_Object = MibTableColumn
gps10MHzPortSquelchQL = _Gps10MHzPortSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 9),
    _Gps10MHzPortSquelchQL_Type()
)
gps10MHzPortSquelchQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortSquelchQL.setStatus("current")
_Gps10MHzPortFrequencySource_Type = VariablePointer
_Gps10MHzPortFrequencySource_Object = MibTableColumn
gps10MHzPortFrequencySource = _Gps10MHzPortFrequencySource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 10),
    _Gps10MHzPortFrequencySource_Type()
)
gps10MHzPortFrequencySource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortFrequencySource.setStatus("current")
_Gps10MHzPortClockClass_Type = Unsigned32
_Gps10MHzPortClockClass_Object = MibTableColumn
gps10MHzPortClockClass = _Gps10MHzPortClockClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 11),
    _Gps10MHzPortClockClass_Type()
)
gps10MHzPortClockClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortClockClass.setStatus("deprecated")
_Gps10MHzPortClockAccuracy_Type = Unsigned32
_Gps10MHzPortClockAccuracy_Object = MibTableColumn
gps10MHzPortClockAccuracy = _Gps10MHzPortClockAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 12),
    _Gps10MHzPortClockAccuracy_Type()
)
gps10MHzPortClockAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortClockAccuracy.setStatus("deprecated")
_Gps10MHzPortTimeSource_Type = TimeSource
_Gps10MHzPortTimeSource_Object = MibTableColumn
gps10MHzPortTimeSource = _Gps10MHzPortTimeSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 13),
    _Gps10MHzPortTimeSource_Type()
)
gps10MHzPortTimeSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gps10MHzPortTimeSource.setStatus("deprecated")
_Gps10MHzPortAssumedQL_Type = SSMQualityLevel
_Gps10MHzPortAssumedQL_Object = MibTableColumn
gps10MHzPortAssumedQL = _Gps10MHzPortAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 14),
    _Gps10MHzPortAssumedQL_Type()
)
gps10MHzPortAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortAssumedQL.setStatus("current")


class _Gps10MHzPortAlias_Type(DisplayString):
    """Custom type gps10MHzPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_Gps10MHzPortAlias_Type.__name__ = "DisplayString"
_Gps10MHzPortAlias_Object = MibTableColumn
gps10MHzPortAlias = _Gps10MHzPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 15),
    _Gps10MHzPortAlias_Type()
)
gps10MHzPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortAlias.setStatus("current")
_Gps10MHzPortInputSignalType_Type = ClkSignalType
_Gps10MHzPortInputSignalType_Object = MibTableColumn
gps10MHzPortInputSignalType = _Gps10MHzPortInputSignalType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 18, 1, 16),
    _Gps10MHzPortInputSignalType_Type()
)
gps10MHzPortInputSignalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gps10MHzPortInputSignalType.setStatus("current")
_CmEthernetNetPortClbTable_Object = MibTable
cmEthernetNetPortClbTable = _CmEthernetNetPortClbTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortClbTable.setStatus("current")
_CmEthernetNetPortClbEntry_Object = MibTableRow
cmEthernetNetPortClbEntry = _CmEthernetNetPortClbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19, 1)
)
cmEthernetNetPortClbEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortClbIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetNetPortClbEntry.setStatus("current")


class _CmEthernetNetPortClbIndex_Type(Integer32):
    """Custom type cmEthernetNetPortClbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_CmEthernetNetPortClbIndex_Type.__name__ = "Integer32"
_CmEthernetNetPortClbIndex_Object = MibTableColumn
cmEthernetNetPortClbIndex = _CmEthernetNetPortClbIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19, 1, 1),
    _CmEthernetNetPortClbIndex_Type()
)
cmEthernetNetPortClbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortClbIndex.setStatus("current")
_CmEthernetNetPortClbEnabled_Type = TruthValue
_CmEthernetNetPortClbEnabled_Object = MibTableColumn
cmEthernetNetPortClbEnabled = _CmEthernetNetPortClbEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19, 1, 2),
    _CmEthernetNetPortClbEnabled_Type()
)
cmEthernetNetPortClbEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortClbEnabled.setStatus("current")
_CmEthernetNetPortClbLength_Type = DisplayString
_CmEthernetNetPortClbLength_Object = MibTableColumn
cmEthernetNetPortClbLength = _CmEthernetNetPortClbLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19, 1, 3),
    _CmEthernetNetPortClbLength_Type()
)
cmEthernetNetPortClbLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortClbLength.setStatus("current")


class _CmEthernetNetPortClbDescr_Type(DisplayString):
    """Custom type cmEthernetNetPortClbDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetNetPortClbDescr_Type.__name__ = "DisplayString"
_CmEthernetNetPortClbDescr_Object = MibTableColumn
cmEthernetNetPortClbDescr = _CmEthernetNetPortClbDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 19, 1, 4),
    _CmEthernetNetPortClbDescr_Type()
)
cmEthernetNetPortClbDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortClbDescr.setStatus("current")
_CmNetPortPrioMapTable_Object = MibTable
cmNetPortPrioMapTable = _CmNetPortPrioMapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20)
)
if mibBuilder.loadTexts:
    cmNetPortPrioMapTable.setStatus("current")
_CmNetPortPrioMapEntry_Object = MibTableRow
cmNetPortPrioMapEntry = _CmNetPortPrioMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20, 1)
)
cmNetPortPrioMapEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortPrioMapIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortPrioMapEntry.setStatus("current")


class _CmNetPortPrioMapIndex_Type(Integer32):
    """Custom type cmNetPortPrioMapIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmNetPortPrioMapIndex_Type.__name__ = "Integer32"
_CmNetPortPrioMapIndex_Object = MibTableColumn
cmNetPortPrioMapIndex = _CmNetPortPrioMapIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20, 1, 1),
    _CmNetPortPrioMapIndex_Type()
)
cmNetPortPrioMapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmNetPortPrioMapIndex.setStatus("current")


class _CmNetPortPrioMapInPriority_Type(Integer32):
    """Custom type cmNetPortPrioMapInPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmNetPortPrioMapInPriority_Type.__name__ = "Integer32"
_CmNetPortPrioMapInPriority_Object = MibTableColumn
cmNetPortPrioMapInPriority = _CmNetPortPrioMapInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20, 1, 2),
    _CmNetPortPrioMapInPriority_Type()
)
cmNetPortPrioMapInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPrioMapInPriority.setStatus("current")


class _CmNetPortPrioMapCOS_Type(Integer32):
    """Custom type cmNetPortPrioMapCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmNetPortPrioMapCOS_Type.__name__ = "Integer32"
_CmNetPortPrioMapCOS_Object = MibTableColumn
cmNetPortPrioMapCOS = _CmNetPortPrioMapCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20, 1, 3),
    _CmNetPortPrioMapCOS_Type()
)
cmNetPortPrioMapCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPrioMapCOS.setStatus("current")
_CmNetPortPrioMapOuterTagPriority_Type = VlanPriority
_CmNetPortPrioMapOuterTagPriority_Object = MibTableColumn
cmNetPortPrioMapOuterTagPriority = _CmNetPortPrioMapOuterTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 20, 1, 4),
    _CmNetPortPrioMapOuterTagPriority_Type()
)
cmNetPortPrioMapOuterTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPrioMapOuterTagPriority.setStatus("current")
_CmAccPortPcpDEEncTable_Object = MibTable
cmAccPortPcpDEEncTable = _CmAccPortPcpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21)
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncTable.setStatus("current")
_CmAccPortPcpDEEncEntry_Object = MibTableRow
cmAccPortPcpDEEncEntry = _CmAccPortPcpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21, 1)
)
cmAccPortPcpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmAccPortPcpDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncEntry.setStatus("current")


class _CmAccPortPcpDEEncIndex_Type(Integer32):
    """Custom type cmAccPortPcpDEEncIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmAccPortPcpDEEncIndex_Type.__name__ = "Integer32"
_CmAccPortPcpDEEncIndex_Object = MibTableColumn
cmAccPortPcpDEEncIndex = _CmAccPortPcpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21, 1, 1),
    _CmAccPortPcpDEEncIndex_Type()
)
cmAccPortPcpDEEncIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncIndex.setStatus("current")
_CmAccPortPcpDEEncInPriority_Type = VlanPriority
_CmAccPortPcpDEEncInPriority_Object = MibTableColumn
cmAccPortPcpDEEncInPriority = _CmAccPortPcpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21, 1, 2),
    _CmAccPortPcpDEEncInPriority_Type()
)
cmAccPortPcpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncInPriority.setStatus("current")
_CmAccPortPcpDEEncDropIneligiblePrio_Type = VlanPriority
_CmAccPortPcpDEEncDropIneligiblePrio_Object = MibTableColumn
cmAccPortPcpDEEncDropIneligiblePrio = _CmAccPortPcpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21, 1, 3),
    _CmAccPortPcpDEEncDropIneligiblePrio_Type()
)
cmAccPortPcpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncDropIneligiblePrio.setStatus("current")
_CmAccPortPcpDEEncDropEligiblePrio_Type = VlanPriority
_CmAccPortPcpDEEncDropEligiblePrio_Object = MibTableColumn
cmAccPortPcpDEEncDropEligiblePrio = _CmAccPortPcpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 21, 1, 4),
    _CmAccPortPcpDEEncDropEligiblePrio_Type()
)
cmAccPortPcpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEEncDropEligiblePrio.setStatus("current")
_CmAccPortPcpDEDecTable_Object = MibTable
cmAccPortPcpDEDecTable = _CmAccPortPcpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22)
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecTable.setStatus("current")
_CmAccPortPcpDEDecEntry_Object = MibTableRow
cmAccPortPcpDEDecEntry = _CmAccPortPcpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22, 1)
)
cmAccPortPcpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmAccPortPcpDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecEntry.setStatus("current")


class _CmAccPortPcpDEDecIndex_Type(Integer32):
    """Custom type cmAccPortPcpDEDecIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmAccPortPcpDEDecIndex_Type.__name__ = "Integer32"
_CmAccPortPcpDEDecIndex_Object = MibTableColumn
cmAccPortPcpDEDecIndex = _CmAccPortPcpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22, 1, 1),
    _CmAccPortPcpDEDecIndex_Type()
)
cmAccPortPcpDEDecIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecIndex.setStatus("current")
_CmAccPortPcpDEDecInPriority_Type = VlanPriority
_CmAccPortPcpDEDecInPriority_Object = MibTableColumn
cmAccPortPcpDEDecInPriority = _CmAccPortPcpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22, 1, 2),
    _CmAccPortPcpDEDecInPriority_Type()
)
cmAccPortPcpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecInPriority.setStatus("current")
_CmAccPortPcpDEDecOutPriority_Type = VlanPriority
_CmAccPortPcpDEDecOutPriority_Object = MibTableColumn
cmAccPortPcpDEDecOutPriority = _CmAccPortPcpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22, 1, 3),
    _CmAccPortPcpDEDecOutPriority_Type()
)
cmAccPortPcpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecOutPriority.setStatus("current")
_CmAccPortPcpDEDecDropEligible_Type = TruthValue
_CmAccPortPcpDEDecDropEligible_Object = MibTableColumn
cmAccPortPcpDEDecDropEligible = _CmAccPortPcpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 22, 1, 4),
    _CmAccPortPcpDEDecDropEligible_Type()
)
cmAccPortPcpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDecDropEligible.setStatus("current")
_CmAccPortPcpDEPairTable_Object = MibTable
cmAccPortPcpDEPairTable = _CmAccPortPcpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 23)
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEPairTable.setStatus("current")
_CmAccPortPcpDEPairEntry_Object = MibTableRow
cmAccPortPcpDEPairEntry = _CmAccPortPcpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 23, 1)
)
cmAccPortPcpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
    (0, "CM-FACILITY-MIB", "cmAccPortPcpDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmAccPortPcpDEPairEntry.setStatus("current")


class _CmAccPortPcpDEPairIndex_Type(Integer32):
    """Custom type cmAccPortPcpDEPairIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_CmAccPortPcpDEPairIndex_Type.__name__ = "Integer32"
_CmAccPortPcpDEPairIndex_Object = MibTableColumn
cmAccPortPcpDEPairIndex = _CmAccPortPcpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 23, 1, 1),
    _CmAccPortPcpDEPairIndex_Type()
)
cmAccPortPcpDEPairIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmAccPortPcpDEPairIndex.setStatus("current")
_CmAccPortPcpDEDropIneligiblePrio_Type = VlanPriority
_CmAccPortPcpDEDropIneligiblePrio_Object = MibTableColumn
cmAccPortPcpDEDropIneligiblePrio = _CmAccPortPcpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 23, 1, 2),
    _CmAccPortPcpDEDropIneligiblePrio_Type()
)
cmAccPortPcpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDropIneligiblePrio.setStatus("current")
_CmAccPortPcpDEDropEligiblePrio_Type = VlanPriority
_CmAccPortPcpDEDropEligiblePrio_Object = MibTableColumn
cmAccPortPcpDEDropEligiblePrio = _CmAccPortPcpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 23, 1, 3),
    _CmAccPortPcpDEDropEligiblePrio_Type()
)
cmAccPortPcpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortPcpDEDropEligiblePrio.setStatus("current")
_CmNetPortPcpDEEncTable_Object = MibTable
cmNetPortPcpDEEncTable = _CmNetPortPcpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24)
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncTable.setStatus("current")
_CmNetPortPcpDEEncEntry_Object = MibTableRow
cmNetPortPcpDEEncEntry = _CmNetPortPcpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24, 1)
)
cmNetPortPcpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortPcpDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncEntry.setStatus("current")


class _CmNetPortPcpDEEncIndex_Type(Integer32):
    """Custom type cmNetPortPcpDEEncIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmNetPortPcpDEEncIndex_Type.__name__ = "Integer32"
_CmNetPortPcpDEEncIndex_Object = MibTableColumn
cmNetPortPcpDEEncIndex = _CmNetPortPcpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24, 1, 1),
    _CmNetPortPcpDEEncIndex_Type()
)
cmNetPortPcpDEEncIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncIndex.setStatus("current")
_CmNetPortPcpDEEncInPriority_Type = VlanPriority
_CmNetPortPcpDEEncInPriority_Object = MibTableColumn
cmNetPortPcpDEEncInPriority = _CmNetPortPcpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24, 1, 2),
    _CmNetPortPcpDEEncInPriority_Type()
)
cmNetPortPcpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncInPriority.setStatus("current")
_CmNetPortPcpDEEncDropIneligiblePrio_Type = VlanPriority
_CmNetPortPcpDEEncDropIneligiblePrio_Object = MibTableColumn
cmNetPortPcpDEEncDropIneligiblePrio = _CmNetPortPcpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24, 1, 3),
    _CmNetPortPcpDEEncDropIneligiblePrio_Type()
)
cmNetPortPcpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncDropIneligiblePrio.setStatus("current")
_CmNetPortPcpDEEncDropEligiblePrio_Type = VlanPriority
_CmNetPortPcpDEEncDropEligiblePrio_Object = MibTableColumn
cmNetPortPcpDEEncDropEligiblePrio = _CmNetPortPcpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 24, 1, 4),
    _CmNetPortPcpDEEncDropEligiblePrio_Type()
)
cmNetPortPcpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEEncDropEligiblePrio.setStatus("current")
_CmNetPortPcpDEDecTable_Object = MibTable
cmNetPortPcpDEDecTable = _CmNetPortPcpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25)
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecTable.setStatus("current")
_CmNetPortPcpDEDecEntry_Object = MibTableRow
cmNetPortPcpDEDecEntry = _CmNetPortPcpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25, 1)
)
cmNetPortPcpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortPcpDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecEntry.setStatus("current")


class _CmNetPortPcpDEDecIndex_Type(Integer32):
    """Custom type cmNetPortPcpDEDecIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmNetPortPcpDEDecIndex_Type.__name__ = "Integer32"
_CmNetPortPcpDEDecIndex_Object = MibTableColumn
cmNetPortPcpDEDecIndex = _CmNetPortPcpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25, 1, 1),
    _CmNetPortPcpDEDecIndex_Type()
)
cmNetPortPcpDEDecIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecIndex.setStatus("current")
_CmNetPortPcpDEDecInPriority_Type = VlanPriority
_CmNetPortPcpDEDecInPriority_Object = MibTableColumn
cmNetPortPcpDEDecInPriority = _CmNetPortPcpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25, 1, 2),
    _CmNetPortPcpDEDecInPriority_Type()
)
cmNetPortPcpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecInPriority.setStatus("current")
_CmNetPortPcpDEDecOutPriority_Type = VlanPriority
_CmNetPortPcpDEDecOutPriority_Object = MibTableColumn
cmNetPortPcpDEDecOutPriority = _CmNetPortPcpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25, 1, 3),
    _CmNetPortPcpDEDecOutPriority_Type()
)
cmNetPortPcpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecOutPriority.setStatus("current")
_CmNetPortPcpDEDecDropEligible_Type = TruthValue
_CmNetPortPcpDEDecDropEligible_Object = MibTableColumn
cmNetPortPcpDEDecDropEligible = _CmNetPortPcpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 25, 1, 4),
    _CmNetPortPcpDEDecDropEligible_Type()
)
cmNetPortPcpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDecDropEligible.setStatus("current")
_CmNetPortPcpDEPairTable_Object = MibTable
cmNetPortPcpDEPairTable = _CmNetPortPcpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 26)
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEPairTable.setStatus("current")
_CmNetPortPcpDEPairEntry_Object = MibTableRow
cmNetPortPcpDEPairEntry = _CmNetPortPcpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 26, 1)
)
cmNetPortPcpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortPcpDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortPcpDEPairEntry.setStatus("current")


class _CmNetPortPcpDEPairIndex_Type(Integer32):
    """Custom type cmNetPortPcpDEPairIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_CmNetPortPcpDEPairIndex_Type.__name__ = "Integer32"
_CmNetPortPcpDEPairIndex_Object = MibTableColumn
cmNetPortPcpDEPairIndex = _CmNetPortPcpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 26, 1, 1),
    _CmNetPortPcpDEPairIndex_Type()
)
cmNetPortPcpDEPairIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmNetPortPcpDEPairIndex.setStatus("current")
_CmNetPortPcpDEDropIneligiblePrio_Type = VlanPriority
_CmNetPortPcpDEDropIneligiblePrio_Object = MibTableColumn
cmNetPortPcpDEDropIneligiblePrio = _CmNetPortPcpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 26, 1, 2),
    _CmNetPortPcpDEDropIneligiblePrio_Type()
)
cmNetPortPcpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDropIneligiblePrio.setStatus("current")
_CmNetPortPcpDEDropEligiblePrio_Type = VlanPriority
_CmNetPortPcpDEDropEligiblePrio_Object = MibTableColumn
cmNetPortPcpDEDropEligiblePrio = _CmNetPortPcpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 26, 1, 3),
    _CmNetPortPcpDEDropEligiblePrio_Type()
)
cmNetPortPcpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortPcpDEDropEligiblePrio.setStatus("current")
_CmEthernetTrafficPortTable_Object = MibTable
cmEthernetTrafficPortTable = _CmEthernetTrafficPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTable.setStatus("current")
_CmEthernetTrafficPortEntry_Object = MibTableRow
cmEthernetTrafficPortEntry = _CmEthernetTrafficPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1)
)
cmEthernetTrafficPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEntry.setStatus("current")


class _CmEthernetTrafficPortIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetTrafficPortIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortIndex_Object = MibTableColumn
cmEthernetTrafficPortIndex = _CmEthernetTrafficPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 1),
    _CmEthernetTrafficPortIndex_Type()
)
cmEthernetTrafficPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIndex.setStatus("current")
_CmEthernetTrafficPortIfIndex_Type = InterfaceIndex
_CmEthernetTrafficPortIfIndex_Object = MibTableColumn
cmEthernetTrafficPortIfIndex = _CmEthernetTrafficPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 2),
    _CmEthernetTrafficPortIfIndex_Type()
)
cmEthernetTrafficPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIfIndex.setStatus("current")
_CmEthernetTrafficPortEntityIndex_Type = PhysicalIndex
_CmEthernetTrafficPortEntityIndex_Object = MibTableColumn
cmEthernetTrafficPortEntityIndex = _CmEthernetTrafficPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 3),
    _CmEthernetTrafficPortEntityIndex_Type()
)
cmEthernetTrafficPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEntityIndex.setStatus("current")
_CmEthernetTrafficPortAdminState_Type = AdminState
_CmEthernetTrafficPortAdminState_Object = MibTableColumn
cmEthernetTrafficPortAdminState = _CmEthernetTrafficPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 4),
    _CmEthernetTrafficPortAdminState_Type()
)
cmEthernetTrafficPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortAdminState.setStatus("current")
_CmEthernetTrafficPortOperationalState_Type = OperationalState
_CmEthernetTrafficPortOperationalState_Object = MibTableColumn
cmEthernetTrafficPortOperationalState = _CmEthernetTrafficPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 5),
    _CmEthernetTrafficPortOperationalState_Type()
)
cmEthernetTrafficPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOperationalState.setStatus("current")
_CmEthernetTrafficPortSecondaryState_Type = SecondaryState
_CmEthernetTrafficPortSecondaryState_Object = MibTableColumn
cmEthernetTrafficPortSecondaryState = _CmEthernetTrafficPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 6),
    _CmEthernetTrafficPortSecondaryState_Type()
)
cmEthernetTrafficPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSecondaryState.setStatus("current")
_CmEthernetTrafficPortMTU_Type = Integer32
_CmEthernetTrafficPortMTU_Object = MibTableColumn
cmEthernetTrafficPortMTU = _CmEthernetTrafficPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 7),
    _CmEthernetTrafficPortMTU_Type()
)
cmEthernetTrafficPortMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMTU.setStatus("current")
_CmEthernetTrafficPortMediaType_Type = EthernetMediaType
_CmEthernetTrafficPortMediaType_Object = MibTableColumn
cmEthernetTrafficPortMediaType = _CmEthernetTrafficPortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 8),
    _CmEthernetTrafficPortMediaType_Type()
)
cmEthernetTrafficPortMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMediaType.setStatus("current")
_CmEthernetTrafficPortConfigSpeed_Type = EthernetPortSpeed
_CmEthernetTrafficPortConfigSpeed_Object = MibTableColumn
cmEthernetTrafficPortConfigSpeed = _CmEthernetTrafficPortConfigSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 9),
    _CmEthernetTrafficPortConfigSpeed_Type()
)
cmEthernetTrafficPortConfigSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortConfigSpeed.setStatus("current")
_CmEthernetTrafficPortNegotiatedSpeed_Type = EthernetPortSpeed
_CmEthernetTrafficPortNegotiatedSpeed_Object = MibTableColumn
cmEthernetTrafficPortNegotiatedSpeed = _CmEthernetTrafficPortNegotiatedSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 10),
    _CmEthernetTrafficPortNegotiatedSpeed_Type()
)
cmEthernetTrafficPortNegotiatedSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortNegotiatedSpeed.setStatus("current")
_CmEthernetTrafficPortMDIXType_Type = CmEthernetMDIXType
_CmEthernetTrafficPortMDIXType_Object = MibTableColumn
cmEthernetTrafficPortMDIXType = _CmEthernetTrafficPortMDIXType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 11),
    _CmEthernetTrafficPortMDIXType_Type()
)
cmEthernetTrafficPortMDIXType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMDIXType.setStatus("current")
_CmEthernetTrafficPortMDIXStatus_Type = CmEthernetMDIXType
_CmEthernetTrafficPortMDIXStatus_Object = MibTableColumn
cmEthernetTrafficPortMDIXStatus = _CmEthernetTrafficPortMDIXStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 12),
    _CmEthernetTrafficPortMDIXStatus_Type()
)
cmEthernetTrafficPortMDIXStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMDIXStatus.setStatus("current")


class _CmEthernetTrafficPortSfpVendorName_Type(DisplayString):
    """Custom type cmEthernetTrafficPortSfpVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortSfpVendorName_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortSfpVendorName_Object = MibTableColumn
cmEthernetTrafficPortSfpVendorName = _CmEthernetTrafficPortSfpVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 13),
    _CmEthernetTrafficPortSfpVendorName_Type()
)
cmEthernetTrafficPortSfpVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpVendorName.setStatus("current")


class _CmEthernetTrafficPortSfpPartNumber_Type(DisplayString):
    """Custom type cmEthernetTrafficPortSfpPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortSfpPartNumber_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortSfpPartNumber_Object = MibTableColumn
cmEthernetTrafficPortSfpPartNumber = _CmEthernetTrafficPortSfpPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 14),
    _CmEthernetTrafficPortSfpPartNumber_Type()
)
cmEthernetTrafficPortSfpPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpPartNumber.setStatus("current")


class _CmEthernetTrafficPortSfpSerialNumber_Type(DisplayString):
    """Custom type cmEthernetTrafficPortSfpSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetTrafficPortSfpSerialNumber_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortSfpSerialNumber_Object = MibTableColumn
cmEthernetTrafficPortSfpSerialNumber = _CmEthernetTrafficPortSfpSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 15),
    _CmEthernetTrafficPortSfpSerialNumber_Type()
)
cmEthernetTrafficPortSfpSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpSerialNumber.setStatus("current")
_CmEthernetTrafficPortSfpDateOfManufacture_Type = DateAndTime
_CmEthernetTrafficPortSfpDateOfManufacture_Object = MibTableColumn
cmEthernetTrafficPortSfpDateOfManufacture = _CmEthernetTrafficPortSfpDateOfManufacture_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 16),
    _CmEthernetTrafficPortSfpDateOfManufacture_Type()
)
cmEthernetTrafficPortSfpDateOfManufacture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpDateOfManufacture.setStatus("current")
_CmEthernetTrafficPortSfpConnectorValue_Type = SfpConnectorValue
_CmEthernetTrafficPortSfpConnectorValue_Object = MibTableColumn
cmEthernetTrafficPortSfpConnectorValue = _CmEthernetTrafficPortSfpConnectorValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 17),
    _CmEthernetTrafficPortSfpConnectorValue_Type()
)
cmEthernetTrafficPortSfpConnectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpConnectorValue.setStatus("current")
_CmEthernetTrafficPortSfpLinkLength_Type = Integer32
_CmEthernetTrafficPortSfpLinkLength_Object = MibTableColumn
cmEthernetTrafficPortSfpLinkLength = _CmEthernetTrafficPortSfpLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 18),
    _CmEthernetTrafficPortSfpLinkLength_Type()
)
cmEthernetTrafficPortSfpLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpLinkLength.setStatus("current")
_CmEthernetTrafficPortSfpLaserWaveLength_Type = Integer32
_CmEthernetTrafficPortSfpLaserWaveLength_Object = MibTableColumn
cmEthernetTrafficPortSfpLaserWaveLength = _CmEthernetTrafficPortSfpLaserWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 19),
    _CmEthernetTrafficPortSfpLaserWaveLength_Type()
)
cmEthernetTrafficPortSfpLaserWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpLaserWaveLength.setStatus("current")
_CmEthernetTrafficPortSfpMediaType_Type = SfpMediaType
_CmEthernetTrafficPortSfpMediaType_Object = MibTableColumn
cmEthernetTrafficPortSfpMediaType = _CmEthernetTrafficPortSfpMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 20),
    _CmEthernetTrafficPortSfpMediaType_Type()
)
cmEthernetTrafficPortSfpMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpMediaType.setStatus("current")
_CmEthernetTrafficPortLoopbackConfig_Type = CmLoopbackType
_CmEthernetTrafficPortLoopbackConfig_Object = MibTableColumn
cmEthernetTrafficPortLoopbackConfig = _CmEthernetTrafficPortLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 21),
    _CmEthernetTrafficPortLoopbackConfig_Type()
)
cmEthernetTrafficPortLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackConfig.setStatus("current")
_CmEthernetTrafficPortLoopbackStatus_Type = CmLoopbackType
_CmEthernetTrafficPortLoopbackStatus_Object = MibTableColumn
cmEthernetTrafficPortLoopbackStatus = _CmEthernetTrafficPortLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 22),
    _CmEthernetTrafficPortLoopbackStatus_Type()
)
cmEthernetTrafficPortLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackStatus.setStatus("current")


class _CmEthernetTrafficPortLoopbackTime_Type(Integer32):
    """Custom type cmEthernetTrafficPortLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_CmEthernetTrafficPortLoopbackTime_Type.__name__ = "Integer32"
_CmEthernetTrafficPortLoopbackTime_Object = MibTableColumn
cmEthernetTrafficPortLoopbackTime = _CmEthernetTrafficPortLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 23),
    _CmEthernetTrafficPortLoopbackTime_Type()
)
cmEthernetTrafficPortLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackTime.setStatus("current")
_CmEthernetTrafficPortLoopbackSwapSADA_Type = CmSwapSADAType
_CmEthernetTrafficPortLoopbackSwapSADA_Object = MibTableColumn
cmEthernetTrafficPortLoopbackSwapSADA = _CmEthernetTrafficPortLoopbackSwapSADA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 24),
    _CmEthernetTrafficPortLoopbackSwapSADA_Type()
)
cmEthernetTrafficPortLoopbackSwapSADA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackSwapSADA.setStatus("current")


class _CmEthernetTrafficPortOuterVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetTrafficPortOuterVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetTrafficPortOuterVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetTrafficPortOuterVlanLoopbackMask_Object = MibTableColumn
cmEthernetTrafficPortOuterVlanLoopbackMask = _CmEthernetTrafficPortOuterVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 25),
    _CmEthernetTrafficPortOuterVlanLoopbackMask_Type()
)
cmEthernetTrafficPortOuterVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterVlanLoopbackMask.setStatus("current")


class _CmEthernetTrafficPortOuterVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetTrafficPortOuterVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortOuterVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortOuterVlanLoopback1_Object = MibTableColumn
cmEthernetTrafficPortOuterVlanLoopback1 = _CmEthernetTrafficPortOuterVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 26),
    _CmEthernetTrafficPortOuterVlanLoopback1_Type()
)
cmEthernetTrafficPortOuterVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterVlanLoopback1.setStatus("current")


class _CmEthernetTrafficPortOuterVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetTrafficPortOuterVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortOuterVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortOuterVlanLoopback2_Object = MibTableColumn
cmEthernetTrafficPortOuterVlanLoopback2 = _CmEthernetTrafficPortOuterVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 27),
    _CmEthernetTrafficPortOuterVlanLoopback2_Type()
)
cmEthernetTrafficPortOuterVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterVlanLoopback2.setStatus("current")


class _CmEthernetTrafficPortOuterVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetTrafficPortOuterVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortOuterVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortOuterVlanLoopback3_Object = MibTableColumn
cmEthernetTrafficPortOuterVlanLoopback3 = _CmEthernetTrafficPortOuterVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 28),
    _CmEthernetTrafficPortOuterVlanLoopback3_Type()
)
cmEthernetTrafficPortOuterVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterVlanLoopback3.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdEnabled_Type = TruthValue
_CmEthernetTrafficPortLinkLossFwdEnabled_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdEnabled = _CmEthernetTrafficPortLinkLossFwdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 29),
    _CmEthernetTrafficPortLinkLossFwdEnabled_Type()
)
cmEthernetTrafficPortLinkLossFwdEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdEnabled.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdSignalType_Type = CmLinkLossFwdSignalType
_CmEthernetTrafficPortLinkLossFwdSignalType_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdSignalType = _CmEthernetTrafficPortLinkLossFwdSignalType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 30),
    _CmEthernetTrafficPortLinkLossFwdSignalType_Type()
)
cmEthernetTrafficPortLinkLossFwdSignalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdSignalType.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdTriggerTypes_Type = CmLinkLossFwdTriggerTypes
_CmEthernetTrafficPortLinkLossFwdTriggerTypes_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdTriggerTypes = _CmEthernetTrafficPortLinkLossFwdTriggerTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 31),
    _CmEthernetTrafficPortLinkLossFwdTriggerTypes_Type()
)
cmEthernetTrafficPortLinkLossFwdTriggerTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdTriggerTypes.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdDelay_Type = Integer32
_CmEthernetTrafficPortLinkLossFwdDelay_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdDelay = _CmEthernetTrafficPortLinkLossFwdDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 32),
    _CmEthernetTrafficPortLinkLossFwdDelay_Type()
)
cmEthernetTrafficPortLinkLossFwdDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdDelay.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdActive_Type = TruthValue
_CmEthernetTrafficPortLinkLossFwdActive_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdActive = _CmEthernetTrafficPortLinkLossFwdActive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 33),
    _CmEthernetTrafficPortLinkLossFwdActive_Type()
)
cmEthernetTrafficPortLinkLossFwdActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdActive.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdPartnerEnabled_Type = TruthValue
_CmEthernetTrafficPortLinkLossFwdPartnerEnabled_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdPartnerEnabled = _CmEthernetTrafficPortLinkLossFwdPartnerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 34),
    _CmEthernetTrafficPortLinkLossFwdPartnerEnabled_Type()
)
cmEthernetTrafficPortLinkLossFwdPartnerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdPartnerEnabled.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdLocalLinkId_Type = Integer32
_CmEthernetTrafficPortLinkLossFwdLocalLinkId_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdLocalLinkId = _CmEthernetTrafficPortLinkLossFwdLocalLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 35),
    _CmEthernetTrafficPortLinkLossFwdLocalLinkId_Type()
)
cmEthernetTrafficPortLinkLossFwdLocalLinkId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdLocalLinkId.setStatus("current")


class _CmEthernetTrafficPortLinkLossFwdRemoteLinkIds_Type(DisplayString):
    """Custom type cmEthernetTrafficPortLinkLossFwdRemoteLinkIds based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CmEthernetTrafficPortLinkLossFwdRemoteLinkIds_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortLinkLossFwdRemoteLinkIds_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdRemoteLinkIds = _CmEthernetTrafficPortLinkLossFwdRemoteLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 36),
    _CmEthernetTrafficPortLinkLossFwdRemoteLinkIds_Type()
)
cmEthernetTrafficPortLinkLossFwdRemoteLinkIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdRemoteLinkIds.setStatus("current")
_CmEthernetTrafficPortLinkLossFwdTxActionType_Type = CmLinkLossFwdTxActionType
_CmEthernetTrafficPortLinkLossFwdTxActionType_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdTxActionType = _CmEthernetTrafficPortLinkLossFwdTxActionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 37),
    _CmEthernetTrafficPortLinkLossFwdTxActionType_Type()
)
cmEthernetTrafficPortLinkLossFwdTxActionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdTxActionType.setStatus("current")


class _CmEthernetTrafficPortLinkLossFwdRxRLDLinkIds_Type(DisplayString):
    """Custom type cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CmEthernetTrafficPortLinkLossFwdRxRLDLinkIds_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortLinkLossFwdRxRLDLinkIds_Object = MibTableColumn
cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds = _CmEthernetTrafficPortLinkLossFwdRxRLDLinkIds_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 38),
    _CmEthernetTrafficPortLinkLossFwdRxRLDLinkIds_Type()
)
cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds.setStatus("current")
_CmEthernetTrafficPortOamId_Type = Integer32
_CmEthernetTrafficPortOamId_Object = MibTableColumn
cmEthernetTrafficPortOamId = _CmEthernetTrafficPortOamId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 39),
    _CmEthernetTrafficPortOamId_Type()
)
cmEthernetTrafficPortOamId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamId.setStatus("current")
_CmEthernetTrafficPortOamDiscoveryState_Type = CmOamDiscoveryState
_CmEthernetTrafficPortOamDiscoveryState_Object = MibTableColumn
cmEthernetTrafficPortOamDiscoveryState = _CmEthernetTrafficPortOamDiscoveryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 40),
    _CmEthernetTrafficPortOamDiscoveryState_Type()
)
cmEthernetTrafficPortOamDiscoveryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamDiscoveryState.setStatus("current")
_CmEthernetTrafficPortOamLocalVarRtrvsEnabled_Type = TruthValue
_CmEthernetTrafficPortOamLocalVarRtrvsEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamLocalVarRtrvsEnabled = _CmEthernetTrafficPortOamLocalVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 41),
    _CmEthernetTrafficPortOamLocalVarRtrvsEnabled_Type()
)
cmEthernetTrafficPortOamLocalVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalVarRtrvsEnabled.setStatus("current")
_CmEthernetTrafficPortOamLocalLinkEventsEnabled_Type = TruthValue
_CmEthernetTrafficPortOamLocalLinkEventsEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamLocalLinkEventsEnabled = _CmEthernetTrafficPortOamLocalLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 42),
    _CmEthernetTrafficPortOamLocalLinkEventsEnabled_Type()
)
cmEthernetTrafficPortOamLocalLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalLinkEventsEnabled.setStatus("current")
_CmEthernetTrafficPortOamLocalOamLoopbacksSupported_Type = TruthValue
_CmEthernetTrafficPortOamLocalOamLoopbacksSupported_Object = MibTableColumn
cmEthernetTrafficPortOamLocalOamLoopbacksSupported = _CmEthernetTrafficPortOamLocalOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 43),
    _CmEthernetTrafficPortOamLocalOamLoopbacksSupported_Type()
)
cmEthernetTrafficPortOamLocalOamLoopbacksSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalOamLoopbacksSupported.setStatus("current")
_CmEthernetTrafficPortOamLocalUnidirSupportEnabled_Type = TruthValue
_CmEthernetTrafficPortOamLocalUnidirSupportEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamLocalUnidirSupportEnabled = _CmEthernetTrafficPortOamLocalUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 44),
    _CmEthernetTrafficPortOamLocalUnidirSupportEnabled_Type()
)
cmEthernetTrafficPortOamLocalUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalUnidirSupportEnabled.setStatus("current")
_CmEthernetTrafficPortOamLocalMaxPDUSize_Type = Integer32
_CmEthernetTrafficPortOamLocalMaxPDUSize_Object = MibTableColumn
cmEthernetTrafficPortOamLocalMaxPDUSize = _CmEthernetTrafficPortOamLocalMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 45),
    _CmEthernetTrafficPortOamLocalMaxPDUSize_Type()
)
cmEthernetTrafficPortOamLocalMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalMaxPDUSize.setStatus("current")
_CmEthernetTrafficPortOamLocalMode_Type = CmOamMode
_CmEthernetTrafficPortOamLocalMode_Object = MibTableColumn
cmEthernetTrafficPortOamLocalMode = _CmEthernetTrafficPortOamLocalMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 46),
    _CmEthernetTrafficPortOamLocalMode_Type()
)
cmEthernetTrafficPortOamLocalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamLocalMode.setStatus("current")
_CmEthernetTrafficPortOamRemoteMacAddress_Type = MacAddress
_CmEthernetTrafficPortOamRemoteMacAddress_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteMacAddress = _CmEthernetTrafficPortOamRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 47),
    _CmEthernetTrafficPortOamRemoteMacAddress_Type()
)
cmEthernetTrafficPortOamRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteMacAddress.setStatus("current")
_CmEthernetTrafficPortOamRemoteVarRtrvsEnabled_Type = TruthValue
_CmEthernetTrafficPortOamRemoteVarRtrvsEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteVarRtrvsEnabled = _CmEthernetTrafficPortOamRemoteVarRtrvsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 48),
    _CmEthernetTrafficPortOamRemoteVarRtrvsEnabled_Type()
)
cmEthernetTrafficPortOamRemoteVarRtrvsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteVarRtrvsEnabled.setStatus("current")
_CmEthernetTrafficPortOamRemoteLinkEventsEnabled_Type = TruthValue
_CmEthernetTrafficPortOamRemoteLinkEventsEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteLinkEventsEnabled = _CmEthernetTrafficPortOamRemoteLinkEventsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 49),
    _CmEthernetTrafficPortOamRemoteLinkEventsEnabled_Type()
)
cmEthernetTrafficPortOamRemoteLinkEventsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteLinkEventsEnabled.setStatus("current")
_CmEthernetTrafficPortOamRemoteOamLoopbacksSupported_Type = TruthValue
_CmEthernetTrafficPortOamRemoteOamLoopbacksSupported_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteOamLoopbacksSupported = _CmEthernetTrafficPortOamRemoteOamLoopbacksSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 50),
    _CmEthernetTrafficPortOamRemoteOamLoopbacksSupported_Type()
)
cmEthernetTrafficPortOamRemoteOamLoopbacksSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteOamLoopbacksSupported.setStatus("current")
_CmEthernetTrafficPortOamRemoteUnidirSupportEnabled_Type = TruthValue
_CmEthernetTrafficPortOamRemoteUnidirSupportEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteUnidirSupportEnabled = _CmEthernetTrafficPortOamRemoteUnidirSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 51),
    _CmEthernetTrafficPortOamRemoteUnidirSupportEnabled_Type()
)
cmEthernetTrafficPortOamRemoteUnidirSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteUnidirSupportEnabled.setStatus("current")
_CmEthernetTrafficPortOamRemoteMaxPDUSize_Type = Integer32
_CmEthernetTrafficPortOamRemoteMaxPDUSize_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteMaxPDUSize = _CmEthernetTrafficPortOamRemoteMaxPDUSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 52),
    _CmEthernetTrafficPortOamRemoteMaxPDUSize_Type()
)
cmEthernetTrafficPortOamRemoteMaxPDUSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteMaxPDUSize.setStatus("current")
_CmEthernetTrafficPortOamRemoteMode_Type = CmOamMode
_CmEthernetTrafficPortOamRemoteMode_Object = MibTableColumn
cmEthernetTrafficPortOamRemoteMode = _CmEthernetTrafficPortOamRemoteMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 53),
    _CmEthernetTrafficPortOamRemoteMode_Type()
)
cmEthernetTrafficPortOamRemoteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamRemoteMode.setStatus("current")
_CmEthernetTrafficPortOamEnabled_Type = TruthValue
_CmEthernetTrafficPortOamEnabled_Object = MibTableColumn
cmEthernetTrafficPortOamEnabled = _CmEthernetTrafficPortOamEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 54),
    _CmEthernetTrafficPortOamEnabled_Type()
)
cmEthernetTrafficPortOamEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamEnabled.setStatus("current")
_CmEthernetTrafficPortOamAdminState_Type = CmOamAdminState
_CmEthernetTrafficPortOamAdminState_Object = MibTableColumn
cmEthernetTrafficPortOamAdminState = _CmEthernetTrafficPortOamAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 55),
    _CmEthernetTrafficPortOamAdminState_Type()
)
cmEthernetTrafficPortOamAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOamAdminState.setStatus("current")
_CmEthernetTrafficPortSvcType_Type = CmEthernetTrafficSvcType
_CmEthernetTrafficPortSvcType_Object = MibTableColumn
cmEthernetTrafficPortSvcType = _CmEthernetTrafficPortSvcType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 56),
    _CmEthernetTrafficPortSvcType_Type()
)
cmEthernetTrafficPortSvcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSvcType.setStatus("current")
_CmEthernetTrafficPortRxPauseEnabled_Type = TruthValue
_CmEthernetTrafficPortRxPauseEnabled_Object = MibTableColumn
cmEthernetTrafficPortRxPauseEnabled = _CmEthernetTrafficPortRxPauseEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 57),
    _CmEthernetTrafficPortRxPauseEnabled_Type()
)
cmEthernetTrafficPortRxPauseEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRxPauseEnabled.setStatus("current")
_CmEthernetTrafficPortTxPauseEnabled_Type = TruthValue
_CmEthernetTrafficPortTxPauseEnabled_Object = MibTableColumn
cmEthernetTrafficPortTxPauseEnabled = _CmEthernetTrafficPortTxPauseEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 58),
    _CmEthernetTrafficPortTxPauseEnabled_Type()
)
cmEthernetTrafficPortTxPauseEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTxPauseEnabled.setStatus("current")
_CmEthernetTrafficPortAfpType_Type = CmAfpType
_CmEthernetTrafficPortAfpType_Object = MibTableColumn
cmEthernetTrafficPortAfpType = _CmEthernetTrafficPortAfpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 59),
    _CmEthernetTrafficPortAfpType_Type()
)
cmEthernetTrafficPortAfpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortAfpType.setStatus("current")
_CmEthernetTrafficPortShapingEnabled_Type = TruthValue
_CmEthernetTrafficPortShapingEnabled_Object = MibTableColumn
cmEthernetTrafficPortShapingEnabled = _CmEthernetTrafficPortShapingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 60),
    _CmEthernetTrafficPortShapingEnabled_Type()
)
cmEthernetTrafficPortShapingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortShapingEnabled.setStatus("current")
_CmEthernetTrafficPortShapedSpeedLo_Type = Unsigned32
_CmEthernetTrafficPortShapedSpeedLo_Object = MibTableColumn
cmEthernetTrafficPortShapedSpeedLo = _CmEthernetTrafficPortShapedSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 61),
    _CmEthernetTrafficPortShapedSpeedLo_Type()
)
cmEthernetTrafficPortShapedSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortShapedSpeedLo.setStatus("current")
_CmEthernetTrafficPortShapedSpeedHi_Type = Unsigned32
_CmEthernetTrafficPortShapedSpeedHi_Object = MibTableColumn
cmEthernetTrafficPortShapedSpeedHi = _CmEthernetTrafficPortShapedSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 62),
    _CmEthernetTrafficPortShapedSpeedHi_Type()
)
cmEthernetTrafficPortShapedSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortShapedSpeedHi.setStatus("current")
_CmEthernetTrafficPortQinQEtherType_Type = Unsigned32
_CmEthernetTrafficPortQinQEtherType_Object = MibTableColumn
cmEthernetTrafficPortQinQEtherType = _CmEthernetTrafficPortQinQEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 63),
    _CmEthernetTrafficPortQinQEtherType_Type()
)
cmEthernetTrafficPortQinQEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortQinQEtherType.setStatus("current")
_CmEthernetTrafficPortTagFrameControl_Type = AfpTagControl
_CmEthernetTrafficPortTagFrameControl_Object = MibTableColumn
cmEthernetTrafficPortTagFrameControl = _CmEthernetTrafficPortTagFrameControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 64),
    _CmEthernetTrafficPortTagFrameControl_Type()
)
cmEthernetTrafficPortTagFrameControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTagFrameControl.setStatus("current")
_CmEthernetTrafficPortEgressVlanTrunkingEnabled_Type = TruthValue
_CmEthernetTrafficPortEgressVlanTrunkingEnabled_Object = MibTableColumn
cmEthernetTrafficPortEgressVlanTrunkingEnabled = _CmEthernetTrafficPortEgressVlanTrunkingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 65),
    _CmEthernetTrafficPortEgressVlanTrunkingEnabled_Type()
)
cmEthernetTrafficPortEgressVlanTrunkingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEgressVlanTrunkingEnabled.setStatus("current")
_CmEthernetTrafficPortIngressPushPVIDEnabled_Type = TruthValue
_CmEthernetTrafficPortIngressPushPVIDEnabled_Object = MibTableColumn
cmEthernetTrafficPortIngressPushPVIDEnabled = _CmEthernetTrafficPortIngressPushPVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 66),
    _CmEthernetTrafficPortIngressPushPVIDEnabled_Type()
)
cmEthernetTrafficPortIngressPushPVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIngressPushPVIDEnabled.setStatus("current")
_CmEthernetTrafficPortEgressPopPVIDEnabled_Type = TruthValue
_CmEthernetTrafficPortEgressPopPVIDEnabled_Object = MibTableColumn
cmEthernetTrafficPortEgressPopPVIDEnabled = _CmEthernetTrafficPortEgressPopPVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 67),
    _CmEthernetTrafficPortEgressPopPVIDEnabled_Type()
)
cmEthernetTrafficPortEgressPopPVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEgressPopPVIDEnabled.setStatus("current")
_CmEthernetTrafficPortEgressPopPriorityVidEnabled_Type = TruthValue
_CmEthernetTrafficPortEgressPopPriorityVidEnabled_Object = MibTableColumn
cmEthernetTrafficPortEgressPopPriorityVidEnabled = _CmEthernetTrafficPortEgressPopPriorityVidEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 68),
    _CmEthernetTrafficPortEgressPopPriorityVidEnabled_Type()
)
cmEthernetTrafficPortEgressPopPriorityVidEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEgressPopPriorityVidEnabled.setStatus("current")
_CmEthernetTrafficPortPortVlanId_Type = VlanId
_CmEthernetTrafficPortPortVlanId_Object = MibTableColumn
cmEthernetTrafficPortPortVlanId = _CmEthernetTrafficPortPortVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 69),
    _CmEthernetTrafficPortPortVlanId_Type()
)
cmEthernetTrafficPortPortVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPortVlanId.setStatus("current")
_CmEthernetTrafficPortPortVlanPriority_Type = VlanPriority
_CmEthernetTrafficPortPortVlanPriority_Object = MibTableColumn
cmEthernetTrafficPortPortVlanPriority = _CmEthernetTrafficPortPortVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 70),
    _CmEthernetTrafficPortPortVlanPriority_Type()
)
cmEthernetTrafficPortPortVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPortVlanPriority.setStatus("current")
_CmEthernetTrafficPortPriorityVlanId_Type = VlanId
_CmEthernetTrafficPortPriorityVlanId_Object = MibTableColumn
cmEthernetTrafficPortPriorityVlanId = _CmEthernetTrafficPortPriorityVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 71),
    _CmEthernetTrafficPortPriorityVlanId_Type()
)
cmEthernetTrafficPortPriorityVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPriorityVlanId.setStatus("deprecated")
_CmEthernetTrafficPortIngressPrioMapMode_Type = PriorityMapMode
_CmEthernetTrafficPortIngressPrioMapMode_Object = MibTableColumn
cmEthernetTrafficPortIngressPrioMapMode = _CmEthernetTrafficPortIngressPrioMapMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 72),
    _CmEthernetTrafficPortIngressPrioMapMode_Type()
)
cmEthernetTrafficPortIngressPrioMapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIngressPrioMapMode.setStatus("current")
_CmEthernetTrafficPortIngressCOSPriority_Type = VlanTagType
_CmEthernetTrafficPortIngressCOSPriority_Object = MibTableColumn
cmEthernetTrafficPortIngressCOSPriority = _CmEthernetTrafficPortIngressCOSPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 73),
    _CmEthernetTrafficPortIngressCOSPriority_Type()
)
cmEthernetTrafficPortIngressCOSPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIngressCOSPriority.setStatus("deprecated")
_CmEthernetTrafficPortSyncEEnabled_Type = TruthValue
_CmEthernetTrafficPortSyncEEnabled_Object = MibTableColumn
cmEthernetTrafficPortSyncEEnabled = _CmEthernetTrafficPortSyncEEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 74),
    _CmEthernetTrafficPortSyncEEnabled_Type()
)
cmEthernetTrafficPortSyncEEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSyncEEnabled.setStatus("current")
_CmEthernetTrafficPortQLModeEnabled_Type = TruthValue
_CmEthernetTrafficPortQLModeEnabled_Object = MibTableColumn
cmEthernetTrafficPortQLModeEnabled = _CmEthernetTrafficPortQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 75),
    _CmEthernetTrafficPortQLModeEnabled_Type()
)
cmEthernetTrafficPortQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortQLModeEnabled.setStatus("current")
_CmEthernetTrafficPortExpectedQL_Type = SSMQualityLevel
_CmEthernetTrafficPortExpectedQL_Object = MibTableColumn
cmEthernetTrafficPortExpectedQL = _CmEthernetTrafficPortExpectedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 76),
    _CmEthernetTrafficPortExpectedQL_Type()
)
cmEthernetTrafficPortExpectedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortExpectedQL.setStatus("current")
_CmEthernetTrafficPortAssumedQL_Type = SSMQualityLevel
_CmEthernetTrafficPortAssumedQL_Object = MibTableColumn
cmEthernetTrafficPortAssumedQL = _CmEthernetTrafficPortAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 77),
    _CmEthernetTrafficPortAssumedQL_Type()
)
cmEthernetTrafficPortAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortAssumedQL.setStatus("current")
_CmEthernetTrafficPortReceivedQL_Type = SSMQualityLevel
_CmEthernetTrafficPortReceivedQL_Object = MibTableColumn
cmEthernetTrafficPortReceivedQL = _CmEthernetTrafficPortReceivedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 78),
    _CmEthernetTrafficPortReceivedQL_Type()
)
cmEthernetTrafficPortReceivedQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortReceivedQL.setStatus("current")
_CmEthernetTrafficPortTransmitQL_Type = SSMQualityLevel
_CmEthernetTrafficPortTransmitQL_Object = MibTableColumn
cmEthernetTrafficPortTransmitQL = _CmEthernetTrafficPortTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 79),
    _CmEthernetTrafficPortTransmitQL_Type()
)
cmEthernetTrafficPortTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTransmitQL.setStatus("current")
_CmEthernetTrafficPortPhyType_Type = XgePhyType
_CmEthernetTrafficPortPhyType_Object = MibTableColumn
cmEthernetTrafficPortPhyType = _CmEthernetTrafficPortPhyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 80),
    _CmEthernetTrafficPortPhyType_Type()
)
cmEthernetTrafficPortPhyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPhyType.setStatus("current")
_CmEthernetTrafficPortSfpLaserWaveLengthPicometer_Type = Unsigned32
_CmEthernetTrafficPortSfpLaserWaveLengthPicometer_Object = MibTableColumn
cmEthernetTrafficPortSfpLaserWaveLengthPicometer = _CmEthernetTrafficPortSfpLaserWaveLengthPicometer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 81),
    _CmEthernetTrafficPortSfpLaserWaveLengthPicometer_Type()
)
cmEthernetTrafficPortSfpLaserWaveLengthPicometer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpLaserWaveLengthPicometer.setStatus("current")
_CmEthernetTrafficPortRowStatus_Type = RowStatus
_CmEthernetTrafficPortRowStatus_Object = MibTableColumn
cmEthernetTrafficPortRowStatus = _CmEthernetTrafficPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 82),
    _CmEthernetTrafficPortRowStatus_Type()
)
cmEthernetTrafficPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRowStatus.setStatus("current")
_CmEthernetTrafficPortSSMRemoteMacAddress_Type = MacAddress
_CmEthernetTrafficPortSSMRemoteMacAddress_Object = MibTableColumn
cmEthernetTrafficPortSSMRemoteMacAddress = _CmEthernetTrafficPortSSMRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 83),
    _CmEthernetTrafficPortSSMRemoteMacAddress_Type()
)
cmEthernetTrafficPortSSMRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSSMRemoteMacAddress.setStatus("current")


class _CmEthernetTrafficPortInnerVlanLoopbackMask_Type(Integer32):
    """Custom type cmEthernetTrafficPortInnerVlanLoopbackMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CmEthernetTrafficPortInnerVlanLoopbackMask_Type.__name__ = "Integer32"
_CmEthernetTrafficPortInnerVlanLoopbackMask_Object = MibTableColumn
cmEthernetTrafficPortInnerVlanLoopbackMask = _CmEthernetTrafficPortInnerVlanLoopbackMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 84),
    _CmEthernetTrafficPortInnerVlanLoopbackMask_Type()
)
cmEthernetTrafficPortInnerVlanLoopbackMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortInnerVlanLoopbackMask.setStatus("current")


class _CmEthernetTrafficPortInnerVlanLoopback1_Type(DisplayString):
    """Custom type cmEthernetTrafficPortInnerVlanLoopback1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortInnerVlanLoopback1_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortInnerVlanLoopback1_Object = MibTableColumn
cmEthernetTrafficPortInnerVlanLoopback1 = _CmEthernetTrafficPortInnerVlanLoopback1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 85),
    _CmEthernetTrafficPortInnerVlanLoopback1_Type()
)
cmEthernetTrafficPortInnerVlanLoopback1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortInnerVlanLoopback1.setStatus("current")


class _CmEthernetTrafficPortInnerVlanLoopback2_Type(DisplayString):
    """Custom type cmEthernetTrafficPortInnerVlanLoopback2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortInnerVlanLoopback2_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortInnerVlanLoopback2_Object = MibTableColumn
cmEthernetTrafficPortInnerVlanLoopback2 = _CmEthernetTrafficPortInnerVlanLoopback2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 86),
    _CmEthernetTrafficPortInnerVlanLoopback2_Type()
)
cmEthernetTrafficPortInnerVlanLoopback2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortInnerVlanLoopback2.setStatus("current")


class _CmEthernetTrafficPortInnerVlanLoopback3_Type(DisplayString):
    """Custom type cmEthernetTrafficPortInnerVlanLoopback3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CmEthernetTrafficPortInnerVlanLoopback3_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortInnerVlanLoopback3_Object = MibTableColumn
cmEthernetTrafficPortInnerVlanLoopback3 = _CmEthernetTrafficPortInnerVlanLoopback3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 87),
    _CmEthernetTrafficPortInnerVlanLoopback3_Type()
)
cmEthernetTrafficPortInnerVlanLoopback3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortInnerVlanLoopback3.setStatus("current")
_CmEthernetTrafficPortLaserWDMChannel_Type = SfpChannelIdentifier
_CmEthernetTrafficPortLaserWDMChannel_Object = MibTableColumn
cmEthernetTrafficPortLaserWDMChannel = _CmEthernetTrafficPortLaserWDMChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 88),
    _CmEthernetTrafficPortLaserWDMChannel_Type()
)
cmEthernetTrafficPortLaserWDMChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLaserWDMChannel.setStatus("current")
_CmEthernetTrafficPortLaserIsTunable_Type = TruthValue
_CmEthernetTrafficPortLaserIsTunable_Object = MibTableColumn
cmEthernetTrafficPortLaserIsTunable = _CmEthernetTrafficPortLaserIsTunable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 89),
    _CmEthernetTrafficPortLaserIsTunable_Type()
)
cmEthernetTrafficPortLaserIsTunable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLaserIsTunable.setStatus("current")
_CmEthernetTrafficPortLaserFrequency_Type = Unsigned32
_CmEthernetTrafficPortLaserFrequency_Object = MibTableColumn
cmEthernetTrafficPortLaserFrequency = _CmEthernetTrafficPortLaserFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 90),
    _CmEthernetTrafficPortLaserFrequency_Type()
)
cmEthernetTrafficPortLaserFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLaserFrequency.setStatus("current")
_CmEthernetTrafficPortDeiEnable_Type = TruthValue
_CmEthernetTrafficPortDeiEnable_Object = MibTableColumn
cmEthernetTrafficPortDeiEnable = _CmEthernetTrafficPortDeiEnable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 91),
    _CmEthernetTrafficPortDeiEnable_Type()
)
cmEthernetTrafficPortDeiEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDeiEnable.setStatus("deprecated")
_CmEthernetTrafficPortPcpDEEncType_Type = PcpDEEncType
_CmEthernetTrafficPortPcpDEEncType_Object = MibTableColumn
cmEthernetTrafficPortPcpDEEncType = _CmEthernetTrafficPortPcpDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 92),
    _CmEthernetTrafficPortPcpDEEncType_Type()
)
cmEthernetTrafficPortPcpDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncType.setStatus("current")
_CmEthernetTrafficPortPcpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetTrafficPortPcpDEPairsAction_Object = MibTableColumn
cmEthernetTrafficPortPcpDEPairsAction = _CmEthernetTrafficPortPcpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 93),
    _CmEthernetTrafficPortPcpDEPairsAction_Type()
)
cmEthernetTrafficPortPcpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEPairsAction.setStatus("current")
_CmEthernetTrafficPortInitiateDiag_Type = CmEthernetDiagAction
_CmEthernetTrafficPortInitiateDiag_Object = MibTableColumn
cmEthernetTrafficPortInitiateDiag = _CmEthernetTrafficPortInitiateDiag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 94),
    _CmEthernetTrafficPortInitiateDiag_Type()
)
cmEthernetTrafficPortInitiateDiag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortInitiateDiag.setStatus("current")
_CmEthernetTrafficPortDiagnosePair1Cond_Type = CmDiagCableCondType
_CmEthernetTrafficPortDiagnosePair1Cond_Object = MibTableColumn
cmEthernetTrafficPortDiagnosePair1Cond = _CmEthernetTrafficPortDiagnosePair1Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 95),
    _CmEthernetTrafficPortDiagnosePair1Cond_Type()
)
cmEthernetTrafficPortDiagnosePair1Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnosePair1Cond.setStatus("current")
_CmEthernetTrafficPortDiagnosePair2Cond_Type = CmDiagCableCondType
_CmEthernetTrafficPortDiagnosePair2Cond_Object = MibTableColumn
cmEthernetTrafficPortDiagnosePair2Cond = _CmEthernetTrafficPortDiagnosePair2Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 96),
    _CmEthernetTrafficPortDiagnosePair2Cond_Type()
)
cmEthernetTrafficPortDiagnosePair2Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnosePair2Cond.setStatus("current")
_CmEthernetTrafficPortDiagnosePair3Cond_Type = CmDiagCableCondType
_CmEthernetTrafficPortDiagnosePair3Cond_Object = MibTableColumn
cmEthernetTrafficPortDiagnosePair3Cond = _CmEthernetTrafficPortDiagnosePair3Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 97),
    _CmEthernetTrafficPortDiagnosePair3Cond_Type()
)
cmEthernetTrafficPortDiagnosePair3Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnosePair3Cond.setStatus("current")
_CmEthernetTrafficPortDiagnosePair4Cond_Type = CmDiagCableCondType
_CmEthernetTrafficPortDiagnosePair4Cond_Object = MibTableColumn
cmEthernetTrafficPortDiagnosePair4Cond = _CmEthernetTrafficPortDiagnosePair4Cond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 98),
    _CmEthernetTrafficPortDiagnosePair4Cond_Type()
)
cmEthernetTrafficPortDiagnosePair4Cond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnosePair4Cond.setStatus("current")
_CmEthernetTrafficPortDiagnoseAutoNegCond_Type = CmDiagAutoNegCondType
_CmEthernetTrafficPortDiagnoseAutoNegCond_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseAutoNegCond = _CmEthernetTrafficPortDiagnoseAutoNegCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 99),
    _CmEthernetTrafficPortDiagnoseAutoNegCond_Type()
)
cmEthernetTrafficPortDiagnoseAutoNegCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseAutoNegCond.setStatus("current")
_CmEthernetTrafficPortDiagnoseLpbkCond_Type = CmDiagLpbkCondType
_CmEthernetTrafficPortDiagnoseLpbkCond_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseLpbkCond = _CmEthernetTrafficPortDiagnoseLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 100),
    _CmEthernetTrafficPortDiagnoseLpbkCond_Type()
)
cmEthernetTrafficPortDiagnoseLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseLpbkCond.setStatus("current")
_CmEthernetTrafficPortDiagnoseEfmLpbkCond_Type = CmDiagEfmOamLpbkCondType
_CmEthernetTrafficPortDiagnoseEfmLpbkCond_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseEfmLpbkCond = _CmEthernetTrafficPortDiagnoseEfmLpbkCond_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 101),
    _CmEthernetTrafficPortDiagnoseEfmLpbkCond_Type()
)
cmEthernetTrafficPortDiagnoseEfmLpbkCond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseEfmLpbkCond.setStatus("current")


class _CmEthernetTrafficPortDiagnoseResult_Type(DisplayString):
    """Custom type cmEthernetTrafficPortDiagnoseResult based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetTrafficPortDiagnoseResult_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortDiagnoseResult_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseResult = _CmEthernetTrafficPortDiagnoseResult_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 102),
    _CmEthernetTrafficPortDiagnoseResult_Type()
)
cmEthernetTrafficPortDiagnoseResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseResult.setStatus("current")
_CmEthernetTrafficPortDiagnoseTestStatus_Type = CmDiagTestStatus
_CmEthernetTrafficPortDiagnoseTestStatus_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseTestStatus = _CmEthernetTrafficPortDiagnoseTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 103),
    _CmEthernetTrafficPortDiagnoseTestStatus_Type()
)
cmEthernetTrafficPortDiagnoseTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseTestStatus.setStatus("current")
_CmEthernetTrafficPortDiagnoseTestTime_Type = DateAndTime
_CmEthernetTrafficPortDiagnoseTestTime_Object = MibTableColumn
cmEthernetTrafficPortDiagnoseTestTime = _CmEthernetTrafficPortDiagnoseTestTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 104),
    _CmEthernetTrafficPortDiagnoseTestTime_Type()
)
cmEthernetTrafficPortDiagnoseTestTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnoseTestTime.setStatus("current")
_CmEthernetTrafficPortAutoDiagEnabled_Type = TruthValue
_CmEthernetTrafficPortAutoDiagEnabled_Object = MibTableColumn
cmEthernetTrafficPortAutoDiagEnabled = _CmEthernetTrafficPortAutoDiagEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 105),
    _CmEthernetTrafficPortAutoDiagEnabled_Type()
)
cmEthernetTrafficPortAutoDiagEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortAutoDiagEnabled.setStatus("current")
_CmEthernetTrafficPortDeleteEntitiesAction_Type = TrafficPortDeleteEntitiesAction
_CmEthernetTrafficPortDeleteEntitiesAction_Object = MibTableColumn
cmEthernetTrafficPortDeleteEntitiesAction = _CmEthernetTrafficPortDeleteEntitiesAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 106),
    _CmEthernetTrafficPortDeleteEntitiesAction_Type()
)
cmEthernetTrafficPortDeleteEntitiesAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDeleteEntitiesAction.setStatus("current")
_CmEthernetTrafficPortMaxMpFpNum_Type = Integer32
_CmEthernetTrafficPortMaxMpFpNum_Object = MibTableColumn
cmEthernetTrafficPortMaxMpFpNum = _CmEthernetTrafficPortMaxMpFpNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 107),
    _CmEthernetTrafficPortMaxMpFpNum_Type()
)
cmEthernetTrafficPortMaxMpFpNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMaxMpFpNum.setStatus("current")
_CmEthernetTrafficPortJdsuLoopbackEnabled_Type = TruthValue
_CmEthernetTrafficPortJdsuLoopbackEnabled_Object = MibTableColumn
cmEthernetTrafficPortJdsuLoopbackEnabled = _CmEthernetTrafficPortJdsuLoopbackEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 108),
    _CmEthernetTrafficPortJdsuLoopbackEnabled_Type()
)
cmEthernetTrafficPortJdsuLoopbackEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuLoopbackEnabled.setStatus("deprecated")
_CmEthernetTrafficPortJdsuLoopbackVlanId_Type = VlanId
_CmEthernetTrafficPortJdsuLoopbackVlanId_Object = MibTableColumn
cmEthernetTrafficPortJdsuLoopbackVlanId = _CmEthernetTrafficPortJdsuLoopbackVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 109),
    _CmEthernetTrafficPortJdsuLoopbackVlanId_Type()
)
cmEthernetTrafficPortJdsuLoopbackVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuLoopbackVlanId.setStatus("deprecated")
_CmEthernetTrafficPortIngressPopPriorityVidEnabled_Type = TruthValue
_CmEthernetTrafficPortIngressPopPriorityVidEnabled_Object = MibTableColumn
cmEthernetTrafficPortIngressPopPriorityVidEnabled = _CmEthernetTrafficPortIngressPopPriorityVidEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 110),
    _CmEthernetTrafficPortIngressPopPriorityVidEnabled_Type()
)
cmEthernetTrafficPortIngressPopPriorityVidEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIngressPopPriorityVidEnabled.setStatus("current")
_CmEthernetTrafficPortRxDeiAction_Type = RxDeiAction
_CmEthernetTrafficPortRxDeiAction_Object = MibTableColumn
cmEthernetTrafficPortRxDeiAction = _CmEthernetTrafficPortRxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 111),
    _CmEthernetTrafficPortRxDeiAction_Type()
)
cmEthernetTrafficPortRxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRxDeiAction.setStatus("current")
_CmEthernetTrafficPortTxDeiAction_Type = TxDeiAction
_CmEthernetTrafficPortTxDeiAction_Object = MibTableColumn
cmEthernetTrafficPortTxDeiAction = _CmEthernetTrafficPortTxDeiAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 112),
    _CmEthernetTrafficPortTxDeiAction_Type()
)
cmEthernetTrafficPortTxDeiAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTxDeiAction.setStatus("current")
_CmEthernetTrafficPortRxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetTrafficPortRxDeiOuterTagType_Object = MibTableColumn
cmEthernetTrafficPortRxDeiOuterTagType = _CmEthernetTrafficPortRxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 113),
    _CmEthernetTrafficPortRxDeiOuterTagType_Type()
)
cmEthernetTrafficPortRxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRxDeiOuterTagType.setStatus("current")
_CmEthernetTrafficPortTxDeiOuterTagType_Type = DeiOuterTagType
_CmEthernetTrafficPortTxDeiOuterTagType_Object = MibTableColumn
cmEthernetTrafficPortTxDeiOuterTagType = _CmEthernetTrafficPortTxDeiOuterTagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 114),
    _CmEthernetTrafficPortTxDeiOuterTagType_Type()
)
cmEthernetTrafficPortTxDeiOuterTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTxDeiOuterTagType.setStatus("current")
_CmEthernetTrafficPortMode_Type = CmEthernetSvcPortMode
_CmEthernetTrafficPortMode_Object = MibTableColumn
cmEthernetTrafficPortMode = _CmEthernetTrafficPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 115),
    _CmEthernetTrafficPortMode_Type()
)
cmEthernetTrafficPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMode.setStatus("current")
_CmEthernetTrafficPortServiceType_Type = CmEthernetSvcType
_CmEthernetTrafficPortServiceType_Object = MibTableColumn
cmEthernetTrafficPortServiceType = _CmEthernetTrafficPortServiceType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 116),
    _CmEthernetTrafficPortServiceType_Type()
)
cmEthernetTrafficPortServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortServiceType.setStatus("current")
_CmEthernetTrafficPortLoopbackSourceMacControlEnabled_Type = TruthValue
_CmEthernetTrafficPortLoopbackSourceMacControlEnabled_Object = MibTableColumn
cmEthernetTrafficPortLoopbackSourceMacControlEnabled = _CmEthernetTrafficPortLoopbackSourceMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 117),
    _CmEthernetTrafficPortLoopbackSourceMacControlEnabled_Type()
)
cmEthernetTrafficPortLoopbackSourceMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackSourceMacControlEnabled.setStatus("current")
_CmEthernetTrafficPortLoopbackDestMacControlEnabled_Type = TruthValue
_CmEthernetTrafficPortLoopbackDestMacControlEnabled_Object = MibTableColumn
cmEthernetTrafficPortLoopbackDestMacControlEnabled = _CmEthernetTrafficPortLoopbackDestMacControlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 118),
    _CmEthernetTrafficPortLoopbackDestMacControlEnabled_Type()
)
cmEthernetTrafficPortLoopbackDestMacControlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackDestMacControlEnabled.setStatus("current")
_CmEthernetTrafficPortLoopbackSourceMacAddress_Type = MacAddress
_CmEthernetTrafficPortLoopbackSourceMacAddress_Object = MibTableColumn
cmEthernetTrafficPortLoopbackSourceMacAddress = _CmEthernetTrafficPortLoopbackSourceMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 119),
    _CmEthernetTrafficPortLoopbackSourceMacAddress_Type()
)
cmEthernetTrafficPortLoopbackSourceMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackSourceMacAddress.setStatus("current")
_CmEthernetTrafficPortLoopbackDestMacAddress_Type = MacAddress
_CmEthernetTrafficPortLoopbackDestMacAddress_Object = MibTableColumn
cmEthernetTrafficPortLoopbackDestMacAddress = _CmEthernetTrafficPortLoopbackDestMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 120),
    _CmEthernetTrafficPortLoopbackDestMacAddress_Type()
)
cmEthernetTrafficPortLoopbackDestMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackDestMacAddress.setStatus("current")
_CmEthernetTrafficPortLoopbackBlockingEnabled_Type = TruthValue
_CmEthernetTrafficPortLoopbackBlockingEnabled_Object = MibTableColumn
cmEthernetTrafficPortLoopbackBlockingEnabled = _CmEthernetTrafficPortLoopbackBlockingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 121),
    _CmEthernetTrafficPortLoopbackBlockingEnabled_Type()
)
cmEthernetTrafficPortLoopbackBlockingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackBlockingEnabled.setStatus("current")
_CmEthernetTrafficPortMediaTypeAutoSelected_Type = EthernetMediaType
_CmEthernetTrafficPortMediaTypeAutoSelected_Object = MibTableColumn
cmEthernetTrafficPortMediaTypeAutoSelected = _CmEthernetTrafficPortMediaTypeAutoSelected_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 122),
    _CmEthernetTrafficPortMediaTypeAutoSelected_Type()
)
cmEthernetTrafficPortMediaTypeAutoSelected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMediaTypeAutoSelected.setStatus("current")
_CmEthernetTrafficPortLowLatencyQueuingEnabled_Type = TruthValue
_CmEthernetTrafficPortLowLatencyQueuingEnabled_Object = MibTableColumn
cmEthernetTrafficPortLowLatencyQueuingEnabled = _CmEthernetTrafficPortLowLatencyQueuingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 123),
    _CmEthernetTrafficPortLowLatencyQueuingEnabled_Type()
)
cmEthernetTrafficPortLowLatencyQueuingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLowLatencyQueuingEnabled.setStatus("current")
_CmEthernetTrafficPortDiagnosticMacAddress_Type = MacAddress
_CmEthernetTrafficPortDiagnosticMacAddress_Object = MibTableColumn
cmEthernetTrafficPortDiagnosticMacAddress = _CmEthernetTrafficPortDiagnosticMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 124),
    _CmEthernetTrafficPortDiagnosticMacAddress_Type()
)
cmEthernetTrafficPortDiagnosticMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortDiagnosticMacAddress.setStatus("current")
_CmEthernetTrafficPortIngressSwapPriorityVIDEnabled_Type = TruthValue
_CmEthernetTrafficPortIngressSwapPriorityVIDEnabled_Object = MibTableColumn
cmEthernetTrafficPortIngressSwapPriorityVIDEnabled = _CmEthernetTrafficPortIngressSwapPriorityVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 125),
    _CmEthernetTrafficPortIngressSwapPriorityVIDEnabled_Type()
)
cmEthernetTrafficPortIngressSwapPriorityVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortIngressSwapPriorityVIDEnabled.setStatus("current")
_CmEthernetTrafficPortEgressSwapPriorityVIDEnabled_Type = TruthValue
_CmEthernetTrafficPortEgressSwapPriorityVIDEnabled_Object = MibTableColumn
cmEthernetTrafficPortEgressSwapPriorityVIDEnabled = _CmEthernetTrafficPortEgressSwapPriorityVIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 126),
    _CmEthernetTrafficPortEgressSwapPriorityVIDEnabled_Type()
)
cmEthernetTrafficPortEgressSwapPriorityVIDEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortEgressSwapPriorityVIDEnabled.setStatus("current")
_CmEthernetTrafficPortSwapPriorityVID_Type = VlanId
_CmEthernetTrafficPortSwapPriorityVID_Object = MibTableColumn
cmEthernetTrafficPortSwapPriorityVID = _CmEthernetTrafficPortSwapPriorityVID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 127),
    _CmEthernetTrafficPortSwapPriorityVID_Type()
)
cmEthernetTrafficPortSwapPriorityVID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSwapPriorityVID.setStatus("current")
_CmEthernetTrafficPortExpDEEncType_Type = PcpDEEncType
_CmEthernetTrafficPortExpDEEncType_Object = MibTableColumn
cmEthernetTrafficPortExpDEEncType = _CmEthernetTrafficPortExpDEEncType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 128),
    _CmEthernetTrafficPortExpDEEncType_Type()
)
cmEthernetTrafficPortExpDEEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortExpDEEncType.setStatus("current")
_CmEthernetTrafficPortExpDEPairsAction_Type = PcpDEPairsAction
_CmEthernetTrafficPortExpDEPairsAction_Object = MibTableColumn
cmEthernetTrafficPortExpDEPairsAction = _CmEthernetTrafficPortExpDEPairsAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 129),
    _CmEthernetTrafficPortExpDEPairsAction_Type()
)
cmEthernetTrafficPortExpDEPairsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortExpDEPairsAction.setStatus("current")
_CmEthernetTrafficPortJdsuLoopbackSrcIp_Type = IpAddress
_CmEthernetTrafficPortJdsuLoopbackSrcIp_Object = MibTableColumn
cmEthernetTrafficPortJdsuLoopbackSrcIp = _CmEthernetTrafficPortJdsuLoopbackSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 130),
    _CmEthernetTrafficPortJdsuLoopbackSrcIp_Type()
)
cmEthernetTrafficPortJdsuLoopbackSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuLoopbackSrcIp.setStatus("current")
_CmEthernetTrafficPortTxSsm_Type = ToggleValue
_CmEthernetTrafficPortTxSsm_Object = MibTableColumn
cmEthernetTrafficPortTxSsm = _CmEthernetTrafficPortTxSsm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 131),
    _CmEthernetTrafficPortTxSsm_Type()
)
cmEthernetTrafficPortTxSsm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTxSsm.setStatus("current")
_CmEthernetTrafficPortRxSsmQL_Type = SynceRxSsmQl
_CmEthernetTrafficPortRxSsmQL_Object = MibTableColumn
cmEthernetTrafficPortRxSsmQL = _CmEthernetTrafficPortRxSsmQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 132),
    _CmEthernetTrafficPortRxSsmQL_Type()
)
cmEthernetTrafficPortRxSsmQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRxSsmQL.setStatus("current")
_CmEthernetTrafficPortSyncEMode_Type = SynceMode
_CmEthernetTrafficPortSyncEMode_Object = MibTableColumn
cmEthernetTrafficPortSyncEMode = _CmEthernetTrafficPortSyncEMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 133),
    _CmEthernetTrafficPortSyncEMode_Type()
)
cmEthernetTrafficPortSyncEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSyncEMode.setStatus("current")
_CmEthernetTrafficPortSyncEServiceAvailableTime_Type = Unsigned32
_CmEthernetTrafficPortSyncEServiceAvailableTime_Object = MibTableColumn
cmEthernetTrafficPortSyncEServiceAvailableTime = _CmEthernetTrafficPortSyncEServiceAvailableTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 134),
    _CmEthernetTrafficPortSyncEServiceAvailableTime_Type()
)
cmEthernetTrafficPortSyncEServiceAvailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSyncEServiceAvailableTime.setStatus("current")
_CmEthernetTrafficPortSyncEServiceUnavailableTime_Type = Unsigned32
_CmEthernetTrafficPortSyncEServiceUnavailableTime_Object = MibTableColumn
cmEthernetTrafficPortSyncEServiceUnavailableTime = _CmEthernetTrafficPortSyncEServiceUnavailableTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 135),
    _CmEthernetTrafficPortSyncEServiceUnavailableTime_Type()
)
cmEthernetTrafficPortSyncEServiceUnavailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSyncEServiceUnavailableTime.setStatus("current")
_CmEthernetTrafficPortSyncEServiceAvailablePercentage_Type = DisplayString
_CmEthernetTrafficPortSyncEServiceAvailablePercentage_Object = MibTableColumn
cmEthernetTrafficPortSyncEServiceAvailablePercentage = _CmEthernetTrafficPortSyncEServiceAvailablePercentage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 136),
    _CmEthernetTrafficPortSyncEServiceAvailablePercentage_Type()
)
cmEthernetTrafficPortSyncEServiceAvailablePercentage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSyncEServiceAvailablePercentage.setStatus("current")
_CmEthernetTrafficPortWfqSegmentationCOS_Type = Integer32
_CmEthernetTrafficPortWfqSegmentationCOS_Object = MibTableColumn
cmEthernetTrafficPortWfqSegmentationCOS = _CmEthernetTrafficPortWfqSegmentationCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 137),
    _CmEthernetTrafficPortWfqSegmentationCOS_Type()
)
cmEthernetTrafficPortWfqSegmentationCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortWfqSegmentationCOS.setStatus("current")
_CmEthernetTrafficPortWfqGroupCOS_Type = Integer32
_CmEthernetTrafficPortWfqGroupCOS_Object = MibTableColumn
cmEthernetTrafficPortWfqGroupCOS = _CmEthernetTrafficPortWfqGroupCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 138),
    _CmEthernetTrafficPortWfqGroupCOS_Type()
)
cmEthernetTrafficPortWfqGroupCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortWfqGroupCOS.setStatus("current")
_CmEthernetTrafficPortWfqGroupEirLo_Type = Unsigned32
_CmEthernetTrafficPortWfqGroupEirLo_Object = MibTableColumn
cmEthernetTrafficPortWfqGroupEirLo = _CmEthernetTrafficPortWfqGroupEirLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 139),
    _CmEthernetTrafficPortWfqGroupEirLo_Type()
)
cmEthernetTrafficPortWfqGroupEirLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortWfqGroupEirLo.setStatus("current")
_CmEthernetTrafficPortWfqGroupEirHi_Type = Unsigned32
_CmEthernetTrafficPortWfqGroupEirHi_Object = MibTableColumn
cmEthernetTrafficPortWfqGroupEirHi = _CmEthernetTrafficPortWfqGroupEirHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 140),
    _CmEthernetTrafficPortWfqGroupEirHi_Type()
)
cmEthernetTrafficPortWfqGroupEirHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortWfqGroupEirHi.setStatus("current")
_CmEthernetTrafficPortOuterTagTpidOverride_Type = TruthValue
_CmEthernetTrafficPortOuterTagTpidOverride_Object = MibTableColumn
cmEthernetTrafficPortOuterTagTpidOverride = _CmEthernetTrafficPortOuterTagTpidOverride_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 141),
    _CmEthernetTrafficPortOuterTagTpidOverride_Type()
)
cmEthernetTrafficPortOuterTagTpidOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterTagTpidOverride.setStatus("current")
_CmEthernetTrafficPortOuterTagTpid_Type = Unsigned32
_CmEthernetTrafficPortOuterTagTpid_Object = MibTableColumn
cmEthernetTrafficPortOuterTagTpid = _CmEthernetTrafficPortOuterTagTpid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 142),
    _CmEthernetTrafficPortOuterTagTpid_Type()
)
cmEthernetTrafficPortOuterTagTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortOuterTagTpid.setStatus("current")
_CmEthernetTrafficPortSfpTxPowerLevel_Type = DisplayString
_CmEthernetTrafficPortSfpTxPowerLevel_Object = MibTableColumn
cmEthernetTrafficPortSfpTxPowerLevel = _CmEthernetTrafficPortSfpTxPowerLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 143),
    _CmEthernetTrafficPortSfpTxPowerLevel_Type()
)
cmEthernetTrafficPortSfpTxPowerLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpTxPowerLevel.setStatus("current")
_CmEthernetTrafficPortSfpRxPowerLevel_Type = DisplayString
_CmEthernetTrafficPortSfpRxPowerLevel_Object = MibTableColumn
cmEthernetTrafficPortSfpRxPowerLevel = _CmEthernetTrafficPortSfpRxPowerLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 144),
    _CmEthernetTrafficPortSfpRxPowerLevel_Type()
)
cmEthernetTrafficPortSfpRxPowerLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpRxPowerLevel.setStatus("current")
_CmEthernetTrafficPortBwResourcePort_Type = VariablePointer
_CmEthernetTrafficPortBwResourcePort_Object = MibTableColumn
cmEthernetTrafficPortBwResourcePort = _CmEthernetTrafficPortBwResourcePort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 145),
    _CmEthernetTrafficPortBwResourcePort_Type()
)
cmEthernetTrafficPortBwResourcePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortBwResourcePort.setStatus("current")


class _CmEthernetTrafficPortSfpName_Type(DisplayString):
    """Custom type cmEthernetTrafficPortSfpName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetTrafficPortSfpName_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortSfpName_Object = MibTableColumn
cmEthernetTrafficPortSfpName = _CmEthernetTrafficPortSfpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 146),
    _CmEthernetTrafficPortSfpName_Type()
)
cmEthernetTrafficPortSfpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpName.setStatus("current")


class _CmEthernetTrafficPortSfpHardwareRevision_Type(DisplayString):
    """Custom type cmEthernetTrafficPortSfpHardwareRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortSfpHardwareRevision_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortSfpHardwareRevision_Object = MibTableColumn
cmEthernetTrafficPortSfpHardwareRevision = _CmEthernetTrafficPortSfpHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 147),
    _CmEthernetTrafficPortSfpHardwareRevision_Type()
)
cmEthernetTrafficPortSfpHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpHardwareRevision.setStatus("current")
_CmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl_Type = TruthValue
_CmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl_Object = MibTableColumn
cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl = _CmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 148),
    _CmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl_Type()
)
cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl.setStatus("current")
_CmEthernetTrafficPortLoopbackTestReflectorIPv4Address_Type = IpAddress
_CmEthernetTrafficPortLoopbackTestReflectorIPv4Address_Object = MibTableColumn
cmEthernetTrafficPortLoopbackTestReflectorIPv4Address = _CmEthernetTrafficPortLoopbackTestReflectorIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 149),
    _CmEthernetTrafficPortLoopbackTestReflectorIPv4Address_Type()
)
cmEthernetTrafficPortLoopbackTestReflectorIPv4Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackTestReflectorIPv4Address.setStatus("current")
_CmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl_Type = TruthValue
_CmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl_Object = MibTableColumn
cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl = _CmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 150),
    _CmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl_Type()
)
cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl.setStatus("current")
_CmEthernetTrafficPortLoopbackTestReflectorIPv6Address_Type = Ipv6Address
_CmEthernetTrafficPortLoopbackTestReflectorIPv6Address_Object = MibTableColumn
cmEthernetTrafficPortLoopbackTestReflectorIPv6Address = _CmEthernetTrafficPortLoopbackTestReflectorIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 151),
    _CmEthernetTrafficPortLoopbackTestReflectorIPv6Address_Type()
)
cmEthernetTrafficPortLoopbackTestReflectorIPv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLoopbackTestReflectorIPv6Address.setStatus("current")
_CmEthernetTrafficPortSfpIdentifierValue_Type = SfpIdentifierValue
_CmEthernetTrafficPortSfpIdentifierValue_Object = MibTableColumn
cmEthernetTrafficPortSfpIdentifierValue = _CmEthernetTrafficPortSfpIdentifierValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 152),
    _CmEthernetTrafficPortSfpIdentifierValue_Type()
)
cmEthernetTrafficPortSfpIdentifierValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortSfpIdentifierValue.setStatus("current")
_CmEthernetTrafficPortPlugType_Type = PlugType
_CmEthernetTrafficPortPlugType_Object = MibTableColumn
cmEthernetTrafficPortPlugType = _CmEthernetTrafficPortPlugType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 153),
    _CmEthernetTrafficPortPlugType_Type()
)
cmEthernetTrafficPortPlugType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugType.setStatus("current")
_CmEthernetTrafficPortPlugMode_Type = PlugMode
_CmEthernetTrafficPortPlugMode_Object = MibTableColumn
cmEthernetTrafficPortPlugMode = _CmEthernetTrafficPortPlugMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 154),
    _CmEthernetTrafficPortPlugMode_Type()
)
cmEthernetTrafficPortPlugMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugMode.setStatus("current")
_CmEthernetTrafficPortPlugGMetroAutoTuningMode_Type = GMetroAutoTuningMode
_CmEthernetTrafficPortPlugGMetroAutoTuningMode_Object = MibTableColumn
cmEthernetTrafficPortPlugGMetroAutoTuningMode = _CmEthernetTrafficPortPlugGMetroAutoTuningMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 155),
    _CmEthernetTrafficPortPlugGMetroAutoTuningMode_Type()
)
cmEthernetTrafficPortPlugGMetroAutoTuningMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugGMetroAutoTuningMode.setStatus("current")
_CmEthernetTrafficPortPlugChannelType_Type = ChannelType
_CmEthernetTrafficPortPlugChannelType_Object = MibTableColumn
cmEthernetTrafficPortPlugChannelType = _CmEthernetTrafficPortPlugChannelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 156),
    _CmEthernetTrafficPortPlugChannelType_Type()
)
cmEthernetTrafficPortPlugChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugChannelType.setStatus("current")
_CmEthernetTrafficPortPlugITUCbandChannel_Type = ITUCBandChannelIdentifier
_CmEthernetTrafficPortPlugITUCbandChannel_Object = MibTableColumn
cmEthernetTrafficPortPlugITUCbandChannel = _CmEthernetTrafficPortPlugITUCbandChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 157),
    _CmEthernetTrafficPortPlugITUCbandChannel_Type()
)
cmEthernetTrafficPortPlugITUCbandChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugITUCbandChannel.setStatus("current")
_CmEthernetTrafficPortPlugRelativeChannel_Type = RelativeChannelIdentifier
_CmEthernetTrafficPortPlugRelativeChannel_Object = MibTableColumn
cmEthernetTrafficPortPlugRelativeChannel = _CmEthernetTrafficPortPlugRelativeChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 158),
    _CmEthernetTrafficPortPlugRelativeChannel_Type()
)
cmEthernetTrafficPortPlugRelativeChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugRelativeChannel.setStatus("current")
_CmEthernetTrafficPortPlugFrequency_Type = FrequencyIdentifier
_CmEthernetTrafficPortPlugFrequency_Object = MibTableColumn
cmEthernetTrafficPortPlugFrequency = _CmEthernetTrafficPortPlugFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 159),
    _CmEthernetTrafficPortPlugFrequency_Type()
)
cmEthernetTrafficPortPlugFrequency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugFrequency.setStatus("current")
_CmEthernetTrafficPortPlugOutOfBandChannelStatus_Type = OutOfBandChannelStatus
_CmEthernetTrafficPortPlugOutOfBandChannelStatus_Object = MibTableColumn
cmEthernetTrafficPortPlugOutOfBandChannelStatus = _CmEthernetTrafficPortPlugOutOfBandChannelStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 160),
    _CmEthernetTrafficPortPlugOutOfBandChannelStatus_Type()
)
cmEthernetTrafficPortPlugOutOfBandChannelStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPlugOutOfBandChannelStatus.setStatus("current")
_CmEthernetTrafficPortRemotePlugITUCbandChannel_Type = ITUCBandChannelIdentifier
_CmEthernetTrafficPortRemotePlugITUCbandChannel_Object = MibTableColumn
cmEthernetTrafficPortRemotePlugITUCbandChannel = _CmEthernetTrafficPortRemotePlugITUCbandChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 161),
    _CmEthernetTrafficPortRemotePlugITUCbandChannel_Type()
)
cmEthernetTrafficPortRemotePlugITUCbandChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemotePlugITUCbandChannel.setStatus("current")
_CmEthernetTrafficPortRemotePlugRelativeChannel_Type = RelativeChannelIdentifier
_CmEthernetTrafficPortRemotePlugRelativeChannel_Object = MibTableColumn
cmEthernetTrafficPortRemotePlugRelativeChannel = _CmEthernetTrafficPortRemotePlugRelativeChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 162),
    _CmEthernetTrafficPortRemotePlugRelativeChannel_Type()
)
cmEthernetTrafficPortRemotePlugRelativeChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemotePlugRelativeChannel.setStatus("current")
_CmEthernetTrafficPortRemotePlugFrequency_Type = FrequencyIdentifier
_CmEthernetTrafficPortRemotePlugFrequency_Object = MibTableColumn
cmEthernetTrafficPortRemotePlugFrequency = _CmEthernetTrafficPortRemotePlugFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 163),
    _CmEthernetTrafficPortRemotePlugFrequency_Type()
)
cmEthernetTrafficPortRemotePlugFrequency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemotePlugFrequency.setStatus("current")


class _CmEthernetTrafficPortRemoteSfpVendorName_Type(DisplayString):
    """Custom type cmEthernetTrafficPortRemoteSfpVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortRemoteSfpVendorName_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortRemoteSfpVendorName_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpVendorName = _CmEthernetTrafficPortRemoteSfpVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 164),
    _CmEthernetTrafficPortRemoteSfpVendorName_Type()
)
cmEthernetTrafficPortRemoteSfpVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpVendorName.setStatus("current")


class _CmEthernetTrafficPortRemoteSfpName_Type(DisplayString):
    """Custom type cmEthernetTrafficPortRemoteSfpName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetTrafficPortRemoteSfpName_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortRemoteSfpName_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpName = _CmEthernetTrafficPortRemoteSfpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 165),
    _CmEthernetTrafficPortRemoteSfpName_Type()
)
cmEthernetTrafficPortRemoteSfpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpName.setStatus("current")


class _CmEthernetTrafficPortRemoteSfpPartNumber_Type(DisplayString):
    """Custom type cmEthernetTrafficPortRemoteSfpPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortRemoteSfpPartNumber_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortRemoteSfpPartNumber_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpPartNumber = _CmEthernetTrafficPortRemoteSfpPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 166),
    _CmEthernetTrafficPortRemoteSfpPartNumber_Type()
)
cmEthernetTrafficPortRemoteSfpPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpPartNumber.setStatus("current")


class _CmEthernetTrafficPortRemoteSfpHardwareRevision_Type(DisplayString):
    """Custom type cmEthernetTrafficPortRemoteSfpHardwareRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmEthernetTrafficPortRemoteSfpHardwareRevision_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortRemoteSfpHardwareRevision_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpHardwareRevision = _CmEthernetTrafficPortRemoteSfpHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 167),
    _CmEthernetTrafficPortRemoteSfpHardwareRevision_Type()
)
cmEthernetTrafficPortRemoteSfpHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpHardwareRevision.setStatus("current")


class _CmEthernetTrafficPortRemoteSfpSerialNumber_Type(DisplayString):
    """Custom type cmEthernetTrafficPortRemoteSfpSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CmEthernetTrafficPortRemoteSfpSerialNumber_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortRemoteSfpSerialNumber_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpSerialNumber = _CmEthernetTrafficPortRemoteSfpSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 168),
    _CmEthernetTrafficPortRemoteSfpSerialNumber_Type()
)
cmEthernetTrafficPortRemoteSfpSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpSerialNumber.setStatus("current")
_CmEthernetTrafficPortRemoteSfpDateOfManufacture_Type = DateAndTime
_CmEthernetTrafficPortRemoteSfpDateOfManufacture_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpDateOfManufacture = _CmEthernetTrafficPortRemoteSfpDateOfManufacture_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 169),
    _CmEthernetTrafficPortRemoteSfpDateOfManufacture_Type()
)
cmEthernetTrafficPortRemoteSfpDateOfManufacture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpDateOfManufacture.setStatus("current")
_CmEthernetTrafficPortRemoteSfpLinkLength_Type = Integer32
_CmEthernetTrafficPortRemoteSfpLinkLength_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpLinkLength = _CmEthernetTrafficPortRemoteSfpLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 170),
    _CmEthernetTrafficPortRemoteSfpLinkLength_Type()
)
cmEthernetTrafficPortRemoteSfpLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpLinkLength.setStatus("current")
_CmEthernetTrafficPortRemoteSfpLaserWaveLength_Type = Integer32
_CmEthernetTrafficPortRemoteSfpLaserWaveLength_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpLaserWaveLength = _CmEthernetTrafficPortRemoteSfpLaserWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 171),
    _CmEthernetTrafficPortRemoteSfpLaserWaveLength_Type()
)
cmEthernetTrafficPortRemoteSfpLaserWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpLaserWaveLength.setStatus("current")
_CmEthernetTrafficPortRemoteSfpLaserFrequency_Type = Unsigned32
_CmEthernetTrafficPortRemoteSfpLaserFrequency_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpLaserFrequency = _CmEthernetTrafficPortRemoteSfpLaserFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 172),
    _CmEthernetTrafficPortRemoteSfpLaserFrequency_Type()
)
cmEthernetTrafficPortRemoteSfpLaserFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpLaserFrequency.setStatus("current")
_CmEthernetTrafficPortRemoteSfpMediaType_Type = SfpMediaType
_CmEthernetTrafficPortRemoteSfpMediaType_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpMediaType = _CmEthernetTrafficPortRemoteSfpMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 173),
    _CmEthernetTrafficPortRemoteSfpMediaType_Type()
)
cmEthernetTrafficPortRemoteSfpMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpMediaType.setStatus("current")
_CmEthernetTrafficPortRemoteSfpConnectorValue_Type = SfpConnectorValue
_CmEthernetTrafficPortRemoteSfpConnectorValue_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpConnectorValue = _CmEthernetTrafficPortRemoteSfpConnectorValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 174),
    _CmEthernetTrafficPortRemoteSfpConnectorValue_Type()
)
cmEthernetTrafficPortRemoteSfpConnectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpConnectorValue.setStatus("current")
_CmEthernetTrafficPortRemoteSfpIdentifierValue_Type = SfpIdentifierValue
_CmEthernetTrafficPortRemoteSfpIdentifierValue_Object = MibTableColumn
cmEthernetTrafficPortRemoteSfpIdentifierValue = _CmEthernetTrafficPortRemoteSfpIdentifierValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 27, 1, 175),
    _CmEthernetTrafficPortRemoteSfpIdentifierValue_Type()
)
cmEthernetTrafficPortRemoteSfpIdentifierValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRemoteSfpIdentifierValue.setStatus("current")
_CmElineFlowTable_Object = MibTable
cmElineFlowTable = _CmElineFlowTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28)
)
if mibBuilder.loadTexts:
    cmElineFlowTable.setStatus("current")
_CmElineFlowEntry_Object = MibTableRow
cmElineFlowEntry = _CmElineFlowEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1)
)
cmElineFlowEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "cmElineFlowIndex"),
)
if mibBuilder.loadTexts:
    cmElineFlowEntry.setStatus("current")


class _CmElineFlowIndex_Type(Integer32):
    """Custom type cmElineFlowIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmElineFlowIndex_Type.__name__ = "Integer32"
_CmElineFlowIndex_Object = MibTableColumn
cmElineFlowIndex = _CmElineFlowIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 1),
    _CmElineFlowIndex_Type()
)
cmElineFlowIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowIndex.setStatus("current")


class _CmElineFlowCircuitName_Type(DisplayString):
    """Custom type cmElineFlowCircuitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmElineFlowCircuitName_Type.__name__ = "DisplayString"
_CmElineFlowCircuitName_Object = MibTableColumn
cmElineFlowCircuitName = _CmElineFlowCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 2),
    _CmElineFlowCircuitName_Type()
)
cmElineFlowCircuitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowCircuitName.setStatus("current")
_CmElineFlowAdminState_Type = AdminState
_CmElineFlowAdminState_Object = MibTableColumn
cmElineFlowAdminState = _CmElineFlowAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 3),
    _CmElineFlowAdminState_Type()
)
cmElineFlowAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmElineFlowAdminState.setStatus("current")
_CmElineFlowOperationalState_Type = OperationalState
_CmElineFlowOperationalState_Object = MibTableColumn
cmElineFlowOperationalState = _CmElineFlowOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 4),
    _CmElineFlowOperationalState_Type()
)
cmElineFlowOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmElineFlowOperationalState.setStatus("current")
_CmElineFlowSecondaryState_Type = SecondaryState
_CmElineFlowSecondaryState_Object = MibTableColumn
cmElineFlowSecondaryState = _CmElineFlowSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 5),
    _CmElineFlowSecondaryState_Type()
)
cmElineFlowSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmElineFlowSecondaryState.setStatus("current")
_CmElineFlowFP1_Type = VariablePointer
_CmElineFlowFP1_Object = MibTableColumn
cmElineFlowFP1 = _CmElineFlowFP1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 6),
    _CmElineFlowFP1_Type()
)
cmElineFlowFP1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowFP1.setStatus("current")
_CmElineFlowFP2_Type = VariablePointer
_CmElineFlowFP2_Object = MibTableColumn
cmElineFlowFP2 = _CmElineFlowFP2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 7),
    _CmElineFlowFP2_Type()
)
cmElineFlowFP2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowFP2.setStatus("current")
_CmElineFlowStorageType_Type = StorageType
_CmElineFlowStorageType_Object = MibTableColumn
cmElineFlowStorageType = _CmElineFlowStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 8),
    _CmElineFlowStorageType_Type()
)
cmElineFlowStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowStorageType.setStatus("current")
_CmElineFlowRowStatus_Type = RowStatus
_CmElineFlowRowStatus_Object = MibTableColumn
cmElineFlowRowStatus = _CmElineFlowRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 28, 1, 9),
    _CmElineFlowRowStatus_Type()
)
cmElineFlowRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmElineFlowRowStatus.setStatus("current")
_CmFlowPointTable_Object = MibTable
cmFlowPointTable = _CmFlowPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29)
)
if mibBuilder.loadTexts:
    cmFlowPointTable.setStatus("current")
_CmFlowPointEntry_Object = MibTableRow
cmFlowPointEntry = _CmFlowPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1)
)
cmFlowPointEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
)
if mibBuilder.loadTexts:
    cmFlowPointEntry.setStatus("current")


class _CmFlowPointIndex_Type(Integer32):
    """Custom type cmFlowPointIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmFlowPointIndex_Type.__name__ = "Integer32"
_CmFlowPointIndex_Object = MibTableColumn
cmFlowPointIndex = _CmFlowPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 1),
    _CmFlowPointIndex_Type()
)
cmFlowPointIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointIndex.setStatus("current")


class _CmFlowPointCircuitName_Type(DisplayString):
    """Custom type cmFlowPointCircuitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmFlowPointCircuitName_Type.__name__ = "DisplayString"
_CmFlowPointCircuitName_Object = MibTableColumn
cmFlowPointCircuitName = _CmFlowPointCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 2),
    _CmFlowPointCircuitName_Type()
)
cmFlowPointCircuitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCircuitName.setStatus("current")
_CmFlowPointAdminState_Type = AdminState
_CmFlowPointAdminState_Object = MibTableColumn
cmFlowPointAdminState = _CmFlowPointAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 3),
    _CmFlowPointAdminState_Type()
)
cmFlowPointAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointAdminState.setStatus("current")
_CmFlowPointOperationalState_Type = OperationalState
_CmFlowPointOperationalState_Object = MibTableColumn
cmFlowPointOperationalState = _CmFlowPointOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 4),
    _CmFlowPointOperationalState_Type()
)
cmFlowPointOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowPointOperationalState.setStatus("current")
_CmFlowPointSecondaryState_Type = SecondaryState
_CmFlowPointSecondaryState_Object = MibTableColumn
cmFlowPointSecondaryState = _CmFlowPointSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 5),
    _CmFlowPointSecondaryState_Type()
)
cmFlowPointSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowPointSecondaryState.setStatus("current")
_CmFlowPointAssociatedFlowId_Type = VariablePointer
_CmFlowPointAssociatedFlowId_Object = MibTableColumn
cmFlowPointAssociatedFlowId = _CmFlowPointAssociatedFlowId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 6),
    _CmFlowPointAssociatedFlowId_Type()
)
cmFlowPointAssociatedFlowId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowPointAssociatedFlowId.setStatus("current")
_CmFlowPointIngressMultiCOS_Type = TruthValue
_CmFlowPointIngressMultiCOS_Object = MibTableColumn
cmFlowPointIngressMultiCOS = _CmFlowPointIngressMultiCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 7),
    _CmFlowPointIngressMultiCOS_Type()
)
cmFlowPointIngressMultiCOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointIngressMultiCOS.setStatus("current")
_CmFlowPointIngressCOS_Type = Integer32
_CmFlowPointIngressCOS_Object = MibTableColumn
cmFlowPointIngressCOS = _CmFlowPointIngressCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 8),
    _CmFlowPointIngressCOS_Type()
)
cmFlowPointIngressCOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointIngressCOS.setStatus("current")


class _CmFlowPointIngressVlanMemberList_Type(DisplayString):
    """Custom type cmFlowPointIngressVlanMemberList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CmFlowPointIngressVlanMemberList_Type.__name__ = "DisplayString"
_CmFlowPointIngressVlanMemberList_Object = MibTableColumn
cmFlowPointIngressVlanMemberList = _CmFlowPointIngressVlanMemberList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 9),
    _CmFlowPointIngressVlanMemberList_Type()
)
cmFlowPointIngressVlanMemberList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointIngressVlanMemberList.setStatus("current")
_CmFlowPointVlanMemberAction_Type = FlowVlanActionType
_CmFlowPointVlanMemberAction_Object = MibTableColumn
cmFlowPointVlanMemberAction = _CmFlowPointVlanMemberAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 10),
    _CmFlowPointVlanMemberAction_Type()
)
cmFlowPointVlanMemberAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointVlanMemberAction.setStatus("current")


class _CmFlowPointVlanMemberActionVlan_Type(DisplayString):
    """Custom type cmFlowPointVlanMemberActionVlan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmFlowPointVlanMemberActionVlan_Type.__name__ = "DisplayString"
_CmFlowPointVlanMemberActionVlan_Object = MibTableColumn
cmFlowPointVlanMemberActionVlan = _CmFlowPointVlanMemberActionVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 11),
    _CmFlowPointVlanMemberActionVlan_Type()
)
cmFlowPointVlanMemberActionVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointVlanMemberActionVlan.setStatus("current")
_CmFlowPointIngressUntaggedFrameEnabled_Type = TruthValue
_CmFlowPointIngressUntaggedFrameEnabled_Object = MibTableColumn
cmFlowPointIngressUntaggedFrameEnabled = _CmFlowPointIngressUntaggedFrameEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 12),
    _CmFlowPointIngressUntaggedFrameEnabled_Type()
)
cmFlowPointIngressUntaggedFrameEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointIngressUntaggedFrameEnabled.setStatus("current")
_CmFlowPointCTagControl_Type = FlowTagControl
_CmFlowPointCTagControl_Object = MibTableColumn
cmFlowPointCTagControl = _CmFlowPointCTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 13),
    _CmFlowPointCTagControl_Type()
)
cmFlowPointCTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCTagControl.setStatus("current")
_CmFlowPointCTagVlanId_Type = VlanId
_CmFlowPointCTagVlanId_Object = MibTableColumn
cmFlowPointCTagVlanId = _CmFlowPointCTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 14),
    _CmFlowPointCTagVlanId_Type()
)
cmFlowPointCTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCTagVlanId.setStatus("current")
_CmFlowPointCTagVlanPriority_Type = VlanPriority
_CmFlowPointCTagVlanPriority_Object = MibTableColumn
cmFlowPointCTagVlanPriority = _CmFlowPointCTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 15),
    _CmFlowPointCTagVlanPriority_Type()
)
cmFlowPointCTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCTagVlanPriority.setStatus("current")
_CmFlowPointSTagControl_Type = FlowTagControl
_CmFlowPointSTagControl_Object = MibTableColumn
cmFlowPointSTagControl = _CmFlowPointSTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 16),
    _CmFlowPointSTagControl_Type()
)
cmFlowPointSTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointSTagControl.setStatus("current")
_CmFlowPointSTagVlanId_Type = VlanId
_CmFlowPointSTagVlanId_Object = MibTableColumn
cmFlowPointSTagVlanId = _CmFlowPointSTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 17),
    _CmFlowPointSTagVlanId_Type()
)
cmFlowPointSTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointSTagVlanId.setStatus("current")
_CmFlowPointSTagVlanPriority_Type = VlanPriority
_CmFlowPointSTagVlanPriority_Object = MibTableColumn
cmFlowPointSTagVlanPriority = _CmFlowPointSTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 18),
    _CmFlowPointSTagVlanPriority_Type()
)
cmFlowPointSTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointSTagVlanPriority.setStatus("current")
_CmFlowPointEgressOuterTagPrioMapEnabled_Type = TruthValue
_CmFlowPointEgressOuterTagPrioMapEnabled_Object = MibTableColumn
cmFlowPointEgressOuterTagPrioMapEnabled = _CmFlowPointEgressOuterTagPrioMapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 19),
    _CmFlowPointEgressOuterTagPrioMapEnabled_Type()
)
cmFlowPointEgressOuterTagPrioMapEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointEgressOuterTagPrioMapEnabled.setStatus("current")
_CmFlowPointColorMarkingSupported_Type = TruthValue
_CmFlowPointColorMarkingSupported_Object = MibTableColumn
cmFlowPointColorMarkingSupported = _CmFlowPointColorMarkingSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 20),
    _CmFlowPointColorMarkingSupported_Type()
)
cmFlowPointColorMarkingSupported.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointColorMarkingSupported.setStatus("current")
_CmFlowPointAssociatedAclProfile_Type = VariablePointer
_CmFlowPointAssociatedAclProfile_Object = MibTableColumn
cmFlowPointAssociatedAclProfile = _CmFlowPointAssociatedAclProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 21),
    _CmFlowPointAssociatedAclProfile_Type()
)
cmFlowPointAssociatedAclProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointAssociatedAclProfile.setStatus("current")


class _CmFlowPointSESFramesLossThresholdRatio_Type(Integer32):
    """Custom type cmFlowPointSESFramesLossThresholdRatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CmFlowPointSESFramesLossThresholdRatio_Type.__name__ = "Integer32"
_CmFlowPointSESFramesLossThresholdRatio_Object = MibTableColumn
cmFlowPointSESFramesLossThresholdRatio = _CmFlowPointSESFramesLossThresholdRatio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 22),
    _CmFlowPointSESFramesLossThresholdRatio_Type()
)
cmFlowPointSESFramesLossThresholdRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointSESFramesLossThresholdRatio.setStatus("current")
_CmFlowPointStorageType_Type = StorageType
_CmFlowPointStorageType_Object = MibTableColumn
cmFlowPointStorageType = _CmFlowPointStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 23),
    _CmFlowPointStorageType_Type()
)
cmFlowPointStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointStorageType.setStatus("current")
_CmFlowPointRowStatus_Type = RowStatus
_CmFlowPointRowStatus_Object = MibTableColumn
cmFlowPointRowStatus = _CmFlowPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 24),
    _CmFlowPointRowStatus_Type()
)
cmFlowPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointRowStatus.setStatus("current")
_CmFlowPointDefaultMemberEnabled_Type = TruthValue
_CmFlowPointDefaultMemberEnabled_Object = MibTableColumn
cmFlowPointDefaultMemberEnabled = _CmFlowPointDefaultMemberEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 25),
    _CmFlowPointDefaultMemberEnabled_Type()
)
cmFlowPointDefaultMemberEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointDefaultMemberEnabled.setStatus("current")
_CmFlowPointMcastRateLimitEnabled_Type = TruthValue
_CmFlowPointMcastRateLimitEnabled_Object = MibTableColumn
cmFlowPointMcastRateLimitEnabled = _CmFlowPointMcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 26),
    _CmFlowPointMcastRateLimitEnabled_Type()
)
cmFlowPointMcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastRateLimitEnabled.setStatus("current")
_CmFlowPointMcastRateLimitSpeedLo_Type = Unsigned32
_CmFlowPointMcastRateLimitSpeedLo_Object = MibTableColumn
cmFlowPointMcastRateLimitSpeedLo = _CmFlowPointMcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 27),
    _CmFlowPointMcastRateLimitSpeedLo_Type()
)
cmFlowPointMcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastRateLimitSpeedLo.setStatus("current")
_CmFlowPointMcastRateLimitSpeedHi_Type = Unsigned32
_CmFlowPointMcastRateLimitSpeedHi_Object = MibTableColumn
cmFlowPointMcastRateLimitSpeedHi = _CmFlowPointMcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 28),
    _CmFlowPointMcastRateLimitSpeedHi_Type()
)
cmFlowPointMcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastRateLimitSpeedHi.setStatus("current")
_CmFlowPointBcastRateLimitEnabled_Type = TruthValue
_CmFlowPointBcastRateLimitEnabled_Object = MibTableColumn
cmFlowPointBcastRateLimitEnabled = _CmFlowPointBcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 29),
    _CmFlowPointBcastRateLimitEnabled_Type()
)
cmFlowPointBcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointBcastRateLimitEnabled.setStatus("current")
_CmFlowPointBcastRateLimitSpeedLo_Type = Unsigned32
_CmFlowPointBcastRateLimitSpeedLo_Object = MibTableColumn
cmFlowPointBcastRateLimitSpeedLo = _CmFlowPointBcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 30),
    _CmFlowPointBcastRateLimitSpeedLo_Type()
)
cmFlowPointBcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointBcastRateLimitSpeedLo.setStatus("current")
_CmFlowPointBcastRateLimitSpeedHi_Type = Unsigned32
_CmFlowPointBcastRateLimitSpeedHi_Object = MibTableColumn
cmFlowPointBcastRateLimitSpeedHi = _CmFlowPointBcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 31),
    _CmFlowPointBcastRateLimitSpeedHi_Type()
)
cmFlowPointBcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointBcastRateLimitSpeedHi.setStatus("current")
_CmFlowPointSplitHorizonGroupOID_Type = VariablePointer
_CmFlowPointSplitHorizonGroupOID_Object = MibTableColumn
cmFlowPointSplitHorizonGroupOID = _CmFlowPointSplitHorizonGroupOID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 32),
    _CmFlowPointSplitHorizonGroupOID_Type()
)
cmFlowPointSplitHorizonGroupOID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointSplitHorizonGroupOID.setStatus("current")
_CmFlowPointLoopAvoidance_Type = VariablePointer
_CmFlowPointLoopAvoidance_Object = MibTableColumn
cmFlowPointLoopAvoidance = _CmFlowPointLoopAvoidance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 33),
    _CmFlowPointLoopAvoidance_Type()
)
cmFlowPointLoopAvoidance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointLoopAvoidance.setStatus("current")
_CmFlowPointHierarchicalCosEnabled_Type = TruthValue
_CmFlowPointHierarchicalCosEnabled_Object = MibTableColumn
cmFlowPointHierarchicalCosEnabled = _CmFlowPointHierarchicalCosEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 34),
    _CmFlowPointHierarchicalCosEnabled_Type()
)
cmFlowPointHierarchicalCosEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointHierarchicalCosEnabled.setStatus("current")


class _CmFlowPointWfqQid_Type(Integer32):
    """Custom type cmFlowPointWfqQid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmFlowPointWfqQid_Type.__name__ = "Integer32"
_CmFlowPointWfqQid_Object = MibTableColumn
cmFlowPointWfqQid = _CmFlowPointWfqQid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 35),
    _CmFlowPointWfqQid_Type()
)
cmFlowPointWfqQid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqQid.setStatus("current")


class _CmFlowPointWfqOutPriority_Type(Integer32):
    """Custom type cmFlowPointWfqOutPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmFlowPointWfqOutPriority_Type.__name__ = "Integer32"
_CmFlowPointWfqOutPriority_Object = MibTableColumn
cmFlowPointWfqOutPriority = _CmFlowPointWfqOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 36),
    _CmFlowPointWfqOutPriority_Type()
)
cmFlowPointWfqOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqOutPriority.setStatus("current")
_CmFlowPointMaximumBWLo_Type = Unsigned32
_CmFlowPointMaximumBWLo_Object = MibTableColumn
cmFlowPointMaximumBWLo = _CmFlowPointMaximumBWLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 37),
    _CmFlowPointMaximumBWLo_Type()
)
cmFlowPointMaximumBWLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMaximumBWLo.setStatus("current")
_CmFlowPointMaximumBWHi_Type = Unsigned32
_CmFlowPointMaximumBWHi_Object = MibTableColumn
cmFlowPointMaximumBWHi = _CmFlowPointMaximumBWHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 38),
    _CmFlowPointMaximumBWHi_Type()
)
cmFlowPointMaximumBWHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMaximumBWHi.setStatus("current")
_CmFlowPointGuaranteedBWLo_Type = Unsigned32
_CmFlowPointGuaranteedBWLo_Object = MibTableColumn
cmFlowPointGuaranteedBWLo = _CmFlowPointGuaranteedBWLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 39),
    _CmFlowPointGuaranteedBWLo_Type()
)
cmFlowPointGuaranteedBWLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointGuaranteedBWLo.setStatus("current")
_CmFlowPointGuaranteedBWHi_Type = Unsigned32
_CmFlowPointGuaranteedBWHi_Object = MibTableColumn
cmFlowPointGuaranteedBWHi = _CmFlowPointGuaranteedBWHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 40),
    _CmFlowPointGuaranteedBWHi_Type()
)
cmFlowPointGuaranteedBWHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointGuaranteedBWHi.setStatus("current")
_CmFlowPointRefPrioMapProfile_Type = VariablePointer
_CmFlowPointRefPrioMapProfile_Object = MibTableColumn
cmFlowPointRefPrioMapProfile = _CmFlowPointRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 41),
    _CmFlowPointRefPrioMapProfile_Type()
)
cmFlowPointRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointRefPrioMapProfile.setStatus("current")
_CmFlowPointMcastAndBcastRateLimitEnabled_Type = TruthValue
_CmFlowPointMcastAndBcastRateLimitEnabled_Object = MibTableColumn
cmFlowPointMcastAndBcastRateLimitEnabled = _CmFlowPointMcastAndBcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 42),
    _CmFlowPointMcastAndBcastRateLimitEnabled_Type()
)
cmFlowPointMcastAndBcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastAndBcastRateLimitEnabled.setStatus("current")
_CmFlowPointMcastAndBcastRateLimitSpeedLo_Type = Unsigned32
_CmFlowPointMcastAndBcastRateLimitSpeedLo_Object = MibTableColumn
cmFlowPointMcastAndBcastRateLimitSpeedLo = _CmFlowPointMcastAndBcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 43),
    _CmFlowPointMcastAndBcastRateLimitSpeedLo_Type()
)
cmFlowPointMcastAndBcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastAndBcastRateLimitSpeedLo.setStatus("current")
_CmFlowPointMcastAndBcastRateLimitSpeedHi_Type = Unsigned32
_CmFlowPointMcastAndBcastRateLimitSpeedHi_Object = MibTableColumn
cmFlowPointMcastAndBcastRateLimitSpeedHi = _CmFlowPointMcastAndBcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 44),
    _CmFlowPointMcastAndBcastRateLimitSpeedHi_Type()
)
cmFlowPointMcastAndBcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointMcastAndBcastRateLimitSpeedHi.setStatus("current")
_CmFlowPointEgressShapingType_Type = ShapingType
_CmFlowPointEgressShapingType_Object = MibTableColumn
cmFlowPointEgressShapingType = _CmFlowPointEgressShapingType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 45),
    _CmFlowPointEgressShapingType_Type()
)
cmFlowPointEgressShapingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointEgressShapingType.setStatus("current")
_CmFlowPointEgressInnerTagPrioMapEnabled_Type = TruthValue
_CmFlowPointEgressInnerTagPrioMapEnabled_Object = MibTableColumn
cmFlowPointEgressInnerTagPrioMapEnabled = _CmFlowPointEgressInnerTagPrioMapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 46),
    _CmFlowPointEgressInnerTagPrioMapEnabled_Type()
)
cmFlowPointEgressInnerTagPrioMapEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointEgressInnerTagPrioMapEnabled.setStatus("current")
_CmFlowPointAutoBandwidthConfigEnabled_Type = TruthValue
_CmFlowPointAutoBandwidthConfigEnabled_Object = MibTableColumn
cmFlowPointAutoBandwidthConfigEnabled = _CmFlowPointAutoBandwidthConfigEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 47),
    _CmFlowPointAutoBandwidthConfigEnabled_Type()
)
cmFlowPointAutoBandwidthConfigEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointAutoBandwidthConfigEnabled.setStatus("current")


class _CmFlowPointAutoCIRPercentage_Type(Integer32):
    """Custom type cmFlowPointAutoCIRPercentage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CmFlowPointAutoCIRPercentage_Type.__name__ = "Integer32"
_CmFlowPointAutoCIRPercentage_Object = MibTableColumn
cmFlowPointAutoCIRPercentage = _CmFlowPointAutoCIRPercentage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 48),
    _CmFlowPointAutoCIRPercentage_Type()
)
cmFlowPointAutoCIRPercentage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointAutoCIRPercentage.setStatus("current")
_CmFlowPointFrameFwdEnabled_Type = TruthValue
_CmFlowPointFrameFwdEnabled_Object = MibTableColumn
cmFlowPointFrameFwdEnabled = _CmFlowPointFrameFwdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 49),
    _CmFlowPointFrameFwdEnabled_Type()
)
cmFlowPointFrameFwdEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointFrameFwdEnabled.setStatus("current")
_CmFlowPointUsePortPrioMapProfile_Type = TruthValue
_CmFlowPointUsePortPrioMapProfile_Object = MibTableColumn
cmFlowPointUsePortPrioMapProfile = _CmFlowPointUsePortPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 50),
    _CmFlowPointUsePortPrioMapProfile_Type()
)
cmFlowPointUsePortPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointUsePortPrioMapProfile.setStatus("current")
_CmFlowPointRefEoMplsPwObject_Type = VariablePointer
_CmFlowPointRefEoMplsPwObject_Object = MibTableColumn
cmFlowPointRefEoMplsPwObject = _CmFlowPointRefEoMplsPwObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 51),
    _CmFlowPointRefEoMplsPwObject_Type()
)
cmFlowPointRefEoMplsPwObject.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointRefEoMplsPwObject.setStatus("current")
_CmFlowPointElmiEvcIdentifier_Type = DisplayString
_CmFlowPointElmiEvcIdentifier_Object = MibTableColumn
cmFlowPointElmiEvcIdentifier = _CmFlowPointElmiEvcIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 52),
    _CmFlowPointElmiEvcIdentifier_Type()
)
cmFlowPointElmiEvcIdentifier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointElmiEvcIdentifier.setStatus("current")
_CmFlowPointRefElpObject_Type = VariablePointer
_CmFlowPointRefElpObject_Object = MibTableColumn
cmFlowPointRefElpObject = _CmFlowPointRefElpObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 53),
    _CmFlowPointRefElpObject_Type()
)
cmFlowPointRefElpObject.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointRefElpObject.setStatus("current")
_CmFlowPointEfEnabled_Type = TruthValue
_CmFlowPointEfEnabled_Object = MibTableColumn
cmFlowPointEfEnabled = _CmFlowPointEfEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 54),
    _CmFlowPointEfEnabled_Type()
)
cmFlowPointEfEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointEfEnabled.setStatus("current")
_CmFlowPointEfIdentificationType_Type = EfIdentificationType
_CmFlowPointEfIdentificationType_Object = MibTableColumn
cmFlowPointEfIdentificationType = _CmFlowPointEfIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 55),
    _CmFlowPointEfIdentificationType_Type()
)
cmFlowPointEfIdentificationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointEfIdentificationType.setStatus("current")
_CmFlowPointEfRateThresholdLo_Type = Unsigned32
_CmFlowPointEfRateThresholdLo_Object = MibTableColumn
cmFlowPointEfRateThresholdLo = _CmFlowPointEfRateThresholdLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 56),
    _CmFlowPointEfRateThresholdLo_Type()
)
cmFlowPointEfRateThresholdLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointEfRateThresholdLo.setStatus("current")
_CmFlowPointEfRateThresholdHi_Type = Unsigned32
_CmFlowPointEfRateThresholdHi_Object = MibTableColumn
cmFlowPointEfRateThresholdHi = _CmFlowPointEfRateThresholdHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 57),
    _CmFlowPointEfRateThresholdHi_Type()
)
cmFlowPointEfRateThresholdHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointEfRateThresholdHi.setStatus("current")
_CmFlowPointAclNoMatchDisposition_Type = AclNoMatchDispositionType
_CmFlowPointAclNoMatchDisposition_Object = MibTableColumn
cmFlowPointAclNoMatchDisposition = _CmFlowPointAclNoMatchDisposition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 58),
    _CmFlowPointAclNoMatchDisposition_Type()
)
cmFlowPointAclNoMatchDisposition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointAclNoMatchDisposition.setStatus("current")
_CmFlowPointEfIdentificationFields_Type = EfIdentificationFieldType
_CmFlowPointEfIdentificationFields_Object = MibTableColumn
cmFlowPointEfIdentificationFields = _CmFlowPointEfIdentificationFields_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 59),
    _CmFlowPointEfIdentificationFields_Type()
)
cmFlowPointEfIdentificationFields.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointEfIdentificationFields.setStatus("current")
_CmFlowPointWfqSegmentationCOS_Type = Integer32
_CmFlowPointWfqSegmentationCOS_Object = MibTableColumn
cmFlowPointWfqSegmentationCOS = _CmFlowPointWfqSegmentationCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 60),
    _CmFlowPointWfqSegmentationCOS_Type()
)
cmFlowPointWfqSegmentationCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqSegmentationCOS.setStatus("current")
_CmFlowPointWfqGroupCOS_Type = Integer32
_CmFlowPointWfqGroupCOS_Object = MibTableColumn
cmFlowPointWfqGroupCOS = _CmFlowPointWfqGroupCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 61),
    _CmFlowPointWfqGroupCOS_Type()
)
cmFlowPointWfqGroupCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqGroupCOS.setStatus("current")
_CmFlowPointWfqGroupEirLo_Type = Unsigned32
_CmFlowPointWfqGroupEirLo_Object = MibTableColumn
cmFlowPointWfqGroupEirLo = _CmFlowPointWfqGroupEirLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 62),
    _CmFlowPointWfqGroupEirLo_Type()
)
cmFlowPointWfqGroupEirLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqGroupEirLo.setStatus("current")
_CmFlowPointWfqGroupEirHi_Type = Unsigned32
_CmFlowPointWfqGroupEirHi_Object = MibTableColumn
cmFlowPointWfqGroupEirHi = _CmFlowPointWfqGroupEirHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 29, 1, 63),
    _CmFlowPointWfqGroupEirHi_Type()
)
cmFlowPointWfqGroupEirHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointWfqGroupEirHi.setStatus("current")
_CmOAMFlowPointTable_Object = MibTable
cmOAMFlowPointTable = _CmOAMFlowPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30)
)
if mibBuilder.loadTexts:
    cmOAMFlowPointTable.setStatus("current")
_CmOAMFlowPointEntry_Object = MibTableRow
cmOAMFlowPointEntry = _CmOAMFlowPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1)
)
cmOAMFlowPointEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmOAMFlowPointIndex"),
)
if mibBuilder.loadTexts:
    cmOAMFlowPointEntry.setStatus("current")


class _CmOAMFlowPointIndex_Type(Integer32):
    """Custom type cmOAMFlowPointIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmOAMFlowPointIndex_Type.__name__ = "Integer32"
_CmOAMFlowPointIndex_Object = MibTableColumn
cmOAMFlowPointIndex = _CmOAMFlowPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 1),
    _CmOAMFlowPointIndex_Type()
)
cmOAMFlowPointIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointIndex.setStatus("current")


class _CmOAMFlowPointCircuitName_Type(DisplayString):
    """Custom type cmOAMFlowPointCircuitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmOAMFlowPointCircuitName_Type.__name__ = "DisplayString"
_CmOAMFlowPointCircuitName_Object = MibTableColumn
cmOAMFlowPointCircuitName = _CmOAMFlowPointCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 2),
    _CmOAMFlowPointCircuitName_Type()
)
cmOAMFlowPointCircuitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointCircuitName.setStatus("current")
_CmOAMFlowPointAdminState_Type = AdminState
_CmOAMFlowPointAdminState_Object = MibTableColumn
cmOAMFlowPointAdminState = _CmOAMFlowPointAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 3),
    _CmOAMFlowPointAdminState_Type()
)
cmOAMFlowPointAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmOAMFlowPointAdminState.setStatus("current")
_CmOAMFlowPointOperationalState_Type = OperationalState
_CmOAMFlowPointOperationalState_Object = MibTableColumn
cmOAMFlowPointOperationalState = _CmOAMFlowPointOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 4),
    _CmOAMFlowPointOperationalState_Type()
)
cmOAMFlowPointOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmOAMFlowPointOperationalState.setStatus("current")
_CmOAMFlowPointSecondaryState_Type = SecondaryState
_CmOAMFlowPointSecondaryState_Object = MibTableColumn
cmOAMFlowPointSecondaryState = _CmOAMFlowPointSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 5),
    _CmOAMFlowPointSecondaryState_Type()
)
cmOAMFlowPointSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmOAMFlowPointSecondaryState.setStatus("current")


class _CmOAMFlowPointIngressVlanMemberList_Type(DisplayString):
    """Custom type cmOAMFlowPointIngressVlanMemberList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CmOAMFlowPointIngressVlanMemberList_Type.__name__ = "DisplayString"
_CmOAMFlowPointIngressVlanMemberList_Object = MibTableColumn
cmOAMFlowPointIngressVlanMemberList = _CmOAMFlowPointIngressVlanMemberList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 6),
    _CmOAMFlowPointIngressVlanMemberList_Type()
)
cmOAMFlowPointIngressVlanMemberList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointIngressVlanMemberList.setStatus("current")
_CmOAMFlowPointVlanMemberAction_Type = FlowVlanActionType
_CmOAMFlowPointVlanMemberAction_Object = MibTableColumn
cmOAMFlowPointVlanMemberAction = _CmOAMFlowPointVlanMemberAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 7),
    _CmOAMFlowPointVlanMemberAction_Type()
)
cmOAMFlowPointVlanMemberAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmOAMFlowPointVlanMemberAction.setStatus("current")


class _CmOAMFlowPointVlanMemberActionVlan_Type(DisplayString):
    """Custom type cmOAMFlowPointVlanMemberActionVlan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CmOAMFlowPointVlanMemberActionVlan_Type.__name__ = "DisplayString"
_CmOAMFlowPointVlanMemberActionVlan_Object = MibTableColumn
cmOAMFlowPointVlanMemberActionVlan = _CmOAMFlowPointVlanMemberActionVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 8),
    _CmOAMFlowPointVlanMemberActionVlan_Type()
)
cmOAMFlowPointVlanMemberActionVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointVlanMemberActionVlan.setStatus("current")
_CmOAMFlowPointIngressUntaggedFrameSupported_Type = TruthValue
_CmOAMFlowPointIngressUntaggedFrameSupported_Object = MibTableColumn
cmOAMFlowPointIngressUntaggedFrameSupported = _CmOAMFlowPointIngressUntaggedFrameSupported_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 9),
    _CmOAMFlowPointIngressUntaggedFrameSupported_Type()
)
cmOAMFlowPointIngressUntaggedFrameSupported.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointIngressUntaggedFrameSupported.setStatus("current")


class _CmOAMFlowPointSESFramesLossThresholdRatio_Type(Integer32):
    """Custom type cmOAMFlowPointSESFramesLossThresholdRatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CmOAMFlowPointSESFramesLossThresholdRatio_Type.__name__ = "Integer32"
_CmOAMFlowPointSESFramesLossThresholdRatio_Object = MibTableColumn
cmOAMFlowPointSESFramesLossThresholdRatio = _CmOAMFlowPointSESFramesLossThresholdRatio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 10),
    _CmOAMFlowPointSESFramesLossThresholdRatio_Type()
)
cmOAMFlowPointSESFramesLossThresholdRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmOAMFlowPointSESFramesLossThresholdRatio.setStatus("current")
_CmOAMFlowPointStorageType_Type = StorageType
_CmOAMFlowPointStorageType_Object = MibTableColumn
cmOAMFlowPointStorageType = _CmOAMFlowPointStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 11),
    _CmOAMFlowPointStorageType_Type()
)
cmOAMFlowPointStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointStorageType.setStatus("current")
_CmOAMFlowPointRowStatus_Type = RowStatus
_CmOAMFlowPointRowStatus_Object = MibTableColumn
cmOAMFlowPointRowStatus = _CmOAMFlowPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 30, 1, 12),
    _CmOAMFlowPointRowStatus_Type()
)
cmOAMFlowPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmOAMFlowPointRowStatus.setStatus("current")
_CmIngressPrioMapTable_Object = MibTable
cmIngressPrioMapTable = _CmIngressPrioMapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 31)
)
if mibBuilder.loadTexts:
    cmIngressPrioMapTable.setStatus("current")
_CmIngressPrioMapEntry_Object = MibTableRow
cmIngressPrioMapEntry = _CmIngressPrioMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 31, 1)
)
cmIngressPrioMapEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmIngressPrioMapIndex"),
)
if mibBuilder.loadTexts:
    cmIngressPrioMapEntry.setStatus("current")


class _CmIngressPrioMapIndex_Type(Integer32):
    """Custom type cmIngressPrioMapIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CmIngressPrioMapIndex_Type.__name__ = "Integer32"
_CmIngressPrioMapIndex_Object = MibTableColumn
cmIngressPrioMapIndex = _CmIngressPrioMapIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 31, 1, 1),
    _CmIngressPrioMapIndex_Type()
)
cmIngressPrioMapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmIngressPrioMapIndex.setStatus("current")


class _CmIngressPrioMapInPriority_Type(Integer32):
    """Custom type cmIngressPrioMapInPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CmIngressPrioMapInPriority_Type.__name__ = "Integer32"
_CmIngressPrioMapInPriority_Object = MibTableColumn
cmIngressPrioMapInPriority = _CmIngressPrioMapInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 31, 1, 2),
    _CmIngressPrioMapInPriority_Type()
)
cmIngressPrioMapInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmIngressPrioMapInPriority.setStatus("current")


class _CmIngressPrioMapCOS_Type(Integer32):
    """Custom type cmIngressPrioMapCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmIngressPrioMapCOS_Type.__name__ = "Integer32"
_CmIngressPrioMapCOS_Object = MibTableColumn
cmIngressPrioMapCOS = _CmIngressPrioMapCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 31, 1, 3),
    _CmIngressPrioMapCOS_Type()
)
cmIngressPrioMapCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmIngressPrioMapCOS.setStatus("current")
_CmEgressPrioMapTable_Object = MibTable
cmEgressPrioMapTable = _CmEgressPrioMapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32)
)
if mibBuilder.loadTexts:
    cmEgressPrioMapTable.setStatus("current")
_CmEgressPrioMapEntry_Object = MibTableRow
cmEgressPrioMapEntry = _CmEgressPrioMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32, 1)
)
cmEgressPrioMapEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEgressCOSIndex"),
)
if mibBuilder.loadTexts:
    cmEgressPrioMapEntry.setStatus("current")


class _CmEgressCOSIndex_Type(Integer32):
    """Custom type cmEgressCOSIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmEgressCOSIndex_Type.__name__ = "Integer32"
_CmEgressCOSIndex_Object = MibTableColumn
cmEgressCOSIndex = _CmEgressCOSIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32, 1, 1),
    _CmEgressCOSIndex_Type()
)
cmEgressCOSIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEgressCOSIndex.setStatus("current")


class _CmEgressCOS_Type(Integer32):
    """Custom type cmEgressCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmEgressCOS_Type.__name__ = "Integer32"
_CmEgressCOS_Object = MibTableColumn
cmEgressCOS = _CmEgressCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32, 1, 2),
    _CmEgressCOS_Type()
)
cmEgressCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEgressCOS.setStatus("current")
_CmEgressOuterTagCtrl_Type = PrioMapControlType
_CmEgressOuterTagCtrl_Object = MibTableColumn
cmEgressOuterTagCtrl = _CmEgressOuterTagCtrl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32, 1, 3),
    _CmEgressOuterTagCtrl_Type()
)
cmEgressOuterTagCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEgressOuterTagCtrl.setStatus("current")
_CmEgressOuterTagPriority_Type = VlanPriority
_CmEgressOuterTagPriority_Object = MibTableColumn
cmEgressOuterTagPriority = _CmEgressOuterTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 32, 1, 4),
    _CmEgressOuterTagPriority_Type()
)
cmEgressOuterTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEgressOuterTagPriority.setStatus("current")
_CmPortCpdProfileTable_Object = MibTable
cmPortCpdProfileTable = _CmPortCpdProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33)
)
if mibBuilder.loadTexts:
    cmPortCpdProfileTable.setStatus("current")
_CmPortCpdProfileEntry_Object = MibTableRow
cmPortCpdProfileEntry = _CmPortCpdProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1)
)
cmPortCpdProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPortCpdProfileIndex"),
)
if mibBuilder.loadTexts:
    cmPortCpdProfileEntry.setStatus("current")


class _CmPortCpdProfileIndex_Type(Integer32):
    """Custom type cmPortCpdProfileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmPortCpdProfileIndex_Type.__name__ = "Integer32"
_CmPortCpdProfileIndex_Object = MibTableColumn
cmPortCpdProfileIndex = _CmPortCpdProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 1),
    _CmPortCpdProfileIndex_Type()
)
cmPortCpdProfileIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmPortCpdProfileIndex.setStatus("current")


class _CmPortCpdProfileName_Type(DisplayString):
    """Custom type cmPortCpdProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmPortCpdProfileName_Type.__name__ = "DisplayString"
_CmPortCpdProfileName_Object = MibTableColumn
cmPortCpdProfileName = _CmPortCpdProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 2),
    _CmPortCpdProfileName_Type()
)
cmPortCpdProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileName.setStatus("current")
_CmPortCpdProfileCiscoGroupDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileCiscoGroupDispType_Object = MibTableColumn
cmPortCpdProfileCiscoGroupDispType = _CmPortCpdProfileCiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 3),
    _CmPortCpdProfileCiscoGroupDispType_Type()
)
cmPortCpdProfileCiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileCiscoGroupDispType.setStatus("deprecated")
_CmPortCpdProfileIslDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileIslDispType_Object = MibTableColumn
cmPortCpdProfileIslDispType = _CmPortCpdProfileIslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 4),
    _CmPortCpdProfileIslDispType_Type()
)
cmPortCpdProfileIslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileIslDispType.setStatus("current")
_CmPortCpdProfilePagpDispType_Type = CmControlProtocolDispType
_CmPortCpdProfilePagpDispType_Object = MibTableColumn
cmPortCpdProfilePagpDispType = _CmPortCpdProfilePagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 5),
    _CmPortCpdProfilePagpDispType_Type()
)
cmPortCpdProfilePagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfilePagpDispType.setStatus("current")
_CmPortCpdProfileUdldDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileUdldDispType_Object = MibTableColumn
cmPortCpdProfileUdldDispType = _CmPortCpdProfileUdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 6),
    _CmPortCpdProfileUdldDispType_Type()
)
cmPortCpdProfileUdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileUdldDispType.setStatus("current")
_CmPortCpdProfileCdpDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileCdpDispType_Object = MibTableColumn
cmPortCpdProfileCdpDispType = _CmPortCpdProfileCdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 7),
    _CmPortCpdProfileCdpDispType_Type()
)
cmPortCpdProfileCdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileCdpDispType.setStatus("current")
_CmPortCpdProfileVtpDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileVtpDispType_Object = MibTableColumn
cmPortCpdProfileVtpDispType = _CmPortCpdProfileVtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 8),
    _CmPortCpdProfileVtpDispType_Type()
)
cmPortCpdProfileVtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileVtpDispType.setStatus("current")
_CmPortCpdProfileDtpDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileDtpDispType_Object = MibTableColumn
cmPortCpdProfileDtpDispType = _CmPortCpdProfileDtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 9),
    _CmPortCpdProfileDtpDispType_Type()
)
cmPortCpdProfileDtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileDtpDispType.setStatus("current")
_CmPortCpdProfilePvstpPlusDispType_Type = CmControlProtocolDispType
_CmPortCpdProfilePvstpPlusDispType_Object = MibTableColumn
cmPortCpdProfilePvstpPlusDispType = _CmPortCpdProfilePvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 10),
    _CmPortCpdProfilePvstpPlusDispType_Type()
)
cmPortCpdProfilePvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfilePvstpPlusDispType.setStatus("current")
_CmPortCpdProfileUplinkFastDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileUplinkFastDispType_Object = MibTableColumn
cmPortCpdProfileUplinkFastDispType = _CmPortCpdProfileUplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 11),
    _CmPortCpdProfileUplinkFastDispType_Type()
)
cmPortCpdProfileUplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileUplinkFastDispType.setStatus("current")
_CmPortCpdProfileVlanBridgeDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileVlanBridgeDispType_Object = MibTableColumn
cmPortCpdProfileVlanBridgeDispType = _CmPortCpdProfileVlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 12),
    _CmPortCpdProfileVlanBridgeDispType_Type()
)
cmPortCpdProfileVlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileVlanBridgeDispType.setStatus("current")
_CmPortCpdProfileL2PTDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileL2PTDispType_Object = MibTableColumn
cmPortCpdProfileL2PTDispType = _CmPortCpdProfileL2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 13),
    _CmPortCpdProfileL2PTDispType_Type()
)
cmPortCpdProfileL2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileL2PTDispType.setStatus("current")
_CmPortCpdProfileBridgeGroupDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileBridgeGroupDispType_Object = MibTableColumn
cmPortCpdProfileBridgeGroupDispType = _CmPortCpdProfileBridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 14),
    _CmPortCpdProfileBridgeGroupDispType_Type()
)
cmPortCpdProfileBridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileBridgeGroupDispType.setStatus("deprecated")
_CmPortCpdProfileBPDUDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileBPDUDispType_Object = MibTableColumn
cmPortCpdProfileBPDUDispType = _CmPortCpdProfileBPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 15),
    _CmPortCpdProfileBPDUDispType_Type()
)
cmPortCpdProfileBPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileBPDUDispType.setStatus("current")
_CmPortCpdProfilePauseDispType_Type = CmControlProtocolDispType
_CmPortCpdProfilePauseDispType_Object = MibTableColumn
cmPortCpdProfilePauseDispType = _CmPortCpdProfilePauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 16),
    _CmPortCpdProfilePauseDispType_Type()
)
cmPortCpdProfilePauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfilePauseDispType.setStatus("current")
_CmPortCpdProfileLACPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileLACPDispType_Object = MibTableColumn
cmPortCpdProfileLACPDispType = _CmPortCpdProfileLACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 17),
    _CmPortCpdProfileLACPDispType_Type()
)
cmPortCpdProfileLACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileLACPDispType.setStatus("current")
_CmPortCpdProfileLACPMarkerDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileLACPMarkerDispType_Object = MibTableColumn
cmPortCpdProfileLACPMarkerDispType = _CmPortCpdProfileLACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 18),
    _CmPortCpdProfileLACPMarkerDispType_Type()
)
cmPortCpdProfileLACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileLACPMarkerDispType.setStatus("current")
_CmPortCpdProfileEfmOamDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileEfmOamDispType_Object = MibTableColumn
cmPortCpdProfileEfmOamDispType = _CmPortCpdProfileEfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 19),
    _CmPortCpdProfileEfmOamDispType_Type()
)
cmPortCpdProfileEfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileEfmOamDispType.setStatus("current")
_CmPortCpdProfileSSMDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileSSMDispType_Object = MibTableColumn
cmPortCpdProfileSSMDispType = _CmPortCpdProfileSSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 20),
    _CmPortCpdProfileSSMDispType_Type()
)
cmPortCpdProfileSSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileSSMDispType.setStatus("current")
_CmPortCpdProfilePortAuthenDispType_Type = CmControlProtocolDispType
_CmPortCpdProfilePortAuthenDispType_Object = MibTableColumn
cmPortCpdProfilePortAuthenDispType = _CmPortCpdProfilePortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 21),
    _CmPortCpdProfilePortAuthenDispType_Type()
)
cmPortCpdProfilePortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfilePortAuthenDispType.setStatus("current")
_CmPortCpdProfileBridgeReservedDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileBridgeReservedDispType_Object = MibTableColumn
cmPortCpdProfileBridgeReservedDispType = _CmPortCpdProfileBridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 22),
    _CmPortCpdProfileBridgeReservedDispType_Type()
)
cmPortCpdProfileBridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileBridgeReservedDispType.setStatus("deprecated")
_CmPortCpdProfileLANBridgesDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileLANBridgesDispType_Object = MibTableColumn
cmPortCpdProfileLANBridgesDispType = _CmPortCpdProfileLANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 23),
    _CmPortCpdProfileLANBridgesDispType_Type()
)
cmPortCpdProfileLANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileLANBridgesDispType.setStatus("current")
_CmPortCpdProfileGARPGroupDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileGARPGroupDispType_Object = MibTableColumn
cmPortCpdProfileGARPGroupDispType = _CmPortCpdProfileGARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 24),
    _CmPortCpdProfileGARPGroupDispType_Type()
)
cmPortCpdProfileGARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileGARPGroupDispType.setStatus("deprecated")
_CmPortCpdProfileGMRPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileGMRPDispType_Object = MibTableColumn
cmPortCpdProfileGMRPDispType = _CmPortCpdProfileGMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 25),
    _CmPortCpdProfileGMRPDispType_Type()
)
cmPortCpdProfileGMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileGMRPDispType.setStatus("current")
_CmPortCpdProfileGVRPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileGVRPDispType_Object = MibTableColumn
cmPortCpdProfileGVRPDispType = _CmPortCpdProfileGVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 26),
    _CmPortCpdProfileGVRPDispType_Type()
)
cmPortCpdProfileGVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileGVRPDispType.setStatus("current")
_CmPortCpdProfileGARPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileGARPDispType_Object = MibTableColumn
cmPortCpdProfileGARPDispType = _CmPortCpdProfileGARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 27),
    _CmPortCpdProfileGARPDispType_Type()
)
cmPortCpdProfileGARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileGARPDispType.setStatus("current")
_CmPortCpdProfileLldpDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileLldpDispType_Object = MibTableColumn
cmPortCpdProfileLldpDispType = _CmPortCpdProfileLldpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 28),
    _CmPortCpdProfileLldpDispType_Type()
)
cmPortCpdProfileLldpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileLldpDispType.setStatus("deprecated")
_CmPortCpdProfileStorageType_Type = StorageType
_CmPortCpdProfileStorageType_Object = MibTableColumn
cmPortCpdProfileStorageType = _CmPortCpdProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 29),
    _CmPortCpdProfileStorageType_Type()
)
cmPortCpdProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmPortCpdProfileStorageType.setStatus("current")
_CmPortCpdProfileRowStatus_Type = RowStatus
_CmPortCpdProfileRowStatus_Object = MibTableColumn
cmPortCpdProfileRowStatus = _CmPortCpdProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 30),
    _CmPortCpdProfileRowStatus_Type()
)
cmPortCpdProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmPortCpdProfileRowStatus.setStatus("current")
_CmPortCpdProfileMac00DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac00DispType_Object = MibTableColumn
cmPortCpdProfileMac00DispType = _CmPortCpdProfileMac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 31),
    _CmPortCpdProfileMac00DispType_Type()
)
cmPortCpdProfileMac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac00DispType.setStatus("current")
_CmPortCpdProfileMac01DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac01DispType_Object = MibTableColumn
cmPortCpdProfileMac01DispType = _CmPortCpdProfileMac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 32),
    _CmPortCpdProfileMac01DispType_Type()
)
cmPortCpdProfileMac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac01DispType.setStatus("current")
_CmPortCpdProfileMac02DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac02DispType_Object = MibTableColumn
cmPortCpdProfileMac02DispType = _CmPortCpdProfileMac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 33),
    _CmPortCpdProfileMac02DispType_Type()
)
cmPortCpdProfileMac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac02DispType.setStatus("current")
_CmPortCpdProfileMac03DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac03DispType_Object = MibTableColumn
cmPortCpdProfileMac03DispType = _CmPortCpdProfileMac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 34),
    _CmPortCpdProfileMac03DispType_Type()
)
cmPortCpdProfileMac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac03DispType.setStatus("current")
_CmPortCpdProfileMac04DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac04DispType_Object = MibTableColumn
cmPortCpdProfileMac04DispType = _CmPortCpdProfileMac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 35),
    _CmPortCpdProfileMac04DispType_Type()
)
cmPortCpdProfileMac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac04DispType.setStatus("current")
_CmPortCpdProfileMac05DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac05DispType_Object = MibTableColumn
cmPortCpdProfileMac05DispType = _CmPortCpdProfileMac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 36),
    _CmPortCpdProfileMac05DispType_Type()
)
cmPortCpdProfileMac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac05DispType.setStatus("current")
_CmPortCpdProfileMac06DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac06DispType_Object = MibTableColumn
cmPortCpdProfileMac06DispType = _CmPortCpdProfileMac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 37),
    _CmPortCpdProfileMac06DispType_Type()
)
cmPortCpdProfileMac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac06DispType.setStatus("current")
_CmPortCpdProfileMac07DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac07DispType_Object = MibTableColumn
cmPortCpdProfileMac07DispType = _CmPortCpdProfileMac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 38),
    _CmPortCpdProfileMac07DispType_Type()
)
cmPortCpdProfileMac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac07DispType.setStatus("current")
_CmPortCpdProfileMac08DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac08DispType_Object = MibTableColumn
cmPortCpdProfileMac08DispType = _CmPortCpdProfileMac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 39),
    _CmPortCpdProfileMac08DispType_Type()
)
cmPortCpdProfileMac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac08DispType.setStatus("current")
_CmPortCpdProfileMac09DispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac09DispType_Object = MibTableColumn
cmPortCpdProfileMac09DispType = _CmPortCpdProfileMac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 40),
    _CmPortCpdProfileMac09DispType_Type()
)
cmPortCpdProfileMac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac09DispType.setStatus("current")
_CmPortCpdProfileMac0ADispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0ADispType_Object = MibTableColumn
cmPortCpdProfileMac0ADispType = _CmPortCpdProfileMac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 41),
    _CmPortCpdProfileMac0ADispType_Type()
)
cmPortCpdProfileMac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0ADispType.setStatus("current")
_CmPortCpdProfileMac0BDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0BDispType_Object = MibTableColumn
cmPortCpdProfileMac0BDispType = _CmPortCpdProfileMac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 42),
    _CmPortCpdProfileMac0BDispType_Type()
)
cmPortCpdProfileMac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0BDispType.setStatus("current")
_CmPortCpdProfileMac0CDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0CDispType_Object = MibTableColumn
cmPortCpdProfileMac0CDispType = _CmPortCpdProfileMac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 43),
    _CmPortCpdProfileMac0CDispType_Type()
)
cmPortCpdProfileMac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0CDispType.setStatus("current")
_CmPortCpdProfileMac0DDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0DDispType_Object = MibTableColumn
cmPortCpdProfileMac0DDispType = _CmPortCpdProfileMac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 44),
    _CmPortCpdProfileMac0DDispType_Type()
)
cmPortCpdProfileMac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0DDispType.setStatus("current")
_CmPortCpdProfileMac0EDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0EDispType_Object = MibTableColumn
cmPortCpdProfileMac0EDispType = _CmPortCpdProfileMac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 45),
    _CmPortCpdProfileMac0EDispType_Type()
)
cmPortCpdProfileMac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0EDispType.setStatus("current")
_CmPortCpdProfileMac0FDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileMac0FDispType_Object = MibTableColumn
cmPortCpdProfileMac0FDispType = _CmPortCpdProfileMac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 46),
    _CmPortCpdProfileMac0FDispType_Type()
)
cmPortCpdProfileMac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileMac0FDispType.setStatus("current")
_CmPortCpdProfileNearestLLDPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileNearestLLDPDispType_Object = MibTableColumn
cmPortCpdProfileNearestLLDPDispType = _CmPortCpdProfileNearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 47),
    _CmPortCpdProfileNearestLLDPDispType_Type()
)
cmPortCpdProfileNearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileNearestLLDPDispType.setStatus("current")
_CmPortCpdProfileNonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileNonTpmrLLDPDispType_Object = MibTableColumn
cmPortCpdProfileNonTpmrLLDPDispType = _CmPortCpdProfileNonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 48),
    _CmPortCpdProfileNonTpmrLLDPDispType_Type()
)
cmPortCpdProfileNonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileNonTpmrLLDPDispType.setStatus("current")
_CmPortCpdProfileCustomerLLDPDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileCustomerLLDPDispType_Object = MibTableColumn
cmPortCpdProfileCustomerLLDPDispType = _CmPortCpdProfileCustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 49),
    _CmPortCpdProfileCustomerLLDPDispType_Type()
)
cmPortCpdProfileCustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileCustomerLLDPDispType.setStatus("current")
_CmPortCpdProfileELMIDispType_Type = CmControlProtocolDispType
_CmPortCpdProfileELMIDispType_Object = MibTableColumn
cmPortCpdProfileELMIDispType = _CmPortCpdProfileELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 33, 1, 50),
    _CmPortCpdProfileELMIDispType_Type()
)
cmPortCpdProfileELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPortCpdProfileELMIDispType.setStatus("current")
_CmFlowPointCpdProfileTable_Object = MibTable
cmFlowPointCpdProfileTable = _CmFlowPointCpdProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34)
)
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileTable.setStatus("current")
_CmFlowPointCpdProfileEntry_Object = MibTableRow
cmFlowPointCpdProfileEntry = _CmFlowPointCpdProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1)
)
cmFlowPointCpdProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmFlowPointCpdProfileIndex"),
)
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileEntry.setStatus("current")


class _CmFlowPointCpdProfileIndex_Type(Integer32):
    """Custom type cmFlowPointCpdProfileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmFlowPointCpdProfileIndex_Type.__name__ = "Integer32"
_CmFlowPointCpdProfileIndex_Object = MibTableColumn
cmFlowPointCpdProfileIndex = _CmFlowPointCpdProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 1),
    _CmFlowPointCpdProfileIndex_Type()
)
cmFlowPointCpdProfileIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileIndex.setStatus("current")


class _CmFlowPointCpdProfileName_Type(DisplayString):
    """Custom type cmFlowPointCpdProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmFlowPointCpdProfileName_Type.__name__ = "DisplayString"
_CmFlowPointCpdProfileName_Object = MibTableColumn
cmFlowPointCpdProfileName = _CmFlowPointCpdProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 2),
    _CmFlowPointCpdProfileName_Type()
)
cmFlowPointCpdProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileName.setStatus("current")
_CmFlowPointCpdProfileCiscoGroupDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileCiscoGroupDispType_Object = MibTableColumn
cmFlowPointCpdProfileCiscoGroupDispType = _CmFlowPointCpdProfileCiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 3),
    _CmFlowPointCpdProfileCiscoGroupDispType_Type()
)
cmFlowPointCpdProfileCiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileCiscoGroupDispType.setStatus("deprecated")
_CmFlowPointCpdProfileIslDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileIslDispType_Object = MibTableColumn
cmFlowPointCpdProfileIslDispType = _CmFlowPointCpdProfileIslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 4),
    _CmFlowPointCpdProfileIslDispType_Type()
)
cmFlowPointCpdProfileIslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileIslDispType.setStatus("current")
_CmFlowPointCpdProfilePagpDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfilePagpDispType_Object = MibTableColumn
cmFlowPointCpdProfilePagpDispType = _CmFlowPointCpdProfilePagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 5),
    _CmFlowPointCpdProfilePagpDispType_Type()
)
cmFlowPointCpdProfilePagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfilePagpDispType.setStatus("current")
_CmFlowPointCpdProfileUdldDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileUdldDispType_Object = MibTableColumn
cmFlowPointCpdProfileUdldDispType = _CmFlowPointCpdProfileUdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 6),
    _CmFlowPointCpdProfileUdldDispType_Type()
)
cmFlowPointCpdProfileUdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileUdldDispType.setStatus("current")
_CmFlowPointCpdProfileCdpDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileCdpDispType_Object = MibTableColumn
cmFlowPointCpdProfileCdpDispType = _CmFlowPointCpdProfileCdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 7),
    _CmFlowPointCpdProfileCdpDispType_Type()
)
cmFlowPointCpdProfileCdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileCdpDispType.setStatus("current")
_CmFlowPointCpdProfileVtpDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileVtpDispType_Object = MibTableColumn
cmFlowPointCpdProfileVtpDispType = _CmFlowPointCpdProfileVtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 8),
    _CmFlowPointCpdProfileVtpDispType_Type()
)
cmFlowPointCpdProfileVtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileVtpDispType.setStatus("current")
_CmFlowPointCpdProfileDtpDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileDtpDispType_Object = MibTableColumn
cmFlowPointCpdProfileDtpDispType = _CmFlowPointCpdProfileDtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 9),
    _CmFlowPointCpdProfileDtpDispType_Type()
)
cmFlowPointCpdProfileDtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileDtpDispType.setStatus("current")
_CmFlowPointCpdProfilePvstpPlusDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfilePvstpPlusDispType_Object = MibTableColumn
cmFlowPointCpdProfilePvstpPlusDispType = _CmFlowPointCpdProfilePvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 10),
    _CmFlowPointCpdProfilePvstpPlusDispType_Type()
)
cmFlowPointCpdProfilePvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfilePvstpPlusDispType.setStatus("current")
_CmFlowPointCpdProfileUplinkFastDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileUplinkFastDispType_Object = MibTableColumn
cmFlowPointCpdProfileUplinkFastDispType = _CmFlowPointCpdProfileUplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 11),
    _CmFlowPointCpdProfileUplinkFastDispType_Type()
)
cmFlowPointCpdProfileUplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileUplinkFastDispType.setStatus("current")
_CmFlowPointCpdProfileVlanBridgeDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileVlanBridgeDispType_Object = MibTableColumn
cmFlowPointCpdProfileVlanBridgeDispType = _CmFlowPointCpdProfileVlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 12),
    _CmFlowPointCpdProfileVlanBridgeDispType_Type()
)
cmFlowPointCpdProfileVlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileVlanBridgeDispType.setStatus("current")
_CmFlowPointCpdProfileL2PTDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileL2PTDispType_Object = MibTableColumn
cmFlowPointCpdProfileL2PTDispType = _CmFlowPointCpdProfileL2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 13),
    _CmFlowPointCpdProfileL2PTDispType_Type()
)
cmFlowPointCpdProfileL2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileL2PTDispType.setStatus("current")
_CmFlowPointCpdProfileBridgeGroupDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileBridgeGroupDispType_Object = MibTableColumn
cmFlowPointCpdProfileBridgeGroupDispType = _CmFlowPointCpdProfileBridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 14),
    _CmFlowPointCpdProfileBridgeGroupDispType_Type()
)
cmFlowPointCpdProfileBridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileBridgeGroupDispType.setStatus("deprecated")
_CmFlowPointCpdProfileBPDUDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileBPDUDispType_Object = MibTableColumn
cmFlowPointCpdProfileBPDUDispType = _CmFlowPointCpdProfileBPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 15),
    _CmFlowPointCpdProfileBPDUDispType_Type()
)
cmFlowPointCpdProfileBPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileBPDUDispType.setStatus("current")
_CmFlowPointCpdProfilePauseDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfilePauseDispType_Object = MibTableColumn
cmFlowPointCpdProfilePauseDispType = _CmFlowPointCpdProfilePauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 16),
    _CmFlowPointCpdProfilePauseDispType_Type()
)
cmFlowPointCpdProfilePauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfilePauseDispType.setStatus("current")
_CmFlowPointCpdProfileLACPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileLACPDispType_Object = MibTableColumn
cmFlowPointCpdProfileLACPDispType = _CmFlowPointCpdProfileLACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 17),
    _CmFlowPointCpdProfileLACPDispType_Type()
)
cmFlowPointCpdProfileLACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileLACPDispType.setStatus("current")
_CmFlowPointCpdProfileLACPMarkerDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileLACPMarkerDispType_Object = MibTableColumn
cmFlowPointCpdProfileLACPMarkerDispType = _CmFlowPointCpdProfileLACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 18),
    _CmFlowPointCpdProfileLACPMarkerDispType_Type()
)
cmFlowPointCpdProfileLACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileLACPMarkerDispType.setStatus("current")
_CmFlowPointCpdProfileEfmOamDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileEfmOamDispType_Object = MibTableColumn
cmFlowPointCpdProfileEfmOamDispType = _CmFlowPointCpdProfileEfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 19),
    _CmFlowPointCpdProfileEfmOamDispType_Type()
)
cmFlowPointCpdProfileEfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileEfmOamDispType.setStatus("current")
_CmFlowPointCpdProfileSSMDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileSSMDispType_Object = MibTableColumn
cmFlowPointCpdProfileSSMDispType = _CmFlowPointCpdProfileSSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 20),
    _CmFlowPointCpdProfileSSMDispType_Type()
)
cmFlowPointCpdProfileSSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileSSMDispType.setStatus("current")
_CmFlowPointCpdProfilePortAuthenDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfilePortAuthenDispType_Object = MibTableColumn
cmFlowPointCpdProfilePortAuthenDispType = _CmFlowPointCpdProfilePortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 21),
    _CmFlowPointCpdProfilePortAuthenDispType_Type()
)
cmFlowPointCpdProfilePortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfilePortAuthenDispType.setStatus("current")
_CmFlowPointCpdProfileBridgeReservedDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileBridgeReservedDispType_Object = MibTableColumn
cmFlowPointCpdProfileBridgeReservedDispType = _CmFlowPointCpdProfileBridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 22),
    _CmFlowPointCpdProfileBridgeReservedDispType_Type()
)
cmFlowPointCpdProfileBridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileBridgeReservedDispType.setStatus("deprecated")
_CmFlowPointCpdProfileLANBridgesDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileLANBridgesDispType_Object = MibTableColumn
cmFlowPointCpdProfileLANBridgesDispType = _CmFlowPointCpdProfileLANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 23),
    _CmFlowPointCpdProfileLANBridgesDispType_Type()
)
cmFlowPointCpdProfileLANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileLANBridgesDispType.setStatus("current")
_CmFlowPointCpdProfileGARPGroupDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileGARPGroupDispType_Object = MibTableColumn
cmFlowPointCpdProfileGARPGroupDispType = _CmFlowPointCpdProfileGARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 24),
    _CmFlowPointCpdProfileGARPGroupDispType_Type()
)
cmFlowPointCpdProfileGARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileGARPGroupDispType.setStatus("deprecated")
_CmFlowPointCpdProfileGMRPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileGMRPDispType_Object = MibTableColumn
cmFlowPointCpdProfileGMRPDispType = _CmFlowPointCpdProfileGMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 25),
    _CmFlowPointCpdProfileGMRPDispType_Type()
)
cmFlowPointCpdProfileGMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileGMRPDispType.setStatus("current")
_CmFlowPointCpdProfileGVRPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileGVRPDispType_Object = MibTableColumn
cmFlowPointCpdProfileGVRPDispType = _CmFlowPointCpdProfileGVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 26),
    _CmFlowPointCpdProfileGVRPDispType_Type()
)
cmFlowPointCpdProfileGVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileGVRPDispType.setStatus("current")
_CmFlowPointCpdProfileGARPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileGARPDispType_Object = MibTableColumn
cmFlowPointCpdProfileGARPDispType = _CmFlowPointCpdProfileGARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 27),
    _CmFlowPointCpdProfileGARPDispType_Type()
)
cmFlowPointCpdProfileGARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileGARPDispType.setStatus("current")
_CmFlowPointCpdProfileLldpDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileLldpDispType_Object = MibTableColumn
cmFlowPointCpdProfileLldpDispType = _CmFlowPointCpdProfileLldpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 28),
    _CmFlowPointCpdProfileLldpDispType_Type()
)
cmFlowPointCpdProfileLldpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileLldpDispType.setStatus("deprecated")
_CmFlowPointCpdProfileStorageType_Type = StorageType
_CmFlowPointCpdProfileStorageType_Object = MibTableColumn
cmFlowPointCpdProfileStorageType = _CmFlowPointCpdProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 29),
    _CmFlowPointCpdProfileStorageType_Type()
)
cmFlowPointCpdProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileStorageType.setStatus("current")
_CmFlowPointCpdProfileRowStatus_Type = RowStatus
_CmFlowPointCpdProfileRowStatus_Object = MibTableColumn
cmFlowPointCpdProfileRowStatus = _CmFlowPointCpdProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 30),
    _CmFlowPointCpdProfileRowStatus_Type()
)
cmFlowPointCpdProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileRowStatus.setStatus("current")
_CmFlowPointCpdProfileMac00DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac00DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac00DispType = _CmFlowPointCpdProfileMac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 31),
    _CmFlowPointCpdProfileMac00DispType_Type()
)
cmFlowPointCpdProfileMac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac00DispType.setStatus("current")
_CmFlowPointCpdProfileMac01DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac01DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac01DispType = _CmFlowPointCpdProfileMac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 32),
    _CmFlowPointCpdProfileMac01DispType_Type()
)
cmFlowPointCpdProfileMac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac01DispType.setStatus("current")
_CmFlowPointCpdProfileMac02DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac02DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac02DispType = _CmFlowPointCpdProfileMac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 33),
    _CmFlowPointCpdProfileMac02DispType_Type()
)
cmFlowPointCpdProfileMac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac02DispType.setStatus("current")
_CmFlowPointCpdProfileMac03DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac03DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac03DispType = _CmFlowPointCpdProfileMac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 34),
    _CmFlowPointCpdProfileMac03DispType_Type()
)
cmFlowPointCpdProfileMac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac03DispType.setStatus("current")
_CmFlowPointCpdProfileMac04DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac04DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac04DispType = _CmFlowPointCpdProfileMac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 35),
    _CmFlowPointCpdProfileMac04DispType_Type()
)
cmFlowPointCpdProfileMac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac04DispType.setStatus("current")
_CmFlowPointCpdProfileMac05DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac05DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac05DispType = _CmFlowPointCpdProfileMac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 36),
    _CmFlowPointCpdProfileMac05DispType_Type()
)
cmFlowPointCpdProfileMac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac05DispType.setStatus("current")
_CmFlowPointCpdProfileMac06DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac06DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac06DispType = _CmFlowPointCpdProfileMac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 37),
    _CmFlowPointCpdProfileMac06DispType_Type()
)
cmFlowPointCpdProfileMac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac06DispType.setStatus("current")
_CmFlowPointCpdProfileMac07DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac07DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac07DispType = _CmFlowPointCpdProfileMac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 38),
    _CmFlowPointCpdProfileMac07DispType_Type()
)
cmFlowPointCpdProfileMac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac07DispType.setStatus("current")
_CmFlowPointCpdProfileMac08DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac08DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac08DispType = _CmFlowPointCpdProfileMac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 39),
    _CmFlowPointCpdProfileMac08DispType_Type()
)
cmFlowPointCpdProfileMac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac08DispType.setStatus("current")
_CmFlowPointCpdProfileMac09DispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac09DispType_Object = MibTableColumn
cmFlowPointCpdProfileMac09DispType = _CmFlowPointCpdProfileMac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 40),
    _CmFlowPointCpdProfileMac09DispType_Type()
)
cmFlowPointCpdProfileMac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac09DispType.setStatus("current")
_CmFlowPointCpdProfileMac0ADispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0ADispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0ADispType = _CmFlowPointCpdProfileMac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 41),
    _CmFlowPointCpdProfileMac0ADispType_Type()
)
cmFlowPointCpdProfileMac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0ADispType.setStatus("current")
_CmFlowPointCpdProfileMac0BDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0BDispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0BDispType = _CmFlowPointCpdProfileMac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 42),
    _CmFlowPointCpdProfileMac0BDispType_Type()
)
cmFlowPointCpdProfileMac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0BDispType.setStatus("current")
_CmFlowPointCpdProfileMac0CDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0CDispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0CDispType = _CmFlowPointCpdProfileMac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 43),
    _CmFlowPointCpdProfileMac0CDispType_Type()
)
cmFlowPointCpdProfileMac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0CDispType.setStatus("current")
_CmFlowPointCpdProfileMac0DDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0DDispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0DDispType = _CmFlowPointCpdProfileMac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 44),
    _CmFlowPointCpdProfileMac0DDispType_Type()
)
cmFlowPointCpdProfileMac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0DDispType.setStatus("current")
_CmFlowPointCpdProfileMac0EDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0EDispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0EDispType = _CmFlowPointCpdProfileMac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 45),
    _CmFlowPointCpdProfileMac0EDispType_Type()
)
cmFlowPointCpdProfileMac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0EDispType.setStatus("current")
_CmFlowPointCpdProfileMac0FDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileMac0FDispType_Object = MibTableColumn
cmFlowPointCpdProfileMac0FDispType = _CmFlowPointCpdProfileMac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 46),
    _CmFlowPointCpdProfileMac0FDispType_Type()
)
cmFlowPointCpdProfileMac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileMac0FDispType.setStatus("current")
_CmFlowPointCpdProfileNearestLLDPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileNearestLLDPDispType_Object = MibTableColumn
cmFlowPointCpdProfileNearestLLDPDispType = _CmFlowPointCpdProfileNearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 47),
    _CmFlowPointCpdProfileNearestLLDPDispType_Type()
)
cmFlowPointCpdProfileNearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileNearestLLDPDispType.setStatus("current")
_CmFlowPointCpdProfileNonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileNonTpmrLLDPDispType_Object = MibTableColumn
cmFlowPointCpdProfileNonTpmrLLDPDispType = _CmFlowPointCpdProfileNonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 48),
    _CmFlowPointCpdProfileNonTpmrLLDPDispType_Type()
)
cmFlowPointCpdProfileNonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileNonTpmrLLDPDispType.setStatus("current")
_CmFlowPointCpdProfileCustomerLLDPDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileCustomerLLDPDispType_Object = MibTableColumn
cmFlowPointCpdProfileCustomerLLDPDispType = _CmFlowPointCpdProfileCustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 49),
    _CmFlowPointCpdProfileCustomerLLDPDispType_Type()
)
cmFlowPointCpdProfileCustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileCustomerLLDPDispType.setStatus("current")
_CmFlowPointCpdProfileELMIDispType_Type = CmControlProtocolDispType
_CmFlowPointCpdProfileELMIDispType_Object = MibTableColumn
cmFlowPointCpdProfileELMIDispType = _CmFlowPointCpdProfileELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 34, 1, 50),
    _CmFlowPointCpdProfileELMIDispType_Type()
)
cmFlowPointCpdProfileELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmFlowPointCpdProfileELMIDispType.setStatus("current")
_CmEthernetTrafficPortCpdTable_Object = MibTable
cmEthernetTrafficPortCpdTable = _CmEthernetTrafficPortCpdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 35)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdTable.setStatus("current")
_CmEthernetTrafficPortCpdEntry_Object = MibTableRow
cmEthernetTrafficPortCpdEntry = _CmEthernetTrafficPortCpdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 35, 1)
)
cmEthernetTrafficPortCpdEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortCpdIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdEntry.setStatus("current")


class _CmEthernetTrafficPortCpdIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortCpdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetTrafficPortCpdIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortCpdIndex_Object = MibTableColumn
cmEthernetTrafficPortCpdIndex = _CmEthernetTrafficPortCpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 35, 1, 1),
    _CmEthernetTrafficPortCpdIndex_Type()
)
cmEthernetTrafficPortCpdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdIndex.setStatus("current")
_CmEthernetTrafficPortAssociatedCpdProfile_Type = VariablePointer
_CmEthernetTrafficPortAssociatedCpdProfile_Object = MibTableColumn
cmEthernetTrafficPortAssociatedCpdProfile = _CmEthernetTrafficPortAssociatedCpdProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 35, 1, 2),
    _CmEthernetTrafficPortAssociatedCpdProfile_Type()
)
cmEthernetTrafficPortAssociatedCpdProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortAssociatedCpdProfile.setStatus("current")
_CmEthernetFlowPointCpdTable_Object = MibTable
cmEthernetFlowPointCpdTable = _CmEthernetFlowPointCpdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 36)
)
if mibBuilder.loadTexts:
    cmEthernetFlowPointCpdTable.setStatus("current")
_CmEthernetFlowPointCpdEntry_Object = MibTableRow
cmEthernetFlowPointCpdEntry = _CmEthernetFlowPointCpdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 36, 1)
)
cmEthernetFlowPointCpdEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetFlowPointCpdIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetFlowPointCpdEntry.setStatus("current")


class _CmEthernetFlowPointCpdIndex_Type(Integer32):
    """Custom type cmEthernetFlowPointCpdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEthernetFlowPointCpdIndex_Type.__name__ = "Integer32"
_CmEthernetFlowPointCpdIndex_Object = MibTableColumn
cmEthernetFlowPointCpdIndex = _CmEthernetFlowPointCpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 36, 1, 1),
    _CmEthernetFlowPointCpdIndex_Type()
)
cmEthernetFlowPointCpdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetFlowPointCpdIndex.setStatus("current")
_CmEthernetFlowPointAssociatedCpdProfile_Type = VariablePointer
_CmEthernetFlowPointAssociatedCpdProfile_Object = MibTableColumn
cmEthernetFlowPointAssociatedCpdProfile = _CmEthernetFlowPointAssociatedCpdProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 36, 1, 2),
    _CmEthernetFlowPointAssociatedCpdProfile_Type()
)
cmEthernetFlowPointAssociatedCpdProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetFlowPointAssociatedCpdProfile.setStatus("current")
_CmTrafficAclProfileTable_Object = MibTable
cmTrafficAclProfileTable = _CmTrafficAclProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37)
)
if mibBuilder.loadTexts:
    cmTrafficAclProfileTable.setStatus("current")
_CmTrafficAclProfileEntry_Object = MibTableRow
cmTrafficAclProfileEntry = _CmTrafficAclProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37, 1)
)
cmTrafficAclProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmTrafficAclProfileIndex"),
)
if mibBuilder.loadTexts:
    cmTrafficAclProfileEntry.setStatus("current")


class _CmTrafficAclProfileIndex_Type(Integer32):
    """Custom type cmTrafficAclProfileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmTrafficAclProfileIndex_Type.__name__ = "Integer32"
_CmTrafficAclProfileIndex_Object = MibTableColumn
cmTrafficAclProfileIndex = _CmTrafficAclProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37, 1, 1),
    _CmTrafficAclProfileIndex_Type()
)
cmTrafficAclProfileIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclProfileIndex.setStatus("current")


class _CmTrafficAclProfileName_Type(DisplayString):
    """Custom type cmTrafficAclProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmTrafficAclProfileName_Type.__name__ = "DisplayString"
_CmTrafficAclProfileName_Object = MibTableColumn
cmTrafficAclProfileName = _CmTrafficAclProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37, 1, 2),
    _CmTrafficAclProfileName_Type()
)
cmTrafficAclProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclProfileName.setStatus("current")
_CmTrafficAclProfileStorageType_Type = StorageType
_CmTrafficAclProfileStorageType_Object = MibTableColumn
cmTrafficAclProfileStorageType = _CmTrafficAclProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37, 1, 3),
    _CmTrafficAclProfileStorageType_Type()
)
cmTrafficAclProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclProfileStorageType.setStatus("current")
_CmTrafficAclProfileRowStatus_Type = RowStatus
_CmTrafficAclProfileRowStatus_Object = MibTableColumn
cmTrafficAclProfileRowStatus = _CmTrafficAclProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 37, 1, 4),
    _CmTrafficAclProfileRowStatus_Type()
)
cmTrafficAclProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclProfileRowStatus.setStatus("current")
_CmTrafficAclRulesTable_Object = MibTable
cmTrafficAclRulesTable = _CmTrafficAclRulesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38)
)
if mibBuilder.loadTexts:
    cmTrafficAclRulesTable.setStatus("current")
_CmTrafficAclRulesEntry_Object = MibTableRow
cmTrafficAclRulesEntry = _CmTrafficAclRulesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1)
)
cmTrafficAclRulesEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmTrafficAclProfileIndex"),
    (0, "CM-FACILITY-MIB", "cmTrafficAclRulesIndex"),
)
if mibBuilder.loadTexts:
    cmTrafficAclRulesEntry.setStatus("current")


class _CmTrafficAclRulesIndex_Type(Integer32):
    """Custom type cmTrafficAclRulesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmTrafficAclRulesIndex_Type.__name__ = "Integer32"
_CmTrafficAclRulesIndex_Object = MibTableColumn
cmTrafficAclRulesIndex = _CmTrafficAclRulesIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 1),
    _CmTrafficAclRulesIndex_Type()
)
cmTrafficAclRulesIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclRulesIndex.setStatus("current")
_CmTrafficAclFilterAction_Type = CmTrafficAclFilterActionType
_CmTrafficAclFilterAction_Object = MibTableColumn
cmTrafficAclFilterAction = _CmTrafficAclFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 2),
    _CmTrafficAclFilterAction_Type()
)
cmTrafficAclFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclFilterAction.setStatus("current")
_CmTrafficAclFilterType_Type = CmTrafficAclFilterType
_CmTrafficAclFilterType_Object = MibTableColumn
cmTrafficAclFilterType = _CmTrafficAclFilterType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 3),
    _CmTrafficAclFilterType_Type()
)
cmTrafficAclFilterType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclFilterType.setStatus("current")
_CmTrafficAclEnabled_Type = TruthValue
_CmTrafficAclEnabled_Object = MibTableColumn
cmTrafficAclEnabled = _CmTrafficAclEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 4),
    _CmTrafficAclEnabled_Type()
)
cmTrafficAclEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclEnabled.setStatus("current")
_CmTrafficAclSrcMacAddr_Type = MacAddress
_CmTrafficAclSrcMacAddr_Object = MibTableColumn
cmTrafficAclSrcMacAddr = _CmTrafficAclSrcMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 5),
    _CmTrafficAclSrcMacAddr_Type()
)
cmTrafficAclSrcMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcMacAddr.setStatus("current")
_CmTrafficAclSrcMacAddrEnabled_Type = TruthValue
_CmTrafficAclSrcMacAddrEnabled_Object = MibTableColumn
cmTrafficAclSrcMacAddrEnabled = _CmTrafficAclSrcMacAddrEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 6),
    _CmTrafficAclSrcMacAddrEnabled_Type()
)
cmTrafficAclSrcMacAddrEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcMacAddrEnabled.setStatus("current")
_CmTrafficAclDstMacAddr_Type = MacAddress
_CmTrafficAclDstMacAddr_Object = MibTableColumn
cmTrafficAclDstMacAddr = _CmTrafficAclDstMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 7),
    _CmTrafficAclDstMacAddr_Type()
)
cmTrafficAclDstMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstMacAddr.setStatus("current")
_CmTrafficAclDstMacAddrEnabled_Type = TruthValue
_CmTrafficAclDstMacAddrEnabled_Object = MibTableColumn
cmTrafficAclDstMacAddrEnabled = _CmTrafficAclDstMacAddrEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 8),
    _CmTrafficAclDstMacAddrEnabled_Type()
)
cmTrafficAclDstMacAddrEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstMacAddrEnabled.setStatus("current")
_CmTrafficAclSrcIpFilterEnabled_Type = TruthValue
_CmTrafficAclSrcIpFilterEnabled_Object = MibTableColumn
cmTrafficAclSrcIpFilterEnabled = _CmTrafficAclSrcIpFilterEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 9),
    _CmTrafficAclSrcIpFilterEnabled_Type()
)
cmTrafficAclSrcIpFilterEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcIpFilterEnabled.setStatus("current")
_CmTrafficAclDstIpFilterEnabled_Type = TruthValue
_CmTrafficAclDstIpFilterEnabled_Object = MibTableColumn
cmTrafficAclDstIpFilterEnabled = _CmTrafficAclDstIpFilterEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 10),
    _CmTrafficAclDstIpFilterEnabled_Type()
)
cmTrafficAclDstIpFilterEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstIpFilterEnabled.setStatus("current")
_CmTrafficAclSrcIpV4Addr_Type = IpAddress
_CmTrafficAclSrcIpV4Addr_Object = MibTableColumn
cmTrafficAclSrcIpV4Addr = _CmTrafficAclSrcIpV4Addr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 11),
    _CmTrafficAclSrcIpV4Addr_Type()
)
cmTrafficAclSrcIpV4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcIpV4Addr.setStatus("current")
_CmTrafficAclSrcIpV4AddrMask_Type = IpAddress
_CmTrafficAclSrcIpV4AddrMask_Object = MibTableColumn
cmTrafficAclSrcIpV4AddrMask = _CmTrafficAclSrcIpV4AddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 12),
    _CmTrafficAclSrcIpV4AddrMask_Type()
)
cmTrafficAclSrcIpV4AddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcIpV4AddrMask.setStatus("current")
_CmTrafficAclDstIpV4Addr_Type = IpAddress
_CmTrafficAclDstIpV4Addr_Object = MibTableColumn
cmTrafficAclDstIpV4Addr = _CmTrafficAclDstIpV4Addr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 13),
    _CmTrafficAclDstIpV4Addr_Type()
)
cmTrafficAclDstIpV4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstIpV4Addr.setStatus("current")
_CmTrafficAclDstIpV4AddrMask_Type = IpAddress
_CmTrafficAclDstIpV4AddrMask_Object = MibTableColumn
cmTrafficAclDstIpV4AddrMask = _CmTrafficAclDstIpV4AddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 14),
    _CmTrafficAclDstIpV4AddrMask_Type()
)
cmTrafficAclDstIpV4AddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstIpV4AddrMask.setStatus("current")
_CmTrafficAclSrcIpV6Addr_Type = Ipv6Address
_CmTrafficAclSrcIpV6Addr_Object = MibTableColumn
cmTrafficAclSrcIpV6Addr = _CmTrafficAclSrcIpV6Addr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 15),
    _CmTrafficAclSrcIpV6Addr_Type()
)
cmTrafficAclSrcIpV6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcIpV6Addr.setStatus("current")
_CmTrafficAclSrcIpV6AddrMask_Type = Ipv6Address
_CmTrafficAclSrcIpV6AddrMask_Object = MibTableColumn
cmTrafficAclSrcIpV6AddrMask = _CmTrafficAclSrcIpV6AddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 16),
    _CmTrafficAclSrcIpV6AddrMask_Type()
)
cmTrafficAclSrcIpV6AddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclSrcIpV6AddrMask.setStatus("current")
_CmTrafficAclDstIpV6Addr_Type = Ipv6Address
_CmTrafficAclDstIpV6Addr_Object = MibTableColumn
cmTrafficAclDstIpV6Addr = _CmTrafficAclDstIpV6Addr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 17),
    _CmTrafficAclDstIpV6Addr_Type()
)
cmTrafficAclDstIpV6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstIpV6Addr.setStatus("current")
_CmTrafficAclDstIpV6AddrMask_Type = Ipv6Address
_CmTrafficAclDstIpV6AddrMask_Object = MibTableColumn
cmTrafficAclDstIpV6AddrMask = _CmTrafficAclDstIpV6AddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 18),
    _CmTrafficAclDstIpV6AddrMask_Type()
)
cmTrafficAclDstIpV6AddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclDstIpV6AddrMask.setStatus("current")


class _CmTrafficAclTcpUdpSrcPortNum_Type(Integer32):
    """Custom type cmTrafficAclTcpUdpSrcPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmTrafficAclTcpUdpSrcPortNum_Type.__name__ = "Integer32"
_CmTrafficAclTcpUdpSrcPortNum_Object = MibTableColumn
cmTrafficAclTcpUdpSrcPortNum = _CmTrafficAclTcpUdpSrcPortNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 19),
    _CmTrafficAclTcpUdpSrcPortNum_Type()
)
cmTrafficAclTcpUdpSrcPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpSrcPortNum.setStatus("current")


class _CmTrafficAclTcpUdpSrcPortMask_Type(Integer32):
    """Custom type cmTrafficAclTcpUdpSrcPortMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmTrafficAclTcpUdpSrcPortMask_Type.__name__ = "Integer32"
_CmTrafficAclTcpUdpSrcPortMask_Object = MibTableColumn
cmTrafficAclTcpUdpSrcPortMask = _CmTrafficAclTcpUdpSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 20),
    _CmTrafficAclTcpUdpSrcPortMask_Type()
)
cmTrafficAclTcpUdpSrcPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpSrcPortMask.setStatus("current")
_CmTrafficAclTcpUdpSrcPortEnabled_Type = TruthValue
_CmTrafficAclTcpUdpSrcPortEnabled_Object = MibTableColumn
cmTrafficAclTcpUdpSrcPortEnabled = _CmTrafficAclTcpUdpSrcPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 21),
    _CmTrafficAclTcpUdpSrcPortEnabled_Type()
)
cmTrafficAclTcpUdpSrcPortEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpSrcPortEnabled.setStatus("current")


class _CmTrafficAclTcpUdpDstPortNum_Type(Integer32):
    """Custom type cmTrafficAclTcpUdpDstPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmTrafficAclTcpUdpDstPortNum_Type.__name__ = "Integer32"
_CmTrafficAclTcpUdpDstPortNum_Object = MibTableColumn
cmTrafficAclTcpUdpDstPortNum = _CmTrafficAclTcpUdpDstPortNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 22),
    _CmTrafficAclTcpUdpDstPortNum_Type()
)
cmTrafficAclTcpUdpDstPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpDstPortNum.setStatus("current")


class _CmTrafficAclTcpUdpDstPortMask_Type(Integer32):
    """Custom type cmTrafficAclTcpUdpDstPortMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CmTrafficAclTcpUdpDstPortMask_Type.__name__ = "Integer32"
_CmTrafficAclTcpUdpDstPortMask_Object = MibTableColumn
cmTrafficAclTcpUdpDstPortMask = _CmTrafficAclTcpUdpDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 23),
    _CmTrafficAclTcpUdpDstPortMask_Type()
)
cmTrafficAclTcpUdpDstPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpDstPortMask.setStatus("current")
_CmTrafficAclTcpUdpDstPortEnabled_Type = TruthValue
_CmTrafficAclTcpUdpDstPortEnabled_Object = MibTableColumn
cmTrafficAclTcpUdpDstPortEnabled = _CmTrafficAclTcpUdpDstPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 24),
    _CmTrafficAclTcpUdpDstPortEnabled_Type()
)
cmTrafficAclTcpUdpDstPortEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclTcpUdpDstPortEnabled.setStatus("current")
_CmTrafficAclIpQosType_Type = CmTrafficACLPriorityType
_CmTrafficAclIpQosType_Object = MibTableColumn
cmTrafficAclIpQosType = _CmTrafficAclIpQosType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 25),
    _CmTrafficAclIpQosType_Type()
)
cmTrafficAclIpQosType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclIpQosType.setStatus("current")
_CmTrafficAclIpQosValue_Type = Integer32
_CmTrafficAclIpQosValue_Object = MibTableColumn
cmTrafficAclIpQosValue = _CmTrafficAclIpQosValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 26),
    _CmTrafficAclIpQosValue_Type()
)
cmTrafficAclIpQosValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclIpQosValue.setStatus("current")
_CmTrafficAclIpQosTypeEnabled_Type = TruthValue
_CmTrafficAclIpQosTypeEnabled_Object = MibTableColumn
cmTrafficAclIpQosTypeEnabled = _CmTrafficAclIpQosTypeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 27),
    _CmTrafficAclIpQosTypeEnabled_Type()
)
cmTrafficAclIpQosTypeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclIpQosTypeEnabled.setStatus("current")
_CmTrafficAclVlanId_Type = VlanId
_CmTrafficAclVlanId_Object = MibTableColumn
cmTrafficAclVlanId = _CmTrafficAclVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 28),
    _CmTrafficAclVlanId_Type()
)
cmTrafficAclVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclVlanId.setStatus("current")
_CmTrafficAclVlanIdEnabled_Type = TruthValue
_CmTrafficAclVlanIdEnabled_Object = MibTableColumn
cmTrafficAclVlanIdEnabled = _CmTrafficAclVlanIdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 29),
    _CmTrafficAclVlanIdEnabled_Type()
)
cmTrafficAclVlanIdEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclVlanIdEnabled.setStatus("current")


class _CmTrafficAclVlanPriority_Type(Integer32):
    """Custom type cmTrafficAclVlanPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmTrafficAclVlanPriority_Type.__name__ = "Integer32"
_CmTrafficAclVlanPriority_Object = MibTableColumn
cmTrafficAclVlanPriority = _CmTrafficAclVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 30),
    _CmTrafficAclVlanPriority_Type()
)
cmTrafficAclVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclVlanPriority.setStatus("current")
_CmTrafficAclVlanPriorityEnabled_Type = TruthValue
_CmTrafficAclVlanPriorityEnabled_Object = MibTableColumn
cmTrafficAclVlanPriorityEnabled = _CmTrafficAclVlanPriorityEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 31),
    _CmTrafficAclVlanPriorityEnabled_Type()
)
cmTrafficAclVlanPriorityEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclVlanPriorityEnabled.setStatus("current")
_CmTrafficAclProtocolType_Type = CmTrafficAclProtocolType
_CmTrafficAclProtocolType_Object = MibTableColumn
cmTrafficAclProtocolType = _CmTrafficAclProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 32),
    _CmTrafficAclProtocolType_Type()
)
cmTrafficAclProtocolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclProtocolType.setStatus("current")
_CmTrafficAclProtocolTypeEnabled_Type = TruthValue
_CmTrafficAclProtocolTypeEnabled_Object = MibTableColumn
cmTrafficAclProtocolTypeEnabled = _CmTrafficAclProtocolTypeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 33),
    _CmTrafficAclProtocolTypeEnabled_Type()
)
cmTrafficAclProtocolTypeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclProtocolTypeEnabled.setStatus("current")
_CmTrafficAclStorageType_Type = StorageType
_CmTrafficAclStorageType_Object = MibTableColumn
cmTrafficAclStorageType = _CmTrafficAclStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 34),
    _CmTrafficAclStorageType_Type()
)
cmTrafficAclStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclStorageType.setStatus("current")
_CmTrafficAclRowStatus_Type = RowStatus
_CmTrafficAclRowStatus_Object = MibTableColumn
cmTrafficAclRowStatus = _CmTrafficAclRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 38, 1, 35),
    _CmTrafficAclRowStatus_Type()
)
cmTrafficAclRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficAclRowStatus.setStatus("current")
_CmQosPolicerProfileTable_Object = MibTable
cmQosPolicerProfileTable = _CmQosPolicerProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39)
)
if mibBuilder.loadTexts:
    cmQosPolicerProfileTable.setStatus("current")
_CmQosPolicerProfileEntry_Object = MibTableRow
cmQosPolicerProfileEntry = _CmQosPolicerProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1)
)
cmQosPolicerProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmQosPolicerProfileIndex"),
)
if mibBuilder.loadTexts:
    cmQosPolicerProfileEntry.setStatus("current")


class _CmQosPolicerProfileIndex_Type(Integer32):
    """Custom type cmQosPolicerProfileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmQosPolicerProfileIndex_Type.__name__ = "Integer32"
_CmQosPolicerProfileIndex_Object = MibTableColumn
cmQosPolicerProfileIndex = _CmQosPolicerProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 1),
    _CmQosPolicerProfileIndex_Type()
)
cmQosPolicerProfileIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileIndex.setStatus("current")


class _CmQosPolicerProfileName_Type(DisplayString):
    """Custom type cmQosPolicerProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmQosPolicerProfileName_Type.__name__ = "DisplayString"
_CmQosPolicerProfileName_Object = MibTableColumn
cmQosPolicerProfileName = _CmQosPolicerProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 2),
    _CmQosPolicerProfileName_Type()
)
cmQosPolicerProfileName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileName.setStatus("current")
_CmQosPolicerProfileCIRLo_Type = Unsigned32
_CmQosPolicerProfileCIRLo_Object = MibTableColumn
cmQosPolicerProfileCIRLo = _CmQosPolicerProfileCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 3),
    _CmQosPolicerProfileCIRLo_Type()
)
cmQosPolicerProfileCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileCIRLo.setStatus("current")
_CmQosPolicerProfileCIRHi_Type = Unsigned32
_CmQosPolicerProfileCIRHi_Object = MibTableColumn
cmQosPolicerProfileCIRHi = _CmQosPolicerProfileCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 4),
    _CmQosPolicerProfileCIRHi_Type()
)
cmQosPolicerProfileCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileCIRHi.setStatus("current")
_CmQosPolicerProfileEIRLo_Type = Unsigned32
_CmQosPolicerProfileEIRLo_Object = MibTableColumn
cmQosPolicerProfileEIRLo = _CmQosPolicerProfileEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 5),
    _CmQosPolicerProfileEIRLo_Type()
)
cmQosPolicerProfileEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileEIRLo.setStatus("current")
_CmQosPolicerProfileEIRHi_Type = Unsigned32
_CmQosPolicerProfileEIRHi_Object = MibTableColumn
cmQosPolicerProfileEIRHi = _CmQosPolicerProfileEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 6),
    _CmQosPolicerProfileEIRHi_Type()
)
cmQosPolicerProfileEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileEIRHi.setStatus("current")
_CmQosPolicerProfileCBS_Type = Integer32
_CmQosPolicerProfileCBS_Object = MibTableColumn
cmQosPolicerProfileCBS = _CmQosPolicerProfileCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 7),
    _CmQosPolicerProfileCBS_Type()
)
cmQosPolicerProfileCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileCBS.setStatus("current")
_CmQosPolicerProfileEBS_Type = Integer32
_CmQosPolicerProfileEBS_Object = MibTableColumn
cmQosPolicerProfileEBS = _CmQosPolicerProfileEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 8),
    _CmQosPolicerProfileEBS_Type()
)
cmQosPolicerProfileEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileEBS.setStatus("current")
_CmQosPolicerProfileColorMode_Type = PolicerColorMode
_CmQosPolicerProfileColorMode_Object = MibTableColumn
cmQosPolicerProfileColorMode = _CmQosPolicerProfileColorMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 9),
    _CmQosPolicerProfileColorMode_Type()
)
cmQosPolicerProfileColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileColorMode.setStatus("current")
_CmQosPolicerProfileCouplingFlag_Type = TruthValue
_CmQosPolicerProfileCouplingFlag_Object = MibTableColumn
cmQosPolicerProfileCouplingFlag = _CmQosPolicerProfileCouplingFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 10),
    _CmQosPolicerProfileCouplingFlag_Type()
)
cmQosPolicerProfileCouplingFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileCouplingFlag.setStatus("current")
_CmQosPolicerProfileStorageType_Type = StorageType
_CmQosPolicerProfileStorageType_Object = MibTableColumn
cmQosPolicerProfileStorageType = _CmQosPolicerProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 11),
    _CmQosPolicerProfileStorageType_Type()
)
cmQosPolicerProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileStorageType.setStatus("current")
_CmQosPolicerProfileRowStatus_Type = RowStatus
_CmQosPolicerProfileRowStatus_Object = MibTableColumn
cmQosPolicerProfileRowStatus = _CmQosPolicerProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 39, 1, 12),
    _CmQosPolicerProfileRowStatus_Type()
)
cmQosPolicerProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerProfileRowStatus.setStatus("current")
_CmQosQueueProfileTable_Object = MibTable
cmQosQueueProfileTable = _CmQosQueueProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40)
)
if mibBuilder.loadTexts:
    cmQosQueueProfileTable.setStatus("current")
_CmQosQueueProfileEntry_Object = MibTableRow
cmQosQueueProfileEntry = _CmQosQueueProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1)
)
cmQosQueueProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmQosQueueProfileIndex"),
)
if mibBuilder.loadTexts:
    cmQosQueueProfileEntry.setStatus("current")


class _CmQosQueueProfileIndex_Type(Integer32):
    """Custom type cmQosQueueProfileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CmQosQueueProfileIndex_Type.__name__ = "Integer32"
_CmQosQueueProfileIndex_Object = MibTableColumn
cmQosQueueProfileIndex = _CmQosQueueProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 1),
    _CmQosQueueProfileIndex_Type()
)
cmQosQueueProfileIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileIndex.setStatus("current")


class _CmQosQueueProfileName_Type(DisplayString):
    """Custom type cmQosQueueProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CmQosQueueProfileName_Type.__name__ = "DisplayString"
_CmQosQueueProfileName_Object = MibTableColumn
cmQosQueueProfileName = _CmQosQueueProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 2),
    _CmQosQueueProfileName_Type()
)
cmQosQueueProfileName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileName.setStatus("current")
_CmQosQueueProfileBufferSize_Type = Integer32
_CmQosQueueProfileBufferSize_Object = MibTableColumn
cmQosQueueProfileBufferSize = _CmQosQueueProfileBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 3),
    _CmQosQueueProfileBufferSize_Type()
)
cmQosQueueProfileBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileBufferSize.setStatus("current")
_CmQosQueueProfileREDEnabled_Type = TruthValue
_CmQosQueueProfileREDEnabled_Object = MibTableColumn
cmQosQueueProfileREDEnabled = _CmQosQueueProfileREDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 4),
    _CmQosQueueProfileREDEnabled_Type()
)
cmQosQueueProfileREDEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileREDEnabled.setStatus("current")
_CmQosQueueProfileStorageType_Type = StorageType
_CmQosQueueProfileStorageType_Object = MibTableColumn
cmQosQueueProfileStorageType = _CmQosQueueProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 5),
    _CmQosQueueProfileStorageType_Type()
)
cmQosQueueProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileStorageType.setStatus("current")
_CmQosQueueProfileRowStatus_Type = RowStatus
_CmQosQueueProfileRowStatus_Object = MibTableColumn
cmQosQueueProfileRowStatus = _CmQosQueueProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 40, 1, 6),
    _CmQosQueueProfileRowStatus_Type()
)
cmQosQueueProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosQueueProfileRowStatus.setStatus("current")
_CmQosPolicerV2Table_Object = MibTable
cmQosPolicerV2Table = _CmQosPolicerV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41)
)
if mibBuilder.loadTexts:
    cmQosPolicerV2Table.setStatus("current")
_CmQosPolicerV2Entry_Object = MibTableRow
cmQosPolicerV2Entry = _CmQosPolicerV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1)
)
cmQosPolicerV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "cmQosPolicerV2Index"),
)
if mibBuilder.loadTexts:
    cmQosPolicerV2Entry.setStatus("current")


class _CmQosPolicerV2Index_Type(Integer32):
    """Custom type cmQosPolicerV2Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmQosPolicerV2Index_Type.__name__ = "Integer32"
_CmQosPolicerV2Index_Object = MibTableColumn
cmQosPolicerV2Index = _CmQosPolicerV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 1),
    _CmQosPolicerV2Index_Type()
)
cmQosPolicerV2Index.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerV2Index.setStatus("current")
_CmQosPolicerV2AdminState_Type = AdminState
_CmQosPolicerV2AdminState_Object = MibTableColumn
cmQosPolicerV2AdminState = _CmQosPolicerV2AdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 2),
    _CmQosPolicerV2AdminState_Type()
)
cmQosPolicerV2AdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosPolicerV2AdminState.setStatus("current")
_CmQosPolicerV2OperationalState_Type = OperationalState
_CmQosPolicerV2OperationalState_Object = MibTableColumn
cmQosPolicerV2OperationalState = _CmQosPolicerV2OperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 3),
    _CmQosPolicerV2OperationalState_Type()
)
cmQosPolicerV2OperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosPolicerV2OperationalState.setStatus("current")
_CmQosPolicerV2SecondaryState_Type = SecondaryState
_CmQosPolicerV2SecondaryState_Object = MibTableColumn
cmQosPolicerV2SecondaryState = _CmQosPolicerV2SecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 4),
    _CmQosPolicerV2SecondaryState_Type()
)
cmQosPolicerV2SecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosPolicerV2SecondaryState.setStatus("current")
_CmQosPolicerV2ColorMarkingEnabled_Type = TruthValue
_CmQosPolicerV2ColorMarkingEnabled_Object = MibTableColumn
cmQosPolicerV2ColorMarkingEnabled = _CmQosPolicerV2ColorMarkingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 5),
    _CmQosPolicerV2ColorMarkingEnabled_Type()
)
cmQosPolicerV2ColorMarkingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosPolicerV2ColorMarkingEnabled.setStatus("current")
_CmQosPolicerV2AssociatedProfile_Type = VariablePointer
_CmQosPolicerV2AssociatedProfile_Object = MibTableColumn
cmQosPolicerV2AssociatedProfile = _CmQosPolicerV2AssociatedProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 6),
    _CmQosPolicerV2AssociatedProfile_Type()
)
cmQosPolicerV2AssociatedProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerV2AssociatedProfile.setStatus("current")
_CmQosPolicerV2StorageType_Type = StorageType
_CmQosPolicerV2StorageType_Object = MibTableColumn
cmQosPolicerV2StorageType = _CmQosPolicerV2StorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 7),
    _CmQosPolicerV2StorageType_Type()
)
cmQosPolicerV2StorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerV2StorageType.setStatus("current")
_CmQosPolicerV2RowStatus_Type = RowStatus
_CmQosPolicerV2RowStatus_Object = MibTableColumn
cmQosPolicerV2RowStatus = _CmQosPolicerV2RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 8),
    _CmQosPolicerV2RowStatus_Type()
)
cmQosPolicerV2RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosPolicerV2RowStatus.setStatus("current")
_CmQosPolicerV2PolicingEnabled_Type = TruthValue
_CmQosPolicerV2PolicingEnabled_Object = MibTableColumn
cmQosPolicerV2PolicingEnabled = _CmQosPolicerV2PolicingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 41, 1, 9),
    _CmQosPolicerV2PolicingEnabled_Type()
)
cmQosPolicerV2PolicingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosPolicerV2PolicingEnabled.setStatus("current")
_CmQosShaperV2Table_Object = MibTable
cmQosShaperV2Table = _CmQosShaperV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42)
)
if mibBuilder.loadTexts:
    cmQosShaperV2Table.setStatus("current")
_CmQosShaperV2Entry_Object = MibTableRow
cmQosShaperV2Entry = _CmQosShaperV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1)
)
cmQosShaperV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "cmQosShaperV2Index"),
)
if mibBuilder.loadTexts:
    cmQosShaperV2Entry.setStatus("current")


class _CmQosShaperV2Index_Type(Integer32):
    """Custom type cmQosShaperV2Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmQosShaperV2Index_Type.__name__ = "Integer32"
_CmQosShaperV2Index_Object = MibTableColumn
cmQosShaperV2Index = _CmQosShaperV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 1),
    _CmQosShaperV2Index_Type()
)
cmQosShaperV2Index.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperV2Index.setStatus("current")
_CmQosShaperV2AdminState_Type = AdminState
_CmQosShaperV2AdminState_Object = MibTableColumn
cmQosShaperV2AdminState = _CmQosShaperV2AdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 2),
    _CmQosShaperV2AdminState_Type()
)
cmQosShaperV2AdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2AdminState.setStatus("current")
_CmQosShaperV2OperationalState_Type = OperationalState
_CmQosShaperV2OperationalState_Object = MibTableColumn
cmQosShaperV2OperationalState = _CmQosShaperV2OperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 3),
    _CmQosShaperV2OperationalState_Type()
)
cmQosShaperV2OperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperV2OperationalState.setStatus("current")
_CmQosShaperV2SecondaryState_Type = SecondaryState
_CmQosShaperV2SecondaryState_Object = MibTableColumn
cmQosShaperV2SecondaryState = _CmQosShaperV2SecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 4),
    _CmQosShaperV2SecondaryState_Type()
)
cmQosShaperV2SecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperV2SecondaryState.setStatus("current")
_CmQosShaperV2AssociatedQueueProfile_Type = VariablePointer
_CmQosShaperV2AssociatedQueueProfile_Object = MibTableColumn
cmQosShaperV2AssociatedQueueProfile = _CmQosShaperV2AssociatedQueueProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 5),
    _CmQosShaperV2AssociatedQueueProfile_Type()
)
cmQosShaperV2AssociatedQueueProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperV2AssociatedQueueProfile.setStatus("current")
_CmQosShaperV2CIRLo_Type = Unsigned32
_CmQosShaperV2CIRLo_Object = MibTableColumn
cmQosShaperV2CIRLo = _CmQosShaperV2CIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 6),
    _CmQosShaperV2CIRLo_Type()
)
cmQosShaperV2CIRLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2CIRLo.setStatus("current")
_CmQosShaperV2CIRHi_Type = Unsigned32
_CmQosShaperV2CIRHi_Object = MibTableColumn
cmQosShaperV2CIRHi = _CmQosShaperV2CIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 7),
    _CmQosShaperV2CIRHi_Type()
)
cmQosShaperV2CIRHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2CIRHi.setStatus("current")
_CmQosShaperV2EIRLo_Type = Unsigned32
_CmQosShaperV2EIRLo_Object = MibTableColumn
cmQosShaperV2EIRLo = _CmQosShaperV2EIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 8),
    _CmQosShaperV2EIRLo_Type()
)
cmQosShaperV2EIRLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2EIRLo.setStatus("current")
_CmQosShaperV2EIRHi_Type = Unsigned32
_CmQosShaperV2EIRHi_Object = MibTableColumn
cmQosShaperV2EIRHi = _CmQosShaperV2EIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 9),
    _CmQosShaperV2EIRHi_Type()
)
cmQosShaperV2EIRHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2EIRHi.setStatus("current")


class _CmQosShaperV2IngressAverageFrameSize_Type(Integer32):
    """Custom type cmQosShaperV2IngressAverageFrameSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 9600),
    )


_CmQosShaperV2IngressAverageFrameSize_Type.__name__ = "Integer32"
_CmQosShaperV2IngressAverageFrameSize_Object = MibTableColumn
cmQosShaperV2IngressAverageFrameSize = _CmQosShaperV2IngressAverageFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 10),
    _CmQosShaperV2IngressAverageFrameSize_Type()
)
cmQosShaperV2IngressAverageFrameSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperV2IngressAverageFrameSize.setStatus("current")
_CmQosShaperV2StorageType_Type = StorageType
_CmQosShaperV2StorageType_Object = MibTableColumn
cmQosShaperV2StorageType = _CmQosShaperV2StorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 11),
    _CmQosShaperV2StorageType_Type()
)
cmQosShaperV2StorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperV2StorageType.setStatus("current")
_CmQosShaperV2RowStatus_Type = RowStatus
_CmQosShaperV2RowStatus_Object = MibTableColumn
cmQosShaperV2RowStatus = _CmQosShaperV2RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 12),
    _CmQosShaperV2RowStatus_Type()
)
cmQosShaperV2RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmQosShaperV2RowStatus.setStatus("current")
_CmQosShaperV2AdditionalCIRLo_Type = Unsigned32
_CmQosShaperV2AdditionalCIRLo_Object = MibTableColumn
cmQosShaperV2AdditionalCIRLo = _CmQosShaperV2AdditionalCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 13),
    _CmQosShaperV2AdditionalCIRLo_Type()
)
cmQosShaperV2AdditionalCIRLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2AdditionalCIRLo.setStatus("current")
_CmQosShaperV2AdditionalCIRHi_Type = Unsigned32
_CmQosShaperV2AdditionalCIRHi_Object = MibTableColumn
cmQosShaperV2AdditionalCIRHi = _CmQosShaperV2AdditionalCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 14),
    _CmQosShaperV2AdditionalCIRHi_Type()
)
cmQosShaperV2AdditionalCIRHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2AdditionalCIRHi.setStatus("current")


class _CmQosShaperV2WFQWeight_Type(Integer32):
    """Custom type cmQosShaperV2WFQWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CmQosShaperV2WFQWeight_Type.__name__ = "Integer32"
_CmQosShaperV2WFQWeight_Object = MibTableColumn
cmQosShaperV2WFQWeight = _CmQosShaperV2WFQWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 15),
    _CmQosShaperV2WFQWeight_Type()
)
cmQosShaperV2WFQWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2WFQWeight.setStatus("current")
_CmQosShaperV2ActualCIR_Type = Counter64
_CmQosShaperV2ActualCIR_Object = MibTableColumn
cmQosShaperV2ActualCIR = _CmQosShaperV2ActualCIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 16),
    _CmQosShaperV2ActualCIR_Type()
)
cmQosShaperV2ActualCIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperV2ActualCIR.setStatus("current")
_CmQosShaperV2ActualEIR_Type = Counter64
_CmQosShaperV2ActualEIR_Object = MibTableColumn
cmQosShaperV2ActualEIR = _CmQosShaperV2ActualEIR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 17),
    _CmQosShaperV2ActualEIR_Type()
)
cmQosShaperV2ActualEIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmQosShaperV2ActualEIR.setStatus("current")
_CmQosShaperV2LowLatencyControl_Type = TruthValue
_CmQosShaperV2LowLatencyControl_Object = MibTableColumn
cmQosShaperV2LowLatencyControl = _CmQosShaperV2LowLatencyControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 42, 1, 18),
    _CmQosShaperV2LowLatencyControl_Type()
)
cmQosShaperV2LowLatencyControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmQosShaperV2LowLatencyControl.setStatus("current")
_CmTrafficPortQosShaperTable_Object = MibTable
cmTrafficPortQosShaperTable = _CmTrafficPortQosShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43)
)
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperTable.setStatus("current")
_CmTrafficPortQosShaperEntry_Object = MibTableRow
cmTrafficPortQosShaperEntry = _CmTrafficPortQosShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1)
)
cmTrafficPortQosShaperEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"),
)
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperEntry.setStatus("current")


class _CmTrafficPortQosShaperIndex_Type(Integer32):
    """Custom type cmTrafficPortQosShaperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmTrafficPortQosShaperIndex_Type.__name__ = "Integer32"
_CmTrafficPortQosShaperIndex_Object = MibTableColumn
cmTrafficPortQosShaperIndex = _CmTrafficPortQosShaperIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 1),
    _CmTrafficPortQosShaperIndex_Type()
)
cmTrafficPortQosShaperIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperIndex.setStatus("current")
_CmTrafficPortQosShaperAdminState_Type = AdminState
_CmTrafficPortQosShaperAdminState_Object = MibTableColumn
cmTrafficPortQosShaperAdminState = _CmTrafficPortQosShaperAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 2),
    _CmTrafficPortQosShaperAdminState_Type()
)
cmTrafficPortQosShaperAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperAdminState.setStatus("current")
_CmTrafficPortQosShaperOperationalState_Type = OperationalState
_CmTrafficPortQosShaperOperationalState_Object = MibTableColumn
cmTrafficPortQosShaperOperationalState = _CmTrafficPortQosShaperOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 3),
    _CmTrafficPortQosShaperOperationalState_Type()
)
cmTrafficPortQosShaperOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperOperationalState.setStatus("current")
_CmTrafficPortQosShaperSecondaryState_Type = SecondaryState
_CmTrafficPortQosShaperSecondaryState_Object = MibTableColumn
cmTrafficPortQosShaperSecondaryState = _CmTrafficPortQosShaperSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 4),
    _CmTrafficPortQosShaperSecondaryState_Type()
)
cmTrafficPortQosShaperSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperSecondaryState.setStatus("current")
_CmTrafficPortQosShaperAssociatedQueueProfile_Type = VariablePointer
_CmTrafficPortQosShaperAssociatedQueueProfile_Object = MibTableColumn
cmTrafficPortQosShaperAssociatedQueueProfile = _CmTrafficPortQosShaperAssociatedQueueProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 5),
    _CmTrafficPortQosShaperAssociatedQueueProfile_Type()
)
cmTrafficPortQosShaperAssociatedQueueProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperAssociatedQueueProfile.setStatus("current")
_CmTrafficPortQosShaperBufferSize_Type = Integer32
_CmTrafficPortQosShaperBufferSize_Object = MibTableColumn
cmTrafficPortQosShaperBufferSize = _CmTrafficPortQosShaperBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 6),
    _CmTrafficPortQosShaperBufferSize_Type()
)
cmTrafficPortQosShaperBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperBufferSize.setStatus("current")
_CmTrafficPortQosShaperCIRLo_Type = Unsigned32
_CmTrafficPortQosShaperCIRLo_Object = MibTableColumn
cmTrafficPortQosShaperCIRLo = _CmTrafficPortQosShaperCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 7),
    _CmTrafficPortQosShaperCIRLo_Type()
)
cmTrafficPortQosShaperCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperCIRLo.setStatus("current")
_CmTrafficPortQosShaperCIRHi_Type = Unsigned32
_CmTrafficPortQosShaperCIRHi_Object = MibTableColumn
cmTrafficPortQosShaperCIRHi = _CmTrafficPortQosShaperCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 8),
    _CmTrafficPortQosShaperCIRHi_Type()
)
cmTrafficPortQosShaperCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperCIRHi.setStatus("current")
_CmTrafficPortQosShaperEIRLo_Type = Unsigned32
_CmTrafficPortQosShaperEIRLo_Object = MibTableColumn
cmTrafficPortQosShaperEIRLo = _CmTrafficPortQosShaperEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 9),
    _CmTrafficPortQosShaperEIRLo_Type()
)
cmTrafficPortQosShaperEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperEIRLo.setStatus("current")
_CmTrafficPortQosShaperEIRHi_Type = Unsigned32
_CmTrafficPortQosShaperEIRHi_Object = MibTableColumn
cmTrafficPortQosShaperEIRHi = _CmTrafficPortQosShaperEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 10),
    _CmTrafficPortQosShaperEIRHi_Type()
)
cmTrafficPortQosShaperEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperEIRHi.setStatus("current")
_CmTrafficPortQosShaperStorageType_Type = StorageType
_CmTrafficPortQosShaperStorageType_Object = MibTableColumn
cmTrafficPortQosShaperStorageType = _CmTrafficPortQosShaperStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 11),
    _CmTrafficPortQosShaperStorageType_Type()
)
cmTrafficPortQosShaperStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperStorageType.setStatus("current")
_CmTrafficPortQosShaperRowStatus_Type = RowStatus
_CmTrafficPortQosShaperRowStatus_Object = MibTableColumn
cmTrafficPortQosShaperRowStatus = _CmTrafficPortQosShaperRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 12),
    _CmTrafficPortQosShaperRowStatus_Type()
)
cmTrafficPortQosShaperRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperRowStatus.setStatus("current")


class _CmTrafficPortQosShaperIngressAverageFrameSize_Type(Integer32):
    """Custom type cmTrafficPortQosShaperIngressAverageFrameSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 9600),
    )


_CmTrafficPortQosShaperIngressAverageFrameSize_Type.__name__ = "Integer32"
_CmTrafficPortQosShaperIngressAverageFrameSize_Object = MibTableColumn
cmTrafficPortQosShaperIngressAverageFrameSize = _CmTrafficPortQosShaperIngressAverageFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 13),
    _CmTrafficPortQosShaperIngressAverageFrameSize_Type()
)
cmTrafficPortQosShaperIngressAverageFrameSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperIngressAverageFrameSize.setStatus("current")
_CmTrafficPortQosShaperAdditionalCIRLo_Type = Unsigned32
_CmTrafficPortQosShaperAdditionalCIRLo_Object = MibTableColumn
cmTrafficPortQosShaperAdditionalCIRLo = _CmTrafficPortQosShaperAdditionalCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 14),
    _CmTrafficPortQosShaperAdditionalCIRLo_Type()
)
cmTrafficPortQosShaperAdditionalCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperAdditionalCIRLo.setStatus("current")
_CmTrafficPortQosShaperAdditionalCIRHi_Type = Unsigned32
_CmTrafficPortQosShaperAdditionalCIRHi_Object = MibTableColumn
cmTrafficPortQosShaperAdditionalCIRHi = _CmTrafficPortQosShaperAdditionalCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 15),
    _CmTrafficPortQosShaperAdditionalCIRHi_Type()
)
cmTrafficPortQosShaperAdditionalCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperAdditionalCIRHi.setStatus("current")
_CmTrafficPortQosShaperWfqWeight_Type = Integer32
_CmTrafficPortQosShaperWfqWeight_Object = MibTableColumn
cmTrafficPortQosShaperWfqWeight = _CmTrafficPortQosShaperWfqWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 43, 1, 16),
    _CmTrafficPortQosShaperWfqWeight_Type()
)
cmTrafficPortQosShaperWfqWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperWfqWeight.setStatus("current")
_CmTrafficAclRscAllocation_Type = CmAclConfiguration
_CmTrafficAclRscAllocation_Object = MibScalar
cmTrafficAclRscAllocation = _CmTrafficAclRscAllocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 44),
    _CmTrafficAclRscAllocation_Type()
)
cmTrafficAclRscAllocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmTrafficAclRscAllocation.setStatus("current")
_F3NetPortQosShaperTable_Object = MibTable
f3NetPortQosShaperTable = _F3NetPortQosShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45)
)
if mibBuilder.loadTexts:
    f3NetPortQosShaperTable.setStatus("current")
_F3NetPortQosShaperEntry_Object = MibTableRow
f3NetPortQosShaperEntry = _F3NetPortQosShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1)
)
f3NetPortQosShaperEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "f3NetPortQosShaperIndex"),
)
if mibBuilder.loadTexts:
    f3NetPortQosShaperEntry.setStatus("current")


class _F3NetPortQosShaperIndex_Type(Integer32):
    """Custom type f3NetPortQosShaperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_F3NetPortQosShaperIndex_Type.__name__ = "Integer32"
_F3NetPortQosShaperIndex_Object = MibTableColumn
f3NetPortQosShaperIndex = _F3NetPortQosShaperIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 1),
    _F3NetPortQosShaperIndex_Type()
)
f3NetPortQosShaperIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperIndex.setStatus("current")
_F3NetPortQosShaperDirection_Type = TrafficDirection
_F3NetPortQosShaperDirection_Object = MibTableColumn
f3NetPortQosShaperDirection = _F3NetPortQosShaperDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 2),
    _F3NetPortQosShaperDirection_Type()
)
f3NetPortQosShaperDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3NetPortQosShaperDirection.setStatus("current")
_F3NetPortQosShaperAdminState_Type = AdminState
_F3NetPortQosShaperAdminState_Object = MibTableColumn
f3NetPortQosShaperAdminState = _F3NetPortQosShaperAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 3),
    _F3NetPortQosShaperAdminState_Type()
)
f3NetPortQosShaperAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3NetPortQosShaperAdminState.setStatus("current")
_F3NetPortQosShaperOperationalState_Type = OperationalState
_F3NetPortQosShaperOperationalState_Object = MibTableColumn
f3NetPortQosShaperOperationalState = _F3NetPortQosShaperOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 4),
    _F3NetPortQosShaperOperationalState_Type()
)
f3NetPortQosShaperOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3NetPortQosShaperOperationalState.setStatus("current")
_F3NetPortQosShaperSecondaryState_Type = SecondaryState
_F3NetPortQosShaperSecondaryState_Object = MibTableColumn
f3NetPortQosShaperSecondaryState = _F3NetPortQosShaperSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 5),
    _F3NetPortQosShaperSecondaryState_Type()
)
f3NetPortQosShaperSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3NetPortQosShaperSecondaryState.setStatus("current")
_F3NetPortQosShaperCIRLo_Type = Unsigned32
_F3NetPortQosShaperCIRLo_Object = MibTableColumn
f3NetPortQosShaperCIRLo = _F3NetPortQosShaperCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 6),
    _F3NetPortQosShaperCIRLo_Type()
)
f3NetPortQosShaperCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperCIRLo.setStatus("current")
_F3NetPortQosShaperCIRHi_Type = Unsigned32
_F3NetPortQosShaperCIRHi_Object = MibTableColumn
f3NetPortQosShaperCIRHi = _F3NetPortQosShaperCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 7),
    _F3NetPortQosShaperCIRHi_Type()
)
f3NetPortQosShaperCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperCIRHi.setStatus("current")
_F3NetPortQosShaperEIRLo_Type = Unsigned32
_F3NetPortQosShaperEIRLo_Object = MibTableColumn
f3NetPortQosShaperEIRLo = _F3NetPortQosShaperEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 8),
    _F3NetPortQosShaperEIRLo_Type()
)
f3NetPortQosShaperEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperEIRLo.setStatus("current")
_F3NetPortQosShaperEIRHi_Type = Unsigned32
_F3NetPortQosShaperEIRHi_Object = MibTableColumn
f3NetPortQosShaperEIRHi = _F3NetPortQosShaperEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 9),
    _F3NetPortQosShaperEIRHi_Type()
)
f3NetPortQosShaperEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperEIRHi.setStatus("current")
_F3NetPortQosShaperCBS_Type = Unsigned32
_F3NetPortQosShaperCBS_Object = MibTableColumn
f3NetPortQosShaperCBS = _F3NetPortQosShaperCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 10),
    _F3NetPortQosShaperCBS_Type()
)
f3NetPortQosShaperCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperCBS.setStatus("current")
_F3NetPortQosShaperEBS_Type = Unsigned32
_F3NetPortQosShaperEBS_Object = MibTableColumn
f3NetPortQosShaperEBS = _F3NetPortQosShaperEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 11),
    _F3NetPortQosShaperEBS_Type()
)
f3NetPortQosShaperEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperEBS.setStatus("current")
_F3NetPortQosShaperBufferSize_Type = Unsigned32
_F3NetPortQosShaperBufferSize_Object = MibTableColumn
f3NetPortQosShaperBufferSize = _F3NetPortQosShaperBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 12),
    _F3NetPortQosShaperBufferSize_Type()
)
f3NetPortQosShaperBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperBufferSize.setStatus("current")


class _F3NetPortQosShaperCOS_Type(Integer32):
    """Custom type f3NetPortQosShaperCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_F3NetPortQosShaperCOS_Type.__name__ = "Integer32"
_F3NetPortQosShaperCOS_Object = MibTableColumn
f3NetPortQosShaperCOS = _F3NetPortQosShaperCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 13),
    _F3NetPortQosShaperCOS_Type()
)
f3NetPortQosShaperCOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3NetPortQosShaperCOS.setStatus("current")
_F3NetPortQosShaperSoamCIRLo_Type = Unsigned32
_F3NetPortQosShaperSoamCIRLo_Object = MibTableColumn
f3NetPortQosShaperSoamCIRLo = _F3NetPortQosShaperSoamCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 14),
    _F3NetPortQosShaperSoamCIRLo_Type()
)
f3NetPortQosShaperSoamCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperSoamCIRLo.setStatus("current")
_F3NetPortQosShaperSoamCIRHi_Type = Unsigned32
_F3NetPortQosShaperSoamCIRHi_Object = MibTableColumn
f3NetPortQosShaperSoamCIRHi = _F3NetPortQosShaperSoamCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 15),
    _F3NetPortQosShaperSoamCIRHi_Type()
)
f3NetPortQosShaperSoamCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperSoamCIRHi.setStatus("current")
_F3NetPortQosShaperSoamEIRLo_Type = Unsigned32
_F3NetPortQosShaperSoamEIRLo_Object = MibTableColumn
f3NetPortQosShaperSoamEIRLo = _F3NetPortQosShaperSoamEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 16),
    _F3NetPortQosShaperSoamEIRLo_Type()
)
f3NetPortQosShaperSoamEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperSoamEIRLo.setStatus("current")
_F3NetPortQosShaperSoamEIRHi_Type = Unsigned32
_F3NetPortQosShaperSoamEIRHi_Object = MibTableColumn
f3NetPortQosShaperSoamEIRHi = _F3NetPortQosShaperSoamEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 17),
    _F3NetPortQosShaperSoamEIRHi_Type()
)
f3NetPortQosShaperSoamEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperSoamEIRHi.setStatus("current")
_F3NetPortQosShaperWredGreenMinQueueThreshold_Type = Unsigned32
_F3NetPortQosShaperWredGreenMinQueueThreshold_Object = MibTableColumn
f3NetPortQosShaperWredGreenMinQueueThreshold = _F3NetPortQosShaperWredGreenMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 18),
    _F3NetPortQosShaperWredGreenMinQueueThreshold_Type()
)
f3NetPortQosShaperWredGreenMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredGreenMinQueueThreshold.setStatus("current")
_F3NetPortQosShaperWredGreenMaxQueueThreshold_Type = Unsigned32
_F3NetPortQosShaperWredGreenMaxQueueThreshold_Object = MibTableColumn
f3NetPortQosShaperWredGreenMaxQueueThreshold = _F3NetPortQosShaperWredGreenMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 19),
    _F3NetPortQosShaperWredGreenMaxQueueThreshold_Type()
)
f3NetPortQosShaperWredGreenMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredGreenMaxQueueThreshold.setStatus("current")
_F3NetPortQosShaperWredGreenDropProbability_Type = Unsigned32
_F3NetPortQosShaperWredGreenDropProbability_Object = MibTableColumn
f3NetPortQosShaperWredGreenDropProbability = _F3NetPortQosShaperWredGreenDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 20),
    _F3NetPortQosShaperWredGreenDropProbability_Type()
)
f3NetPortQosShaperWredGreenDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredGreenDropProbability.setStatus("current")
_F3NetPortQosShaperWredYellowMinQueueThreshold_Type = Unsigned32
_F3NetPortQosShaperWredYellowMinQueueThreshold_Object = MibTableColumn
f3NetPortQosShaperWredYellowMinQueueThreshold = _F3NetPortQosShaperWredYellowMinQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 21),
    _F3NetPortQosShaperWredYellowMinQueueThreshold_Type()
)
f3NetPortQosShaperWredYellowMinQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredYellowMinQueueThreshold.setStatus("current")
_F3NetPortQosShaperWredYellowMaxQueueThreshold_Type = Unsigned32
_F3NetPortQosShaperWredYellowMaxQueueThreshold_Object = MibTableColumn
f3NetPortQosShaperWredYellowMaxQueueThreshold = _F3NetPortQosShaperWredYellowMaxQueueThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 22),
    _F3NetPortQosShaperWredYellowMaxQueueThreshold_Type()
)
f3NetPortQosShaperWredYellowMaxQueueThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredYellowMaxQueueThreshold.setStatus("current")
_F3NetPortQosShaperWredYellowDropProbability_Type = Unsigned32
_F3NetPortQosShaperWredYellowDropProbability_Object = MibTableColumn
f3NetPortQosShaperWredYellowDropProbability = _F3NetPortQosShaperWredYellowDropProbability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 23),
    _F3NetPortQosShaperWredYellowDropProbability_Type()
)
f3NetPortQosShaperWredYellowDropProbability.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWredYellowDropProbability.setStatus("current")
_F3NetPortQosShaperAvgFrameSizeBeforeFragment_Type = Integer32
_F3NetPortQosShaperAvgFrameSizeBeforeFragment_Object = MibTableColumn
f3NetPortQosShaperAvgFrameSizeBeforeFragment = _F3NetPortQosShaperAvgFrameSizeBeforeFragment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 24),
    _F3NetPortQosShaperAvgFrameSizeBeforeFragment_Type()
)
f3NetPortQosShaperAvgFrameSizeBeforeFragment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3NetPortQosShaperAvgFrameSizeBeforeFragment.setStatus("current")
_F3NetPortQosShaperWfqWeight_Type = Integer32
_F3NetPortQosShaperWfqWeight_Object = MibTableColumn
f3NetPortQosShaperWfqWeight = _F3NetPortQosShaperWfqWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 45, 1, 25),
    _F3NetPortQosShaperWfqWeight_Type()
)
f3NetPortQosShaperWfqWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3NetPortQosShaperWfqWeight.setStatus("current")
_F3Usb3GDCNPortTable_Object = MibTable
f3Usb3GDCNPortTable = _F3Usb3GDCNPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46)
)
if mibBuilder.loadTexts:
    f3Usb3GDCNPortTable.setStatus("current")
_F3Usb3GDCNPortEntry_Object = MibTableRow
f3Usb3GDCNPortEntry = _F3Usb3GDCNPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1)
)
f3Usb3GDCNPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-ENTITY-MIB", "f3UsbHostIndex"),
)
if mibBuilder.loadTexts:
    f3Usb3GDCNPortEntry.setStatus("current")
_F3Usb3GDCNPortIndex_Type = Integer32
_F3Usb3GDCNPortIndex_Object = MibTableColumn
f3Usb3GDCNPortIndex = _F3Usb3GDCNPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 1),
    _F3Usb3GDCNPortIndex_Type()
)
f3Usb3GDCNPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortIndex.setStatus("current")
_F3Usb3GDCNPortIfIndex_Type = InterfaceIndex
_F3Usb3GDCNPortIfIndex_Object = MibTableColumn
f3Usb3GDCNPortIfIndex = _F3Usb3GDCNPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 2),
    _F3Usb3GDCNPortIfIndex_Type()
)
f3Usb3GDCNPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortIfIndex.setStatus("current")
_F3Usb3GDCNPortEntityIndex_Type = PhysicalIndex
_F3Usb3GDCNPortEntityIndex_Object = MibTableColumn
f3Usb3GDCNPortEntityIndex = _F3Usb3GDCNPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 3),
    _F3Usb3GDCNPortEntityIndex_Type()
)
f3Usb3GDCNPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortEntityIndex.setStatus("current")
_F3Usb3GDCNPortAdminState_Type = AdminState
_F3Usb3GDCNPortAdminState_Object = MibTableColumn
f3Usb3GDCNPortAdminState = _F3Usb3GDCNPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 4),
    _F3Usb3GDCNPortAdminState_Type()
)
f3Usb3GDCNPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortAdminState.setStatus("current")
_F3Usb3GDCNPortOperationalState_Type = OperationalState
_F3Usb3GDCNPortOperationalState_Object = MibTableColumn
f3Usb3GDCNPortOperationalState = _F3Usb3GDCNPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 5),
    _F3Usb3GDCNPortOperationalState_Type()
)
f3Usb3GDCNPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortOperationalState.setStatus("current")
_F3Usb3GDCNPortSecondaryState_Type = SecondaryState
_F3Usb3GDCNPortSecondaryState_Object = MibTableColumn
f3Usb3GDCNPortSecondaryState = _F3Usb3GDCNPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 6),
    _F3Usb3GDCNPortSecondaryState_Type()
)
f3Usb3GDCNPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortSecondaryState.setStatus("current")
_F3Usb3GDCNPortVendorName_Type = DisplayString
_F3Usb3GDCNPortVendorName_Object = MibTableColumn
f3Usb3GDCNPortVendorName = _F3Usb3GDCNPortVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 7),
    _F3Usb3GDCNPortVendorName_Type()
)
f3Usb3GDCNPortVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortVendorName.setStatus("current")
_F3Usb3GDCNPortModel_Type = DisplayString
_F3Usb3GDCNPortModel_Object = MibTableColumn
f3Usb3GDCNPortModel = _F3Usb3GDCNPortModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 8),
    _F3Usb3GDCNPortModel_Type()
)
f3Usb3GDCNPortModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortModel.setStatus("current")
_F3Usb3GDCNPortFSN_Type = DisplayString
_F3Usb3GDCNPortFSN_Object = MibTableColumn
f3Usb3GDCNPortFSN = _F3Usb3GDCNPortFSN_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 9),
    _F3Usb3GDCNPortFSN_Type()
)
f3Usb3GDCNPortFSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortFSN.setStatus("current")
_F3Usb3GDCNPortIMEI_Type = DisplayString
_F3Usb3GDCNPortIMEI_Object = MibTableColumn
f3Usb3GDCNPortIMEI = _F3Usb3GDCNPortIMEI_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 10),
    _F3Usb3GDCNPortIMEI_Type()
)
f3Usb3GDCNPortIMEI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortIMEI.setStatus("current")
_F3Usb3GDCNPortHardwareVersion_Type = DisplayString
_F3Usb3GDCNPortHardwareVersion_Object = MibTableColumn
f3Usb3GDCNPortHardwareVersion = _F3Usb3GDCNPortHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 11),
    _F3Usb3GDCNPortHardwareVersion_Type()
)
f3Usb3GDCNPortHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortHardwareVersion.setStatus("current")
_F3Usb3GDCNPortFirmwareVersion_Type = DisplayString
_F3Usb3GDCNPortFirmwareVersion_Object = MibTableColumn
f3Usb3GDCNPortFirmwareVersion = _F3Usb3GDCNPortFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 12),
    _F3Usb3GDCNPortFirmwareVersion_Type()
)
f3Usb3GDCNPortFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortFirmwareVersion.setStatus("current")
_F3Usb3GDCNPortSIMStatus_Type = F3Usb3GSimCardState
_F3Usb3GDCNPortSIMStatus_Object = MibTableColumn
f3Usb3GDCNPortSIMStatus = _F3Usb3GDCNPortSIMStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 13),
    _F3Usb3GDCNPortSIMStatus_Type()
)
f3Usb3GDCNPortSIMStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortSIMStatus.setStatus("current")
_F3Usb3GDCNPortPINLeftChances_Type = Integer32
_F3Usb3GDCNPortPINLeftChances_Object = MibTableColumn
f3Usb3GDCNPortPINLeftChances = _F3Usb3GDCNPortPINLeftChances_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 14),
    _F3Usb3GDCNPortPINLeftChances_Type()
)
f3Usb3GDCNPortPINLeftChances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortPINLeftChances.setStatus("current")
_F3Usb3GDCNPortPUKLeftChances_Type = Integer32
_F3Usb3GDCNPortPUKLeftChances_Object = MibTableColumn
f3Usb3GDCNPortPUKLeftChances = _F3Usb3GDCNPortPUKLeftChances_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 15),
    _F3Usb3GDCNPortPUKLeftChances_Type()
)
f3Usb3GDCNPortPUKLeftChances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortPUKLeftChances.setStatus("current")
_F3Usb3GDCNPortConnectionStatus_Type = F3Usb3GNetworkConnectionState
_F3Usb3GDCNPortConnectionStatus_Object = MibTableColumn
f3Usb3GDCNPortConnectionStatus = _F3Usb3GDCNPortConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 16),
    _F3Usb3GDCNPortConnectionStatus_Type()
)
f3Usb3GDCNPortConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortConnectionStatus.setStatus("current")
_F3Usb3GDCNPortRSSI_Type = F3Usb3GRecvSignalStrengthInd
_F3Usb3GDCNPortRSSI_Object = MibTableColumn
f3Usb3GDCNPortRSSI = _F3Usb3GDCNPortRSSI_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 17),
    _F3Usb3GDCNPortRSSI_Type()
)
f3Usb3GDCNPortRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortRSSI.setStatus("current")
_F3Usb3GDCNPortSpeed_Type = Integer32
_F3Usb3GDCNPortSpeed_Object = MibTableColumn
f3Usb3GDCNPortSpeed = _F3Usb3GDCNPortSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 18),
    _F3Usb3GDCNPortSpeed_Type()
)
f3Usb3GDCNPortSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortSpeed.setStatus("current")
_F3Usb3GDCNPortMTU_Type = Integer32
_F3Usb3GDCNPortMTU_Object = MibTableColumn
f3Usb3GDCNPortMTU = _F3Usb3GDCNPortMTU_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 19),
    _F3Usb3GDCNPortMTU_Type()
)
f3Usb3GDCNPortMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortMTU.setStatus("current")
_F3Usb3GDCNPortProviderName_Type = DisplayString
_F3Usb3GDCNPortProviderName_Object = MibTableColumn
f3Usb3GDCNPortProviderName = _F3Usb3GDCNPortProviderName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 20),
    _F3Usb3GDCNPortProviderName_Type()
)
f3Usb3GDCNPortProviderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortProviderName.setStatus("current")
_F3Usb3GDCNPortDNS1_Type = IpAddress
_F3Usb3GDCNPortDNS1_Object = MibTableColumn
f3Usb3GDCNPortDNS1 = _F3Usb3GDCNPortDNS1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 21),
    _F3Usb3GDCNPortDNS1_Type()
)
f3Usb3GDCNPortDNS1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortDNS1.setStatus("current")
_F3Usb3GDCNPortDNS2_Type = IpAddress
_F3Usb3GDCNPortDNS2_Object = MibTableColumn
f3Usb3GDCNPortDNS2 = _F3Usb3GDCNPortDNS2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 22),
    _F3Usb3GDCNPortDNS2_Type()
)
f3Usb3GDCNPortDNS2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortDNS2.setStatus("current")


class _F3Usb3GDCNPortAPN_Type(DisplayString):
    """Custom type f3Usb3GDCNPortAPN based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3Usb3GDCNPortAPN_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortAPN_Object = MibTableColumn
f3Usb3GDCNPortAPN = _F3Usb3GDCNPortAPN_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 23),
    _F3Usb3GDCNPortAPN_Type()
)
f3Usb3GDCNPortAPN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortAPN.setStatus("current")


class _F3Usb3GDCNPortUserName_Type(DisplayString):
    """Custom type f3Usb3GDCNPortUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_F3Usb3GDCNPortUserName_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortUserName_Object = MibTableColumn
f3Usb3GDCNPortUserName = _F3Usb3GDCNPortUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 24),
    _F3Usb3GDCNPortUserName_Type()
)
f3Usb3GDCNPortUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortUserName.setStatus("current")


class _F3Usb3GDCNPortPassword_Type(DisplayString):
    """Custom type f3Usb3GDCNPortPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_F3Usb3GDCNPortPassword_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortPassword_Object = MibTableColumn
f3Usb3GDCNPortPassword = _F3Usb3GDCNPortPassword_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 25),
    _F3Usb3GDCNPortPassword_Type()
)
f3Usb3GDCNPortPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortPassword.setStatus("current")


class _F3Usb3GDCNPortDailNumber_Type(DisplayString):
    """Custom type f3Usb3GDCNPortDailNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_F3Usb3GDCNPortDailNumber_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortDailNumber_Object = MibTableColumn
f3Usb3GDCNPortDailNumber = _F3Usb3GDCNPortDailNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 26),
    _F3Usb3GDCNPortDailNumber_Type()
)
f3Usb3GDCNPortDailNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortDailNumber.setStatus("current")
_F3Usb3GDCNPortRedialTimer_Type = Integer32
_F3Usb3GDCNPortRedialTimer_Object = MibTableColumn
f3Usb3GDCNPortRedialTimer = _F3Usb3GDCNPortRedialTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 27),
    _F3Usb3GDCNPortRedialTimer_Type()
)
f3Usb3GDCNPortRedialTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortRedialTimer.setStatus("current")


class _F3Usb3GDCNPortCurrentPinCode_Type(DisplayString):
    """Custom type f3Usb3GDCNPortCurrentPinCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3Usb3GDCNPortCurrentPinCode_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortCurrentPinCode_Object = MibTableColumn
f3Usb3GDCNPortCurrentPinCode = _F3Usb3GDCNPortCurrentPinCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 28),
    _F3Usb3GDCNPortCurrentPinCode_Type()
)
f3Usb3GDCNPortCurrentPinCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortCurrentPinCode.setStatus("current")


class _F3Usb3GDCNPortNewPinCode_Type(DisplayString):
    """Custom type f3Usb3GDCNPortNewPinCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3Usb3GDCNPortNewPinCode_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortNewPinCode_Object = MibTableColumn
f3Usb3GDCNPortNewPinCode = _F3Usb3GDCNPortNewPinCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 29),
    _F3Usb3GDCNPortNewPinCode_Type()
)
f3Usb3GDCNPortNewPinCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortNewPinCode.setStatus("current")


class _F3Usb3GDCNPortConfirmPinCode_Type(DisplayString):
    """Custom type f3Usb3GDCNPortConfirmPinCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3Usb3GDCNPortConfirmPinCode_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortConfirmPinCode_Object = MibTableColumn
f3Usb3GDCNPortConfirmPinCode = _F3Usb3GDCNPortConfirmPinCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 30),
    _F3Usb3GDCNPortConfirmPinCode_Type()
)
f3Usb3GDCNPortConfirmPinCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortConfirmPinCode.setStatus("current")


class _F3Usb3GDCNPortCurrentPukCode_Type(DisplayString):
    """Custom type f3Usb3GDCNPortCurrentPukCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3Usb3GDCNPortCurrentPukCode_Type.__name__ = "DisplayString"
_F3Usb3GDCNPortCurrentPukCode_Object = MibTableColumn
f3Usb3GDCNPortCurrentPukCode = _F3Usb3GDCNPortCurrentPukCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 31),
    _F3Usb3GDCNPortCurrentPukCode_Type()
)
f3Usb3GDCNPortCurrentPukCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortCurrentPukCode.setStatus("current")
_F3Usb3GDCNPINCodeAction_Type = F3Usb3GDCNPINCodeActionType
_F3Usb3GDCNPINCodeAction_Object = MibTableColumn
f3Usb3GDCNPINCodeAction = _F3Usb3GDCNPINCodeAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 32),
    _F3Usb3GDCNPINCodeAction_Type()
)
f3Usb3GDCNPINCodeAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPINCodeAction.setStatus("current")
_F3Usb3GDCNPortStorageType_Type = StorageType
_F3Usb3GDCNPortStorageType_Object = MibTableColumn
f3Usb3GDCNPortStorageType = _F3Usb3GDCNPortStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 33),
    _F3Usb3GDCNPortStorageType_Type()
)
f3Usb3GDCNPortStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortStorageType.setStatus("current")
_F3Usb3GDCNPortRowStatus_Type = RowStatus
_F3Usb3GDCNPortRowStatus_Object = MibTableColumn
f3Usb3GDCNPortRowStatus = _F3Usb3GDCNPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 34),
    _F3Usb3GDCNPortRowStatus_Type()
)
f3Usb3GDCNPortRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortRowStatus.setStatus("current")
_F3Usb3GDCNPortIMSI_Type = DisplayString
_F3Usb3GDCNPortIMSI_Object = MibTableColumn
f3Usb3GDCNPortIMSI = _F3Usb3GDCNPortIMSI_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 35),
    _F3Usb3GDCNPortIMSI_Type()
)
f3Usb3GDCNPortIMSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortIMSI.setStatus("current")
_F3Usb3GDCNPortPINStatus_Type = G3AuthStatus
_F3Usb3GDCNPortPINStatus_Object = MibTableColumn
f3Usb3GDCNPortPINStatus = _F3Usb3GDCNPortPINStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 36),
    _F3Usb3GDCNPortPINStatus_Type()
)
f3Usb3GDCNPortPINStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortPINStatus.setStatus("current")
_F3UsbDCNPortMobileNetworkType_Type = UsbDCNMobileNetworkType
_F3UsbDCNPortMobileNetworkType_Object = MibTableColumn
f3UsbDCNPortMobileNetworkType = _F3UsbDCNPortMobileNetworkType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 37),
    _F3UsbDCNPortMobileNetworkType_Type()
)
f3UsbDCNPortMobileNetworkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbDCNPortMobileNetworkType.setStatus("current")
_F3Usb3GDCNMuxOperationalMode_Type = UsbOperationalMode
_F3Usb3GDCNMuxOperationalMode_Object = MibTableColumn
f3Usb3GDCNMuxOperationalMode = _F3Usb3GDCNMuxOperationalMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 38),
    _F3Usb3GDCNMuxOperationalMode_Type()
)
f3Usb3GDCNMuxOperationalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3Usb3GDCNMuxOperationalMode.setStatus("current")
_F3Usb3GDCNPortIpAddress_Type = IpAddress
_F3Usb3GDCNPortIpAddress_Object = MibTableColumn
f3Usb3GDCNPortIpAddress = _F3Usb3GDCNPortIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 39),
    _F3Usb3GDCNPortIpAddress_Type()
)
f3Usb3GDCNPortIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortIpAddress.setStatus("current")
_F3Usb3GDCNPortNetMask_Type = IpAddress
_F3Usb3GDCNPortNetMask_Object = MibTableColumn
f3Usb3GDCNPortNetMask = _F3Usb3GDCNPortNetMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 46, 1, 40),
    _F3Usb3GDCNPortNetMask_Type()
)
f3Usb3GDCNPortNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3Usb3GDCNPortNetMask.setStatus("current")
_OcnStmTable_Object = MibTable
ocnStmTable = _OcnStmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47)
)
if mibBuilder.loadTexts:
    ocnStmTable.setStatus("current")
_OcnStmEntry_Object = MibTableRow
ocnStmEntry = _OcnStmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1)
)
ocnStmEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ocnStmIndex"),
)
if mibBuilder.loadTexts:
    ocnStmEntry.setStatus("current")
_OcnStmIndex_Type = Integer32
_OcnStmIndex_Object = MibTableColumn
ocnStmIndex = _OcnStmIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 1),
    _OcnStmIndex_Type()
)
ocnStmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ocnStmIndex.setStatus("current")
_OcnStmIfIndex_Type = InterfaceIndex
_OcnStmIfIndex_Object = MibTableColumn
ocnStmIfIndex = _OcnStmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 2),
    _OcnStmIfIndex_Type()
)
ocnStmIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmIfIndex.setStatus("current")
_OcnStmEntityIndex_Type = PhysicalIndex
_OcnStmEntityIndex_Object = MibTableColumn
ocnStmEntityIndex = _OcnStmEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 3),
    _OcnStmEntityIndex_Type()
)
ocnStmEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmEntityIndex.setStatus("current")
_OcnStmAdminState_Type = AdminState
_OcnStmAdminState_Object = MibTableColumn
ocnStmAdminState = _OcnStmAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 4),
    _OcnStmAdminState_Type()
)
ocnStmAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmAdminState.setStatus("current")
_OcnStmOperationalState_Type = OperationalState
_OcnStmOperationalState_Object = MibTableColumn
ocnStmOperationalState = _OcnStmOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 5),
    _OcnStmOperationalState_Type()
)
ocnStmOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmOperationalState.setStatus("current")
_OcnStmSecondaryState_Type = SecondaryState
_OcnStmSecondaryState_Object = MibTableColumn
ocnStmSecondaryState = _OcnStmSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 6),
    _OcnStmSecondaryState_Type()
)
ocnStmSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSecondaryState.setStatus("current")


class _OcnStmSfpVendorName_Type(DisplayString):
    """Custom type ocnStmSfpVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_OcnStmSfpVendorName_Type.__name__ = "DisplayString"
_OcnStmSfpVendorName_Object = MibTableColumn
ocnStmSfpVendorName = _OcnStmSfpVendorName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 7),
    _OcnStmSfpVendorName_Type()
)
ocnStmSfpVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpVendorName.setStatus("current")


class _OcnStmSfpPartNumber_Type(DisplayString):
    """Custom type ocnStmSfpPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_OcnStmSfpPartNumber_Type.__name__ = "DisplayString"
_OcnStmSfpPartNumber_Object = MibTableColumn
ocnStmSfpPartNumber = _OcnStmSfpPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 8),
    _OcnStmSfpPartNumber_Type()
)
ocnStmSfpPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpPartNumber.setStatus("current")


class _OcnStmSfpSerialNumber_Type(DisplayString):
    """Custom type ocnStmSfpSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_OcnStmSfpSerialNumber_Type.__name__ = "DisplayString"
_OcnStmSfpSerialNumber_Object = MibTableColumn
ocnStmSfpSerialNumber = _OcnStmSfpSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 9),
    _OcnStmSfpSerialNumber_Type()
)
ocnStmSfpSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpSerialNumber.setStatus("current")
_OcnStmSfpDateOfManufacture_Type = DateAndTime
_OcnStmSfpDateOfManufacture_Object = MibTableColumn
ocnStmSfpDateOfManufacture = _OcnStmSfpDateOfManufacture_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 10),
    _OcnStmSfpDateOfManufacture_Type()
)
ocnStmSfpDateOfManufacture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpDateOfManufacture.setStatus("current")
_OcnStmSfpConnectorValue_Type = SfpConnectorValue
_OcnStmSfpConnectorValue_Object = MibTableColumn
ocnStmSfpConnectorValue = _OcnStmSfpConnectorValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 11),
    _OcnStmSfpConnectorValue_Type()
)
ocnStmSfpConnectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpConnectorValue.setStatus("current")
_OcnStmSfpLinkLength_Type = Integer32
_OcnStmSfpLinkLength_Object = MibTableColumn
ocnStmSfpLinkLength = _OcnStmSfpLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 12),
    _OcnStmSfpLinkLength_Type()
)
ocnStmSfpLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpLinkLength.setStatus("current")
_OcnStmSfpLaserWaveLength_Type = Integer32
_OcnStmSfpLaserWaveLength_Object = MibTableColumn
ocnStmSfpLaserWaveLength = _OcnStmSfpLaserWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 13),
    _OcnStmSfpLaserWaveLength_Type()
)
ocnStmSfpLaserWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpLaserWaveLength.setStatus("current")
_OcnStmSfpLaserWaveLengthPicometer_Type = Unsigned32
_OcnStmSfpLaserWaveLengthPicometer_Object = MibTableColumn
ocnStmSfpLaserWaveLengthPicometer = _OcnStmSfpLaserWaveLengthPicometer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 14),
    _OcnStmSfpLaserWaveLengthPicometer_Type()
)
ocnStmSfpLaserWaveLengthPicometer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpLaserWaveLengthPicometer.setStatus("current")
_OcnStmSfpMediaType_Type = SfpMediaType
_OcnStmSfpMediaType_Object = MibTableColumn
ocnStmSfpMediaType = _OcnStmSfpMediaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 15),
    _OcnStmSfpMediaType_Type()
)
ocnStmSfpMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpMediaType.setStatus("current")
_OcnStmMultiplexingStructures_Type = MultiplexingStructure
_OcnStmMultiplexingStructures_Object = MibTableColumn
ocnStmMultiplexingStructures = _OcnStmMultiplexingStructures_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 16),
    _OcnStmMultiplexingStructures_Type()
)
ocnStmMultiplexingStructures.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmMultiplexingStructures.setStatus("current")
_OcnStmEoTDMMode_Type = EoTDMMode
_OcnStmEoTDMMode_Object = MibTableColumn
ocnStmEoTDMMode = _OcnStmEoTDMMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 17),
    _OcnStmEoTDMMode_Type()
)
ocnStmEoTDMMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmEoTDMMode.setStatus("current")
_OcnStmLoopbackConfig_Type = CmLoopbackType
_OcnStmLoopbackConfig_Object = MibTableColumn
ocnStmLoopbackConfig = _OcnStmLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 18),
    _OcnStmLoopbackConfig_Type()
)
ocnStmLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmLoopbackConfig.setStatus("current")
_OcnStmLoopbackStatus_Type = CmLoopbackType
_OcnStmLoopbackStatus_Object = MibTableColumn
ocnStmLoopbackStatus = _OcnStmLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 19),
    _OcnStmLoopbackStatus_Type()
)
ocnStmLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmLoopbackStatus.setStatus("current")


class _OcnStmLoopbackTime_Type(Integer32):
    """Custom type ocnStmLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_OcnStmLoopbackTime_Type.__name__ = "Integer32"
_OcnStmLoopbackTime_Object = MibTableColumn
ocnStmLoopbackTime = _OcnStmLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 20),
    _OcnStmLoopbackTime_Type()
)
ocnStmLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmLoopbackTime.setStatus("current")
_OcnStmInsertingAIS_Type = TruthValue
_OcnStmInsertingAIS_Object = MibTableColumn
ocnStmInsertingAIS = _OcnStmInsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 21),
    _OcnStmInsertingAIS_Type()
)
ocnStmInsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmInsertingAIS.setStatus("current")
_OcnStmBerExcThreshold_Type = BitErrRate
_OcnStmBerExcThreshold_Object = MibTableColumn
ocnStmBerExcThreshold = _OcnStmBerExcThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 22),
    _OcnStmBerExcThreshold_Type()
)
ocnStmBerExcThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmBerExcThreshold.setStatus("current")
_OcnStmBerDegThreshold_Type = BitErrRate
_OcnStmBerDegThreshold_Object = MibTableColumn
ocnStmBerDegThreshold = _OcnStmBerDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 23),
    _OcnStmBerDegThreshold_Type()
)
ocnStmBerDegThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmBerDegThreshold.setStatus("current")


class _OcnStmRxTrailTrace_Type(DisplayString):
    """Custom type ocnStmRxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_OcnStmRxTrailTrace_Type.__name__ = "DisplayString"
_OcnStmRxTrailTrace_Object = MibTableColumn
ocnStmRxTrailTrace = _OcnStmRxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 24),
    _OcnStmRxTrailTrace_Type()
)
ocnStmRxTrailTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmRxTrailTrace.setStatus("current")


class _OcnStmTxTrailTrace_Type(DisplayString):
    """Custom type ocnStmTxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_OcnStmTxTrailTrace_Type.__name__ = "DisplayString"
_OcnStmTxTrailTrace_Object = MibTableColumn
ocnStmTxTrailTrace = _OcnStmTxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 25),
    _OcnStmTxTrailTrace_Type()
)
ocnStmTxTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmTxTrailTrace.setStatus("current")


class _OcnStmExpectedTrailTrace_Type(DisplayString):
    """Custom type ocnStmExpectedTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_OcnStmExpectedTrailTrace_Type.__name__ = "DisplayString"
_OcnStmExpectedTrailTrace_Object = MibTableColumn
ocnStmExpectedTrailTrace = _OcnStmExpectedTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 26),
    _OcnStmExpectedTrailTrace_Type()
)
ocnStmExpectedTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmExpectedTrailTrace.setStatus("current")
_OcnStmTrailTraceFormat_Type = TrailTraceFormat
_OcnStmTrailTraceFormat_Object = MibTableColumn
ocnStmTrailTraceFormat = _OcnStmTrailTraceFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 27),
    _OcnStmTrailTraceFormat_Type()
)
ocnStmTrailTraceFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmTrailTraceFormat.setStatus("current")
_OcnStmQLModeEnabled_Type = TruthValue
_OcnStmQLModeEnabled_Object = MibTableColumn
ocnStmQLModeEnabled = _OcnStmQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 28),
    _OcnStmQLModeEnabled_Type()
)
ocnStmQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmQLModeEnabled.setStatus("current")
_OcnStmExpectedQL_Type = SSMQualityLevel
_OcnStmExpectedQL_Object = MibTableColumn
ocnStmExpectedQL = _OcnStmExpectedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 29),
    _OcnStmExpectedQL_Type()
)
ocnStmExpectedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmExpectedQL.setStatus("current")
_OcnStmAssumedQL_Type = SSMQualityLevel
_OcnStmAssumedQL_Object = MibTableColumn
ocnStmAssumedQL = _OcnStmAssumedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 30),
    _OcnStmAssumedQL_Type()
)
ocnStmAssumedQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmAssumedQL.setStatus("current")
_OcnStmReceivedQL_Type = SSMQualityLevel
_OcnStmReceivedQL_Object = MibTableColumn
ocnStmReceivedQL = _OcnStmReceivedQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 31),
    _OcnStmReceivedQL_Type()
)
ocnStmReceivedQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmReceivedQL.setStatus("current")
_OcnStmTransmitQL_Type = SSMQualityLevel
_OcnStmTransmitQL_Object = MibTableColumn
ocnStmTransmitQL = _OcnStmTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 32),
    _OcnStmTransmitQL_Type()
)
ocnStmTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmTransmitQL.setStatus("current")
_OcnStmPortType_Type = OCNSTMPortType
_OcnStmPortType_Object = MibTableColumn
ocnStmPortType = _OcnStmPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 33),
    _OcnStmPortType_Type()
)
ocnStmPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmPortType.setStatus("current")
_OcnStmFreqSourceType_Type = TDMFrequencySourceType
_OcnStmFreqSourceType_Object = MibTableColumn
ocnStmFreqSourceType = _OcnStmFreqSourceType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 34),
    _OcnStmFreqSourceType_Type()
)
ocnStmFreqSourceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmFreqSourceType.setStatus("current")
_OcnStmHighOrderPathType_Type = TDMPathType
_OcnStmHighOrderPathType_Object = MibTableColumn
ocnStmHighOrderPathType = _OcnStmHighOrderPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 35),
    _OcnStmHighOrderPathType_Type()
)
ocnStmHighOrderPathType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocnStmHighOrderPathType.setStatus("current")


class _OcnStmSfpName_Type(DisplayString):
    """Custom type ocnStmSfpName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_OcnStmSfpName_Type.__name__ = "DisplayString"
_OcnStmSfpName_Object = MibTableColumn
ocnStmSfpName = _OcnStmSfpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 36),
    _OcnStmSfpName_Type()
)
ocnStmSfpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpName.setStatus("current")


class _OcnStmSfpHardwareRevision_Type(DisplayString):
    """Custom type ocnStmSfpHardwareRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_OcnStmSfpHardwareRevision_Type.__name__ = "DisplayString"
_OcnStmSfpHardwareRevision_Object = MibTableColumn
ocnStmSfpHardwareRevision = _OcnStmSfpHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 47, 1, 37),
    _OcnStmSfpHardwareRevision_Type()
)
ocnStmSfpHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocnStmSfpHardwareRevision.setStatus("current")
_StsVcPathTable_Object = MibTable
stsVcPathTable = _StsVcPathTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48)
)
if mibBuilder.loadTexts:
    stsVcPathTable.setStatus("current")
_StsVcPathEntry_Object = MibTableRow
stsVcPathEntry = _StsVcPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1)
)
stsVcPathEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ocnStmIndex"),
    (0, "CM-FACILITY-MIB", "stsVcPathParentIfIndex"),
    (0, "CM-FACILITY-MIB", "stsVcPathIndex"),
)
if mibBuilder.loadTexts:
    stsVcPathEntry.setStatus("current")
_StsVcPathParentIfIndex_Type = InterfaceIndex
_StsVcPathParentIfIndex_Object = MibTableColumn
stsVcPathParentIfIndex = _StsVcPathParentIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 1),
    _StsVcPathParentIfIndex_Type()
)
stsVcPathParentIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stsVcPathParentIfIndex.setStatus("current")
_StsVcPathIndex_Type = Unsigned32
_StsVcPathIndex_Object = MibTableColumn
stsVcPathIndex = _StsVcPathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 2),
    _StsVcPathIndex_Type()
)
stsVcPathIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stsVcPathIndex.setStatus("current")
_StsVcPathIfIndex_Type = InterfaceIndex
_StsVcPathIfIndex_Object = MibTableColumn
stsVcPathIfIndex = _StsVcPathIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 3),
    _StsVcPathIfIndex_Type()
)
stsVcPathIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathIfIndex.setStatus("current")
_StsVcPathAdminState_Type = AdminState
_StsVcPathAdminState_Object = MibTableColumn
stsVcPathAdminState = _StsVcPathAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 4),
    _StsVcPathAdminState_Type()
)
stsVcPathAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathAdminState.setStatus("current")
_StsVcPathOperationalState_Type = OperationalState
_StsVcPathOperationalState_Object = MibTableColumn
stsVcPathOperationalState = _StsVcPathOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 5),
    _StsVcPathOperationalState_Type()
)
stsVcPathOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathOperationalState.setStatus("current")
_StsVcPathSecondaryState_Type = SecondaryState
_StsVcPathSecondaryState_Object = MibTableColumn
stsVcPathSecondaryState = _StsVcPathSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 6),
    _StsVcPathSecondaryState_Type()
)
stsVcPathSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathSecondaryState.setStatus("current")
_StsVcPathLoopbackConfig_Type = CmLoopbackType
_StsVcPathLoopbackConfig_Object = MibTableColumn
stsVcPathLoopbackConfig = _StsVcPathLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 7),
    _StsVcPathLoopbackConfig_Type()
)
stsVcPathLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathLoopbackConfig.setStatus("current")
_StsVcPathLoopbackStatus_Type = CmLoopbackType
_StsVcPathLoopbackStatus_Object = MibTableColumn
stsVcPathLoopbackStatus = _StsVcPathLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 8),
    _StsVcPathLoopbackStatus_Type()
)
stsVcPathLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathLoopbackStatus.setStatus("current")


class _StsVcPathLoopbackTime_Type(Integer32):
    """Custom type stsVcPathLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_StsVcPathLoopbackTime_Type.__name__ = "Integer32"
_StsVcPathLoopbackTime_Object = MibTableColumn
stsVcPathLoopbackTime = _StsVcPathLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 9),
    _StsVcPathLoopbackTime_Type()
)
stsVcPathLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathLoopbackTime.setStatus("current")
_StsVcPathInsertingAIS_Type = TruthValue
_StsVcPathInsertingAIS_Object = MibTableColumn
stsVcPathInsertingAIS = _StsVcPathInsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 10),
    _StsVcPathInsertingAIS_Type()
)
stsVcPathInsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathInsertingAIS.setStatus("current")
_StsVcPathBerExcThreshold_Type = BitErrRate
_StsVcPathBerExcThreshold_Object = MibTableColumn
stsVcPathBerExcThreshold = _StsVcPathBerExcThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 11),
    _StsVcPathBerExcThreshold_Type()
)
stsVcPathBerExcThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathBerExcThreshold.setStatus("current")
_StsVcPathBerDegThreshold_Type = BitErrRate
_StsVcPathBerDegThreshold_Object = MibTableColumn
stsVcPathBerDegThreshold = _StsVcPathBerDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 12),
    _StsVcPathBerDegThreshold_Type()
)
stsVcPathBerDegThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathBerDegThreshold.setStatus("current")
_StsVcPathTrailTraceFormat_Type = TrailTraceFormat
_StsVcPathTrailTraceFormat_Object = MibTableColumn
stsVcPathTrailTraceFormat = _StsVcPathTrailTraceFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 13),
    _StsVcPathTrailTraceFormat_Type()
)
stsVcPathTrailTraceFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathTrailTraceFormat.setStatus("current")


class _StsVcPathRxTrailTrace_Type(DisplayString):
    """Custom type stsVcPathRxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StsVcPathRxTrailTrace_Type.__name__ = "DisplayString"
_StsVcPathRxTrailTrace_Object = MibTableColumn
stsVcPathRxTrailTrace = _StsVcPathRxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 14),
    _StsVcPathRxTrailTrace_Type()
)
stsVcPathRxTrailTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathRxTrailTrace.setStatus("current")


class _StsVcPathTxTrailTrace_Type(DisplayString):
    """Custom type stsVcPathTxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StsVcPathTxTrailTrace_Type.__name__ = "DisplayString"
_StsVcPathTxTrailTrace_Object = MibTableColumn
stsVcPathTxTrailTrace = _StsVcPathTxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 15),
    _StsVcPathTxTrailTrace_Type()
)
stsVcPathTxTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathTxTrailTrace.setStatus("current")


class _StsVcPathExpectedTrailTrace_Type(DisplayString):
    """Custom type stsVcPathExpectedTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StsVcPathExpectedTrailTrace_Type.__name__ = "DisplayString"
_StsVcPathExpectedTrailTrace_Object = MibTableColumn
stsVcPathExpectedTrailTrace = _StsVcPathExpectedTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 16),
    _StsVcPathExpectedTrailTrace_Type()
)
stsVcPathExpectedTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathExpectedTrailTrace.setStatus("current")


class _StsVcPathRxSignalLabel_Type(Unsigned32):
    """Custom type stsVcPathRxSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StsVcPathRxSignalLabel_Type.__name__ = "Unsigned32"
_StsVcPathRxSignalLabel_Object = MibTableColumn
stsVcPathRxSignalLabel = _StsVcPathRxSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 17),
    _StsVcPathRxSignalLabel_Type()
)
stsVcPathRxSignalLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stsVcPathRxSignalLabel.setStatus("current")


class _StsVcPathTxSignalLabel_Type(Unsigned32):
    """Custom type stsVcPathTxSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StsVcPathTxSignalLabel_Type.__name__ = "Unsigned32"
_StsVcPathTxSignalLabel_Object = MibTableColumn
stsVcPathTxSignalLabel = _StsVcPathTxSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 18),
    _StsVcPathTxSignalLabel_Type()
)
stsVcPathTxSignalLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathTxSignalLabel.setStatus("current")


class _StsVcPathExpectedSignalLabel_Type(Unsigned32):
    """Custom type stsVcPathExpectedSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StsVcPathExpectedSignalLabel_Type.__name__ = "Unsigned32"
_StsVcPathExpectedSignalLabel_Object = MibTableColumn
stsVcPathExpectedSignalLabel = _StsVcPathExpectedSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 19),
    _StsVcPathExpectedSignalLabel_Type()
)
stsVcPathExpectedSignalLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathExpectedSignalLabel.setStatus("current")
_StsVcPathRowStatus_Type = RowStatus
_StsVcPathRowStatus_Object = MibTableColumn
stsVcPathRowStatus = _StsVcPathRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 20),
    _StsVcPathRowStatus_Type()
)
stsVcPathRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stsVcPathRowStatus.setStatus("current")
_StsVcPathLowOrderPathType_Type = TDMPathType
_StsVcPathLowOrderPathType_Object = MibTableColumn
stsVcPathLowOrderPathType = _StsVcPathLowOrderPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 48, 1, 21),
    _StsVcPathLowOrderPathType_Type()
)
stsVcPathLowOrderPathType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stsVcPathLowOrderPathType.setStatus("current")
_VtVcPathTable_Object = MibTable
vtVcPathTable = _VtVcPathTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49)
)
if mibBuilder.loadTexts:
    vtVcPathTable.setStatus("current")
_VtVcPathEntry_Object = MibTableRow
vtVcPathEntry = _VtVcPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1)
)
vtVcPathEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ocnStmIndex"),
    (0, "CM-FACILITY-MIB", "vtVcPathParentIfIndex"),
    (0, "CM-FACILITY-MIB", "vtVcPathIndex"),
)
if mibBuilder.loadTexts:
    vtVcPathEntry.setStatus("current")
_VtVcPathParentIfIndex_Type = InterfaceIndex
_VtVcPathParentIfIndex_Object = MibTableColumn
vtVcPathParentIfIndex = _VtVcPathParentIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 1),
    _VtVcPathParentIfIndex_Type()
)
vtVcPathParentIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vtVcPathParentIfIndex.setStatus("current")
_VtVcPathIndex_Type = Unsigned32
_VtVcPathIndex_Object = MibTableColumn
vtVcPathIndex = _VtVcPathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 2),
    _VtVcPathIndex_Type()
)
vtVcPathIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vtVcPathIndex.setStatus("current")
_VtVcPathIfIndex_Type = InterfaceIndex
_VtVcPathIfIndex_Object = MibTableColumn
vtVcPathIfIndex = _VtVcPathIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 3),
    _VtVcPathIfIndex_Type()
)
vtVcPathIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathIfIndex.setStatus("current")
_VtVcPathAdminState_Type = AdminState
_VtVcPathAdminState_Object = MibTableColumn
vtVcPathAdminState = _VtVcPathAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 4),
    _VtVcPathAdminState_Type()
)
vtVcPathAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathAdminState.setStatus("current")
_VtVcPathOperationalState_Type = OperationalState
_VtVcPathOperationalState_Object = MibTableColumn
vtVcPathOperationalState = _VtVcPathOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 5),
    _VtVcPathOperationalState_Type()
)
vtVcPathOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathOperationalState.setStatus("current")
_VtVcPathSecondaryState_Type = SecondaryState
_VtVcPathSecondaryState_Object = MibTableColumn
vtVcPathSecondaryState = _VtVcPathSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 6),
    _VtVcPathSecondaryState_Type()
)
vtVcPathSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathSecondaryState.setStatus("current")
_VtVcPathLoopbackConfig_Type = CmLoopbackType
_VtVcPathLoopbackConfig_Object = MibTableColumn
vtVcPathLoopbackConfig = _VtVcPathLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 7),
    _VtVcPathLoopbackConfig_Type()
)
vtVcPathLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathLoopbackConfig.setStatus("current")
_VtVcPathLoopbackStatus_Type = CmLoopbackType
_VtVcPathLoopbackStatus_Object = MibTableColumn
vtVcPathLoopbackStatus = _VtVcPathLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 8),
    _VtVcPathLoopbackStatus_Type()
)
vtVcPathLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathLoopbackStatus.setStatus("current")


class _VtVcPathLoopbackTime_Type(Integer32):
    """Custom type vtVcPathLoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_VtVcPathLoopbackTime_Type.__name__ = "Integer32"
_VtVcPathLoopbackTime_Object = MibTableColumn
vtVcPathLoopbackTime = _VtVcPathLoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 9),
    _VtVcPathLoopbackTime_Type()
)
vtVcPathLoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathLoopbackTime.setStatus("current")
_VtVcPathInsertingAIS_Type = TruthValue
_VtVcPathInsertingAIS_Object = MibTableColumn
vtVcPathInsertingAIS = _VtVcPathInsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 10),
    _VtVcPathInsertingAIS_Type()
)
vtVcPathInsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathInsertingAIS.setStatus("current")
_VtVcPathBerExcThreshold_Type = BitErrRate
_VtVcPathBerExcThreshold_Object = MibTableColumn
vtVcPathBerExcThreshold = _VtVcPathBerExcThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 11),
    _VtVcPathBerExcThreshold_Type()
)
vtVcPathBerExcThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathBerExcThreshold.setStatus("current")
_VtVcPathBerDegThreshold_Type = BitErrRate
_VtVcPathBerDegThreshold_Object = MibTableColumn
vtVcPathBerDegThreshold = _VtVcPathBerDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 12),
    _VtVcPathBerDegThreshold_Type()
)
vtVcPathBerDegThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathBerDegThreshold.setStatus("current")
_VtVcPathTrailTraceFormat_Type = TrailTraceFormat
_VtVcPathTrailTraceFormat_Object = MibTableColumn
vtVcPathTrailTraceFormat = _VtVcPathTrailTraceFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 13),
    _VtVcPathTrailTraceFormat_Type()
)
vtVcPathTrailTraceFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathTrailTraceFormat.setStatus("current")


class _VtVcPathRxTrailTrace_Type(DisplayString):
    """Custom type vtVcPathRxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_VtVcPathRxTrailTrace_Type.__name__ = "DisplayString"
_VtVcPathRxTrailTrace_Object = MibTableColumn
vtVcPathRxTrailTrace = _VtVcPathRxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 14),
    _VtVcPathRxTrailTrace_Type()
)
vtVcPathRxTrailTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathRxTrailTrace.setStatus("current")


class _VtVcPathTxTrailTrace_Type(DisplayString):
    """Custom type vtVcPathTxTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_VtVcPathTxTrailTrace_Type.__name__ = "DisplayString"
_VtVcPathTxTrailTrace_Object = MibTableColumn
vtVcPathTxTrailTrace = _VtVcPathTxTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 15),
    _VtVcPathTxTrailTrace_Type()
)
vtVcPathTxTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathTxTrailTrace.setStatus("current")


class _VtVcPathExpectedTrailTrace_Type(DisplayString):
    """Custom type vtVcPathExpectedTrailTrace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_VtVcPathExpectedTrailTrace_Type.__name__ = "DisplayString"
_VtVcPathExpectedTrailTrace_Object = MibTableColumn
vtVcPathExpectedTrailTrace = _VtVcPathExpectedTrailTrace_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 16),
    _VtVcPathExpectedTrailTrace_Type()
)
vtVcPathExpectedTrailTrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathExpectedTrailTrace.setStatus("current")


class _VtVcPathRxSignalLabel_Type(Unsigned32):
    """Custom type vtVcPathRxSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VtVcPathRxSignalLabel_Type.__name__ = "Unsigned32"
_VtVcPathRxSignalLabel_Object = MibTableColumn
vtVcPathRxSignalLabel = _VtVcPathRxSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 17),
    _VtVcPathRxSignalLabel_Type()
)
vtVcPathRxSignalLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtVcPathRxSignalLabel.setStatus("current")


class _VtVcPathTxSignalLabel_Type(Unsigned32):
    """Custom type vtVcPathTxSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VtVcPathTxSignalLabel_Type.__name__ = "Unsigned32"
_VtVcPathTxSignalLabel_Object = MibTableColumn
vtVcPathTxSignalLabel = _VtVcPathTxSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 18),
    _VtVcPathTxSignalLabel_Type()
)
vtVcPathTxSignalLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathTxSignalLabel.setStatus("current")


class _VtVcPathExpectedSignalLabel_Type(Unsigned32):
    """Custom type vtVcPathExpectedSignalLabel based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VtVcPathExpectedSignalLabel_Type.__name__ = "Unsigned32"
_VtVcPathExpectedSignalLabel_Object = MibTableColumn
vtVcPathExpectedSignalLabel = _VtVcPathExpectedSignalLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 19),
    _VtVcPathExpectedSignalLabel_Type()
)
vtVcPathExpectedSignalLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vtVcPathExpectedSignalLabel.setStatus("current")
_VtVcPathRowStatus_Type = RowStatus
_VtVcPathRowStatus_Object = MibTableColumn
vtVcPathRowStatus = _VtVcPathRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 49, 1, 20),
    _VtVcPathRowStatus_Type()
)
vtVcPathRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vtVcPathRowStatus.setStatus("current")
_E1t1Table_Object = MibTable
e1t1Table = _E1t1Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50)
)
if mibBuilder.loadTexts:
    e1t1Table.setStatus("current")
_E1t1Entry_Object = MibTableRow
e1t1Entry = _E1t1Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1)
)
e1t1Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "e1t1ParentIfIndex"),
    (0, "CM-FACILITY-MIB", "e1t1Index"),
)
if mibBuilder.loadTexts:
    e1t1Entry.setStatus("current")
_E1t1ParentIfIndex_Type = InterfaceIndex
_E1t1ParentIfIndex_Object = MibTableColumn
e1t1ParentIfIndex = _E1t1ParentIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 1),
    _E1t1ParentIfIndex_Type()
)
e1t1ParentIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e1t1ParentIfIndex.setStatus("current")
_E1t1Index_Type = Unsigned32
_E1t1Index_Object = MibTableColumn
e1t1Index = _E1t1Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 2),
    _E1t1Index_Type()
)
e1t1Index.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e1t1Index.setStatus("current")
_E1t1IfIndex_Type = InterfaceIndex
_E1t1IfIndex_Object = MibTableColumn
e1t1IfIndex = _E1t1IfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 3),
    _E1t1IfIndex_Type()
)
e1t1IfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1IfIndex.setStatus("current")
_E1t1EntityIndex_Type = PhysicalIndex
_E1t1EntityIndex_Object = MibTableColumn
e1t1EntityIndex = _E1t1EntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 4),
    _E1t1EntityIndex_Type()
)
e1t1EntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1EntityIndex.setStatus("current")
_E1t1AdminState_Type = AdminState
_E1t1AdminState_Object = MibTableColumn
e1t1AdminState = _E1t1AdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 5),
    _E1t1AdminState_Type()
)
e1t1AdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1AdminState.setStatus("current")
_E1t1OperationalState_Type = OperationalState
_E1t1OperationalState_Object = MibTableColumn
e1t1OperationalState = _E1t1OperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 6),
    _E1t1OperationalState_Type()
)
e1t1OperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1OperationalState.setStatus("current")
_E1t1SecondaryState_Type = SecondaryState
_E1t1SecondaryState_Object = MibTableColumn
e1t1SecondaryState = _E1t1SecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 7),
    _E1t1SecondaryState_Type()
)
e1t1SecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1SecondaryState.setStatus("current")
_E1t1LoopbackConfig_Type = CmLoopbackType
_E1t1LoopbackConfig_Object = MibTableColumn
e1t1LoopbackConfig = _E1t1LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 8),
    _E1t1LoopbackConfig_Type()
)
e1t1LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1LoopbackConfig.setStatus("current")
_E1t1LoopbackStatus_Type = CmLoopbackType
_E1t1LoopbackStatus_Object = MibTableColumn
e1t1LoopbackStatus = _E1t1LoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 9),
    _E1t1LoopbackStatus_Type()
)
e1t1LoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1LoopbackStatus.setStatus("current")


class _E1t1LoopbackTime_Type(Integer32):
    """Custom type e1t1LoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_E1t1LoopbackTime_Type.__name__ = "Integer32"
_E1t1LoopbackTime_Object = MibTableColumn
e1t1LoopbackTime = _E1t1LoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 10),
    _E1t1LoopbackTime_Type()
)
e1t1LoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1LoopbackTime.setStatus("current")
_E1t1RemoteLoopbackRequest_Type = TruthValue
_E1t1RemoteLoopbackRequest_Object = MibTableColumn
e1t1RemoteLoopbackRequest = _E1t1RemoteLoopbackRequest_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 11),
    _E1t1RemoteLoopbackRequest_Type()
)
e1t1RemoteLoopbackRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1RemoteLoopbackRequest.setStatus("current")
_E1t1InsertingAIS_Type = TruthValue
_E1t1InsertingAIS_Object = MibTableColumn
e1t1InsertingAIS = _E1t1InsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 12),
    _E1t1InsertingAIS_Type()
)
e1t1InsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1InsertingAIS.setStatus("current")
_E1t1RowStatus_Type = RowStatus
_E1t1RowStatus_Object = MibTableColumn
e1t1RowStatus = _E1t1RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 13),
    _E1t1RowStatus_Type()
)
e1t1RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    e1t1RowStatus.setStatus("current")
_E1t1LineType_Type = E1T1LineType
_E1t1LineType_Object = MibTableColumn
e1t1LineType = _E1t1LineType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 14),
    _E1t1LineType_Type()
)
e1t1LineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1LineType.setStatus("current")
_E1t1LineCode_Type = E1T1LineCode
_E1t1LineCode_Object = MibTableColumn
e1t1LineCode = _E1t1LineCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 15),
    _E1t1LineCode_Type()
)
e1t1LineCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1LineCode.setStatus("current")
_E1t1FrameFormat_Type = E1T1FrameFormat
_E1t1FrameFormat_Object = MibTableColumn
e1t1FrameFormat = _E1t1FrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 16),
    _E1t1FrameFormat_Type()
)
e1t1FrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1FrameFormat.setStatus("current")
_E1t1LineBuildOut_Type = LineBuildOut
_E1t1LineBuildOut_Object = MibTableColumn
e1t1LineBuildOut = _E1t1LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 17),
    _E1t1LineBuildOut_Type()
)
e1t1LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1LineBuildOut.setStatus("current")
_E1t1TimingDomain_Type = VariablePointer
_E1t1TimingDomain_Object = MibTableColumn
e1t1TimingDomain = _E1t1TimingDomain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 18),
    _E1t1TimingDomain_Type()
)
e1t1TimingDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1TimingDomain.setStatus("current")
_E1t1RcvSensitivity_Type = E1T1RcvSensitivity
_E1t1RcvSensitivity_Object = MibTableColumn
e1t1RcvSensitivity = _E1t1RcvSensitivity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 19),
    _E1t1RcvSensitivity_Type()
)
e1t1RcvSensitivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1RcvSensitivity.setStatus("current")
_E1t1IdlePatternProfile_Type = VariablePointer
_E1t1IdlePatternProfile_Object = MibTableColumn
e1t1IdlePatternProfile = _E1t1IdlePatternProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 20),
    _E1t1IdlePatternProfile_Type()
)
e1t1IdlePatternProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1IdlePatternProfile.setStatus("current")
_E1t1LoopbackProfile_Type = VariablePointer
_E1t1LoopbackProfile_Object = MibTableColumn
e1t1LoopbackProfile = _E1t1LoopbackProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 21),
    _E1t1LoopbackProfile_Type()
)
e1t1LoopbackProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1LoopbackProfile.setStatus("current")
_E1t1RelatedContainerId_Type = VariablePointer
_E1t1RelatedContainerId_Object = MibTableColumn
e1t1RelatedContainerId = _E1t1RelatedContainerId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 22),
    _E1t1RelatedContainerId_Type()
)
e1t1RelatedContainerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1t1RelatedContainerId.setStatus("current")
_E1t1PatternLpbkControl_Type = TruthValue
_E1t1PatternLpbkControl_Object = MibTableColumn
e1t1PatternLpbkControl = _E1t1PatternLpbkControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 50, 1, 23),
    _E1t1PatternLpbkControl_Type()
)
e1t1PatternLpbkControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1t1PatternLpbkControl.setStatus("current")
_E3t3Table_Object = MibTable
e3t3Table = _E3t3Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51)
)
if mibBuilder.loadTexts:
    e3t3Table.setStatus("current")
_E3t3Entry_Object = MibTableRow
e3t3Entry = _E3t3Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1)
)
e3t3Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "e3t3ParentIfIndex"),
    (0, "CM-FACILITY-MIB", "e3t3Index"),
)
if mibBuilder.loadTexts:
    e3t3Entry.setStatus("current")
_E3t3ParentIfIndex_Type = InterfaceIndex
_E3t3ParentIfIndex_Object = MibTableColumn
e3t3ParentIfIndex = _E3t3ParentIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 1),
    _E3t3ParentIfIndex_Type()
)
e3t3ParentIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e3t3ParentIfIndex.setStatus("current")
_E3t3Index_Type = Unsigned32
_E3t3Index_Object = MibTableColumn
e3t3Index = _E3t3Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 2),
    _E3t3Index_Type()
)
e3t3Index.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e3t3Index.setStatus("current")
_E3t3IfIndex_Type = InterfaceIndex
_E3t3IfIndex_Object = MibTableColumn
e3t3IfIndex = _E3t3IfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 3),
    _E3t3IfIndex_Type()
)
e3t3IfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3IfIndex.setStatus("current")
_E3t3EntityIndex_Type = PhysicalIndex
_E3t3EntityIndex_Object = MibTableColumn
e3t3EntityIndex = _E3t3EntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 4),
    _E3t3EntityIndex_Type()
)
e3t3EntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3EntityIndex.setStatus("current")
_E3t3AdminState_Type = AdminState
_E3t3AdminState_Object = MibTableColumn
e3t3AdminState = _E3t3AdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 5),
    _E3t3AdminState_Type()
)
e3t3AdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3AdminState.setStatus("current")
_E3t3OperationalState_Type = OperationalState
_E3t3OperationalState_Object = MibTableColumn
e3t3OperationalState = _E3t3OperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 6),
    _E3t3OperationalState_Type()
)
e3t3OperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3OperationalState.setStatus("current")
_E3t3SecondaryState_Type = SecondaryState
_E3t3SecondaryState_Object = MibTableColumn
e3t3SecondaryState = _E3t3SecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 7),
    _E3t3SecondaryState_Type()
)
e3t3SecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3SecondaryState.setStatus("current")
_E3t3LoopbackConfig_Type = CmLoopbackType
_E3t3LoopbackConfig_Object = MibTableColumn
e3t3LoopbackConfig = _E3t3LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 8),
    _E3t3LoopbackConfig_Type()
)
e3t3LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3LoopbackConfig.setStatus("current")
_E3t3LoopbackStatus_Type = CmLoopbackType
_E3t3LoopbackStatus_Object = MibTableColumn
e3t3LoopbackStatus = _E3t3LoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 9),
    _E3t3LoopbackStatus_Type()
)
e3t3LoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3LoopbackStatus.setStatus("current")


class _E3t3LoopbackTime_Type(Integer32):
    """Custom type e3t3LoopbackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 300),
    )


_E3t3LoopbackTime_Type.__name__ = "Integer32"
_E3t3LoopbackTime_Object = MibTableColumn
e3t3LoopbackTime = _E3t3LoopbackTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 10),
    _E3t3LoopbackTime_Type()
)
e3t3LoopbackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3LoopbackTime.setStatus("current")
_E3t3RemoteLoopbackRequest_Type = TruthValue
_E3t3RemoteLoopbackRequest_Object = MibTableColumn
e3t3RemoteLoopbackRequest = _E3t3RemoteLoopbackRequest_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 11),
    _E3t3RemoteLoopbackRequest_Type()
)
e3t3RemoteLoopbackRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3RemoteLoopbackRequest.setStatus("current")
_E3t3InsertingAIS_Type = TruthValue
_E3t3InsertingAIS_Object = MibTableColumn
e3t3InsertingAIS = _E3t3InsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 12),
    _E3t3InsertingAIS_Type()
)
e3t3InsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3InsertingAIS.setStatus("current")
_E3t3CBitEnable_Type = TruthValue
_E3t3CBitEnable_Object = MibTableColumn
e3t3CBitEnable = _E3t3CBitEnable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 13),
    _E3t3CBitEnable_Type()
)
e3t3CBitEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3CBitEnable.setStatus("current")
_E3t3T3Channelized_Type = TruthValue
_E3t3T3Channelized_Object = MibTableColumn
e3t3T3Channelized = _E3t3T3Channelized_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 14),
    _E3t3T3Channelized_Type()
)
e3t3T3Channelized.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3T3Channelized.setStatus("current")
_E3t3RowStatus_Type = RowStatus
_E3t3RowStatus_Object = MibTableColumn
e3t3RowStatus = _E3t3RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 15),
    _E3t3RowStatus_Type()
)
e3t3RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    e3t3RowStatus.setStatus("current")
_E3t3FrameFormat_Type = E3T3FrameFormat
_E3t3FrameFormat_Object = MibTableColumn
e3t3FrameFormat = _E3t3FrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 16),
    _E3t3FrameFormat_Type()
)
e3t3FrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3t3FrameFormat.setStatus("current")
_E3t3RelatedContainerId_Type = VariablePointer
_E3t3RelatedContainerId_Object = MibTableColumn
e3t3RelatedContainerId = _E3t3RelatedContainerId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 51, 1, 17),
    _E3t3RelatedContainerId_Type()
)
e3t3RelatedContainerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3t3RelatedContainerId.setStatus("current")
_CmEthernetTrafficPortExtTable_Object = MibTable
cmEthernetTrafficPortExtTable = _CmEthernetTrafficPortExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortExtTable.setStatus("current")
_CmEthernetTrafficPortExtEntry_Object = MibTableRow
cmEthernetTrafficPortExtEntry = _CmEthernetTrafficPortExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortExtEntry.setStatus("current")
_CmEthernetTrafficPortTDMEncapsulation_Type = GFPEncapsulationType
_CmEthernetTrafficPortTDMEncapsulation_Object = MibTableColumn
cmEthernetTrafficPortTDMEncapsulation = _CmEthernetTrafficPortTDMEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 1),
    _CmEthernetTrafficPortTDMEncapsulation_Type()
)
cmEthernetTrafficPortTDMEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortTDMEncapsulation.setStatus("current")
_CmEthernetTrafficPortRelatedVCG_Type = VariablePointer
_CmEthernetTrafficPortRelatedVCG_Object = MibTableColumn
cmEthernetTrafficPortRelatedVCG = _CmEthernetTrafficPortRelatedVCG_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 2),
    _CmEthernetTrafficPortRelatedVCG_Type()
)
cmEthernetTrafficPortRelatedVCG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRelatedVCG.setStatus("current")
_CmEthernetTrafficPortMcastRateLimitEnabled_Type = TruthValue
_CmEthernetTrafficPortMcastRateLimitEnabled_Object = MibTableColumn
cmEthernetTrafficPortMcastRateLimitEnabled = _CmEthernetTrafficPortMcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 3),
    _CmEthernetTrafficPortMcastRateLimitEnabled_Type()
)
cmEthernetTrafficPortMcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMcastRateLimitEnabled.setStatus("current")
_CmEthernetTrafficPortMcastRateLimitSpeedLo_Type = Unsigned32
_CmEthernetTrafficPortMcastRateLimitSpeedLo_Object = MibTableColumn
cmEthernetTrafficPortMcastRateLimitSpeedLo = _CmEthernetTrafficPortMcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 4),
    _CmEthernetTrafficPortMcastRateLimitSpeedLo_Type()
)
cmEthernetTrafficPortMcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMcastRateLimitSpeedLo.setStatus("current")
_CmEthernetTrafficPortMcastRateLimitSpeedHi_Type = Unsigned32
_CmEthernetTrafficPortMcastRateLimitSpeedHi_Object = MibTableColumn
cmEthernetTrafficPortMcastRateLimitSpeedHi = _CmEthernetTrafficPortMcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 5),
    _CmEthernetTrafficPortMcastRateLimitSpeedHi_Type()
)
cmEthernetTrafficPortMcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortMcastRateLimitSpeedHi.setStatus("current")
_CmEthernetTrafficPortBcastRateLimitEnabled_Type = TruthValue
_CmEthernetTrafficPortBcastRateLimitEnabled_Object = MibTableColumn
cmEthernetTrafficPortBcastRateLimitEnabled = _CmEthernetTrafficPortBcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 6),
    _CmEthernetTrafficPortBcastRateLimitEnabled_Type()
)
cmEthernetTrafficPortBcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortBcastRateLimitEnabled.setStatus("current")
_CmEthernetTrafficPortBcastRateLimitSpeedLo_Type = Unsigned32
_CmEthernetTrafficPortBcastRateLimitSpeedLo_Object = MibTableColumn
cmEthernetTrafficPortBcastRateLimitSpeedLo = _CmEthernetTrafficPortBcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 7),
    _CmEthernetTrafficPortBcastRateLimitSpeedLo_Type()
)
cmEthernetTrafficPortBcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortBcastRateLimitSpeedLo.setStatus("current")
_CmEthernetTrafficPortBcastRateLimitSpeedHi_Type = Unsigned32
_CmEthernetTrafficPortBcastRateLimitSpeedHi_Object = MibTableColumn
cmEthernetTrafficPortBcastRateLimitSpeedHi = _CmEthernetTrafficPortBcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 8),
    _CmEthernetTrafficPortBcastRateLimitSpeedHi_Type()
)
cmEthernetTrafficPortBcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortBcastRateLimitSpeedHi.setStatus("current")
_CmEthernetTrafficPortCombinedRateLimitEnabled_Type = TruthValue
_CmEthernetTrafficPortCombinedRateLimitEnabled_Object = MibTableColumn
cmEthernetTrafficPortCombinedRateLimitEnabled = _CmEthernetTrafficPortCombinedRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 9),
    _CmEthernetTrafficPortCombinedRateLimitEnabled_Type()
)
cmEthernetTrafficPortCombinedRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCombinedRateLimitEnabled.setStatus("current")
_CmEthernetTrafficPortCombinedRateLimitSpeedLo_Type = Unsigned32
_CmEthernetTrafficPortCombinedRateLimitSpeedLo_Object = MibTableColumn
cmEthernetTrafficPortCombinedRateLimitSpeedLo = _CmEthernetTrafficPortCombinedRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 10),
    _CmEthernetTrafficPortCombinedRateLimitSpeedLo_Type()
)
cmEthernetTrafficPortCombinedRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCombinedRateLimitSpeedLo.setStatus("current")
_CmEthernetTrafficPortCombinedRateLimitSpeedHi_Type = Unsigned32
_CmEthernetTrafficPortCombinedRateLimitSpeedHi_Object = MibTableColumn
cmEthernetTrafficPortCombinedRateLimitSpeedHi = _CmEthernetTrafficPortCombinedRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 11),
    _CmEthernetTrafficPortCombinedRateLimitSpeedHi_Type()
)
cmEthernetTrafficPortCombinedRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCombinedRateLimitSpeedHi.setStatus("current")
_CmEthernetTrafficPortRefPrioMapProfile_Type = VariablePointer
_CmEthernetTrafficPortRefPrioMapProfile_Object = MibTableColumn
cmEthernetTrafficPortRefPrioMapProfile = _CmEthernetTrafficPortRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 52, 1, 12),
    _CmEthernetTrafficPortRefPrioMapProfile_Type()
)
cmEthernetTrafficPortRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortRefPrioMapProfile.setStatus("current")
_F3PulsePerSecondPortTable_Object = MibTable
f3PulsePerSecondPortTable = _F3PulsePerSecondPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53)
)
if mibBuilder.loadTexts:
    f3PulsePerSecondPortTable.setStatus("current")
_F3PulsePerSecondPortEntry_Object = MibTableRow
f3PulsePerSecondPortEntry = _F3PulsePerSecondPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1)
)
f3PulsePerSecondPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3PulsePerSecondPortIndex"),
)
if mibBuilder.loadTexts:
    f3PulsePerSecondPortEntry.setStatus("current")


class _F3PulsePerSecondPortIndex_Type(Integer32):
    """Custom type f3PulsePerSecondPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3PulsePerSecondPortIndex_Type.__name__ = "Integer32"
_F3PulsePerSecondPortIndex_Object = MibTableColumn
f3PulsePerSecondPortIndex = _F3PulsePerSecondPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 1),
    _F3PulsePerSecondPortIndex_Type()
)
f3PulsePerSecondPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortIndex.setStatus("current")
_F3PulsePerSecondPortIfIndex_Type = InterfaceIndex
_F3PulsePerSecondPortIfIndex_Object = MibTableColumn
f3PulsePerSecondPortIfIndex = _F3PulsePerSecondPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 2),
    _F3PulsePerSecondPortIfIndex_Type()
)
f3PulsePerSecondPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortIfIndex.setStatus("current")
_F3PulsePerSecondPortEntityIndex_Type = PhysicalIndex
_F3PulsePerSecondPortEntityIndex_Object = MibTableColumn
f3PulsePerSecondPortEntityIndex = _F3PulsePerSecondPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 3),
    _F3PulsePerSecondPortEntityIndex_Type()
)
f3PulsePerSecondPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortEntityIndex.setStatus("current")
_F3PulsePerSecondPortAdminState_Type = AdminState
_F3PulsePerSecondPortAdminState_Object = MibTableColumn
f3PulsePerSecondPortAdminState = _F3PulsePerSecondPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 4),
    _F3PulsePerSecondPortAdminState_Type()
)
f3PulsePerSecondPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortAdminState.setStatus("current")
_F3PulsePerSecondPortOperationalState_Type = OperationalState
_F3PulsePerSecondPortOperationalState_Object = MibTableColumn
f3PulsePerSecondPortOperationalState = _F3PulsePerSecondPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 5),
    _F3PulsePerSecondPortOperationalState_Type()
)
f3PulsePerSecondPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortOperationalState.setStatus("current")
_F3PulsePerSecondPortSecondaryState_Type = SecondaryState
_F3PulsePerSecondPortSecondaryState_Object = MibTableColumn
f3PulsePerSecondPortSecondaryState = _F3PulsePerSecondPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 6),
    _F3PulsePerSecondPortSecondaryState_Type()
)
f3PulsePerSecondPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortSecondaryState.setStatus("current")
_F3PulsePerSecondPortSquelchControl_Type = SquelchControl
_F3PulsePerSecondPortSquelchControl_Object = MibTableColumn
f3PulsePerSecondPortSquelchControl = _F3PulsePerSecondPortSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 7),
    _F3PulsePerSecondPortSquelchControl_Type()
)
f3PulsePerSecondPortSquelchControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortSquelchControl.setStatus("current")
_F3PulsePerSecondPortSquelchQL_Type = SSMQualityLevel
_F3PulsePerSecondPortSquelchQL_Object = MibTableColumn
f3PulsePerSecondPortSquelchQL = _F3PulsePerSecondPortSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 8),
    _F3PulsePerSecondPortSquelchQL_Type()
)
f3PulsePerSecondPortSquelchQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortSquelchQL.setStatus("current")
_F3PulsePerSecondPortTODSource_Type = VariablePointer
_F3PulsePerSecondPortTODSource_Object = MibTableColumn
f3PulsePerSecondPortTODSource = _F3PulsePerSecondPortTODSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 9),
    _F3PulsePerSecondPortTODSource_Type()
)
f3PulsePerSecondPortTODSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortTODSource.setStatus("current")
_F3PulsePerSecondPortDirection_Type = SignalDirectionType
_F3PulsePerSecondPortDirection_Object = MibTableColumn
f3PulsePerSecondPortDirection = _F3PulsePerSecondPortDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 10),
    _F3PulsePerSecondPortDirection_Type()
)
f3PulsePerSecondPortDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortDirection.setStatus("current")
_F3PulsePerSecondPortInputRate_Type = PPSInputRate
_F3PulsePerSecondPortInputRate_Object = MibTableColumn
f3PulsePerSecondPortInputRate = _F3PulsePerSecondPortInputRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 11),
    _F3PulsePerSecondPortInputRate_Type()
)
f3PulsePerSecondPortInputRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortInputRate.setStatus("current")


class _F3PulsePerSecondPortDelayCompensation_Type(Integer32):
    """Custom type f3PulsePerSecondPortDelayCompensation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-5000000, 5000000),
    )


_F3PulsePerSecondPortDelayCompensation_Type.__name__ = "Integer32"
_F3PulsePerSecondPortDelayCompensation_Object = MibTableColumn
f3PulsePerSecondPortDelayCompensation = _F3PulsePerSecondPortDelayCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 12),
    _F3PulsePerSecondPortDelayCompensation_Type()
)
f3PulsePerSecondPortDelayCompensation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortDelayCompensation.setStatus("current")
_F3PulsePerSecondPortClockClass_Type = Unsigned32
_F3PulsePerSecondPortClockClass_Object = MibTableColumn
f3PulsePerSecondPortClockClass = _F3PulsePerSecondPortClockClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 13),
    _F3PulsePerSecondPortClockClass_Type()
)
f3PulsePerSecondPortClockClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortClockClass.setStatus("deprecated")
_F3PulsePerSecondPortClockAccuracy_Type = Unsigned32
_F3PulsePerSecondPortClockAccuracy_Object = MibTableColumn
f3PulsePerSecondPortClockAccuracy = _F3PulsePerSecondPortClockAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 14),
    _F3PulsePerSecondPortClockAccuracy_Type()
)
f3PulsePerSecondPortClockAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortClockAccuracy.setStatus("deprecated")
_F3PulsePerSecondPortTimeSource_Type = TimeSource
_F3PulsePerSecondPortTimeSource_Object = MibTableColumn
f3PulsePerSecondPortTimeSource = _F3PulsePerSecondPortTimeSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 15),
    _F3PulsePerSecondPortTimeSource_Type()
)
f3PulsePerSecondPortTimeSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortTimeSource.setStatus("deprecated")
_F3PulsePerSecondPortPhyInterfaceType_Type = PPSPhyInterfaceType
_F3PulsePerSecondPortPhyInterfaceType_Object = MibTableColumn
f3PulsePerSecondPortPhyInterfaceType = _F3PulsePerSecondPortPhyInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 16),
    _F3PulsePerSecondPortPhyInterfaceType_Type()
)
f3PulsePerSecondPortPhyInterfaceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortPhyInterfaceType.setStatus("current")


class _F3PulsePerSecondPortOutputDelay_Type(Unsigned32):
    """Custom type f3PulsePerSecondPortOutputDelay based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999999999),
    )


_F3PulsePerSecondPortOutputDelay_Type.__name__ = "Unsigned32"
_F3PulsePerSecondPortOutputDelay_Object = MibTableColumn
f3PulsePerSecondPortOutputDelay = _F3PulsePerSecondPortOutputDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 17),
    _F3PulsePerSecondPortOutputDelay_Type()
)
f3PulsePerSecondPortOutputDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortOutputDelay.setStatus("current")


class _F3PulsePerSecondPortWidth_Type(Unsigned32):
    """Custom type f3PulsePerSecondPortWidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 250000),
    )


_F3PulsePerSecondPortWidth_Type.__name__ = "Unsigned32"
_F3PulsePerSecondPortWidth_Object = MibTableColumn
f3PulsePerSecondPortWidth = _F3PulsePerSecondPortWidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 18),
    _F3PulsePerSecondPortWidth_Type()
)
f3PulsePerSecondPortWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortWidth.setStatus("current")
_F3PulsePerSecondPortPolarity_Type = PpsPolarity
_F3PulsePerSecondPortPolarity_Object = MibTableColumn
f3PulsePerSecondPortPolarity = _F3PulsePerSecondPortPolarity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 19),
    _F3PulsePerSecondPortPolarity_Type()
)
f3PulsePerSecondPortPolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortPolarity.setStatus("current")
_F3PulsePerSecondPortImpedance_Type = PpsPortImpedanceMode
_F3PulsePerSecondPortImpedance_Object = MibTableColumn
f3PulsePerSecondPortImpedance = _F3PulsePerSecondPortImpedance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 20),
    _F3PulsePerSecondPortImpedance_Type()
)
f3PulsePerSecondPortImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortImpedance.setStatus("current")


class _F3PulsePerSecondPortAlias_Type(DisplayString):
    """Custom type f3PulsePerSecondPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3PulsePerSecondPortAlias_Type.__name__ = "DisplayString"
_F3PulsePerSecondPortAlias_Object = MibTableColumn
f3PulsePerSecondPortAlias = _F3PulsePerSecondPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 21),
    _F3PulsePerSecondPortAlias_Type()
)
f3PulsePerSecondPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortAlias.setStatus("current")


class _F3PulsePerSecondPortAssumedClockClass_Type(Unsigned32):
    """Custom type f3PulsePerSecondPortAssumedClockClass based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_F3PulsePerSecondPortAssumedClockClass_Type.__name__ = "Unsigned32"
_F3PulsePerSecondPortAssumedClockClass_Object = MibTableColumn
f3PulsePerSecondPortAssumedClockClass = _F3PulsePerSecondPortAssumedClockClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 53, 1, 22),
    _F3PulsePerSecondPortAssumedClockClass_Type()
)
f3PulsePerSecondPortAssumedClockClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PulsePerSecondPortAssumedClockClass.setStatus("current")
_F3TimeOfDayPortTable_Object = MibTable
f3TimeOfDayPortTable = _F3TimeOfDayPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55)
)
if mibBuilder.loadTexts:
    f3TimeOfDayPortTable.setStatus("current")
_F3TimeOfDayPortEntry_Object = MibTableRow
f3TimeOfDayPortEntry = _F3TimeOfDayPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1)
)
f3TimeOfDayPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3TimeOfDayPortIndex"),
)
if mibBuilder.loadTexts:
    f3TimeOfDayPortEntry.setStatus("current")


class _F3TimeOfDayPortIndex_Type(Integer32):
    """Custom type f3TimeOfDayPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3TimeOfDayPortIndex_Type.__name__ = "Integer32"
_F3TimeOfDayPortIndex_Object = MibTableColumn
f3TimeOfDayPortIndex = _F3TimeOfDayPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 1),
    _F3TimeOfDayPortIndex_Type()
)
f3TimeOfDayPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3TimeOfDayPortIndex.setStatus("current")
_F3TimeOfDayPortIfIndex_Type = InterfaceIndex
_F3TimeOfDayPortIfIndex_Object = MibTableColumn
f3TimeOfDayPortIfIndex = _F3TimeOfDayPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 2),
    _F3TimeOfDayPortIfIndex_Type()
)
f3TimeOfDayPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3TimeOfDayPortIfIndex.setStatus("current")
_F3TimeOfDayPortEntityIndex_Type = PhysicalIndex
_F3TimeOfDayPortEntityIndex_Object = MibTableColumn
f3TimeOfDayPortEntityIndex = _F3TimeOfDayPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 3),
    _F3TimeOfDayPortEntityIndex_Type()
)
f3TimeOfDayPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3TimeOfDayPortEntityIndex.setStatus("current")
_F3TimeOfDayPortAdminState_Type = AdminState
_F3TimeOfDayPortAdminState_Object = MibTableColumn
f3TimeOfDayPortAdminState = _F3TimeOfDayPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 4),
    _F3TimeOfDayPortAdminState_Type()
)
f3TimeOfDayPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortAdminState.setStatus("current")
_F3TimeOfDayPortOperationalState_Type = OperationalState
_F3TimeOfDayPortOperationalState_Object = MibTableColumn
f3TimeOfDayPortOperationalState = _F3TimeOfDayPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 5),
    _F3TimeOfDayPortOperationalState_Type()
)
f3TimeOfDayPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3TimeOfDayPortOperationalState.setStatus("current")
_F3TimeOfDayPortSecondaryState_Type = SecondaryState
_F3TimeOfDayPortSecondaryState_Object = MibTableColumn
f3TimeOfDayPortSecondaryState = _F3TimeOfDayPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 6),
    _F3TimeOfDayPortSecondaryState_Type()
)
f3TimeOfDayPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3TimeOfDayPortSecondaryState.setStatus("current")
_F3TimeOfDayPortSquelchControl_Type = SquelchControl
_F3TimeOfDayPortSquelchControl_Object = MibTableColumn
f3TimeOfDayPortSquelchControl = _F3TimeOfDayPortSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 7),
    _F3TimeOfDayPortSquelchControl_Type()
)
f3TimeOfDayPortSquelchControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortSquelchControl.setStatus("current")
_F3TimeOfDayPortSquelchQL_Type = SSMQualityLevel
_F3TimeOfDayPortSquelchQL_Object = MibTableColumn
f3TimeOfDayPortSquelchQL = _F3TimeOfDayPortSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 8),
    _F3TimeOfDayPortSquelchQL_Type()
)
f3TimeOfDayPortSquelchQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortSquelchQL.setStatus("current")
_F3TimeOfDayPortTODSource_Type = VariablePointer
_F3TimeOfDayPortTODSource_Object = MibTableColumn
f3TimeOfDayPortTODSource = _F3TimeOfDayPortTODSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 9),
    _F3TimeOfDayPortTODSource_Type()
)
f3TimeOfDayPortTODSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortTODSource.setStatus("current")
_F3TimeOfDayPortOutputFormat_Type = TODOutputFormat
_F3TimeOfDayPortOutputFormat_Object = MibTableColumn
f3TimeOfDayPortOutputFormat = _F3TimeOfDayPortOutputFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 10),
    _F3TimeOfDayPortOutputFormat_Type()
)
f3TimeOfDayPortOutputFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortOutputFormat.setStatus("current")
_F3TimeOfDayPortSignalDirection_Type = SignalDirectionType
_F3TimeOfDayPortSignalDirection_Object = MibTableColumn
f3TimeOfDayPortSignalDirection = _F3TimeOfDayPortSignalDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 11),
    _F3TimeOfDayPortSignalDirection_Type()
)
f3TimeOfDayPortSignalDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortSignalDirection.setStatus("current")
_F3TimeOfDayPortInputRate_Type = PPSInputRate
_F3TimeOfDayPortInputRate_Object = MibTableColumn
f3TimeOfDayPortInputRate = _F3TimeOfDayPortInputRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 12),
    _F3TimeOfDayPortInputRate_Type()
)
f3TimeOfDayPortInputRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortInputRate.setStatus("current")


class _F3TimeOfDayPortDelayCompensation_Type(Integer32):
    """Custom type f3TimeOfDayPortDelayCompensation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-5000000, 5000000),
    )


_F3TimeOfDayPortDelayCompensation_Type.__name__ = "Integer32"
_F3TimeOfDayPortDelayCompensation_Object = MibTableColumn
f3TimeOfDayPortDelayCompensation = _F3TimeOfDayPortDelayCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 13),
    _F3TimeOfDayPortDelayCompensation_Type()
)
f3TimeOfDayPortDelayCompensation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortDelayCompensation.setStatus("current")


class _F3TimeOfDayPortAlias_Type(DisplayString):
    """Custom type f3TimeOfDayPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3TimeOfDayPortAlias_Type.__name__ = "DisplayString"
_F3TimeOfDayPortAlias_Object = MibTableColumn
f3TimeOfDayPortAlias = _F3TimeOfDayPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 14),
    _F3TimeOfDayPortAlias_Type()
)
f3TimeOfDayPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3TimeOfDayPortAlias.setStatus("current")


class _F3TimeOfDayPortAssumedClockClass_Type(Unsigned32):
    """Custom type f3TimeOfDayPortAssumedClockClass based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_F3TimeOfDayPortAssumedClockClass_Type.__name__ = "Unsigned32"
_F3TimeOfDayPortAssumedClockClass_Object = MibTableColumn
f3TimeOfDayPortAssumedClockClass = _F3TimeOfDayPortAssumedClockClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 55, 1, 15),
    _F3TimeOfDayPortAssumedClockClass_Type()
)
f3TimeOfDayPortAssumedClockClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3TimeOfDayPortAssumedClockClass.setStatus("current")
_CmEthernetNetPortExtTable_Object = MibTable
cmEthernetNetPortExtTable = _CmEthernetNetPortExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 56)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortExtTable.setStatus("current")
_CmEthernetNetPortExtEntry_Object = MibTableRow
cmEthernetNetPortExtEntry = _CmEthernetNetPortExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 56, 1)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortExtEntry.setStatus("current")
_CmEthernetNetPortTDMEncapsulation_Type = GFPEncapsulationType
_CmEthernetNetPortTDMEncapsulation_Object = MibTableColumn
cmEthernetNetPortTDMEncapsulation = _CmEthernetNetPortTDMEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 56, 1, 1),
    _CmEthernetNetPortTDMEncapsulation_Type()
)
cmEthernetNetPortTDMEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortTDMEncapsulation.setStatus("current")
_CmEthernetNetPortAssociatedTdmEntity_Type = VariablePointer
_CmEthernetNetPortAssociatedTdmEntity_Object = MibTableColumn
cmEthernetNetPortAssociatedTdmEntity = _CmEthernetNetPortAssociatedTdmEntity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 56, 1, 2),
    _CmEthernetNetPortAssociatedTdmEntity_Type()
)
cmEthernetNetPortAssociatedTdmEntity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortAssociatedTdmEntity.setStatus("current")
_CmEthernetNetPortInsertingAIS_Type = TruthValue
_CmEthernetNetPortInsertingAIS_Object = MibTableColumn
cmEthernetNetPortInsertingAIS = _CmEthernetNetPortInsertingAIS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 56, 1, 3),
    _CmEthernetNetPortInsertingAIS_Type()
)
cmEthernetNetPortInsertingAIS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortInsertingAIS.setStatus("current")
_F3GPSReceiverPortTable_Object = MibTable
f3GPSReceiverPortTable = _F3GPSReceiverPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57)
)
if mibBuilder.loadTexts:
    f3GPSReceiverPortTable.setStatus("current")
_F3GPSReceiverPortEntry_Object = MibTableRow
f3GPSReceiverPortEntry = _F3GPSReceiverPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1)
)
f3GPSReceiverPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3GPSReceiverPortIndex"),
)
if mibBuilder.loadTexts:
    f3GPSReceiverPortEntry.setStatus("current")


class _F3GPSReceiverPortIndex_Type(Integer32):
    """Custom type f3GPSReceiverPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3GPSReceiverPortIndex_Type.__name__ = "Integer32"
_F3GPSReceiverPortIndex_Object = MibTableColumn
f3GPSReceiverPortIndex = _F3GPSReceiverPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 1),
    _F3GPSReceiverPortIndex_Type()
)
f3GPSReceiverPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3GPSReceiverPortIndex.setStatus("current")
_F3GPSReceiverPortIfIndex_Type = InterfaceIndex
_F3GPSReceiverPortIfIndex_Object = MibTableColumn
f3GPSReceiverPortIfIndex = _F3GPSReceiverPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 2),
    _F3GPSReceiverPortIfIndex_Type()
)
f3GPSReceiverPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortIfIndex.setStatus("current")
_F3GPSReceiverPortEntityIndex_Type = PhysicalIndex
_F3GPSReceiverPortEntityIndex_Object = MibTableColumn
f3GPSReceiverPortEntityIndex = _F3GPSReceiverPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 3),
    _F3GPSReceiverPortEntityIndex_Type()
)
f3GPSReceiverPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortEntityIndex.setStatus("current")
_F3GPSReceiverPortAdminState_Type = AdminState
_F3GPSReceiverPortAdminState_Object = MibTableColumn
f3GPSReceiverPortAdminState = _F3GPSReceiverPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 4),
    _F3GPSReceiverPortAdminState_Type()
)
f3GPSReceiverPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAdminState.setStatus("current")
_F3GPSReceiverPortOperationalState_Type = OperationalState
_F3GPSReceiverPortOperationalState_Object = MibTableColumn
f3GPSReceiverPortOperationalState = _F3GPSReceiverPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 5),
    _F3GPSReceiverPortOperationalState_Type()
)
f3GPSReceiverPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortOperationalState.setStatus("current")
_F3GPSReceiverPortSecondaryState_Type = SecondaryState
_F3GPSReceiverPortSecondaryState_Object = MibTableColumn
f3GPSReceiverPortSecondaryState = _F3GPSReceiverPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 6),
    _F3GPSReceiverPortSecondaryState_Type()
)
f3GPSReceiverPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSecondaryState.setStatus("current")
_F3GPSReceiverPortPPSGenCondition_Type = PPSGenCondition
_F3GPSReceiverPortPPSGenCondition_Object = MibTableColumn
f3GPSReceiverPortPPSGenCondition = _F3GPSReceiverPortPPSGenCondition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 7),
    _F3GPSReceiverPortPPSGenCondition_Type()
)
f3GPSReceiverPortPPSGenCondition.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortPPSGenCondition.setStatus("current")
_F3GPSReceiverPortAntennaCableLength_Type = Unsigned32
_F3GPSReceiverPortAntennaCableLength_Object = MibTableColumn
f3GPSReceiverPortAntennaCableLength = _F3GPSReceiverPortAntennaCableLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 8),
    _F3GPSReceiverPortAntennaCableLength_Type()
)
f3GPSReceiverPortAntennaCableLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAntennaCableLength.setStatus("deprecated")
_F3GPSReceiverPortAntennaStatus_Type = GPSAntennaStatus
_F3GPSReceiverPortAntennaStatus_Object = MibTableColumn
f3GPSReceiverPortAntennaStatus = _F3GPSReceiverPortAntennaStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 9),
    _F3GPSReceiverPortAntennaStatus_Type()
)
f3GPSReceiverPortAntennaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAntennaStatus.setStatus("current")
_F3GPSReceiverPortSatellitesUsableFlag_Type = TruthValue
_F3GPSReceiverPortSatellitesUsableFlag_Object = MibTableColumn
f3GPSReceiverPortSatellitesUsableFlag = _F3GPSReceiverPortSatellitesUsableFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 10),
    _F3GPSReceiverPortSatellitesUsableFlag_Type()
)
f3GPSReceiverPortSatellitesUsableFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSatellitesUsableFlag.setStatus("current")
_F3GPSReceiverPortNumTrackingSatellites_Type = Unsigned32
_F3GPSReceiverPortNumTrackingSatellites_Object = MibTableColumn
f3GPSReceiverPortNumTrackingSatellites = _F3GPSReceiverPortNumTrackingSatellites_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 11),
    _F3GPSReceiverPortNumTrackingSatellites_Type()
)
f3GPSReceiverPortNumTrackingSatellites.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortNumTrackingSatellites.setStatus("current")
_F3GPSReceiverPortSelfSurveyProgress_Type = Unsigned32
_F3GPSReceiverPortSelfSurveyProgress_Object = MibTableColumn
f3GPSReceiverPortSelfSurveyProgress = _F3GPSReceiverPortSelfSurveyProgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 12),
    _F3GPSReceiverPortSelfSurveyProgress_Type()
)
f3GPSReceiverPortSelfSurveyProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSelfSurveyProgress.setStatus("current")
_F3GPSReceiverPortPPSGeneratedFlag_Type = TruthValue
_F3GPSReceiverPortPPSGeneratedFlag_Object = MibTableColumn
f3GPSReceiverPortPPSGeneratedFlag = _F3GPSReceiverPortPPSGeneratedFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 13),
    _F3GPSReceiverPortPPSGeneratedFlag_Type()
)
f3GPSReceiverPortPPSGeneratedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortPPSGeneratedFlag.setStatus("current")
_F3GPSReceiverPortGnssSystem_Type = ConstellationType
_F3GPSReceiverPortGnssSystem_Object = MibTableColumn
f3GPSReceiverPortGnssSystem = _F3GPSReceiverPortGnssSystem_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 14),
    _F3GPSReceiverPortGnssSystem_Type()
)
f3GPSReceiverPortGnssSystem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortGnssSystem.setStatus("deprecated")
_F3GPSReceiverPortInstallationType_Type = InstallationType
_F3GPSReceiverPortInstallationType_Object = MibTableColumn
f3GPSReceiverPortInstallationType = _F3GPSReceiverPortInstallationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 15),
    _F3GPSReceiverPortInstallationType_Type()
)
f3GPSReceiverPortInstallationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortInstallationType.setStatus("current")
_F3GPSReceiverPortGnssTOD_Type = DateAndTime
_F3GPSReceiverPortGnssTOD_Object = MibTableColumn
f3GPSReceiverPortGnssTOD = _F3GPSReceiverPortGnssTOD_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 16),
    _F3GPSReceiverPortGnssTOD_Type()
)
f3GPSReceiverPortGnssTOD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortGnssTOD.setStatus("current")
_F3GPSReceiverPortGnssSystemsBitMap_Type = ConstellationTypesBitMap
_F3GPSReceiverPortGnssSystemsBitMap_Object = MibTableColumn
f3GPSReceiverPortGnssSystemsBitMap = _F3GPSReceiverPortGnssSystemsBitMap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 17),
    _F3GPSReceiverPortGnssSystemsBitMap_Type()
)
f3GPSReceiverPortGnssSystemsBitMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortGnssSystemsBitMap.setStatus("current")


class _F3GPSReceiverPortAlias_Type(DisplayString):
    """Custom type f3GPSReceiverPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3GPSReceiverPortAlias_Type.__name__ = "DisplayString"
_F3GPSReceiverPortAlias_Object = MibTableColumn
f3GPSReceiverPortAlias = _F3GPSReceiverPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 18),
    _F3GPSReceiverPortAlias_Type()
)
f3GPSReceiverPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAlias.setStatus("current")
_F3GPSReceiverPortAntennaDelayValue_Type = Integer32
_F3GPSReceiverPortAntennaDelayValue_Object = MibTableColumn
f3GPSReceiverPortAntennaDelayValue = _F3GPSReceiverPortAntennaDelayValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 19),
    _F3GPSReceiverPortAntennaDelayValue_Type()
)
f3GPSReceiverPortAntennaDelayValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAntennaDelayValue.setStatus("current")
_F3GPSReceiverPortAntennaDelayType_Type = DelayOption
_F3GPSReceiverPortAntennaDelayType_Object = MibTableColumn
f3GPSReceiverPortAntennaDelayType = _F3GPSReceiverPortAntennaDelayType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 20),
    _F3GPSReceiverPortAntennaDelayType_Type()
)
f3GPSReceiverPortAntennaDelayType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAntennaDelayType.setStatus("current")


class _F3GPSReceiverPortCNOMask_Type(Unsigned32):
    """Custom type f3GPSReceiverPortCNOMask based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 55),
    )


_F3GPSReceiverPortCNOMask_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortCNOMask_Object = MibTableColumn
f3GPSReceiverPortCNOMask = _F3GPSReceiverPortCNOMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 21),
    _F3GPSReceiverPortCNOMask_Type()
)
f3GPSReceiverPortCNOMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortCNOMask.setStatus("current")


class _F3GPSReceiverPortElevationMask_Type(Unsigned32):
    """Custom type f3GPSReceiverPortElevationMask based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90),
    )


_F3GPSReceiverPortElevationMask_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortElevationMask_Object = MibTableColumn
f3GPSReceiverPortElevationMask = _F3GPSReceiverPortElevationMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 22),
    _F3GPSReceiverPortElevationMask_Type()
)
f3GPSReceiverPortElevationMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortElevationMask.setStatus("current")


class _F3GPSReceiverPortCoordinateLatitude_Type(DisplayString):
    """Custom type f3GPSReceiverPortCoordinateLatitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_F3GPSReceiverPortCoordinateLatitude_Type.__name__ = "DisplayString"
_F3GPSReceiverPortCoordinateLatitude_Object = MibTableColumn
f3GPSReceiverPortCoordinateLatitude = _F3GPSReceiverPortCoordinateLatitude_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 23),
    _F3GPSReceiverPortCoordinateLatitude_Type()
)
f3GPSReceiverPortCoordinateLatitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortCoordinateLatitude.setStatus("current")


class _F3GPSReceiverPortCoordinateLongitude_Type(DisplayString):
    """Custom type f3GPSReceiverPortCoordinateLongitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_F3GPSReceiverPortCoordinateLongitude_Type.__name__ = "DisplayString"
_F3GPSReceiverPortCoordinateLongitude_Object = MibTableColumn
f3GPSReceiverPortCoordinateLongitude = _F3GPSReceiverPortCoordinateLongitude_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 24),
    _F3GPSReceiverPortCoordinateLongitude_Type()
)
f3GPSReceiverPortCoordinateLongitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortCoordinateLongitude.setStatus("current")


class _F3GPSReceiverPortCoordinateAltitude_Type(Unsigned32):
    """Custom type f3GPSReceiverPortCoordinateAltitude based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99999),
    )


_F3GPSReceiverPortCoordinateAltitude_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortCoordinateAltitude_Object = MibTableColumn
f3GPSReceiverPortCoordinateAltitude = _F3GPSReceiverPortCoordinateAltitude_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 25),
    _F3GPSReceiverPortCoordinateAltitude_Type()
)
f3GPSReceiverPortCoordinateAltitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortCoordinateAltitude.setStatus("current")
_F3GPSReceiverPortFirmwareUpgradePercent_Type = Integer32
_F3GPSReceiverPortFirmwareUpgradePercent_Object = MibTableColumn
f3GPSReceiverPortFirmwareUpgradePercent = _F3GPSReceiverPortFirmwareUpgradePercent_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 26),
    _F3GPSReceiverPortFirmwareUpgradePercent_Type()
)
f3GPSReceiverPortFirmwareUpgradePercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortFirmwareUpgradePercent.setStatus("current")


class _F3GPSReceiverPortPDOPMask_Type(Unsigned32):
    """Custom type f3GPSReceiverPortPDOPMask based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(200, 1200),
    )


_F3GPSReceiverPortPDOPMask_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortPDOPMask_Object = MibTableColumn
f3GPSReceiverPortPDOPMask = _F3GPSReceiverPortPDOPMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 27),
    _F3GPSReceiverPortPDOPMask_Type()
)
f3GPSReceiverPortPDOPMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortPDOPMask.setStatus("current")


class _F3GPSReceiverPortSelfSurveyPeriod_Type(Unsigned32):
    """Custom type f3GPSReceiverPortSelfSurveyPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 500000),
    )


_F3GPSReceiverPortSelfSurveyPeriod_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortSelfSurveyPeriod_Object = MibTableColumn
f3GPSReceiverPortSelfSurveyPeriod = _F3GPSReceiverPortSelfSurveyPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 28),
    _F3GPSReceiverPortSelfSurveyPeriod_Type()
)
f3GPSReceiverPortSelfSurveyPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSelfSurveyPeriod.setStatus("current")


class _F3GPSReceiverPortSatMin1Threshold_Type(Unsigned32):
    """Custom type f3GPSReceiverPortSatMin1Threshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_F3GPSReceiverPortSatMin1Threshold_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortSatMin1Threshold_Object = MibTableColumn
f3GPSReceiverPortSatMin1Threshold = _F3GPSReceiverPortSatMin1Threshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 29),
    _F3GPSReceiverPortSatMin1Threshold_Type()
)
f3GPSReceiverPortSatMin1Threshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSatMin1Threshold.setStatus("current")


class _F3GPSReceiverPortSatMin2Threshold_Type(Unsigned32):
    """Custom type f3GPSReceiverPortSatMin2Threshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_F3GPSReceiverPortSatMin2Threshold_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortSatMin2Threshold_Object = MibTableColumn
f3GPSReceiverPortSatMin2Threshold = _F3GPSReceiverPortSatMin2Threshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 30),
    _F3GPSReceiverPortSatMin2Threshold_Type()
)
f3GPSReceiverPortSatMin2Threshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSatMin2Threshold.setStatus("current")


class _F3GPSReceiverPortPDOP_Type(Unsigned32):
    """Custom type f3GPSReceiverPortPDOP based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_F3GPSReceiverPortPDOP_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortPDOP_Object = MibTableColumn
f3GPSReceiverPortPDOP = _F3GPSReceiverPortPDOP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 31),
    _F3GPSReceiverPortPDOP_Type()
)
f3GPSReceiverPortPDOP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortPDOP.setStatus("current")
_F3GPSReceiverPortSelfSurveyControl_Type = ToggleValue
_F3GPSReceiverPortSelfSurveyControl_Object = MibTableColumn
f3GPSReceiverPortSelfSurveyControl = _F3GPSReceiverPortSelfSurveyControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 32),
    _F3GPSReceiverPortSelfSurveyControl_Type()
)
f3GPSReceiverPortSelfSurveyControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSelfSurveyControl.setStatus("current")
_F3GPSReceiverPortCoordinateStringAltitude_Type = DisplayString
_F3GPSReceiverPortCoordinateStringAltitude_Object = MibTableColumn
f3GPSReceiverPortCoordinateStringAltitude = _F3GPSReceiverPortCoordinateStringAltitude_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 33),
    _F3GPSReceiverPortCoordinateStringAltitude_Type()
)
f3GPSReceiverPortCoordinateStringAltitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortCoordinateStringAltitude.setStatus("current")
_F3GPSReceiverPortLocationMode_Type = LocationMode
_F3GPSReceiverPortLocationMode_Object = MibTableColumn
f3GPSReceiverPortLocationMode = _F3GPSReceiverPortLocationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 34),
    _F3GPSReceiverPortLocationMode_Type()
)
f3GPSReceiverPortLocationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortLocationMode.setStatus("current")
_F3GPSReceiverPortTimeAdvanceMode_Type = TimeAdvanceMode
_F3GPSReceiverPortTimeAdvanceMode_Object = MibTableColumn
f3GPSReceiverPortTimeAdvanceMode = _F3GPSReceiverPortTimeAdvanceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 35),
    _F3GPSReceiverPortTimeAdvanceMode_Type()
)
f3GPSReceiverPortTimeAdvanceMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortTimeAdvanceMode.setStatus("current")


class _F3GPSReceiverPortTimeAdvanceValue_Type(Integer32):
    """Custom type f3GPSReceiverPortTimeAdvanceValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200),
    )


_F3GPSReceiverPortTimeAdvanceValue_Type.__name__ = "Integer32"
_F3GPSReceiverPortTimeAdvanceValue_Object = MibTableColumn
f3GPSReceiverPortTimeAdvanceValue = _F3GPSReceiverPortTimeAdvanceValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 36),
    _F3GPSReceiverPortTimeAdvanceValue_Type()
)
f3GPSReceiverPortTimeAdvanceValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortTimeAdvanceValue.setStatus("current")
_F3GPSReceiverPortForcedAntennaConnected_Type = ToggleValue
_F3GPSReceiverPortForcedAntennaConnected_Object = MibTableColumn
f3GPSReceiverPortForcedAntennaConnected = _F3GPSReceiverPortForcedAntennaConnected_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 37),
    _F3GPSReceiverPortForcedAntennaConnected_Type()
)
f3GPSReceiverPortForcedAntennaConnected.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortForcedAntennaConnected.setStatus("current")
_F3GPSReceiverPortServiceAvailableTime_Type = Unsigned32
_F3GPSReceiverPortServiceAvailableTime_Object = MibTableColumn
f3GPSReceiverPortServiceAvailableTime = _F3GPSReceiverPortServiceAvailableTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 38),
    _F3GPSReceiverPortServiceAvailableTime_Type()
)
f3GPSReceiverPortServiceAvailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortServiceAvailableTime.setStatus("current")
_F3GPSReceiverPortServiceUnavailableTime_Type = Unsigned32
_F3GPSReceiverPortServiceUnavailableTime_Object = MibTableColumn
f3GPSReceiverPortServiceUnavailableTime = _F3GPSReceiverPortServiceUnavailableTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 39),
    _F3GPSReceiverPortServiceUnavailableTime_Type()
)
f3GPSReceiverPortServiceUnavailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortServiceUnavailableTime.setStatus("current")
_F3GPSReceiverPortServiceAvailablePercentage_Type = DisplayString
_F3GPSReceiverPortServiceAvailablePercentage_Object = MibTableColumn
f3GPSReceiverPortServiceAvailablePercentage = _F3GPSReceiverPortServiceAvailablePercentage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 40),
    _F3GPSReceiverPortServiceAvailablePercentage_Type()
)
f3GPSReceiverPortServiceAvailablePercentage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortServiceAvailablePercentage.setStatus("current")
_F3GPSReceiverPortAGC_Type = Integer32
_F3GPSReceiverPortAGC_Object = MibTableColumn
f3GPSReceiverPortAGC = _F3GPSReceiverPortAGC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 41),
    _F3GPSReceiverPortAGC_Type()
)
f3GPSReceiverPortAGC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortAGC.setStatus("current")
_F3GPSReceiverPortSelfSurveyPositionAccuracy_Type = Unsigned32
_F3GPSReceiverPortSelfSurveyPositionAccuracy_Object = MibTableColumn
f3GPSReceiverPortSelfSurveyPositionAccuracy = _F3GPSReceiverPortSelfSurveyPositionAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 42),
    _F3GPSReceiverPortSelfSurveyPositionAccuracy_Type()
)
f3GPSReceiverPortSelfSurveyPositionAccuracy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSelfSurveyPositionAccuracy.setStatus("current")
_F3GPSReceiverPortHorizontalAccuracy_Type = Unsigned32
_F3GPSReceiverPortHorizontalAccuracy_Object = MibTableColumn
f3GPSReceiverPortHorizontalAccuracy = _F3GPSReceiverPortHorizontalAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 43),
    _F3GPSReceiverPortHorizontalAccuracy_Type()
)
f3GPSReceiverPortHorizontalAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortHorizontalAccuracy.setStatus("current")
_F3GPSReceiverPortVerticalAccuracy_Type = Unsigned32
_F3GPSReceiverPortVerticalAccuracy_Object = MibTableColumn
f3GPSReceiverPortVerticalAccuracy = _F3GPSReceiverPortVerticalAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 44),
    _F3GPSReceiverPortVerticalAccuracy_Type()
)
f3GPSReceiverPortVerticalAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortVerticalAccuracy.setStatus("current")


class _F3GPSReceiverPortTDOP_Type(Unsigned32):
    """Custom type f3GPSReceiverPortTDOP based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_F3GPSReceiverPortTDOP_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortTDOP_Object = MibTableColumn
f3GPSReceiverPortTDOP = _F3GPSReceiverPortTDOP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 45),
    _F3GPSReceiverPortTDOP_Type()
)
f3GPSReceiverPortTDOP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortTDOP.setStatus("current")


class _F3GPSReceiverPortHDOP_Type(Unsigned32):
    """Custom type f3GPSReceiverPortHDOP based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_F3GPSReceiverPortHDOP_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortHDOP_Object = MibTableColumn
f3GPSReceiverPortHDOP = _F3GPSReceiverPortHDOP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 46),
    _F3GPSReceiverPortHDOP_Type()
)
f3GPSReceiverPortHDOP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortHDOP.setStatus("current")


class _F3GPSReceiverPortVDOP_Type(Unsigned32):
    """Custom type f3GPSReceiverPortVDOP based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_F3GPSReceiverPortVDOP_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortVDOP_Object = MibTableColumn
f3GPSReceiverPortVDOP = _F3GPSReceiverPortVDOP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 47),
    _F3GPSReceiverPortVDOP_Type()
)
f3GPSReceiverPortVDOP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortVDOP.setStatus("current")


class _F3GPSReceiverPortFailureSuspendTime_Type(Unsigned32):
    """Custom type f3GPSReceiverPortFailureSuspendTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 3600),
    )


_F3GPSReceiverPortFailureSuspendTime_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortFailureSuspendTime_Object = MibTableColumn
f3GPSReceiverPortFailureSuspendTime = _F3GPSReceiverPortFailureSuspendTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 48),
    _F3GPSReceiverPortFailureSuspendTime_Type()
)
f3GPSReceiverPortFailureSuspendTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortFailureSuspendTime.setStatus("current")


class _F3GPSReceiverPortSpoofingPpsThreshold_Type(Unsigned32):
    """Custom type f3GPSReceiverPortSpoofingPpsThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_F3GPSReceiverPortSpoofingPpsThreshold_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortSpoofingPpsThreshold_Object = MibTableColumn
f3GPSReceiverPortSpoofingPpsThreshold = _F3GPSReceiverPortSpoofingPpsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 49),
    _F3GPSReceiverPortSpoofingPpsThreshold_Type()
)
f3GPSReceiverPortSpoofingPpsThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSpoofingPpsThreshold.setStatus("current")
_F3GPSReceiverPortSpoofingPpsDifference_Type = Unsigned32
_F3GPSReceiverPortSpoofingPpsDifference_Object = MibTableColumn
f3GPSReceiverPortSpoofingPpsDifference = _F3GPSReceiverPortSpoofingPpsDifference_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 50),
    _F3GPSReceiverPortSpoofingPpsDifference_Type()
)
f3GPSReceiverPortSpoofingPpsDifference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSpoofingPpsDifference.setStatus("current")


class _F3GPSReceiverPortSpoofingLocationThreshold_Type(Unsigned32):
    """Custom type f3GPSReceiverPortSpoofingLocationThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500),
    )


_F3GPSReceiverPortSpoofingLocationThreshold_Type.__name__ = "Unsigned32"
_F3GPSReceiverPortSpoofingLocationThreshold_Object = MibTableColumn
f3GPSReceiverPortSpoofingLocationThreshold = _F3GPSReceiverPortSpoofingLocationThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 51),
    _F3GPSReceiverPortSpoofingLocationThreshold_Type()
)
f3GPSReceiverPortSpoofingLocationThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSpoofingLocationThreshold.setStatus("current")
_F3GPSReceiverPortSpoofingLocationDifference_Type = Unsigned32
_F3GPSReceiverPortSpoofingLocationDifference_Object = MibTableColumn
f3GPSReceiverPortSpoofingLocationDifference = _F3GPSReceiverPortSpoofingLocationDifference_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 52),
    _F3GPSReceiverPortSpoofingLocationDifference_Type()
)
f3GPSReceiverPortSpoofingLocationDifference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3GPSReceiverPortSpoofingLocationDifference.setStatus("current")
_F3GPSReceiverPortGnssDynamicModel_Type = DynamicModelType
_F3GPSReceiverPortGnssDynamicModel_Object = MibTableColumn
f3GPSReceiverPortGnssDynamicModel = _F3GPSReceiverPortGnssDynamicModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 57, 1, 53),
    _F3GPSReceiverPortGnssDynamicModel_Type()
)
f3GPSReceiverPortGnssDynamicModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3GPSReceiverPortGnssDynamicModel.setStatus("current")
_CmPethPsePortExtTable_Object = MibTable
cmPethPsePortExtTable = _CmPethPsePortExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58)
)
if mibBuilder.loadTexts:
    cmPethPsePortExtTable.setStatus("current")
_CmPethPsePortExtEntry_Object = MibTableRow
cmPethPsePortExtEntry = _CmPethPsePortExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1)
)
cmPethPsePortExtEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPethPsePortExtGroupIndex"),
    (0, "CM-FACILITY-MIB", "cmPethPsePortExtIndex"),
)
if mibBuilder.loadTexts:
    cmPethPsePortExtEntry.setStatus("current")
_CmPethPsePortExtGroupIndex_Type = Integer32
_CmPethPsePortExtGroupIndex_Object = MibTableColumn
cmPethPsePortExtGroupIndex = _CmPethPsePortExtGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1, 1),
    _CmPethPsePortExtGroupIndex_Type()
)
cmPethPsePortExtGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPethPsePortExtGroupIndex.setStatus("current")
_CmPethPsePortExtIndex_Type = Integer32
_CmPethPsePortExtIndex_Object = MibTableColumn
cmPethPsePortExtIndex = _CmPethPsePortExtIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1, 2),
    _CmPethPsePortExtIndex_Type()
)
cmPethPsePortExtIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPethPsePortExtIndex.setStatus("current")
_CmPethPsePortExtAssociatedPort_Type = VariablePointer
_CmPethPsePortExtAssociatedPort_Object = MibTableColumn
cmPethPsePortExtAssociatedPort = _CmPethPsePortExtAssociatedPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1, 3),
    _CmPethPsePortExtAssociatedPort_Type()
)
cmPethPsePortExtAssociatedPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPethPsePortExtAssociatedPort.setStatus("current")
_PethPsePortExtPowerConsumption_Type = Unsigned32
_PethPsePortExtPowerConsumption_Object = MibTableColumn
pethPsePortExtPowerConsumption = _PethPsePortExtPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1, 4),
    _PethPsePortExtPowerConsumption_Type()
)
pethPsePortExtPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pethPsePortExtPowerConsumption.setStatus("current")
_PethPsePortExtAvailablePowerLevel_Type = PsePowerLevel
_PethPsePortExtAvailablePowerLevel_Object = MibTableColumn
pethPsePortExtAvailablePowerLevel = _PethPsePortExtAvailablePowerLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 58, 1, 5),
    _PethPsePortExtAvailablePowerLevel_Type()
)
pethPsePortExtAvailablePowerLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pethPsePortExtAvailablePowerLevel.setStatus("current")
_PethMainPseEXTTable_Object = MibTable
pethMainPseEXTTable = _PethMainPseEXTTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 59)
)
if mibBuilder.loadTexts:
    pethMainPseEXTTable.setStatus("current")
_PethMainPseEXTEntry_Object = MibTableRow
pethMainPseEXTEntry = _PethMainPseEXTEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 59, 1)
)
pethMainPseEXTEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "pethMainPseExtGroupIndex"),
)
if mibBuilder.loadTexts:
    pethMainPseEXTEntry.setStatus("current")
_PethMainPseExtGroupIndex_Type = Integer32
_PethMainPseExtGroupIndex_Object = MibTableColumn
pethMainPseExtGroupIndex = _PethMainPseExtGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 59, 1, 1),
    _PethMainPseExtGroupIndex_Type()
)
pethMainPseExtGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pethMainPseExtGroupIndex.setStatus("current")
_PethMainPseExtNonStandardPD_Type = PSENonStandardPD
_PethMainPseExtNonStandardPD_Object = MibTableColumn
pethMainPseExtNonStandardPD = _PethMainPseExtNonStandardPD_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 59, 1, 2),
    _PethMainPseExtNonStandardPD_Type()
)
pethMainPseExtNonStandardPD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pethMainPseExtNonStandardPD.setStatus("current")
_CmMPFlowTable_Object = MibTable
cmMPFlowTable = _CmMPFlowTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60)
)
if mibBuilder.loadTexts:
    cmMPFlowTable.setStatus("current")
_CmMPFlowEntry_Object = MibTableRow
cmMPFlowEntry = _CmMPFlowEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1)
)
cmMPFlowEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "cmMPFlowIndex"),
)
if mibBuilder.loadTexts:
    cmMPFlowEntry.setStatus("current")


class _CmMPFlowIndex_Type(Integer32):
    """Custom type cmMPFlowIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmMPFlowIndex_Type.__name__ = "Integer32"
_CmMPFlowIndex_Object = MibTableColumn
cmMPFlowIndex = _CmMPFlowIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 1),
    _CmMPFlowIndex_Type()
)
cmMPFlowIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmMPFlowIndex.setStatus("current")
_CmMPFlowCircuitName_Type = F3DisplayString
_CmMPFlowCircuitName_Object = MibTableColumn
cmMPFlowCircuitName = _CmMPFlowCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 2),
    _CmMPFlowCircuitName_Type()
)
cmMPFlowCircuitName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowCircuitName.setStatus("current")
_CmMPFlowAdminState_Type = AdminState
_CmMPFlowAdminState_Object = MibTableColumn
cmMPFlowAdminState = _CmMPFlowAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 3),
    _CmMPFlowAdminState_Type()
)
cmMPFlowAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowAdminState.setStatus("current")
_CmMPFlowOperationalState_Type = OperationalState
_CmMPFlowOperationalState_Object = MibTableColumn
cmMPFlowOperationalState = _CmMPFlowOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 4),
    _CmMPFlowOperationalState_Type()
)
cmMPFlowOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmMPFlowOperationalState.setStatus("current")
_CmMPFlowSecondaryState_Type = SecondaryState
_CmMPFlowSecondaryState_Object = MibTableColumn
cmMPFlowSecondaryState = _CmMPFlowSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 5),
    _CmMPFlowSecondaryState_Type()
)
cmMPFlowSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmMPFlowSecondaryState.setStatus("current")
_CmMPFlowLearningEnabled_Type = TruthValue
_CmMPFlowLearningEnabled_Object = MibTableColumn
cmMPFlowLearningEnabled = _CmMPFlowLearningEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 6),
    _CmMPFlowLearningEnabled_Type()
)
cmMPFlowLearningEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowLearningEnabled.setStatus("current")
_CmMPFlowAgingTimer_Type = Integer32
_CmMPFlowAgingTimer_Object = MibTableColumn
cmMPFlowAgingTimer = _CmMPFlowAgingTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 7),
    _CmMPFlowAgingTimer_Type()
)
cmMPFlowAgingTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowAgingTimer.setStatus("current")
_CmMPFlowFwdTableSizeProfileID_Type = VariablePointer
_CmMPFlowFwdTableSizeProfileID_Object = MibTableColumn
cmMPFlowFwdTableSizeProfileID = _CmMPFlowFwdTableSizeProfileID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 8),
    _CmMPFlowFwdTableSizeProfileID_Type()
)
cmMPFlowFwdTableSizeProfileID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowFwdTableSizeProfileID.setStatus("current")
_CmMPFlowtableFullAction_Type = LearningAction
_CmMPFlowtableFullAction_Object = MibTableColumn
cmMPFlowtableFullAction = _CmMPFlowtableFullAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 9),
    _CmMPFlowtableFullAction_Type()
)
cmMPFlowtableFullAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowtableFullAction.setStatus("current")
_CmMPFlowStorageType_Type = StorageType
_CmMPFlowStorageType_Object = MibTableColumn
cmMPFlowStorageType = _CmMPFlowStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 10),
    _CmMPFlowStorageType_Type()
)
cmMPFlowStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmMPFlowStorageType.setStatus("current")
_CmMPFlowRowStatus_Type = RowStatus
_CmMPFlowRowStatus_Object = MibTableColumn
cmMPFlowRowStatus = _CmMPFlowRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 11),
    _CmMPFlowRowStatus_Type()
)
cmMPFlowRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmMPFlowRowStatus.setStatus("current")
_CmMPFlowLearningConfigAction_Type = LearningConfigAction
_CmMPFlowLearningConfigAction_Object = MibTableColumn
cmMPFlowLearningConfigAction = _CmMPFlowLearningConfigAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 12),
    _CmMPFlowLearningConfigAction_Type()
)
cmMPFlowLearningConfigAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowLearningConfigAction.setStatus("current")
_CmMPFlowFPList_Type = F3DisplayString
_CmMPFlowFPList_Object = MibTableColumn
cmMPFlowFPList = _CmMPFlowFPList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 60, 1, 13),
    _CmMPFlowFPList_Type()
)
cmMPFlowFPList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmMPFlowFPList.setStatus("current")
_CmMPFlowMemberTable_Object = MibTable
cmMPFlowMemberTable = _CmMPFlowMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 61)
)
if mibBuilder.loadTexts:
    cmMPFlowMemberTable.setStatus("current")
_CmMPFlowMemberEntry_Object = MibTableRow
cmMPFlowMemberEntry = _CmMPFlowMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 61, 1)
)
cmMPFlowMemberEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "cmMPFlowIndex"),
    (0, "CM-FACILITY-MIB", "cmMPFlowMemberFPIndex"),
)
if mibBuilder.loadTexts:
    cmMPFlowMemberEntry.setStatus("current")
_CmMPFlowMemberFPIndex_Type = VariablePointer
_CmMPFlowMemberFPIndex_Object = MibTableColumn
cmMPFlowMemberFPIndex = _CmMPFlowMemberFPIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 61, 1, 1),
    _CmMPFlowMemberFPIndex_Type()
)
cmMPFlowMemberFPIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmMPFlowMemberFPIndex.setStatus("current")
_CmMPFlowPointRowStatus_Type = RowStatus
_CmMPFlowPointRowStatus_Object = MibTableColumn
cmMPFlowPointRowStatus = _CmMPFlowPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 61, 1, 2),
    _CmMPFlowPointRowStatus_Type()
)
cmMPFlowPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmMPFlowPointRowStatus.setStatus("current")
_CmEthernetTrafficPortPcpDEEncTable_Object = MibTable
cmEthernetTrafficPortPcpDEEncTable = _CmEthernetTrafficPortPcpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncTable.setStatus("current")
_CmEthernetTrafficPortPcpDEEncEntry_Object = MibTableRow
cmEthernetTrafficPortPcpDEEncEntry = _CmEthernetTrafficPortPcpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62, 1)
)
cmEthernetTrafficPortPcpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncEntry.setStatus("current")


class _CmEthernetTrafficPortPcpDEEncIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortPcpDEEncIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmEthernetTrafficPortPcpDEEncIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortPcpDEEncIndex_Object = MibTableColumn
cmEthernetTrafficPortPcpDEEncIndex = _CmEthernetTrafficPortPcpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62, 1, 1),
    _CmEthernetTrafficPortPcpDEEncIndex_Type()
)
cmEthernetTrafficPortPcpDEEncIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncIndex.setStatus("current")
_CmEthernetTrafficPortPcpDEEncInPriority_Type = VlanPriority
_CmEthernetTrafficPortPcpDEEncInPriority_Object = MibTableColumn
cmEthernetTrafficPortPcpDEEncInPriority = _CmEthernetTrafficPortPcpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62, 1, 2),
    _CmEthernetTrafficPortPcpDEEncInPriority_Type()
)
cmEthernetTrafficPortPcpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncInPriority.setStatus("current")
_CmEthernetTrafficPortPcpDEEncDropIneligiblePrio_Type = VlanPriority
_CmEthernetTrafficPortPcpDEEncDropIneligiblePrio_Object = MibTableColumn
cmEthernetTrafficPortPcpDEEncDropIneligiblePrio = _CmEthernetTrafficPortPcpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62, 1, 3),
    _CmEthernetTrafficPortPcpDEEncDropIneligiblePrio_Type()
)
cmEthernetTrafficPortPcpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncDropIneligiblePrio.setStatus("current")
_CmEthernetTrafficPortPcpDEEncDropEligiblePrio_Type = VlanPriority
_CmEthernetTrafficPortPcpDEEncDropEligiblePrio_Object = MibTableColumn
cmEthernetTrafficPortPcpDEEncDropEligiblePrio = _CmEthernetTrafficPortPcpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 62, 1, 4),
    _CmEthernetTrafficPortPcpDEEncDropEligiblePrio_Type()
)
cmEthernetTrafficPortPcpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEEncDropEligiblePrio.setStatus("current")
_CmEthernetTrafficPortPcpDEDecTable_Object = MibTable
cmEthernetTrafficPortPcpDEDecTable = _CmEthernetTrafficPortPcpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecTable.setStatus("current")
_CmEthernetTrafficPortPcpDEDecEntry_Object = MibTableRow
cmEthernetTrafficPortPcpDEDecEntry = _CmEthernetTrafficPortPcpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63, 1)
)
cmEthernetTrafficPortPcpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecEntry.setStatus("current")


class _CmEthernetTrafficPortPcpDEDecIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortPcpDEDecIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CmEthernetTrafficPortPcpDEDecIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortPcpDEDecIndex_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDecIndex = _CmEthernetTrafficPortPcpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63, 1, 1),
    _CmEthernetTrafficPortPcpDEDecIndex_Type()
)
cmEthernetTrafficPortPcpDEDecIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecIndex.setStatus("current")
_CmEthernetTrafficPortPcpDEDecInPriority_Type = VlanPriority
_CmEthernetTrafficPortPcpDEDecInPriority_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDecInPriority = _CmEthernetTrafficPortPcpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63, 1, 2),
    _CmEthernetTrafficPortPcpDEDecInPriority_Type()
)
cmEthernetTrafficPortPcpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecInPriority.setStatus("current")
_CmEthernetTrafficPortPcpDEDecOutPriority_Type = VlanPriority
_CmEthernetTrafficPortPcpDEDecOutPriority_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDecOutPriority = _CmEthernetTrafficPortPcpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63, 1, 3),
    _CmEthernetTrafficPortPcpDEDecOutPriority_Type()
)
cmEthernetTrafficPortPcpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecOutPriority.setStatus("current")
_CmEthernetTrafficPortPcpDEDecDropEligible_Type = TruthValue
_CmEthernetTrafficPortPcpDEDecDropEligible_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDecDropEligible = _CmEthernetTrafficPortPcpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 63, 1, 4),
    _CmEthernetTrafficPortPcpDEDecDropEligible_Type()
)
cmEthernetTrafficPortPcpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDecDropEligible.setStatus("current")
_CmEthernetTrafficPortPcpDEPairTable_Object = MibTable
cmEthernetTrafficPortPcpDEPairTable = _CmEthernetTrafficPortPcpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 64)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEPairTable.setStatus("current")
_CmEthernetTrafficPortPcpDEPairEntry_Object = MibTableRow
cmEthernetTrafficPortPcpDEPairEntry = _CmEthernetTrafficPortPcpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 64, 1)
)
cmEthernetTrafficPortPcpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEPairEntry.setStatus("current")


class _CmEthernetTrafficPortPcpDEPairIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortPcpDEPairIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_CmEthernetTrafficPortPcpDEPairIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortPcpDEPairIndex_Object = MibTableColumn
cmEthernetTrafficPortPcpDEPairIndex = _CmEthernetTrafficPortPcpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 64, 1, 1),
    _CmEthernetTrafficPortPcpDEPairIndex_Type()
)
cmEthernetTrafficPortPcpDEPairIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEPairIndex.setStatus("current")
_CmEthernetTrafficPortPcpDEDropIneligiblePrio_Type = VlanPriority
_CmEthernetTrafficPortPcpDEDropIneligiblePrio_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDropIneligiblePrio = _CmEthernetTrafficPortPcpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 64, 1, 2),
    _CmEthernetTrafficPortPcpDEDropIneligiblePrio_Type()
)
cmEthernetTrafficPortPcpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDropIneligiblePrio.setStatus("current")
_CmEthernetTrafficPortPcpDEDropEligiblePrio_Type = VlanPriority
_CmEthernetTrafficPortPcpDEDropEligiblePrio_Object = MibTableColumn
cmEthernetTrafficPortPcpDEDropEligiblePrio = _CmEthernetTrafficPortPcpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 64, 1, 3),
    _CmEthernetTrafficPortPcpDEDropEligiblePrio_Type()
)
cmEthernetTrafficPortPcpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpDEDropEligiblePrio.setStatus("current")
_CmEthernetTrafficPortClbTable_Object = MibTable
cmEthernetTrafficPortClbTable = _CmEthernetTrafficPortClbTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbTable.setStatus("current")
_CmEthernetTrafficPortClbEntry_Object = MibTableRow
cmEthernetTrafficPortClbEntry = _CmEthernetTrafficPortClbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65, 1)
)
cmEthernetTrafficPortClbEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortClbIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbEntry.setStatus("current")


class _CmEthernetTrafficPortClbIndex_Type(Integer32):
    """Custom type cmEthernetTrafficPortClbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_CmEthernetTrafficPortClbIndex_Type.__name__ = "Integer32"
_CmEthernetTrafficPortClbIndex_Object = MibTableColumn
cmEthernetTrafficPortClbIndex = _CmEthernetTrafficPortClbIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65, 1, 1),
    _CmEthernetTrafficPortClbIndex_Type()
)
cmEthernetTrafficPortClbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbIndex.setStatus("current")
_CmEthernetTrafficPortClbEnabled_Type = TruthValue
_CmEthernetTrafficPortClbEnabled_Object = MibTableColumn
cmEthernetTrafficPortClbEnabled = _CmEthernetTrafficPortClbEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65, 1, 2),
    _CmEthernetTrafficPortClbEnabled_Type()
)
cmEthernetTrafficPortClbEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbEnabled.setStatus("current")
_CmEthernetTrafficPortClbLength_Type = DisplayString
_CmEthernetTrafficPortClbLength_Object = MibTableColumn
cmEthernetTrafficPortClbLength = _CmEthernetTrafficPortClbLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65, 1, 3),
    _CmEthernetTrafficPortClbLength_Type()
)
cmEthernetTrafficPortClbLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbLength.setStatus("current")


class _CmEthernetTrafficPortClbDescr_Type(DisplayString):
    """Custom type cmEthernetTrafficPortClbDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEthernetTrafficPortClbDescr_Type.__name__ = "DisplayString"
_CmEthernetTrafficPortClbDescr_Object = MibTableColumn
cmEthernetTrafficPortClbDescr = _CmEthernetTrafficPortClbDescr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 65, 1, 4),
    _CmEthernetTrafficPortClbDescr_Type()
)
cmEthernetTrafficPortClbDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortClbDescr.setStatus("current")
_NetworkElementTMParamsTable_Object = MibTable
networkElementTMParamsTable = _NetworkElementTMParamsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 66)
)
if mibBuilder.loadTexts:
    networkElementTMParamsTable.setStatus("current")
_NetworkElementTMParamsEntry_Object = MibTableRow
networkElementTMParamsEntry = _NetworkElementTMParamsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 66, 1)
)
if mibBuilder.loadTexts:
    networkElementTMParamsEntry.setStatus("current")
_NeTMParamsBandwidthProfileMode_Type = BandwidthProfileMode
_NeTMParamsBandwidthProfileMode_Object = MibTableColumn
neTMParamsBandwidthProfileMode = _NeTMParamsBandwidthProfileMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 66, 1, 1),
    _NeTMParamsBandwidthProfileMode_Type()
)
neTMParamsBandwidthProfileMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    neTMParamsBandwidthProfileMode.setStatus("current")
_NeTMParamsAgingtime_Type = Integer32
_NeTMParamsAgingtime_Object = MibTableColumn
neTMParamsAgingtime = _NeTMParamsAgingtime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 66, 1, 2),
    _NeTMParamsAgingtime_Type()
)
neTMParamsAgingtime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    neTMParamsAgingtime.setStatus("current")
_CmEthernetAccPortJdsuExtTable_Object = MibTable
cmEthernetAccPortJdsuExtTable = _CmEthernetAccPortJdsuExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 67)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortJdsuExtTable.setStatus("current")
_CmEthernetAccPortJdsuExtEntry_Object = MibTableRow
cmEthernetAccPortJdsuExtEntry = _CmEthernetAccPortJdsuExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 67, 1)
)
if mibBuilder.loadTexts:
    cmEthernetAccPortJdsuExtEntry.setStatus("current")
_CmEthernetAccPortJDSUControlFramesSnoopingEnabled_Type = TruthValue
_CmEthernetAccPortJDSUControlFramesSnoopingEnabled_Object = MibTableColumn
cmEthernetAccPortJDSUControlFramesSnoopingEnabled = _CmEthernetAccPortJDSUControlFramesSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 67, 1, 1),
    _CmEthernetAccPortJDSUControlFramesSnoopingEnabled_Type()
)
cmEthernetAccPortJDSUControlFramesSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetAccPortJDSUControlFramesSnoopingEnabled.setStatus("current")
_CmEthernetAccPortJDSULoopbackVlan_Type = VlanId
_CmEthernetAccPortJDSULoopbackVlan_Object = MibTableColumn
cmEthernetAccPortJDSULoopbackVlan = _CmEthernetAccPortJDSULoopbackVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 67, 1, 2),
    _CmEthernetAccPortJDSULoopbackVlan_Type()
)
cmEthernetAccPortJDSULoopbackVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortJDSULoopbackVlan.setStatus("current")
_CmEthernetAccPortJDSULoopbackVlanList_Type = DisplayString
_CmEthernetAccPortJDSULoopbackVlanList_Object = MibTableColumn
cmEthernetAccPortJDSULoopbackVlanList = _CmEthernetAccPortJDSULoopbackVlanList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 67, 1, 3),
    _CmEthernetAccPortJDSULoopbackVlanList_Type()
)
cmEthernetAccPortJDSULoopbackVlanList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetAccPortJDSULoopbackVlanList.setStatus("current")
_CmEthernetNetPortJdsuExtTable_Object = MibTable
cmEthernetNetPortJdsuExtTable = _CmEthernetNetPortJdsuExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 68)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortJdsuExtTable.setStatus("current")
_CmEthernetNetPortJdsuExtEntry_Object = MibTableRow
cmEthernetNetPortJdsuExtEntry = _CmEthernetNetPortJdsuExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 68, 1)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortJdsuExtEntry.setStatus("current")
_CmEthernetNetPortJDSUControlFramesSnoopingEnabled_Type = TruthValue
_CmEthernetNetPortJDSUControlFramesSnoopingEnabled_Object = MibTableColumn
cmEthernetNetPortJDSUControlFramesSnoopingEnabled = _CmEthernetNetPortJDSUControlFramesSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 68, 1, 1),
    _CmEthernetNetPortJDSUControlFramesSnoopingEnabled_Type()
)
cmEthernetNetPortJDSUControlFramesSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortJDSUControlFramesSnoopingEnabled.setStatus("current")
_CmEthernetNetPortJDSULoopbackVlan_Type = VlanId
_CmEthernetNetPortJDSULoopbackVlan_Object = MibTableColumn
cmEthernetNetPortJDSULoopbackVlan = _CmEthernetNetPortJDSULoopbackVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 68, 1, 2),
    _CmEthernetNetPortJDSULoopbackVlan_Type()
)
cmEthernetNetPortJDSULoopbackVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortJDSULoopbackVlan.setStatus("current")
_CmEthernetNetPortJDSULoopbackVlanList_Type = DisplayString
_CmEthernetNetPortJDSULoopbackVlanList_Object = MibTableColumn
cmEthernetNetPortJDSULoopbackVlanList = _CmEthernetNetPortJDSULoopbackVlanList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 68, 1, 3),
    _CmEthernetNetPortJDSULoopbackVlanList_Type()
)
cmEthernetNetPortJDSULoopbackVlanList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortJDSULoopbackVlanList.setStatus("current")
_CmEthernetTrafficPortLpbkTable_Object = MibTable
cmEthernetTrafficPortLpbkTable = _CmEthernetTrafficPortLpbkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkTable.setStatus("current")
_CmEthernetTrafficPortLpbkEntry_Object = MibTableRow
cmEthernetTrafficPortLpbkEntry = _CmEthernetTrafficPortLpbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1)
)
cmEthernetTrafficPortLpbkEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkIndex"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkEntry.setStatus("current")
_CmEthernetTrafficPortLpbkIndex_Type = Integer32
_CmEthernetTrafficPortLpbkIndex_Object = MibTableColumn
cmEthernetTrafficPortLpbkIndex = _CmEthernetTrafficPortLpbkIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 1),
    _CmEthernetTrafficPortLpbkIndex_Type()
)
cmEthernetTrafficPortLpbkIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkIndex.setStatus("current")
_CmEthernetTrafficPortLpbkInnerVlanEnabled_Type = TruthValue
_CmEthernetTrafficPortLpbkInnerVlanEnabled_Object = MibTableColumn
cmEthernetTrafficPortLpbkInnerVlanEnabled = _CmEthernetTrafficPortLpbkInnerVlanEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 2),
    _CmEthernetTrafficPortLpbkInnerVlanEnabled_Type()
)
cmEthernetTrafficPortLpbkInnerVlanEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkInnerVlanEnabled.setStatus("current")
_CmEthernetTrafficPortLpbkInnerVlanTag_Type = DisplayString
_CmEthernetTrafficPortLpbkInnerVlanTag_Object = MibTableColumn
cmEthernetTrafficPortLpbkInnerVlanTag = _CmEthernetTrafficPortLpbkInnerVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 3),
    _CmEthernetTrafficPortLpbkInnerVlanTag_Type()
)
cmEthernetTrafficPortLpbkInnerVlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkInnerVlanTag.setStatus("current")
_CmEthernetTrafficPortLpbkOuterVlanEnabled_Type = TruthValue
_CmEthernetTrafficPortLpbkOuterVlanEnabled_Object = MibTableColumn
cmEthernetTrafficPortLpbkOuterVlanEnabled = _CmEthernetTrafficPortLpbkOuterVlanEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 4),
    _CmEthernetTrafficPortLpbkOuterVlanEnabled_Type()
)
cmEthernetTrafficPortLpbkOuterVlanEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkOuterVlanEnabled.setStatus("current")
_CmEthernetTrafficPortLpbkOuterVlanTag_Type = DisplayString
_CmEthernetTrafficPortLpbkOuterVlanTag_Object = MibTableColumn
cmEthernetTrafficPortLpbkOuterVlanTag = _CmEthernetTrafficPortLpbkOuterVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 5),
    _CmEthernetTrafficPortLpbkOuterVlanTag_Type()
)
cmEthernetTrafficPortLpbkOuterVlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkOuterVlanTag.setStatus("current")
_CmEthernetTrafficPortLpbkTime_Type = Integer32
_CmEthernetTrafficPortLpbkTime_Object = MibTableColumn
cmEthernetTrafficPortLpbkTime = _CmEthernetTrafficPortLpbkTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 6),
    _CmEthernetTrafficPortLpbkTime_Type()
)
cmEthernetTrafficPortLpbkTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkTime.setStatus("current")
_CmEthernetTrafficPortLpbkStatus_Type = CmLoopbackType
_CmEthernetTrafficPortLpbkStatus_Object = MibTableColumn
cmEthernetTrafficPortLpbkStatus = _CmEthernetTrafficPortLpbkStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 7),
    _CmEthernetTrafficPortLpbkStatus_Type()
)
cmEthernetTrafficPortLpbkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkStatus.setStatus("current")
_CmEthernetTrafficPortLpbkConfig_Type = CmLoopbackType
_CmEthernetTrafficPortLpbkConfig_Object = MibTableColumn
cmEthernetTrafficPortLpbkConfig = _CmEthernetTrafficPortLpbkConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 69, 1, 8),
    _CmEthernetTrafficPortLpbkConfig_Type()
)
cmEthernetTrafficPortLpbkConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortLpbkConfig.setStatus("current")
_CmPrioMapV2ProfileTable_Object = MibTable
cmPrioMapV2ProfileTable = _CmPrioMapV2ProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70)
)
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileTable.setStatus("current")
_CmPrioMapV2ProfileEntry_Object = MibTableRow
cmPrioMapV2ProfileEntry = _CmPrioMapV2ProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1)
)
cmPrioMapV2ProfileEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
)
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileEntry.setStatus("current")
_CmPrioMapV2ProfileIndex_Type = Integer32
_CmPrioMapV2ProfileIndex_Object = MibTableColumn
cmPrioMapV2ProfileIndex = _CmPrioMapV2ProfileIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 1),
    _CmPrioMapV2ProfileIndex_Type()
)
cmPrioMapV2ProfileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileIndex.setStatus("current")
_CmPrioMapV2ProfileAlias_Type = DisplayString
_CmPrioMapV2ProfileAlias_Object = MibTableColumn
cmPrioMapV2ProfileAlias = _CmPrioMapV2ProfileAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 2),
    _CmPrioMapV2ProfileAlias_Type()
)
cmPrioMapV2ProfileAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileAlias.setStatus("current")
_CmPrioMapV2ProfileMapModeType_Type = PriorityMapMode
_CmPrioMapV2ProfileMapModeType_Object = MibTableColumn
cmPrioMapV2ProfileMapModeType = _CmPrioMapV2ProfileMapModeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 3),
    _CmPrioMapV2ProfileMapModeType_Type()
)
cmPrioMapV2ProfileMapModeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileMapModeType.setStatus("current")
_CmPrioMapV2ProfileStorageType_Type = StorageType
_CmPrioMapV2ProfileStorageType_Object = MibTableColumn
cmPrioMapV2ProfileStorageType = _CmPrioMapV2ProfileStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 4),
    _CmPrioMapV2ProfileStorageType_Type()
)
cmPrioMapV2ProfileStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileStorageType.setStatus("current")
_CmPrioMapV2ProfileRowStatus_Type = RowStatus
_CmPrioMapV2ProfileRowStatus_Object = MibTableColumn
cmPrioMapV2ProfileRowStatus = _CmPrioMapV2ProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 5),
    _CmPrioMapV2ProfileRowStatus_Type()
)
cmPrioMapV2ProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileRowStatus.setStatus("current")
_CmPrioMapV2ProfileIngressCosPriority_Type = VlanTagType
_CmPrioMapV2ProfileIngressCosPriority_Object = MibTableColumn
cmPrioMapV2ProfileIngressCosPriority = _CmPrioMapV2ProfileIngressCosPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 6),
    _CmPrioMapV2ProfileIngressCosPriority_Type()
)
cmPrioMapV2ProfileIngressCosPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileIngressCosPriority.setStatus("deprecated")
_CmPrioMapV2ProfileCosMapModeType_Type = CosMappingMode
_CmPrioMapV2ProfileCosMapModeType_Object = MibTableColumn
cmPrioMapV2ProfileCosMapModeType = _CmPrioMapV2ProfileCosMapModeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 7),
    _CmPrioMapV2ProfileCosMapModeType_Type()
)
cmPrioMapV2ProfileCosMapModeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileCosMapModeType.setStatus("current")
_CmPrioMapV2ProfileCosMapControl_Type = TruthValue
_CmPrioMapV2ProfileCosMapControl_Object = MibTableColumn
cmPrioMapV2ProfileCosMapControl = _CmPrioMapV2ProfileCosMapControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 8),
    _CmPrioMapV2ProfileCosMapControl_Type()
)
cmPrioMapV2ProfileCosMapControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileCosMapControl.setStatus("current")
_CmPrioMapV2ProfileDefaultCos_Type = Unsigned32
_CmPrioMapV2ProfileDefaultCos_Object = MibTableColumn
cmPrioMapV2ProfileDefaultCos = _CmPrioMapV2ProfileDefaultCos_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 9),
    _CmPrioMapV2ProfileDefaultCos_Type()
)
cmPrioMapV2ProfileDefaultCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileDefaultCos.setStatus("current")
_CmPrioMapV2ProfileEgressCos_Type = Unsigned32
_CmPrioMapV2ProfileEgressCos_Object = MibTableColumn
cmPrioMapV2ProfileEgressCos = _CmPrioMapV2ProfileEgressCos_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 70, 1, 10),
    _CmPrioMapV2ProfileEgressCos_Type()
)
cmPrioMapV2ProfileEgressCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileEgressCos.setStatus("current")
_CmPrioMapV2IngressPrioMappingTable_Object = MibTable
cmPrioMapV2IngressPrioMappingTable = _CmPrioMapV2IngressPrioMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 71)
)
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingTable.setStatus("current")
_CmPrioMapV2IngressPrioMappingEntry_Object = MibTableRow
cmPrioMapV2IngressPrioMappingEntry = _CmPrioMapV2IngressPrioMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 71, 1)
)
cmPrioMapV2IngressPrioMappingEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
    (0, "CM-FACILITY-MIB", "cmPrioMapV2IngressPrioMappingIndex"),
)
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingEntry.setStatus("current")
_CmPrioMapV2IngressPrioMappingIndex_Type = Integer32
_CmPrioMapV2IngressPrioMappingIndex_Object = MibTableColumn
cmPrioMapV2IngressPrioMappingIndex = _CmPrioMapV2IngressPrioMappingIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 71, 1, 1),
    _CmPrioMapV2IngressPrioMappingIndex_Type()
)
cmPrioMapV2IngressPrioMappingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingIndex.setStatus("current")


class _CmPrioMapV2IngressPrioMappingInPriority_Type(Integer32):
    """Custom type cmPrioMapV2IngressPrioMappingInPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CmPrioMapV2IngressPrioMappingInPriority_Type.__name__ = "Integer32"
_CmPrioMapV2IngressPrioMappingInPriority_Object = MibTableColumn
cmPrioMapV2IngressPrioMappingInPriority = _CmPrioMapV2IngressPrioMappingInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 71, 1, 2),
    _CmPrioMapV2IngressPrioMappingInPriority_Type()
)
cmPrioMapV2IngressPrioMappingInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingInPriority.setStatus("current")


class _CmPrioMapV2IngressPrioMappingCOS_Type(Integer32):
    """Custom type cmPrioMapV2IngressPrioMappingCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmPrioMapV2IngressPrioMappingCOS_Type.__name__ = "Integer32"
_CmPrioMapV2IngressPrioMappingCOS_Object = MibTableColumn
cmPrioMapV2IngressPrioMappingCOS = _CmPrioMapV2IngressPrioMappingCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 71, 1, 3),
    _CmPrioMapV2IngressPrioMappingCOS_Type()
)
cmPrioMapV2IngressPrioMappingCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingCOS.setStatus("current")
_CmPrioMapV2PrioMappingCOSTable_Object = MibTable
cmPrioMapV2PrioMappingCOSTable = _CmPrioMapV2PrioMappingCOSTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72)
)
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSTable.setStatus("current")
_CmPrioMapV2PrioMappingCOSEntry_Object = MibTableRow
cmPrioMapV2PrioMappingCOSEntry = _CmPrioMapV2PrioMappingCOSEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1)
)
cmPrioMapV2PrioMappingCOSEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
    (0, "CM-FACILITY-MIB", "cmPrioMapV2PrioMappingCOSIndex"),
)
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSEntry.setStatus("current")
_CmPrioMapV2PrioMappingCOSIndex_Type = Integer32
_CmPrioMapV2PrioMappingCOSIndex_Object = MibTableColumn
cmPrioMapV2PrioMappingCOSIndex = _CmPrioMapV2PrioMappingCOSIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 1),
    _CmPrioMapV2PrioMappingCOSIndex_Type()
)
cmPrioMapV2PrioMappingCOSIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSIndex.setStatus("current")


class _CmPrioMapV2PrioMappingCOSValue_Type(Integer32):
    """Custom type cmPrioMapV2PrioMappingCOSValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmPrioMapV2PrioMappingCOSValue_Type.__name__ = "Integer32"
_CmPrioMapV2PrioMappingCOSValue_Object = MibTableColumn
cmPrioMapV2PrioMappingCOSValue = _CmPrioMapV2PrioMappingCOSValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 2),
    _CmPrioMapV2PrioMappingCOSValue_Type()
)
cmPrioMapV2PrioMappingCOSValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSValue.setStatus("current")
_CmPrioMapV2PrioMappingCOSOuterTagPri_Type = Integer32
_CmPrioMapV2PrioMappingCOSOuterTagPri_Object = MibTableColumn
cmPrioMapV2PrioMappingCOSOuterTagPri = _CmPrioMapV2PrioMappingCOSOuterTagPri_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 3),
    _CmPrioMapV2PrioMappingCOSOuterTagPri_Type()
)
cmPrioMapV2PrioMappingCOSOuterTagPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSOuterTagPri.setStatus("current")
_CmPrioMapV2PrioMappingCOSInnerTagPri_Type = Integer32
_CmPrioMapV2PrioMappingCOSInnerTagPri_Object = MibTableColumn
cmPrioMapV2PrioMappingCOSInnerTagPri = _CmPrioMapV2PrioMappingCOSInnerTagPri_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 4),
    _CmPrioMapV2PrioMappingCOSInnerTagPri_Type()
)
cmPrioMapV2PrioMappingCOSInnerTagPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingCOSInnerTagPri.setStatus("current")


class _CmPrioMapV2PrioMappingEncapOuterTagPriority_Type(Integer32):
    """Custom type cmPrioMapV2PrioMappingEncapOuterTagPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmPrioMapV2PrioMappingEncapOuterTagPriority_Type.__name__ = "Integer32"
_CmPrioMapV2PrioMappingEncapOuterTagPriority_Object = MibTableColumn
cmPrioMapV2PrioMappingEncapOuterTagPriority = _CmPrioMapV2PrioMappingEncapOuterTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 5),
    _CmPrioMapV2PrioMappingEncapOuterTagPriority_Type()
)
cmPrioMapV2PrioMappingEncapOuterTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingEncapOuterTagPriority.setStatus("current")


class _CmPrioMapV2PrioMappingEncapInnerTagPriority_Type(Integer32):
    """Custom type cmPrioMapV2PrioMappingEncapInnerTagPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CmPrioMapV2PrioMappingEncapInnerTagPriority_Type.__name__ = "Integer32"
_CmPrioMapV2PrioMappingEncapInnerTagPriority_Object = MibTableColumn
cmPrioMapV2PrioMappingEncapInnerTagPriority = _CmPrioMapV2PrioMappingEncapInnerTagPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 6),
    _CmPrioMapV2PrioMappingEncapInnerTagPriority_Type()
)
cmPrioMapV2PrioMappingEncapInnerTagPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingEncapInnerTagPriority.setStatus("current")


class _CmPrioMapV2PrioMappingEncapOuterDscpValue_Type(Integer32):
    """Custom type cmPrioMapV2PrioMappingEncapOuterDscpValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CmPrioMapV2PrioMappingEncapOuterDscpValue_Type.__name__ = "Integer32"
_CmPrioMapV2PrioMappingEncapOuterDscpValue_Object = MibTableColumn
cmPrioMapV2PrioMappingEncapOuterDscpValue = _CmPrioMapV2PrioMappingEncapOuterDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 7),
    _CmPrioMapV2PrioMappingEncapOuterDscpValue_Type()
)
cmPrioMapV2PrioMappingEncapOuterDscpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingEncapOuterDscpValue.setStatus("current")


class _CmPrioMapV2PrioMappingDscpValue_Type(Integer32):
    """Custom type cmPrioMapV2PrioMappingDscpValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CmPrioMapV2PrioMappingDscpValue_Type.__name__ = "Integer32"
_CmPrioMapV2PrioMappingDscpValue_Object = MibTableColumn
cmPrioMapV2PrioMappingDscpValue = _CmPrioMapV2PrioMappingDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 72, 1, 8),
    _CmPrioMapV2PrioMappingDscpValue_Type()
)
cmPrioMapV2PrioMappingDscpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingDscpValue.setStatus("current")
_CmPrioMapV2PrioMappingPriTable_Object = MibTable
cmPrioMapV2PrioMappingPriTable = _CmPrioMapV2PrioMappingPriTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73)
)
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriTable.setStatus("current")
_CmPrioMapV2PrioMappingPriEntry_Object = MibTableRow
cmPrioMapV2PrioMappingPriEntry = _CmPrioMapV2PrioMappingPriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1)
)
cmPrioMapV2PrioMappingPriEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
    (0, "CM-FACILITY-MIB", "cmPrioMapV2PrioMappingPriIndex"),
)
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriEntry.setStatus("current")
_CmPrioMapV2PrioMappingPriIndex_Type = Integer32
_CmPrioMapV2PrioMappingPriIndex_Object = MibTableColumn
cmPrioMapV2PrioMappingPriIndex = _CmPrioMapV2PrioMappingPriIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1, 1),
    _CmPrioMapV2PrioMappingPriIndex_Type()
)
cmPrioMapV2PrioMappingPriIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriIndex.setStatus("current")
_CmPrioMapV2PrioMappingPriInPrio_Type = Integer32
_CmPrioMapV2PrioMappingPriInPrio_Object = MibTableColumn
cmPrioMapV2PrioMappingPriInPrio = _CmPrioMapV2PrioMappingPriInPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1, 2),
    _CmPrioMapV2PrioMappingPriInPrio_Type()
)
cmPrioMapV2PrioMappingPriInPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriInPrio.setStatus("current")
_CmPrioMapV2PrioMappingPriPrioControl_Type = PrioMapControlType
_CmPrioMapV2PrioMappingPriPrioControl_Object = MibTableColumn
cmPrioMapV2PrioMappingPriPrioControl = _CmPrioMapV2PrioMappingPriPrioControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1, 3),
    _CmPrioMapV2PrioMappingPriPrioControl_Type()
)
cmPrioMapV2PrioMappingPriPrioControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriPrioControl.setStatus("current")
_CmPrioMapV2PrioMappingPriXTagPrio_Type = Integer32
_CmPrioMapV2PrioMappingPriXTagPrio_Object = MibTableColumn
cmPrioMapV2PrioMappingPriXTagPrio = _CmPrioMapV2PrioMappingPriXTagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1, 4),
    _CmPrioMapV2PrioMappingPriXTagPrio_Type()
)
cmPrioMapV2PrioMappingPriXTagPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriXTagPrio.setStatus("current")
_CmPrioMapV2PrioMappingPriCOS_Type = Integer32
_CmPrioMapV2PrioMappingPriCOS_Object = MibTableColumn
cmPrioMapV2PrioMappingPriCOS = _CmPrioMapV2PrioMappingPriCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 73, 1, 5),
    _CmPrioMapV2PrioMappingPriCOS_Type()
)
cmPrioMapV2PrioMappingPriCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmPrioMapV2PrioMappingPriCOS.setStatus("current")
_CmPrioMapV2ProfileAppliedObjTable_Object = MibTable
cmPrioMapV2ProfileAppliedObjTable = _CmPrioMapV2ProfileAppliedObjTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 74)
)
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileAppliedObjTable.setStatus("current")
_CmPrioMapV2ProfileAppliedObjEntry_Object = MibTableRow
cmPrioMapV2ProfileAppliedObjEntry = _CmPrioMapV2ProfileAppliedObjEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 74, 1)
)
cmPrioMapV2ProfileAppliedObjEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
    (0, "CM-FACILITY-MIB", "cmPrioMapV2ProfileAppliedObj"),
)
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileAppliedObjEntry.setStatus("current")
_CmPrioMapV2ProfileAppliedObj_Type = VariablePointer
_CmPrioMapV2ProfileAppliedObj_Object = MibTableColumn
cmPrioMapV2ProfileAppliedObj = _CmPrioMapV2ProfileAppliedObj_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 74, 1, 1),
    _CmPrioMapV2ProfileAppliedObj_Type()
)
cmPrioMapV2ProfileAppliedObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileAppliedObj.setStatus("current")
_CmAccPortExtTable_Object = MibTable
cmAccPortExtTable = _CmAccPortExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75)
)
if mibBuilder.loadTexts:
    cmAccPortExtTable.setStatus("current")
_CmAccPortExtEntry_Object = MibTableRow
cmAccPortExtEntry = _CmAccPortExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1)
)
if mibBuilder.loadTexts:
    cmAccPortExtEntry.setStatus("current")
_CmAccPortExtMcastRateLimitEnabled_Type = TruthValue
_CmAccPortExtMcastRateLimitEnabled_Object = MibTableColumn
cmAccPortExtMcastRateLimitEnabled = _CmAccPortExtMcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 1),
    _CmAccPortExtMcastRateLimitEnabled_Type()
)
cmAccPortExtMcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtMcastRateLimitEnabled.setStatus("current")
_CmAccPortExtMcastRateLimitSpeedLo_Type = Unsigned32
_CmAccPortExtMcastRateLimitSpeedLo_Object = MibTableColumn
cmAccPortExtMcastRateLimitSpeedLo = _CmAccPortExtMcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 2),
    _CmAccPortExtMcastRateLimitSpeedLo_Type()
)
cmAccPortExtMcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtMcastRateLimitSpeedLo.setStatus("current")
_CmAccPortExtMcastRateLimitSpeedHi_Type = Unsigned32
_CmAccPortExtMcastRateLimitSpeedHi_Object = MibTableColumn
cmAccPortExtMcastRateLimitSpeedHi = _CmAccPortExtMcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 3),
    _CmAccPortExtMcastRateLimitSpeedHi_Type()
)
cmAccPortExtMcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtMcastRateLimitSpeedHi.setStatus("current")
_CmAccPortExtBcastRateLimitEnabled_Type = TruthValue
_CmAccPortExtBcastRateLimitEnabled_Object = MibTableColumn
cmAccPortExtBcastRateLimitEnabled = _CmAccPortExtBcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 4),
    _CmAccPortExtBcastRateLimitEnabled_Type()
)
cmAccPortExtBcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtBcastRateLimitEnabled.setStatus("current")
_CmAccPortExtBcastRateLimitSpeedLo_Type = Unsigned32
_CmAccPortExtBcastRateLimitSpeedLo_Object = MibTableColumn
cmAccPortExtBcastRateLimitSpeedLo = _CmAccPortExtBcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 5),
    _CmAccPortExtBcastRateLimitSpeedLo_Type()
)
cmAccPortExtBcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtBcastRateLimitSpeedLo.setStatus("current")
_CmAccPortExtBcastRateLimitSpeedHi_Type = Unsigned32
_CmAccPortExtBcastRateLimitSpeedHi_Object = MibTableColumn
cmAccPortExtBcastRateLimitSpeedHi = _CmAccPortExtBcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 6),
    _CmAccPortExtBcastRateLimitSpeedHi_Type()
)
cmAccPortExtBcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtBcastRateLimitSpeedHi.setStatus("current")
_CmAccPortExtCombinedRateLimitEnabled_Type = TruthValue
_CmAccPortExtCombinedRateLimitEnabled_Object = MibTableColumn
cmAccPortExtCombinedRateLimitEnabled = _CmAccPortExtCombinedRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 7),
    _CmAccPortExtCombinedRateLimitEnabled_Type()
)
cmAccPortExtCombinedRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtCombinedRateLimitEnabled.setStatus("current")
_CmAccPortExtCombinedRateLimitSpeedLo_Type = Unsigned32
_CmAccPortExtCombinedRateLimitSpeedLo_Object = MibTableColumn
cmAccPortExtCombinedRateLimitSpeedLo = _CmAccPortExtCombinedRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 8),
    _CmAccPortExtCombinedRateLimitSpeedLo_Type()
)
cmAccPortExtCombinedRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtCombinedRateLimitSpeedLo.setStatus("current")
_CmAccPortExtCombinedRateLimitSpeedHi_Type = Unsigned32
_CmAccPortExtCombinedRateLimitSpeedHi_Object = MibTableColumn
cmAccPortExtCombinedRateLimitSpeedHi = _CmAccPortExtCombinedRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 9),
    _CmAccPortExtCombinedRateLimitSpeedHi_Type()
)
cmAccPortExtCombinedRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtCombinedRateLimitSpeedHi.setStatus("current")
_CmAccPortExtRefPrioMapProfile_Type = VariablePointer
_CmAccPortExtRefPrioMapProfile_Object = MibTableColumn
cmAccPortExtRefPrioMapProfile = _CmAccPortExtRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 75, 1, 10),
    _CmAccPortExtRefPrioMapProfile_Type()
)
cmAccPortExtRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmAccPortExtRefPrioMapProfile.setStatus("current")
_CmNetPortExtTable_Object = MibTable
cmNetPortExtTable = _CmNetPortExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76)
)
if mibBuilder.loadTexts:
    cmNetPortExtTable.setStatus("current")
_CmNetPortExtEntry_Object = MibTableRow
cmNetPortExtEntry = _CmNetPortExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1)
)
if mibBuilder.loadTexts:
    cmNetPortExtEntry.setStatus("current")
_CmNetPortExtMcastRateLimitEnabled_Type = TruthValue
_CmNetPortExtMcastRateLimitEnabled_Object = MibTableColumn
cmNetPortExtMcastRateLimitEnabled = _CmNetPortExtMcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 1),
    _CmNetPortExtMcastRateLimitEnabled_Type()
)
cmNetPortExtMcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtMcastRateLimitEnabled.setStatus("current")
_CmNetPortExtMcastRateLimitSpeedLo_Type = Unsigned32
_CmNetPortExtMcastRateLimitSpeedLo_Object = MibTableColumn
cmNetPortExtMcastRateLimitSpeedLo = _CmNetPortExtMcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 2),
    _CmNetPortExtMcastRateLimitSpeedLo_Type()
)
cmNetPortExtMcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtMcastRateLimitSpeedLo.setStatus("current")
_CmNetPortExtMcastRateLimitSpeedHi_Type = Unsigned32
_CmNetPortExtMcastRateLimitSpeedHi_Object = MibTableColumn
cmNetPortExtMcastRateLimitSpeedHi = _CmNetPortExtMcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 3),
    _CmNetPortExtMcastRateLimitSpeedHi_Type()
)
cmNetPortExtMcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtMcastRateLimitSpeedHi.setStatus("current")
_CmNetPortExtBcastRateLimitEnabled_Type = TruthValue
_CmNetPortExtBcastRateLimitEnabled_Object = MibTableColumn
cmNetPortExtBcastRateLimitEnabled = _CmNetPortExtBcastRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 4),
    _CmNetPortExtBcastRateLimitEnabled_Type()
)
cmNetPortExtBcastRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtBcastRateLimitEnabled.setStatus("current")
_CmNetPortExtBcastRateLimitSpeedLo_Type = Unsigned32
_CmNetPortExtBcastRateLimitSpeedLo_Object = MibTableColumn
cmNetPortExtBcastRateLimitSpeedLo = _CmNetPortExtBcastRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 5),
    _CmNetPortExtBcastRateLimitSpeedLo_Type()
)
cmNetPortExtBcastRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtBcastRateLimitSpeedLo.setStatus("current")
_CmNetPortExtBcastRateLimitSpeedHi_Type = Unsigned32
_CmNetPortExtBcastRateLimitSpeedHi_Object = MibTableColumn
cmNetPortExtBcastRateLimitSpeedHi = _CmNetPortExtBcastRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 6),
    _CmNetPortExtBcastRateLimitSpeedHi_Type()
)
cmNetPortExtBcastRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtBcastRateLimitSpeedHi.setStatus("current")
_CmNetPortExtCombinedRateLimitEnabled_Type = TruthValue
_CmNetPortExtCombinedRateLimitEnabled_Object = MibTableColumn
cmNetPortExtCombinedRateLimitEnabled = _CmNetPortExtCombinedRateLimitEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 7),
    _CmNetPortExtCombinedRateLimitEnabled_Type()
)
cmNetPortExtCombinedRateLimitEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtCombinedRateLimitEnabled.setStatus("current")
_CmNetPortExtCombinedRateLimitSpeedLo_Type = Unsigned32
_CmNetPortExtCombinedRateLimitSpeedLo_Object = MibTableColumn
cmNetPortExtCombinedRateLimitSpeedLo = _CmNetPortExtCombinedRateLimitSpeedLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 8),
    _CmNetPortExtCombinedRateLimitSpeedLo_Type()
)
cmNetPortExtCombinedRateLimitSpeedLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtCombinedRateLimitSpeedLo.setStatus("current")
_CmNetPortExtCombinedRateLimitSpeedHi_Type = Unsigned32
_CmNetPortExtCombinedRateLimitSpeedHi_Object = MibTableColumn
cmNetPortExtCombinedRateLimitSpeedHi = _CmNetPortExtCombinedRateLimitSpeedHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 9),
    _CmNetPortExtCombinedRateLimitSpeedHi_Type()
)
cmNetPortExtCombinedRateLimitSpeedHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtCombinedRateLimitSpeedHi.setStatus("current")
_CmNetPortExtRefPrioMapProfile_Type = VariablePointer
_CmNetPortExtRefPrioMapProfile_Object = MibTableColumn
cmNetPortExtRefPrioMapProfile = _CmNetPortExtRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 76, 1, 10),
    _CmNetPortExtRefPrioMapProfile_Type()
)
cmNetPortExtRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExtRefPrioMapProfile.setStatus("current")
_F3UsbWIFIDonglePortTable_Object = MibTable
f3UsbWIFIDonglePortTable = _F3UsbWIFIDonglePortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77)
)
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortTable.setStatus("current")
_F3UsbWIFIDonglePortEntry_Object = MibTableRow
f3UsbWIFIDonglePortEntry = _F3UsbWIFIDonglePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1)
)
f3UsbWIFIDonglePortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-ENTITY-MIB", "f3UsbHostIndex"),
)
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortEntry.setStatus("current")
_F3UsbWIFIDonglePortIndex_Type = Integer32
_F3UsbWIFIDonglePortIndex_Object = MibTableColumn
f3UsbWIFIDonglePortIndex = _F3UsbWIFIDonglePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 1),
    _F3UsbWIFIDonglePortIndex_Type()
)
f3UsbWIFIDonglePortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortIndex.setStatus("current")
_F3UsbWIFIDonglePortIfIndex_Type = InterfaceIndex
_F3UsbWIFIDonglePortIfIndex_Object = MibTableColumn
f3UsbWIFIDonglePortIfIndex = _F3UsbWIFIDonglePortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 2),
    _F3UsbWIFIDonglePortIfIndex_Type()
)
f3UsbWIFIDonglePortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortIfIndex.setStatus("current")
_F3UsbWIFIDonglePortEntityIndex_Type = PhysicalIndex
_F3UsbWIFIDonglePortEntityIndex_Object = MibTableColumn
f3UsbWIFIDonglePortEntityIndex = _F3UsbWIFIDonglePortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 3),
    _F3UsbWIFIDonglePortEntityIndex_Type()
)
f3UsbWIFIDonglePortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortEntityIndex.setStatus("current")
_F3UsbWIFIDonglePortAdminState_Type = AdminState
_F3UsbWIFIDonglePortAdminState_Object = MibTableColumn
f3UsbWIFIDonglePortAdminState = _F3UsbWIFIDonglePortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 4),
    _F3UsbWIFIDonglePortAdminState_Type()
)
f3UsbWIFIDonglePortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortAdminState.setStatus("current")
_F3UsbWIFIDonglePortOperationalState_Type = OperationalState
_F3UsbWIFIDonglePortOperationalState_Object = MibTableColumn
f3UsbWIFIDonglePortOperationalState = _F3UsbWIFIDonglePortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 5),
    _F3UsbWIFIDonglePortOperationalState_Type()
)
f3UsbWIFIDonglePortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortOperationalState.setStatus("current")
_F3UsbWIFIDonglePortSecondaryState_Type = SecondaryState
_F3UsbWIFIDonglePortSecondaryState_Object = MibTableColumn
f3UsbWIFIDonglePortSecondaryState = _F3UsbWIFIDonglePortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 6),
    _F3UsbWIFIDonglePortSecondaryState_Type()
)
f3UsbWIFIDonglePortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortSecondaryState.setStatus("current")


class _F3UsbWIFIDonglePortSSID_Type(DisplayString):
    """Custom type f3UsbWIFIDonglePortSSID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_F3UsbWIFIDonglePortSSID_Type.__name__ = "DisplayString"
_F3UsbWIFIDonglePortSSID_Object = MibTableColumn
f3UsbWIFIDonglePortSSID = _F3UsbWIFIDonglePortSSID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 7),
    _F3UsbWIFIDonglePortSSID_Type()
)
f3UsbWIFIDonglePortSSID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortSSID.setStatus("current")
_F3UsbWIFIDonglePortPassword_Type = DisplayString
_F3UsbWIFIDonglePortPassword_Object = MibTableColumn
f3UsbWIFIDonglePortPassword = _F3UsbWIFIDonglePortPassword_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 8),
    _F3UsbWIFIDonglePortPassword_Type()
)
f3UsbWIFIDonglePortPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortPassword.setStatus("current")
_F3UsbWIFIDonglePortEncryption_Type = WIFIEncryptionType
_F3UsbWIFIDonglePortEncryption_Object = MibTableColumn
f3UsbWIFIDonglePortEncryption = _F3UsbWIFIDonglePortEncryption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 9),
    _F3UsbWIFIDonglePortEncryption_Type()
)
f3UsbWIFIDonglePortEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortEncryption.setStatus("current")
_F3UsbWIFIDonglePortIPAddress_Type = IpAddress
_F3UsbWIFIDonglePortIPAddress_Object = MibTableColumn
f3UsbWIFIDonglePortIPAddress = _F3UsbWIFIDonglePortIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 10),
    _F3UsbWIFIDonglePortIPAddress_Type()
)
f3UsbWIFIDonglePortIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortIPAddress.setStatus("current")
_F3UsbWIFIDonglePortwWIFIIPNetMask_Type = IpAddress
_F3UsbWIFIDonglePortwWIFIIPNetMask_Object = MibTableColumn
f3UsbWIFIDonglePortwWIFIIPNetMask = _F3UsbWIFIDonglePortwWIFIIPNetMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 11),
    _F3UsbWIFIDonglePortwWIFIIPNetMask_Type()
)
f3UsbWIFIDonglePortwWIFIIPNetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortwWIFIIPNetMask.setStatus("current")
_F3UsbWIFIDonglePortWIFIDHCPRole_Type = DHCPType
_F3UsbWIFIDonglePortWIFIDHCPRole_Object = MibTableColumn
f3UsbWIFIDonglePortWIFIDHCPRole = _F3UsbWIFIDonglePortWIFIDHCPRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 12),
    _F3UsbWIFIDonglePortWIFIDHCPRole_Type()
)
f3UsbWIFIDonglePortWIFIDHCPRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortWIFIDHCPRole.setStatus("current")
_F3UsbWIFIDonglePortWIFIAllocatedIPFrom_Type = IpAddress
_F3UsbWIFIDonglePortWIFIAllocatedIPFrom_Object = MibTableColumn
f3UsbWIFIDonglePortWIFIAllocatedIPFrom = _F3UsbWIFIDonglePortWIFIAllocatedIPFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 13),
    _F3UsbWIFIDonglePortWIFIAllocatedIPFrom_Type()
)
f3UsbWIFIDonglePortWIFIAllocatedIPFrom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortWIFIAllocatedIPFrom.setStatus("current")
_F3UsbWIFIDonglePortWIFIAllocatedIPEnd_Type = IpAddress
_F3UsbWIFIDonglePortWIFIAllocatedIPEnd_Object = MibTableColumn
f3UsbWIFIDonglePortWIFIAllocatedIPEnd = _F3UsbWIFIDonglePortWIFIAllocatedIPEnd_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 14),
    _F3UsbWIFIDonglePortWIFIAllocatedIPEnd_Type()
)
f3UsbWIFIDonglePortWIFIAllocatedIPEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortWIFIAllocatedIPEnd.setStatus("current")
_F3UsbWIFIDonglePortStorageType_Type = StorageType
_F3UsbWIFIDonglePortStorageType_Object = MibTableColumn
f3UsbWIFIDonglePortStorageType = _F3UsbWIFIDonglePortStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 15),
    _F3UsbWIFIDonglePortStorageType_Type()
)
f3UsbWIFIDonglePortStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortStorageType.setStatus("current")
_F3UsbWIFIDonglePortRowStatus_Type = RowStatus
_F3UsbWIFIDonglePortRowStatus_Object = MibTableColumn
f3UsbWIFIDonglePortRowStatus = _F3UsbWIFIDonglePortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 16),
    _F3UsbWIFIDonglePortRowStatus_Type()
)
f3UsbWIFIDonglePortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortRowStatus.setStatus("current")
_F3UsbWIFIDonglePortAccessdUsers_Type = DisplayString
_F3UsbWIFIDonglePortAccessdUsers_Object = MibTableColumn
f3UsbWIFIDonglePortAccessdUsers = _F3UsbWIFIDonglePortAccessdUsers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 17),
    _F3UsbWIFIDonglePortAccessdUsers_Type()
)
f3UsbWIFIDonglePortAccessdUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortAccessdUsers.setStatus("current")
_F3UsbWIFIDonglePortName_Type = DisplayString
_F3UsbWIFIDonglePortName_Object = MibTableColumn
f3UsbWIFIDonglePortName = _F3UsbWIFIDonglePortName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 77, 1, 18),
    _F3UsbWIFIDonglePortName_Type()
)
f3UsbWIFIDonglePortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3UsbWIFIDonglePortName.setStatus("current")
_Bits8PortGroupTable_Object = MibTable
bits8PortGroupTable = _Bits8PortGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78)
)
if mibBuilder.loadTexts:
    bits8PortGroupTable.setStatus("current")
_Bits8PortGroupEntry_Object = MibTableRow
bits8PortGroupEntry = _Bits8PortGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1)
)
bits8PortGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "bits8PortGroupIndex"),
)
if mibBuilder.loadTexts:
    bits8PortGroupEntry.setStatus("current")


class _Bits8PortGroupIndex_Type(Integer32):
    """Custom type bits8PortGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Bits8PortGroupIndex_Type.__name__ = "Integer32"
_Bits8PortGroupIndex_Object = MibTableColumn
bits8PortGroupIndex = _Bits8PortGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 1),
    _Bits8PortGroupIndex_Type()
)
bits8PortGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bits8PortGroupIndex.setStatus("current")


class _Bits8PortGroupIfIndex_Type(InterfaceIndex):
    """Custom type bits8PortGroupIfIndex based on InterfaceIndex"""
    subtypeSpec = InterfaceIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Bits8PortGroupIfIndex_Type.__name__ = "InterfaceIndex"
_Bits8PortGroupIfIndex_Object = MibTableColumn
bits8PortGroupIfIndex = _Bits8PortGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 2),
    _Bits8PortGroupIfIndex_Type()
)
bits8PortGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bits8PortGroupIfIndex.setStatus("current")
_Bits8PortGroupAdminState_Type = AdminState
_Bits8PortGroupAdminState_Object = MibTableColumn
bits8PortGroupAdminState = _Bits8PortGroupAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 3),
    _Bits8PortGroupAdminState_Type()
)
bits8PortGroupAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupAdminState.setStatus("current")
_Bits8PortGroupOperationalState_Type = OperationalState
_Bits8PortGroupOperationalState_Object = MibTableColumn
bits8PortGroupOperationalState = _Bits8PortGroupOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 4),
    _Bits8PortGroupOperationalState_Type()
)
bits8PortGroupOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bits8PortGroupOperationalState.setStatus("current")
_Bits8PortGroupSecondaryState_Type = SecondaryState
_Bits8PortGroupSecondaryState_Object = MibTableColumn
bits8PortGroupSecondaryState = _Bits8PortGroupSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 5),
    _Bits8PortGroupSecondaryState_Type()
)
bits8PortGroupSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bits8PortGroupSecondaryState.setStatus("current")
_Bits8PortGroupLineType_Type = BitsPortLineType
_Bits8PortGroupLineType_Object = MibTableColumn
bits8PortGroupLineType = _Bits8PortGroupLineType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 6),
    _Bits8PortGroupLineType_Type()
)
bits8PortGroupLineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupLineType.setStatus("current")
_Bits8PortGroupLineCode_Type = BitsPortLineCode
_Bits8PortGroupLineCode_Object = MibTableColumn
bits8PortGroupLineCode = _Bits8PortGroupLineCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 7),
    _Bits8PortGroupLineCode_Type()
)
bits8PortGroupLineCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupLineCode.setStatus("current")
_Bits8PortGroupFrameFormat_Type = BitsFrameFormat
_Bits8PortGroupFrameFormat_Object = MibTableColumn
bits8PortGroupFrameFormat = _Bits8PortGroupFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 8),
    _Bits8PortGroupFrameFormat_Type()
)
bits8PortGroupFrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupFrameFormat.setStatus("current")
_Bits8PortGroupSaBitDesignation_Type = SaBitDesignation
_Bits8PortGroupSaBitDesignation_Object = MibTableColumn
bits8PortGroupSaBitDesignation = _Bits8PortGroupSaBitDesignation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 9),
    _Bits8PortGroupSaBitDesignation_Type()
)
bits8PortGroupSaBitDesignation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupSaBitDesignation.setStatus("current")
_Bits8PortGroupQLModeEnabled_Type = TruthValue
_Bits8PortGroupQLModeEnabled_Object = MibTableColumn
bits8PortGroupQLModeEnabled = _Bits8PortGroupQLModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 10),
    _Bits8PortGroupQLModeEnabled_Type()
)
bits8PortGroupQLModeEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupQLModeEnabled.setStatus("current")
_Bits8PortGroupTransmitQL_Type = SSMQualityLevel
_Bits8PortGroupTransmitQL_Object = MibTableColumn
bits8PortGroupTransmitQL = _Bits8PortGroupTransmitQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 11),
    _Bits8PortGroupTransmitQL_Type()
)
bits8PortGroupTransmitQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bits8PortGroupTransmitQL.setStatus("current")
_Bits8PortGroupSquelchQL_Type = SSMQualityLevel
_Bits8PortGroupSquelchQL_Object = MibTableColumn
bits8PortGroupSquelchQL = _Bits8PortGroupSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 12),
    _Bits8PortGroupSquelchQL_Type()
)
bits8PortGroupSquelchQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupSquelchQL.setStatus("current")
_Bits8PortGroupLineBuildOut_Type = LineBuildOut
_Bits8PortGroupLineBuildOut_Object = MibTableColumn
bits8PortGroupLineBuildOut = _Bits8PortGroupLineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 13),
    _Bits8PortGroupLineBuildOut_Type()
)
bits8PortGroupLineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupLineBuildOut.setStatus("current")
_Bits8PortGroupImpedance_Type = BitsPortImpedanceMode
_Bits8PortGroupImpedance_Object = MibTableColumn
bits8PortGroupImpedance = _Bits8PortGroupImpedance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 14),
    _Bits8PortGroupImpedance_Type()
)
bits8PortGroupImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupImpedance.setStatus("current")
_Bits8PortGroupRowStatus_Type = RowStatus
_Bits8PortGroupRowStatus_Object = MibTableColumn
bits8PortGroupRowStatus = _Bits8PortGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 15),
    _Bits8PortGroupRowStatus_Type()
)
bits8PortGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    bits8PortGroupRowStatus.setStatus("current")
_Bits8PortGroupActivePorts_Type = PortState
_Bits8PortGroupActivePorts_Object = MibTableColumn
bits8PortGroupActivePorts = _Bits8PortGroupActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 16),
    _Bits8PortGroupActivePorts_Type()
)
bits8PortGroupActivePorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupActivePorts.setStatus("current")
_Bits8PortGroupClkIfEnabledPorts_Type = PortState
_Bits8PortGroupClkIfEnabledPorts_Object = MibTableColumn
bits8PortGroupClkIfEnabledPorts = _Bits8PortGroupClkIfEnabledPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 78, 1, 17),
    _Bits8PortGroupClkIfEnabledPorts_Type()
)
bits8PortGroupClkIfEnabledPorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bits8PortGroupClkIfEnabledPorts.setStatus("current")
_Pps16PortGroupTable_Object = MibTable
pps16PortGroupTable = _Pps16PortGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79)
)
if mibBuilder.loadTexts:
    pps16PortGroupTable.setStatus("current")
_Pps16PortGroupEntry_Object = MibTableRow
pps16PortGroupEntry = _Pps16PortGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1)
)
pps16PortGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "pps16PortGroupIndex"),
)
if mibBuilder.loadTexts:
    pps16PortGroupEntry.setStatus("current")


class _Pps16PortGroupIndex_Type(Integer32):
    """Custom type pps16PortGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Pps16PortGroupIndex_Type.__name__ = "Integer32"
_Pps16PortGroupIndex_Object = MibTableColumn
pps16PortGroupIndex = _Pps16PortGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 1),
    _Pps16PortGroupIndex_Type()
)
pps16PortGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupIndex.setStatus("current")
_Pps16PortGroupIfIndex_Type = InterfaceIndex
_Pps16PortGroupIfIndex_Object = MibTableColumn
pps16PortGroupIfIndex = _Pps16PortGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 2),
    _Pps16PortGroupIfIndex_Type()
)
pps16PortGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupIfIndex.setStatus("current")
_Pps16PortGroupAdminState_Type = AdminState
_Pps16PortGroupAdminState_Object = MibTableColumn
pps16PortGroupAdminState = _Pps16PortGroupAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 3),
    _Pps16PortGroupAdminState_Type()
)
pps16PortGroupAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupAdminState.setStatus("current")
_Pps16PortGroupOperationalState_Type = OperationalState
_Pps16PortGroupOperationalState_Object = MibTableColumn
pps16PortGroupOperationalState = _Pps16PortGroupOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 4),
    _Pps16PortGroupOperationalState_Type()
)
pps16PortGroupOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupOperationalState.setStatus("current")
_Pps16PortGroupSecondaryState_Type = SecondaryState
_Pps16PortGroupSecondaryState_Object = MibTableColumn
pps16PortGroupSecondaryState = _Pps16PortGroupSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 5),
    _Pps16PortGroupSecondaryState_Type()
)
pps16PortGroupSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupSecondaryState.setStatus("current")


class _Pps16PortGroupAlias_Type(DisplayString):
    """Custom type pps16PortGroupAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_Pps16PortGroupAlias_Type.__name__ = "DisplayString"
_Pps16PortGroupAlias_Object = MibTableColumn
pps16PortGroupAlias = _Pps16PortGroupAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 6),
    _Pps16PortGroupAlias_Type()
)
pps16PortGroupAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupAlias.setStatus("current")
_Pps16PortGroupSquelchControl_Type = SquelchControl
_Pps16PortGroupSquelchControl_Object = MibTableColumn
pps16PortGroupSquelchControl = _Pps16PortGroupSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 7),
    _Pps16PortGroupSquelchControl_Type()
)
pps16PortGroupSquelchControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupSquelchControl.setStatus("current")
_Pps16PortGroupTODSource_Type = VariablePointer
_Pps16PortGroupTODSource_Object = MibTableColumn
pps16PortGroupTODSource = _Pps16PortGroupTODSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 8),
    _Pps16PortGroupTODSource_Type()
)
pps16PortGroupTODSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupTODSource.setStatus("current")
_Pps16PortGroupDirection_Type = SignalDirectionType
_Pps16PortGroupDirection_Object = MibTableColumn
pps16PortGroupDirection = _Pps16PortGroupDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 9),
    _Pps16PortGroupDirection_Type()
)
pps16PortGroupDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pps16PortGroupDirection.setStatus("current")


class _Pps16PortGroupDelayCompensation_Type(Integer32):
    """Custom type pps16PortGroupDelayCompensation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90),
    )


_Pps16PortGroupDelayCompensation_Type.__name__ = "Integer32"
_Pps16PortGroupDelayCompensation_Object = MibTableColumn
pps16PortGroupDelayCompensation = _Pps16PortGroupDelayCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 10),
    _Pps16PortGroupDelayCompensation_Type()
)
pps16PortGroupDelayCompensation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pps16PortGroupDelayCompensation.setStatus("current")
_Pps16PortGroupRowStatus_Type = RowStatus
_Pps16PortGroupRowStatus_Object = MibTableColumn
pps16PortGroupRowStatus = _Pps16PortGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 79, 1, 11),
    _Pps16PortGroupRowStatus_Type()
)
pps16PortGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pps16PortGroupRowStatus.setStatus("current")
_Clk16PortGroupTable_Object = MibTable
clk16PortGroupTable = _Clk16PortGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80)
)
if mibBuilder.loadTexts:
    clk16PortGroupTable.setStatus("current")
_Clk16PortGroupEntry_Object = MibTableRow
clk16PortGroupEntry = _Clk16PortGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1)
)
clk16PortGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "clk16PortGroupIndex"),
)
if mibBuilder.loadTexts:
    clk16PortGroupEntry.setStatus("current")


class _Clk16PortGroupIndex_Type(Integer32):
    """Custom type clk16PortGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Clk16PortGroupIndex_Type.__name__ = "Integer32"
_Clk16PortGroupIndex_Object = MibTableColumn
clk16PortGroupIndex = _Clk16PortGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 1),
    _Clk16PortGroupIndex_Type()
)
clk16PortGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupIndex.setStatus("current")
_Clk16PortGroupIfIndex_Type = InterfaceIndex
_Clk16PortGroupIfIndex_Object = MibTableColumn
clk16PortGroupIfIndex = _Clk16PortGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 2),
    _Clk16PortGroupIfIndex_Type()
)
clk16PortGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupIfIndex.setStatus("current")
_Clk16PortGroupAdminState_Type = AdminState
_Clk16PortGroupAdminState_Object = MibTableColumn
clk16PortGroupAdminState = _Clk16PortGroupAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 3),
    _Clk16PortGroupAdminState_Type()
)
clk16PortGroupAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupAdminState.setStatus("current")
_Clk16PortGroupOperationalState_Type = OperationalState
_Clk16PortGroupOperationalState_Object = MibTableColumn
clk16PortGroupOperationalState = _Clk16PortGroupOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 4),
    _Clk16PortGroupOperationalState_Type()
)
clk16PortGroupOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupOperationalState.setStatus("current")
_Clk16PortGroupSecondaryState_Type = SecondaryState
_Clk16PortGroupSecondaryState_Object = MibTableColumn
clk16PortGroupSecondaryState = _Clk16PortGroupSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 5),
    _Clk16PortGroupSecondaryState_Type()
)
clk16PortGroupSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupSecondaryState.setStatus("current")


class _Clk16PortGroupAlias_Type(DisplayString):
    """Custom type clk16PortGroupAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_Clk16PortGroupAlias_Type.__name__ = "DisplayString"
_Clk16PortGroupAlias_Object = MibTableColumn
clk16PortGroupAlias = _Clk16PortGroupAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 6),
    _Clk16PortGroupAlias_Type()
)
clk16PortGroupAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupAlias.setStatus("current")
_Clk16PortGroupDirection_Type = SignalDirectionType
_Clk16PortGroupDirection_Object = MibTableColumn
clk16PortGroupDirection = _Clk16PortGroupDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 7),
    _Clk16PortGroupDirection_Type()
)
clk16PortGroupDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupDirection.setStatus("current")
_Clk16PortGroupSquelchControl_Type = SquelchControl
_Clk16PortGroupSquelchControl_Object = MibTableColumn
clk16PortGroupSquelchControl = _Clk16PortGroupSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 8),
    _Clk16PortGroupSquelchControl_Type()
)
clk16PortGroupSquelchControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupSquelchControl.setStatus("current")
_Clk16PortGroupSquelchQL_Type = SSMQualityLevel
_Clk16PortGroupSquelchQL_Object = MibTableColumn
clk16PortGroupSquelchQL = _Clk16PortGroupSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 9),
    _Clk16PortGroupSquelchQL_Type()
)
clk16PortGroupSquelchQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clk16PortGroupSquelchQL.setStatus("current")
_Clk16PortGroupRowStatus_Type = RowStatus
_Clk16PortGroupRowStatus_Object = MibTableColumn
clk16PortGroupRowStatus = _Clk16PortGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 80, 1, 10),
    _Clk16PortGroupRowStatus_Type()
)
clk16PortGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clk16PortGroupRowStatus.setStatus("current")
_TodPps16PortGroupTable_Object = MibTable
todPps16PortGroupTable = _TodPps16PortGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81)
)
if mibBuilder.loadTexts:
    todPps16PortGroupTable.setStatus("current")
_TodPps16PortGroupEntry_Object = MibTableRow
todPps16PortGroupEntry = _TodPps16PortGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1)
)
todPps16PortGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "todPps16PortGroupIndex"),
)
if mibBuilder.loadTexts:
    todPps16PortGroupEntry.setStatus("current")


class _TodPps16PortGroupIndex_Type(Integer32):
    """Custom type todPps16PortGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TodPps16PortGroupIndex_Type.__name__ = "Integer32"
_TodPps16PortGroupIndex_Object = MibTableColumn
todPps16PortGroupIndex = _TodPps16PortGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 1),
    _TodPps16PortGroupIndex_Type()
)
todPps16PortGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupIndex.setStatus("current")
_TodPps16PortGroupIfIndex_Type = InterfaceIndex
_TodPps16PortGroupIfIndex_Object = MibTableColumn
todPps16PortGroupIfIndex = _TodPps16PortGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 2),
    _TodPps16PortGroupIfIndex_Type()
)
todPps16PortGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupIfIndex.setStatus("current")
_TodPps16PortGroupAdminState_Type = AdminState
_TodPps16PortGroupAdminState_Object = MibTableColumn
todPps16PortGroupAdminState = _TodPps16PortGroupAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 3),
    _TodPps16PortGroupAdminState_Type()
)
todPps16PortGroupAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupAdminState.setStatus("current")
_TodPps16PortGroupOperationalState_Type = OperationalState
_TodPps16PortGroupOperationalState_Object = MibTableColumn
todPps16PortGroupOperationalState = _TodPps16PortGroupOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 4),
    _TodPps16PortGroupOperationalState_Type()
)
todPps16PortGroupOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupOperationalState.setStatus("current")
_TodPps16PortGroupSecondaryState_Type = SecondaryState
_TodPps16PortGroupSecondaryState_Object = MibTableColumn
todPps16PortGroupSecondaryState = _TodPps16PortGroupSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 5),
    _TodPps16PortGroupSecondaryState_Type()
)
todPps16PortGroupSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupSecondaryState.setStatus("current")


class _TodPps16PortGroupAlias_Type(DisplayString):
    """Custom type todPps16PortGroupAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_TodPps16PortGroupAlias_Type.__name__ = "DisplayString"
_TodPps16PortGroupAlias_Object = MibTableColumn
todPps16PortGroupAlias = _TodPps16PortGroupAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 6),
    _TodPps16PortGroupAlias_Type()
)
todPps16PortGroupAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupAlias.setStatus("current")
_TodPps16PortGroupSquelchControl_Type = SquelchControl
_TodPps16PortGroupSquelchControl_Object = MibTableColumn
todPps16PortGroupSquelchControl = _TodPps16PortGroupSquelchControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 7),
    _TodPps16PortGroupSquelchControl_Type()
)
todPps16PortGroupSquelchControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupSquelchControl.setStatus("current")
_TodPps16PortGroupSquelchQL_Type = SSMQualityLevel
_TodPps16PortGroupSquelchQL_Object = MibTableColumn
todPps16PortGroupSquelchQL = _TodPps16PortGroupSquelchQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 8),
    _TodPps16PortGroupSquelchQL_Type()
)
todPps16PortGroupSquelchQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupSquelchQL.setStatus("current")
_TodPps16PortGroupTODSource_Type = VariablePointer
_TodPps16PortGroupTODSource_Object = MibTableColumn
todPps16PortGroupTODSource = _TodPps16PortGroupTODSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 9),
    _TodPps16PortGroupTODSource_Type()
)
todPps16PortGroupTODSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupTODSource.setStatus("current")
_TodPps16PortGroupOutputFormat_Type = TODOutputFormat
_TodPps16PortGroupOutputFormat_Object = MibTableColumn
todPps16PortGroupOutputFormat = _TodPps16PortGroupOutputFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 10),
    _TodPps16PortGroupOutputFormat_Type()
)
todPps16PortGroupOutputFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    todPps16PortGroupOutputFormat.setStatus("current")


class _TodPps16PortGroupDelayCompensation_Type(Integer32):
    """Custom type todPps16PortGroupDelayCompensation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90),
    )


_TodPps16PortGroupDelayCompensation_Type.__name__ = "Integer32"
_TodPps16PortGroupDelayCompensation_Object = MibTableColumn
todPps16PortGroupDelayCompensation = _TodPps16PortGroupDelayCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 11),
    _TodPps16PortGroupDelayCompensation_Type()
)
todPps16PortGroupDelayCompensation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    todPps16PortGroupDelayCompensation.setStatus("current")
_TodPps16PortGroupRowStatus_Type = RowStatus
_TodPps16PortGroupRowStatus_Object = MibTableColumn
todPps16PortGroupRowStatus = _TodPps16PortGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 81, 1, 12),
    _TodPps16PortGroupRowStatus_Type()
)
todPps16PortGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    todPps16PortGroupRowStatus.setStatus("current")
_F3PolicerEnvelopeTable_Object = MibTable
f3PolicerEnvelopeTable = _F3PolicerEnvelopeTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82)
)
if mibBuilder.loadTexts:
    f3PolicerEnvelopeTable.setStatus("current")
_F3PolicerEnvelopeEntry_Object = MibTableRow
f3PolicerEnvelopeEntry = _F3PolicerEnvelopeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82, 1)
)
f3PolicerEnvelopeEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "f3PolicerEnvelopeIndex"),
)
if mibBuilder.loadTexts:
    f3PolicerEnvelopeEntry.setStatus("current")
_F3PolicerEnvelopeIndex_Type = Integer32
_F3PolicerEnvelopeIndex_Object = MibTableColumn
f3PolicerEnvelopeIndex = _F3PolicerEnvelopeIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82, 1, 1),
    _F3PolicerEnvelopeIndex_Type()
)
f3PolicerEnvelopeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3PolicerEnvelopeIndex.setStatus("current")
_F3PolicerEnvelopeCouplingFlag_Type = TruthValue
_F3PolicerEnvelopeCouplingFlag_Object = MibTableColumn
f3PolicerEnvelopeCouplingFlag = _F3PolicerEnvelopeCouplingFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82, 1, 2),
    _F3PolicerEnvelopeCouplingFlag_Type()
)
f3PolicerEnvelopeCouplingFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3PolicerEnvelopeCouplingFlag.setStatus("current")
_F3PolicerEnvelopeStorageType_Type = StorageType
_F3PolicerEnvelopeStorageType_Object = MibTableColumn
f3PolicerEnvelopeStorageType = _F3PolicerEnvelopeStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82, 1, 3),
    _F3PolicerEnvelopeStorageType_Type()
)
f3PolicerEnvelopeStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3PolicerEnvelopeStorageType.setStatus("current")
_F3PolicerEnvelopeRowStatus_Type = RowStatus
_F3PolicerEnvelopeRowStatus_Object = MibTableColumn
f3PolicerEnvelopeRowStatus = _F3PolicerEnvelopeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 82, 1, 4),
    _F3PolicerEnvelopeRowStatus_Type()
)
f3PolicerEnvelopeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3PolicerEnvelopeRowStatus.setStatus("current")
_F3EnvelopeAssocPolicerTable_Object = MibTable
f3EnvelopeAssocPolicerTable = _F3EnvelopeAssocPolicerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 83)
)
if mibBuilder.loadTexts:
    f3EnvelopeAssocPolicerTable.setStatus("current")
_F3EnvelopeAssocPolicerEntry_Object = MibTableRow
f3EnvelopeAssocPolicerEntry = _F3EnvelopeAssocPolicerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 83, 1)
)
f3EnvelopeAssocPolicerEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "f3PolicerEnvelopeIndex"),
    (0, "CM-FACILITY-MIB", "f3EnvelopeAssocPolicer"),
)
if mibBuilder.loadTexts:
    f3EnvelopeAssocPolicerEntry.setStatus("current")
_F3EnvelopeAssocPolicer_Type = VariablePointer
_F3EnvelopeAssocPolicer_Object = MibTableColumn
f3EnvelopeAssocPolicer = _F3EnvelopeAssocPolicer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 83, 1, 1),
    _F3EnvelopeAssocPolicer_Type()
)
f3EnvelopeAssocPolicer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3EnvelopeAssocPolicer.setStatus("current")
_CmNetPortExpDEEncTable_Object = MibTable
cmNetPortExpDEEncTable = _CmNetPortExpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84)
)
if mibBuilder.loadTexts:
    cmNetPortExpDEEncTable.setStatus("current")
_CmNetPortExpDEEncEntry_Object = MibTableRow
cmNetPortExpDEEncEntry = _CmNetPortExpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84, 1)
)
cmNetPortExpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortExpDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortExpDEEncEntry.setStatus("current")
_CmNetPortExpDEEncIndex_Type = Integer32
_CmNetPortExpDEEncIndex_Object = MibTableColumn
cmNetPortExpDEEncIndex = _CmNetPortExpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84, 1, 1),
    _CmNetPortExpDEEncIndex_Type()
)
cmNetPortExpDEEncIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortExpDEEncIndex.setStatus("current")
_CmNetPortExpDEEncInPriority_Type = VlanPriority
_CmNetPortExpDEEncInPriority_Object = MibTableColumn
cmNetPortExpDEEncInPriority = _CmNetPortExpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84, 1, 2),
    _CmNetPortExpDEEncInPriority_Type()
)
cmNetPortExpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEEncInPriority.setStatus("current")
_CmNetPortExpDEEncDropIneligiblePrio_Type = VlanPriority
_CmNetPortExpDEEncDropIneligiblePrio_Object = MibTableColumn
cmNetPortExpDEEncDropIneligiblePrio = _CmNetPortExpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84, 1, 3),
    _CmNetPortExpDEEncDropIneligiblePrio_Type()
)
cmNetPortExpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEEncDropIneligiblePrio.setStatus("current")
_CmNetPortExpDEEncDropEligiblePrio_Type = VlanPriority
_CmNetPortExpDEEncDropEligiblePrio_Object = MibTableColumn
cmNetPortExpDEEncDropEligiblePrio = _CmNetPortExpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 84, 1, 4),
    _CmNetPortExpDEEncDropEligiblePrio_Type()
)
cmNetPortExpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEEncDropEligiblePrio.setStatus("current")
_CmNetPortExpDEDecTable_Object = MibTable
cmNetPortExpDEDecTable = _CmNetPortExpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85)
)
if mibBuilder.loadTexts:
    cmNetPortExpDEDecTable.setStatus("current")
_CmNetPortExpDEDecEntry_Object = MibTableRow
cmNetPortExpDEDecEntry = _CmNetPortExpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85, 1)
)
cmNetPortExpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortExpDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortExpDEDecEntry.setStatus("current")
_CmNetPortExpDEDecIndex_Type = Integer32
_CmNetPortExpDEDecIndex_Object = MibTableColumn
cmNetPortExpDEDecIndex = _CmNetPortExpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85, 1, 1),
    _CmNetPortExpDEDecIndex_Type()
)
cmNetPortExpDEDecIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortExpDEDecIndex.setStatus("current")
_CmNetPortExpDEDecInPriority_Type = VlanPriority
_CmNetPortExpDEDecInPriority_Object = MibTableColumn
cmNetPortExpDEDecInPriority = _CmNetPortExpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85, 1, 2),
    _CmNetPortExpDEDecInPriority_Type()
)
cmNetPortExpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEDecInPriority.setStatus("current")
_CmNetPortExpDEDecOutPriority_Type = VlanPriority
_CmNetPortExpDEDecOutPriority_Object = MibTableColumn
cmNetPortExpDEDecOutPriority = _CmNetPortExpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85, 1, 3),
    _CmNetPortExpDEDecOutPriority_Type()
)
cmNetPortExpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEDecOutPriority.setStatus("current")
_CmNetPortExpDEDecDropEligible_Type = TruthValue
_CmNetPortExpDEDecDropEligible_Object = MibTableColumn
cmNetPortExpDEDecDropEligible = _CmNetPortExpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 85, 1, 4),
    _CmNetPortExpDEDecDropEligible_Type()
)
cmNetPortExpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEDecDropEligible.setStatus("current")
_CmNetPortExpDEPairTable_Object = MibTable
cmNetPortExpDEPairTable = _CmNetPortExpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 86)
)
if mibBuilder.loadTexts:
    cmNetPortExpDEPairTable.setStatus("current")
_CmNetPortExpDEPairEntry_Object = MibTableRow
cmNetPortExpDEPairEntry = _CmNetPortExpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 86, 1)
)
cmNetPortExpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortExpDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortExpDEPairEntry.setStatus("current")
_CmNetPortExpDEPairIndex_Type = Integer32
_CmNetPortExpDEPairIndex_Object = MibTableColumn
cmNetPortExpDEPairIndex = _CmNetPortExpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 86, 1, 1),
    _CmNetPortExpDEPairIndex_Type()
)
cmNetPortExpDEPairIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortExpDEPairIndex.setStatus("current")
_CmNetPortExpDEDropIneligiblePrio_Type = VlanPriority
_CmNetPortExpDEDropIneligiblePrio_Object = MibTableColumn
cmNetPortExpDEDropIneligiblePrio = _CmNetPortExpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 86, 1, 2),
    _CmNetPortExpDEDropIneligiblePrio_Type()
)
cmNetPortExpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEDropIneligiblePrio.setStatus("current")
_CmNetPortExpDEDropEligiblePrio_Type = VlanPriority
_CmNetPortExpDEDropEligiblePrio_Object = MibTableColumn
cmNetPortExpDEDropEligiblePrio = _CmNetPortExpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 86, 1, 3),
    _CmNetPortExpDEDropEligiblePrio_Type()
)
cmNetPortExpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortExpDEDropEligiblePrio.setStatus("current")
_CmNetPortIpPrecDEEncTable_Object = MibTable
cmNetPortIpPrecDEEncTable = _CmNetPortIpPrecDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87)
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncTable.setStatus("current")
_CmNetPortIpPrecDEEncEntry_Object = MibTableRow
cmNetPortIpPrecDEEncEntry = _CmNetPortIpPrecDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87, 1)
)
cmNetPortIpPrecDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortIpPrecDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncEntry.setStatus("current")
_CmNetPortIpPrecDEEncIndex_Type = Integer32
_CmNetPortIpPrecDEEncIndex_Object = MibTableColumn
cmNetPortIpPrecDEEncIndex = _CmNetPortIpPrecDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87, 1, 1),
    _CmNetPortIpPrecDEEncIndex_Type()
)
cmNetPortIpPrecDEEncIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncIndex.setStatus("current")
_CmNetPortIpPrecDEEncInPriority_Type = VlanPriority
_CmNetPortIpPrecDEEncInPriority_Object = MibTableColumn
cmNetPortIpPrecDEEncInPriority = _CmNetPortIpPrecDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87, 1, 2),
    _CmNetPortIpPrecDEEncInPriority_Type()
)
cmNetPortIpPrecDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncInPriority.setStatus("current")
_CmNetPortIpPrecDEEncDropIneligiblePrio_Type = VlanPriority
_CmNetPortIpPrecDEEncDropIneligiblePrio_Object = MibTableColumn
cmNetPortIpPrecDEEncDropIneligiblePrio = _CmNetPortIpPrecDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87, 1, 3),
    _CmNetPortIpPrecDEEncDropIneligiblePrio_Type()
)
cmNetPortIpPrecDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncDropIneligiblePrio.setStatus("current")
_CmNetPortIpPrecDEEncDropEligiblePrio_Type = VlanPriority
_CmNetPortIpPrecDEEncDropEligiblePrio_Object = MibTableColumn
cmNetPortIpPrecDEEncDropEligiblePrio = _CmNetPortIpPrecDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 87, 1, 4),
    _CmNetPortIpPrecDEEncDropEligiblePrio_Type()
)
cmNetPortIpPrecDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEEncDropEligiblePrio.setStatus("current")
_CmNetPortIpPrecDEDecTable_Object = MibTable
cmNetPortIpPrecDEDecTable = _CmNetPortIpPrecDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88)
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecTable.setStatus("current")
_CmNetPortIpPrecDEDecEntry_Object = MibTableRow
cmNetPortIpPrecDEDecEntry = _CmNetPortIpPrecDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88, 1)
)
cmNetPortIpPrecDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortIpPrecDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecEntry.setStatus("current")
_CmNetPortIpPrecDEDecIndex_Type = Integer32
_CmNetPortIpPrecDEDecIndex_Object = MibTableColumn
cmNetPortIpPrecDEDecIndex = _CmNetPortIpPrecDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88, 1, 1),
    _CmNetPortIpPrecDEDecIndex_Type()
)
cmNetPortIpPrecDEDecIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecIndex.setStatus("current")
_CmNetPortIpPrecDEDecInPriority_Type = VlanPriority
_CmNetPortIpPrecDEDecInPriority_Object = MibTableColumn
cmNetPortIpPrecDEDecInPriority = _CmNetPortIpPrecDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88, 1, 2),
    _CmNetPortIpPrecDEDecInPriority_Type()
)
cmNetPortIpPrecDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecInPriority.setStatus("current")
_CmNetPortIpPrecDEDecOutPriority_Type = VlanPriority
_CmNetPortIpPrecDEDecOutPriority_Object = MibTableColumn
cmNetPortIpPrecDEDecOutPriority = _CmNetPortIpPrecDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88, 1, 3),
    _CmNetPortIpPrecDEDecOutPriority_Type()
)
cmNetPortIpPrecDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecOutPriority.setStatus("current")
_CmNetPortIpPrecDEDecDropEligible_Type = TruthValue
_CmNetPortIpPrecDEDecDropEligible_Object = MibTableColumn
cmNetPortIpPrecDEDecDropEligible = _CmNetPortIpPrecDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 88, 1, 4),
    _CmNetPortIpPrecDEDecDropEligible_Type()
)
cmNetPortIpPrecDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDecDropEligible.setStatus("current")
_CmNetPortIpPrecDEPairTable_Object = MibTable
cmNetPortIpPrecDEPairTable = _CmNetPortIpPrecDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 89)
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEPairTable.setStatus("current")
_CmNetPortIpPrecDEPairEntry_Object = MibTableRow
cmNetPortIpPrecDEPairEntry = _CmNetPortIpPrecDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 89, 1)
)
cmNetPortIpPrecDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortIpPrecDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEPairEntry.setStatus("current")
_CmNetPortIpPrecDEPairIndex_Type = Integer32
_CmNetPortIpPrecDEPairIndex_Object = MibTableColumn
cmNetPortIpPrecDEPairIndex = _CmNetPortIpPrecDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 89, 1, 1),
    _CmNetPortIpPrecDEPairIndex_Type()
)
cmNetPortIpPrecDEPairIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEPairIndex.setStatus("current")
_CmNetPortIpPrecDEDropIneligiblePrio_Type = VlanPriority
_CmNetPortIpPrecDEDropIneligiblePrio_Object = MibTableColumn
cmNetPortIpPrecDEDropIneligiblePrio = _CmNetPortIpPrecDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 89, 1, 2),
    _CmNetPortIpPrecDEDropIneligiblePrio_Type()
)
cmNetPortIpPrecDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDropIneligiblePrio.setStatus("current")
_CmNetPortIpPrecDEDropEligiblePrio_Type = VlanPriority
_CmNetPortIpPrecDEDropEligiblePrio_Object = MibTableColumn
cmNetPortIpPrecDEDropEligiblePrio = _CmNetPortIpPrecDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 89, 1, 3),
    _CmNetPortIpPrecDEDropEligiblePrio_Type()
)
cmNetPortIpPrecDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortIpPrecDEDropEligiblePrio.setStatus("current")
_CmNetPortEncapPcpDEEncTable_Object = MibTable
cmNetPortEncapPcpDEEncTable = _CmNetPortEncapPcpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90)
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncTable.setStatus("current")
_CmNetPortEncapPcpDEEncEntry_Object = MibTableRow
cmNetPortEncapPcpDEEncEntry = _CmNetPortEncapPcpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90, 1)
)
cmNetPortEncapPcpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortEncapPcpDEEncIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncEntry.setStatus("current")
_CmNetPortEncapPcpDEEncIndex_Type = Integer32
_CmNetPortEncapPcpDEEncIndex_Object = MibTableColumn
cmNetPortEncapPcpDEEncIndex = _CmNetPortEncapPcpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90, 1, 1),
    _CmNetPortEncapPcpDEEncIndex_Type()
)
cmNetPortEncapPcpDEEncIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncIndex.setStatus("current")
_CmNetPortEncapPcpDEEncInPriority_Type = VlanPriority
_CmNetPortEncapPcpDEEncInPriority_Object = MibTableColumn
cmNetPortEncapPcpDEEncInPriority = _CmNetPortEncapPcpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90, 1, 2),
    _CmNetPortEncapPcpDEEncInPriority_Type()
)
cmNetPortEncapPcpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncInPriority.setStatus("current")
_CmNetPortEncapPcpDEEncDropIneligiblePrio_Type = VlanPriority
_CmNetPortEncapPcpDEEncDropIneligiblePrio_Object = MibTableColumn
cmNetPortEncapPcpDEEncDropIneligiblePrio = _CmNetPortEncapPcpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90, 1, 3),
    _CmNetPortEncapPcpDEEncDropIneligiblePrio_Type()
)
cmNetPortEncapPcpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncDropIneligiblePrio.setStatus("current")
_CmNetPortEncapPcpDEEncDropEligiblePrio_Type = VlanPriority
_CmNetPortEncapPcpDEEncDropEligiblePrio_Object = MibTableColumn
cmNetPortEncapPcpDEEncDropEligiblePrio = _CmNetPortEncapPcpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 90, 1, 4),
    _CmNetPortEncapPcpDEEncDropEligiblePrio_Type()
)
cmNetPortEncapPcpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEEncDropEligiblePrio.setStatus("current")
_CmNetPortEncapPcpDEDecTable_Object = MibTable
cmNetPortEncapPcpDEDecTable = _CmNetPortEncapPcpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91)
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecTable.setStatus("current")
_CmNetPortEncapPcpDEDecEntry_Object = MibTableRow
cmNetPortEncapPcpDEDecEntry = _CmNetPortEncapPcpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91, 1)
)
cmNetPortEncapPcpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortEncapPcpDEDecIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecEntry.setStatus("current")
_CmNetPortEncapPcpDEDecIndex_Type = Integer32
_CmNetPortEncapPcpDEDecIndex_Object = MibTableColumn
cmNetPortEncapPcpDEDecIndex = _CmNetPortEncapPcpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91, 1, 1),
    _CmNetPortEncapPcpDEDecIndex_Type()
)
cmNetPortEncapPcpDEDecIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecIndex.setStatus("current")
_CmNetPortEncapPcpDEDecInPriority_Type = VlanPriority
_CmNetPortEncapPcpDEDecInPriority_Object = MibTableColumn
cmNetPortEncapPcpDEDecInPriority = _CmNetPortEncapPcpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91, 1, 2),
    _CmNetPortEncapPcpDEDecInPriority_Type()
)
cmNetPortEncapPcpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecInPriority.setStatus("current")
_CmNetPortEncapPcpDEDecOutPriority_Type = VlanPriority
_CmNetPortEncapPcpDEDecOutPriority_Object = MibTableColumn
cmNetPortEncapPcpDEDecOutPriority = _CmNetPortEncapPcpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91, 1, 3),
    _CmNetPortEncapPcpDEDecOutPriority_Type()
)
cmNetPortEncapPcpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecOutPriority.setStatus("current")
_CmNetPortEncapPcpDEDecDropEligible_Type = TruthValue
_CmNetPortEncapPcpDEDecDropEligible_Object = MibTableColumn
cmNetPortEncapPcpDEDecDropEligible = _CmNetPortEncapPcpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 91, 1, 4),
    _CmNetPortEncapPcpDEDecDropEligible_Type()
)
cmNetPortEncapPcpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDecDropEligible.setStatus("current")
_CmNetPortEncapPcpDEPairTable_Object = MibTable
cmNetPortEncapPcpDEPairTable = _CmNetPortEncapPcpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 92)
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEPairTable.setStatus("current")
_CmNetPortEncapPcpDEPairEntry_Object = MibTableRow
cmNetPortEncapPcpDEPairEntry = _CmNetPortEncapPcpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 92, 1)
)
cmNetPortEncapPcpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
    (0, "CM-FACILITY-MIB", "cmNetPortEncapPcpDEPairIndex"),
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEPairEntry.setStatus("current")
_CmNetPortEncapPcpDEPairIndex_Type = Integer32
_CmNetPortEncapPcpDEPairIndex_Object = MibTableColumn
cmNetPortEncapPcpDEPairIndex = _CmNetPortEncapPcpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 92, 1, 1),
    _CmNetPortEncapPcpDEPairIndex_Type()
)
cmNetPortEncapPcpDEPairIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEPairIndex.setStatus("current")
_CmNetPortEncapPcpDEDropIneligiblePrio_Type = VlanPriority
_CmNetPortEncapPcpDEDropIneligiblePrio_Object = MibTableColumn
cmNetPortEncapPcpDEDropIneligiblePrio = _CmNetPortEncapPcpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 92, 1, 2),
    _CmNetPortEncapPcpDEDropIneligiblePrio_Type()
)
cmNetPortEncapPcpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDropIneligiblePrio.setStatus("current")
_CmNetPortEncapPcpDEDropEligiblePrio_Type = VlanPriority
_CmNetPortEncapPcpDEDropEligiblePrio_Object = MibTableColumn
cmNetPortEncapPcpDEDropEligiblePrio = _CmNetPortEncapPcpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 92, 1, 3),
    _CmNetPortEncapPcpDEDropEligiblePrio_Type()
)
cmNetPortEncapPcpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDEDropEligiblePrio.setStatus("current")
_F3SatelliteTable_Object = MibTable
f3SatelliteTable = _F3SatelliteTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93)
)
if mibBuilder.loadTexts:
    f3SatelliteTable.setStatus("current")
_F3SatelliteEntry_Object = MibTableRow
f3SatelliteEntry = _F3SatelliteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1)
)
f3SatelliteEntry.setIndexNames(
    (0, "CM-FACILITY-MIB", "f3SatelliteIndex"),
)
if mibBuilder.loadTexts:
    f3SatelliteEntry.setStatus("current")


class _F3SatelliteIndex_Type(Unsigned32):
    """Custom type f3SatelliteIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_F3SatelliteIndex_Type.__name__ = "Unsigned32"
_F3SatelliteIndex_Object = MibTableColumn
f3SatelliteIndex = _F3SatelliteIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 1),
    _F3SatelliteIndex_Type()
)
f3SatelliteIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3SatelliteIndex.setStatus("current")
_F3SatelliteInUse_Type = TruthValue
_F3SatelliteInUse_Object = MibTableColumn
f3SatelliteInUse = _F3SatelliteInUse_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 2),
    _F3SatelliteInUse_Type()
)
f3SatelliteInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteInUse.setStatus("current")


class _F3SatelliteSV_Type(Unsigned32):
    """Custom type f3SatelliteSV based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_F3SatelliteSV_Type.__name__ = "Unsigned32"
_F3SatelliteSV_Object = MibTableColumn
f3SatelliteSV = _F3SatelliteSV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 3),
    _F3SatelliteSV_Type()
)
f3SatelliteSV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteSV.setStatus("current")
_F3SatelliteSVType_Type = ConstellationTypesBitMap
_F3SatelliteSVType_Object = MibTableColumn
f3SatelliteSVType = _F3SatelliteSVType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 4),
    _F3SatelliteSVType_Type()
)
f3SatelliteSVType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteSVType.setStatus("current")
_F3SatelliteCNO_Type = Unsigned32
_F3SatelliteCNO_Object = MibTableColumn
f3SatelliteCNO = _F3SatelliteCNO_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 5),
    _F3SatelliteCNO_Type()
)
f3SatelliteCNO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteCNO.setStatus("current")
_F3SatelliteHealth_Type = SatelliteHealth
_F3SatelliteHealth_Object = MibTableColumn
f3SatelliteHealth = _F3SatelliteHealth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 6),
    _F3SatelliteHealth_Type()
)
f3SatelliteHealth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteHealth.setStatus("current")


class _F3SatelliteAzimuth_Type(Unsigned32):
    """Custom type f3SatelliteAzimuth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 360),
    )


_F3SatelliteAzimuth_Type.__name__ = "Unsigned32"
_F3SatelliteAzimuth_Object = MibTableColumn
f3SatelliteAzimuth = _F3SatelliteAzimuth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 7),
    _F3SatelliteAzimuth_Type()
)
f3SatelliteAzimuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteAzimuth.setStatus("current")


class _F3SatelliteElevation_Type(Unsigned32):
    """Custom type f3SatelliteElevation based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90),
    )


_F3SatelliteElevation_Type.__name__ = "Unsigned32"
_F3SatelliteElevation_Object = MibTableColumn
f3SatelliteElevation = _F3SatelliteElevation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 8),
    _F3SatelliteElevation_Type()
)
f3SatelliteElevation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteElevation.setStatus("current")
_F3SatelliteGnssReceiverPort_Type = VariablePointer
_F3SatelliteGnssReceiverPort_Object = MibTableColumn
f3SatelliteGnssReceiverPort = _F3SatelliteGnssReceiverPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 93, 1, 9),
    _F3SatelliteGnssReceiverPort_Type()
)
f3SatelliteGnssReceiverPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3SatelliteGnssReceiverPort.setStatus("current")
_CmEthernetTrafficPortJdsuExtTable_Object = MibTable
cmEthernetTrafficPortJdsuExtTable = _CmEthernetTrafficPortJdsuExtTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 94)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuExtTable.setStatus("current")
_CmEthernetTrafficPortJdsuExtEntry_Object = MibTableRow
cmEthernetTrafficPortJdsuExtEntry = _CmEthernetTrafficPortJdsuExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 94, 1)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuExtEntry.setStatus("current")
_CmEthernetTrafficPortJDSUControlFramesSnoopingEnabled_Type = TruthValue
_CmEthernetTrafficPortJDSUControlFramesSnoopingEnabled_Object = MibTableColumn
cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled = _CmEthernetTrafficPortJDSUControlFramesSnoopingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 94, 1, 1),
    _CmEthernetTrafficPortJDSUControlFramesSnoopingEnabled_Type()
)
cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled.setStatus("current")
_CmEthernetTrafficPortJDSULoopbackVlan_Type = VlanId
_CmEthernetTrafficPortJDSULoopbackVlan_Object = MibTableColumn
cmEthernetTrafficPortJDSULoopbackVlan = _CmEthernetTrafficPortJDSULoopbackVlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 94, 1, 2),
    _CmEthernetTrafficPortJDSULoopbackVlan_Type()
)
cmEthernetTrafficPortJDSULoopbackVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJDSULoopbackVlan.setStatus("current")
_CmEthernetTrafficPortJDSULoopbackVlanList_Type = DisplayString
_CmEthernetTrafficPortJDSULoopbackVlanList_Object = MibTableColumn
cmEthernetTrafficPortJDSULoopbackVlanList = _CmEthernetTrafficPortJDSULoopbackVlanList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 94, 1, 3),
    _CmEthernetTrafficPortJDSULoopbackVlanList_Type()
)
cmEthernetTrafficPortJDSULoopbackVlanList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJDSULoopbackVlanList.setStatus("current")
_F3FpQosShaperTable_Object = MibTable
f3FpQosShaperTable = _F3FpQosShaperTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95)
)
if mibBuilder.loadTexts:
    f3FpQosShaperTable.setStatus("current")
_F3FpQosShaperEntry_Object = MibTableRow
f3FpQosShaperEntry = _F3FpQosShaperEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1)
)
f3FpQosShaperEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "f3FpQosShaperIndex"),
)
if mibBuilder.loadTexts:
    f3FpQosShaperEntry.setStatus("current")


class _F3FpQosShaperIndex_Type(Integer32):
    """Custom type f3FpQosShaperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_F3FpQosShaperIndex_Type.__name__ = "Integer32"
_F3FpQosShaperIndex_Object = MibTableColumn
f3FpQosShaperIndex = _F3FpQosShaperIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 1),
    _F3FpQosShaperIndex_Type()
)
f3FpQosShaperIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3FpQosShaperIndex.setStatus("current")
_F3FpQosShaperAdminState_Type = AdminState
_F3FpQosShaperAdminState_Object = MibTableColumn
f3FpQosShaperAdminState = _F3FpQosShaperAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 2),
    _F3FpQosShaperAdminState_Type()
)
f3FpQosShaperAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperAdminState.setStatus("current")
_F3FpQosShaperOperationalState_Type = OperationalState
_F3FpQosShaperOperationalState_Object = MibTableColumn
f3FpQosShaperOperationalState = _F3FpQosShaperOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 3),
    _F3FpQosShaperOperationalState_Type()
)
f3FpQosShaperOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosShaperOperationalState.setStatus("current")
_F3FpQosShaperSecondaryState_Type = SecondaryState
_F3FpQosShaperSecondaryState_Object = MibTableColumn
f3FpQosShaperSecondaryState = _F3FpQosShaperSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 4),
    _F3FpQosShaperSecondaryState_Type()
)
f3FpQosShaperSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosShaperSecondaryState.setStatus("current")
_F3FpQosShaperCIRLo_Type = Unsigned32
_F3FpQosShaperCIRLo_Object = MibTableColumn
f3FpQosShaperCIRLo = _F3FpQosShaperCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 5),
    _F3FpQosShaperCIRLo_Type()
)
f3FpQosShaperCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperCIRLo.setStatus("current")
_F3FpQosShaperCIRHi_Type = Unsigned32
_F3FpQosShaperCIRHi_Object = MibTableColumn
f3FpQosShaperCIRHi = _F3FpQosShaperCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 6),
    _F3FpQosShaperCIRHi_Type()
)
f3FpQosShaperCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperCIRHi.setStatus("current")
_F3FpQosShaperEIRLo_Type = Unsigned32
_F3FpQosShaperEIRLo_Object = MibTableColumn
f3FpQosShaperEIRLo = _F3FpQosShaperEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 7),
    _F3FpQosShaperEIRLo_Type()
)
f3FpQosShaperEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperEIRLo.setStatus("current")
_F3FpQosShaperEIRHi_Type = Unsigned32
_F3FpQosShaperEIRHi_Object = MibTableColumn
f3FpQosShaperEIRHi = _F3FpQosShaperEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 8),
    _F3FpQosShaperEIRHi_Type()
)
f3FpQosShaperEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperEIRHi.setStatus("current")
_F3FpQosShaperCBS_Type = Unsigned32
_F3FpQosShaperCBS_Object = MibTableColumn
f3FpQosShaperCBS = _F3FpQosShaperCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 9),
    _F3FpQosShaperCBS_Type()
)
f3FpQosShaperCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperCBS.setStatus("current")
_F3FpQosShaperEBS_Type = Unsigned32
_F3FpQosShaperEBS_Object = MibTableColumn
f3FpQosShaperEBS = _F3FpQosShaperEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 10),
    _F3FpQosShaperEBS_Type()
)
f3FpQosShaperEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperEBS.setStatus("current")
_F3FpQosShaperBufferSize_Type = Unsigned32
_F3FpQosShaperBufferSize_Object = MibTableColumn
f3FpQosShaperBufferSize = _F3FpQosShaperBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 11),
    _F3FpQosShaperBufferSize_Type()
)
f3FpQosShaperBufferSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperBufferSize.setStatus("current")


class _F3FpQosShaperCOS_Type(Integer32):
    """Custom type f3FpQosShaperCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_F3FpQosShaperCOS_Type.__name__ = "Integer32"
_F3FpQosShaperCOS_Object = MibTableColumn
f3FpQosShaperCOS = _F3FpQosShaperCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 12),
    _F3FpQosShaperCOS_Type()
)
f3FpQosShaperCOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosShaperCOS.setStatus("current")
_F3FpQosShaperStorageType_Type = StorageType
_F3FpQosShaperStorageType_Object = MibTableColumn
f3FpQosShaperStorageType = _F3FpQosShaperStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 13),
    _F3FpQosShaperStorageType_Type()
)
f3FpQosShaperStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperStorageType.setStatus("current")
_F3FpQosShaperRowStatus_Type = RowStatus
_F3FpQosShaperRowStatus_Object = MibTableColumn
f3FpQosShaperRowStatus = _F3FpQosShaperRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 14),
    _F3FpQosShaperRowStatus_Type()
)
f3FpQosShaperRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosShaperRowStatus.setStatus("current")
_F3FpQosShaperWfqWeight_Type = Integer32
_F3FpQosShaperWfqWeight_Object = MibTableColumn
f3FpQosShaperWfqWeight = _F3FpQosShaperWfqWeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 95, 1, 15),
    _F3FpQosShaperWfqWeight_Type()
)
f3FpQosShaperWfqWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosShaperWfqWeight.setStatus("current")
_F3FpQosPolicerTable_Object = MibTable
f3FpQosPolicerTable = _F3FpQosPolicerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96)
)
if mibBuilder.loadTexts:
    f3FpQosPolicerTable.setStatus("current")
_F3FpQosPolicerEntry_Object = MibTableRow
f3FpQosPolicerEntry = _F3FpQosPolicerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1)
)
f3FpQosPolicerEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "f3FpQosPolicerIndex"),
)
if mibBuilder.loadTexts:
    f3FpQosPolicerEntry.setStatus("current")


class _F3FpQosPolicerIndex_Type(Integer32):
    """Custom type f3FpQosPolicerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_F3FpQosPolicerIndex_Type.__name__ = "Integer32"
_F3FpQosPolicerIndex_Object = MibTableColumn
f3FpQosPolicerIndex = _F3FpQosPolicerIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 1),
    _F3FpQosPolicerIndex_Type()
)
f3FpQosPolicerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3FpQosPolicerIndex.setStatus("current")
_F3FpQosPolicerAdminState_Type = AdminState
_F3FpQosPolicerAdminState_Object = MibTableColumn
f3FpQosPolicerAdminState = _F3FpQosPolicerAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 2),
    _F3FpQosPolicerAdminState_Type()
)
f3FpQosPolicerAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerAdminState.setStatus("current")
_F3FpQosPolicerOperationalState_Type = OperationalState
_F3FpQosPolicerOperationalState_Object = MibTableColumn
f3FpQosPolicerOperationalState = _F3FpQosPolicerOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 3),
    _F3FpQosPolicerOperationalState_Type()
)
f3FpQosPolicerOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosPolicerOperationalState.setStatus("current")
_F3FpQosPolicerSecondaryState_Type = SecondaryState
_F3FpQosPolicerSecondaryState_Object = MibTableColumn
f3FpQosPolicerSecondaryState = _F3FpQosPolicerSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 4),
    _F3FpQosPolicerSecondaryState_Type()
)
f3FpQosPolicerSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosPolicerSecondaryState.setStatus("current")
_F3FpQosPolicerCIRLo_Type = Unsigned32
_F3FpQosPolicerCIRLo_Object = MibTableColumn
f3FpQosPolicerCIRLo = _F3FpQosPolicerCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 5),
    _F3FpQosPolicerCIRLo_Type()
)
f3FpQosPolicerCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerCIRLo.setStatus("current")
_F3FpQosPolicerCIRHi_Type = Unsigned32
_F3FpQosPolicerCIRHi_Object = MibTableColumn
f3FpQosPolicerCIRHi = _F3FpQosPolicerCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 6),
    _F3FpQosPolicerCIRHi_Type()
)
f3FpQosPolicerCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerCIRHi.setStatus("current")
_F3FpQosPolicerEIRLo_Type = Unsigned32
_F3FpQosPolicerEIRLo_Object = MibTableColumn
f3FpQosPolicerEIRLo = _F3FpQosPolicerEIRLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 7),
    _F3FpQosPolicerEIRLo_Type()
)
f3FpQosPolicerEIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerEIRLo.setStatus("current")
_F3FpQosPolicerEIRHi_Type = Unsigned32
_F3FpQosPolicerEIRHi_Object = MibTableColumn
f3FpQosPolicerEIRHi = _F3FpQosPolicerEIRHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 8),
    _F3FpQosPolicerEIRHi_Type()
)
f3FpQosPolicerEIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerEIRHi.setStatus("current")
_F3FpQosPolicerCBS_Type = Integer32
_F3FpQosPolicerCBS_Object = MibTableColumn
f3FpQosPolicerCBS = _F3FpQosPolicerCBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 9),
    _F3FpQosPolicerCBS_Type()
)
f3FpQosPolicerCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerCBS.setStatus("current")
_F3FpQosPolicerEBS_Type = Integer32
_F3FpQosPolicerEBS_Object = MibTableColumn
f3FpQosPolicerEBS = _F3FpQosPolicerEBS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 10),
    _F3FpQosPolicerEBS_Type()
)
f3FpQosPolicerEBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerEBS.setStatus("current")
_F3FpQosPolicerAlgorithm_Type = PolicerAlgorithmType
_F3FpQosPolicerAlgorithm_Object = MibTableColumn
f3FpQosPolicerAlgorithm = _F3FpQosPolicerAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 11),
    _F3FpQosPolicerAlgorithm_Type()
)
f3FpQosPolicerAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FpQosPolicerAlgorithm.setStatus("current")
_F3FpQosPolicerColorMode_Type = PolicerColorMode
_F3FpQosPolicerColorMode_Object = MibTableColumn
f3FpQosPolicerColorMode = _F3FpQosPolicerColorMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 12),
    _F3FpQosPolicerColorMode_Type()
)
f3FpQosPolicerColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerColorMode.setStatus("current")
_F3FpQosPolicerCouplingFlag_Type = TruthValue
_F3FpQosPolicerCouplingFlag_Object = MibTableColumn
f3FpQosPolicerCouplingFlag = _F3FpQosPolicerCouplingFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 13),
    _F3FpQosPolicerCouplingFlag_Type()
)
f3FpQosPolicerCouplingFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerCouplingFlag.setStatus("current")
_F3FpQosPolicerPolicingEnabled_Type = TruthValue
_F3FpQosPolicerPolicingEnabled_Object = MibTableColumn
f3FpQosPolicerPolicingEnabled = _F3FpQosPolicerPolicingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 14),
    _F3FpQosPolicerPolicingEnabled_Type()
)
f3FpQosPolicerPolicingEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerPolicingEnabled.setStatus("current")
_F3FpQosPolicerStorageType_Type = StorageType
_F3FpQosPolicerStorageType_Object = MibTableColumn
f3FpQosPolicerStorageType = _F3FpQosPolicerStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 15),
    _F3FpQosPolicerStorageType_Type()
)
f3FpQosPolicerStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerStorageType.setStatus("current")
_F3FpQosPolicerRowStatus_Type = RowStatus
_F3FpQosPolicerRowStatus_Object = MibTableColumn
f3FpQosPolicerRowStatus = _F3FpQosPolicerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 16),
    _F3FpQosPolicerRowStatus_Type()
)
f3FpQosPolicerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3FpQosPolicerRowStatus.setStatus("current")
_F3FpQosPolicerCIRMaxHi_Type = Unsigned32
_F3FpQosPolicerCIRMaxHi_Object = MibTableColumn
f3FpQosPolicerCIRMaxHi = _F3FpQosPolicerCIRMaxHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 17),
    _F3FpQosPolicerCIRMaxHi_Type()
)
f3FpQosPolicerCIRMaxHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerCIRMaxHi.setStatus("current")
_F3FpQosPolicerCIRMaxLo_Type = Unsigned32
_F3FpQosPolicerCIRMaxLo_Object = MibTableColumn
f3FpQosPolicerCIRMaxLo = _F3FpQosPolicerCIRMaxLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 18),
    _F3FpQosPolicerCIRMaxLo_Type()
)
f3FpQosPolicerCIRMaxLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerCIRMaxLo.setStatus("current")
_F3FpQosPolicerEIRMaxHi_Type = Unsigned32
_F3FpQosPolicerEIRMaxHi_Object = MibTableColumn
f3FpQosPolicerEIRMaxHi = _F3FpQosPolicerEIRMaxHi_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 19),
    _F3FpQosPolicerEIRMaxHi_Type()
)
f3FpQosPolicerEIRMaxHi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerEIRMaxHi.setStatus("current")
_F3FpQosPolicerEIRMaxLo_Type = Unsigned32
_F3FpQosPolicerEIRMaxLo_Object = MibTableColumn
f3FpQosPolicerEIRMaxLo = _F3FpQosPolicerEIRMaxLo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 20),
    _F3FpQosPolicerEIRMaxLo_Type()
)
f3FpQosPolicerEIRMaxLo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerEIRMaxLo.setStatus("current")
_F3FpQosPolicerEnvelopeObject_Type = VariablePointer
_F3FpQosPolicerEnvelopeObject_Object = MibTableColumn
f3FpQosPolicerEnvelopeObject = _F3FpQosPolicerEnvelopeObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 21),
    _F3FpQosPolicerEnvelopeObject_Type()
)
f3FpQosPolicerEnvelopeObject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerEnvelopeObject.setStatus("current")
_F3FpQosPolicerRank_Type = Integer32
_F3FpQosPolicerRank_Object = MibTableColumn
f3FpQosPolicerRank = _F3FpQosPolicerRank_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 96, 1, 22),
    _F3FpQosPolicerRank_Type()
)
f3FpQosPolicerRank.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FpQosPolicerRank.setStatus("current")
_CmEthernetTrafficPortCpdV2Table_Object = MibTable
cmEthernetTrafficPortCpdV2Table = _CmEthernetTrafficPortCpdV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97)
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Table.setStatus("current")
_CmEthernetTrafficPortCpdV2Entry_Object = MibTableRow
cmEthernetTrafficPortCpdV2Entry = _CmEthernetTrafficPortCpdV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1)
)
cmEthernetTrafficPortCpdV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Index"),
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Entry.setStatus("current")
_CmEthernetTrafficPortCpdV2Index_Type = Integer32
_CmEthernetTrafficPortCpdV2Index_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Index = _CmEthernetTrafficPortCpdV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 1),
    _CmEthernetTrafficPortCpdV2Index_Type()
)
cmEthernetTrafficPortCpdV2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Index.setStatus("current")
_CmEthernetTrafficPortCpdV2CiscoGroupDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2CiscoGroupDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2CiscoGroupDispType = _CmEthernetTrafficPortCpdV2CiscoGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 2),
    _CmEthernetTrafficPortCpdV2CiscoGroupDispType_Type()
)
cmEthernetTrafficPortCpdV2CiscoGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2CiscoGroupDispType.setStatus("deprecated")
_CmEthernetTrafficPortCpdV2IslDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2IslDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2IslDispType = _CmEthernetTrafficPortCpdV2IslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 3),
    _CmEthernetTrafficPortCpdV2IslDispType_Type()
)
cmEthernetTrafficPortCpdV2IslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2IslDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PagpDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PagpDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PagpDispType = _CmEthernetTrafficPortCpdV2PagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 4),
    _CmEthernetTrafficPortCpdV2PagpDispType_Type()
)
cmEthernetTrafficPortCpdV2PagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PagpDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2UdldDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2UdldDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2UdldDispType = _CmEthernetTrafficPortCpdV2UdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 5),
    _CmEthernetTrafficPortCpdV2UdldDispType_Type()
)
cmEthernetTrafficPortCpdV2UdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2UdldDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2CdpDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2CdpDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2CdpDispType = _CmEthernetTrafficPortCpdV2CdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 6),
    _CmEthernetTrafficPortCpdV2CdpDispType_Type()
)
cmEthernetTrafficPortCpdV2CdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2CdpDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2VtpDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2VtpDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2VtpDispType = _CmEthernetTrafficPortCpdV2VtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 7),
    _CmEthernetTrafficPortCpdV2VtpDispType_Type()
)
cmEthernetTrafficPortCpdV2VtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2VtpDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2DtpDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2DtpDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2DtpDispType = _CmEthernetTrafficPortCpdV2DtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 8),
    _CmEthernetTrafficPortCpdV2DtpDispType_Type()
)
cmEthernetTrafficPortCpdV2DtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2DtpDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PvstpPlusDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PvstpPlusDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PvstpPlusDispType = _CmEthernetTrafficPortCpdV2PvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 9),
    _CmEthernetTrafficPortCpdV2PvstpPlusDispType_Type()
)
cmEthernetTrafficPortCpdV2PvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PvstpPlusDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2UplinkFastDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2UplinkFastDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2UplinkFastDispType = _CmEthernetTrafficPortCpdV2UplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 10),
    _CmEthernetTrafficPortCpdV2UplinkFastDispType_Type()
)
cmEthernetTrafficPortCpdV2UplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2UplinkFastDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2VlanBridgeDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2VlanBridgeDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2VlanBridgeDispType = _CmEthernetTrafficPortCpdV2VlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 11),
    _CmEthernetTrafficPortCpdV2VlanBridgeDispType_Type()
)
cmEthernetTrafficPortCpdV2VlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2VlanBridgeDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2L2PTDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2L2PTDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2L2PTDispType = _CmEthernetTrafficPortCpdV2L2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 12),
    _CmEthernetTrafficPortCpdV2L2PTDispType_Type()
)
cmEthernetTrafficPortCpdV2L2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2L2PTDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2BridgeGroupDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2BridgeGroupDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2BridgeGroupDispType = _CmEthernetTrafficPortCpdV2BridgeGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 13),
    _CmEthernetTrafficPortCpdV2BridgeGroupDispType_Type()
)
cmEthernetTrafficPortCpdV2BridgeGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2BridgeGroupDispType.setStatus("deprecated")
_CmEthernetTrafficPortCpdV2BPDUDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2BPDUDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2BPDUDispType = _CmEthernetTrafficPortCpdV2BPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 14),
    _CmEthernetTrafficPortCpdV2BPDUDispType_Type()
)
cmEthernetTrafficPortCpdV2BPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2BPDUDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PauseDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PauseDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PauseDispType = _CmEthernetTrafficPortCpdV2PauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 15),
    _CmEthernetTrafficPortCpdV2PauseDispType_Type()
)
cmEthernetTrafficPortCpdV2PauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PauseDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2LACPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2LACPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2LACPDispType = _CmEthernetTrafficPortCpdV2LACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 16),
    _CmEthernetTrafficPortCpdV2LACPDispType_Type()
)
cmEthernetTrafficPortCpdV2LACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2LACPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2LACPMarkerDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2LACPMarkerDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2LACPMarkerDispType = _CmEthernetTrafficPortCpdV2LACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 17),
    _CmEthernetTrafficPortCpdV2LACPMarkerDispType_Type()
)
cmEthernetTrafficPortCpdV2LACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2LACPMarkerDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2EfmOamDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2EfmOamDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2EfmOamDispType = _CmEthernetTrafficPortCpdV2EfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 18),
    _CmEthernetTrafficPortCpdV2EfmOamDispType_Type()
)
cmEthernetTrafficPortCpdV2EfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2EfmOamDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2SSMDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2SSMDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2SSMDispType = _CmEthernetTrafficPortCpdV2SSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 19),
    _CmEthernetTrafficPortCpdV2SSMDispType_Type()
)
cmEthernetTrafficPortCpdV2SSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2SSMDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PortAuthenDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PortAuthenDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PortAuthenDispType = _CmEthernetTrafficPortCpdV2PortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 20),
    _CmEthernetTrafficPortCpdV2PortAuthenDispType_Type()
)
cmEthernetTrafficPortCpdV2PortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PortAuthenDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2BridgeReservedDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2BridgeReservedDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2BridgeReservedDispType = _CmEthernetTrafficPortCpdV2BridgeReservedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 21),
    _CmEthernetTrafficPortCpdV2BridgeReservedDispType_Type()
)
cmEthernetTrafficPortCpdV2BridgeReservedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2BridgeReservedDispType.setStatus("deprecated")
_CmEthernetTrafficPortCpdV2LANBridgesDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2LANBridgesDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2LANBridgesDispType = _CmEthernetTrafficPortCpdV2LANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 22),
    _CmEthernetTrafficPortCpdV2LANBridgesDispType_Type()
)
cmEthernetTrafficPortCpdV2LANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2LANBridgesDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2GARPGroupDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2GARPGroupDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2GARPGroupDispType = _CmEthernetTrafficPortCpdV2GARPGroupDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 23),
    _CmEthernetTrafficPortCpdV2GARPGroupDispType_Type()
)
cmEthernetTrafficPortCpdV2GARPGroupDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2GARPGroupDispType.setStatus("deprecated")
_CmEthernetTrafficPortCpdV2GMRPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2GMRPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2GMRPDispType = _CmEthernetTrafficPortCpdV2GMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 24),
    _CmEthernetTrafficPortCpdV2GMRPDispType_Type()
)
cmEthernetTrafficPortCpdV2GMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2GMRPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2GVRPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2GVRPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2GVRPDispType = _CmEthernetTrafficPortCpdV2GVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 25),
    _CmEthernetTrafficPortCpdV2GVRPDispType_Type()
)
cmEthernetTrafficPortCpdV2GVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2GVRPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2GARPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2GARPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2GARPDispType = _CmEthernetTrafficPortCpdV2GARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 26),
    _CmEthernetTrafficPortCpdV2GARPDispType_Type()
)
cmEthernetTrafficPortCpdV2GARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2GARPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2LLDPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2LLDPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2LLDPDispType = _CmEthernetTrafficPortCpdV2LLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 27),
    _CmEthernetTrafficPortCpdV2LLDPDispType_Type()
)
cmEthernetTrafficPortCpdV2LLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2LLDPDispType.setStatus("deprecated")
_CmEthernetTrafficPortCpdV2ELMIDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2ELMIDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2ELMIDispType = _CmEthernetTrafficPortCpdV2ELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 28),
    _CmEthernetTrafficPortCpdV2ELMIDispType_Type()
)
cmEthernetTrafficPortCpdV2ELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2ELMIDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2L2PTTunnelMac_Type = MacAddress
_CmEthernetTrafficPortCpdV2L2PTTunnelMac_Object = MibTableColumn
cmEthernetTrafficPortCpdV2L2PTTunnelMac = _CmEthernetTrafficPortCpdV2L2PTTunnelMac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 29),
    _CmEthernetTrafficPortCpdV2L2PTTunnelMac_Type()
)
cmEthernetTrafficPortCpdV2L2PTTunnelMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2L2PTTunnelMac.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac00DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac00DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac00DispType = _CmEthernetTrafficPortCpdV2Mac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 30),
    _CmEthernetTrafficPortCpdV2Mac00DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac00DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac01DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac01DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac01DispType = _CmEthernetTrafficPortCpdV2Mac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 31),
    _CmEthernetTrafficPortCpdV2Mac01DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac01DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac02DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac02DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac02DispType = _CmEthernetTrafficPortCpdV2Mac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 32),
    _CmEthernetTrafficPortCpdV2Mac02DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac02DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac03DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac03DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac03DispType = _CmEthernetTrafficPortCpdV2Mac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 33),
    _CmEthernetTrafficPortCpdV2Mac03DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac03DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac04DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac04DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac04DispType = _CmEthernetTrafficPortCpdV2Mac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 34),
    _CmEthernetTrafficPortCpdV2Mac04DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac04DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac05DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac05DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac05DispType = _CmEthernetTrafficPortCpdV2Mac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 35),
    _CmEthernetTrafficPortCpdV2Mac05DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac05DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac06DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac06DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac06DispType = _CmEthernetTrafficPortCpdV2Mac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 36),
    _CmEthernetTrafficPortCpdV2Mac06DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac06DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac07DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac07DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac07DispType = _CmEthernetTrafficPortCpdV2Mac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 37),
    _CmEthernetTrafficPortCpdV2Mac07DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac07DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac08DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac08DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac08DispType = _CmEthernetTrafficPortCpdV2Mac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 38),
    _CmEthernetTrafficPortCpdV2Mac08DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac08DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac09DispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac09DispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac09DispType = _CmEthernetTrafficPortCpdV2Mac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 39),
    _CmEthernetTrafficPortCpdV2Mac09DispType_Type()
)
cmEthernetTrafficPortCpdV2Mac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac09DispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0ADispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0ADispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0ADispType = _CmEthernetTrafficPortCpdV2Mac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 40),
    _CmEthernetTrafficPortCpdV2Mac0ADispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0ADispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0BDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0BDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0BDispType = _CmEthernetTrafficPortCpdV2Mac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 41),
    _CmEthernetTrafficPortCpdV2Mac0BDispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0BDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0CDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0CDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0CDispType = _CmEthernetTrafficPortCpdV2Mac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 42),
    _CmEthernetTrafficPortCpdV2Mac0CDispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0CDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0DDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0DDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0DDispType = _CmEthernetTrafficPortCpdV2Mac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 43),
    _CmEthernetTrafficPortCpdV2Mac0DDispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0DDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0EDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0EDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0EDispType = _CmEthernetTrafficPortCpdV2Mac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 44),
    _CmEthernetTrafficPortCpdV2Mac0EDispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0EDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2Mac0FDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2Mac0FDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2Mac0FDispType = _CmEthernetTrafficPortCpdV2Mac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 45),
    _CmEthernetTrafficPortCpdV2Mac0FDispType_Type()
)
cmEthernetTrafficPortCpdV2Mac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2Mac0FDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2NearestLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2NearestLLDPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2NearestLLDPDispType = _CmEthernetTrafficPortCpdV2NearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 46),
    _CmEthernetTrafficPortCpdV2NearestLLDPDispType_Type()
)
cmEthernetTrafficPortCpdV2NearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2NearestLLDPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2NonTpmrLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2NonTpmrLLDPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType = _CmEthernetTrafficPortCpdV2NonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 47),
    _CmEthernetTrafficPortCpdV2NonTpmrLLDPDispType_Type()
)
cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2CustomerLLDPDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2CustomerLLDPDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2CustomerLLDPDispType = _CmEthernetTrafficPortCpdV2CustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 48),
    _CmEthernetTrafficPortCpdV2CustomerLLDPDispType_Type()
)
cmEthernetTrafficPortCpdV2CustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2CustomerLLDPDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PtpUntaggedDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PtpUntaggedDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PtpUntaggedDispType = _CmEthernetTrafficPortCpdV2PtpUntaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 49),
    _CmEthernetTrafficPortCpdV2PtpUntaggedDispType_Type()
)
cmEthernetTrafficPortCpdV2PtpUntaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PtpUntaggedDispType.setStatus("current")
_CmEthernetTrafficPortCpdV2PtpTaggedDispType_Type = CmControlProtocolDispType
_CmEthernetTrafficPortCpdV2PtpTaggedDispType_Object = MibTableColumn
cmEthernetTrafficPortCpdV2PtpTaggedDispType = _CmEthernetTrafficPortCpdV2PtpTaggedDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 97, 1, 50),
    _CmEthernetTrafficPortCpdV2PtpTaggedDispType_Type()
)
cmEthernetTrafficPortCpdV2PtpTaggedDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetTrafficPortCpdV2PtpTaggedDispType.setStatus("current")
_F3FlowPointCpdV2Table_Object = MibTable
f3FlowPointCpdV2Table = _F3FlowPointCpdV2Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98)
)
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Table.setStatus("current")
_F3FlowPointCpdV2Entry_Object = MibTableRow
f3FlowPointCpdV2Entry = _F3FlowPointCpdV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1)
)
f3FlowPointCpdV2Entry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "f3FlowPointCpdV2Index"),
)
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Entry.setStatus("current")
_F3FlowPointCpdV2Index_Type = Integer32
_F3FlowPointCpdV2Index_Object = MibTableColumn
f3FlowPointCpdV2Index = _F3FlowPointCpdV2Index_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 1),
    _F3FlowPointCpdV2Index_Type()
)
f3FlowPointCpdV2Index.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Index.setStatus("current")
_F3FlowPointCpdV2IslDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2IslDispType_Object = MibTableColumn
f3FlowPointCpdV2IslDispType = _F3FlowPointCpdV2IslDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 2),
    _F3FlowPointCpdV2IslDispType_Type()
)
f3FlowPointCpdV2IslDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2IslDispType.setStatus("current")
_F3FlowPointCpdV2PagpDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2PagpDispType_Object = MibTableColumn
f3FlowPointCpdV2PagpDispType = _F3FlowPointCpdV2PagpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 3),
    _F3FlowPointCpdV2PagpDispType_Type()
)
f3FlowPointCpdV2PagpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2PagpDispType.setStatus("current")
_F3FlowPointCpdV2UdldDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2UdldDispType_Object = MibTableColumn
f3FlowPointCpdV2UdldDispType = _F3FlowPointCpdV2UdldDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 4),
    _F3FlowPointCpdV2UdldDispType_Type()
)
f3FlowPointCpdV2UdldDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2UdldDispType.setStatus("current")
_F3FlowPointCpdV2CdpDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2CdpDispType_Object = MibTableColumn
f3FlowPointCpdV2CdpDispType = _F3FlowPointCpdV2CdpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 5),
    _F3FlowPointCpdV2CdpDispType_Type()
)
f3FlowPointCpdV2CdpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2CdpDispType.setStatus("current")
_F3FlowPointCpdV2VtpDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2VtpDispType_Object = MibTableColumn
f3FlowPointCpdV2VtpDispType = _F3FlowPointCpdV2VtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 6),
    _F3FlowPointCpdV2VtpDispType_Type()
)
f3FlowPointCpdV2VtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2VtpDispType.setStatus("current")
_F3FlowPointCpdV2DtpDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2DtpDispType_Object = MibTableColumn
f3FlowPointCpdV2DtpDispType = _F3FlowPointCpdV2DtpDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 7),
    _F3FlowPointCpdV2DtpDispType_Type()
)
f3FlowPointCpdV2DtpDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2DtpDispType.setStatus("current")
_F3FlowPointCpdV2PvstpPlusDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2PvstpPlusDispType_Object = MibTableColumn
f3FlowPointCpdV2PvstpPlusDispType = _F3FlowPointCpdV2PvstpPlusDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 8),
    _F3FlowPointCpdV2PvstpPlusDispType_Type()
)
f3FlowPointCpdV2PvstpPlusDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2PvstpPlusDispType.setStatus("current")
_F3FlowPointCpdV2UplinkFastDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2UplinkFastDispType_Object = MibTableColumn
f3FlowPointCpdV2UplinkFastDispType = _F3FlowPointCpdV2UplinkFastDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 9),
    _F3FlowPointCpdV2UplinkFastDispType_Type()
)
f3FlowPointCpdV2UplinkFastDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2UplinkFastDispType.setStatus("current")
_F3FlowPointCpdV2VlanBridgeDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2VlanBridgeDispType_Object = MibTableColumn
f3FlowPointCpdV2VlanBridgeDispType = _F3FlowPointCpdV2VlanBridgeDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 10),
    _F3FlowPointCpdV2VlanBridgeDispType_Type()
)
f3FlowPointCpdV2VlanBridgeDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2VlanBridgeDispType.setStatus("current")
_F3FlowPointCpdV2L2PTDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2L2PTDispType_Object = MibTableColumn
f3FlowPointCpdV2L2PTDispType = _F3FlowPointCpdV2L2PTDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 11),
    _F3FlowPointCpdV2L2PTDispType_Type()
)
f3FlowPointCpdV2L2PTDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2L2PTDispType.setStatus("current")
_F3FlowPointCpdV2BPDUDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2BPDUDispType_Object = MibTableColumn
f3FlowPointCpdV2BPDUDispType = _F3FlowPointCpdV2BPDUDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 12),
    _F3FlowPointCpdV2BPDUDispType_Type()
)
f3FlowPointCpdV2BPDUDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2BPDUDispType.setStatus("current")
_F3FlowPointCpdV2PauseDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2PauseDispType_Object = MibTableColumn
f3FlowPointCpdV2PauseDispType = _F3FlowPointCpdV2PauseDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 13),
    _F3FlowPointCpdV2PauseDispType_Type()
)
f3FlowPointCpdV2PauseDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2PauseDispType.setStatus("current")
_F3FlowPointCpdV2LACPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2LACPDispType_Object = MibTableColumn
f3FlowPointCpdV2LACPDispType = _F3FlowPointCpdV2LACPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 14),
    _F3FlowPointCpdV2LACPDispType_Type()
)
f3FlowPointCpdV2LACPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2LACPDispType.setStatus("current")
_F3FlowPointCpdV2LACPMarkerDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2LACPMarkerDispType_Object = MibTableColumn
f3FlowPointCpdV2LACPMarkerDispType = _F3FlowPointCpdV2LACPMarkerDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 15),
    _F3FlowPointCpdV2LACPMarkerDispType_Type()
)
f3FlowPointCpdV2LACPMarkerDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2LACPMarkerDispType.setStatus("current")
_F3FlowPointCpdV2EfmOamDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2EfmOamDispType_Object = MibTableColumn
f3FlowPointCpdV2EfmOamDispType = _F3FlowPointCpdV2EfmOamDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 16),
    _F3FlowPointCpdV2EfmOamDispType_Type()
)
f3FlowPointCpdV2EfmOamDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2EfmOamDispType.setStatus("current")
_F3FlowPointCpdV2SSMDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2SSMDispType_Object = MibTableColumn
f3FlowPointCpdV2SSMDispType = _F3FlowPointCpdV2SSMDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 17),
    _F3FlowPointCpdV2SSMDispType_Type()
)
f3FlowPointCpdV2SSMDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2SSMDispType.setStatus("current")
_F3FlowPointCpdV2PortAuthenDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2PortAuthenDispType_Object = MibTableColumn
f3FlowPointCpdV2PortAuthenDispType = _F3FlowPointCpdV2PortAuthenDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 18),
    _F3FlowPointCpdV2PortAuthenDispType_Type()
)
f3FlowPointCpdV2PortAuthenDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2PortAuthenDispType.setStatus("current")
_F3FlowPointCpdV2LANBridgesDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2LANBridgesDispType_Object = MibTableColumn
f3FlowPointCpdV2LANBridgesDispType = _F3FlowPointCpdV2LANBridgesDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 19),
    _F3FlowPointCpdV2LANBridgesDispType_Type()
)
f3FlowPointCpdV2LANBridgesDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2LANBridgesDispType.setStatus("current")
_F3FlowPointCpdV2GMRPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2GMRPDispType_Object = MibTableColumn
f3FlowPointCpdV2GMRPDispType = _F3FlowPointCpdV2GMRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 20),
    _F3FlowPointCpdV2GMRPDispType_Type()
)
f3FlowPointCpdV2GMRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2GMRPDispType.setStatus("current")
_F3FlowPointCpdV2GVRPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2GVRPDispType_Object = MibTableColumn
f3FlowPointCpdV2GVRPDispType = _F3FlowPointCpdV2GVRPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 21),
    _F3FlowPointCpdV2GVRPDispType_Type()
)
f3FlowPointCpdV2GVRPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2GVRPDispType.setStatus("current")
_F3FlowPointCpdV2GARPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2GARPDispType_Object = MibTableColumn
f3FlowPointCpdV2GARPDispType = _F3FlowPointCpdV2GARPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 22),
    _F3FlowPointCpdV2GARPDispType_Type()
)
f3FlowPointCpdV2GARPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2GARPDispType.setStatus("current")
_F3FlowPointCpdV2ActiveControlProtocols_Type = CmActiveControlProtocolsType
_F3FlowPointCpdV2ActiveControlProtocols_Object = MibTableColumn
f3FlowPointCpdV2ActiveControlProtocols = _F3FlowPointCpdV2ActiveControlProtocols_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 23),
    _F3FlowPointCpdV2ActiveControlProtocols_Type()
)
f3FlowPointCpdV2ActiveControlProtocols.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2ActiveControlProtocols.setStatus("current")
_F3FlowPointCpdV2ELMIDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2ELMIDispType_Object = MibTableColumn
f3FlowPointCpdV2ELMIDispType = _F3FlowPointCpdV2ELMIDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 24),
    _F3FlowPointCpdV2ELMIDispType_Type()
)
f3FlowPointCpdV2ELMIDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2ELMIDispType.setStatus("current")
_F3FlowPointCpdV2Mac00DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac00DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac00DispType = _F3FlowPointCpdV2Mac00DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 25),
    _F3FlowPointCpdV2Mac00DispType_Type()
)
f3FlowPointCpdV2Mac00DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac00DispType.setStatus("current")
_F3FlowPointCpdV2Mac01DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac01DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac01DispType = _F3FlowPointCpdV2Mac01DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 26),
    _F3FlowPointCpdV2Mac01DispType_Type()
)
f3FlowPointCpdV2Mac01DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac01DispType.setStatus("current")
_F3FlowPointCpdV2Mac02DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac02DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac02DispType = _F3FlowPointCpdV2Mac02DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 27),
    _F3FlowPointCpdV2Mac02DispType_Type()
)
f3FlowPointCpdV2Mac02DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac02DispType.setStatus("current")
_F3FlowPointCpdV2Mac03DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac03DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac03DispType = _F3FlowPointCpdV2Mac03DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 28),
    _F3FlowPointCpdV2Mac03DispType_Type()
)
f3FlowPointCpdV2Mac03DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac03DispType.setStatus("current")
_F3FlowPointCpdV2Mac04DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac04DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac04DispType = _F3FlowPointCpdV2Mac04DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 29),
    _F3FlowPointCpdV2Mac04DispType_Type()
)
f3FlowPointCpdV2Mac04DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac04DispType.setStatus("current")
_F3FlowPointCpdV2Mac05DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac05DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac05DispType = _F3FlowPointCpdV2Mac05DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 30),
    _F3FlowPointCpdV2Mac05DispType_Type()
)
f3FlowPointCpdV2Mac05DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac05DispType.setStatus("current")
_F3FlowPointCpdV2Mac06DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac06DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac06DispType = _F3FlowPointCpdV2Mac06DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 31),
    _F3FlowPointCpdV2Mac06DispType_Type()
)
f3FlowPointCpdV2Mac06DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac06DispType.setStatus("current")
_F3FlowPointCpdV2Mac07DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac07DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac07DispType = _F3FlowPointCpdV2Mac07DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 32),
    _F3FlowPointCpdV2Mac07DispType_Type()
)
f3FlowPointCpdV2Mac07DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac07DispType.setStatus("current")
_F3FlowPointCpdV2Mac08DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac08DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac08DispType = _F3FlowPointCpdV2Mac08DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 33),
    _F3FlowPointCpdV2Mac08DispType_Type()
)
f3FlowPointCpdV2Mac08DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac08DispType.setStatus("current")
_F3FlowPointCpdV2Mac09DispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac09DispType_Object = MibTableColumn
f3FlowPointCpdV2Mac09DispType = _F3FlowPointCpdV2Mac09DispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 34),
    _F3FlowPointCpdV2Mac09DispType_Type()
)
f3FlowPointCpdV2Mac09DispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac09DispType.setStatus("current")
_F3FlowPointCpdV2Mac0ADispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0ADispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0ADispType = _F3FlowPointCpdV2Mac0ADispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 35),
    _F3FlowPointCpdV2Mac0ADispType_Type()
)
f3FlowPointCpdV2Mac0ADispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0ADispType.setStatus("current")
_F3FlowPointCpdV2Mac0BDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0BDispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0BDispType = _F3FlowPointCpdV2Mac0BDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 36),
    _F3FlowPointCpdV2Mac0BDispType_Type()
)
f3FlowPointCpdV2Mac0BDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0BDispType.setStatus("current")
_F3FlowPointCpdV2Mac0CDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0CDispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0CDispType = _F3FlowPointCpdV2Mac0CDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 37),
    _F3FlowPointCpdV2Mac0CDispType_Type()
)
f3FlowPointCpdV2Mac0CDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0CDispType.setStatus("current")
_F3FlowPointCpdV2Mac0DDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0DDispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0DDispType = _F3FlowPointCpdV2Mac0DDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 38),
    _F3FlowPointCpdV2Mac0DDispType_Type()
)
f3FlowPointCpdV2Mac0DDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0DDispType.setStatus("current")
_F3FlowPointCpdV2Mac0EDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0EDispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0EDispType = _F3FlowPointCpdV2Mac0EDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 39),
    _F3FlowPointCpdV2Mac0EDispType_Type()
)
f3FlowPointCpdV2Mac0EDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0EDispType.setStatus("current")
_F3FlowPointCpdV2Mac0FDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2Mac0FDispType_Object = MibTableColumn
f3FlowPointCpdV2Mac0FDispType = _F3FlowPointCpdV2Mac0FDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 40),
    _F3FlowPointCpdV2Mac0FDispType_Type()
)
f3FlowPointCpdV2Mac0FDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2Mac0FDispType.setStatus("current")
_F3FlowPointCpdV2NearestLLDPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2NearestLLDPDispType_Object = MibTableColumn
f3FlowPointCpdV2NearestLLDPDispType = _F3FlowPointCpdV2NearestLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 41),
    _F3FlowPointCpdV2NearestLLDPDispType_Type()
)
f3FlowPointCpdV2NearestLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2NearestLLDPDispType.setStatus("current")
_F3FlowPointCpdV2NonTpmrLLDPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2NonTpmrLLDPDispType_Object = MibTableColumn
f3FlowPointCpdV2NonTpmrLLDPDispType = _F3FlowPointCpdV2NonTpmrLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 42),
    _F3FlowPointCpdV2NonTpmrLLDPDispType_Type()
)
f3FlowPointCpdV2NonTpmrLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2NonTpmrLLDPDispType.setStatus("current")
_F3FlowPointCpdV2CustomerLLDPDispType_Type = CmControlProtocolDispType
_F3FlowPointCpdV2CustomerLLDPDispType_Object = MibTableColumn
f3FlowPointCpdV2CustomerLLDPDispType = _F3FlowPointCpdV2CustomerLLDPDispType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 98, 1, 43),
    _F3FlowPointCpdV2CustomerLLDPDispType_Type()
)
f3FlowPointCpdV2CustomerLLDPDispType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3FlowPointCpdV2CustomerLLDPDispType.setStatus("current")
_F3AclRuleTable_Object = MibTable
f3AclRuleTable = _F3AclRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99)
)
if mibBuilder.loadTexts:
    f3AclRuleTable.setStatus("current")
_F3AclRuleEntry_Object = MibTableRow
f3AclRuleEntry = _F3AclRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1)
)
f3AclRuleEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "cmFlowPointIndex"),
    (0, "CM-FACILITY-MIB", "f3AclRuleIndex"),
)
if mibBuilder.loadTexts:
    f3AclRuleEntry.setStatus("current")
_F3AclRuleIndex_Type = Integer32
_F3AclRuleIndex_Object = MibTableColumn
f3AclRuleIndex = _F3AclRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 1),
    _F3AclRuleIndex_Type()
)
f3AclRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3AclRuleIndex.setStatus("current")
_F3AclRuleAdminState_Type = AdminState
_F3AclRuleAdminState_Object = MibTableColumn
f3AclRuleAdminState = _F3AclRuleAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 2),
    _F3AclRuleAdminState_Type()
)
f3AclRuleAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleAdminState.setStatus("current")


class _F3AclRuleAlias_Type(F3DisplayString):
    """Custom type f3AclRuleAlias based on F3DisplayString"""
    subtypeSpec = F3DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_F3AclRuleAlias_Type.__name__ = "F3DisplayString"
_F3AclRuleAlias_Object = MibTableColumn
f3AclRuleAlias = _F3AclRuleAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 3),
    _F3AclRuleAlias_Type()
)
f3AclRuleAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleAlias.setStatus("current")
_F3AclRulePriority_Type = Integer32
_F3AclRulePriority_Object = MibTableColumn
f3AclRulePriority = _F3AclRulePriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 4),
    _F3AclRulePriority_Type()
)
f3AclRulePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRulePriority.setStatus("current")
_F3AclRuleOperation_Type = AclRuleOperation
_F3AclRuleOperation_Object = MibTableColumn
f3AclRuleOperation = _F3AclRuleOperation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 5),
    _F3AclRuleOperation_Type()
)
f3AclRuleOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOperation.setStatus("current")
_F3AclRuleCosOverrideControl_Type = TruthValue
_F3AclRuleCosOverrideControl_Object = MibTableColumn
f3AclRuleCosOverrideControl = _F3AclRuleCosOverrideControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 6),
    _F3AclRuleCosOverrideControl_Type()
)
f3AclRuleCosOverrideControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleCosOverrideControl.setStatus("current")
_F3AclRuleCOS_Type = Integer32
_F3AclRuleCOS_Object = MibTableColumn
f3AclRuleCOS = _F3AclRuleCOS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 7),
    _F3AclRuleCOS_Type()
)
f3AclRuleCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleCOS.setStatus("current")
_F3AclRuleSrcMacAddressControl_Type = TruthValue
_F3AclRuleSrcMacAddressControl_Object = MibTableColumn
f3AclRuleSrcMacAddressControl = _F3AclRuleSrcMacAddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 8),
    _F3AclRuleSrcMacAddressControl_Type()
)
f3AclRuleSrcMacAddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcMacAddressControl.setStatus("current")
_F3AclRuleSrcMacAddress_Type = MacAddress
_F3AclRuleSrcMacAddress_Object = MibTableColumn
f3AclRuleSrcMacAddress = _F3AclRuleSrcMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 9),
    _F3AclRuleSrcMacAddress_Type()
)
f3AclRuleSrcMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcMacAddress.setStatus("current")
_F3AclRuleSrcMacAddressMask_Type = MacAddress
_F3AclRuleSrcMacAddressMask_Object = MibTableColumn
f3AclRuleSrcMacAddressMask = _F3AclRuleSrcMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 10),
    _F3AclRuleSrcMacAddressMask_Type()
)
f3AclRuleSrcMacAddressMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcMacAddressMask.setStatus("current")
_F3AclRuleDstMacAddressControl_Type = TruthValue
_F3AclRuleDstMacAddressControl_Object = MibTableColumn
f3AclRuleDstMacAddressControl = _F3AclRuleDstMacAddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 11),
    _F3AclRuleDstMacAddressControl_Type()
)
f3AclRuleDstMacAddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstMacAddressControl.setStatus("current")
_F3AclRuleDstMacAddress_Type = MacAddress
_F3AclRuleDstMacAddress_Object = MibTableColumn
f3AclRuleDstMacAddress = _F3AclRuleDstMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 12),
    _F3AclRuleDstMacAddress_Type()
)
f3AclRuleDstMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstMacAddress.setStatus("current")
_F3AclRuleDstMacAddressMask_Type = MacAddress
_F3AclRuleDstMacAddressMask_Object = MibTableColumn
f3AclRuleDstMacAddressMask = _F3AclRuleDstMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 13),
    _F3AclRuleDstMacAddressMask_Type()
)
f3AclRuleDstMacAddressMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstMacAddressMask.setStatus("current")
_F3AclRuleOuterVlanVIDControl_Type = TruthValue
_F3AclRuleOuterVlanVIDControl_Object = MibTableColumn
f3AclRuleOuterVlanVIDControl = _F3AclRuleOuterVlanVIDControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 14),
    _F3AclRuleOuterVlanVIDControl_Type()
)
f3AclRuleOuterVlanVIDControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanVIDControl.setStatus("current")
_F3AclRuleOuterVlanVIDLowLimit_Type = VlanId
_F3AclRuleOuterVlanVIDLowLimit_Object = MibTableColumn
f3AclRuleOuterVlanVIDLowLimit = _F3AclRuleOuterVlanVIDLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 15),
    _F3AclRuleOuterVlanVIDLowLimit_Type()
)
f3AclRuleOuterVlanVIDLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanVIDLowLimit.setStatus("current")
_F3AclRuleOuterVlanVIDHighLimit_Type = VlanId
_F3AclRuleOuterVlanVIDHighLimit_Object = MibTableColumn
f3AclRuleOuterVlanVIDHighLimit = _F3AclRuleOuterVlanVIDHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 16),
    _F3AclRuleOuterVlanVIDHighLimit_Type()
)
f3AclRuleOuterVlanVIDHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanVIDHighLimit.setStatus("current")
_F3AclRuleInnerVlanVIDControl_Type = TruthValue
_F3AclRuleInnerVlanVIDControl_Object = MibTableColumn
f3AclRuleInnerVlanVIDControl = _F3AclRuleInnerVlanVIDControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 17),
    _F3AclRuleInnerVlanVIDControl_Type()
)
f3AclRuleInnerVlanVIDControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanVIDControl.setStatus("current")
_F3AclRuleInnerVlanVIDLowLimit_Type = VlanId
_F3AclRuleInnerVlanVIDLowLimit_Object = MibTableColumn
f3AclRuleInnerVlanVIDLowLimit = _F3AclRuleInnerVlanVIDLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 18),
    _F3AclRuleInnerVlanVIDLowLimit_Type()
)
f3AclRuleInnerVlanVIDLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanVIDLowLimit.setStatus("current")
_F3AclRuleInnerVlanVIDHighLimit_Type = VlanId
_F3AclRuleInnerVlanVIDHighLimit_Object = MibTableColumn
f3AclRuleInnerVlanVIDHighLimit = _F3AclRuleInnerVlanVIDHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 19),
    _F3AclRuleInnerVlanVIDHighLimit_Type()
)
f3AclRuleInnerVlanVIDHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanVIDHighLimit.setStatus("current")
_F3AclRuleOuterVlanPcpControl_Type = TruthValue
_F3AclRuleOuterVlanPcpControl_Object = MibTableColumn
f3AclRuleOuterVlanPcpControl = _F3AclRuleOuterVlanPcpControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 20),
    _F3AclRuleOuterVlanPcpControl_Type()
)
f3AclRuleOuterVlanPcpControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanPcpControl.setStatus("current")
_F3AclRuleOuterVlanPcpLowLimit_Type = VlanPriority
_F3AclRuleOuterVlanPcpLowLimit_Object = MibTableColumn
f3AclRuleOuterVlanPcpLowLimit = _F3AclRuleOuterVlanPcpLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 21),
    _F3AclRuleOuterVlanPcpLowLimit_Type()
)
f3AclRuleOuterVlanPcpLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanPcpLowLimit.setStatus("current")
_F3AclRuleOuterVlanPcpHighLimit_Type = VlanPriority
_F3AclRuleOuterVlanPcpHighLimit_Object = MibTableColumn
f3AclRuleOuterVlanPcpHighLimit = _F3AclRuleOuterVlanPcpHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 22),
    _F3AclRuleOuterVlanPcpHighLimit_Type()
)
f3AclRuleOuterVlanPcpHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanPcpHighLimit.setStatus("current")
_F3AclRuleInnerVlanPcpControl_Type = TruthValue
_F3AclRuleInnerVlanPcpControl_Object = MibTableColumn
f3AclRuleInnerVlanPcpControl = _F3AclRuleInnerVlanPcpControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 23),
    _F3AclRuleInnerVlanPcpControl_Type()
)
f3AclRuleInnerVlanPcpControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanPcpControl.setStatus("current")
_F3AclRuleInnerVlanPcpLowLimit_Type = VlanPriority
_F3AclRuleInnerVlanPcpLowLimit_Object = MibTableColumn
f3AclRuleInnerVlanPcpLowLimit = _F3AclRuleInnerVlanPcpLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 24),
    _F3AclRuleInnerVlanPcpLowLimit_Type()
)
f3AclRuleInnerVlanPcpLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanPcpLowLimit.setStatus("current")
_F3AclRuleInnerVlanPcpHighLimit_Type = VlanPriority
_F3AclRuleInnerVlanPcpHighLimit_Object = MibTableColumn
f3AclRuleInnerVlanPcpHighLimit = _F3AclRuleInnerVlanPcpHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 25),
    _F3AclRuleInnerVlanPcpHighLimit_Type()
)
f3AclRuleInnerVlanPcpHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleInnerVlanPcpHighLimit.setStatus("current")
_F3AclRuleOuterVlanDeiControl_Type = TruthValue
_F3AclRuleOuterVlanDeiControl_Object = MibTableColumn
f3AclRuleOuterVlanDeiControl = _F3AclRuleOuterVlanDeiControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 26),
    _F3AclRuleOuterVlanDeiControl_Type()
)
f3AclRuleOuterVlanDeiControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanDeiControl.setStatus("current")


class _F3AclRuleOuterVlanDei_Type(Unsigned32):
    """Custom type f3AclRuleOuterVlanDei based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_F3AclRuleOuterVlanDei_Type.__name__ = "Unsigned32"
_F3AclRuleOuterVlanDei_Object = MibTableColumn
f3AclRuleOuterVlanDei = _F3AclRuleOuterVlanDei_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 27),
    _F3AclRuleOuterVlanDei_Type()
)
f3AclRuleOuterVlanDei.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleOuterVlanDei.setStatus("current")
_F3AclRuleEtherTypeControl_Type = TruthValue
_F3AclRuleEtherTypeControl_Object = MibTableColumn
f3AclRuleEtherTypeControl = _F3AclRuleEtherTypeControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 28),
    _F3AclRuleEtherTypeControl_Type()
)
f3AclRuleEtherTypeControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleEtherTypeControl.setStatus("current")
_F3AclRuleEtherType_Type = Integer32
_F3AclRuleEtherType_Object = MibTableColumn
f3AclRuleEtherType = _F3AclRuleEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 29),
    _F3AclRuleEtherType_Type()
)
f3AclRuleEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleEtherType.setStatus("current")
_F3AclRuleIpv4PriorityControl_Type = TruthValue
_F3AclRuleIpv4PriorityControl_Object = MibTableColumn
f3AclRuleIpv4PriorityControl = _F3AclRuleIpv4PriorityControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 30),
    _F3AclRuleIpv4PriorityControl_Type()
)
f3AclRuleIpv4PriorityControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleIpv4PriorityControl.setStatus("deprecated")
_F3AclRuleIpv4PriorityLowLimit_Type = Integer32
_F3AclRuleIpv4PriorityLowLimit_Object = MibTableColumn
f3AclRuleIpv4PriorityLowLimit = _F3AclRuleIpv4PriorityLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 31),
    _F3AclRuleIpv4PriorityLowLimit_Type()
)
f3AclRuleIpv4PriorityLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleIpv4PriorityLowLimit.setStatus("deprecated")
_F3AclRuleIpv4PriorityHighLimit_Type = Integer32
_F3AclRuleIpv4PriorityHighLimit_Object = MibTableColumn
f3AclRuleIpv4PriorityHighLimit = _F3AclRuleIpv4PriorityHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 32),
    _F3AclRuleIpv4PriorityHighLimit_Type()
)
f3AclRuleIpv4PriorityHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleIpv4PriorityHighLimit.setStatus("deprecated")
_F3AclRuleProtocolControl_Type = TruthValue
_F3AclRuleProtocolControl_Object = MibTableColumn
f3AclRuleProtocolControl = _F3AclRuleProtocolControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 33),
    _F3AclRuleProtocolControl_Type()
)
f3AclRuleProtocolControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleProtocolControl.setStatus("current")
_F3AclRuleProtocolNumber_Type = Integer32
_F3AclRuleProtocolNumber_Object = MibTableColumn
f3AclRuleProtocolNumber = _F3AclRuleProtocolNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 34),
    _F3AclRuleProtocolNumber_Type()
)
f3AclRuleProtocolNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleProtocolNumber.setStatus("current")
_F3AclRuleSrcIpv4AddressControl_Type = TruthValue
_F3AclRuleSrcIpv4AddressControl_Object = MibTableColumn
f3AclRuleSrcIpv4AddressControl = _F3AclRuleSrcIpv4AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 35),
    _F3AclRuleSrcIpv4AddressControl_Type()
)
f3AclRuleSrcIpv4AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv4AddressControl.setStatus("current")
_F3AclRuleSrcIpv4AddressLowLimit_Type = IpAddress
_F3AclRuleSrcIpv4AddressLowLimit_Object = MibTableColumn
f3AclRuleSrcIpv4AddressLowLimit = _F3AclRuleSrcIpv4AddressLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 36),
    _F3AclRuleSrcIpv4AddressLowLimit_Type()
)
f3AclRuleSrcIpv4AddressLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv4AddressLowLimit.setStatus("current")
_F3AclRuleSrcIpv4AddressHighLimit_Type = IpAddress
_F3AclRuleSrcIpv4AddressHighLimit_Object = MibTableColumn
f3AclRuleSrcIpv4AddressHighLimit = _F3AclRuleSrcIpv4AddressHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 37),
    _F3AclRuleSrcIpv4AddressHighLimit_Type()
)
f3AclRuleSrcIpv4AddressHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv4AddressHighLimit.setStatus("current")
_F3AclRuleDstIpv4AddressControl_Type = TruthValue
_F3AclRuleDstIpv4AddressControl_Object = MibTableColumn
f3AclRuleDstIpv4AddressControl = _F3AclRuleDstIpv4AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 38),
    _F3AclRuleDstIpv4AddressControl_Type()
)
f3AclRuleDstIpv4AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv4AddressControl.setStatus("current")
_F3AclRuleDstIpv4AddressLowLimit_Type = IpAddress
_F3AclRuleDstIpv4AddressLowLimit_Object = MibTableColumn
f3AclRuleDstIpv4AddressLowLimit = _F3AclRuleDstIpv4AddressLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 39),
    _F3AclRuleDstIpv4AddressLowLimit_Type()
)
f3AclRuleDstIpv4AddressLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv4AddressLowLimit.setStatus("current")
_F3AclRuleDstIpv4AddressHighLimit_Type = IpAddress
_F3AclRuleDstIpv4AddressHighLimit_Object = MibTableColumn
f3AclRuleDstIpv4AddressHighLimit = _F3AclRuleDstIpv4AddressHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 40),
    _F3AclRuleDstIpv4AddressHighLimit_Type()
)
f3AclRuleDstIpv4AddressHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv4AddressHighLimit.setStatus("current")
_F3AclRuleSrcPortControl_Type = TruthValue
_F3AclRuleSrcPortControl_Object = MibTableColumn
f3AclRuleSrcPortControl = _F3AclRuleSrcPortControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 41),
    _F3AclRuleSrcPortControl_Type()
)
f3AclRuleSrcPortControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcPortControl.setStatus("current")
_F3AclRuleSrcPortLowLimit_Type = Integer32
_F3AclRuleSrcPortLowLimit_Object = MibTableColumn
f3AclRuleSrcPortLowLimit = _F3AclRuleSrcPortLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 42),
    _F3AclRuleSrcPortLowLimit_Type()
)
f3AclRuleSrcPortLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcPortLowLimit.setStatus("current")
_F3AclRuleSrcPortHighLimit_Type = Integer32
_F3AclRuleSrcPortHighLimit_Object = MibTableColumn
f3AclRuleSrcPortHighLimit = _F3AclRuleSrcPortHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 43),
    _F3AclRuleSrcPortHighLimit_Type()
)
f3AclRuleSrcPortHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcPortHighLimit.setStatus("current")
_F3AclRuleDstPortControl_Type = TruthValue
_F3AclRuleDstPortControl_Object = MibTableColumn
f3AclRuleDstPortControl = _F3AclRuleDstPortControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 44),
    _F3AclRuleDstPortControl_Type()
)
f3AclRuleDstPortControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstPortControl.setStatus("current")
_F3AclRuleDstPortLowLimit_Type = Integer32
_F3AclRuleDstPortLowLimit_Object = MibTableColumn
f3AclRuleDstPortLowLimit = _F3AclRuleDstPortLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 45),
    _F3AclRuleDstPortLowLimit_Type()
)
f3AclRuleDstPortLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstPortLowLimit.setStatus("current")
_F3AclRuleDstPortHighLimit_Type = Integer32
_F3AclRuleDstPortHighLimit_Object = MibTableColumn
f3AclRuleDstPortHighLimit = _F3AclRuleDstPortHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 46),
    _F3AclRuleDstPortHighLimit_Type()
)
f3AclRuleDstPortHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstPortHighLimit.setStatus("current")
_F3AclRuleTcpFlagsControl_Type = TruthValue
_F3AclRuleTcpFlagsControl_Object = MibTableColumn
f3AclRuleTcpFlagsControl = _F3AclRuleTcpFlagsControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 47),
    _F3AclRuleTcpFlagsControl_Type()
)
f3AclRuleTcpFlagsControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleTcpFlagsControl.setStatus("current")
_F3AclRuleTcpFlags_Type = Integer32
_F3AclRuleTcpFlags_Object = MibTableColumn
f3AclRuleTcpFlags = _F3AclRuleTcpFlags_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 48),
    _F3AclRuleTcpFlags_Type()
)
f3AclRuleTcpFlags.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleTcpFlags.setStatus("current")
_F3AclRuleStorageType_Type = StorageType
_F3AclRuleStorageType_Object = MibTableColumn
f3AclRuleStorageType = _F3AclRuleStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 49),
    _F3AclRuleStorageType_Type()
)
f3AclRuleStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3AclRuleStorageType.setStatus("current")
_F3AclRuleRowStatus_Type = RowStatus
_F3AclRuleRowStatus_Object = MibTableColumn
f3AclRuleRowStatus = _F3AclRuleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 50),
    _F3AclRuleRowStatus_Type()
)
f3AclRuleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    f3AclRuleRowStatus.setStatus("current")
_F3AclRuleActive_Type = TruthValue
_F3AclRuleActive_Object = MibTableColumn
f3AclRuleActive = _F3AclRuleActive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 51),
    _F3AclRuleActive_Type()
)
f3AclRuleActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleActive.setStatus("current")
_F3AclRuleSrcIpv6AddressControl_Type = TruthValue
_F3AclRuleSrcIpv6AddressControl_Object = MibTableColumn
f3AclRuleSrcIpv6AddressControl = _F3AclRuleSrcIpv6AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 52),
    _F3AclRuleSrcIpv6AddressControl_Type()
)
f3AclRuleSrcIpv6AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv6AddressControl.setStatus("current")
_F3AclRuleSrcIpv6Address_Type = Ipv6Address
_F3AclRuleSrcIpv6Address_Object = MibTableColumn
f3AclRuleSrcIpv6Address = _F3AclRuleSrcIpv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 53),
    _F3AclRuleSrcIpv6Address_Type()
)
f3AclRuleSrcIpv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv6Address.setStatus("current")


class _F3AclRuleSrcIpv6AddressPrefixLen_Type(Integer32):
    """Custom type f3AclRuleSrcIpv6AddressPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_F3AclRuleSrcIpv6AddressPrefixLen_Type.__name__ = "Integer32"
_F3AclRuleSrcIpv6AddressPrefixLen_Object = MibTableColumn
f3AclRuleSrcIpv6AddressPrefixLen = _F3AclRuleSrcIpv6AddressPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 54),
    _F3AclRuleSrcIpv6AddressPrefixLen_Type()
)
f3AclRuleSrcIpv6AddressPrefixLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleSrcIpv6AddressPrefixLen.setStatus("current")
_F3AclRuleDstIpv6AddressControl_Type = TruthValue
_F3AclRuleDstIpv6AddressControl_Object = MibTableColumn
f3AclRuleDstIpv6AddressControl = _F3AclRuleDstIpv6AddressControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 55),
    _F3AclRuleDstIpv6AddressControl_Type()
)
f3AclRuleDstIpv6AddressControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv6AddressControl.setStatus("current")
_F3AclRuleDstIpv6Address_Type = Ipv6Address
_F3AclRuleDstIpv6Address_Object = MibTableColumn
f3AclRuleDstIpv6Address = _F3AclRuleDstIpv6Address_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 56),
    _F3AclRuleDstIpv6Address_Type()
)
f3AclRuleDstIpv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv6Address.setStatus("current")


class _F3AclRuleDstIpv6AddressPrefixLen_Type(Integer32):
    """Custom type f3AclRuleDstIpv6AddressPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_F3AclRuleDstIpv6AddressPrefixLen_Type.__name__ = "Integer32"
_F3AclRuleDstIpv6AddressPrefixLen_Object = MibTableColumn
f3AclRuleDstIpv6AddressPrefixLen = _F3AclRuleDstIpv6AddressPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 57),
    _F3AclRuleDstIpv6AddressPrefixLen_Type()
)
f3AclRuleDstIpv6AddressPrefixLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleDstIpv6AddressPrefixLen.setStatus("current")
_F3AclRuleIpV6FlowLabelControl_Type = TruthValue
_F3AclRuleIpV6FlowLabelControl_Object = MibTableColumn
f3AclRuleIpV6FlowLabelControl = _F3AclRuleIpV6FlowLabelControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 58),
    _F3AclRuleIpV6FlowLabelControl_Type()
)
f3AclRuleIpV6FlowLabelControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleIpV6FlowLabelControl.setStatus("current")
_F3AclRuleIpV6FlowLabel_Type = Integer32
_F3AclRuleIpV6FlowLabel_Object = MibTableColumn
f3AclRuleIpV6FlowLabel = _F3AclRuleIpV6FlowLabel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 59),
    _F3AclRuleIpV6FlowLabel_Type()
)
f3AclRuleIpV6FlowLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRuleIpV6FlowLabel.setStatus("current")
_F3AclRulePriorityControl_Type = TruthValue
_F3AclRulePriorityControl_Object = MibTableColumn
f3AclRulePriorityControl = _F3AclRulePriorityControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 60),
    _F3AclRulePriorityControl_Type()
)
f3AclRulePriorityControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRulePriorityControl.setStatus("deprecated")
_F3AclRulePriorityLowLimit_Type = Integer32
_F3AclRulePriorityLowLimit_Object = MibTableColumn
f3AclRulePriorityLowLimit = _F3AclRulePriorityLowLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 61),
    _F3AclRulePriorityLowLimit_Type()
)
f3AclRulePriorityLowLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRulePriorityLowLimit.setStatus("deprecated")
_F3AclRulePriorityHighLimit_Type = Integer32
_F3AclRulePriorityHighLimit_Object = MibTableColumn
f3AclRulePriorityHighLimit = _F3AclRulePriorityHighLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 99, 1, 62),
    _F3AclRulePriorityHighLimit_Type()
)
f3AclRulePriorityHighLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3AclRulePriorityHighLimit.setStatus("deprecated")
_F3EthernetTrafficPortExpDEEncTable_Object = MibTable
f3EthernetTrafficPortExpDEEncTable = _F3EthernetTrafficPortExpDEEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100)
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncTable.setStatus("current")
_F3EthernetTrafficPortExpDEEncEntry_Object = MibTableRow
f3EthernetTrafficPortExpDEEncEntry = _F3EthernetTrafficPortExpDEEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100, 1)
)
f3EthernetTrafficPortExpDEEncEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEEncIndex"),
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncEntry.setStatus("current")
_F3EthernetTrafficPortExpDEEncIndex_Type = Integer32
_F3EthernetTrafficPortExpDEEncIndex_Object = MibTableColumn
f3EthernetTrafficPortExpDEEncIndex = _F3EthernetTrafficPortExpDEEncIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100, 1, 1),
    _F3EthernetTrafficPortExpDEEncIndex_Type()
)
f3EthernetTrafficPortExpDEEncIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncIndex.setStatus("current")
_F3EthernetTrafficPortExpDEEncInPriority_Type = VlanPriority
_F3EthernetTrafficPortExpDEEncInPriority_Object = MibTableColumn
f3EthernetTrafficPortExpDEEncInPriority = _F3EthernetTrafficPortExpDEEncInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100, 1, 2),
    _F3EthernetTrafficPortExpDEEncInPriority_Type()
)
f3EthernetTrafficPortExpDEEncInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncInPriority.setStatus("current")
_F3EthernetTrafficPortExpDEEncDropIneligiblePrio_Type = VlanPriority
_F3EthernetTrafficPortExpDEEncDropIneligiblePrio_Object = MibTableColumn
f3EthernetTrafficPortExpDEEncDropIneligiblePrio = _F3EthernetTrafficPortExpDEEncDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100, 1, 3),
    _F3EthernetTrafficPortExpDEEncDropIneligiblePrio_Type()
)
f3EthernetTrafficPortExpDEEncDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncDropIneligiblePrio.setStatus("current")
_F3EthernetTrafficPortExpDEEncDropEligiblePrio_Type = VlanPriority
_F3EthernetTrafficPortExpDEEncDropEligiblePrio_Object = MibTableColumn
f3EthernetTrafficPortExpDEEncDropEligiblePrio = _F3EthernetTrafficPortExpDEEncDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 100, 1, 4),
    _F3EthernetTrafficPortExpDEEncDropEligiblePrio_Type()
)
f3EthernetTrafficPortExpDEEncDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEEncDropEligiblePrio.setStatus("current")
_F3EthernetTrafficPortExpDEDecTable_Object = MibTable
f3EthernetTrafficPortExpDEDecTable = _F3EthernetTrafficPortExpDEDecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101)
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecTable.setStatus("current")
_F3EthernetTrafficPortExpDEDecEntry_Object = MibTableRow
f3EthernetTrafficPortExpDEDecEntry = _F3EthernetTrafficPortExpDEDecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101, 1)
)
f3EthernetTrafficPortExpDEDecEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDecIndex"),
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecEntry.setStatus("current")
_F3EthernetTrafficPortExpDEDecIndex_Type = Integer32
_F3EthernetTrafficPortExpDEDecIndex_Object = MibTableColumn
f3EthernetTrafficPortExpDEDecIndex = _F3EthernetTrafficPortExpDEDecIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101, 1, 1),
    _F3EthernetTrafficPortExpDEDecIndex_Type()
)
f3EthernetTrafficPortExpDEDecIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecIndex.setStatus("current")
_F3EthernetTrafficPortExpDEDecInPriority_Type = VlanPriority
_F3EthernetTrafficPortExpDEDecInPriority_Object = MibTableColumn
f3EthernetTrafficPortExpDEDecInPriority = _F3EthernetTrafficPortExpDEDecInPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101, 1, 2),
    _F3EthernetTrafficPortExpDEDecInPriority_Type()
)
f3EthernetTrafficPortExpDEDecInPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecInPriority.setStatus("current")
_F3EthernetTrafficPortExpDEDecOutPriority_Type = VlanPriority
_F3EthernetTrafficPortExpDEDecOutPriority_Object = MibTableColumn
f3EthernetTrafficPortExpDEDecOutPriority = _F3EthernetTrafficPortExpDEDecOutPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101, 1, 3),
    _F3EthernetTrafficPortExpDEDecOutPriority_Type()
)
f3EthernetTrafficPortExpDEDecOutPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecOutPriority.setStatus("current")
_F3EthernetTrafficPortExpDEDecDropEligible_Type = TruthValue
_F3EthernetTrafficPortExpDEDecDropEligible_Object = MibTableColumn
f3EthernetTrafficPortExpDEDecDropEligible = _F3EthernetTrafficPortExpDEDecDropEligible_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 101, 1, 4),
    _F3EthernetTrafficPortExpDEDecDropEligible_Type()
)
f3EthernetTrafficPortExpDEDecDropEligible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDecDropEligible.setStatus("current")
_F3EthernetTrafficPortExpDEPairTable_Object = MibTable
f3EthernetTrafficPortExpDEPairTable = _F3EthernetTrafficPortExpDEPairTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 102)
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEPairTable.setStatus("current")
_F3EthernetTrafficPortExpDEPairEntry_Object = MibTableRow
f3EthernetTrafficPortExpDEPairEntry = _F3EthernetTrafficPortExpDEPairEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 102, 1)
)
f3EthernetTrafficPortExpDEPairEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
    (0, "CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEPairIndex"),
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEPairEntry.setStatus("current")
_F3EthernetTrafficPortExpDEPairIndex_Type = Integer32
_F3EthernetTrafficPortExpDEPairIndex_Object = MibTableColumn
f3EthernetTrafficPortExpDEPairIndex = _F3EthernetTrafficPortExpDEPairIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 102, 1, 1),
    _F3EthernetTrafficPortExpDEPairIndex_Type()
)
f3EthernetTrafficPortExpDEPairIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEPairIndex.setStatus("current")
_F3EthernetTrafficPortExpDEDropIneligiblePrio_Type = VlanPriority
_F3EthernetTrafficPortExpDEDropIneligiblePrio_Object = MibTableColumn
f3EthernetTrafficPortExpDEDropIneligiblePrio = _F3EthernetTrafficPortExpDEDropIneligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 102, 1, 2),
    _F3EthernetTrafficPortExpDEDropIneligiblePrio_Type()
)
f3EthernetTrafficPortExpDEDropIneligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDropIneligiblePrio.setStatus("current")
_F3EthernetTrafficPortExpDEDropEligiblePrio_Type = VlanPriority
_F3EthernetTrafficPortExpDEDropEligiblePrio_Object = MibTableColumn
f3EthernetTrafficPortExpDEDropEligiblePrio = _F3EthernetTrafficPortExpDEDropEligiblePrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 102, 1, 3),
    _F3EthernetTrafficPortExpDEDropEligiblePrio_Type()
)
f3EthernetTrafficPortExpDEDropEligiblePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDEDropEligiblePrio.setStatus("current")
_CmEthernetNetPortPppoeParamTable_Object = MibTable
cmEthernetNetPortPppoeParamTable = _CmEthernetNetPortPppoeParamTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeParamTable.setStatus("current")
_CmEthernetNetPortPppoeParamEntry_Object = MibTableRow
cmEthernetNetPortPppoeParamEntry = _CmEthernetNetPortPppoeParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeParamEntry.setStatus("current")
_CmEthernetNetPortPppoeOuterVlanControl_Type = TruthValue
_CmEthernetNetPortPppoeOuterVlanControl_Object = MibTableColumn
cmEthernetNetPortPppoeOuterVlanControl = _CmEthernetNetPortPppoeOuterVlanControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 1),
    _CmEthernetNetPortPppoeOuterVlanControl_Type()
)
cmEthernetNetPortPppoeOuterVlanControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeOuterVlanControl.setStatus("current")
_CmEthernetNetPortPppoeOuterVlanEtherType_Type = Unsigned32
_CmEthernetNetPortPppoeOuterVlanEtherType_Object = MibTableColumn
cmEthernetNetPortPppoeOuterVlanEtherType = _CmEthernetNetPortPppoeOuterVlanEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 2),
    _CmEthernetNetPortPppoeOuterVlanEtherType_Type()
)
cmEthernetNetPortPppoeOuterVlanEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeOuterVlanEtherType.setStatus("current")
_CmEthernetNetPortPppoeOuterVlanId_Type = VlanId
_CmEthernetNetPortPppoeOuterVlanId_Object = MibTableColumn
cmEthernetNetPortPppoeOuterVlanId = _CmEthernetNetPortPppoeOuterVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 3),
    _CmEthernetNetPortPppoeOuterVlanId_Type()
)
cmEthernetNetPortPppoeOuterVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeOuterVlanId.setStatus("current")
_CmEthernetNetPortPppoeOuterVlanPriority_Type = VlanPriority
_CmEthernetNetPortPppoeOuterVlanPriority_Object = MibTableColumn
cmEthernetNetPortPppoeOuterVlanPriority = _CmEthernetNetPortPppoeOuterVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 4),
    _CmEthernetNetPortPppoeOuterVlanPriority_Type()
)
cmEthernetNetPortPppoeOuterVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeOuterVlanPriority.setStatus("current")
_CmEthernetNetPortPppoeInnerVlanControl_Type = TruthValue
_CmEthernetNetPortPppoeInnerVlanControl_Object = MibTableColumn
cmEthernetNetPortPppoeInnerVlanControl = _CmEthernetNetPortPppoeInnerVlanControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 5),
    _CmEthernetNetPortPppoeInnerVlanControl_Type()
)
cmEthernetNetPortPppoeInnerVlanControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeInnerVlanControl.setStatus("current")
_CmEthernetNetPortPppoeInnerVlanEtherType_Type = Unsigned32
_CmEthernetNetPortPppoeInnerVlanEtherType_Object = MibTableColumn
cmEthernetNetPortPppoeInnerVlanEtherType = _CmEthernetNetPortPppoeInnerVlanEtherType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 6),
    _CmEthernetNetPortPppoeInnerVlanEtherType_Type()
)
cmEthernetNetPortPppoeInnerVlanEtherType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeInnerVlanEtherType.setStatus("current")
_CmEthernetNetPortPppoeInnerVlanId_Type = VlanId
_CmEthernetNetPortPppoeInnerVlanId_Object = MibTableColumn
cmEthernetNetPortPppoeInnerVlanId = _CmEthernetNetPortPppoeInnerVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 7),
    _CmEthernetNetPortPppoeInnerVlanId_Type()
)
cmEthernetNetPortPppoeInnerVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeInnerVlanId.setStatus("current")
_CmEthernetNetPortPppoeInnerVlanPriority_Type = VlanPriority
_CmEthernetNetPortPppoeInnerVlanPriority_Object = MibTableColumn
cmEthernetNetPortPppoeInnerVlanPriority = _CmEthernetNetPortPppoeInnerVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 8),
    _CmEthernetNetPortPppoeInnerVlanPriority_Type()
)
cmEthernetNetPortPppoeInnerVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeInnerVlanPriority.setStatus("current")
_CmEthernetNetPortPppoeServiceName_Type = DisplayString
_CmEthernetNetPortPppoeServiceName_Object = MibTableColumn
cmEthernetNetPortPppoeServiceName = _CmEthernetNetPortPppoeServiceName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 9),
    _CmEthernetNetPortPppoeServiceName_Type()
)
cmEthernetNetPortPppoeServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeServiceName.setStatus("current")
_CmEthernetNetPortPppoeLcpKeepAlivePeriod_Type = Unsigned32
_CmEthernetNetPortPppoeLcpKeepAlivePeriod_Object = MibTableColumn
cmEthernetNetPortPppoeLcpKeepAlivePeriod = _CmEthernetNetPortPppoeLcpKeepAlivePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 10),
    _CmEthernetNetPortPppoeLcpKeepAlivePeriod_Type()
)
cmEthernetNetPortPppoeLcpKeepAlivePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeLcpKeepAlivePeriod.setStatus("current")
_CmEthernetNetPortPppoeLcpRetryThreshold_Type = Unsigned32
_CmEthernetNetPortPppoeLcpRetryThreshold_Object = MibTableColumn
cmEthernetNetPortPppoeLcpRetryThreshold = _CmEthernetNetPortPppoeLcpRetryThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 11),
    _CmEthernetNetPortPppoeLcpRetryThreshold_Type()
)
cmEthernetNetPortPppoeLcpRetryThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeLcpRetryThreshold.setStatus("current")
_CmEthernetNetPortPppoeRxAcName_Type = DisplayString
_CmEthernetNetPortPppoeRxAcName_Object = MibTableColumn
cmEthernetNetPortPppoeRxAcName = _CmEthernetNetPortPppoeRxAcName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 12),
    _CmEthernetNetPortPppoeRxAcName_Type()
)
cmEthernetNetPortPppoeRxAcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeRxAcName.setStatus("current")
_CmEthernetNetPortPppoeRxServiceName_Type = DisplayString
_CmEthernetNetPortPppoeRxServiceName_Object = MibTableColumn
cmEthernetNetPortPppoeRxServiceName = _CmEthernetNetPortPppoeRxServiceName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 13),
    _CmEthernetNetPortPppoeRxServiceName_Type()
)
cmEthernetNetPortPppoeRxServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeRxServiceName.setStatus("current")
_CmEthernetNetPortPppoeSessionId_Type = Unsigned32
_CmEthernetNetPortPppoeSessionId_Object = MibTableColumn
cmEthernetNetPortPppoeSessionId = _CmEthernetNetPortPppoeSessionId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 14),
    _CmEthernetNetPortPppoeSessionId_Type()
)
cmEthernetNetPortPppoeSessionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeSessionId.setStatus("current")
_CmEthernetNetPortPppoeConnStatus_Type = PPPoEConnectionStatus
_CmEthernetNetPortPppoeConnStatus_Object = MibTableColumn
cmEthernetNetPortPppoeConnStatus = _CmEthernetNetPortPppoeConnStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 103, 1, 15),
    _CmEthernetNetPortPppoeConnStatus_Type()
)
cmEthernetNetPortPppoeConnStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortPppoeConnStatus.setStatus("current")
_CmEthernetNetPortXdslParamTable_Object = MibTable
cmEthernetNetPortXdslParamTable = _CmEthernetNetPortXdslParamTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslParamTable.setStatus("current")
_CmEthernetNetPortXdslParamEntry_Object = MibTableRow
cmEthernetNetPortXdslParamEntry = _CmEthernetNetPortXdslParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1)
)
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslParamEntry.setStatus("current")
_CmEthernetNetPortXdslConnControl_Type = TruthValue
_CmEthernetNetPortXdslConnControl_Object = MibTableColumn
cmEthernetNetPortXdslConnControl = _CmEthernetNetPortXdslConnControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 1),
    _CmEthernetNetPortXdslConnControl_Type()
)
cmEthernetNetPortXdslConnControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslConnControl.setStatus("current")
_CmEthernetNetPortXdslModulationMode_Type = XDSLModulationMode
_CmEthernetNetPortXdslModulationMode_Object = MibTableColumn
cmEthernetNetPortXdslModulationMode = _CmEthernetNetPortXdslModulationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 2),
    _CmEthernetNetPortXdslModulationMode_Type()
)
cmEthernetNetPortXdslModulationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslModulationMode.setStatus("current")
_CmEthernetNetPortXdslBitSwapEnabled_Type = TruthValue
_CmEthernetNetPortXdslBitSwapEnabled_Object = MibTableColumn
cmEthernetNetPortXdslBitSwapEnabled = _CmEthernetNetPortXdslBitSwapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 3),
    _CmEthernetNetPortXdslBitSwapEnabled_Type()
)
cmEthernetNetPortXdslBitSwapEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslBitSwapEnabled.setStatus("current")
_CmEthernetNetPortXdslGvectorEnabled_Type = TruthValue
_CmEthernetNetPortXdslGvectorEnabled_Object = MibTableColumn
cmEthernetNetPortXdslGvectorEnabled = _CmEthernetNetPortXdslGvectorEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 4),
    _CmEthernetNetPortXdslGvectorEnabled_Type()
)
cmEthernetNetPortXdslGvectorEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslGvectorEnabled.setStatus("current")
_CmEthernetNetPortXdslVdslProfile_Type = VDSLProfileFields
_CmEthernetNetPortXdslVdslProfile_Object = MibTableColumn
cmEthernetNetPortXdslVdslProfile = _CmEthernetNetPortXdslVdslProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 5),
    _CmEthernetNetPortXdslVdslProfile_Type()
)
cmEthernetNetPortXdslVdslProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslVdslProfile.setStatus("current")
_CmEthernetNetPortXdslStatus_Type = XDSLStatus
_CmEthernetNetPortXdslStatus_Object = MibTableColumn
cmEthernetNetPortXdslStatus = _CmEthernetNetPortXdslStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 6),
    _CmEthernetNetPortXdslStatus_Type()
)
cmEthernetNetPortXdslStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslStatus.setStatus("current")
_CmEthernetNetPortXdslCurVdslProfile_Type = VDSLProfileField
_CmEthernetNetPortXdslCurVdslProfile_Object = MibTableColumn
cmEthernetNetPortXdslCurVdslProfile = _CmEthernetNetPortXdslCurVdslProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 7),
    _CmEthernetNetPortXdslCurVdslProfile_Type()
)
cmEthernetNetPortXdslCurVdslProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslCurVdslProfile.setStatus("current")
_CmEthernetNetPortXdslActualLinkRateUpStream_Type = Unsigned32
_CmEthernetNetPortXdslActualLinkRateUpStream_Object = MibTableColumn
cmEthernetNetPortXdslActualLinkRateUpStream = _CmEthernetNetPortXdslActualLinkRateUpStream_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 8),
    _CmEthernetNetPortXdslActualLinkRateUpStream_Type()
)
cmEthernetNetPortXdslActualLinkRateUpStream.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslActualLinkRateUpStream.setStatus("current")
_CmEthernetNetPortXdslActualLinkRateDownStream_Type = Unsigned32
_CmEthernetNetPortXdslActualLinkRateDownStream_Object = MibTableColumn
cmEthernetNetPortXdslActualLinkRateDownStream = _CmEthernetNetPortXdslActualLinkRateDownStream_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 9),
    _CmEthernetNetPortXdslActualLinkRateDownStream_Type()
)
cmEthernetNetPortXdslActualLinkRateDownStream.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslActualLinkRateDownStream.setStatus("current")
_CmEthernetNetPortXdslControlChannel_Type = XDSLControlChannel
_CmEthernetNetPortXdslControlChannel_Object = MibTableColumn
cmEthernetNetPortXdslControlChannel = _CmEthernetNetPortXdslControlChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 10),
    _CmEthernetNetPortXdslControlChannel_Type()
)
cmEthernetNetPortXdslControlChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslControlChannel.setStatus("current")
_CmEthernetNetPortXdslCarrierSet_Type = XDSLCarrierSet
_CmEthernetNetPortXdslCarrierSet_Object = MibTableColumn
cmEthernetNetPortXdslCarrierSet = _CmEthernetNetPortXdslCarrierSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 11),
    _CmEthernetNetPortXdslCarrierSet_Type()
)
cmEthernetNetPortXdslCarrierSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslCarrierSet.setStatus("current")
_CmEthernetNetPortXdslMode_Type = XDSLMode
_CmEthernetNetPortXdslMode_Object = MibTableColumn
cmEthernetNetPortXdslMode = _CmEthernetNetPortXdslMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 12),
    _CmEthernetNetPortXdslMode_Type()
)
cmEthernetNetPortXdslMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslMode.setStatus("current")
_CmEthernetNetPortXdslAnnex_Type = XDSLAnnex
_CmEthernetNetPortXdslAnnex_Object = MibTableColumn
cmEthernetNetPortXdslAnnex = _CmEthernetNetPortXdslAnnex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 13),
    _CmEthernetNetPortXdslAnnex_Type()
)
cmEthernetNetPortXdslAnnex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslAnnex.setStatus("current")
_CmEthernetNetPortXdslDsSNRMargin_Type = Integer32
_CmEthernetNetPortXdslDsSNRMargin_Object = MibTableColumn
cmEthernetNetPortXdslDsSNRMargin = _CmEthernetNetPortXdslDsSNRMargin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 14),
    _CmEthernetNetPortXdslDsSNRMargin_Type()
)
cmEthernetNetPortXdslDsSNRMargin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslDsSNRMargin.setStatus("current")
_CmEthernetNetPortXdslUsSNRMargin_Type = Integer32
_CmEthernetNetPortXdslUsSNRMargin_Object = MibTableColumn
cmEthernetNetPortXdslUsSNRMargin = _CmEthernetNetPortXdslUsSNRMargin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 15),
    _CmEthernetNetPortXdslUsSNRMargin_Type()
)
cmEthernetNetPortXdslUsSNRMargin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslUsSNRMargin.setStatus("current")
_CmEthernetNetPortXdslDsSignalAttenuation_Type = Integer32
_CmEthernetNetPortXdslDsSignalAttenuation_Object = MibTableColumn
cmEthernetNetPortXdslDsSignalAttenuation = _CmEthernetNetPortXdslDsSignalAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 16),
    _CmEthernetNetPortXdslDsSignalAttenuation_Type()
)
cmEthernetNetPortXdslDsSignalAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslDsSignalAttenuation.setStatus("current")
_CmEthernetNetPortXdslDsLineAttenuation_Type = Integer32
_CmEthernetNetPortXdslDsLineAttenuation_Object = MibTableColumn
cmEthernetNetPortXdslDsLineAttenuation = _CmEthernetNetPortXdslDsLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 17),
    _CmEthernetNetPortXdslDsLineAttenuation_Type()
)
cmEthernetNetPortXdslDsLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslDsLineAttenuation.setStatus("current")
_CmEthernetNetPortXdslDsTxPower_Type = Integer32
_CmEthernetNetPortXdslDsTxPower_Object = MibTableColumn
cmEthernetNetPortXdslDsTxPower = _CmEthernetNetPortXdslDsTxPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 18),
    _CmEthernetNetPortXdslDsTxPower_Type()
)
cmEthernetNetPortXdslDsTxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslDsTxPower.setStatus("current")
_CmEthernetNetPortXdslUsTxPower_Type = Integer32
_CmEthernetNetPortXdslUsTxPower_Object = MibTableColumn
cmEthernetNetPortXdslUsTxPower = _CmEthernetNetPortXdslUsTxPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 19),
    _CmEthernetNetPortXdslUsTxPower_Type()
)
cmEthernetNetPortXdslUsTxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslUsTxPower.setStatus("current")
_CmEthernetNetPortXdslDsAttainableRate_Type = Unsigned32
_CmEthernetNetPortXdslDsAttainableRate_Object = MibTableColumn
cmEthernetNetPortXdslDsAttainableRate = _CmEthernetNetPortXdslDsAttainableRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 20),
    _CmEthernetNetPortXdslDsAttainableRate_Type()
)
cmEthernetNetPortXdslDsAttainableRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslDsAttainableRate.setStatus("current")
_CmEthernetNetPortXdslUsAttainableRate_Type = Unsigned32
_CmEthernetNetPortXdslUsAttainableRate_Object = MibTableColumn
cmEthernetNetPortXdslUsAttainableRate = _CmEthernetNetPortXdslUsAttainableRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 104, 1, 21),
    _CmEthernetNetPortXdslUsAttainableRate_Type()
)
cmEthernetNetPortXdslUsAttainableRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEthernetNetPortXdslUsAttainableRate.setStatus("current")
_SciPortTable_Object = MibTable
sciPortTable = _SciPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105)
)
if mibBuilder.loadTexts:
    sciPortTable.setStatus("current")
_SciPortEntry_Object = MibTableRow
sciPortEntry = _SciPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1)
)
sciPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "sciPortIndex"),
)
if mibBuilder.loadTexts:
    sciPortEntry.setStatus("current")


class _SciPortIndex_Type(Integer32):
    """Custom type sciPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SciPortIndex_Type.__name__ = "Integer32"
_SciPortIndex_Object = MibTableColumn
sciPortIndex = _SciPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 1),
    _SciPortIndex_Type()
)
sciPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sciPortIndex.setStatus("current")
_SciPortAdminState_Type = AdminState
_SciPortAdminState_Object = MibTableColumn
sciPortAdminState = _SciPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 2),
    _SciPortAdminState_Type()
)
sciPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sciPortAdminState.setStatus("current")
_SciPortOperationalState_Type = OperationalState
_SciPortOperationalState_Object = MibTableColumn
sciPortOperationalState = _SciPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 3),
    _SciPortOperationalState_Type()
)
sciPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sciPortOperationalState.setStatus("current")
_SciPortSignalMode_Type = SciSignalMode
_SciPortSignalMode_Object = MibTableColumn
sciPortSignalMode = _SciPortSignalMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 4),
    _SciPortSignalMode_Type()
)
sciPortSignalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sciPortSignalMode.setStatus("current")
_SciPortSignalDirection_Type = SciSignalDirection
_SciPortSignalDirection_Object = MibTableColumn
sciPortSignalDirection = _SciPortSignalDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 5),
    _SciPortSignalDirection_Type()
)
sciPortSignalDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sciPortSignalDirection.setStatus("current")
_SciPortRxSsmQL_Type = SciRxSsmQL
_SciPortRxSsmQL_Object = MibTableColumn
sciPortRxSsmQL = _SciPortRxSsmQL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 105, 1, 6),
    _SciPortRxSsmQL_Type()
)
sciPortRxSsmQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sciPortRxSsmQL.setStatus("current")
_F3IrigRs422OutputPortTable_Object = MibTable
f3IrigRs422OutputPortTable = _F3IrigRs422OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106)
)
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortTable.setStatus("current")
_F3IrigRs422OutputPortEntry_Object = MibTableRow
f3IrigRs422OutputPortEntry = _F3IrigRs422OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1)
)
f3IrigRs422OutputPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigRs422OutputPortIndex"),
)
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortEntry.setStatus("current")


class _F3IrigRs422OutputPortIndex_Type(Integer32):
    """Custom type f3IrigRs422OutputPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3IrigRs422OutputPortIndex_Type.__name__ = "Integer32"
_F3IrigRs422OutputPortIndex_Object = MibTableColumn
f3IrigRs422OutputPortIndex = _F3IrigRs422OutputPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 1),
    _F3IrigRs422OutputPortIndex_Type()
)
f3IrigRs422OutputPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortIndex.setStatus("current")
_F3IrigRs422OutputPortIfIndex_Type = InterfaceIndex
_F3IrigRs422OutputPortIfIndex_Object = MibTableColumn
f3IrigRs422OutputPortIfIndex = _F3IrigRs422OutputPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 2),
    _F3IrigRs422OutputPortIfIndex_Type()
)
f3IrigRs422OutputPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortIfIndex.setStatus("current")
_F3IrigRs422OutputPortEntityIndex_Type = PhysicalIndex
_F3IrigRs422OutputPortEntityIndex_Object = MibTableColumn
f3IrigRs422OutputPortEntityIndex = _F3IrigRs422OutputPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 3),
    _F3IrigRs422OutputPortEntityIndex_Type()
)
f3IrigRs422OutputPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortEntityIndex.setStatus("current")


class _F3IrigRs422OutputPortAlias_Type(DisplayString):
    """Custom type f3IrigRs422OutputPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3IrigRs422OutputPortAlias_Type.__name__ = "DisplayString"
_F3IrigRs422OutputPortAlias_Object = MibTableColumn
f3IrigRs422OutputPortAlias = _F3IrigRs422OutputPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 4),
    _F3IrigRs422OutputPortAlias_Type()
)
f3IrigRs422OutputPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortAlias.setStatus("current")
_F3IrigRs422OutputPortAdminState_Type = AdminState
_F3IrigRs422OutputPortAdminState_Object = MibTableColumn
f3IrigRs422OutputPortAdminState = _F3IrigRs422OutputPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 5),
    _F3IrigRs422OutputPortAdminState_Type()
)
f3IrigRs422OutputPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortAdminState.setStatus("current")
_F3IrigRs422OutputPortOperationalState_Type = OperationalState
_F3IrigRs422OutputPortOperationalState_Object = MibTableColumn
f3IrigRs422OutputPortOperationalState = _F3IrigRs422OutputPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 6),
    _F3IrigRs422OutputPortOperationalState_Type()
)
f3IrigRs422OutputPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortOperationalState.setStatus("current")
_F3IrigRs422OutputPortSecondaryState_Type = SecondaryState
_F3IrigRs422OutputPortSecondaryState_Object = MibTableColumn
f3IrigRs422OutputPortSecondaryState = _F3IrigRs422OutputPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 7),
    _F3IrigRs422OutputPortSecondaryState_Type()
)
f3IrigRs422OutputPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortSecondaryState.setStatus("current")
_F3IrigRs422OutputPortTimeCode_Type = IrigTimeCode
_F3IrigRs422OutputPortTimeCode_Object = MibTableColumn
f3IrigRs422OutputPortTimeCode = _F3IrigRs422OutputPortTimeCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 8),
    _F3IrigRs422OutputPortTimeCode_Type()
)
f3IrigRs422OutputPortTimeCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortTimeCode.setStatus("current")
_F3IrigRs422OutputPortControlField_Type = IrigControlField
_F3IrigRs422OutputPortControlField_Object = MibTableColumn
f3IrigRs422OutputPortControlField = _F3IrigRs422OutputPortControlField_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 106, 1, 9),
    _F3IrigRs422OutputPortControlField_Type()
)
f3IrigRs422OutputPortControlField.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRs422OutputPortControlField.setStatus("current")
_F3IrigOpticalOutputPortTable_Object = MibTable
f3IrigOpticalOutputPortTable = _F3IrigOpticalOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107)
)
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortTable.setStatus("current")
_F3IrigOpticalOutputPortEntry_Object = MibTableRow
f3IrigOpticalOutputPortEntry = _F3IrigOpticalOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1)
)
f3IrigOpticalOutputPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigOpticalOutputPortIndex"),
)
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortEntry.setStatus("current")


class _F3IrigOpticalOutputPortIndex_Type(Integer32):
    """Custom type f3IrigOpticalOutputPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3IrigOpticalOutputPortIndex_Type.__name__ = "Integer32"
_F3IrigOpticalOutputPortIndex_Object = MibTableColumn
f3IrigOpticalOutputPortIndex = _F3IrigOpticalOutputPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 1),
    _F3IrigOpticalOutputPortIndex_Type()
)
f3IrigOpticalOutputPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortIndex.setStatus("current")
_F3IrigOpticalOutputPortIfIndex_Type = InterfaceIndex
_F3IrigOpticalOutputPortIfIndex_Object = MibTableColumn
f3IrigOpticalOutputPortIfIndex = _F3IrigOpticalOutputPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 2),
    _F3IrigOpticalOutputPortIfIndex_Type()
)
f3IrigOpticalOutputPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortIfIndex.setStatus("current")
_F3IrigOpticalOutputPortEntityIndex_Type = PhysicalIndex
_F3IrigOpticalOutputPortEntityIndex_Object = MibTableColumn
f3IrigOpticalOutputPortEntityIndex = _F3IrigOpticalOutputPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 3),
    _F3IrigOpticalOutputPortEntityIndex_Type()
)
f3IrigOpticalOutputPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortEntityIndex.setStatus("current")


class _F3IrigOpticalOutputPortAlias_Type(DisplayString):
    """Custom type f3IrigOpticalOutputPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3IrigOpticalOutputPortAlias_Type.__name__ = "DisplayString"
_F3IrigOpticalOutputPortAlias_Object = MibTableColumn
f3IrigOpticalOutputPortAlias = _F3IrigOpticalOutputPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 4),
    _F3IrigOpticalOutputPortAlias_Type()
)
f3IrigOpticalOutputPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortAlias.setStatus("current")
_F3IrigOpticalOutputPortAdminState_Type = AdminState
_F3IrigOpticalOutputPortAdminState_Object = MibTableColumn
f3IrigOpticalOutputPortAdminState = _F3IrigOpticalOutputPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 5),
    _F3IrigOpticalOutputPortAdminState_Type()
)
f3IrigOpticalOutputPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortAdminState.setStatus("current")
_F3IrigOpticalOutputPortOperationalState_Type = OperationalState
_F3IrigOpticalOutputPortOperationalState_Object = MibTableColumn
f3IrigOpticalOutputPortOperationalState = _F3IrigOpticalOutputPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 6),
    _F3IrigOpticalOutputPortOperationalState_Type()
)
f3IrigOpticalOutputPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortOperationalState.setStatus("current")
_F3IrigOpticalOutputPortSecondaryState_Type = SecondaryState
_F3IrigOpticalOutputPortSecondaryState_Object = MibTableColumn
f3IrigOpticalOutputPortSecondaryState = _F3IrigOpticalOutputPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 7),
    _F3IrigOpticalOutputPortSecondaryState_Type()
)
f3IrigOpticalOutputPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortSecondaryState.setStatus("current")
_F3IrigOpticalOutputPortTimeCode_Type = IrigTimeCode
_F3IrigOpticalOutputPortTimeCode_Object = MibTableColumn
f3IrigOpticalOutputPortTimeCode = _F3IrigOpticalOutputPortTimeCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 8),
    _F3IrigOpticalOutputPortTimeCode_Type()
)
f3IrigOpticalOutputPortTimeCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortTimeCode.setStatus("current")
_F3IrigOpticalOutputPortControlField_Type = IrigControlField
_F3IrigOpticalOutputPortControlField_Object = MibTableColumn
f3IrigOpticalOutputPortControlField = _F3IrigOpticalOutputPortControlField_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 107, 1, 9),
    _F3IrigOpticalOutputPortControlField_Type()
)
f3IrigOpticalOutputPortControlField.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOpticalOutputPortControlField.setStatus("current")
_F3IrigRelayOutputPortTable_Object = MibTable
f3IrigRelayOutputPortTable = _F3IrigRelayOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108)
)
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortTable.setStatus("current")
_F3IrigRelayOutputPortEntry_Object = MibTableRow
f3IrigRelayOutputPortEntry = _F3IrigRelayOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1)
)
f3IrigRelayOutputPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigRelayOutputPortIndex"),
)
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortEntry.setStatus("current")


class _F3IrigRelayOutputPortIndex_Type(Integer32):
    """Custom type f3IrigRelayOutputPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3IrigRelayOutputPortIndex_Type.__name__ = "Integer32"
_F3IrigRelayOutputPortIndex_Object = MibTableColumn
f3IrigRelayOutputPortIndex = _F3IrigRelayOutputPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 1),
    _F3IrigRelayOutputPortIndex_Type()
)
f3IrigRelayOutputPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortIndex.setStatus("current")
_F3IrigRelayOutputPortIfIndex_Type = InterfaceIndex
_F3IrigRelayOutputPortIfIndex_Object = MibTableColumn
f3IrigRelayOutputPortIfIndex = _F3IrigRelayOutputPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 2),
    _F3IrigRelayOutputPortIfIndex_Type()
)
f3IrigRelayOutputPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortIfIndex.setStatus("current")
_F3IrigRelayOutputPortEntityIndex_Type = PhysicalIndex
_F3IrigRelayOutputPortEntityIndex_Object = MibTableColumn
f3IrigRelayOutputPortEntityIndex = _F3IrigRelayOutputPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 3),
    _F3IrigRelayOutputPortEntityIndex_Type()
)
f3IrigRelayOutputPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortEntityIndex.setStatus("current")


class _F3IrigRelayOutputPortAlias_Type(DisplayString):
    """Custom type f3IrigRelayOutputPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3IrigRelayOutputPortAlias_Type.__name__ = "DisplayString"
_F3IrigRelayOutputPortAlias_Object = MibTableColumn
f3IrigRelayOutputPortAlias = _F3IrigRelayOutputPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 4),
    _F3IrigRelayOutputPortAlias_Type()
)
f3IrigRelayOutputPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortAlias.setStatus("current")
_F3IrigRelayOutputPortAdminState_Type = AdminState
_F3IrigRelayOutputPortAdminState_Object = MibTableColumn
f3IrigRelayOutputPortAdminState = _F3IrigRelayOutputPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 5),
    _F3IrigRelayOutputPortAdminState_Type()
)
f3IrigRelayOutputPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortAdminState.setStatus("current")
_F3IrigRelayOutputPortOperationalState_Type = OperationalState
_F3IrigRelayOutputPortOperationalState_Object = MibTableColumn
f3IrigRelayOutputPortOperationalState = _F3IrigRelayOutputPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 6),
    _F3IrigRelayOutputPortOperationalState_Type()
)
f3IrigRelayOutputPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortOperationalState.setStatus("current")
_F3IrigRelayOutputPortSecondaryState_Type = SecondaryState
_F3IrigRelayOutputPortSecondaryState_Object = MibTableColumn
f3IrigRelayOutputPortSecondaryState = _F3IrigRelayOutputPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 7),
    _F3IrigRelayOutputPortSecondaryState_Type()
)
f3IrigRelayOutputPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortSecondaryState.setStatus("current")
_F3IrigRelayOutputPortRelayOperation_Type = IrigRelayOperation
_F3IrigRelayOutputPortRelayOperation_Object = MibTableColumn
f3IrigRelayOutputPortRelayOperation = _F3IrigRelayOutputPortRelayOperation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 108, 1, 8),
    _F3IrigRelayOutputPortRelayOperation_Type()
)
f3IrigRelayOutputPortRelayOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigRelayOutputPortRelayOperation.setStatus("current")
_F3IrigOutputGroupTable_Object = MibTable
f3IrigOutputGroupTable = _F3IrigOutputGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109)
)
if mibBuilder.loadTexts:
    f3IrigOutputGroupTable.setStatus("current")
_F3IrigOutputGroupEntry_Object = MibTableRow
f3IrigOutputGroupEntry = _F3IrigOutputGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1)
)
f3IrigOutputGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigOutputGroupIndex"),
)
if mibBuilder.loadTexts:
    f3IrigOutputGroupEntry.setStatus("current")


class _F3IrigOutputGroupIndex_Type(Integer32):
    """Custom type f3IrigOutputGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3IrigOutputGroupIndex_Type.__name__ = "Integer32"
_F3IrigOutputGroupIndex_Object = MibTableColumn
f3IrigOutputGroupIndex = _F3IrigOutputGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 1),
    _F3IrigOutputGroupIndex_Type()
)
f3IrigOutputGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3IrigOutputGroupIndex.setStatus("current")
_F3IrigOutputGroupIfIndex_Type = InterfaceIndex
_F3IrigOutputGroupIfIndex_Object = MibTableColumn
f3IrigOutputGroupIfIndex = _F3IrigOutputGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 2),
    _F3IrigOutputGroupIfIndex_Type()
)
f3IrigOutputGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputGroupIfIndex.setStatus("current")
_F3IrigOutputGroupEntityIndex_Type = PhysicalIndex
_F3IrigOutputGroupEntityIndex_Object = MibTableColumn
f3IrigOutputGroupEntityIndex = _F3IrigOutputGroupEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 3),
    _F3IrigOutputGroupEntityIndex_Type()
)
f3IrigOutputGroupEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputGroupEntityIndex.setStatus("current")


class _F3IrigOutputGroupAlias_Type(DisplayString):
    """Custom type f3IrigOutputGroupAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3IrigOutputGroupAlias_Type.__name__ = "DisplayString"
_F3IrigOutputGroupAlias_Object = MibTableColumn
f3IrigOutputGroupAlias = _F3IrigOutputGroupAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 4),
    _F3IrigOutputGroupAlias_Type()
)
f3IrigOutputGroupAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputGroupAlias.setStatus("current")
_F3IrigOutputGroupExtensionType_Type = IrigGroupExtensionType
_F3IrigOutputGroupExtensionType_Object = MibTableColumn
f3IrigOutputGroupExtensionType = _F3IrigOutputGroupExtensionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 5),
    _F3IrigOutputGroupExtensionType_Type()
)
f3IrigOutputGroupExtensionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputGroupExtensionType.setStatus("current")
_F3IrigOutputGroupExtensionDetection_Type = TruthValue
_F3IrigOutputGroupExtensionDetection_Object = MibTableColumn
f3IrigOutputGroupExtensionDetection = _F3IrigOutputGroupExtensionDetection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 109, 1, 6),
    _F3IrigOutputGroupExtensionDetection_Type()
)
f3IrigOutputGroupExtensionDetection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputGroupExtensionDetection.setStatus("current")
_F3IrigOutputUnitPortTable_Object = MibTable
f3IrigOutputUnitPortTable = _F3IrigOutputUnitPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110)
)
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortTable.setStatus("current")
_F3IrigOutputUnitPortEntry_Object = MibTableRow
f3IrigOutputUnitPortEntry = _F3IrigOutputUnitPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1)
)
f3IrigOutputUnitPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigOutputGroupIndex"),
    (0, "CM-FACILITY-MIB", "f3IrigOutputUnitPortIndex"),
)
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortEntry.setStatus("current")


class _F3IrigOutputUnitPortIndex_Type(Integer32):
    """Custom type f3IrigOutputUnitPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_F3IrigOutputUnitPortIndex_Type.__name__ = "Integer32"
_F3IrigOutputUnitPortIndex_Object = MibTableColumn
f3IrigOutputUnitPortIndex = _F3IrigOutputUnitPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 1),
    _F3IrigOutputUnitPortIndex_Type()
)
f3IrigOutputUnitPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortIndex.setStatus("current")
_F3IrigOutputUnitPortIfIndex_Type = InterfaceIndex
_F3IrigOutputUnitPortIfIndex_Object = MibTableColumn
f3IrigOutputUnitPortIfIndex = _F3IrigOutputUnitPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 2),
    _F3IrigOutputUnitPortIfIndex_Type()
)
f3IrigOutputUnitPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortIfIndex.setStatus("current")
_F3IrigOutputUnitPortEntityIndex_Type = PhysicalIndex
_F3IrigOutputUnitPortEntityIndex_Object = MibTableColumn
f3IrigOutputUnitPortEntityIndex = _F3IrigOutputUnitPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 3),
    _F3IrigOutputUnitPortEntityIndex_Type()
)
f3IrigOutputUnitPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortEntityIndex.setStatus("current")


class _F3IrigOutputUnitPortAlias_Type(DisplayString):
    """Custom type f3IrigOutputUnitPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_F3IrigOutputUnitPortAlias_Type.__name__ = "DisplayString"
_F3IrigOutputUnitPortAlias_Object = MibTableColumn
f3IrigOutputUnitPortAlias = _F3IrigOutputUnitPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 4),
    _F3IrigOutputUnitPortAlias_Type()
)
f3IrigOutputUnitPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortAlias.setStatus("current")
_F3IrigOutputUnitPortAdminState_Type = AdminState
_F3IrigOutputUnitPortAdminState_Object = MibTableColumn
f3IrigOutputUnitPortAdminState = _F3IrigOutputUnitPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 5),
    _F3IrigOutputUnitPortAdminState_Type()
)
f3IrigOutputUnitPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortAdminState.setStatus("current")
_F3IrigOutputUnitPortOperationalState_Type = OperationalState
_F3IrigOutputUnitPortOperationalState_Object = MibTableColumn
f3IrigOutputUnitPortOperationalState = _F3IrigOutputUnitPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 6),
    _F3IrigOutputUnitPortOperationalState_Type()
)
f3IrigOutputUnitPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortOperationalState.setStatus("current")
_F3IrigOutputUnitPortSecondaryState_Type = SecondaryState
_F3IrigOutputUnitPortSecondaryState_Object = MibTableColumn
f3IrigOutputUnitPortSecondaryState = _F3IrigOutputUnitPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 7),
    _F3IrigOutputUnitPortSecondaryState_Type()
)
f3IrigOutputUnitPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortSecondaryState.setStatus("current")
_F3IrigOutputUnitPortTimeCode_Type = IrigTimeCode
_F3IrigOutputUnitPortTimeCode_Object = MibTableColumn
f3IrigOutputUnitPortTimeCode = _F3IrigOutputUnitPortTimeCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 8),
    _F3IrigOutputUnitPortTimeCode_Type()
)
f3IrigOutputUnitPortTimeCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortTimeCode.setStatus("current")
_F3IrigOutputUnitPortControlField_Type = IrigControlField
_F3IrigOutputUnitPortControlField_Object = MibTableColumn
f3IrigOutputUnitPortControlField = _F3IrigOutputUnitPortControlField_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 9),
    _F3IrigOutputUnitPortControlField_Type()
)
f3IrigOutputUnitPortControlField.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortControlField.setStatus("current")
_F3IrigOutputUnitPortType_Type = IrigOutputType
_F3IrigOutputUnitPortType_Object = MibTableColumn
f3IrigOutputUnitPortType = _F3IrigOutputUnitPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 10),
    _F3IrigOutputUnitPortType_Type()
)
f3IrigOutputUnitPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortType.setStatus("current")
_F3IrigOutputUnitPortDigitalVoltage_Type = IrigDigitalSignalVoltage
_F3IrigOutputUnitPortDigitalVoltage_Object = MibTableColumn
f3IrigOutputUnitPortDigitalVoltage = _F3IrigOutputUnitPortDigitalVoltage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 110, 1, 11),
    _F3IrigOutputUnitPortDigitalVoltage_Type()
)
f3IrigOutputUnitPortDigitalVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    f3IrigOutputUnitPortDigitalVoltage.setStatus("current")
_CcInputPortTable_Object = MibTable
ccInputPortTable = _CcInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111)
)
if mibBuilder.loadTexts:
    ccInputPortTable.setStatus("current")
_CcInputPortEntry_Object = MibTableRow
ccInputPortEntry = _CcInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1)
)
ccInputPortEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ccInputPortIndex"),
)
if mibBuilder.loadTexts:
    ccInputPortEntry.setStatus("current")


class _CcInputPortIndex_Type(Integer32):
    """Custom type ccInputPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CcInputPortIndex_Type.__name__ = "Integer32"
_CcInputPortIndex_Object = MibTableColumn
ccInputPortIndex = _CcInputPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 1),
    _CcInputPortIndex_Type()
)
ccInputPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccInputPortIndex.setStatus("current")
_CcInputPortIfIndex_Type = InterfaceIndex
_CcInputPortIfIndex_Object = MibTableColumn
ccInputPortIfIndex = _CcInputPortIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 2),
    _CcInputPortIfIndex_Type()
)
ccInputPortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccInputPortIfIndex.setStatus("current")
_CcInputPortEntityIndex_Type = PhysicalIndex
_CcInputPortEntityIndex_Object = MibTableColumn
ccInputPortEntityIndex = _CcInputPortEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 3),
    _CcInputPortEntityIndex_Type()
)
ccInputPortEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccInputPortEntityIndex.setStatus("current")


class _CcInputPortAlias_Type(DisplayString):
    """Custom type ccInputPortAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CcInputPortAlias_Type.__name__ = "DisplayString"
_CcInputPortAlias_Object = MibTableColumn
ccInputPortAlias = _CcInputPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 4),
    _CcInputPortAlias_Type()
)
ccInputPortAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccInputPortAlias.setStatus("current")
_CcInputPortAdminState_Type = AdminState
_CcInputPortAdminState_Object = MibTableColumn
ccInputPortAdminState = _CcInputPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 5),
    _CcInputPortAdminState_Type()
)
ccInputPortAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccInputPortAdminState.setStatus("current")
_CcInputPortOperationalState_Type = OperationalState
_CcInputPortOperationalState_Object = MibTableColumn
ccInputPortOperationalState = _CcInputPortOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 6),
    _CcInputPortOperationalState_Type()
)
ccInputPortOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccInputPortOperationalState.setStatus("current")
_CcInputPortSecondaryState_Type = SecondaryState
_CcInputPortSecondaryState_Object = MibTableColumn
ccInputPortSecondaryState = _CcInputPortSecondaryState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 111, 1, 7),
    _CcInputPortSecondaryState_Type()
)
ccInputPortSecondaryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccInputPortSecondaryState.setStatus("current")
_CcGroupTable_Object = MibTable
ccGroupTable = _CcGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112)
)
if mibBuilder.loadTexts:
    ccGroupTable.setStatus("current")
_CcGroupEntry_Object = MibTableRow
ccGroupEntry = _CcGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1)
)
ccGroupEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-ENTITY-MIB", "shelfIndex"),
    (0, "CM-ENTITY-MIB", "slotIndex"),
    (0, "CM-FACILITY-MIB", "ccGroupIndex"),
)
if mibBuilder.loadTexts:
    ccGroupEntry.setStatus("current")


class _CcGroupIndex_Type(Integer32):
    """Custom type ccGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CcGroupIndex_Type.__name__ = "Integer32"
_CcGroupIndex_Object = MibTableColumn
ccGroupIndex = _CcGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 1),
    _CcGroupIndex_Type()
)
ccGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccGroupIndex.setStatus("current")
_CcGroupIfIndex_Type = InterfaceIndex
_CcGroupIfIndex_Object = MibTableColumn
ccGroupIfIndex = _CcGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 2),
    _CcGroupIfIndex_Type()
)
ccGroupIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccGroupIfIndex.setStatus("current")
_CcGroupEntityIndex_Type = PhysicalIndex
_CcGroupEntityIndex_Object = MibTableColumn
ccGroupEntityIndex = _CcGroupEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 3),
    _CcGroupEntityIndex_Type()
)
ccGroupEntityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ccGroupEntityIndex.setStatus("current")


class _CcGroupAlias_Type(DisplayString):
    """Custom type ccGroupAlias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CcGroupAlias_Type.__name__ = "DisplayString"
_CcGroupAlias_Object = MibTableColumn
ccGroupAlias = _CcGroupAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 4),
    _CcGroupAlias_Type()
)
ccGroupAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccGroupAlias.setStatus("current")
_CcGroupActivePorts_Type = CcActivePortState
_CcGroupActivePorts_Object = MibTableColumn
ccGroupActivePorts = _CcGroupActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 5),
    _CcGroupActivePorts_Type()
)
ccGroupActivePorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccGroupActivePorts.setStatus("current")


class _CcGroupPhaseAdjust_Type(Integer32):
    """Custom type ccGroupPhaseAdjust based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 249999),
    )


_CcGroupPhaseAdjust_Type.__name__ = "Integer32"
_CcGroupPhaseAdjust_Object = MibTableColumn
ccGroupPhaseAdjust = _CcGroupPhaseAdjust_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 6),
    _CcGroupPhaseAdjust_Type()
)
ccGroupPhaseAdjust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccGroupPhaseAdjust.setStatus("current")
_CcGroupDutyCycle_Type = CcPortDutyCycle
_CcGroupDutyCycle_Object = MibTableColumn
ccGroupDutyCycle = _CcGroupDutyCycle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 112, 1, 7),
    _CcGroupDutyCycle_Type()
)
ccGroupDutyCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ccGroupDutyCycle.setStatus("current")
_CmEncapFlowPointTable_Object = MibTable
cmEncapFlowPointTable = _CmEncapFlowPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113)
)
if mibBuilder.loadTexts:
    cmEncapFlowPointTable.setStatus("current")
_CmEncapFlowPointEntry_Object = MibTableRow
cmEncapFlowPointEntry = _CmEncapFlowPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1)
)
cmEncapFlowPointEntry.setIndexNames(
    (0, "CM-ENTITY-MIB", "neIndex"),
    (0, "CM-FACILITY-MIB", "cmEncapFlowPointIndex"),
)
if mibBuilder.loadTexts:
    cmEncapFlowPointEntry.setStatus("current")


class _CmEncapFlowPointIndex_Type(Integer32):
    """Custom type cmEncapFlowPointIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CmEncapFlowPointIndex_Type.__name__ = "Integer32"
_CmEncapFlowPointIndex_Object = MibTableColumn
cmEncapFlowPointIndex = _CmEncapFlowPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 1),
    _CmEncapFlowPointIndex_Type()
)
cmEncapFlowPointIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointIndex.setStatus("current")


class _CmEncapFlowPointCircuitName_Type(DisplayString):
    """Custom type cmEncapFlowPointCircuitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CmEncapFlowPointCircuitName_Type.__name__ = "DisplayString"
_CmEncapFlowPointCircuitName_Object = MibTableColumn
cmEncapFlowPointCircuitName = _CmEncapFlowPointCircuitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 2),
    _CmEncapFlowPointCircuitName_Type()
)
cmEncapFlowPointCircuitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointCircuitName.setStatus("current")
_CmEncapFlowPointAssociatedFlowId_Type = VariablePointer
_CmEncapFlowPointAssociatedFlowId_Object = MibTableColumn
cmEncapFlowPointAssociatedFlowId = _CmEncapFlowPointAssociatedFlowId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 3),
    _CmEncapFlowPointAssociatedFlowId_Type()
)
cmEncapFlowPointAssociatedFlowId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cmEncapFlowPointAssociatedFlowId.setStatus("current")
_CmEncapFlowPointRefEoMplsPwObject_Type = VariablePointer
_CmEncapFlowPointRefEoMplsPwObject_Object = MibTableColumn
cmEncapFlowPointRefEoMplsPwObject = _CmEncapFlowPointRefEoMplsPwObject_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 4),
    _CmEncapFlowPointRefEoMplsPwObject_Type()
)
cmEncapFlowPointRefEoMplsPwObject.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointRefEoMplsPwObject.setStatus("current")
_CmEncapFlowPointCTagControl_Type = FlowTagControl
_CmEncapFlowPointCTagControl_Object = MibTableColumn
cmEncapFlowPointCTagControl = _CmEncapFlowPointCTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 5),
    _CmEncapFlowPointCTagControl_Type()
)
cmEncapFlowPointCTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointCTagControl.setStatus("current")
_CmEncapFlowPointCTagVlanId_Type = VlanId
_CmEncapFlowPointCTagVlanId_Object = MibTableColumn
cmEncapFlowPointCTagVlanId = _CmEncapFlowPointCTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 6),
    _CmEncapFlowPointCTagVlanId_Type()
)
cmEncapFlowPointCTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointCTagVlanId.setStatus("current")
_CmEncapFlowPointCTagVlanPriority_Type = VlanPriority
_CmEncapFlowPointCTagVlanPriority_Object = MibTableColumn
cmEncapFlowPointCTagVlanPriority = _CmEncapFlowPointCTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 7),
    _CmEncapFlowPointCTagVlanPriority_Type()
)
cmEncapFlowPointCTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointCTagVlanPriority.setStatus("current")
_CmEncapFlowPointSTagControl_Type = FlowTagControl
_CmEncapFlowPointSTagControl_Object = MibTableColumn
cmEncapFlowPointSTagControl = _CmEncapFlowPointSTagControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 8),
    _CmEncapFlowPointSTagControl_Type()
)
cmEncapFlowPointSTagControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointSTagControl.setStatus("current")
_CmEncapFlowPointSTagVlanId_Type = VlanId
_CmEncapFlowPointSTagVlanId_Object = MibTableColumn
cmEncapFlowPointSTagVlanId = _CmEncapFlowPointSTagVlanId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 9),
    _CmEncapFlowPointSTagVlanId_Type()
)
cmEncapFlowPointSTagVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointSTagVlanId.setStatus("current")
_CmEncapFlowPointSTagVlanPriority_Type = VlanPriority
_CmEncapFlowPointSTagVlanPriority_Object = MibTableColumn
cmEncapFlowPointSTagVlanPriority = _CmEncapFlowPointSTagVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 10),
    _CmEncapFlowPointSTagVlanPriority_Type()
)
cmEncapFlowPointSTagVlanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointSTagVlanPriority.setStatus("current")
_CmEncapFlowPointEgressOuterTagPrioMapEnabled_Type = TruthValue
_CmEncapFlowPointEgressOuterTagPrioMapEnabled_Object = MibTableColumn
cmEncapFlowPointEgressOuterTagPrioMapEnabled = _CmEncapFlowPointEgressOuterTagPrioMapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 11),
    _CmEncapFlowPointEgressOuterTagPrioMapEnabled_Type()
)
cmEncapFlowPointEgressOuterTagPrioMapEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointEgressOuterTagPrioMapEnabled.setStatus("current")
_CmEncapFlowPointEgressInnerTagPrioMapEnabled_Type = TruthValue
_CmEncapFlowPointEgressInnerTagPrioMapEnabled_Object = MibTableColumn
cmEncapFlowPointEgressInnerTagPrioMapEnabled = _CmEncapFlowPointEgressInnerTagPrioMapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 12),
    _CmEncapFlowPointEgressInnerTagPrioMapEnabled_Type()
)
cmEncapFlowPointEgressInnerTagPrioMapEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointEgressInnerTagPrioMapEnabled.setStatus("current")
_CmEncapFlowPointRefPrioMapProfile_Type = VariablePointer
_CmEncapFlowPointRefPrioMapProfile_Object = MibTableColumn
cmEncapFlowPointRefPrioMapProfile = _CmEncapFlowPointRefPrioMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 13),
    _CmEncapFlowPointRefPrioMapProfile_Type()
)
cmEncapFlowPointRefPrioMapProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cmEncapFlowPointRefPrioMapProfile.setStatus("current")
_CmEncapFlowPointStorageType_Type = StorageType
_CmEncapFlowPointStorageType_Object = MibTableColumn
cmEncapFlowPointStorageType = _CmEncapFlowPointStorageType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 14),
    _CmEncapFlowPointStorageType_Type()
)
cmEncapFlowPointStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointStorageType.setStatus("current")
_CmEncapFlowPointRowStatus_Type = RowStatus
_CmEncapFlowPointRowStatus_Object = MibTableColumn
cmEncapFlowPointRowStatus = _CmEncapFlowPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 1, 113, 1, 15),
    _CmEncapFlowPointRowStatus_Type()
)
cmEncapFlowPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cmEncapFlowPointRowStatus.setStatus("current")
_CmFacilityConformance_ObjectIdentity = ObjectIdentity
cmFacilityConformance = _CmFacilityConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2)
)
_CmFacilityCompliances_ObjectIdentity = ObjectIdentity
cmFacilityCompliances = _CmFacilityCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 1)
)
_CmFacilityGroups_ObjectIdentity = ObjectIdentity
cmFacilityGroups = _CmFacilityGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2)
)
cmEthernetTrafficPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetTrafficPortExtEntry")
)
cmEthernetTrafficPortExtEntry.setIndexNames(*cmEthernetTrafficPortEntry.getIndexNames())
cmEthernetNetPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetNetPortExtEntry")
)
cmEthernetNetPortExtEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())
networkElementEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "networkElementTMParamsEntry")
)
networkElementTMParamsEntry.setIndexNames(*networkElementEntry.getIndexNames())
cmEthernetAccPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetAccPortJdsuExtEntry")
)
cmEthernetAccPortJdsuExtEntry.setIndexNames(*cmEthernetAccPortEntry.getIndexNames())
cmEthernetNetPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetNetPortJdsuExtEntry")
)
cmEthernetNetPortJdsuExtEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())
cmEthernetAccPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmAccPortExtEntry")
)
cmAccPortExtEntry.setIndexNames(*cmEthernetAccPortEntry.getIndexNames())
cmEthernetNetPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmNetPortExtEntry")
)
cmNetPortExtEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())
cmEthernetTrafficPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetTrafficPortJdsuExtEntry")
)
cmEthernetTrafficPortJdsuExtEntry.setIndexNames(*cmEthernetTrafficPortEntry.getIndexNames())
cmEthernetNetPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetNetPortPppoeParamEntry")
)
cmEthernetNetPortPppoeParamEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())
cmEthernetNetPortEntry.registerAugmentions(
    ("CM-FACILITY-MIB",
     "cmEthernetNetPortXdslParamEntry")
)
cmEthernetNetPortXdslParamEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())

# Managed Objects groups

cmFacilityObjectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 1)
)
cmFacilityObjectGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortJumboFramesEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInitiateDiag"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair1Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair2Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair3Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair4Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseAutoNegCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseEfmLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseResult"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseTestStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseTestTime"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamAdminDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSvcType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxPauseDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdFilterType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdFilterDescr"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdMacAddressMatch"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdMacAddressMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdEthertype"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdEthertypeMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdSubtype"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdSubtypeMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbLength"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbDescr"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpReach"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAutoDiagEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortN2AVlanTrunkingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortA2NPushPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortN2APopPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPortVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPortVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPrioMapMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmFlowIndex"),
        ("CM-FACILITY-MIB", "cmFlowCircuitName"),
        ("CM-FACILITY-MIB", "cmFlowAdminState"),
        ("CM-FACILITY-MIB", "cmFlowOperationalState"),
        ("CM-FACILITY-MIB", "cmFlowSecondaryState"),
        ("CM-FACILITY-MIB", "cmFlowType"),
        ("CM-FACILITY-MIB", "cmFlowMultiCOS"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIR"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIR"),
        ("CM-FACILITY-MIB", "cmFlowN2ARateLimitingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIR"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIR"),
        ("CM-FACILITY-MIB", "cmFlowStorageType"),
        ("CM-FACILITY-MIB", "cmFlowRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowTrafficType"),
        ("CM-FACILITY-MIB", "cmFlowCOS"),
        ("CM-FACILITY-MIB", "cmFlowVlanMemberList"),
        ("CM-FACILITY-MIB", "cmFlowAction"),
        ("CM-FACILITY-MIB", "cmFlowActionVlan"),
        ("CM-FACILITY-MIB", "cmFlowUntaggedMemberEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIRHi"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowHCOSMgmtEnabled"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowCTagControl"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowCTagMatchRxPrio"),
        ("CM-FACILITY-MIB", "cmFlowSTagControl"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACOSPriorityTagType"),
        ("CM-FACILITY-MIB", "cmFlowESFramesLossThreshold"),
        ("CM-FACILITY-MIB", "cmFlowSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmFlowPolicingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPreserveSTagProperties"),
        ("CM-FACILITY-MIB", "cmFlowInnerTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2AOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowCpdIndex"),
        ("CM-FACILITY-MIB", "cmFlowCpdFilterType"),
        ("CM-FACILITY-MIB", "cmFlowCpdFilterDescr"),
        ("CM-FACILITY-MIB", "cmFlowCpdDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdMacAddressMatch"),
        ("CM-FACILITY-MIB", "cmFlowCpdMacAddressMask"),
        ("CM-FACILITY-MIB", "cmFlowCpdEthertype"),
        ("CM-FACILITY-MIB", "cmFlowCpdEthertypeMask"),
        ("CM-FACILITY-MIB", "cmFlowCpdSubtype"),
        ("CM-FACILITY-MIB", "cmFlowCpdSubtypeMask"),
        ("CM-FACILITY-MIB", "cmQosShaperTypeIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperDirection"),
        ("CM-FACILITY-MIB", "cmQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmQosShaperCIR"),
        ("CM-FACILITY-MIB", "cmQosShaperCBS"),
        ("CM-FACILITY-MIB", "cmQosShaperEIR"),
        ("CM-FACILITY-MIB", "cmQosShaperEBS"),
        ("CM-FACILITY-MIB", "cmQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmQosShaperStorageType"),
        ("CM-FACILITY-MIB", "cmQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "cmQosShaperCOS"),
        ("CM-FACILITY-MIB", "cmQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortJumboFramesEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInitiateDiag"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair1Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair2Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair3Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair4Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseAutoNegCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseEfmLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseResult"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseTestStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseTestTime"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamAdminDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortRxPauseDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpReach"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAutoDiagEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdFilterType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdFilterDescr"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdMacAddressMatch"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdMacAddressMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdEthertype"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdEthertypeMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdSubtype"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdSubtypeMask"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmPrioMapIndex"),
        ("CM-FACILITY-MIB", "cmPrioMapInPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapXTagControl"),
        ("CM-FACILITY-MIB", "cmPrioMapXTagPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapCOS"),
        ("CM-FACILITY-MIB", "cmPrioMapOuterTagPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapInnerTagPriority"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerIndex"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerDirection"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAdminState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerOperationalState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerSecondaryState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCBS"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEBS"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAlgorithm"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerColorMode"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerColorMarkingFlag"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCouplingFlag"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAssociatedShaper"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerStorageType"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerRowStatus"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperDirection"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCBS"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEBS"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCOS"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Index"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Index"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2ActiveControlProtocols"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Index"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "bitsPortTypeIndex"),
        ("CM-FACILITY-MIB", "bitsPortIndex"),
        ("CM-FACILITY-MIB", "bitsPortIfIndex"),
        ("CM-FACILITY-MIB", "bitsPortEntityIndex"),
        ("CM-FACILITY-MIB", "bitsPortAdminState"),
        ("CM-FACILITY-MIB", "bitsPortOperationalState"),
        ("CM-FACILITY-MIB", "bitsPortSecondaryState"),
        ("CM-FACILITY-MIB", "bitsPortType"),
        ("CM-FACILITY-MIB", "bitsPortLineType"),
        ("CM-FACILITY-MIB", "bitsPortLineCode"),
        ("CM-FACILITY-MIB", "bitsPortFrameFormat"),
        ("CM-FACILITY-MIB", "bitsPortSaBitDesignation"),
        ("CM-FACILITY-MIB", "bitsPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "bitsPortExpectedQL"),
        ("CM-FACILITY-MIB", "bitsPortAssumedQL"),
        ("CM-FACILITY-MIB", "bitsPortReceivedQL"),
        ("CM-FACILITY-MIB", "bitsPortTransmitQL"),
        ("CM-FACILITY-MIB", "bitsPortSquelchQL"),
        ("CM-FACILITY-MIB", "bitsPortLineBuildOut"),
        ("CM-FACILITY-MIB", "bitsPortImpedance"),
        ("CM-FACILITY-MIB", "bitsPortCrc4"),
        ("CM-FACILITY-MIB", "bitsPortIdleCode"),
        ("CM-FACILITY-MIB", "bitsPortAis"),
        ("CM-FACILITY-MIB", "bitsPortSaBitsAdminState"),
        ("CM-FACILITY-MIB", "bitsPortSquelchControl"),
        ("CM-FACILITY-MIB", "bitsPortSignalShape"),
        ("CM-FACILITY-MIB", "bitsPortSignalFrequency"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortIndex"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortIfIndex"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortEntityIndex"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortAdminState"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortOperationalState"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortSecondaryState"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortMTU"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortMediaType"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortConfigSpeed"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "ieee1588EthernetPortMDIXType"),
        ("CM-FACILITY-MIB", "gps10MHzPortIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortIfIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortEntityIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortAdminState"),
        ("CM-FACILITY-MIB", "gps10MHzPortOperationalState"),
        ("CM-FACILITY-MIB", "gps10MHzPortSecondaryState"),
        ("CM-FACILITY-MIB", "gps10MHzPortSignalDirection"),
        ("CM-FACILITY-MIB", "gps10MHzPortSquelchControl"),
        ("CM-FACILITY-MIB", "gps10MHzPortSquelchQL"),
        ("CM-FACILITY-MIB", "gps10MHzPortFrequencySource"),
        ("CM-FACILITY-MIB", "gps10MHzPortClockClass"),
        ("CM-FACILITY-MIB", "gps10MHzPortClockAccuracy"),
        ("CM-FACILITY-MIB", "gps10MHzPortTimeSource"),
        ("CM-FACILITY-MIB", "gps10MHzPortAssumedQL"),
        ("CM-FACILITY-MIB", "gps10MHzPortAlias"),
        ("CM-FACILITY-MIB", "gps10MHzPortInputSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbLength"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbDescr"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapCOS"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapOuterTagPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileIndex"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileName"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileCiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileIslDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfilePagpDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileUdldDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileCdpDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileVtpDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileDtpDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfilePvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileUplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileVlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileL2PTDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileBridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileBPDUDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfilePauseDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileLACPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileLACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileEfmOamDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileSSMDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfilePortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileBridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileLANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileGARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileGMRPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileGVRPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileGARPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileLldpDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileStorageType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileRowStatus"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac00DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac01DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac02DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac03DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac04DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac05DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac06DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac07DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac08DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac09DispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0ADispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0BDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0CDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0DDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0EDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileMac0FDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileNearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileNonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileCustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmPortCpdProfileELMIDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileIndex"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileName"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileCiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileIslDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfilePagpDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileUdldDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileCdpDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileVtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileDtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfilePvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileUplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileVlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileL2PTDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileBridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileBPDUDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfilePauseDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileLACPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileLACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileEfmOamDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileSSMDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfilePortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileBridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileLANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileGARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileGMRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileGVRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileGARPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileLldpDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileStorageType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac00DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac01DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac02DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac03DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac04DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac05DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac06DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac07DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac08DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac09DispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0ADispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0BDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0CDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0DDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0EDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileMac0FDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileNearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileNonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileCustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmFlowPointCpdProfileELMIDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAssociatedCpdProfile"),
        ("CM-FACILITY-MIB", "cmEthernetFlowPointCpdIndex"),
        ("CM-FACILITY-MIB", "cmEthernetFlowPointAssociatedCpdProfile"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSvcType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressVlanTrunkingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressPushPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressPopPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPortVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPortVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPriorityVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressPrioMapMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressCOSPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressPopPriorityVidEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTagFrameControl"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPhyType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLaserWaveLengthPicometer"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRowStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSSMRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugGMetroAutoTuningMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugChannelType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugITUCbandChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugRelativeChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugOutOfBandChannelStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugITUCbandChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugRelativeChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLaserFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmIngressPrioMapIndex"),
        ("CM-FACILITY-MIB", "cmIngressPrioMapInPriority"),
        ("CM-FACILITY-MIB", "cmIngressPrioMapCOS"),
        ("CM-FACILITY-MIB", "cmEgressCOSIndex"),
        ("CM-FACILITY-MIB", "cmEgressOuterTagCtrl"),
        ("CM-FACILITY-MIB", "cmEgressCOS"),
        ("CM-FACILITY-MIB", "cmEgressOuterTagPriority"),
        ("CM-FACILITY-MIB", "cmElineFlowIndex"),
        ("CM-FACILITY-MIB", "cmElineFlowCircuitName"),
        ("CM-FACILITY-MIB", "cmElineFlowAdminState"),
        ("CM-FACILITY-MIB", "cmElineFlowOperationalState"),
        ("CM-FACILITY-MIB", "cmElineFlowSecondaryState"),
        ("CM-FACILITY-MIB", "cmElineFlowFP1"),
        ("CM-FACILITY-MIB", "cmElineFlowFP2"),
        ("CM-FACILITY-MIB", "cmElineFlowStorageType"),
        ("CM-FACILITY-MIB", "cmElineFlowRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowPointIndex"),
        ("CM-FACILITY-MIB", "cmFlowPointCircuitName"),
        ("CM-FACILITY-MIB", "cmFlowPointAdminState"),
        ("CM-FACILITY-MIB", "cmFlowPointOperationalState"),
        ("CM-FACILITY-MIB", "cmFlowPointSecondaryState"),
        ("CM-FACILITY-MIB", "cmFlowPointAssociatedFlowId"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressMultiCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressVlanMemberList"),
        ("CM-FACILITY-MIB", "cmFlowPointVlanMemberAction"),
        ("CM-FACILITY-MIB", "cmFlowPointAssociatedAclProfile"),
        ("CM-FACILITY-MIB", "cmFlowPointSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmFlowPointVlanMemberActionVlan"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressUntaggedFrameEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagControl"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagControl"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowPointEgressOuterTagPrioMapEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointColorMarkingSupported"),
        ("CM-FACILITY-MIB", "cmFlowPointStorageType"),
        ("CM-FACILITY-MIB", "cmFlowPointRowStatus"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2Index"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2AdminState"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2OperationalState"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2SecondaryState"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2ColorMarkingEnabled"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2AssociatedProfile"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2StorageType"),
        ("CM-FACILITY-MIB", "cmQosPolicerV2RowStatus"),
        ("CM-FACILITY-MIB", "cmQosShaperV2Index"),
        ("CM-FACILITY-MIB", "cmQosShaperV2AdminState"),
        ("CM-FACILITY-MIB", "cmQosShaperV2OperationalState"),
        ("CM-FACILITY-MIB", "cmQosShaperV2SecondaryState"),
        ("CM-FACILITY-MIB", "cmQosShaperV2AssociatedQueueProfile"),
        ("CM-FACILITY-MIB", "cmQosShaperV2CIRLo"),
        ("CM-FACILITY-MIB", "cmQosShaperV2CIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperV2EIRLo"),
        ("CM-FACILITY-MIB", "cmQosShaperV2EIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperV2IngressAverageFrameSize"),
        ("CM-FACILITY-MIB", "cmQosShaperV2StorageType"),
        ("CM-FACILITY-MIB", "cmQosShaperV2RowStatus"),
        ("CM-FACILITY-MIB", "cmQosShaperV2AdditionalCIRLo"),
        ("CM-FACILITY-MIB", "cmQosShaperV2AdditionalCIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperV2ActualCIR"),
        ("CM-FACILITY-MIB", "cmQosShaperV2ActualEIR"),
        ("CM-FACILITY-MIB", "cmQosShaperV2WFQWeight"),
        ("CM-FACILITY-MIB", "cmQosShaperV2LowLatencyControl"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAssociatedQueueProfile"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperStorageType"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperIngressAverageFrameSize"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdditionalCIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdditionalCIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperWfqWeight"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileIndex"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileName"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileCIRLo"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileCIRHi"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileEIRLo"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileEIRHi"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileCBS"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileEBS"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileColorMode"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileCouplingFlag"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileStorageType"),
        ("CM-FACILITY-MIB", "cmQosPolicerProfileRowStatus"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileIndex"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileName"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileBufferSize"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileREDEnabled"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileStorageType"),
        ("CM-FACILITY-MIB", "cmQosQueueProfileRowStatus"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointIndex"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointCircuitName"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointAdminState"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointOperationalState"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointSecondaryState"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointIngressVlanMemberList"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointVlanMemberAction"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointIngressUntaggedFrameSupported"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointStorageType"),
        ("CM-FACILITY-MIB", "cmOAMFlowPointRowStatus"),
        ("CM-FACILITY-MIB", "cmTrafficAclRulesIndex"),
        ("CM-FACILITY-MIB", "cmTrafficAclFilterAction"),
        ("CM-FACILITY-MIB", "cmTrafficAclFilterType"),
        ("CM-FACILITY-MIB", "cmTrafficAclEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcMacAddr"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcMacAddrEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstMacAddr"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstMacAddrEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcIpFilterEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstIpFilterEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcIpV4Addr"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcIpV4AddrMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstIpV4Addr"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstIpV4AddrMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcIpV6Addr"),
        ("CM-FACILITY-MIB", "cmTrafficAclSrcIpV6AddrMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstIpV6Addr"),
        ("CM-FACILITY-MIB", "cmTrafficAclDstIpV6AddrMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpSrcPortNum"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpSrcPortMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpSrcPortEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpDstPortNum"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpDstPortMask"),
        ("CM-FACILITY-MIB", "cmTrafficAclTcpUdpDstPortEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclIpQosType"),
        ("CM-FACILITY-MIB", "cmTrafficAclIpQosValue"),
        ("CM-FACILITY-MIB", "cmTrafficAclIpQosTypeEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclVlanId"),
        ("CM-FACILITY-MIB", "cmTrafficAclVlanIdEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclVlanPriority"),
        ("CM-FACILITY-MIB", "cmTrafficAclVlanPriorityEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclProtocolType"),
        ("CM-FACILITY-MIB", "cmTrafficAclProtocolTypeEnabled"),
        ("CM-FACILITY-MIB", "cmTrafficAclStorageType"),
        ("CM-FACILITY-MIB", "cmTrafficAclRowStatus"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperDirection"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCBS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEBS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCOS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamCIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamCIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamEIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamEIRHi"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortIndex"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortIfIndex"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortAdminState"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortOperationalState"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortVendorName"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortModel"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortFSN"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortIMEI"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortHardwareVersion"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortFirmwareVersion"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortSIMStatus"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortPINLeftChances"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortPUKLeftChances"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortConnectionStatus"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortRSSI"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortSpeed"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortMTU"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortProviderName"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortDNS1"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortDNS2"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortAPN"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortUserName"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortPassword"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortDailNumber"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortRedialTimer"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortCurrentPinCode"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortNewPinCode"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortConfirmPinCode"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortCurrentPukCode"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPINCodeAction"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortStorageType"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortRowStatus"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortIMSI"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortPINStatus"),
        ("CM-FACILITY-MIB", "f3UsbDCNPortMobileNetworkType"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNMuxOperationalMode"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortIpAddress"),
        ("CM-FACILITY-MIB", "f3Usb3GDCNPortNetMask"),
        ("CM-FACILITY-MIB", "ocnStmIndex"),
        ("CM-FACILITY-MIB", "ocnStmIfIndex"),
        ("CM-FACILITY-MIB", "ocnStmEntityIndex"),
        ("CM-FACILITY-MIB", "ocnStmAdminState"),
        ("CM-FACILITY-MIB", "ocnStmOperationalState"),
        ("CM-FACILITY-MIB", "ocnStmSecondaryState"),
        ("CM-FACILITY-MIB", "ocnStmSfpVendorName"),
        ("CM-FACILITY-MIB", "ocnStmSfpPartNumber"),
        ("CM-FACILITY-MIB", "ocnStmSfpSerialNumber"),
        ("CM-FACILITY-MIB", "ocnStmSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "ocnStmSfpConnectorValue"),
        ("CM-FACILITY-MIB", "ocnStmSfpLinkLength"),
        ("CM-FACILITY-MIB", "ocnStmSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "ocnStmSfpLaserWaveLengthPicometer"),
        ("CM-FACILITY-MIB", "ocnStmSfpMediaType"),
        ("CM-FACILITY-MIB", "ocnStmMultiplexingStructures"),
        ("CM-FACILITY-MIB", "ocnStmEoTDMMode"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackConfig"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackStatus"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackTime"),
        ("CM-FACILITY-MIB", "ocnStmInsertingAIS"),
        ("CM-FACILITY-MIB", "ocnStmBerExcThreshold"),
        ("CM-FACILITY-MIB", "ocnStmBerDegThreshold"),
        ("CM-FACILITY-MIB", "ocnStmRxTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmTxTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmTrailTraceFormat"),
        ("CM-FACILITY-MIB", "ocnStmQLModeEnabled"),
        ("CM-FACILITY-MIB", "ocnStmExpectedQL"),
        ("CM-FACILITY-MIB", "ocnStmAssumedQL"),
        ("CM-FACILITY-MIB", "ocnStmReceivedQL"),
        ("CM-FACILITY-MIB", "ocnStmTransmitQL"),
        ("CM-FACILITY-MIB", "ocnStmSfpName"),
        ("CM-FACILITY-MIB", "ocnStmSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "stsVcPathParentIfIndex"),
        ("CM-FACILITY-MIB", "stsVcPathIndex"),
        ("CM-FACILITY-MIB", "stsVcPathIfIndex"),
        ("CM-FACILITY-MIB", "stsVcPathAdminState"),
        ("CM-FACILITY-MIB", "stsVcPathOperationalState"),
        ("CM-FACILITY-MIB", "stsVcPathSecondaryState"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackConfig"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackStatus"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackTime"),
        ("CM-FACILITY-MIB", "stsVcPathInsertingAIS"),
        ("CM-FACILITY-MIB", "stsVcPathBerExcThreshold"),
        ("CM-FACILITY-MIB", "stsVcPathBerDegThreshold"),
        ("CM-FACILITY-MIB", "stsVcPathTrailTraceFormat"),
        ("CM-FACILITY-MIB", "stsVcPathRxTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathTxTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathRxSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathTxSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathExpectedSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathRowStatus"),
        ("CM-FACILITY-MIB", "vtVcPathRowStatus"),
        ("CM-FACILITY-MIB", "vtVcPathParentIfIndex"),
        ("CM-FACILITY-MIB", "vtVcPathIndex"),
        ("CM-FACILITY-MIB", "vtVcPathIfIndex"),
        ("CM-FACILITY-MIB", "vtVcPathAdminState"),
        ("CM-FACILITY-MIB", "vtVcPathOperationalState"),
        ("CM-FACILITY-MIB", "vtVcPathSecondaryState"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackConfig"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackStatus"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackTime"),
        ("CM-FACILITY-MIB", "vtVcPathInsertingAIS"),
        ("CM-FACILITY-MIB", "vtVcPathBerExcThreshold"),
        ("CM-FACILITY-MIB", "vtVcPathBerDegThreshold"),
        ("CM-FACILITY-MIB", "vtVcPathTrailTraceFormat"),
        ("CM-FACILITY-MIB", "vtVcPathRxTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathTxTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathRxSignalLabel"),
        ("CM-FACILITY-MIB", "vtVcPathTxSignalLabel"),
        ("CM-FACILITY-MIB", "vtVcPathExpectedSignalLabel"),
        ("CM-FACILITY-MIB", "e1t1ParentIfIndex"),
        ("CM-FACILITY-MIB", "e1t1Index"),
        ("CM-FACILITY-MIB", "e1t1IfIndex"),
        ("CM-FACILITY-MIB", "e1t1AdminState"),
        ("CM-FACILITY-MIB", "e1t1OperationalState"),
        ("CM-FACILITY-MIB", "e1t1SecondaryState"),
        ("CM-FACILITY-MIB", "e1t1LoopbackConfig"),
        ("CM-FACILITY-MIB", "e1t1LoopbackStatus"),
        ("CM-FACILITY-MIB", "e1t1LoopbackTime"),
        ("CM-FACILITY-MIB", "e1t1RemoteLoopbackRequest"),
        ("CM-FACILITY-MIB", "e1t1InsertingAIS"),
        ("CM-FACILITY-MIB", "e1t1RowStatus"),
        ("CM-FACILITY-MIB", "e3t3ParentIfIndex"),
        ("CM-FACILITY-MIB", "e3t3Index"),
        ("CM-FACILITY-MIB", "e3t3IfIndex"),
        ("CM-FACILITY-MIB", "e3t3EntityIndex"),
        ("CM-FACILITY-MIB", "e3t3AdminState"),
        ("CM-FACILITY-MIB", "e3t3OperationalState"),
        ("CM-FACILITY-MIB", "e3t3SecondaryState"),
        ("CM-FACILITY-MIB", "e3t3LoopbackConfig"),
        ("CM-FACILITY-MIB", "e3t3LoopbackStatus"),
        ("CM-FACILITY-MIB", "e3t3LoopbackTime"),
        ("CM-FACILITY-MIB", "e3t3RemoteLoopbackRequest"),
        ("CM-FACILITY-MIB", "e3t3InsertingAIS"),
        ("CM-FACILITY-MIB", "e3t3CBitEnable"),
        ("CM-FACILITY-MIB", "e3t3T3Channelized"),
        ("CM-FACILITY-MIB", "e3t3RowStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTDMEncapsulation"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRelatedVCG"),
        ("CM-FACILITY-MIB", "bits8PortGroupIndex"),
        ("CM-FACILITY-MIB", "bits8PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "bits8PortGroupAdminState"),
        ("CM-FACILITY-MIB", "bits8PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "bits8PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineType"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineCode"),
        ("CM-FACILITY-MIB", "bits8PortGroupFrameFormat"),
        ("CM-FACILITY-MIB", "bits8PortGroupSaBitDesignation"),
        ("CM-FACILITY-MIB", "bits8PortGroupQLModeEnabled"),
        ("CM-FACILITY-MIB", "bits8PortGroupTransmitQL"),
        ("CM-FACILITY-MIB", "bits8PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineBuildOut"),
        ("CM-FACILITY-MIB", "bits8PortGroupImpedance"),
        ("CM-FACILITY-MIB", "bits8PortGroupRowStatus"),
        ("CM-FACILITY-MIB", "bits8PortGroupActivePorts"),
        ("CM-FACILITY-MIB", "bits8PortGroupClkIfEnabledPorts"),
        ("CM-FACILITY-MIB", "pps16PortGroupIndex"),
        ("CM-FACILITY-MIB", "pps16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "pps16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "pps16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "pps16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "pps16PortGroupAlias"),
        ("CM-FACILITY-MIB", "pps16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "pps16PortGroupTODSource"),
        ("CM-FACILITY-MIB", "pps16PortGroupDirection"),
        ("CM-FACILITY-MIB", "pps16PortGroupDelayCompensation"),
        ("CM-FACILITY-MIB", "pps16PortGroupRowStatus"),
        ("CM-FACILITY-MIB", "clk16PortGroupIndex"),
        ("CM-FACILITY-MIB", "clk16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "clk16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "clk16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "clk16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "clk16PortGroupAlias"),
        ("CM-FACILITY-MIB", "clk16PortGroupDirection"),
        ("CM-FACILITY-MIB", "clk16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "clk16PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "clk16PortGroupRowStatus"),
        ("CM-FACILITY-MIB", "todPps16PortGroupIndex"),
        ("CM-FACILITY-MIB", "todPps16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "todPps16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupAlias"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "todPps16PortGroupTODSource"),
        ("CM-FACILITY-MIB", "todPps16PortGroupOutputFormat"),
        ("CM-FACILITY-MIB", "todPps16PortGroupDelayCompensation"),
        ("CM-FACILITY-MIB", "todPps16PortGroupRowStatus"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortRelayOperation"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupAlias"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupExtensionType"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupExtensionDetection"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortType"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortDigitalVoltage"),
        ("CM-FACILITY-MIB", "ccInputPortIndex"),
        ("CM-FACILITY-MIB", "ccInputPortIfIndex"),
        ("CM-FACILITY-MIB", "ccInputPortEntityIndex"),
        ("CM-FACILITY-MIB", "ccInputPortAlias"),
        ("CM-FACILITY-MIB", "ccInputPortAdminState"),
        ("CM-FACILITY-MIB", "ccInputPortOperationalState"),
        ("CM-FACILITY-MIB", "ccInputPortSecondaryState"),
        ("CM-FACILITY-MIB", "ccGroupIndex"),
        ("CM-FACILITY-MIB", "ccGroupIfIndex"),
        ("CM-FACILITY-MIB", "ccGroupEntityIndex"),
        ("CM-FACILITY-MIB", "ccGroupAlias"),
        ("CM-FACILITY-MIB", "ccGroupActivePorts"),
        ("CM-FACILITY-MIB", "ccGroupPhaseAdjust"),
        ("CM-FACILITY-MIB", "ccGroupDutyCycle"))
)
if mibBuilder.loadTexts:
    cmFacilityObjectGroup.setStatus("deprecated")

ethernetAccessPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 2)
)
ethernetAccessPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetAccPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortJumboFramesEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInitiateDiag"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair1Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair2Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair3Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosePair4Cond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseAutoNegCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseEfmLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseResult"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseTestStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnoseTestTime"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamAdminDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSvcType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxPauseDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpReach"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAutoDiagEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortN2AVlanTrunkingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortA2NPushPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortN2APopPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPortVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPortVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPrioMapMode"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDeiEnable"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPcpDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPcpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbIndex"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbLength"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortClbDescr"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSSMRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortXgePhyType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackSourceMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackDestMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackSourceMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackDestMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackBlockingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortRxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLaserWDMChannel"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLaserIsTunable"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLaserFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortMediaTypeAutoSelected"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLowLatencyQueuingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortA2nSwapPriorityVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortN2aSwapPriorityVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSwapPriorityVID"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDiagnosticMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortIngressCOSPriority"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortDefaultCOS"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortTrafficModel"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortIndependentShaperBW"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortJdsuLoopbackSrcIp"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortWfqSegmentationCOS"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortWfqGroupCOS"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortWfqGroupEirLo"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortWfqGroupEirHi"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSilentStartControl"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterTagTpidOverride"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortOuterTagTpid"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPersistentLoopbackControl"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTestReflectorIPv4Address"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortLoopbackTestReflectorIPv6Address"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPowerdDeviceDetection"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortPoEStatus"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortSfpIdentifierValue"))
)
if mibBuilder.loadTexts:
    ethernetAccessPortGroup.setStatus("current")

ethernetNetworkPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 3)
)
ethernetNetworkPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetNetPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortJumboFramesEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInitiateDiag"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair1Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair2Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair3Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosePair4Cond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseAutoNegCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseEfmLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseResult"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseTestStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnoseTestTime"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamAdminDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortRxPauseDisposition"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpReach"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAutoDiagEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDeiEnable"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPcpDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPcpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbIndex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbLength"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortClbDescr"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSSMRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXgePhyType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackSourceMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackDestMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackSourceMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackDestMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackBlockingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortRxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortRxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLaserWDMChannel"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLaserIsTunable"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLaserFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortMediaTypeAutoSelected"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLowLatencyQueuingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDiagnosticMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIngressCOSPriority"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortDefaultCOS"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortTrafficModel"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIndependentShaperBW"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortExpDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortExpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIpPrecDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortIpPrecDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortEncapPcpDEEncodingType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortEncapPcpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortJdsuLoopbackSrcIp"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortWfqSegmentationCOS"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortWfqGroupCOS"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortWfqGroupEirLo"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortWfqGroupEirHi"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSilentStartControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterTagTpidOverride"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortOuterTagTpid"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPersistentLoopbackControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTestReflectorIPv4Address"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortLoopbackTestReflectorIPv6Address"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortSfpIdentifierValue"))
)
if mibBuilder.loadTexts:
    ethernetNetworkPortGroup.setStatus("current")

ethernetMgmtPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 4)
)
ethernetMgmtPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetMgmtPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetMgmtPortMediaType"))
)
if mibBuilder.loadTexts:
    ethernetMgmtPortGroup.setStatus("current")

bitsPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 5)
)
bitsPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "bitsPortTypeIndex"),
        ("CM-FACILITY-MIB", "bitsPortIndex"),
        ("CM-FACILITY-MIB", "bitsPortIfIndex"),
        ("CM-FACILITY-MIB", "bitsPortEntityIndex"),
        ("CM-FACILITY-MIB", "bitsPortAdminState"),
        ("CM-FACILITY-MIB", "bitsPortOperationalState"),
        ("CM-FACILITY-MIB", "bitsPortSecondaryState"),
        ("CM-FACILITY-MIB", "bitsPortType"),
        ("CM-FACILITY-MIB", "bitsPortLineType"),
        ("CM-FACILITY-MIB", "bitsPortLineCode"),
        ("CM-FACILITY-MIB", "bitsPortFrameFormat"),
        ("CM-FACILITY-MIB", "bitsPortSaBitDesignation"),
        ("CM-FACILITY-MIB", "bitsPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "bitsPortExpectedQL"),
        ("CM-FACILITY-MIB", "bitsPortAssumedQL"),
        ("CM-FACILITY-MIB", "bitsPortReceivedQL"),
        ("CM-FACILITY-MIB", "bitsPortTransmitQL"),
        ("CM-FACILITY-MIB", "bitsPortSquelchQL"),
        ("CM-FACILITY-MIB", "bitsPortLineBuildOut"))
)
if mibBuilder.loadTexts:
    bitsPortGroup.setStatus("current")

trafficGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 6)
)
trafficGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmFlowIndex"),
        ("CM-FACILITY-MIB", "cmFlowCircuitName"),
        ("CM-FACILITY-MIB", "cmFlowAdminState"),
        ("CM-FACILITY-MIB", "cmFlowOperationalState"),
        ("CM-FACILITY-MIB", "cmFlowSecondaryState"),
        ("CM-FACILITY-MIB", "cmFlowType"),
        ("CM-FACILITY-MIB", "cmFlowMultiCOS"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIR"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIR"),
        ("CM-FACILITY-MIB", "cmFlowN2ARateLimitingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIR"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIR"),
        ("CM-FACILITY-MIB", "cmFlowStorageType"),
        ("CM-FACILITY-MIB", "cmFlowRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowTrafficType"),
        ("CM-FACILITY-MIB", "cmFlowCOS"),
        ("CM-FACILITY-MIB", "cmFlowVlanMemberList"),
        ("CM-FACILITY-MIB", "cmFlowAction"),
        ("CM-FACILITY-MIB", "cmFlowActionVlan"),
        ("CM-FACILITY-MIB", "cmFlowUntaggedMemberEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIRHi"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowHCOSMgmtEnabled"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowCTagControl"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowCTagMatchRxPrio"),
        ("CM-FACILITY-MIB", "cmFlowSTagControl"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACOSPriorityTagType"),
        ("CM-FACILITY-MIB", "cmFlowESFramesLossThreshold"),
        ("CM-FACILITY-MIB", "cmFlowSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmFlowPolicingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPreserveSTagProperties"),
        ("CM-FACILITY-MIB", "cmFlowInnerTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NShapingType"),
        ("CM-FACILITY-MIB", "cmFlowN2AShapingType"),
        ("CM-FACILITY-MIB", "cmFlowN2AOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowSTagMatchRxPrio"),
        ("CM-FACILITY-MIB", "cmFlowAutoBandwidthConfigEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPort1"),
        ("CM-FACILITY-MIB", "cmFlowPort2"),
        ("CM-FACILITY-MIB", "cmFlowPolicingControl"),
        ("CM-FACILITY-MIB", "cmFlowAutoCIRPercentage"),
        ("CM-FACILITY-MIB", "cmFlowLoopAvoidanceObject"),
        ("CM-FACILITY-MIB", "cmFlowConfigType"),
        ("CM-FACILITY-MIB", "cmFlowN2NForwardingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NMulticastRateLimitControl"),
        ("CM-FACILITY-MIB", "cmFlowA2NMulticastRateLimitLo"),
        ("CM-FACILITY-MIB", "cmFlowA2NMulticastRateLimitHi"),
        ("CM-FACILITY-MIB", "cmFlowA2NBroadcastRateLimitControl"),
        ("CM-FACILITY-MIB", "cmFlowA2NBroadcastRateLimitLo"),
        ("CM-FACILITY-MIB", "cmFlowA2NBroadcastRateLimitHi"),
        ("CM-FACILITY-MIB", "cmFlowA2NCombinedRateLimitControl"),
        ("CM-FACILITY-MIB", "cmFlowA2NCombinedRateLimitLo"),
        ("CM-FACILITY-MIB", "cmFlowA2NCombinedRateLimitHi"),
        ("CM-FACILITY-MIB", "cmFlowRefPrioMapProfile"),
        ("CM-FACILITY-MIB", "cmFlowRefEoMplsPwObject"),
        ("CM-FACILITY-MIB", "cmFlowRefN2APrioMapProfile"),
        ("CM-FACILITY-MIB", "cmFlowSecureBlockingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowRefConnectGuardFlowList"),
        ("CM-FACILITY-MIB", "cmFlowSecureStateList"),
        ("CM-FACILITY-MIB", "cmFlowIndependentA2NShaperBW"),
        ("CM-FACILITY-MIB", "cmFlowWfqSegmentationCOS"),
        ("CM-FACILITY-MIB", "cmFlowWfqGroupCOS"),
        ("CM-FACILITY-MIB", "cmFlowWfqGroupEirLo"),
        ("CM-FACILITY-MIB", "cmFlowWfqGroupEirHi"),
        ("CM-FACILITY-MIB", "cmQosShaperTypeIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperDirection"),
        ("CM-FACILITY-MIB", "cmQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmQosShaperCIR"),
        ("CM-FACILITY-MIB", "cmQosShaperCBS"),
        ("CM-FACILITY-MIB", "cmQosShaperEIR"),
        ("CM-FACILITY-MIB", "cmQosShaperEBS"),
        ("CM-FACILITY-MIB", "cmQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmQosShaperStorageType"),
        ("CM-FACILITY-MIB", "cmQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "cmQosShaperSoamCIRLo"),
        ("CM-FACILITY-MIB", "cmQosShaperSoamCIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperSoamEIRLo"),
        ("CM-FACILITY-MIB", "cmQosShaperSoamEIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperWredGreenMinQueueThreshold"),
        ("CM-FACILITY-MIB", "cmQosShaperWredGreenMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "cmQosShaperWredGreenDropProbability"),
        ("CM-FACILITY-MIB", "cmQosShaperWredYellowMinQueueThreshold"),
        ("CM-FACILITY-MIB", "cmQosShaperWredYellowMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "cmQosShaperWredYellowDropProbability"),
        ("CM-FACILITY-MIB", "cmQosShaperAvgFrameSizeBeforeFragment"),
        ("CM-FACILITY-MIB", "cmQosShaperWfqWeight"),
        ("CM-FACILITY-MIB", "cmQosShaperCOS"),
        ("CM-FACILITY-MIB", "cmQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerIndex"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerDirection"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAdminState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerOperationalState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerSecondaryState"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCBS"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEBS"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAlgorithm"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerColorMode"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerColorMarkingFlag"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCouplingFlag"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerAssociatedShaper"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerStorageType"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerRowStatus"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRMaxHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerCIRMaxLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRMaxHi"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEIRMaxLo"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerEnvelopeObject"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerRank"),
        ("CM-FACILITY-MIB", "cmQosFlowPolicerPolicingEnabled"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperDirection"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCBS"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperEBS"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperCOS"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSoamCIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSoamCIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSoamEIRLo"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperSoamEIRHi"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredGreenMinQueueThreshold"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredGreenMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredGreenDropProbability"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredYellowMinQueueThreshold"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredYellowMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWredYellowDropProbability"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperAvgFrameSizeBeforeFragment"),
        ("CM-FACILITY-MIB", "cmAccPortQosShaperWfqWeight"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperDirection"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCBS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperEBS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperCOS"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamCIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamCIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamEIRLo"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperSoamEIRHi"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredGreenMinQueueThreshold"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredGreenMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredGreenDropProbability"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredYellowMinQueueThreshold"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredYellowMaxQueueThreshold"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWredYellowDropProbability"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperAvgFrameSizeBeforeFragment"),
        ("CM-FACILITY-MIB", "f3NetPortQosShaperWfqWeight"))
)
if mibBuilder.loadTexts:
    trafficGroup.setStatus("current")

prioMapGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 7)
)
prioMapGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmPrioMapIndex"),
        ("CM-FACILITY-MIB", "cmPrioMapInPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapXTagControl"),
        ("CM-FACILITY-MIB", "cmPrioMapXTagPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapCOS"),
        ("CM-FACILITY-MIB", "cmPrioMapOuterTagPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapInnerTagPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapCOS"),
        ("CM-FACILITY-MIB", "cmNetPortPrioMapOuterTagPriority"))
)
if mibBuilder.loadTexts:
    prioMapGroup.setStatus("current")

pcpEncodeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 8)
)
pcpEncodeGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmAccPortPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmAccPortPcpDEDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortPcpDEDropEligiblePrio"))
)
if mibBuilder.loadTexts:
    pcpEncodeGroup.setStatus("current")

cpdV2Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 9)
)
cpdV2Group.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Index"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac00DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac01DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac02DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac03DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac04DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac05DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac06DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac07DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac08DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac09DispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0ADispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0BDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0CDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0DDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0EDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2Mac0FDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2NearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2NonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2CustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PtpUntaggedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortCpdV2PtpTaggedDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Index"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2ActiveControlProtocols"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac00DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac01DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac02DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac03DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac04DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac05DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac06DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac07DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac08DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac09DispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0ADispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0BDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0CDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0DDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0EDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2Mac0FDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2NearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2NonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmFlowCpdV2CustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Index"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac00DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac01DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac02DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac03DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac04DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac05DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac06DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac07DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac08DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac09DispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0ADispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0BDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0CDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0DDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0EDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2Mac0FDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2NearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2NonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2CustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PtpUntaggedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortCpdV2PtpTaggedDispType"))
)
if mibBuilder.loadTexts:
    cpdV2Group.setStatus("current")

trafficGroupCmHub = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 10)
)
trafficGroupCmHub.setObjects(
      *(("CM-FACILITY-MIB", "cmFlowIndex"),
        ("CM-FACILITY-MIB", "cmFlowCircuitName"),
        ("CM-FACILITY-MIB", "cmFlowAdminState"),
        ("CM-FACILITY-MIB", "cmFlowOperationalState"),
        ("CM-FACILITY-MIB", "cmFlowSecondaryState"),
        ("CM-FACILITY-MIB", "cmFlowType"),
        ("CM-FACILITY-MIB", "cmFlowMultiCOS"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIR"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIR"),
        ("CM-FACILITY-MIB", "cmFlowN2ARateLimitingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIR"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIR"),
        ("CM-FACILITY-MIB", "cmFlowStorageType"),
        ("CM-FACILITY-MIB", "cmFlowRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowTrafficType"),
        ("CM-FACILITY-MIB", "cmFlowCOS"),
        ("CM-FACILITY-MIB", "cmFlowVlanMemberList"),
        ("CM-FACILITY-MIB", "cmFlowAction"),
        ("CM-FACILITY-MIB", "cmFlowActionVlan"),
        ("CM-FACILITY-MIB", "cmFlowUntaggedMemberEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NCIRHi"),
        ("CM-FACILITY-MIB", "cmFlowA2NEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2ACIRHi"),
        ("CM-FACILITY-MIB", "cmFlowN2AEIRHi"),
        ("CM-FACILITY-MIB", "cmFlowHCOSMgmtEnabled"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowGuaranteedA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthLo"),
        ("CM-FACILITY-MIB", "cmFlowMaximumA2NBandwidthHi"),
        ("CM-FACILITY-MIB", "cmFlowCTagControl"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowCTagMatchRxPrio"),
        ("CM-FACILITY-MIB", "cmFlowSTagControl"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowN2ACOSPriorityTagType"),
        ("CM-FACILITY-MIB", "cmFlowESFramesLossThreshold"),
        ("CM-FACILITY-MIB", "cmFlowSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmFlowPolicingEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPreserveSTagProperties"),
        ("CM-FACILITY-MIB", "cmFlowInnerTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowA2NShapingType"),
        ("CM-FACILITY-MIB", "cmFlowN2AShapingType"),
        ("CM-FACILITY-MIB", "cmFlowN2AOuterTagPrioEnabled"),
        ("CM-FACILITY-MIB", "cmFlowSTagMatchRxPrio"),
        ("CM-FACILITY-MIB", "cmQosShaperTypeIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmQosShaperDirection"),
        ("CM-FACILITY-MIB", "cmQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmQosShaperCIR"),
        ("CM-FACILITY-MIB", "cmQosShaperCBS"),
        ("CM-FACILITY-MIB", "cmQosShaperEIR"),
        ("CM-FACILITY-MIB", "cmQosShaperEBS"),
        ("CM-FACILITY-MIB", "cmQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmQosShaperStorageType"),
        ("CM-FACILITY-MIB", "cmQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "cmQosShaperCOS"),
        ("CM-FACILITY-MIB", "cmQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmQosShaperEIRHi"))
)
if mibBuilder.loadTexts:
    trafficGroupCmHub.setStatus("current")

ocnStmGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 11)
)
ocnStmGroup.setObjects(
      *(("CM-FACILITY-MIB", "ocnStmIndex"),
        ("CM-FACILITY-MIB", "ocnStmIfIndex"),
        ("CM-FACILITY-MIB", "ocnStmEntityIndex"),
        ("CM-FACILITY-MIB", "ocnStmAdminState"),
        ("CM-FACILITY-MIB", "ocnStmOperationalState"),
        ("CM-FACILITY-MIB", "ocnStmSecondaryState"),
        ("CM-FACILITY-MIB", "ocnStmSfpVendorName"),
        ("CM-FACILITY-MIB", "ocnStmSfpPartNumber"),
        ("CM-FACILITY-MIB", "ocnStmSfpSerialNumber"),
        ("CM-FACILITY-MIB", "ocnStmSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "ocnStmMultiplexingStructures"),
        ("CM-FACILITY-MIB", "ocnStmEoTDMMode"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackConfig"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackStatus"),
        ("CM-FACILITY-MIB", "ocnStmLoopbackTime"),
        ("CM-FACILITY-MIB", "ocnStmInsertingAIS"),
        ("CM-FACILITY-MIB", "ocnStmBerExcThreshold"),
        ("CM-FACILITY-MIB", "ocnStmBerDegThreshold"),
        ("CM-FACILITY-MIB", "ocnStmRxTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmTxTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "ocnStmTrailTraceFormat"),
        ("CM-FACILITY-MIB", "ocnStmQLModeEnabled"),
        ("CM-FACILITY-MIB", "ocnStmExpectedQL"),
        ("CM-FACILITY-MIB", "ocnStmAssumedQL"),
        ("CM-FACILITY-MIB", "ocnStmReceivedQL"),
        ("CM-FACILITY-MIB", "ocnStmTransmitQL"),
        ("CM-FACILITY-MIB", "ocnStmPortType"),
        ("CM-FACILITY-MIB", "ocnStmFreqSourceType"),
        ("CM-FACILITY-MIB", "ocnStmSfpName"),
        ("CM-FACILITY-MIB", "ocnStmSfpHardwareRevision"))
)
if mibBuilder.loadTexts:
    ocnStmGroup.setStatus("current")

stsVcPathGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 12)
)
stsVcPathGroup.setObjects(
      *(("CM-FACILITY-MIB", "stsVcPathParentIfIndex"),
        ("CM-FACILITY-MIB", "stsVcPathIndex"),
        ("CM-FACILITY-MIB", "stsVcPathIfIndex"),
        ("CM-FACILITY-MIB", "stsVcPathAdminState"),
        ("CM-FACILITY-MIB", "stsVcPathOperationalState"),
        ("CM-FACILITY-MIB", "stsVcPathSecondaryState"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackConfig"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackStatus"),
        ("CM-FACILITY-MIB", "stsVcPathLoopbackTime"),
        ("CM-FACILITY-MIB", "stsVcPathInsertingAIS"),
        ("CM-FACILITY-MIB", "stsVcPathBerExcThreshold"),
        ("CM-FACILITY-MIB", "stsVcPathBerDegThreshold"),
        ("CM-FACILITY-MIB", "stsVcPathTrailTraceFormat"),
        ("CM-FACILITY-MIB", "stsVcPathRxTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathTxTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "stsVcPathRxSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathTxSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathExpectedSignalLabel"),
        ("CM-FACILITY-MIB", "stsVcPathRowStatus"),
        ("CM-FACILITY-MIB", "stsVcPathLowOrderPathType"))
)
if mibBuilder.loadTexts:
    stsVcPathGroup.setStatus("current")

vtVcPathGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 13)
)
vtVcPathGroup.setObjects(
      *(("CM-FACILITY-MIB", "vtVcPathParentIfIndex"),
        ("CM-FACILITY-MIB", "vtVcPathIndex"),
        ("CM-FACILITY-MIB", "vtVcPathIfIndex"),
        ("CM-FACILITY-MIB", "vtVcPathAdminState"),
        ("CM-FACILITY-MIB", "vtVcPathOperationalState"),
        ("CM-FACILITY-MIB", "vtVcPathSecondaryState"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackConfig"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackStatus"),
        ("CM-FACILITY-MIB", "vtVcPathLoopbackTime"),
        ("CM-FACILITY-MIB", "vtVcPathInsertingAIS"),
        ("CM-FACILITY-MIB", "vtVcPathBerExcThreshold"),
        ("CM-FACILITY-MIB", "vtVcPathBerDegThreshold"),
        ("CM-FACILITY-MIB", "vtVcPathTrailTraceFormat"),
        ("CM-FACILITY-MIB", "vtVcPathRxTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathTxTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathExpectedTrailTrace"),
        ("CM-FACILITY-MIB", "vtVcPathRxSignalLabel"),
        ("CM-FACILITY-MIB", "vtVcPathTxSignalLabel"),
        ("CM-FACILITY-MIB", "vtVcPathExpectedSignalLabel"),
        ("CM-FACILITY-MIB", "vtVcPathRowStatus"))
)
if mibBuilder.loadTexts:
    vtVcPathGroup.setStatus("current")

e1t1InterfaceGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 14)
)
e1t1InterfaceGroup.setObjects(
      *(("CM-FACILITY-MIB", "e1t1ParentIfIndex"),
        ("CM-FACILITY-MIB", "e1t1Index"),
        ("CM-FACILITY-MIB", "e1t1IfIndex"),
        ("CM-FACILITY-MIB", "e1t1EntityIndex"),
        ("CM-FACILITY-MIB", "e1t1AdminState"),
        ("CM-FACILITY-MIB", "e1t1OperationalState"),
        ("CM-FACILITY-MIB", "e1t1SecondaryState"),
        ("CM-FACILITY-MIB", "e1t1LoopbackConfig"),
        ("CM-FACILITY-MIB", "e1t1LoopbackStatus"),
        ("CM-FACILITY-MIB", "e1t1LoopbackTime"),
        ("CM-FACILITY-MIB", "e1t1RemoteLoopbackRequest"),
        ("CM-FACILITY-MIB", "e1t1InsertingAIS"),
        ("CM-FACILITY-MIB", "e1t1RowStatus"),
        ("CM-FACILITY-MIB", "e1t1LineType"),
        ("CM-FACILITY-MIB", "e1t1LineCode"),
        ("CM-FACILITY-MIB", "e1t1FrameFormat"),
        ("CM-FACILITY-MIB", "e1t1LineBuildOut"),
        ("CM-FACILITY-MIB", "e1t1TimingDomain"),
        ("CM-FACILITY-MIB", "e1t1RcvSensitivity"),
        ("CM-FACILITY-MIB", "e1t1IdlePatternProfile"),
        ("CM-FACILITY-MIB", "e1t1LoopbackProfile"),
        ("CM-FACILITY-MIB", "e1t1RelatedContainerId"),
        ("CM-FACILITY-MIB", "e1t1PatternLpbkControl"))
)
if mibBuilder.loadTexts:
    e1t1InterfaceGroup.setStatus("current")

e3t3InterfaceGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 15)
)
e3t3InterfaceGroup.setObjects(
      *(("CM-FACILITY-MIB", "e3t3ParentIfIndex"),
        ("CM-FACILITY-MIB", "e3t3Index"),
        ("CM-FACILITY-MIB", "e3t3IfIndex"),
        ("CM-FACILITY-MIB", "e3t3EntityIndex"),
        ("CM-FACILITY-MIB", "e3t3AdminState"),
        ("CM-FACILITY-MIB", "e3t3OperationalState"),
        ("CM-FACILITY-MIB", "e3t3SecondaryState"),
        ("CM-FACILITY-MIB", "e3t3LoopbackConfig"),
        ("CM-FACILITY-MIB", "e3t3LoopbackStatus"),
        ("CM-FACILITY-MIB", "e3t3LoopbackTime"),
        ("CM-FACILITY-MIB", "e3t3RemoteLoopbackRequest"),
        ("CM-FACILITY-MIB", "e3t3InsertingAIS"),
        ("CM-FACILITY-MIB", "e3t3CBitEnable"),
        ("CM-FACILITY-MIB", "e3t3T3Channelized"),
        ("CM-FACILITY-MIB", "e3t3RowStatus"),
        ("CM-FACILITY-MIB", "e3t3FrameFormat"),
        ("CM-FACILITY-MIB", "e3t3RelatedContainerId"))
)
if mibBuilder.loadTexts:
    e3t3InterfaceGroup.setStatus("current")

f3PulsePerSecondPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 16)
)
f3PulsePerSecondPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3PulsePerSecondPortIndex"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortIfIndex"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortAdminState"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortOperationalState"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortSquelchControl"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortSquelchQL"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortTODSource"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortDirection"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortInputRate"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortDelayCompensation"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortClockClass"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortClockAccuracy"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortTimeSource"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortPhyInterfaceType"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortOutputDelay"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortWidth"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortPolarity"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortImpedance"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortAlias"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortAssumedClockClass"))
)
if mibBuilder.loadTexts:
    f3PulsePerSecondPortGroup.setStatus("current")

f3TimeOfDayPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 17)
)
f3TimeOfDayPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3TimeOfDayPortIndex"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortIfIndex"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortAdminState"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortOperationalState"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortSquelchControl"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortSquelchQL"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortTODSource"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortOutputFormat"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortSignalDirection"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortInputRate"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortDelayCompensation"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortAlias"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortAssumedClockClass"))
)
if mibBuilder.loadTexts:
    f3TimeOfDayPortGroup.setStatus("current")

f3Gps10MhzPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 18)
)
f3Gps10MhzPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "gps10MHzPortIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortIfIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortEntityIndex"),
        ("CM-FACILITY-MIB", "gps10MHzPortAdminState"),
        ("CM-FACILITY-MIB", "gps10MHzPortOperationalState"),
        ("CM-FACILITY-MIB", "gps10MHzPortSecondaryState"),
        ("CM-FACILITY-MIB", "gps10MHzPortSignalDirection"),
        ("CM-FACILITY-MIB", "gps10MHzPortSquelchControl"),
        ("CM-FACILITY-MIB", "gps10MHzPortSquelchQL"),
        ("CM-FACILITY-MIB", "gps10MHzPortFrequencySource"),
        ("CM-FACILITY-MIB", "gps10MHzPortClockClass"),
        ("CM-FACILITY-MIB", "gps10MHzPortClockAccuracy"),
        ("CM-FACILITY-MIB", "gps10MHzPortTimeSource"),
        ("CM-FACILITY-MIB", "gps10MHzPortAssumedQL"),
        ("CM-FACILITY-MIB", "gps10MHzPortAlias"),
        ("CM-FACILITY-MIB", "gps10MHzPortInputSignalType"))
)
if mibBuilder.loadTexts:
    f3Gps10MhzPortGroup.setStatus("current")

ethernetNetworkPortExtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 19)
)
ethernetNetworkPortExtGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetNetPortTDMEncapsulation"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortAssociatedTdmEntity"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortInsertingAIS"))
)
if mibBuilder.loadTexts:
    ethernetNetworkPortExtGroup.setStatus("current")

f3GPSReceiverPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 20)
)
f3GPSReceiverPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3GPSReceiverPortIndex"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortIfIndex"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAdminState"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortOperationalState"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortPPSGenCondition"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAntennaCableLength"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAntennaStatus"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSatellitesUsableFlag"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortNumTrackingSatellites"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSelfSurveyProgress"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortPPSGeneratedFlag"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortGnssSystem"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortInstallationType"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortGnssTOD"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortGnssSystemsBitMap"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAlias"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAntennaDelayValue"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAntennaDelayType"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortCNOMask"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortElevationMask"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortCoordinateLatitude"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortCoordinateLongitude"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortCoordinateAltitude"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortFirmwareUpgradePercent"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortPDOPMask"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSelfSurveyPeriod"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSatMin1Threshold"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSatMin2Threshold"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortPDOP"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSelfSurveyControl"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortCoordinateStringAltitude"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortLocationMode"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortTimeAdvanceMode"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortTimeAdvanceValue"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortForcedAntennaConnected"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortServiceAvailableTime"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortServiceUnavailableTime"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortServiceAvailablePercentage"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortAGC"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortSelfSurveyPositionAccuracy"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortHorizontalAccuracy"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortVerticalAccuracy"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortTDOP"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortHDOP"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortVDOP"),
        ("CM-FACILITY-MIB", "f3GPSReceiverPortFailureSuspendTime"))
)
if mibBuilder.loadTexts:
    f3GPSReceiverPortGroup.setStatus("current")

cmPsePortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 21)
)
cmPsePortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmPethPsePortExtGroupIndex"),
        ("CM-FACILITY-MIB", "cmPethPsePortExtIndex"),
        ("CM-FACILITY-MIB", "cmPethPsePortExtAssociatedPort"),
        ("CM-FACILITY-MIB", "pethPsePortExtPowerConsumption"),
        ("CM-FACILITY-MIB", "pethPsePortExtAvailablePowerLevel"))
)
if mibBuilder.loadTexts:
    cmPsePortGroup.setStatus("current")

cmPseEXTGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 22)
)
cmPseEXTGroup.setObjects(
      *(("CM-FACILITY-MIB", "pethMainPseExtGroupIndex"),
        ("CM-FACILITY-MIB", "pethMainPseExtNonStandardPD"))
)
if mibBuilder.loadTexts:
    cmPseEXTGroup.setStatus("current")

cmMPFlowGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 23)
)
cmMPFlowGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmMPFlowIndex"),
        ("CM-FACILITY-MIB", "cmMPFlowCircuitName"),
        ("CM-FACILITY-MIB", "cmMPFlowAdminState"),
        ("CM-FACILITY-MIB", "cmMPFlowOperationalState"),
        ("CM-FACILITY-MIB", "cmMPFlowSecondaryState"),
        ("CM-FACILITY-MIB", "cmMPFlowLearningEnabled"),
        ("CM-FACILITY-MIB", "cmMPFlowAgingTimer"),
        ("CM-FACILITY-MIB", "cmMPFlowFwdTableSizeProfileID"),
        ("CM-FACILITY-MIB", "cmMPFlowtableFullAction"),
        ("CM-FACILITY-MIB", "cmMPFlowStorageType"),
        ("CM-FACILITY-MIB", "cmMPFlowRowStatus"),
        ("CM-FACILITY-MIB", "cmMPFlowLearningConfigAction"),
        ("CM-FACILITY-MIB", "cmMPFlowFPList"))
)
if mibBuilder.loadTexts:
    cmMPFlowGroup.setStatus("current")

cmMPFlowMemberGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 24)
)
cmMPFlowMemberGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmMPFlowMemberFPIndex"),
        ("CM-FACILITY-MIB", "cmMPFlowPointRowStatus"))
)
if mibBuilder.loadTexts:
    cmMPFlowMemberGroup.setStatus("current")

cmEthernetTrafficPortPcpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 25)
)
cmEthernetTrafficPortPcpGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortClbIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortClbEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortClbLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortClbDescr"))
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortPcpGroup.setStatus("current")

neTMParamsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 26)
)
neTMParamsGroup.setObjects(
      *(("CM-FACILITY-MIB", "neTMParamsBandwidthProfileMode"),
        ("CM-FACILITY-MIB", "neTMParamsAgingtime"))
)
if mibBuilder.loadTexts:
    neTMParamsGroup.setStatus("current")

cmEthernetTrafficPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 27)
)
cmEthernetTrafficPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIfIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEntityIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOperationalState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSecondaryState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMTU"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortConfigSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortNegotiatedSpeed"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMDIXType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMDIXStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackConfig"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackSwapSADA"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdSignalType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdTriggerTypes"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdDelay"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdActive"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdPartnerEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdLocalLinkId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdRemoteLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdTxActionType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamDiscoveryState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamLocalMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteVarRtrvsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteLinkEventsEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteOamLoopbacksSupported"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteUnidirSupportEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMaxPDUSize"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamRemoteMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOamAdminState"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSvcType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAfpType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapedSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortShapedSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortQinQEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressVlanTrunkingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressPushPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressPopPVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPortVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPortVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPriorityVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressPrioMapMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressCOSPriority"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressPopPriorityVidEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortQLModeEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortExpectedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAssumedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortReceivedQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTransmitQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTagFrameControl"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRxPauseEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPhyType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpLaserWaveLengthPicometer"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRowStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSSMRemoteMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopbackMask"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback1"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback2"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInnerVlanLoopback3"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLaserWDMChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLaserIsTunable"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLaserFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDeiEnable"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPcpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortInitiateDiag"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnosePair1Cond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnosePair2Cond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnosePair3Cond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnosePair4Cond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseAutoNegCond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseEfmLpbkCond"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseResult"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseTestStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnoseTestTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortAutoDiagEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDeleteEntitiesAction"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMaxMpFpNum"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJdsuLoopbackEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJdsuLoopbackVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressPopPriorityVidEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTxDeiAction"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTxDeiOuterTagType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortServiceType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackSourceMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackDestMacControlEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackSourceMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackDestMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackBlockingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMediaTypeAutoSelected"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLowLatencyQueuingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortDiagnosticMacAddress"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortMcastRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortBcastRateLimitEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortBcastRateLimitSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortBcastRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCombinedRateLimitEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCombinedRateLimitSpeedLo"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCombinedRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRefPrioMapProfile"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortIngressSwapPriorityVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortEgressSwapPriorityVIDEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSwapPriorityVID"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortExpDEEncType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortExpDEPairsAction"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJdsuLoopbackSrcIp"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortTxSsm"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRxSsmQL"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEServiceAvailableTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEServiceUnavailableTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSyncEServiceAvailablePercentage"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortWfqSegmentationCOS"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortWfqGroupCOS"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortWfqGroupEirLo"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortWfqGroupEirHi"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterTagTpidOverride"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortOuterTagTpid"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpTxPowerLevel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpRxPowerLevel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortBwResourcePort"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTestReflectorIPv4Address"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLoopbackTestReflectorIPv6Address"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortSfpIdentifierValue"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugGMetroAutoTuningMode"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugChannelType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugITUCbandChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugRelativeChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortPlugOutOfBandChannelStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugITUCbandChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugRelativeChannel"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemotePlugFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpVendorName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpName"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpPartNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpHardwareRevision"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpSerialNumber"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpDateOfManufacture"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLinkLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLaserWaveLength"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpLaserFrequency"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpMediaType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpConnectorValue"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortRemoteSfpIdentifierValue"))
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortGroup.setStatus("current")

cmFlowPointGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 28)
)
cmFlowPointGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmFlowPointIndex"),
        ("CM-FACILITY-MIB", "cmFlowPointCircuitName"),
        ("CM-FACILITY-MIB", "cmFlowPointAdminState"),
        ("CM-FACILITY-MIB", "cmFlowPointOperationalState"),
        ("CM-FACILITY-MIB", "cmFlowPointSecondaryState"),
        ("CM-FACILITY-MIB", "cmFlowPointAssociatedFlowId"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressMultiCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressVlanMemberList"),
        ("CM-FACILITY-MIB", "cmFlowPointVlanMemberAction"),
        ("CM-FACILITY-MIB", "cmFlowPointAssociatedAclProfile"),
        ("CM-FACILITY-MIB", "cmFlowPointSESFramesLossThresholdRatio"),
        ("CM-FACILITY-MIB", "cmFlowPointVlanMemberActionVlan"),
        ("CM-FACILITY-MIB", "cmFlowPointIngressUntaggedFrameEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagControl"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowPointCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagControl"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagVlanId"),
        ("CM-FACILITY-MIB", "cmFlowPointSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmFlowPointEgressOuterTagPrioMapEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointColorMarkingSupported"),
        ("CM-FACILITY-MIB", "cmFlowPointStorageType"),
        ("CM-FACILITY-MIB", "cmFlowPointRowStatus"),
        ("CM-FACILITY-MIB", "cmFlowPointDefaultMemberEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastRateLimitEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastRateLimitSpeedLo"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmFlowPointBcastRateLimitEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointBcastRateLimitSpeedLo"),
        ("CM-FACILITY-MIB", "cmFlowPointBcastRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmFlowPointSplitHorizonGroupOID"),
        ("CM-FACILITY-MIB", "cmFlowPointLoopAvoidance"),
        ("CM-FACILITY-MIB", "cmFlowPointHierarchicalCosEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqQid"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqOutPriority"),
        ("CM-FACILITY-MIB", "cmFlowPointMaximumBWLo"),
        ("CM-FACILITY-MIB", "cmFlowPointGuaranteedBWLo"),
        ("CM-FACILITY-MIB", "cmFlowPointMaximumBWHi"),
        ("CM-FACILITY-MIB", "cmFlowPointGuaranteedBWHi"),
        ("CM-FACILITY-MIB", "cmFlowPointRefPrioMapProfile"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastAndBcastRateLimitEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastAndBcastRateLimitSpeedLo"),
        ("CM-FACILITY-MIB", "cmFlowPointMcastAndBcastRateLimitSpeedHi"),
        ("CM-FACILITY-MIB", "cmFlowPointEgressShapingType"),
        ("CM-FACILITY-MIB", "cmFlowPointEgressInnerTagPrioMapEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointAutoBandwidthConfigEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointAutoCIRPercentage"),
        ("CM-FACILITY-MIB", "cmFlowPointFrameFwdEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointUsePortPrioMapProfile"),
        ("CM-FACILITY-MIB", "cmFlowPointRefEoMplsPwObject"),
        ("CM-FACILITY-MIB", "cmFlowPointElmiEvcIdentifier"),
        ("CM-FACILITY-MIB", "cmFlowPointRefElpObject"),
        ("CM-FACILITY-MIB", "cmFlowPointEfEnabled"),
        ("CM-FACILITY-MIB", "cmFlowPointEfIdentificationType"),
        ("CM-FACILITY-MIB", "cmFlowPointEfRateThresholdLo"),
        ("CM-FACILITY-MIB", "cmFlowPointEfRateThresholdHi"),
        ("CM-FACILITY-MIB", "cmFlowPointAclNoMatchDisposition"),
        ("CM-FACILITY-MIB", "cmFlowPointEfIdentificationFields"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqSegmentationCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqGroupCOS"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqGroupEirLo"),
        ("CM-FACILITY-MIB", "cmFlowPointWfqGroupEirHi"))
)
if mibBuilder.loadTexts:
    cmFlowPointGroup.setStatus("current")

ethernetAccessPortJdsuExtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 29)
)
ethernetAccessPortJdsuExtGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetAccPortJDSUControlFramesSnoopingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortJDSULoopbackVlan"),
        ("CM-FACILITY-MIB", "cmEthernetAccPortJDSULoopbackVlanList"))
)
if mibBuilder.loadTexts:
    ethernetAccessPortJdsuExtGroup.setStatus("current")

ethernetNetworkPortJdsuExtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 30)
)
ethernetNetworkPortJdsuExtGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetNetPortJDSUControlFramesSnoopingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortJDSULoopbackVlan"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortJDSULoopbackVlanList"))
)
if mibBuilder.loadTexts:
    ethernetNetworkPortJdsuExtGroup.setStatus("current")

cmTrafficPortLpbkGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 31)
)
cmTrafficPortLpbkGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkIndex"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkInnerVlanEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkInnerVlanTag"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkOuterVlanEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkOuterVlanTag"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkTime"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkStatus"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortLpbkConfig"))
)
if mibBuilder.loadTexts:
    cmTrafficPortLpbkGroup.setStatus("current")

cmPrioMapV2ProfileGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 32)
)
cmPrioMapV2ProfileGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmPrioMapV2ProfileIndex"),
        ("CM-FACILITY-MIB", "cmPrioMapV2ProfileAlias"),
        ("CM-FACILITY-MIB", "cmPrioMapV2ProfileMapModeType"),
        ("CM-FACILITY-MIB", "cmPrioMapV2ProfileStorageType"),
        ("CM-FACILITY-MIB", "cmPrioMapV2ProfileRowStatus"),
        ("CM-FACILITY-MIB", "cmPrioMapV2ProfileIngressCosPriority"))
)
if mibBuilder.loadTexts:
    cmPrioMapV2ProfileGroup.setStatus("current")

cmPrioMapV2IngressPrioMappingGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 33)
)
cmPrioMapV2IngressPrioMappingGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmPrioMapV2IngressPrioMappingIndex"),
        ("CM-FACILITY-MIB", "cmPrioMapV2IngressPrioMappingInPriority"),
        ("CM-FACILITY-MIB", "cmPrioMapV2IngressPrioMappingCOS"))
)
if mibBuilder.loadTexts:
    cmPrioMapV2IngressPrioMappingGroup.setStatus("current")

bits8PortGroupGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 34)
)
bits8PortGroupGroup.setObjects(
      *(("CM-FACILITY-MIB", "bits8PortGroupIndex"),
        ("CM-FACILITY-MIB", "bits8PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "bits8PortGroupAdminState"),
        ("CM-FACILITY-MIB", "bits8PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "bits8PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineType"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineCode"),
        ("CM-FACILITY-MIB", "bits8PortGroupFrameFormat"),
        ("CM-FACILITY-MIB", "bits8PortGroupSaBitDesignation"),
        ("CM-FACILITY-MIB", "bits8PortGroupQLModeEnabled"),
        ("CM-FACILITY-MIB", "bits8PortGroupTransmitQL"),
        ("CM-FACILITY-MIB", "bits8PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "bits8PortGroupLineBuildOut"),
        ("CM-FACILITY-MIB", "bits8PortGroupImpedance"),
        ("CM-FACILITY-MIB", "bits8PortGroupRowStatus"),
        ("CM-FACILITY-MIB", "bits8PortGroupActivePorts"),
        ("CM-FACILITY-MIB", "bits8PortGroupClkIfEnabledPorts"))
)
if mibBuilder.loadTexts:
    bits8PortGroupGroup.setStatus("current")

pps16PortGroupGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 35)
)
pps16PortGroupGroup.setObjects(
      *(("CM-FACILITY-MIB", "pps16PortGroupIndex"),
        ("CM-FACILITY-MIB", "pps16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "pps16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "pps16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "pps16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "pps16PortGroupAlias"),
        ("CM-FACILITY-MIB", "pps16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "pps16PortGroupTODSource"),
        ("CM-FACILITY-MIB", "pps16PortGroupDirection"),
        ("CM-FACILITY-MIB", "pps16PortGroupDelayCompensation"),
        ("CM-FACILITY-MIB", "pps16PortGroupRowStatus"))
)
if mibBuilder.loadTexts:
    pps16PortGroupGroup.setStatus("current")

clk16PortGroupGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 36)
)
clk16PortGroupGroup.setObjects(
      *(("CM-FACILITY-MIB", "clk16PortGroupIndex"),
        ("CM-FACILITY-MIB", "clk16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "clk16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "clk16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "clk16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "clk16PortGroupAlias"),
        ("CM-FACILITY-MIB", "clk16PortGroupDirection"),
        ("CM-FACILITY-MIB", "clk16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "clk16PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "clk16PortGroupRowStatus"))
)
if mibBuilder.loadTexts:
    clk16PortGroupGroup.setStatus("current")

todPps16PortGroupGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 37)
)
todPps16PortGroupGroup.setObjects(
      *(("CM-FACILITY-MIB", "todPps16PortGroupIndex"),
        ("CM-FACILITY-MIB", "todPps16PortGroupIfIndex"),
        ("CM-FACILITY-MIB", "todPps16PortGroupAdminState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupOperationalState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSecondaryState"),
        ("CM-FACILITY-MIB", "todPps16PortGroupAlias"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSquelchControl"),
        ("CM-FACILITY-MIB", "todPps16PortGroupSquelchQL"),
        ("CM-FACILITY-MIB", "todPps16PortGroupTODSource"),
        ("CM-FACILITY-MIB", "todPps16PortGroupOutputFormat"),
        ("CM-FACILITY-MIB", "todPps16PortGroupDelayCompensation"),
        ("CM-FACILITY-MIB", "todPps16PortGroupRowStatus"))
)
if mibBuilder.loadTexts:
    todPps16PortGroupGroup.setStatus("current")

f3PolicerEnvelopeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 38)
)
f3PolicerEnvelopeGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3PolicerEnvelopeIndex"),
        ("CM-FACILITY-MIB", "f3PolicerEnvelopeCouplingFlag"),
        ("CM-FACILITY-MIB", "f3PolicerEnvelopeStorageType"),
        ("CM-FACILITY-MIB", "f3PolicerEnvelopeRowStatus"),
        ("CM-FACILITY-MIB", "f3EnvelopeAssocPolicer"))
)
if mibBuilder.loadTexts:
    f3PolicerEnvelopeGroup.setStatus("current")

cmNetPortExpDeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 39)
)
cmNetPortExpDeGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmNetPortExpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortExpDEDropEligiblePrio"))
)
if mibBuilder.loadTexts:
    cmNetPortExpDeGroup.setStatus("current")

cmNetPortIpPrecDeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 40)
)
cmNetPortIpPrecDeGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmNetPortIpPrecDEEncIndex"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDecIndex"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEPairIndex"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortIpPrecDEDropEligiblePrio"))
)
if mibBuilder.loadTexts:
    cmNetPortIpPrecDeGroup.setStatus("current")

cmNetPortEncapPcpDeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 41)
)
cmNetPortEncapPcpDeGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmNetPortEncapPcpDEEncIndex"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEEncInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDecIndex"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDecInPriority"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEPairIndex"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "cmNetPortEncapPcpDEDropEligiblePrio"))
)
if mibBuilder.loadTexts:
    cmNetPortEncapPcpDeGroup.setStatus("current")

f3SatelliteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 42)
)
f3SatelliteGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3SatelliteIndex"),
        ("CM-FACILITY-MIB", "f3SatelliteSV"),
        ("CM-FACILITY-MIB", "f3SatelliteInUse"),
        ("CM-FACILITY-MIB", "f3SatelliteSVType"),
        ("CM-FACILITY-MIB", "f3SatelliteCNO"),
        ("CM-FACILITY-MIB", "f3SatelliteHealth"),
        ("CM-FACILITY-MIB", "f3SatelliteAzimuth"),
        ("CM-FACILITY-MIB", "f3SatelliteElevation"),
        ("CM-FACILITY-MIB", "f3SatelliteGnssReceiverPort"))
)
if mibBuilder.loadTexts:
    f3SatelliteGroup.setStatus("current")

cmEthernetTrafficPortJdsuExtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 43)
)
cmEthernetTrafficPortJdsuExtGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJDSULoopbackVlan"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJDSULoopbackVlanList"))
)
if mibBuilder.loadTexts:
    cmEthernetTrafficPortJdsuExtGroup.setStatus("current")

f3FpQosShaperGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 44)
)
f3FpQosShaperGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3FpQosShaperIndex"),
        ("CM-FACILITY-MIB", "f3FpQosShaperAdminState"),
        ("CM-FACILITY-MIB", "f3FpQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "f3FpQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "f3FpQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "f3FpQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "f3FpQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "f3FpQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "f3FpQosShaperCBS"),
        ("CM-FACILITY-MIB", "f3FpQosShaperEBS"),
        ("CM-FACILITY-MIB", "f3FpQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "f3FpQosShaperCOS"),
        ("CM-FACILITY-MIB", "f3FpQosShaperStorageType"),
        ("CM-FACILITY-MIB", "f3FpQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "f3FpQosShaperWfqWeight"))
)
if mibBuilder.loadTexts:
    f3FpQosShaperGroup.setStatus("current")

f3FpQosPolicerGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 45)
)
f3FpQosPolicerGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3FpQosPolicerIndex"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerAdminState"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerOperationalState"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerSecondaryState"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCIRLo"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCIRHi"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEIRLo"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEIRHi"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCBS"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEBS"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerAlgorithm"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerColorMode"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCouplingFlag"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerPolicingEnabled"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerStorageType"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerRowStatus"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCIRMaxHi"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerCIRMaxLo"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEIRMaxHi"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEIRMaxLo"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerEnvelopeObject"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerRank"))
)
if mibBuilder.loadTexts:
    f3FpQosPolicerGroup.setStatus("current")

cpdV2TrafficPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 46)
)
cpdV2TrafficPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Index"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2CiscoGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2BridgeGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2BridgeReservedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2GARPGroupDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac00DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac01DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac02DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac03DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac04DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac05DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac06DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac07DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac08DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac09DispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0ADispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0BDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0CDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0DDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0EDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2Mac0FDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2NearestLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2CustomerLLDPDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PtpUntaggedDispType"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortCpdV2PtpTaggedDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Index"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2IslDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2PagpDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2UdldDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2CdpDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2VtpDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2DtpDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2PvstpPlusDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2UplinkFastDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2VlanBridgeDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2L2PTDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2BPDUDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2PauseDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2LACPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2LACPMarkerDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2EfmOamDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2SSMDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2PortAuthenDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2LANBridgesDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2GMRPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2GVRPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2GARPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2ActiveControlProtocols"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2ELMIDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac00DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac01DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac02DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac03DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac04DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac05DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac06DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac07DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac08DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac09DispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0ADispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0BDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0CDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0DDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0EDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2Mac0FDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2NearestLLDPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2NonTpmrLLDPDispType"),
        ("CM-FACILITY-MIB", "f3FlowPointCpdV2CustomerLLDPDispType"))
)
if mibBuilder.loadTexts:
    cpdV2TrafficPortGroup.setStatus("current")

f3AclRuleGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 47)
)
f3AclRuleGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3AclRuleIndex"),
        ("CM-FACILITY-MIB", "f3AclRuleAdminState"),
        ("CM-FACILITY-MIB", "f3AclRuleAlias"),
        ("CM-FACILITY-MIB", "f3AclRulePriority"),
        ("CM-FACILITY-MIB", "f3AclRuleOperation"),
        ("CM-FACILITY-MIB", "f3AclRuleCosOverrideControl"),
        ("CM-FACILITY-MIB", "f3AclRuleCOS"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcMacAddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcMacAddress"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcMacAddressMask"),
        ("CM-FACILITY-MIB", "f3AclRuleDstMacAddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleDstMacAddress"),
        ("CM-FACILITY-MIB", "f3AclRuleDstMacAddressMask"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanVIDControl"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanVIDLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanVIDHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanVIDControl"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanVIDLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanVIDHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanPcpControl"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanPcpLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanPcpHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanPcpControl"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanPcpLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleInnerVlanPcpHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanDeiControl"),
        ("CM-FACILITY-MIB", "f3AclRuleOuterVlanDei"),
        ("CM-FACILITY-MIB", "f3AclRuleEtherTypeControl"),
        ("CM-FACILITY-MIB", "f3AclRuleEtherType"),
        ("CM-FACILITY-MIB", "f3AclRuleIpv4PriorityControl"),
        ("CM-FACILITY-MIB", "f3AclRuleIpv4PriorityLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleIpv4PriorityHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleProtocolControl"),
        ("CM-FACILITY-MIB", "f3AclRuleProtocolNumber"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv4AddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv4AddressLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv4AddressHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv4AddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv4AddressLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv4AddressHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcPortControl"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcPortLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcPortHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleDstPortControl"),
        ("CM-FACILITY-MIB", "f3AclRuleDstPortLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleDstPortHighLimit"),
        ("CM-FACILITY-MIB", "f3AclRuleTcpFlagsControl"),
        ("CM-FACILITY-MIB", "f3AclRuleTcpFlags"),
        ("CM-FACILITY-MIB", "f3AclRuleStorageType"),
        ("CM-FACILITY-MIB", "f3AclRuleRowStatus"),
        ("CM-FACILITY-MIB", "f3AclRuleActive"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv6AddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv6Address"),
        ("CM-FACILITY-MIB", "f3AclRuleSrcIpv6AddressPrefixLen"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv6AddressControl"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv6Address"),
        ("CM-FACILITY-MIB", "f3AclRuleDstIpv6AddressPrefixLen"),
        ("CM-FACILITY-MIB", "f3AclRuleIpV6FlowLabelControl"),
        ("CM-FACILITY-MIB", "f3AclRuleIpV6FlowLabel"),
        ("CM-FACILITY-MIB", "f3AclRulePriorityControl"),
        ("CM-FACILITY-MIB", "f3AclRulePriorityLowLimit"),
        ("CM-FACILITY-MIB", "f3AclRulePriorityHighLimit"))
)
if mibBuilder.loadTexts:
    f3AclRuleGroup.setStatus("current")

f3EthernetTrafficPortExpDeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 48)
)
f3EthernetTrafficPortExpDeGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEEncIndex"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEEncInPriority"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEEncDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEEncDropEligiblePrio"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDecIndex"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDecInPriority"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDecOutPriority"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDecDropEligible"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEPairIndex"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDropIneligiblePrio"),
        ("CM-FACILITY-MIB", "f3EthernetTrafficPortExpDEDropEligiblePrio"))
)
if mibBuilder.loadTexts:
    f3EthernetTrafficPortExpDeGroup.setStatus("current")

f3XdslAndPpppoeParamGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 49)
)
f3XdslAndPpppoeParamGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEthernetNetPortXdslConnControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslModulationMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslBitSwapEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslGvectorEnabled"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslVdslProfile"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslStatus"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslCurVdslProfile"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslActualLinkRateUpStream"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslActualLinkRateDownStream"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslControlChannel"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslCarrierSet"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslMode"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslAnnex"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslDsSNRMargin"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslUsSNRMargin"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslDsSignalAttenuation"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslDsLineAttenuation"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslDsTxPower"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslUsTxPower"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslDsAttainableRate"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortXdslUsAttainableRate"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeOuterVlanControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeOuterVlanEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeOuterVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeOuterVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeInnerVlanControl"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeInnerVlanEtherType"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeInnerVlanId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeInnerVlanPriority"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeServiceName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeLcpKeepAlivePeriod"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeLcpRetryThreshold"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeRxAcName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeRxServiceName"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeSessionId"),
        ("CM-FACILITY-MIB", "cmEthernetNetPortPppoeConnStatus"))
)
if mibBuilder.loadTexts:
    f3XdslAndPpppoeParamGroup.setStatus("current")

sciPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 50)
)
sciPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "sciPortIndex"),
        ("CM-FACILITY-MIB", "sciPortAdminState"),
        ("CM-FACILITY-MIB", "sciPortOperationalState"),
        ("CM-FACILITY-MIB", "sciPortSignalMode"),
        ("CM-FACILITY-MIB", "sciPortSignalDirection"),
        ("CM-FACILITY-MIB", "sciPortRxSsmQL"))
)
if mibBuilder.loadTexts:
    sciPortGroup.setStatus("current")

cmTrafficPortQosShaperGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 51)
)
cmTrafficPortQosShaperGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdminState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperOperationalState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperSecondaryState"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAssociatedQueueProfile"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperBufferSize"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperCIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperCIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperEIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperEIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperStorageType"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperRowStatus"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperIngressAverageFrameSize"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdditionalCIRLo"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperAdditionalCIRHi"),
        ("CM-FACILITY-MIB", "cmTrafficPortQosShaperWfqWeight"))
)
if mibBuilder.loadTexts:
    cmTrafficPortQosShaperGroup.setStatus("current")

f3IrigPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 52)
)
f3IrigPortGroup.setObjects(
      *(("CM-FACILITY-MIB", "f3IrigRs422OutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigRs422OutputPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigOpticalOutputPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigRelayOutputPortRelayOperation"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupAlias"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupExtensionType"),
        ("CM-FACILITY-MIB", "f3IrigOutputGroupExtensionDetection"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortIfIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortEntityIndex"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortAlias"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortAdminState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortOperationalState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortSecondaryState"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortTimeCode"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortControlField"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortType"),
        ("CM-FACILITY-MIB", "f3IrigOutputUnitPortDigitalVoltage"))
)
if mibBuilder.loadTexts:
    f3IrigPortGroup.setStatus("current")

ccGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 53)
)
ccGroup.setObjects(
      *(("CM-FACILITY-MIB", "ccInputPortIndex"),
        ("CM-FACILITY-MIB", "ccInputPortIfIndex"),
        ("CM-FACILITY-MIB", "ccInputPortEntityIndex"),
        ("CM-FACILITY-MIB", "ccInputPortAlias"),
        ("CM-FACILITY-MIB", "ccInputPortAdminState"),
        ("CM-FACILITY-MIB", "ccInputPortOperationalState"),
        ("CM-FACILITY-MIB", "ccInputPortSecondaryState"),
        ("CM-FACILITY-MIB", "ccGroupIndex"),
        ("CM-FACILITY-MIB", "ccGroupIfIndex"),
        ("CM-FACILITY-MIB", "ccGroupEntityIndex"),
        ("CM-FACILITY-MIB", "ccGroupAlias"),
        ("CM-FACILITY-MIB", "ccGroupActivePorts"),
        ("CM-FACILITY-MIB", "ccGroupPhaseAdjust"),
        ("CM-FACILITY-MIB", "ccGroupDutyCycle"))
)
if mibBuilder.loadTexts:
    ccGroup.setStatus("current")

cmEncapFlowPointGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 2, 54)
)
cmEncapFlowPointGroup.setObjects(
      *(("CM-FACILITY-MIB", "cmEncapFlowPointIndex"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointCircuitName"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointAssociatedFlowId"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointRefEoMplsPwObject"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointCTagControl"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointCTagVlanId"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointCTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointSTagControl"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointSTagVlanId"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointSTagVlanPriority"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointEgressOuterTagPrioMapEnabled"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointEgressInnerTagPrioMapEnabled"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointRefPrioMapProfile"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointStorageType"),
        ("CM-FACILITY-MIB", "cmEncapFlowPointRowStatus"))
)
if mibBuilder.loadTexts:
    cmEncapFlowPointGroup.setStatus("current")


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance

cmFacilityCompliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 2544, 1, 12, 4, 2, 1, 1)
)
cmFacilityCompliance.setObjects(
      *(("CM-FACILITY-MIB", "cmFacilityObjectGroup"),
        ("CM-FACILITY-MIB", "ethernetAccessPortGroup"),
        ("CM-FACILITY-MIB", "ethernetNetworkPortGroup"),
        ("CM-FACILITY-MIB", "ethernetMgmtPortGroup"),
        ("CM-FACILITY-MIB", "bitsPortGroup"),
        ("CM-FACILITY-MIB", "trafficGroup"),
        ("CM-FACILITY-MIB", "prioMapGroup"),
        ("CM-FACILITY-MIB", "pcpEncodeGroup"),
        ("CM-FACILITY-MIB", "cpdV2Group"),
        ("CM-FACILITY-MIB", "trafficGroupCmHub"),
        ("CM-FACILITY-MIB", "ocnStmGroup"),
        ("CM-FACILITY-MIB", "stsVcPathGroup"),
        ("CM-FACILITY-MIB", "vtVcPathGroup"),
        ("CM-FACILITY-MIB", "e1t1InterfaceGroup"),
        ("CM-FACILITY-MIB", "e3t3InterfaceGroup"),
        ("CM-FACILITY-MIB", "f3PulsePerSecondPortGroup"),
        ("CM-FACILITY-MIB", "f3TimeOfDayPortGroup"),
        ("CM-FACILITY-MIB", "f3Gps10MhzPortGroup"),
        ("CM-FACILITY-MIB", "neTMParamsGroup"),
        ("CM-FACILITY-MIB", "cmEthernetTrafficPortJdsuExtGroup"),
        ("CM-FACILITY-MIB", "f3FpQosShaperGroup"),
        ("CM-FACILITY-MIB", "f3FpQosPolicerGroup"),
        ("CM-FACILITY-MIB", "cpdV2TrafficPortGroup"),
        ("CM-FACILITY-MIB", "f3AclRuleGroup"))
)
if mibBuilder.loadTexts:
    cmFacilityCompliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "CM-FACILITY-MIB",
    **{"LocationMode": LocationMode,
       "TimeAdvanceMode": TimeAdvanceMode,
       "SynceRxSsmQl": SynceRxSsmQl,
       "SynceMode": SynceMode,
       "SciSignalMode": SciSignalMode,
       "SciSignalDirection": SciSignalDirection,
       "SciRxSsmQL": SciRxSsmQL,
       "XDSLAnnex": XDSLAnnex,
       "XDSLMode": XDSLMode,
       "XDSLCarrierSet": XDSLCarrierSet,
       "XDSLStatus": XDSLStatus,
       "XDSLControlChannel": XDSLControlChannel,
       "VDSLProfileField": VDSLProfileField,
       "VDSLProfileFields": VDSLProfileFields,
       "XDSLModulationMode": XDSLModulationMode,
       "PPPoEConnectionStatus": PPPoEConnectionStatus,
       "CmEthernetSvcPortMode": CmEthernetSvcPortMode,
       "CmEthernetSvcType": CmEthernetSvcType,
       "CmEthernetTrafficSvcType": CmEthernetTrafficSvcType,
       "CmAclConfiguration": CmAclConfiguration,
       "CmAfpType": CmAfpType,
       "CmEthernetDiagAction": CmEthernetDiagAction,
       "CmDiagCableCondType": CmDiagCableCondType,
       "CmDiagAutoNegCondType": CmDiagAutoNegCondType,
       "CmDiagLpbkCondType": CmDiagLpbkCondType,
       "CmDiagEfmOamLpbkCondType": CmDiagEfmOamLpbkCondType,
       "CmDiagTestStatus": CmDiagTestStatus,
       "CmControlProtocolFilterType": CmControlProtocolFilterType,
       "CmLoopbackType": CmLoopbackType,
       "CmSwapSADAType": CmSwapSADAType,
       "CmControlProtocolDispType": CmControlProtocolDispType,
       "CmLinkLossFwdSignalType": CmLinkLossFwdSignalType,
       "CmLinkLossFwdTriggerTypes": CmLinkLossFwdTriggerTypes,
       "CmLinkLossFwdTxActionType": CmLinkLossFwdTxActionType,
       "CmRemoteLinkIds": CmRemoteLinkIds,
       "CmOamMode": CmOamMode,
       "CmOamAdminState": CmOamAdminState,
       "CmOamDiscoveryState": CmOamDiscoveryState,
       "CmFlowType": CmFlowType,
       "CmEthernetMDIXType": CmEthernetMDIXType,
       "FlowTrafficType": FlowTrafficType,
       "FlowVlanActionType": FlowVlanActionType,
       "FlowTagControl": FlowTagControl,
       "PrioMapControlType": PrioMapControlType,
       "PolicerAlgorithmType": PolicerAlgorithmType,
       "PolicerColorMode": PolicerColorMode,
       "BitsPortType": BitsPortType,
       "BitsPortLineType": BitsPortLineType,
       "BitsPortLineCode": BitsPortLineCode,
       "BitsFrameFormat": BitsFrameFormat,
       "SaBitDesignation": SaBitDesignation,
       "CmActiveControlProtocolsType": CmActiveControlProtocolsType,
       "PcpDEEncType": PcpDEEncType,
       "PcpDEPairsAction": PcpDEPairsAction,
       "LineBuildOut": LineBuildOut,
       "BitsPortImpedanceMode": BitsPortImpedanceMode,
       "ShapingType": ShapingType,
       "XgePhyType": XgePhyType,
       "F3Usb3GDCNPINCodeActionType": F3Usb3GDCNPINCodeActionType,
       "F3Usb3GSimCardState": F3Usb3GSimCardState,
       "F3Usb3GNetworkConnectionState": F3Usb3GNetworkConnectionState,
       "F3Usb3GRecvSignalStrengthInd": F3Usb3GRecvSignalStrengthInd,
       "TrailTraceFormat": TrailTraceFormat,
       "MultiplexingStructure": MultiplexingStructure,
       "EoTDMMode": EoTDMMode,
       "BitErrRate": BitErrRate,
       "GFPEncapsulationType": GFPEncapsulationType,
       "PPSInputRate": PPSInputRate,
       "PPSPhyInterfaceType": PPSPhyInterfaceType,
       "OCNSTMPortType": OCNSTMPortType,
       "E1T1LineType": E1T1LineType,
       "E1T1LineCode": E1T1LineCode,
       "E1T1FrameFormat": E1T1FrameFormat,
       "E1T1RcvSensitivity": E1T1RcvSensitivity,
       "E3T3FrameFormat": E3T3FrameFormat,
       "TDMPathType": TDMPathType,
       "PPSGenCondition": PPSGenCondition,
       "GPSAntennaStatus": GPSAntennaStatus,
       "PolicingControl": PolicingControl,
       "FlowConfigType": FlowConfigType,
       "G3AuthStatus": G3AuthStatus,
       "PsePowerLevel": PsePowerLevel,
       "PSENonStandardPD": PSENonStandardPD,
       "LearningAction": LearningAction,
       "SfpChannelIdentifier": SfpChannelIdentifier,
       "BandwidthProfileMode": BandwidthProfileMode,
       "LearningConfigAction": LearningConfigAction,
       "TrafficPortDeleteEntitiesAction": TrafficPortDeleteEntitiesAction,
       "UsbDCNMobileNetworkType": UsbDCNMobileNetworkType,
       "TxDeiAction": TxDeiAction,
       "RxDeiAction": RxDeiAction,
       "DeiOuterTagType": DeiOuterTagType,
       "ConstellationType": ConstellationType,
       "TODOutputFormat": TODOutputFormat,
       "ConstellationTypesBitMap": ConstellationTypesBitMap,
       "InstallationType": InstallationType,
       "WIFIEncryptionType": WIFIEncryptionType,
       "DHCPType": DHCPType,
       "CosMappingMode": CosMappingMode,
       "EthernetPortTrafficModel": EthernetPortTrafficModel,
       "SatelliteHealth": SatelliteHealth,
       "DelayOption": DelayOption,
       "AclRuleOperation": AclRuleOperation,
       "EfIdentificationType": EfIdentificationType,
       "UsbOperationalMode": UsbOperationalMode,
       "SaBitsState": SaBitsState,
       "SignalShape": SignalShape,
       "SignalFrequency": SignalFrequency,
       "PpsPolarity": PpsPolarity,
       "PpsPortImpedanceMode": PpsPortImpedanceMode,
       "AclNoMatchDispositionType": AclNoMatchDispositionType,
       "EfIdentificationFieldType": EfIdentificationFieldType,
       "ToggleValue": ToggleValue,
       "IrigTimeCode": IrigTimeCode,
       "IrigControlField": IrigControlField,
       "IrigRelayOperation": IrigRelayOperation,
       "IrigOutputType": IrigOutputType,
       "IrigDigitalSignalVoltage": IrigDigitalSignalVoltage,
       "IrigGroupExtensionType": IrigGroupExtensionType,
       "CcPortDutyCycle": CcPortDutyCycle,
       "CcActivePortState": CcActivePortState,
       "DynamicModelType": DynamicModelType,
       "PoEStatus": PoEStatus,
       "PlugType": PlugType,
       "PlugMode": PlugMode,
       "RelativeChannelIdentifier": RelativeChannelIdentifier,
       "ChannelType": ChannelType,
       "OutOfBandChannelStatus": OutOfBandChannelStatus,
       "GMetroAutoTuningMode": GMetroAutoTuningMode,
       "FrequencyIdentifier": FrequencyIdentifier,
       "ITUCBandChannelIdentifier": ITUCBandChannelIdentifier,
       "E3T3Type": E3T3Type,
       "PortState": PortState,
       "cmFacilityMIB": cmFacilityMIB,
       "cmFacilityObjects": cmFacilityObjects,
       "cmEthernetAccPortTable": cmEthernetAccPortTable,
       "cmEthernetAccPortEntry": cmEthernetAccPortEntry,
       "cmEthernetAccPortIndex": cmEthernetAccPortIndex,
       "cmEthernetAccPortIfIndex": cmEthernetAccPortIfIndex,
       "cmEthernetAccPortEntityIndex": cmEthernetAccPortEntityIndex,
       "cmEthernetAccPortAdminState": cmEthernetAccPortAdminState,
       "cmEthernetAccPortOperationalState": cmEthernetAccPortOperationalState,
       "cmEthernetAccPortSecondaryState": cmEthernetAccPortSecondaryState,
       "cmEthernetAccPortMTU": cmEthernetAccPortMTU,
       "cmEthernetAccPortMediaType": cmEthernetAccPortMediaType,
       "cmEthernetAccPortConfigSpeed": cmEthernetAccPortConfigSpeed,
       "cmEthernetAccPortNegotiatedSpeed": cmEthernetAccPortNegotiatedSpeed,
       "cmEthernetAccPortMDIXType": cmEthernetAccPortMDIXType,
       "cmEthernetAccPortJumboFramesEnabled": cmEthernetAccPortJumboFramesEnabled,
       "cmEthernetAccPortSfpVendorName": cmEthernetAccPortSfpVendorName,
       "cmEthernetAccPortSfpPartNumber": cmEthernetAccPortSfpPartNumber,
       "cmEthernetAccPortSfpSerialNumber": cmEthernetAccPortSfpSerialNumber,
       "cmEthernetAccPortSfpDateOfManufacture": cmEthernetAccPortSfpDateOfManufacture,
       "cmEthernetAccPortSfpConnectorValue": cmEthernetAccPortSfpConnectorValue,
       "cmEthernetAccPortInitiateDiag": cmEthernetAccPortInitiateDiag,
       "cmEthernetAccPortDiagnosePair1Cond": cmEthernetAccPortDiagnosePair1Cond,
       "cmEthernetAccPortDiagnosePair2Cond": cmEthernetAccPortDiagnosePair2Cond,
       "cmEthernetAccPortDiagnosePair3Cond": cmEthernetAccPortDiagnosePair3Cond,
       "cmEthernetAccPortDiagnosePair4Cond": cmEthernetAccPortDiagnosePair4Cond,
       "cmEthernetAccPortDiagnoseAutoNegCond": cmEthernetAccPortDiagnoseAutoNegCond,
       "cmEthernetAccPortDiagnoseLpbkCond": cmEthernetAccPortDiagnoseLpbkCond,
       "cmEthernetAccPortDiagnoseEfmLpbkCond": cmEthernetAccPortDiagnoseEfmLpbkCond,
       "cmEthernetAccPortDiagnoseResult": cmEthernetAccPortDiagnoseResult,
       "cmEthernetAccPortDiagnoseTestStatus": cmEthernetAccPortDiagnoseTestStatus,
       "cmEthernetAccPortDiagnoseTestTime": cmEthernetAccPortDiagnoseTestTime,
       "cmEthernetAccPortLoopbackConfig": cmEthernetAccPortLoopbackConfig,
       "cmEthernetAccPortLoopbackStatus": cmEthernetAccPortLoopbackStatus,
       "cmEthernetAccPortLoopbackTime": cmEthernetAccPortLoopbackTime,
       "cmEthernetAccPortLoopbackSwapSADA": cmEthernetAccPortLoopbackSwapSADA,
       "cmEthernetAccPortOuterVlanLoopbackMask": cmEthernetAccPortOuterVlanLoopbackMask,
       "cmEthernetAccPortOuterVlanLoopback1": cmEthernetAccPortOuterVlanLoopback1,
       "cmEthernetAccPortOuterVlanLoopback2": cmEthernetAccPortOuterVlanLoopback2,
       "cmEthernetAccPortOuterVlanLoopback3": cmEthernetAccPortOuterVlanLoopback3,
       "cmEthernetAccPortInnerVlanLoopbackMask": cmEthernetAccPortInnerVlanLoopbackMask,
       "cmEthernetAccPortInnerVlanLoopback1": cmEthernetAccPortInnerVlanLoopback1,
       "cmEthernetAccPortInnerVlanLoopback2": cmEthernetAccPortInnerVlanLoopback2,
       "cmEthernetAccPortInnerVlanLoopback3": cmEthernetAccPortInnerVlanLoopback3,
       "cmEthernetAccPortLinkLossFwdEnabled": cmEthernetAccPortLinkLossFwdEnabled,
       "cmEthernetAccPortLinkLossFwdSignalType": cmEthernetAccPortLinkLossFwdSignalType,
       "cmEthernetAccPortLinkLossFwdTriggerTypes": cmEthernetAccPortLinkLossFwdTriggerTypes,
       "cmEthernetAccPortLinkLossFwdDelay": cmEthernetAccPortLinkLossFwdDelay,
       "cmEthernetAccPortLinkLossFwdActive": cmEthernetAccPortLinkLossFwdActive,
       "cmEthernetAccPortLinkLossFwdPartnerEnabled": cmEthernetAccPortLinkLossFwdPartnerEnabled,
       "cmEthernetAccPortLinkLossFwdLocalLinkId": cmEthernetAccPortLinkLossFwdLocalLinkId,
       "cmEthernetAccPortLinkLossFwdRemoteLinkIds": cmEthernetAccPortLinkLossFwdRemoteLinkIds,
       "cmEthernetAccPortOamId": cmEthernetAccPortOamId,
       "cmEthernetAccPortOamAdminDisposition": cmEthernetAccPortOamAdminDisposition,
       "cmEthernetAccPortOamDiscoveryState": cmEthernetAccPortOamDiscoveryState,
       "cmEthernetAccPortOamLocalVarRtrvsEnabled": cmEthernetAccPortOamLocalVarRtrvsEnabled,
       "cmEthernetAccPortOamLocalLinkEventsEnabled": cmEthernetAccPortOamLocalLinkEventsEnabled,
       "cmEthernetAccPortOamLocalOamLoopbacksSupported": cmEthernetAccPortOamLocalOamLoopbacksSupported,
       "cmEthernetAccPortOamLocalUnidirSupportEnabled": cmEthernetAccPortOamLocalUnidirSupportEnabled,
       "cmEthernetAccPortOamLocalMaxPDUSize": cmEthernetAccPortOamLocalMaxPDUSize,
       "cmEthernetAccPortOamLocalMode": cmEthernetAccPortOamLocalMode,
       "cmEthernetAccPortOamRemoteMacAddress": cmEthernetAccPortOamRemoteMacAddress,
       "cmEthernetAccPortOamRemoteVarRtrvsEnabled": cmEthernetAccPortOamRemoteVarRtrvsEnabled,
       "cmEthernetAccPortOamRemoteLinkEventsEnabled": cmEthernetAccPortOamRemoteLinkEventsEnabled,
       "cmEthernetAccPortOamRemoteOamLoopbacksSupported": cmEthernetAccPortOamRemoteOamLoopbacksSupported,
       "cmEthernetAccPortOamRemoteUnidirSupportEnabled": cmEthernetAccPortOamRemoteUnidirSupportEnabled,
       "cmEthernetAccPortOamRemoteMaxPDUSize": cmEthernetAccPortOamRemoteMaxPDUSize,
       "cmEthernetAccPortOamRemoteMode": cmEthernetAccPortOamRemoteMode,
       "cmEthernetAccPortMode": cmEthernetAccPortMode,
       "cmEthernetAccPortSvcType": cmEthernetAccPortSvcType,
       "cmEthernetAccPortRxPauseDisposition": cmEthernetAccPortRxPauseDisposition,
       "cmEthernetAccPortTxPauseEnabled": cmEthernetAccPortTxPauseEnabled,
       "cmEthernetAccPortAfpType": cmEthernetAccPortAfpType,
       "cmEthernetAccPortMDIXStatus": cmEthernetAccPortMDIXStatus,
       "cmEthernetAccPortSfpReach": cmEthernetAccPortSfpReach,
       "cmEthernetAccPortSfpLaserWaveLength": cmEthernetAccPortSfpLaserWaveLength,
       "cmEthernetAccPortSfpMediaType": cmEthernetAccPortSfpMediaType,
       "cmEthernetAccPortOamEnabled": cmEthernetAccPortOamEnabled,
       "cmEthernetAccPortOamAdminState": cmEthernetAccPortOamAdminState,
       "cmEthernetAccPortShapingEnabled": cmEthernetAccPortShapingEnabled,
       "cmEthernetAccPortShapedSpeedLo": cmEthernetAccPortShapedSpeedLo,
       "cmEthernetAccPortShapedSpeedHi": cmEthernetAccPortShapedSpeedHi,
       "cmEthernetAccPortQinQEtherType": cmEthernetAccPortQinQEtherType,
       "cmEthernetAccPortRxPauseEnabled": cmEthernetAccPortRxPauseEnabled,
       "cmEthernetAccPortAutoDiagEnabled": cmEthernetAccPortAutoDiagEnabled,
       "cmEthernetAccPortLinkLossFwdTxActionType": cmEthernetAccPortLinkLossFwdTxActionType,
       "cmEthernetAccPortLinkLossFwdRxRLDLinkIds": cmEthernetAccPortLinkLossFwdRxRLDLinkIds,
       "cmEthernetAccPortN2AVlanTrunkingEnabled": cmEthernetAccPortN2AVlanTrunkingEnabled,
       "cmEthernetAccPortA2NPushPVIDEnabled": cmEthernetAccPortA2NPushPVIDEnabled,
       "cmEthernetAccPortN2APopPVIDEnabled": cmEthernetAccPortN2APopPVIDEnabled,
       "cmEthernetAccPortPortVlanId": cmEthernetAccPortPortVlanId,
       "cmEthernetAccPortPortVlanPriority": cmEthernetAccPortPortVlanPriority,
       "cmEthernetAccPortPrioMapMode": cmEthernetAccPortPrioMapMode,
       "cmEthernetAccPortSyncEEnabled": cmEthernetAccPortSyncEEnabled,
       "cmEthernetAccPortQLModeEnabled": cmEthernetAccPortQLModeEnabled,
       "cmEthernetAccPortExpectedQL": cmEthernetAccPortExpectedQL,
       "cmEthernetAccPortAssumedQL": cmEthernetAccPortAssumedQL,
       "cmEthernetAccPortReceivedQL": cmEthernetAccPortReceivedQL,
       "cmEthernetAccPortTransmitQL": cmEthernetAccPortTransmitQL,
       "cmEthernetAccPortDeiEnable": cmEthernetAccPortDeiEnable,
       "cmEthernetAccPortPcpDEEncType": cmEthernetAccPortPcpDEEncType,
       "cmEthernetAccPortPcpDEPairsAction": cmEthernetAccPortPcpDEPairsAction,
       "cmEthernetAccPortSSMRemoteMacAddress": cmEthernetAccPortSSMRemoteMacAddress,
       "cmEthernetAccPortXgePhyType": cmEthernetAccPortXgePhyType,
       "cmEthernetAccPortLoopbackSourceMacControlEnabled": cmEthernetAccPortLoopbackSourceMacControlEnabled,
       "cmEthernetAccPortLoopbackDestMacControlEnabled": cmEthernetAccPortLoopbackDestMacControlEnabled,
       "cmEthernetAccPortLoopbackSourceMacAddress": cmEthernetAccPortLoopbackSourceMacAddress,
       "cmEthernetAccPortLoopbackDestMacAddress": cmEthernetAccPortLoopbackDestMacAddress,
       "cmEthernetAccPortLoopbackBlockingEnabled": cmEthernetAccPortLoopbackBlockingEnabled,
       "cmEthernetAccPortRxDeiAction": cmEthernetAccPortRxDeiAction,
       "cmEthernetAccPortTxDeiAction": cmEthernetAccPortTxDeiAction,
       "cmEthernetAccPortRxDeiOuterTagType": cmEthernetAccPortRxDeiOuterTagType,
       "cmEthernetAccPortTxDeiOuterTagType": cmEthernetAccPortTxDeiOuterTagType,
       "cmEthernetAccPortLaserWDMChannel": cmEthernetAccPortLaserWDMChannel,
       "cmEthernetAccPortLaserIsTunable": cmEthernetAccPortLaserIsTunable,
       "cmEthernetAccPortLaserFrequency": cmEthernetAccPortLaserFrequency,
       "cmEthernetAccPortMediaTypeAutoSelected": cmEthernetAccPortMediaTypeAutoSelected,
       "cmEthernetAccPortLowLatencyQueuingEnabled": cmEthernetAccPortLowLatencyQueuingEnabled,
       "cmEthernetAccPortA2nSwapPriorityVIDEnabled": cmEthernetAccPortA2nSwapPriorityVIDEnabled,
       "cmEthernetAccPortN2aSwapPriorityVIDEnabled": cmEthernetAccPortN2aSwapPriorityVIDEnabled,
       "cmEthernetAccPortSwapPriorityVID": cmEthernetAccPortSwapPriorityVID,
       "cmEthernetAccPortDiagnosticMacAddress": cmEthernetAccPortDiagnosticMacAddress,
       "cmEthernetAccPortIngressCOSPriority": cmEthernetAccPortIngressCOSPriority,
       "cmEthernetAccPortDefaultCOS": cmEthernetAccPortDefaultCOS,
       "cmEthernetAccPortTrafficModel": cmEthernetAccPortTrafficModel,
       "cmEthernetAccPortIndependentShaperBW": cmEthernetAccPortIndependentShaperBW,
       "cmEthernetAccPortJdsuLoopbackSrcIp": cmEthernetAccPortJdsuLoopbackSrcIp,
       "cmEthernetAccPortWfqSegmentationCOS": cmEthernetAccPortWfqSegmentationCOS,
       "cmEthernetAccPortWfqGroupCOS": cmEthernetAccPortWfqGroupCOS,
       "cmEthernetAccPortWfqGroupEirLo": cmEthernetAccPortWfqGroupEirLo,
       "cmEthernetAccPortWfqGroupEirHi": cmEthernetAccPortWfqGroupEirHi,
       "cmEthernetAccPortSilentStartControl": cmEthernetAccPortSilentStartControl,
       "cmEthernetAccPortSfpLinkLength": cmEthernetAccPortSfpLinkLength,
       "cmEthernetAccPortOuterTagTpidOverride": cmEthernetAccPortOuterTagTpidOverride,
       "cmEthernetAccPortOuterTagTpid": cmEthernetAccPortOuterTagTpid,
       "cmEthernetAccPortSfpName": cmEthernetAccPortSfpName,
       "cmEthernetAccPortSfpHardwareRevision": cmEthernetAccPortSfpHardwareRevision,
       "cmEthernetAccPortPersistentLoopbackControl": cmEthernetAccPortPersistentLoopbackControl,
       "cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl": cmEthernetAccPortLoopbackTestReflectorIPv4AddressControl,
       "cmEthernetAccPortLoopbackTestReflectorIPv4Address": cmEthernetAccPortLoopbackTestReflectorIPv4Address,
       "cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl": cmEthernetAccPortLoopbackTestReflectorIPv6AddressControl,
       "cmEthernetAccPortLoopbackTestReflectorIPv6Address": cmEthernetAccPortLoopbackTestReflectorIPv6Address,
       "cmEthernetAccPortPowerdDeviceDetection": cmEthernetAccPortPowerdDeviceDetection,
       "cmEthernetAccPortPoEStatus": cmEthernetAccPortPoEStatus,
       "cmEthernetAccPortSfpIdentifierValue": cmEthernetAccPortSfpIdentifierValue,
       "cmEthernetAccPortCpdTable": cmEthernetAccPortCpdTable,
       "cmEthernetAccPortCpdEntry": cmEthernetAccPortCpdEntry,
       "cmEthernetAccPortCpdIndex": cmEthernetAccPortCpdIndex,
       "cmEthernetAccPortCpdFilterType": cmEthernetAccPortCpdFilterType,
       "cmEthernetAccPortCpdFilterDescr": cmEthernetAccPortCpdFilterDescr,
       "cmEthernetAccPortCpdDispType": cmEthernetAccPortCpdDispType,
       "cmEthernetAccPortCpdMacAddressMatch": cmEthernetAccPortCpdMacAddressMatch,
       "cmEthernetAccPortCpdMacAddressMask": cmEthernetAccPortCpdMacAddressMask,
       "cmEthernetAccPortCpdEthertype": cmEthernetAccPortCpdEthertype,
       "cmEthernetAccPortCpdEthertypeMask": cmEthernetAccPortCpdEthertypeMask,
       "cmEthernetAccPortCpdSubtype": cmEthernetAccPortCpdSubtype,
       "cmEthernetAccPortCpdSubtypeMask": cmEthernetAccPortCpdSubtypeMask,
       "cmEthernetAccPortClbTable": cmEthernetAccPortClbTable,
       "cmEthernetAccPortClbEntry": cmEthernetAccPortClbEntry,
       "cmEthernetAccPortClbIndex": cmEthernetAccPortClbIndex,
       "cmEthernetAccPortClbEnabled": cmEthernetAccPortClbEnabled,
       "cmEthernetAccPortClbLength": cmEthernetAccPortClbLength,
       "cmEthernetAccPortClbDescr": cmEthernetAccPortClbDescr,
       "cmFlowTable": cmFlowTable,
       "cmFlowEntry": cmFlowEntry,
       "cmFlowIndex": cmFlowIndex,
       "cmFlowCircuitName": cmFlowCircuitName,
       "cmFlowAdminState": cmFlowAdminState,
       "cmFlowOperationalState": cmFlowOperationalState,
       "cmFlowSecondaryState": cmFlowSecondaryState,
       "cmFlowType": cmFlowType,
       "cmFlowMultiCOS": cmFlowMultiCOS,
       "cmFlowA2NCIR": cmFlowA2NCIR,
       "cmFlowA2NEIR": cmFlowA2NEIR,
       "cmFlowN2ARateLimitingEnabled": cmFlowN2ARateLimitingEnabled,
       "cmFlowN2ACIR": cmFlowN2ACIR,
       "cmFlowN2AEIR": cmFlowN2AEIR,
       "cmFlowStorageType": cmFlowStorageType,
       "cmFlowRowStatus": cmFlowRowStatus,
       "cmFlowTrafficType": cmFlowTrafficType,
       "cmFlowCOS": cmFlowCOS,
       "cmFlowVlanMemberList": cmFlowVlanMemberList,
       "cmFlowAction": cmFlowAction,
       "cmFlowActionVlan": cmFlowActionVlan,
       "cmFlowUntaggedMemberEnabled": cmFlowUntaggedMemberEnabled,
       "cmFlowA2NCIRHi": cmFlowA2NCIRHi,
       "cmFlowA2NEIRHi": cmFlowA2NEIRHi,
       "cmFlowN2ACIRHi": cmFlowN2ACIRHi,
       "cmFlowN2AEIRHi": cmFlowN2AEIRHi,
       "cmFlowHCOSMgmtEnabled": cmFlowHCOSMgmtEnabled,
       "cmFlowGuaranteedA2NBandwidthLo": cmFlowGuaranteedA2NBandwidthLo,
       "cmFlowGuaranteedA2NBandwidthHi": cmFlowGuaranteedA2NBandwidthHi,
       "cmFlowMaximumA2NBandwidthLo": cmFlowMaximumA2NBandwidthLo,
       "cmFlowMaximumA2NBandwidthHi": cmFlowMaximumA2NBandwidthHi,
       "cmFlowCTagControl": cmFlowCTagControl,
       "cmFlowCTagVlanId": cmFlowCTagVlanId,
       "cmFlowCTagVlanPriority": cmFlowCTagVlanPriority,
       "cmFlowCTagMatchRxPrio": cmFlowCTagMatchRxPrio,
       "cmFlowSTagControl": cmFlowSTagControl,
       "cmFlowSTagVlanId": cmFlowSTagVlanId,
       "cmFlowSTagVlanPriority": cmFlowSTagVlanPriority,
       "cmFlowOuterTagPrioEnabled": cmFlowOuterTagPrioEnabled,
       "cmFlowN2ACOSPriorityTagType": cmFlowN2ACOSPriorityTagType,
       "cmFlowESFramesLossThreshold": cmFlowESFramesLossThreshold,
       "cmFlowSESFramesLossThresholdRatio": cmFlowSESFramesLossThresholdRatio,
       "cmFlowPolicingEnabled": cmFlowPolicingEnabled,
       "cmFlowPreserveSTagProperties": cmFlowPreserveSTagProperties,
       "cmFlowInnerTagPrioEnabled": cmFlowInnerTagPrioEnabled,
       "cmFlowN2AOuterTagPrioEnabled": cmFlowN2AOuterTagPrioEnabled,
       "cmFlowA2NShapingType": cmFlowA2NShapingType,
       "cmFlowN2AShapingType": cmFlowN2AShapingType,
       "cmFlowSTagMatchRxPrio": cmFlowSTagMatchRxPrio,
       "cmFlowAutoBandwidthConfigEnabled": cmFlowAutoBandwidthConfigEnabled,
       "cmFlowPort1": cmFlowPort1,
       "cmFlowPort2": cmFlowPort2,
       "cmFlowPolicingControl": cmFlowPolicingControl,
       "cmFlowAutoCIRPercentage": cmFlowAutoCIRPercentage,
       "cmFlowLoopAvoidanceObject": cmFlowLoopAvoidanceObject,
       "cmFlowConfigType": cmFlowConfigType,
       "cmFlowN2NForwardingEnabled": cmFlowN2NForwardingEnabled,
       "cmFlowA2NMulticastRateLimitControl": cmFlowA2NMulticastRateLimitControl,
       "cmFlowA2NMulticastRateLimitLo": cmFlowA2NMulticastRateLimitLo,
       "cmFlowA2NMulticastRateLimitHi": cmFlowA2NMulticastRateLimitHi,
       "cmFlowA2NBroadcastRateLimitControl": cmFlowA2NBroadcastRateLimitControl,
       "cmFlowA2NBroadcastRateLimitLo": cmFlowA2NBroadcastRateLimitLo,
       "cmFlowA2NBroadcastRateLimitHi": cmFlowA2NBroadcastRateLimitHi,
       "cmFlowA2NCombinedRateLimitControl": cmFlowA2NCombinedRateLimitControl,
       "cmFlowA2NCombinedRateLimitLo": cmFlowA2NCombinedRateLimitLo,
       "cmFlowA2NCombinedRateLimitHi": cmFlowA2NCombinedRateLimitHi,
       "cmFlowRefPrioMapProfile": cmFlowRefPrioMapProfile,
       "cmFlowRefEoMplsPwObject": cmFlowRefEoMplsPwObject,
       "cmFlowRefN2APrioMapProfile": cmFlowRefN2APrioMapProfile,
       "cmFlowSecureBlockingEnabled": cmFlowSecureBlockingEnabled,
       "cmFlowRefConnectGuardFlowList": cmFlowRefConnectGuardFlowList,
       "cmFlowSecureStateList": cmFlowSecureStateList,
       "cmFlowIndependentA2NShaperBW": cmFlowIndependentA2NShaperBW,
       "cmFlowWfqSegmentationCOS": cmFlowWfqSegmentationCOS,
       "cmFlowWfqGroupCOS": cmFlowWfqGroupCOS,
       "cmFlowWfqGroupEirLo": cmFlowWfqGroupEirLo,
       "cmFlowWfqGroupEirHi": cmFlowWfqGroupEirHi,
       "cmFlowCpdTable": cmFlowCpdTable,
       "cmFlowCpdEntry": cmFlowCpdEntry,
       "cmFlowCpdIndex": cmFlowCpdIndex,
       "cmFlowCpdFilterType": cmFlowCpdFilterType,
       "cmFlowCpdFilterDescr": cmFlowCpdFilterDescr,
       "cmFlowCpdDispType": cmFlowCpdDispType,
       "cmFlowCpdMacAddressMatch": cmFlowCpdMacAddressMatch,
       "cmFlowCpdMacAddressMask": cmFlowCpdMacAddressMask,
       "cmFlowCpdEthertype": cmFlowCpdEthertype,
       "cmFlowCpdEthertypeMask": cmFlowCpdEthertypeMask,
       "cmFlowCpdSubtype": cmFlowCpdSubtype,
       "cmFlowCpdSubtypeMask": cmFlowCpdSubtypeMask,
       "cmQosShaperTable": cmQosShaperTable,
       "cmQosShaperEntry": cmQosShaperEntry,
       "cmQosShaperTypeIndex": cmQosShaperTypeIndex,
       "cmQosShaperIndex": cmQosShaperIndex,
       "cmQosShaperDirection": cmQosShaperDirection,
       "cmQosShaperAdminState": cmQosShaperAdminState,
       "cmQosShaperOperationalState": cmQosShaperOperationalState,
       "cmQosShaperSecondaryState": cmQosShaperSecondaryState,
       "cmQosShaperCIR": cmQosShaperCIR,
       "cmQosShaperCBS": cmQosShaperCBS,
       "cmQosShaperEIR": cmQosShaperEIR,
       "cmQosShaperEBS": cmQosShaperEBS,
       "cmQosShaperBufferSize": cmQosShaperBufferSize,
       "cmQosShaperStorageType": cmQosShaperStorageType,
       "cmQosShaperRowStatus": cmQosShaperRowStatus,
       "cmQosShaperCOS": cmQosShaperCOS,
       "cmQosShaperCIRHi": cmQosShaperCIRHi,
       "cmQosShaperEIRHi": cmQosShaperEIRHi,
       "cmQosShaperSoamCIRLo": cmQosShaperSoamCIRLo,
       "cmQosShaperSoamCIRHi": cmQosShaperSoamCIRHi,
       "cmQosShaperSoamEIRLo": cmQosShaperSoamEIRLo,
       "cmQosShaperSoamEIRHi": cmQosShaperSoamEIRHi,
       "cmQosShaperWredGreenMinQueueThreshold": cmQosShaperWredGreenMinQueueThreshold,
       "cmQosShaperWredGreenMaxQueueThreshold": cmQosShaperWredGreenMaxQueueThreshold,
       "cmQosShaperWredGreenDropProbability": cmQosShaperWredGreenDropProbability,
       "cmQosShaperWredYellowMinQueueThreshold": cmQosShaperWredYellowMinQueueThreshold,
       "cmQosShaperWredYellowMaxQueueThreshold": cmQosShaperWredYellowMaxQueueThreshold,
       "cmQosShaperWredYellowDropProbability": cmQosShaperWredYellowDropProbability,
       "cmQosShaperAvgFrameSizeBeforeFragment": cmQosShaperAvgFrameSizeBeforeFragment,
       "cmQosShaperWfqWeight": cmQosShaperWfqWeight,
       "cmEthernetNetPortTable": cmEthernetNetPortTable,
       "cmEthernetNetPortEntry": cmEthernetNetPortEntry,
       "cmEthernetNetPortIndex": cmEthernetNetPortIndex,
       "cmEthernetNetPortIfIndex": cmEthernetNetPortIfIndex,
       "cmEthernetNetPortEntityIndex": cmEthernetNetPortEntityIndex,
       "cmEthernetNetPortAdminState": cmEthernetNetPortAdminState,
       "cmEthernetNetPortOperationalState": cmEthernetNetPortOperationalState,
       "cmEthernetNetPortSecondaryState": cmEthernetNetPortSecondaryState,
       "cmEthernetNetPortMTU": cmEthernetNetPortMTU,
       "cmEthernetNetPortMediaType": cmEthernetNetPortMediaType,
       "cmEthernetNetPortConfigSpeed": cmEthernetNetPortConfigSpeed,
       "cmEthernetNetPortNegotiatedSpeed": cmEthernetNetPortNegotiatedSpeed,
       "cmEthernetNetPortMDIXType": cmEthernetNetPortMDIXType,
       "cmEthernetNetPortJumboFramesEnabled": cmEthernetNetPortJumboFramesEnabled,
       "cmEthernetNetPortSfpVendorName": cmEthernetNetPortSfpVendorName,
       "cmEthernetNetPortSfpPartNumber": cmEthernetNetPortSfpPartNumber,
       "cmEthernetNetPortSfpSerialNumber": cmEthernetNetPortSfpSerialNumber,
       "cmEthernetNetPortSfpDateOfManufacture": cmEthernetNetPortSfpDateOfManufacture,
       "cmEthernetNetPortSfpConnectorValue": cmEthernetNetPortSfpConnectorValue,
       "cmEthernetNetPortInitiateDiag": cmEthernetNetPortInitiateDiag,
       "cmEthernetNetPortDiagnosePair1Cond": cmEthernetNetPortDiagnosePair1Cond,
       "cmEthernetNetPortDiagnosePair2Cond": cmEthernetNetPortDiagnosePair2Cond,
       "cmEthernetNetPortDiagnosePair3Cond": cmEthernetNetPortDiagnosePair3Cond,
       "cmEthernetNetPortDiagnosePair4Cond": cmEthernetNetPortDiagnosePair4Cond,
       "cmEthernetNetPortDiagnoseAutoNegCond": cmEthernetNetPortDiagnoseAutoNegCond,
       "cmEthernetNetPortDiagnoseLpbkCond": cmEthernetNetPortDiagnoseLpbkCond,
       "cmEthernetNetPortDiagnoseEfmLpbkCond": cmEthernetNetPortDiagnoseEfmLpbkCond,
       "cmEthernetNetPortDiagnoseResult": cmEthernetNetPortDiagnoseResult,
       "cmEthernetNetPortDiagnoseTestStatus": cmEthernetNetPortDiagnoseTestStatus,
       "cmEthernetNetPortDiagnoseTestTime": cmEthernetNetPortDiagnoseTestTime,
       "cmEthernetNetPortLoopbackConfig": cmEthernetNetPortLoopbackConfig,
       "cmEthernetNetPortLoopbackStatus": cmEthernetNetPortLoopbackStatus,
       "cmEthernetNetPortLoopbackTime": cmEthernetNetPortLoopbackTime,
       "cmEthernetNetPortLoopbackSwapSADA": cmEthernetNetPortLoopbackSwapSADA,
       "cmEthernetNetPortOuterVlanLoopbackMask": cmEthernetNetPortOuterVlanLoopbackMask,
       "cmEthernetNetPortOuterVlanLoopback1": cmEthernetNetPortOuterVlanLoopback1,
       "cmEthernetNetPortOuterVlanLoopback2": cmEthernetNetPortOuterVlanLoopback2,
       "cmEthernetNetPortOuterVlanLoopback3": cmEthernetNetPortOuterVlanLoopback3,
       "cmEthernetNetPortInnerVlanLoopbackMask": cmEthernetNetPortInnerVlanLoopbackMask,
       "cmEthernetNetPortInnerVlanLoopback1": cmEthernetNetPortInnerVlanLoopback1,
       "cmEthernetNetPortInnerVlanLoopback2": cmEthernetNetPortInnerVlanLoopback2,
       "cmEthernetNetPortInnerVlanLoopback3": cmEthernetNetPortInnerVlanLoopback3,
       "cmEthernetNetPortLinkLossFwdEnabled": cmEthernetNetPortLinkLossFwdEnabled,
       "cmEthernetNetPortLinkLossFwdSignalType": cmEthernetNetPortLinkLossFwdSignalType,
       "cmEthernetNetPortLinkLossFwdTriggerTypes": cmEthernetNetPortLinkLossFwdTriggerTypes,
       "cmEthernetNetPortLinkLossFwdDelay": cmEthernetNetPortLinkLossFwdDelay,
       "cmEthernetNetPortLinkLossFwdActive": cmEthernetNetPortLinkLossFwdActive,
       "cmEthernetNetPortLinkLossFwdPartnerEnabled": cmEthernetNetPortLinkLossFwdPartnerEnabled,
       "cmEthernetNetPortLinkLossFwdLocalLinkId": cmEthernetNetPortLinkLossFwdLocalLinkId,
       "cmEthernetNetPortLinkLossFwdRemoteLinkIds": cmEthernetNetPortLinkLossFwdRemoteLinkIds,
       "cmEthernetNetPortOamId": cmEthernetNetPortOamId,
       "cmEthernetNetPortOamAdminDisposition": cmEthernetNetPortOamAdminDisposition,
       "cmEthernetNetPortOamDiscoveryState": cmEthernetNetPortOamDiscoveryState,
       "cmEthernetNetPortOamLocalVarRtrvsEnabled": cmEthernetNetPortOamLocalVarRtrvsEnabled,
       "cmEthernetNetPortOamLocalLinkEventsEnabled": cmEthernetNetPortOamLocalLinkEventsEnabled,
       "cmEthernetNetPortOamLocalOamLoopbacksSupported": cmEthernetNetPortOamLocalOamLoopbacksSupported,
       "cmEthernetNetPortOamLocalUnidirSupportEnabled": cmEthernetNetPortOamLocalUnidirSupportEnabled,
       "cmEthernetNetPortOamLocalMaxPDUSize": cmEthernetNetPortOamLocalMaxPDUSize,
       "cmEthernetNetPortOamLocalMode": cmEthernetNetPortOamLocalMode,
       "cmEthernetNetPortOamRemoteMacAddress": cmEthernetNetPortOamRemoteMacAddress,
       "cmEthernetNetPortOamRemoteVarRtrvsEnabled": cmEthernetNetPortOamRemoteVarRtrvsEnabled,
       "cmEthernetNetPortOamRemoteLinkEventsEnabled": cmEthernetNetPortOamRemoteLinkEventsEnabled,
       "cmEthernetNetPortOamRemoteOamLoopbacksSupported": cmEthernetNetPortOamRemoteOamLoopbacksSupported,
       "cmEthernetNetPortOamRemoteUnidirSupportEnabled": cmEthernetNetPortOamRemoteUnidirSupportEnabled,
       "cmEthernetNetPortOamRemoteMaxPDUSize": cmEthernetNetPortOamRemoteMaxPDUSize,
       "cmEthernetNetPortOamRemoteMode": cmEthernetNetPortOamRemoteMode,
       "cmEthernetNetPortRxPauseDisposition": cmEthernetNetPortRxPauseDisposition,
       "cmEthernetNetPortTxPauseEnabled": cmEthernetNetPortTxPauseEnabled,
       "cmEthernetNetPortAfpType": cmEthernetNetPortAfpType,
       "cmEthernetNetPortMDIXStatus": cmEthernetNetPortMDIXStatus,
       "cmEthernetNetPortSfpReach": cmEthernetNetPortSfpReach,
       "cmEthernetNetPortSfpLaserWaveLength": cmEthernetNetPortSfpLaserWaveLength,
       "cmEthernetNetPortSfpMediaType": cmEthernetNetPortSfpMediaType,
       "cmEthernetNetPortOamEnabled": cmEthernetNetPortOamEnabled,
       "cmEthernetNetPortOamAdminState": cmEthernetNetPortOamAdminState,
       "cmEthernetNetPortShapingEnabled": cmEthernetNetPortShapingEnabled,
       "cmEthernetNetPortShapedSpeedLo": cmEthernetNetPortShapedSpeedLo,
       "cmEthernetNetPortShapedSpeedHi": cmEthernetNetPortShapedSpeedHi,
       "cmEthernetNetPortQinQEtherType": cmEthernetNetPortQinQEtherType,
       "cmEthernetNetPortLinkLossFwdTxActionType": cmEthernetNetPortLinkLossFwdTxActionType,
       "cmEthernetNetPortLinkLossFwdRxRLDLinkIds": cmEthernetNetPortLinkLossFwdRxRLDLinkIds,
       "cmEthernetNetPortAutoDiagEnabled": cmEthernetNetPortAutoDiagEnabled,
       "cmEthernetNetPortSyncEEnabled": cmEthernetNetPortSyncEEnabled,
       "cmEthernetNetPortQLModeEnabled": cmEthernetNetPortQLModeEnabled,
       "cmEthernetNetPortExpectedQL": cmEthernetNetPortExpectedQL,
       "cmEthernetNetPortAssumedQL": cmEthernetNetPortAssumedQL,
       "cmEthernetNetPortReceivedQL": cmEthernetNetPortReceivedQL,
       "cmEthernetNetPortTransmitQL": cmEthernetNetPortTransmitQL,
       "cmEthernetNetPortPrioMapMode": cmEthernetNetPortPrioMapMode,
       "cmEthernetNetPortDeiEnable": cmEthernetNetPortDeiEnable,
       "cmEthernetNetPortPcpDEEncType": cmEthernetNetPortPcpDEEncType,
       "cmEthernetNetPortPcpDEPairsAction": cmEthernetNetPortPcpDEPairsAction,
       "cmEthernetNetPortSSMRemoteMacAddress": cmEthernetNetPortSSMRemoteMacAddress,
       "cmEthernetNetPortXgePhyType": cmEthernetNetPortXgePhyType,
       "cmEthernetNetPortLoopbackSourceMacControlEnabled": cmEthernetNetPortLoopbackSourceMacControlEnabled,
       "cmEthernetNetPortLoopbackDestMacControlEnabled": cmEthernetNetPortLoopbackDestMacControlEnabled,
       "cmEthernetNetPortLoopbackSourceMacAddress": cmEthernetNetPortLoopbackSourceMacAddress,
       "cmEthernetNetPortLoopbackDestMacAddress": cmEthernetNetPortLoopbackDestMacAddress,
       "cmEthernetNetPortLoopbackBlockingEnabled": cmEthernetNetPortLoopbackBlockingEnabled,
       "cmEthernetNetPortRxDeiAction": cmEthernetNetPortRxDeiAction,
       "cmEthernetNetPortTxDeiAction": cmEthernetNetPortTxDeiAction,
       "cmEthernetNetPortRxDeiOuterTagType": cmEthernetNetPortRxDeiOuterTagType,
       "cmEthernetNetPortTxDeiOuterTagType": cmEthernetNetPortTxDeiOuterTagType,
       "cmEthernetNetPortLaserWDMChannel": cmEthernetNetPortLaserWDMChannel,
       "cmEthernetNetPortLaserIsTunable": cmEthernetNetPortLaserIsTunable,
       "cmEthernetNetPortLaserFrequency": cmEthernetNetPortLaserFrequency,
       "cmEthernetNetPortMediaTypeAutoSelected": cmEthernetNetPortMediaTypeAutoSelected,
       "cmEthernetNetPortLowLatencyQueuingEnabled": cmEthernetNetPortLowLatencyQueuingEnabled,
       "cmEthernetNetPortDiagnosticMacAddress": cmEthernetNetPortDiagnosticMacAddress,
       "cmEthernetNetPortIngressCOSPriority": cmEthernetNetPortIngressCOSPriority,
       "cmEthernetNetPortDefaultCOS": cmEthernetNetPortDefaultCOS,
       "cmEthernetNetPortTrafficModel": cmEthernetNetPortTrafficModel,
       "cmEthernetNetPortIndependentShaperBW": cmEthernetNetPortIndependentShaperBW,
       "cmEthernetNetPortExpDEEncType": cmEthernetNetPortExpDEEncType,
       "cmEthernetNetPortExpDEPairsAction": cmEthernetNetPortExpDEPairsAction,
       "cmEthernetNetPortIpPrecDEEncType": cmEthernetNetPortIpPrecDEEncType,
       "cmEthernetNetPortIpPrecDEPairsAction": cmEthernetNetPortIpPrecDEPairsAction,
       "cmEthernetNetPortEncapPcpDEEncodingType": cmEthernetNetPortEncapPcpDEEncodingType,
       "cmEthernetNetPortEncapPcpDEPairsAction": cmEthernetNetPortEncapPcpDEPairsAction,
       "cmEthernetNetPortJdsuLoopbackSrcIp": cmEthernetNetPortJdsuLoopbackSrcIp,
       "cmEthernetNetPortWfqSegmentationCOS": cmEthernetNetPortWfqSegmentationCOS,
       "cmEthernetNetPortWfqGroupCOS": cmEthernetNetPortWfqGroupCOS,
       "cmEthernetNetPortWfqGroupEirLo": cmEthernetNetPortWfqGroupEirLo,
       "cmEthernetNetPortWfqGroupEirHi": cmEthernetNetPortWfqGroupEirHi,
       "cmEthernetNetPortSilentStartControl": cmEthernetNetPortSilentStartControl,
       "cmEthernetNetPortSfpLinkLength": cmEthernetNetPortSfpLinkLength,
       "cmEthernetNetPortOuterTagTpidOverride": cmEthernetNetPortOuterTagTpidOverride,
       "cmEthernetNetPortOuterTagTpid": cmEthernetNetPortOuterTagTpid,
       "cmEthernetNetPortSfpName": cmEthernetNetPortSfpName,
       "cmEthernetNetPortSfpHardwareRevision": cmEthernetNetPortSfpHardwareRevision,
       "cmEthernetNetPortPersistentLoopbackControl": cmEthernetNetPortPersistentLoopbackControl,
       "cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl": cmEthernetNetPortLoopbackTestReflectorIPv4AddressControl,
       "cmEthernetNetPortLoopbackTestReflectorIPv4Address": cmEthernetNetPortLoopbackTestReflectorIPv4Address,
       "cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl": cmEthernetNetPortLoopbackTestReflectorIPv6AddressControl,
       "cmEthernetNetPortLoopbackTestReflectorIPv6Address": cmEthernetNetPortLoopbackTestReflectorIPv6Address,
       "cmEthernetNetPortSfpIdentifierValue": cmEthernetNetPortSfpIdentifierValue,
       "cmEthernetNetPortCpdTable": cmEthernetNetPortCpdTable,
       "cmEthernetNetPortCpdEntry": cmEthernetNetPortCpdEntry,
       "cmEthernetNetPortCpdIndex": cmEthernetNetPortCpdIndex,
       "cmEthernetNetPortCpdFilterType": cmEthernetNetPortCpdFilterType,
       "cmEthernetNetPortCpdFilterDescr": cmEthernetNetPortCpdFilterDescr,
       "cmEthernetNetPortCpdDispType": cmEthernetNetPortCpdDispType,
       "cmEthernetNetPortCpdMacAddressMatch": cmEthernetNetPortCpdMacAddressMatch,
       "cmEthernetNetPortCpdMacAddressMask": cmEthernetNetPortCpdMacAddressMask,
       "cmEthernetNetPortCpdEthertype": cmEthernetNetPortCpdEthertype,
       "cmEthernetNetPortCpdEthertypeMask": cmEthernetNetPortCpdEthertypeMask,
       "cmEthernetNetPortCpdSubtype": cmEthernetNetPortCpdSubtype,
       "cmEthernetNetPortCpdSubtypeMask": cmEthernetNetPortCpdSubtypeMask,
       "cmEthernetMgmtPortTable": cmEthernetMgmtPortTable,
       "cmEthernetMgmtPortEntry": cmEthernetMgmtPortEntry,
       "cmEthernetMgmtPortIndex": cmEthernetMgmtPortIndex,
       "cmEthernetMgmtPortEntityIndex": cmEthernetMgmtPortEntityIndex,
       "cmEthernetMgmtPortAdminState": cmEthernetMgmtPortAdminState,
       "cmEthernetMgmtPortOperationalState": cmEthernetMgmtPortOperationalState,
       "cmEthernetMgmtPortSecondaryState": cmEthernetMgmtPortSecondaryState,
       "cmEthernetMgmtPortMTU": cmEthernetMgmtPortMTU,
       "cmEthernetMgmtPortConfigSpeed": cmEthernetMgmtPortConfigSpeed,
       "cmEthernetMgmtPortNegotiatedSpeed": cmEthernetMgmtPortNegotiatedSpeed,
       "cmEthernetMgmtPortMDIXType": cmEthernetMgmtPortMDIXType,
       "cmEthernetMgmtPortMDIXStatus": cmEthernetMgmtPortMDIXStatus,
       "cmEthernetMgmtPortMediaType": cmEthernetMgmtPortMediaType,
       "cmPrioMapTable": cmPrioMapTable,
       "cmPrioMapEntry": cmPrioMapEntry,
       "cmPrioMapIndex": cmPrioMapIndex,
       "cmPrioMapInPriority": cmPrioMapInPriority,
       "cmPrioMapXTagControl": cmPrioMapXTagControl,
       "cmPrioMapXTagPriority": cmPrioMapXTagPriority,
       "cmPrioMapCOS": cmPrioMapCOS,
       "cmPrioMapOuterTagPriority": cmPrioMapOuterTagPriority,
       "cmPrioMapInnerTagPriority": cmPrioMapInnerTagPriority,
       "cmQosFlowPolicerTable": cmQosFlowPolicerTable,
       "cmQosFlowPolicerEntry": cmQosFlowPolicerEntry,
       "cmQosFlowPolicerTypeIndex": cmQosFlowPolicerTypeIndex,
       "cmQosFlowPolicerIndex": cmQosFlowPolicerIndex,
       "cmQosFlowPolicerDirection": cmQosFlowPolicerDirection,
       "cmQosFlowPolicerAdminState": cmQosFlowPolicerAdminState,
       "cmQosFlowPolicerOperationalState": cmQosFlowPolicerOperationalState,
       "cmQosFlowPolicerSecondaryState": cmQosFlowPolicerSecondaryState,
       "cmQosFlowPolicerCIRLo": cmQosFlowPolicerCIRLo,
       "cmQosFlowPolicerCIRHi": cmQosFlowPolicerCIRHi,
       "cmQosFlowPolicerEIRLo": cmQosFlowPolicerEIRLo,
       "cmQosFlowPolicerEIRHi": cmQosFlowPolicerEIRHi,
       "cmQosFlowPolicerCBS": cmQosFlowPolicerCBS,
       "cmQosFlowPolicerEBS": cmQosFlowPolicerEBS,
       "cmQosFlowPolicerAlgorithm": cmQosFlowPolicerAlgorithm,
       "cmQosFlowPolicerColorMode": cmQosFlowPolicerColorMode,
       "cmQosFlowPolicerColorMarkingFlag": cmQosFlowPolicerColorMarkingFlag,
       "cmQosFlowPolicerCouplingFlag": cmQosFlowPolicerCouplingFlag,
       "cmQosFlowPolicerAssociatedShaper": cmQosFlowPolicerAssociatedShaper,
       "cmQosFlowPolicerStorageType": cmQosFlowPolicerStorageType,
       "cmQosFlowPolicerRowStatus": cmQosFlowPolicerRowStatus,
       "cmQosFlowPolicerCIRMaxHi": cmQosFlowPolicerCIRMaxHi,
       "cmQosFlowPolicerCIRMaxLo": cmQosFlowPolicerCIRMaxLo,
       "cmQosFlowPolicerEIRMaxHi": cmQosFlowPolicerEIRMaxHi,
       "cmQosFlowPolicerEIRMaxLo": cmQosFlowPolicerEIRMaxLo,
       "cmQosFlowPolicerEnvelopeObject": cmQosFlowPolicerEnvelopeObject,
       "cmQosFlowPolicerRank": cmQosFlowPolicerRank,
       "cmQosFlowPolicerPolicingEnabled": cmQosFlowPolicerPolicingEnabled,
       "cmAccPortQosShaperTable": cmAccPortQosShaperTable,
       "cmAccPortQosShaperEntry": cmAccPortQosShaperEntry,
       "cmAccPortQosShaperIndex": cmAccPortQosShaperIndex,
       "cmAccPortQosShaperDirection": cmAccPortQosShaperDirection,
       "cmAccPortQosShaperAdminState": cmAccPortQosShaperAdminState,
       "cmAccPortQosShaperOperationalState": cmAccPortQosShaperOperationalState,
       "cmAccPortQosShaperSecondaryState": cmAccPortQosShaperSecondaryState,
       "cmAccPortQosShaperCIRLo": cmAccPortQosShaperCIRLo,
       "cmAccPortQosShaperCIRHi": cmAccPortQosShaperCIRHi,
       "cmAccPortQosShaperEIRLo": cmAccPortQosShaperEIRLo,
       "cmAccPortQosShaperEIRHi": cmAccPortQosShaperEIRHi,
       "cmAccPortQosShaperCBS": cmAccPortQosShaperCBS,
       "cmAccPortQosShaperEBS": cmAccPortQosShaperEBS,
       "cmAccPortQosShaperBufferSize": cmAccPortQosShaperBufferSize,
       "cmAccPortQosShaperCOS": cmAccPortQosShaperCOS,
       "cmAccPortQosShaperSoamCIRLo": cmAccPortQosShaperSoamCIRLo,
       "cmAccPortQosShaperSoamCIRHi": cmAccPortQosShaperSoamCIRHi,
       "cmAccPortQosShaperSoamEIRLo": cmAccPortQosShaperSoamEIRLo,
       "cmAccPortQosShaperSoamEIRHi": cmAccPortQosShaperSoamEIRHi,
       "cmAccPortQosShaperWredGreenMinQueueThreshold": cmAccPortQosShaperWredGreenMinQueueThreshold,
       "cmAccPortQosShaperWredGreenMaxQueueThreshold": cmAccPortQosShaperWredGreenMaxQueueThreshold,
       "cmAccPortQosShaperWredGreenDropProbability": cmAccPortQosShaperWredGreenDropProbability,
       "cmAccPortQosShaperWredYellowMinQueueThreshold": cmAccPortQosShaperWredYellowMinQueueThreshold,
       "cmAccPortQosShaperWredYellowMaxQueueThreshold": cmAccPortQosShaperWredYellowMaxQueueThreshold,
       "cmAccPortQosShaperWredYellowDropProbability": cmAccPortQosShaperWredYellowDropProbability,
       "cmAccPortQosShaperAvgFrameSizeBeforeFragment": cmAccPortQosShaperAvgFrameSizeBeforeFragment,
       "cmAccPortQosShaperWfqWeight": cmAccPortQosShaperWfqWeight,
       "cmEthernetAccPortCpdV2Table": cmEthernetAccPortCpdV2Table,
       "cmEthernetAccPortCpdV2Entry": cmEthernetAccPortCpdV2Entry,
       "cmEthernetAccPortCpdV2Index": cmEthernetAccPortCpdV2Index,
       "cmEthernetAccPortCpdV2CiscoGroupDispType": cmEthernetAccPortCpdV2CiscoGroupDispType,
       "cmEthernetAccPortCpdV2IslDispType": cmEthernetAccPortCpdV2IslDispType,
       "cmEthernetAccPortCpdV2PagpDispType": cmEthernetAccPortCpdV2PagpDispType,
       "cmEthernetAccPortCpdV2UdldDispType": cmEthernetAccPortCpdV2UdldDispType,
       "cmEthernetAccPortCpdV2CdpDispType": cmEthernetAccPortCpdV2CdpDispType,
       "cmEthernetAccPortCpdV2VtpDispType": cmEthernetAccPortCpdV2VtpDispType,
       "cmEthernetAccPortCpdV2DtpDispType": cmEthernetAccPortCpdV2DtpDispType,
       "cmEthernetAccPortCpdV2PvstpPlusDispType": cmEthernetAccPortCpdV2PvstpPlusDispType,
       "cmEthernetAccPortCpdV2UplinkFastDispType": cmEthernetAccPortCpdV2UplinkFastDispType,
       "cmEthernetAccPortCpdV2VlanBridgeDispType": cmEthernetAccPortCpdV2VlanBridgeDispType,
       "cmEthernetAccPortCpdV2L2PTDispType": cmEthernetAccPortCpdV2L2PTDispType,
       "cmEthernetAccPortCpdV2BridgeGroupDispType": cmEthernetAccPortCpdV2BridgeGroupDispType,
       "cmEthernetAccPortCpdV2BPDUDispType": cmEthernetAccPortCpdV2BPDUDispType,
       "cmEthernetAccPortCpdV2PauseDispType": cmEthernetAccPortCpdV2PauseDispType,
       "cmEthernetAccPortCpdV2LACPDispType": cmEthernetAccPortCpdV2LACPDispType,
       "cmEthernetAccPortCpdV2LACPMarkerDispType": cmEthernetAccPortCpdV2LACPMarkerDispType,
       "cmEthernetAccPortCpdV2EfmOamDispType": cmEthernetAccPortCpdV2EfmOamDispType,
       "cmEthernetAccPortCpdV2SSMDispType": cmEthernetAccPortCpdV2SSMDispType,
       "cmEthernetAccPortCpdV2PortAuthenDispType": cmEthernetAccPortCpdV2PortAuthenDispType,
       "cmEthernetAccPortCpdV2BridgeReservedDispType": cmEthernetAccPortCpdV2BridgeReservedDispType,
       "cmEthernetAccPortCpdV2LANBridgesDispType": cmEthernetAccPortCpdV2LANBridgesDispType,
       "cmEthernetAccPortCpdV2GARPGroupDispType": cmEthernetAccPortCpdV2GARPGroupDispType,
       "cmEthernetAccPortCpdV2GMRPDispType": cmEthernetAccPortCpdV2GMRPDispType,
       "cmEthernetAccPortCpdV2GVRPDispType": cmEthernetAccPortCpdV2GVRPDispType,
       "cmEthernetAccPortCpdV2GARPDispType": cmEthernetAccPortCpdV2GARPDispType,
       "cmEthernetAccPortCpdV2LLDPDispType": cmEthernetAccPortCpdV2LLDPDispType,
       "cmEthernetAccPortCpdV2ELMIDispType": cmEthernetAccPortCpdV2ELMIDispType,
       "cmEthernetAccPortCpdV2L2PTTunnelMac": cmEthernetAccPortCpdV2L2PTTunnelMac,
       "cmEthernetAccPortCpdV2Mac00DispType": cmEthernetAccPortCpdV2Mac00DispType,
       "cmEthernetAccPortCpdV2Mac01DispType": cmEthernetAccPortCpdV2Mac01DispType,
       "cmEthernetAccPortCpdV2Mac02DispType": cmEthernetAccPortCpdV2Mac02DispType,
       "cmEthernetAccPortCpdV2Mac03DispType": cmEthernetAccPortCpdV2Mac03DispType,
       "cmEthernetAccPortCpdV2Mac04DispType": cmEthernetAccPortCpdV2Mac04DispType,
       "cmEthernetAccPortCpdV2Mac05DispType": cmEthernetAccPortCpdV2Mac05DispType,
       "cmEthernetAccPortCpdV2Mac06DispType": cmEthernetAccPortCpdV2Mac06DispType,
       "cmEthernetAccPortCpdV2Mac07DispType": cmEthernetAccPortCpdV2Mac07DispType,
       "cmEthernetAccPortCpdV2Mac08DispType": cmEthernetAccPortCpdV2Mac08DispType,
       "cmEthernetAccPortCpdV2Mac09DispType": cmEthernetAccPortCpdV2Mac09DispType,
       "cmEthernetAccPortCpdV2Mac0ADispType": cmEthernetAccPortCpdV2Mac0ADispType,
       "cmEthernetAccPortCpdV2Mac0BDispType": cmEthernetAccPortCpdV2Mac0BDispType,
       "cmEthernetAccPortCpdV2Mac0CDispType": cmEthernetAccPortCpdV2Mac0CDispType,
       "cmEthernetAccPortCpdV2Mac0DDispType": cmEthernetAccPortCpdV2Mac0DDispType,
       "cmEthernetAccPortCpdV2Mac0EDispType": cmEthernetAccPortCpdV2Mac0EDispType,
       "cmEthernetAccPortCpdV2Mac0FDispType": cmEthernetAccPortCpdV2Mac0FDispType,
       "cmEthernetAccPortCpdV2NearestLLDPDispType": cmEthernetAccPortCpdV2NearestLLDPDispType,
       "cmEthernetAccPortCpdV2NonTpmrLLDPDispType": cmEthernetAccPortCpdV2NonTpmrLLDPDispType,
       "cmEthernetAccPortCpdV2CustomerLLDPDispType": cmEthernetAccPortCpdV2CustomerLLDPDispType,
       "cmEthernetAccPortCpdV2PtpUntaggedDispType": cmEthernetAccPortCpdV2PtpUntaggedDispType,
       "cmEthernetAccPortCpdV2PtpTaggedDispType": cmEthernetAccPortCpdV2PtpTaggedDispType,
       "cmFlowCpdV2Table": cmFlowCpdV2Table,
       "cmFlowCpdV2Entry": cmFlowCpdV2Entry,
       "cmFlowCpdV2Index": cmFlowCpdV2Index,
       "cmFlowCpdV2CiscoGroupDispType": cmFlowCpdV2CiscoGroupDispType,
       "cmFlowCpdV2IslDispType": cmFlowCpdV2IslDispType,
       "cmFlowCpdV2PagpDispType": cmFlowCpdV2PagpDispType,
       "cmFlowCpdV2UdldDispType": cmFlowCpdV2UdldDispType,
       "cmFlowCpdV2CdpDispType": cmFlowCpdV2CdpDispType,
       "cmFlowCpdV2VtpDispType": cmFlowCpdV2VtpDispType,
       "cmFlowCpdV2DtpDispType": cmFlowCpdV2DtpDispType,
       "cmFlowCpdV2PvstpPlusDispType": cmFlowCpdV2PvstpPlusDispType,
       "cmFlowCpdV2UplinkFastDispType": cmFlowCpdV2UplinkFastDispType,
       "cmFlowCpdV2VlanBridgeDispType": cmFlowCpdV2VlanBridgeDispType,
       "cmFlowCpdV2L2PTDispType": cmFlowCpdV2L2PTDispType,
       "cmFlowCpdV2BridgeGroupDispType": cmFlowCpdV2BridgeGroupDispType,
       "cmFlowCpdV2BPDUDispType": cmFlowCpdV2BPDUDispType,
       "cmFlowCpdV2PauseDispType": cmFlowCpdV2PauseDispType,
       "cmFlowCpdV2LACPDispType": cmFlowCpdV2LACPDispType,
       "cmFlowCpdV2LACPMarkerDispType": cmFlowCpdV2LACPMarkerDispType,
       "cmFlowCpdV2EfmOamDispType": cmFlowCpdV2EfmOamDispType,
       "cmFlowCpdV2SSMDispType": cmFlowCpdV2SSMDispType,
       "cmFlowCpdV2PortAuthenDispType": cmFlowCpdV2PortAuthenDispType,
       "cmFlowCpdV2BridgeReservedDispType": cmFlowCpdV2BridgeReservedDispType,
       "cmFlowCpdV2LANBridgesDispType": cmFlowCpdV2LANBridgesDispType,
       "cmFlowCpdV2GARPGroupDispType": cmFlowCpdV2GARPGroupDispType,
       "cmFlowCpdV2GMRPDispType": cmFlowCpdV2GMRPDispType,
       "cmFlowCpdV2GVRPDispType": cmFlowCpdV2GVRPDispType,
       "cmFlowCpdV2GARPDispType": cmFlowCpdV2GARPDispType,
       "cmFlowCpdV2ActiveControlProtocols": cmFlowCpdV2ActiveControlProtocols,
       "cmFlowCpdV2LLDPDispType": cmFlowCpdV2LLDPDispType,
       "cmFlowCpdV2ELMIDispType": cmFlowCpdV2ELMIDispType,
       "cmFlowCpdV2Mac00DispType": cmFlowCpdV2Mac00DispType,
       "cmFlowCpdV2Mac01DispType": cmFlowCpdV2Mac01DispType,
       "cmFlowCpdV2Mac02DispType": cmFlowCpdV2Mac02DispType,
       "cmFlowCpdV2Mac03DispType": cmFlowCpdV2Mac03DispType,
       "cmFlowCpdV2Mac04DispType": cmFlowCpdV2Mac04DispType,
       "cmFlowCpdV2Mac05DispType": cmFlowCpdV2Mac05DispType,
       "cmFlowCpdV2Mac06DispType": cmFlowCpdV2Mac06DispType,
       "cmFlowCpdV2Mac07DispType": cmFlowCpdV2Mac07DispType,
       "cmFlowCpdV2Mac08DispType": cmFlowCpdV2Mac08DispType,
       "cmFlowCpdV2Mac09DispType": cmFlowCpdV2Mac09DispType,
       "cmFlowCpdV2Mac0ADispType": cmFlowCpdV2Mac0ADispType,
       "cmFlowCpdV2Mac0BDispType": cmFlowCpdV2Mac0BDispType,
       "cmFlowCpdV2Mac0CDispType": cmFlowCpdV2Mac0CDispType,
       "cmFlowCpdV2Mac0DDispType": cmFlowCpdV2Mac0DDispType,
       "cmFlowCpdV2Mac0EDispType": cmFlowCpdV2Mac0EDispType,
       "cmFlowCpdV2Mac0FDispType": cmFlowCpdV2Mac0FDispType,
       "cmFlowCpdV2NearestLLDPDispType": cmFlowCpdV2NearestLLDPDispType,
       "cmFlowCpdV2NonTpmrLLDPDispType": cmFlowCpdV2NonTpmrLLDPDispType,
       "cmFlowCpdV2CustomerLLDPDispType": cmFlowCpdV2CustomerLLDPDispType,
       "cmEthernetNetPortCpdV2Table": cmEthernetNetPortCpdV2Table,
       "cmEthernetNetPortCpdV2Entry": cmEthernetNetPortCpdV2Entry,
       "cmEthernetNetPortCpdV2Index": cmEthernetNetPortCpdV2Index,
       "cmEthernetNetPortCpdV2CiscoGroupDispType": cmEthernetNetPortCpdV2CiscoGroupDispType,
       "cmEthernetNetPortCpdV2IslDispType": cmEthernetNetPortCpdV2IslDispType,
       "cmEthernetNetPortCpdV2PagpDispType": cmEthernetNetPortCpdV2PagpDispType,
       "cmEthernetNetPortCpdV2UdldDispType": cmEthernetNetPortCpdV2UdldDispType,
       "cmEthernetNetPortCpdV2CdpDispType": cmEthernetNetPortCpdV2CdpDispType,
       "cmEthernetNetPortCpdV2VtpDispType": cmEthernetNetPortCpdV2VtpDispType,
       "cmEthernetNetPortCpdV2DtpDispType": cmEthernetNetPortCpdV2DtpDispType,
       "cmEthernetNetPortCpdV2PvstpPlusDispType": cmEthernetNetPortCpdV2PvstpPlusDispType,
       "cmEthernetNetPortCpdV2UplinkFastDispType": cmEthernetNetPortCpdV2UplinkFastDispType,
       "cmEthernetNetPortCpdV2VlanBridgeDispType": cmEthernetNetPortCpdV2VlanBridgeDispType,
       "cmEthernetNetPortCpdV2L2PTDispType": cmEthernetNetPortCpdV2L2PTDispType,
       "cmEthernetNetPortCpdV2BridgeGroupDispType": cmEthernetNetPortCpdV2BridgeGroupDispType,
       "cmEthernetNetPortCpdV2BPDUDispType": cmEthernetNetPortCpdV2BPDUDispType,
       "cmEthernetNetPortCpdV2PauseDispType": cmEthernetNetPortCpdV2PauseDispType,
       "cmEthernetNetPortCpdV2LACPDispType": cmEthernetNetPortCpdV2LACPDispType,
       "cmEthernetNetPortCpdV2LACPMarkerDispType": cmEthernetNetPortCpdV2LACPMarkerDispType,
       "cmEthernetNetPortCpdV2EfmOamDispType": cmEthernetNetPortCpdV2EfmOamDispType,
       "cmEthernetNetPortCpdV2SSMDispType": cmEthernetNetPortCpdV2SSMDispType,
       "cmEthernetNetPortCpdV2PortAuthenDispType": cmEthernetNetPortCpdV2PortAuthenDispType,
       "cmEthernetNetPortCpdV2BridgeReservedDispType": cmEthernetNetPortCpdV2BridgeReservedDispType,
       "cmEthernetNetPortCpdV2LANBridgesDispType": cmEthernetNetPortCpdV2LANBridgesDispType,
       "cmEthernetNetPortCpdV2GARPGroupDispType": cmEthernetNetPortCpdV2GARPGroupDispType,
       "cmEthernetNetPortCpdV2GMRPDispType": cmEthernetNetPortCpdV2GMRPDispType,
       "cmEthernetNetPortCpdV2GVRPDispType": cmEthernetNetPortCpdV2GVRPDispType,
       "cmEthernetNetPortCpdV2GARPDispType": cmEthernetNetPortCpdV2GARPDispType,
       "cmEthernetNetPortCpdV2LLDPDispType": cmEthernetNetPortCpdV2LLDPDispType,
       "cmEthernetNetPortCpdV2ELMIDispType": cmEthernetNetPortCpdV2ELMIDispType,
       "cmEthernetNetPortCpdV2L2PTTunnelMac": cmEthernetNetPortCpdV2L2PTTunnelMac,
       "cmEthernetNetPortCpdV2Mac00DispType": cmEthernetNetPortCpdV2Mac00DispType,
       "cmEthernetNetPortCpdV2Mac01DispType": cmEthernetNetPortCpdV2Mac01DispType,
       "cmEthernetNetPortCpdV2Mac02DispType": cmEthernetNetPortCpdV2Mac02DispType,
       "cmEthernetNetPortCpdV2Mac03DispType": cmEthernetNetPortCpdV2Mac03DispType,
       "cmEthernetNetPortCpdV2Mac04DispType": cmEthernetNetPortCpdV2Mac04DispType,
       "cmEthernetNetPortCpdV2Mac05DispType": cmEthernetNetPortCpdV2Mac05DispType,
       "cmEthernetNetPortCpdV2Mac06DispType": cmEthernetNetPortCpdV2Mac06DispType,
       "cmEthernetNetPortCpdV2Mac07DispType": cmEthernetNetPortCpdV2Mac07DispType,
       "cmEthernetNetPortCpdV2Mac08DispType": cmEthernetNetPortCpdV2Mac08DispType,
       "cmEthernetNetPortCpdV2Mac09DispType": cmEthernetNetPortCpdV2Mac09DispType,
       "cmEthernetNetPortCpdV2Mac0ADispType": cmEthernetNetPortCpdV2Mac0ADispType,
       "cmEthernetNetPortCpdV2Mac0BDispType": cmEthernetNetPortCpdV2Mac0BDispType,
       "cmEthernetNetPortCpdV2Mac0CDispType": cmEthernetNetPortCpdV2Mac0CDispType,
       "cmEthernetNetPortCpdV2Mac0DDispType": cmEthernetNetPortCpdV2Mac0DDispType,
       "cmEthernetNetPortCpdV2Mac0EDispType": cmEthernetNetPortCpdV2Mac0EDispType,
       "cmEthernetNetPortCpdV2Mac0FDispType": cmEthernetNetPortCpdV2Mac0FDispType,
       "cmEthernetNetPortCpdV2NearestLLDPDispType": cmEthernetNetPortCpdV2NearestLLDPDispType,
       "cmEthernetNetPortCpdV2NonTpmrLLDPDispType": cmEthernetNetPortCpdV2NonTpmrLLDPDispType,
       "cmEthernetNetPortCpdV2CustomerLLDPDispType": cmEthernetNetPortCpdV2CustomerLLDPDispType,
       "cmEthernetNetPortCpdV2PtpUntaggedDispType": cmEthernetNetPortCpdV2PtpUntaggedDispType,
       "cmEthernetNetPortCpdV2PtpTaggedDispType": cmEthernetNetPortCpdV2PtpTaggedDispType,
       "bitsPortTable": bitsPortTable,
       "bitsPortEntry": bitsPortEntry,
       "bitsPortTypeIndex": bitsPortTypeIndex,
       "bitsPortIndex": bitsPortIndex,
       "bitsPortIfIndex": bitsPortIfIndex,
       "bitsPortEntityIndex": bitsPortEntityIndex,
       "bitsPortAdminState": bitsPortAdminState,
       "bitsPortOperationalState": bitsPortOperationalState,
       "bitsPortSecondaryState": bitsPortSecondaryState,
       "bitsPortType": bitsPortType,
       "bitsPortLineType": bitsPortLineType,
       "bitsPortLineCode": bitsPortLineCode,
       "bitsPortFrameFormat": bitsPortFrameFormat,
       "bitsPortSaBitDesignation": bitsPortSaBitDesignation,
       "bitsPortQLModeEnabled": bitsPortQLModeEnabled,
       "bitsPortExpectedQL": bitsPortExpectedQL,
       "bitsPortAssumedQL": bitsPortAssumedQL,
       "bitsPortReceivedQL": bitsPortReceivedQL,
       "bitsPortTransmitQL": bitsPortTransmitQL,
       "bitsPortSquelchQL": bitsPortSquelchQL,
       "bitsPortLineBuildOut": bitsPortLineBuildOut,
       "bitsPortImpedance": bitsPortImpedance,
       "bitsPortCrc4": bitsPortCrc4,
       "bitsPortIdleCode": bitsPortIdleCode,
       "bitsPortAis": bitsPortAis,
       "bitsPortSaBitsAdminState": bitsPortSaBitsAdminState,
       "bitsPortSquelchControl": bitsPortSquelchControl,
       "bitsPortSignalShape": bitsPortSignalShape,
       "bitsPortSignalFrequency": bitsPortSignalFrequency,
       "ieee1588EthernetPortTable": ieee1588EthernetPortTable,
       "ieee1588EthernetPortEntry": ieee1588EthernetPortEntry,
       "ieee1588EthernetPortIndex": ieee1588EthernetPortIndex,
       "ieee1588EthernetPortIfIndex": ieee1588EthernetPortIfIndex,
       "ieee1588EthernetPortEntityIndex": ieee1588EthernetPortEntityIndex,
       "ieee1588EthernetPortAdminState": ieee1588EthernetPortAdminState,
       "ieee1588EthernetPortOperationalState": ieee1588EthernetPortOperationalState,
       "ieee1588EthernetPortSecondaryState": ieee1588EthernetPortSecondaryState,
       "ieee1588EthernetPortMTU": ieee1588EthernetPortMTU,
       "ieee1588EthernetPortMediaType": ieee1588EthernetPortMediaType,
       "ieee1588EthernetPortConfigSpeed": ieee1588EthernetPortConfigSpeed,
       "ieee1588EthernetPortNegotiatedSpeed": ieee1588EthernetPortNegotiatedSpeed,
       "ieee1588EthernetPortMDIXType": ieee1588EthernetPortMDIXType,
       "gps10MHzPortTable": gps10MHzPortTable,
       "gps10MHzPortEntry": gps10MHzPortEntry,
       "gps10MHzPortIndex": gps10MHzPortIndex,
       "gps10MHzPortIfIndex": gps10MHzPortIfIndex,
       "gps10MHzPortEntityIndex": gps10MHzPortEntityIndex,
       "gps10MHzPortAdminState": gps10MHzPortAdminState,
       "gps10MHzPortOperationalState": gps10MHzPortOperationalState,
       "gps10MHzPortSecondaryState": gps10MHzPortSecondaryState,
       "gps10MHzPortSignalDirection": gps10MHzPortSignalDirection,
       "gps10MHzPortSquelchControl": gps10MHzPortSquelchControl,
       "gps10MHzPortSquelchQL": gps10MHzPortSquelchQL,
       "gps10MHzPortFrequencySource": gps10MHzPortFrequencySource,
       "gps10MHzPortClockClass": gps10MHzPortClockClass,
       "gps10MHzPortClockAccuracy": gps10MHzPortClockAccuracy,
       "gps10MHzPortTimeSource": gps10MHzPortTimeSource,
       "gps10MHzPortAssumedQL": gps10MHzPortAssumedQL,
       "gps10MHzPortAlias": gps10MHzPortAlias,
       "gps10MHzPortInputSignalType": gps10MHzPortInputSignalType,
       "cmEthernetNetPortClbTable": cmEthernetNetPortClbTable,
       "cmEthernetNetPortClbEntry": cmEthernetNetPortClbEntry,
       "cmEthernetNetPortClbIndex": cmEthernetNetPortClbIndex,
       "cmEthernetNetPortClbEnabled": cmEthernetNetPortClbEnabled,
       "cmEthernetNetPortClbLength": cmEthernetNetPortClbLength,
       "cmEthernetNetPortClbDescr": cmEthernetNetPortClbDescr,
       "cmNetPortPrioMapTable": cmNetPortPrioMapTable,
       "cmNetPortPrioMapEntry": cmNetPortPrioMapEntry,
       "cmNetPortPrioMapIndex": cmNetPortPrioMapIndex,
       "cmNetPortPrioMapInPriority": cmNetPortPrioMapInPriority,
       "cmNetPortPrioMapCOS": cmNetPortPrioMapCOS,
       "cmNetPortPrioMapOuterTagPriority": cmNetPortPrioMapOuterTagPriority,
       "cmAccPortPcpDEEncTable": cmAccPortPcpDEEncTable,
       "cmAccPortPcpDEEncEntry": cmAccPortPcpDEEncEntry,
       "cmAccPortPcpDEEncIndex": cmAccPortPcpDEEncIndex,
       "cmAccPortPcpDEEncInPriority": cmAccPortPcpDEEncInPriority,
       "cmAccPortPcpDEEncDropIneligiblePrio": cmAccPortPcpDEEncDropIneligiblePrio,
       "cmAccPortPcpDEEncDropEligiblePrio": cmAccPortPcpDEEncDropEligiblePrio,
       "cmAccPortPcpDEDecTable": cmAccPortPcpDEDecTable,
       "cmAccPortPcpDEDecEntry": cmAccPortPcpDEDecEntry,
       "cmAccPortPcpDEDecIndex": cmAccPortPcpDEDecIndex,
       "cmAccPortPcpDEDecInPriority": cmAccPortPcpDEDecInPriority,
       "cmAccPortPcpDEDecOutPriority": cmAccPortPcpDEDecOutPriority,
       "cmAccPortPcpDEDecDropEligible": cmAccPortPcpDEDecDropEligible,
       "cmAccPortPcpDEPairTable": cmAccPortPcpDEPairTable,
       "cmAccPortPcpDEPairEntry": cmAccPortPcpDEPairEntry,
       "cmAccPortPcpDEPairIndex": cmAccPortPcpDEPairIndex,
       "cmAccPortPcpDEDropIneligiblePrio": cmAccPortPcpDEDropIneligiblePrio,
       "cmAccPortPcpDEDropEligiblePrio": cmAccPortPcpDEDropEligiblePrio,
       "cmNetPortPcpDEEncTable": cmNetPortPcpDEEncTable,
       "cmNetPortPcpDEEncEntry": cmNetPortPcpDEEncEntry,
       "cmNetPortPcpDEEncIndex": cmNetPortPcpDEEncIndex,
       "cmNetPortPcpDEEncInPriority": cmNetPortPcpDEEncInPriority,
       "cmNetPortPcpDEEncDropIneligiblePrio": cmNetPortPcpDEEncDropIneligiblePrio,
       "cmNetPortPcpDEEncDropEligiblePrio": cmNetPortPcpDEEncDropEligiblePrio,
       "cmNetPortPcpDEDecTable": cmNetPortPcpDEDecTable,
       "cmNetPortPcpDEDecEntry": cmNetPortPcpDEDecEntry,
       "cmNetPortPcpDEDecIndex": cmNetPortPcpDEDecIndex,
       "cmNetPortPcpDEDecInPriority": cmNetPortPcpDEDecInPriority,
       "cmNetPortPcpDEDecOutPriority": cmNetPortPcpDEDecOutPriority,
       "cmNetPortPcpDEDecDropEligible": cmNetPortPcpDEDecDropEligible,
       "cmNetPortPcpDEPairTable": cmNetPortPcpDEPairTable,
       "cmNetPortPcpDEPairEntry": cmNetPortPcpDEPairEntry,
       "cmNetPortPcpDEPairIndex": cmNetPortPcpDEPairIndex,
       "cmNetPortPcpDEDropIneligiblePrio": cmNetPortPcpDEDropIneligiblePrio,
       "cmNetPortPcpDEDropEligiblePrio": cmNetPortPcpDEDropEligiblePrio,
       "cmEthernetTrafficPortTable": cmEthernetTrafficPortTable,
       "cmEthernetTrafficPortEntry": cmEthernetTrafficPortEntry,
       "cmEthernetTrafficPortIndex": cmEthernetTrafficPortIndex,
       "cmEthernetTrafficPortIfIndex": cmEthernetTrafficPortIfIndex,
       "cmEthernetTrafficPortEntityIndex": cmEthernetTrafficPortEntityIndex,
       "cmEthernetTrafficPortAdminState": cmEthernetTrafficPortAdminState,
       "cmEthernetTrafficPortOperationalState": cmEthernetTrafficPortOperationalState,
       "cmEthernetTrafficPortSecondaryState": cmEthernetTrafficPortSecondaryState,
       "cmEthernetTrafficPortMTU": cmEthernetTrafficPortMTU,
       "cmEthernetTrafficPortMediaType": cmEthernetTrafficPortMediaType,
       "cmEthernetTrafficPortConfigSpeed": cmEthernetTrafficPortConfigSpeed,
       "cmEthernetTrafficPortNegotiatedSpeed": cmEthernetTrafficPortNegotiatedSpeed,
       "cmEthernetTrafficPortMDIXType": cmEthernetTrafficPortMDIXType,
       "cmEthernetTrafficPortMDIXStatus": cmEthernetTrafficPortMDIXStatus,
       "cmEthernetTrafficPortSfpVendorName": cmEthernetTrafficPortSfpVendorName,
       "cmEthernetTrafficPortSfpPartNumber": cmEthernetTrafficPortSfpPartNumber,
       "cmEthernetTrafficPortSfpSerialNumber": cmEthernetTrafficPortSfpSerialNumber,
       "cmEthernetTrafficPortSfpDateOfManufacture": cmEthernetTrafficPortSfpDateOfManufacture,
       "cmEthernetTrafficPortSfpConnectorValue": cmEthernetTrafficPortSfpConnectorValue,
       "cmEthernetTrafficPortSfpLinkLength": cmEthernetTrafficPortSfpLinkLength,
       "cmEthernetTrafficPortSfpLaserWaveLength": cmEthernetTrafficPortSfpLaserWaveLength,
       "cmEthernetTrafficPortSfpMediaType": cmEthernetTrafficPortSfpMediaType,
       "cmEthernetTrafficPortLoopbackConfig": cmEthernetTrafficPortLoopbackConfig,
       "cmEthernetTrafficPortLoopbackStatus": cmEthernetTrafficPortLoopbackStatus,
       "cmEthernetTrafficPortLoopbackTime": cmEthernetTrafficPortLoopbackTime,
       "cmEthernetTrafficPortLoopbackSwapSADA": cmEthernetTrafficPortLoopbackSwapSADA,
       "cmEthernetTrafficPortOuterVlanLoopbackMask": cmEthernetTrafficPortOuterVlanLoopbackMask,
       "cmEthernetTrafficPortOuterVlanLoopback1": cmEthernetTrafficPortOuterVlanLoopback1,
       "cmEthernetTrafficPortOuterVlanLoopback2": cmEthernetTrafficPortOuterVlanLoopback2,
       "cmEthernetTrafficPortOuterVlanLoopback3": cmEthernetTrafficPortOuterVlanLoopback3,
       "cmEthernetTrafficPortLinkLossFwdEnabled": cmEthernetTrafficPortLinkLossFwdEnabled,
       "cmEthernetTrafficPortLinkLossFwdSignalType": cmEthernetTrafficPortLinkLossFwdSignalType,
       "cmEthernetTrafficPortLinkLossFwdTriggerTypes": cmEthernetTrafficPortLinkLossFwdTriggerTypes,
       "cmEthernetTrafficPortLinkLossFwdDelay": cmEthernetTrafficPortLinkLossFwdDelay,
       "cmEthernetTrafficPortLinkLossFwdActive": cmEthernetTrafficPortLinkLossFwdActive,
       "cmEthernetTrafficPortLinkLossFwdPartnerEnabled": cmEthernetTrafficPortLinkLossFwdPartnerEnabled,
       "cmEthernetTrafficPortLinkLossFwdLocalLinkId": cmEthernetTrafficPortLinkLossFwdLocalLinkId,
       "cmEthernetTrafficPortLinkLossFwdRemoteLinkIds": cmEthernetTrafficPortLinkLossFwdRemoteLinkIds,
       "cmEthernetTrafficPortLinkLossFwdTxActionType": cmEthernetTrafficPortLinkLossFwdTxActionType,
       "cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds": cmEthernetTrafficPortLinkLossFwdRxRLDLinkIds,
       "cmEthernetTrafficPortOamId": cmEthernetTrafficPortOamId,
       "cmEthernetTrafficPortOamDiscoveryState": cmEthernetTrafficPortOamDiscoveryState,
       "cmEthernetTrafficPortOamLocalVarRtrvsEnabled": cmEthernetTrafficPortOamLocalVarRtrvsEnabled,
       "cmEthernetTrafficPortOamLocalLinkEventsEnabled": cmEthernetTrafficPortOamLocalLinkEventsEnabled,
       "cmEthernetTrafficPortOamLocalOamLoopbacksSupported": cmEthernetTrafficPortOamLocalOamLoopbacksSupported,
       "cmEthernetTrafficPortOamLocalUnidirSupportEnabled": cmEthernetTrafficPortOamLocalUnidirSupportEnabled,
       "cmEthernetTrafficPortOamLocalMaxPDUSize": cmEthernetTrafficPortOamLocalMaxPDUSize,
       "cmEthernetTrafficPortOamLocalMode": cmEthernetTrafficPortOamLocalMode,
       "cmEthernetTrafficPortOamRemoteMacAddress": cmEthernetTrafficPortOamRemoteMacAddress,
       "cmEthernetTrafficPortOamRemoteVarRtrvsEnabled": cmEthernetTrafficPortOamRemoteVarRtrvsEnabled,
       "cmEthernetTrafficPortOamRemoteLinkEventsEnabled": cmEthernetTrafficPortOamRemoteLinkEventsEnabled,
       "cmEthernetTrafficPortOamRemoteOamLoopbacksSupported": cmEthernetTrafficPortOamRemoteOamLoopbacksSupported,
       "cmEthernetTrafficPortOamRemoteUnidirSupportEnabled": cmEthernetTrafficPortOamRemoteUnidirSupportEnabled,
       "cmEthernetTrafficPortOamRemoteMaxPDUSize": cmEthernetTrafficPortOamRemoteMaxPDUSize,
       "cmEthernetTrafficPortOamRemoteMode": cmEthernetTrafficPortOamRemoteMode,
       "cmEthernetTrafficPortOamEnabled": cmEthernetTrafficPortOamEnabled,
       "cmEthernetTrafficPortOamAdminState": cmEthernetTrafficPortOamAdminState,
       "cmEthernetTrafficPortSvcType": cmEthernetTrafficPortSvcType,
       "cmEthernetTrafficPortRxPauseEnabled": cmEthernetTrafficPortRxPauseEnabled,
       "cmEthernetTrafficPortTxPauseEnabled": cmEthernetTrafficPortTxPauseEnabled,
       "cmEthernetTrafficPortAfpType": cmEthernetTrafficPortAfpType,
       "cmEthernetTrafficPortShapingEnabled": cmEthernetTrafficPortShapingEnabled,
       "cmEthernetTrafficPortShapedSpeedLo": cmEthernetTrafficPortShapedSpeedLo,
       "cmEthernetTrafficPortShapedSpeedHi": cmEthernetTrafficPortShapedSpeedHi,
       "cmEthernetTrafficPortQinQEtherType": cmEthernetTrafficPortQinQEtherType,
       "cmEthernetTrafficPortTagFrameControl": cmEthernetTrafficPortTagFrameControl,
       "cmEthernetTrafficPortEgressVlanTrunkingEnabled": cmEthernetTrafficPortEgressVlanTrunkingEnabled,
       "cmEthernetTrafficPortIngressPushPVIDEnabled": cmEthernetTrafficPortIngressPushPVIDEnabled,
       "cmEthernetTrafficPortEgressPopPVIDEnabled": cmEthernetTrafficPortEgressPopPVIDEnabled,
       "cmEthernetTrafficPortEgressPopPriorityVidEnabled": cmEthernetTrafficPortEgressPopPriorityVidEnabled,
       "cmEthernetTrafficPortPortVlanId": cmEthernetTrafficPortPortVlanId,
       "cmEthernetTrafficPortPortVlanPriority": cmEthernetTrafficPortPortVlanPriority,
       "cmEthernetTrafficPortPriorityVlanId": cmEthernetTrafficPortPriorityVlanId,
       "cmEthernetTrafficPortIngressPrioMapMode": cmEthernetTrafficPortIngressPrioMapMode,
       "cmEthernetTrafficPortIngressCOSPriority": cmEthernetTrafficPortIngressCOSPriority,
       "cmEthernetTrafficPortSyncEEnabled": cmEthernetTrafficPortSyncEEnabled,
       "cmEthernetTrafficPortQLModeEnabled": cmEthernetTrafficPortQLModeEnabled,
       "cmEthernetTrafficPortExpectedQL": cmEthernetTrafficPortExpectedQL,
       "cmEthernetTrafficPortAssumedQL": cmEthernetTrafficPortAssumedQL,
       "cmEthernetTrafficPortReceivedQL": cmEthernetTrafficPortReceivedQL,
       "cmEthernetTrafficPortTransmitQL": cmEthernetTrafficPortTransmitQL,
       "cmEthernetTrafficPortPhyType": cmEthernetTrafficPortPhyType,
       "cmEthernetTrafficPortSfpLaserWaveLengthPicometer": cmEthernetTrafficPortSfpLaserWaveLengthPicometer,
       "cmEthernetTrafficPortRowStatus": cmEthernetTrafficPortRowStatus,
       "cmEthernetTrafficPortSSMRemoteMacAddress": cmEthernetTrafficPortSSMRemoteMacAddress,
       "cmEthernetTrafficPortInnerVlanLoopbackMask": cmEthernetTrafficPortInnerVlanLoopbackMask,
       "cmEthernetTrafficPortInnerVlanLoopback1": cmEthernetTrafficPortInnerVlanLoopback1,
       "cmEthernetTrafficPortInnerVlanLoopback2": cmEthernetTrafficPortInnerVlanLoopback2,
       "cmEthernetTrafficPortInnerVlanLoopback3": cmEthernetTrafficPortInnerVlanLoopback3,
       "cmEthernetTrafficPortLaserWDMChannel": cmEthernetTrafficPortLaserWDMChannel,
       "cmEthernetTrafficPortLaserIsTunable": cmEthernetTrafficPortLaserIsTunable,
       "cmEthernetTrafficPortLaserFrequency": cmEthernetTrafficPortLaserFrequency,
       "cmEthernetTrafficPortDeiEnable": cmEthernetTrafficPortDeiEnable,
       "cmEthernetTrafficPortPcpDEEncType": cmEthernetTrafficPortPcpDEEncType,
       "cmEthernetTrafficPortPcpDEPairsAction": cmEthernetTrafficPortPcpDEPairsAction,
       "cmEthernetTrafficPortInitiateDiag": cmEthernetTrafficPortInitiateDiag,
       "cmEthernetTrafficPortDiagnosePair1Cond": cmEthernetTrafficPortDiagnosePair1Cond,
       "cmEthernetTrafficPortDiagnosePair2Cond": cmEthernetTrafficPortDiagnosePair2Cond,
       "cmEthernetTrafficPortDiagnosePair3Cond": cmEthernetTrafficPortDiagnosePair3Cond,
       "cmEthernetTrafficPortDiagnosePair4Cond": cmEthernetTrafficPortDiagnosePair4Cond,
       "cmEthernetTrafficPortDiagnoseAutoNegCond": cmEthernetTrafficPortDiagnoseAutoNegCond,
       "cmEthernetTrafficPortDiagnoseLpbkCond": cmEthernetTrafficPortDiagnoseLpbkCond,
       "cmEthernetTrafficPortDiagnoseEfmLpbkCond": cmEthernetTrafficPortDiagnoseEfmLpbkCond,
       "cmEthernetTrafficPortDiagnoseResult": cmEthernetTrafficPortDiagnoseResult,
       "cmEthernetTrafficPortDiagnoseTestStatus": cmEthernetTrafficPortDiagnoseTestStatus,
       "cmEthernetTrafficPortDiagnoseTestTime": cmEthernetTrafficPortDiagnoseTestTime,
       "cmEthernetTrafficPortAutoDiagEnabled": cmEthernetTrafficPortAutoDiagEnabled,
       "cmEthernetTrafficPortDeleteEntitiesAction": cmEthernetTrafficPortDeleteEntitiesAction,
       "cmEthernetTrafficPortMaxMpFpNum": cmEthernetTrafficPortMaxMpFpNum,
       "cmEthernetTrafficPortJdsuLoopbackEnabled": cmEthernetTrafficPortJdsuLoopbackEnabled,
       "cmEthernetTrafficPortJdsuLoopbackVlanId": cmEthernetTrafficPortJdsuLoopbackVlanId,
       "cmEthernetTrafficPortIngressPopPriorityVidEnabled": cmEthernetTrafficPortIngressPopPriorityVidEnabled,
       "cmEthernetTrafficPortRxDeiAction": cmEthernetTrafficPortRxDeiAction,
       "cmEthernetTrafficPortTxDeiAction": cmEthernetTrafficPortTxDeiAction,
       "cmEthernetTrafficPortRxDeiOuterTagType": cmEthernetTrafficPortRxDeiOuterTagType,
       "cmEthernetTrafficPortTxDeiOuterTagType": cmEthernetTrafficPortTxDeiOuterTagType,
       "cmEthernetTrafficPortMode": cmEthernetTrafficPortMode,
       "cmEthernetTrafficPortServiceType": cmEthernetTrafficPortServiceType,
       "cmEthernetTrafficPortLoopbackSourceMacControlEnabled": cmEthernetTrafficPortLoopbackSourceMacControlEnabled,
       "cmEthernetTrafficPortLoopbackDestMacControlEnabled": cmEthernetTrafficPortLoopbackDestMacControlEnabled,
       "cmEthernetTrafficPortLoopbackSourceMacAddress": cmEthernetTrafficPortLoopbackSourceMacAddress,
       "cmEthernetTrafficPortLoopbackDestMacAddress": cmEthernetTrafficPortLoopbackDestMacAddress,
       "cmEthernetTrafficPortLoopbackBlockingEnabled": cmEthernetTrafficPortLoopbackBlockingEnabled,
       "cmEthernetTrafficPortMediaTypeAutoSelected": cmEthernetTrafficPortMediaTypeAutoSelected,
       "cmEthernetTrafficPortLowLatencyQueuingEnabled": cmEthernetTrafficPortLowLatencyQueuingEnabled,
       "cmEthernetTrafficPortDiagnosticMacAddress": cmEthernetTrafficPortDiagnosticMacAddress,
       "cmEthernetTrafficPortIngressSwapPriorityVIDEnabled": cmEthernetTrafficPortIngressSwapPriorityVIDEnabled,
       "cmEthernetTrafficPortEgressSwapPriorityVIDEnabled": cmEthernetTrafficPortEgressSwapPriorityVIDEnabled,
       "cmEthernetTrafficPortSwapPriorityVID": cmEthernetTrafficPortSwapPriorityVID,
       "cmEthernetTrafficPortExpDEEncType": cmEthernetTrafficPortExpDEEncType,
       "cmEthernetTrafficPortExpDEPairsAction": cmEthernetTrafficPortExpDEPairsAction,
       "cmEthernetTrafficPortJdsuLoopbackSrcIp": cmEthernetTrafficPortJdsuLoopbackSrcIp,
       "cmEthernetTrafficPortTxSsm": cmEthernetTrafficPortTxSsm,
       "cmEthernetTrafficPortRxSsmQL": cmEthernetTrafficPortRxSsmQL,
       "cmEthernetTrafficPortSyncEMode": cmEthernetTrafficPortSyncEMode,
       "cmEthernetTrafficPortSyncEServiceAvailableTime": cmEthernetTrafficPortSyncEServiceAvailableTime,
       "cmEthernetTrafficPortSyncEServiceUnavailableTime": cmEthernetTrafficPortSyncEServiceUnavailableTime,
       "cmEthernetTrafficPortSyncEServiceAvailablePercentage": cmEthernetTrafficPortSyncEServiceAvailablePercentage,
       "cmEthernetTrafficPortWfqSegmentationCOS": cmEthernetTrafficPortWfqSegmentationCOS,
       "cmEthernetTrafficPortWfqGroupCOS": cmEthernetTrafficPortWfqGroupCOS,
       "cmEthernetTrafficPortWfqGroupEirLo": cmEthernetTrafficPortWfqGroupEirLo,
       "cmEthernetTrafficPortWfqGroupEirHi": cmEthernetTrafficPortWfqGroupEirHi,
       "cmEthernetTrafficPortOuterTagTpidOverride": cmEthernetTrafficPortOuterTagTpidOverride,
       "cmEthernetTrafficPortOuterTagTpid": cmEthernetTrafficPortOuterTagTpid,
       "cmEthernetTrafficPortSfpTxPowerLevel": cmEthernetTrafficPortSfpTxPowerLevel,
       "cmEthernetTrafficPortSfpRxPowerLevel": cmEthernetTrafficPortSfpRxPowerLevel,
       "cmEthernetTrafficPortBwResourcePort": cmEthernetTrafficPortBwResourcePort,
       "cmEthernetTrafficPortSfpName": cmEthernetTrafficPortSfpName,
       "cmEthernetTrafficPortSfpHardwareRevision": cmEthernetTrafficPortSfpHardwareRevision,
       "cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl": cmEthernetTrafficPortLoopbackTestReflectorIPv4AddressControl,
       "cmEthernetTrafficPortLoopbackTestReflectorIPv4Address": cmEthernetTrafficPortLoopbackTestReflectorIPv4Address,
       "cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl": cmEthernetTrafficPortLoopbackTestReflectorIPv6AddressControl,
       "cmEthernetTrafficPortLoopbackTestReflectorIPv6Address": cmEthernetTrafficPortLoopbackTestReflectorIPv6Address,
       "cmEthernetTrafficPortSfpIdentifierValue": cmEthernetTrafficPortSfpIdentifierValue,
       "cmEthernetTrafficPortPlugType": cmEthernetTrafficPortPlugType,
       "cmEthernetTrafficPortPlugMode": cmEthernetTrafficPortPlugMode,
       "cmEthernetTrafficPortPlugGMetroAutoTuningMode": cmEthernetTrafficPortPlugGMetroAutoTuningMode,
       "cmEthernetTrafficPortPlugChannelType": cmEthernetTrafficPortPlugChannelType,
       "cmEthernetTrafficPortPlugITUCbandChannel": cmEthernetTrafficPortPlugITUCbandChannel,
       "cmEthernetTrafficPortPlugRelativeChannel": cmEthernetTrafficPortPlugRelativeChannel,
       "cmEthernetTrafficPortPlugFrequency": cmEthernetTrafficPortPlugFrequency,
       "cmEthernetTrafficPortPlugOutOfBandChannelStatus": cmEthernetTrafficPortPlugOutOfBandChannelStatus,
       "cmEthernetTrafficPortRemotePlugITUCbandChannel": cmEthernetTrafficPortRemotePlugITUCbandChannel,
       "cmEthernetTrafficPortRemotePlugRelativeChannel": cmEthernetTrafficPortRemotePlugRelativeChannel,
       "cmEthernetTrafficPortRemotePlugFrequency": cmEthernetTrafficPortRemotePlugFrequency,
       "cmEthernetTrafficPortRemoteSfpVendorName": cmEthernetTrafficPortRemoteSfpVendorName,
       "cmEthernetTrafficPortRemoteSfpName": cmEthernetTrafficPortRemoteSfpName,
       "cmEthernetTrafficPortRemoteSfpPartNumber": cmEthernetTrafficPortRemoteSfpPartNumber,
       "cmEthernetTrafficPortRemoteSfpHardwareRevision": cmEthernetTrafficPortRemoteSfpHardwareRevision,
       "cmEthernetTrafficPortRemoteSfpSerialNumber": cmEthernetTrafficPortRemoteSfpSerialNumber,
       "cmEthernetTrafficPortRemoteSfpDateOfManufacture": cmEthernetTrafficPortRemoteSfpDateOfManufacture,
       "cmEthernetTrafficPortRemoteSfpLinkLength": cmEthernetTrafficPortRemoteSfpLinkLength,
       "cmEthernetTrafficPortRemoteSfpLaserWaveLength": cmEthernetTrafficPortRemoteSfpLaserWaveLength,
       "cmEthernetTrafficPortRemoteSfpLaserFrequency": cmEthernetTrafficPortRemoteSfpLaserFrequency,
       "cmEthernetTrafficPortRemoteSfpMediaType": cmEthernetTrafficPortRemoteSfpMediaType,
       "cmEthernetTrafficPortRemoteSfpConnectorValue": cmEthernetTrafficPortRemoteSfpConnectorValue,
       "cmEthernetTrafficPortRemoteSfpIdentifierValue": cmEthernetTrafficPortRemoteSfpIdentifierValue,
       "cmElineFlowTable": cmElineFlowTable,
       "cmElineFlowEntry": cmElineFlowEntry,
       "cmElineFlowIndex": cmElineFlowIndex,
       "cmElineFlowCircuitName": cmElineFlowCircuitName,
       "cmElineFlowAdminState": cmElineFlowAdminState,
       "cmElineFlowOperationalState": cmElineFlowOperationalState,
       "cmElineFlowSecondaryState": cmElineFlowSecondaryState,
       "cmElineFlowFP1": cmElineFlowFP1,
       "cmElineFlowFP2": cmElineFlowFP2,
       "cmElineFlowStorageType": cmElineFlowStorageType,
       "cmElineFlowRowStatus": cmElineFlowRowStatus,
       "cmFlowPointTable": cmFlowPointTable,
       "cmFlowPointEntry": cmFlowPointEntry,
       "cmFlowPointIndex": cmFlowPointIndex,
       "cmFlowPointCircuitName": cmFlowPointCircuitName,
       "cmFlowPointAdminState": cmFlowPointAdminState,
       "cmFlowPointOperationalState": cmFlowPointOperationalState,
       "cmFlowPointSecondaryState": cmFlowPointSecondaryState,
       "cmFlowPointAssociatedFlowId": cmFlowPointAssociatedFlowId,
       "cmFlowPointIngressMultiCOS": cmFlowPointIngressMultiCOS,
       "cmFlowPointIngressCOS": cmFlowPointIngressCOS,
       "cmFlowPointIngressVlanMemberList": cmFlowPointIngressVlanMemberList,
       "cmFlowPointVlanMemberAction": cmFlowPointVlanMemberAction,
       "cmFlowPointVlanMemberActionVlan": cmFlowPointVlanMemberActionVlan,
       "cmFlowPointIngressUntaggedFrameEnabled": cmFlowPointIngressUntaggedFrameEnabled,
       "cmFlowPointCTagControl": cmFlowPointCTagControl,
       "cmFlowPointCTagVlanId": cmFlowPointCTagVlanId,
       "cmFlowPointCTagVlanPriority": cmFlowPointCTagVlanPriority,
       "cmFlowPointSTagControl": cmFlowPointSTagControl,
       "cmFlowPointSTagVlanId": cmFlowPointSTagVlanId,
       "cmFlowPointSTagVlanPriority": cmFlowPointSTagVlanPriority,
       "cmFlowPointEgressOuterTagPrioMapEnabled": cmFlowPointEgressOuterTagPrioMapEnabled,
       "cmFlowPointColorMarkingSupported": cmFlowPointColorMarkingSupported,
       "cmFlowPointAssociatedAclProfile": cmFlowPointAssociatedAclProfile,
       "cmFlowPointSESFramesLossThresholdRatio": cmFlowPointSESFramesLossThresholdRatio,
       "cmFlowPointStorageType": cmFlowPointStorageType,
       "cmFlowPointRowStatus": cmFlowPointRowStatus,
       "cmFlowPointDefaultMemberEnabled": cmFlowPointDefaultMemberEnabled,
       "cmFlowPointMcastRateLimitEnabled": cmFlowPointMcastRateLimitEnabled,
       "cmFlowPointMcastRateLimitSpeedLo": cmFlowPointMcastRateLimitSpeedLo,
       "cmFlowPointMcastRateLimitSpeedHi": cmFlowPointMcastRateLimitSpeedHi,
       "cmFlowPointBcastRateLimitEnabled": cmFlowPointBcastRateLimitEnabled,
       "cmFlowPointBcastRateLimitSpeedLo": cmFlowPointBcastRateLimitSpeedLo,
       "cmFlowPointBcastRateLimitSpeedHi": cmFlowPointBcastRateLimitSpeedHi,
       "cmFlowPointSplitHorizonGroupOID": cmFlowPointSplitHorizonGroupOID,
       "cmFlowPointLoopAvoidance": cmFlowPointLoopAvoidance,
       "cmFlowPointHierarchicalCosEnabled": cmFlowPointHierarchicalCosEnabled,
       "cmFlowPointWfqQid": cmFlowPointWfqQid,
       "cmFlowPointWfqOutPriority": cmFlowPointWfqOutPriority,
       "cmFlowPointMaximumBWLo": cmFlowPointMaximumBWLo,
       "cmFlowPointMaximumBWHi": cmFlowPointMaximumBWHi,
       "cmFlowPointGuaranteedBWLo": cmFlowPointGuaranteedBWLo,
       "cmFlowPointGuaranteedBWHi": cmFlowPointGuaranteedBWHi,
       "cmFlowPointRefPrioMapProfile": cmFlowPointRefPrioMapProfile,
       "cmFlowPointMcastAndBcastRateLimitEnabled": cmFlowPointMcastAndBcastRateLimitEnabled,
       "cmFlowPointMcastAndBcastRateLimitSpeedLo": cmFlowPointMcastAndBcastRateLimitSpeedLo,
       "cmFlowPointMcastAndBcastRateLimitSpeedHi": cmFlowPointMcastAndBcastRateLimitSpeedHi,
       "cmFlowPointEgressShapingType": cmFlowPointEgressShapingType,
       "cmFlowPointEgressInnerTagPrioMapEnabled": cmFlowPointEgressInnerTagPrioMapEnabled,
       "cmFlowPointAutoBandwidthConfigEnabled": cmFlowPointAutoBandwidthConfigEnabled,
       "cmFlowPointAutoCIRPercentage": cmFlowPointAutoCIRPercentage,
       "cmFlowPointFrameFwdEnabled": cmFlowPointFrameFwdEnabled,
       "cmFlowPointUsePortPrioMapProfile": cmFlowPointUsePortPrioMapProfile,
       "cmFlowPointRefEoMplsPwObject": cmFlowPointRefEoMplsPwObject,
       "cmFlowPointElmiEvcIdentifier": cmFlowPointElmiEvcIdentifier,
       "cmFlowPointRefElpObject": cmFlowPointRefElpObject,
       "cmFlowPointEfEnabled": cmFlowPointEfEnabled,
       "cmFlowPointEfIdentificationType": cmFlowPointEfIdentificationType,
       "cmFlowPointEfRateThresholdLo": cmFlowPointEfRateThresholdLo,
       "cmFlowPointEfRateThresholdHi": cmFlowPointEfRateThresholdHi,
       "cmFlowPointAclNoMatchDisposition": cmFlowPointAclNoMatchDisposition,
       "cmFlowPointEfIdentificationFields": cmFlowPointEfIdentificationFields,
       "cmFlowPointWfqSegmentationCOS": cmFlowPointWfqSegmentationCOS,
       "cmFlowPointWfqGroupCOS": cmFlowPointWfqGroupCOS,
       "cmFlowPointWfqGroupEirLo": cmFlowPointWfqGroupEirLo,
       "cmFlowPointWfqGroupEirHi": cmFlowPointWfqGroupEirHi,
       "cmOAMFlowPointTable": cmOAMFlowPointTable,
       "cmOAMFlowPointEntry": cmOAMFlowPointEntry,
       "cmOAMFlowPointIndex": cmOAMFlowPointIndex,
       "cmOAMFlowPointCircuitName": cmOAMFlowPointCircuitName,
       "cmOAMFlowPointAdminState": cmOAMFlowPointAdminState,
       "cmOAMFlowPointOperationalState": cmOAMFlowPointOperationalState,
       "cmOAMFlowPointSecondaryState": cmOAMFlowPointSecondaryState,
       "cmOAMFlowPointIngressVlanMemberList": cmOAMFlowPointIngressVlanMemberList,
       "cmOAMFlowPointVlanMemberAction": cmOAMFlowPointVlanMemberAction,
       "cmOAMFlowPointVlanMemberActionVlan": cmOAMFlowPointVlanMemberActionVlan,
       "cmOAMFlowPointIngressUntaggedFrameSupported": cmOAMFlowPointIngressUntaggedFrameSupported,
       "cmOAMFlowPointSESFramesLossThresholdRatio": cmOAMFlowPointSESFramesLossThresholdRatio,
       "cmOAMFlowPointStorageType": cmOAMFlowPointStorageType,
       "cmOAMFlowPointRowStatus": cmOAMFlowPointRowStatus,
       "cmIngressPrioMapTable": cmIngressPrioMapTable,
       "cmIngressPrioMapEntry": cmIngressPrioMapEntry,
       "cmIngressPrioMapIndex": cmIngressPrioMapIndex,
       "cmIngressPrioMapInPriority": cmIngressPrioMapInPriority,
       "cmIngressPrioMapCOS": cmIngressPrioMapCOS,
       "cmEgressPrioMapTable": cmEgressPrioMapTable,
       "cmEgressPrioMapEntry": cmEgressPrioMapEntry,
       "cmEgressCOSIndex": cmEgressCOSIndex,
       "cmEgressCOS": cmEgressCOS,
       "cmEgressOuterTagCtrl": cmEgressOuterTagCtrl,
       "cmEgressOuterTagPriority": cmEgressOuterTagPriority,
       "cmPortCpdProfileTable": cmPortCpdProfileTable,
       "cmPortCpdProfileEntry": cmPortCpdProfileEntry,
       "cmPortCpdProfileIndex": cmPortCpdProfileIndex,
       "cmPortCpdProfileName": cmPortCpdProfileName,
       "cmPortCpdProfileCiscoGroupDispType": cmPortCpdProfileCiscoGroupDispType,
       "cmPortCpdProfileIslDispType": cmPortCpdProfileIslDispType,
       "cmPortCpdProfilePagpDispType": cmPortCpdProfilePagpDispType,
       "cmPortCpdProfileUdldDispType": cmPortCpdProfileUdldDispType,
       "cmPortCpdProfileCdpDispType": cmPortCpdProfileCdpDispType,
       "cmPortCpdProfileVtpDispType": cmPortCpdProfileVtpDispType,
       "cmPortCpdProfileDtpDispType": cmPortCpdProfileDtpDispType,
       "cmPortCpdProfilePvstpPlusDispType": cmPortCpdProfilePvstpPlusDispType,
       "cmPortCpdProfileUplinkFastDispType": cmPortCpdProfileUplinkFastDispType,
       "cmPortCpdProfileVlanBridgeDispType": cmPortCpdProfileVlanBridgeDispType,
       "cmPortCpdProfileL2PTDispType": cmPortCpdProfileL2PTDispType,
       "cmPortCpdProfileBridgeGroupDispType": cmPortCpdProfileBridgeGroupDispType,
       "cmPortCpdProfileBPDUDispType": cmPortCpdProfileBPDUDispType,
       "cmPortCpdProfilePauseDispType": cmPortCpdProfilePauseDispType,
       "cmPortCpdProfileLACPDispType": cmPortCpdProfileLACPDispType,
       "cmPortCpdProfileLACPMarkerDispType": cmPortCpdProfileLACPMarkerDispType,
       "cmPortCpdProfileEfmOamDispType": cmPortCpdProfileEfmOamDispType,
       "cmPortCpdProfileSSMDispType": cmPortCpdProfileSSMDispType,
       "cmPortCpdProfilePortAuthenDispType": cmPortCpdProfilePortAuthenDispType,
       "cmPortCpdProfileBridgeReservedDispType": cmPortCpdProfileBridgeReservedDispType,
       "cmPortCpdProfileLANBridgesDispType": cmPortCpdProfileLANBridgesDispType,
       "cmPortCpdProfileGARPGroupDispType": cmPortCpdProfileGARPGroupDispType,
       "cmPortCpdProfileGMRPDispType": cmPortCpdProfileGMRPDispType,
       "cmPortCpdProfileGVRPDispType": cmPortCpdProfileGVRPDispType,
       "cmPortCpdProfileGARPDispType": cmPortCpdProfileGARPDispType,
       "cmPortCpdProfileLldpDispType": cmPortCpdProfileLldpDispType,
       "cmPortCpdProfileStorageType": cmPortCpdProfileStorageType,
       "cmPortCpdProfileRowStatus": cmPortCpdProfileRowStatus,
       "cmPortCpdProfileMac00DispType": cmPortCpdProfileMac00DispType,
       "cmPortCpdProfileMac01DispType": cmPortCpdProfileMac01DispType,
       "cmPortCpdProfileMac02DispType": cmPortCpdProfileMac02DispType,
       "cmPortCpdProfileMac03DispType": cmPortCpdProfileMac03DispType,
       "cmPortCpdProfileMac04DispType": cmPortCpdProfileMac04DispType,
       "cmPortCpdProfileMac05DispType": cmPortCpdProfileMac05DispType,
       "cmPortCpdProfileMac06DispType": cmPortCpdProfileMac06DispType,
       "cmPortCpdProfileMac07DispType": cmPortCpdProfileMac07DispType,
       "cmPortCpdProfileMac08DispType": cmPortCpdProfileMac08DispType,
       "cmPortCpdProfileMac09DispType": cmPortCpdProfileMac09DispType,
       "cmPortCpdProfileMac0ADispType": cmPortCpdProfileMac0ADispType,
       "cmPortCpdProfileMac0BDispType": cmPortCpdProfileMac0BDispType,
       "cmPortCpdProfileMac0CDispType": cmPortCpdProfileMac0CDispType,
       "cmPortCpdProfileMac0DDispType": cmPortCpdProfileMac0DDispType,
       "cmPortCpdProfileMac0EDispType": cmPortCpdProfileMac0EDispType,
       "cmPortCpdProfileMac0FDispType": cmPortCpdProfileMac0FDispType,
       "cmPortCpdProfileNearestLLDPDispType": cmPortCpdProfileNearestLLDPDispType,
       "cmPortCpdProfileNonTpmrLLDPDispType": cmPortCpdProfileNonTpmrLLDPDispType,
       "cmPortCpdProfileCustomerLLDPDispType": cmPortCpdProfileCustomerLLDPDispType,
       "cmPortCpdProfileELMIDispType": cmPortCpdProfileELMIDispType,
       "cmFlowPointCpdProfileTable": cmFlowPointCpdProfileTable,
       "cmFlowPointCpdProfileEntry": cmFlowPointCpdProfileEntry,
       "cmFlowPointCpdProfileIndex": cmFlowPointCpdProfileIndex,
       "cmFlowPointCpdProfileName": cmFlowPointCpdProfileName,
       "cmFlowPointCpdProfileCiscoGroupDispType": cmFlowPointCpdProfileCiscoGroupDispType,
       "cmFlowPointCpdProfileIslDispType": cmFlowPointCpdProfileIslDispType,
       "cmFlowPointCpdProfilePagpDispType": cmFlowPointCpdProfilePagpDispType,
       "cmFlowPointCpdProfileUdldDispType": cmFlowPointCpdProfileUdldDispType,
       "cmFlowPointCpdProfileCdpDispType": cmFlowPointCpdProfileCdpDispType,
       "cmFlowPointCpdProfileVtpDispType": cmFlowPointCpdProfileVtpDispType,
       "cmFlowPointCpdProfileDtpDispType": cmFlowPointCpdProfileDtpDispType,
       "cmFlowPointCpdProfilePvstpPlusDispType": cmFlowPointCpdProfilePvstpPlusDispType,
       "cmFlowPointCpdProfileUplinkFastDispType": cmFlowPointCpdProfileUplinkFastDispType,
       "cmFlowPointCpdProfileVlanBridgeDispType": cmFlowPointCpdProfileVlanBridgeDispType,
       "cmFlowPointCpdProfileL2PTDispType": cmFlowPointCpdProfileL2PTDispType,
       "cmFlowPointCpdProfileBridgeGroupDispType": cmFlowPointCpdProfileBridgeGroupDispType,
       "cmFlowPointCpdProfileBPDUDispType": cmFlowPointCpdProfileBPDUDispType,
       "cmFlowPointCpdProfilePauseDispType": cmFlowPointCpdProfilePauseDispType,
       "cmFlowPointCpdProfileLACPDispType": cmFlowPointCpdProfileLACPDispType,
       "cmFlowPointCpdProfileLACPMarkerDispType": cmFlowPointCpdProfileLACPMarkerDispType,
       "cmFlowPointCpdProfileEfmOamDispType": cmFlowPointCpdProfileEfmOamDispType,
       "cmFlowPointCpdProfileSSMDispType": cmFlowPointCpdProfileSSMDispType,
       "cmFlowPointCpdProfilePortAuthenDispType": cmFlowPointCpdProfilePortAuthenDispType,
       "cmFlowPointCpdProfileBridgeReservedDispType": cmFlowPointCpdProfileBridgeReservedDispType,
       "cmFlowPointCpdProfileLANBridgesDispType": cmFlowPointCpdProfileLANBridgesDispType,
       "cmFlowPointCpdProfileGARPGroupDispType": cmFlowPointCpdProfileGARPGroupDispType,
       "cmFlowPointCpdProfileGMRPDispType": cmFlowPointCpdProfileGMRPDispType,
       "cmFlowPointCpdProfileGVRPDispType": cmFlowPointCpdProfileGVRPDispType,
       "cmFlowPointCpdProfileGARPDispType": cmFlowPointCpdProfileGARPDispType,
       "cmFlowPointCpdProfileLldpDispType": cmFlowPointCpdProfileLldpDispType,
       "cmFlowPointCpdProfileStorageType": cmFlowPointCpdProfileStorageType,
       "cmFlowPointCpdProfileRowStatus": cmFlowPointCpdProfileRowStatus,
       "cmFlowPointCpdProfileMac00DispType": cmFlowPointCpdProfileMac00DispType,
       "cmFlowPointCpdProfileMac01DispType": cmFlowPointCpdProfileMac01DispType,
       "cmFlowPointCpdProfileMac02DispType": cmFlowPointCpdProfileMac02DispType,
       "cmFlowPointCpdProfileMac03DispType": cmFlowPointCpdProfileMac03DispType,
       "cmFlowPointCpdProfileMac04DispType": cmFlowPointCpdProfileMac04DispType,
       "cmFlowPointCpdProfileMac05DispType": cmFlowPointCpdProfileMac05DispType,
       "cmFlowPointCpdProfileMac06DispType": cmFlowPointCpdProfileMac06DispType,
       "cmFlowPointCpdProfileMac07DispType": cmFlowPointCpdProfileMac07DispType,
       "cmFlowPointCpdProfileMac08DispType": cmFlowPointCpdProfileMac08DispType,
       "cmFlowPointCpdProfileMac09DispType": cmFlowPointCpdProfileMac09DispType,
       "cmFlowPointCpdProfileMac0ADispType": cmFlowPointCpdProfileMac0ADispType,
       "cmFlowPointCpdProfileMac0BDispType": cmFlowPointCpdProfileMac0BDispType,
       "cmFlowPointCpdProfileMac0CDispType": cmFlowPointCpdProfileMac0CDispType,
       "cmFlowPointCpdProfileMac0DDispType": cmFlowPointCpdProfileMac0DDispType,
       "cmFlowPointCpdProfileMac0EDispType": cmFlowPointCpdProfileMac0EDispType,
       "cmFlowPointCpdProfileMac0FDispType": cmFlowPointCpdProfileMac0FDispType,
       "cmFlowPointCpdProfileNearestLLDPDispType": cmFlowPointCpdProfileNearestLLDPDispType,
       "cmFlowPointCpdProfileNonTpmrLLDPDispType": cmFlowPointCpdProfileNonTpmrLLDPDispType,
       "cmFlowPointCpdProfileCustomerLLDPDispType": cmFlowPointCpdProfileCustomerLLDPDispType,
       "cmFlowPointCpdProfileELMIDispType": cmFlowPointCpdProfileELMIDispType,
       "cmEthernetTrafficPortCpdTable": cmEthernetTrafficPortCpdTable,
       "cmEthernetTrafficPortCpdEntry": cmEthernetTrafficPortCpdEntry,
       "cmEthernetTrafficPortCpdIndex": cmEthernetTrafficPortCpdIndex,
       "cmEthernetTrafficPortAssociatedCpdProfile": cmEthernetTrafficPortAssociatedCpdProfile,
       "cmEthernetFlowPointCpdTable": cmEthernetFlowPointCpdTable,
       "cmEthernetFlowPointCpdEntry": cmEthernetFlowPointCpdEntry,
       "cmEthernetFlowPointCpdIndex": cmEthernetFlowPointCpdIndex,
       "cmEthernetFlowPointAssociatedCpdProfile": cmEthernetFlowPointAssociatedCpdProfile,
       "cmTrafficAclProfileTable": cmTrafficAclProfileTable,
       "cmTrafficAclProfileEntry": cmTrafficAclProfileEntry,
       "cmTrafficAclProfileIndex": cmTrafficAclProfileIndex,
       "cmTrafficAclProfileName": cmTrafficAclProfileName,
       "cmTrafficAclProfileStorageType": cmTrafficAclProfileStorageType,
       "cmTrafficAclProfileRowStatus": cmTrafficAclProfileRowStatus,
       "cmTrafficAclRulesTable": cmTrafficAclRulesTable,
       "cmTrafficAclRulesEntry": cmTrafficAclRulesEntry,
       "cmTrafficAclRulesIndex": cmTrafficAclRulesIndex,
       "cmTrafficAclFilterAction": cmTrafficAclFilterAction,
       "cmTrafficAclFilterType": cmTrafficAclFilterType,
       "cmTrafficAclEnabled": cmTrafficAclEnabled,
       "cmTrafficAclSrcMacAddr": cmTrafficAclSrcMacAddr,
       "cmTrafficAclSrcMacAddrEnabled": cmTrafficAclSrcMacAddrEnabled,
       "cmTrafficAclDstMacAddr": cmTrafficAclDstMacAddr,
       "cmTrafficAclDstMacAddrEnabled": cmTrafficAclDstMacAddrEnabled,
       "cmTrafficAclSrcIpFilterEnabled": cmTrafficAclSrcIpFilterEnabled,
       "cmTrafficAclDstIpFilterEnabled": cmTrafficAclDstIpFilterEnabled,
       "cmTrafficAclSrcIpV4Addr": cmTrafficAclSrcIpV4Addr,
       "cmTrafficAclSrcIpV4AddrMask": cmTrafficAclSrcIpV4AddrMask,
       "cmTrafficAclDstIpV4Addr": cmTrafficAclDstIpV4Addr,
       "cmTrafficAclDstIpV4AddrMask": cmTrafficAclDstIpV4AddrMask,
       "cmTrafficAclSrcIpV6Addr": cmTrafficAclSrcIpV6Addr,
       "cmTrafficAclSrcIpV6AddrMask": cmTrafficAclSrcIpV6AddrMask,
       "cmTrafficAclDstIpV6Addr": cmTrafficAclDstIpV6Addr,
       "cmTrafficAclDstIpV6AddrMask": cmTrafficAclDstIpV6AddrMask,
       "cmTrafficAclTcpUdpSrcPortNum": cmTrafficAclTcpUdpSrcPortNum,
       "cmTrafficAclTcpUdpSrcPortMask": cmTrafficAclTcpUdpSrcPortMask,
       "cmTrafficAclTcpUdpSrcPortEnabled": cmTrafficAclTcpUdpSrcPortEnabled,
       "cmTrafficAclTcpUdpDstPortNum": cmTrafficAclTcpUdpDstPortNum,
       "cmTrafficAclTcpUdpDstPortMask": cmTrafficAclTcpUdpDstPortMask,
       "cmTrafficAclTcpUdpDstPortEnabled": cmTrafficAclTcpUdpDstPortEnabled,
       "cmTrafficAclIpQosType": cmTrafficAclIpQosType,
       "cmTrafficAclIpQosValue": cmTrafficAclIpQosValue,
       "cmTrafficAclIpQosTypeEnabled": cmTrafficAclIpQosTypeEnabled,
       "cmTrafficAclVlanId": cmTrafficAclVlanId,
       "cmTrafficAclVlanIdEnabled": cmTrafficAclVlanIdEnabled,
       "cmTrafficAclVlanPriority": cmTrafficAclVlanPriority,
       "cmTrafficAclVlanPriorityEnabled": cmTrafficAclVlanPriorityEnabled,
       "cmTrafficAclProtocolType": cmTrafficAclProtocolType,
       "cmTrafficAclProtocolTypeEnabled": cmTrafficAclProtocolTypeEnabled,
       "cmTrafficAclStorageType": cmTrafficAclStorageType,
       "cmTrafficAclRowStatus": cmTrafficAclRowStatus,
       "cmQosPolicerProfileTable": cmQosPolicerProfileTable,
       "cmQosPolicerProfileEntry": cmQosPolicerProfileEntry,
       "cmQosPolicerProfileIndex": cmQosPolicerProfileIndex,
       "cmQosPolicerProfileName": cmQosPolicerProfileName,
       "cmQosPolicerProfileCIRLo": cmQosPolicerProfileCIRLo,
       "cmQosPolicerProfileCIRHi": cmQosPolicerProfileCIRHi,
       "cmQosPolicerProfileEIRLo": cmQosPolicerProfileEIRLo,
       "cmQosPolicerProfileEIRHi": cmQosPolicerProfileEIRHi,
       "cmQosPolicerProfileCBS": cmQosPolicerProfileCBS,
       "cmQosPolicerProfileEBS": cmQosPolicerProfileEBS,
       "cmQosPolicerProfileColorMode": cmQosPolicerProfileColorMode,
       "cmQosPolicerProfileCouplingFlag": cmQosPolicerProfileCouplingFlag,
       "cmQosPolicerProfileStorageType": cmQosPolicerProfileStorageType,
       "cmQosPolicerProfileRowStatus": cmQosPolicerProfileRowStatus,
       "cmQosQueueProfileTable": cmQosQueueProfileTable,
       "cmQosQueueProfileEntry": cmQosQueueProfileEntry,
       "cmQosQueueProfileIndex": cmQosQueueProfileIndex,
       "cmQosQueueProfileName": cmQosQueueProfileName,
       "cmQosQueueProfileBufferSize": cmQosQueueProfileBufferSize,
       "cmQosQueueProfileREDEnabled": cmQosQueueProfileREDEnabled,
       "cmQosQueueProfileStorageType": cmQosQueueProfileStorageType,
       "cmQosQueueProfileRowStatus": cmQosQueueProfileRowStatus,
       "cmQosPolicerV2Table": cmQosPolicerV2Table,
       "cmQosPolicerV2Entry": cmQosPolicerV2Entry,
       "cmQosPolicerV2Index": cmQosPolicerV2Index,
       "cmQosPolicerV2AdminState": cmQosPolicerV2AdminState,
       "cmQosPolicerV2OperationalState": cmQosPolicerV2OperationalState,
       "cmQosPolicerV2SecondaryState": cmQosPolicerV2SecondaryState,
       "cmQosPolicerV2ColorMarkingEnabled": cmQosPolicerV2ColorMarkingEnabled,
       "cmQosPolicerV2AssociatedProfile": cmQosPolicerV2AssociatedProfile,
       "cmQosPolicerV2StorageType": cmQosPolicerV2StorageType,
       "cmQosPolicerV2RowStatus": cmQosPolicerV2RowStatus,
       "cmQosPolicerV2PolicingEnabled": cmQosPolicerV2PolicingEnabled,
       "cmQosShaperV2Table": cmQosShaperV2Table,
       "cmQosShaperV2Entry": cmQosShaperV2Entry,
       "cmQosShaperV2Index": cmQosShaperV2Index,
       "cmQosShaperV2AdminState": cmQosShaperV2AdminState,
       "cmQosShaperV2OperationalState": cmQosShaperV2OperationalState,
       "cmQosShaperV2SecondaryState": cmQosShaperV2SecondaryState,
       "cmQosShaperV2AssociatedQueueProfile": cmQosShaperV2AssociatedQueueProfile,
       "cmQosShaperV2CIRLo": cmQosShaperV2CIRLo,
       "cmQosShaperV2CIRHi": cmQosShaperV2CIRHi,
       "cmQosShaperV2EIRLo": cmQosShaperV2EIRLo,
       "cmQosShaperV2EIRHi": cmQosShaperV2EIRHi,
       "cmQosShaperV2IngressAverageFrameSize": cmQosShaperV2IngressAverageFrameSize,
       "cmQosShaperV2StorageType": cmQosShaperV2StorageType,
       "cmQosShaperV2RowStatus": cmQosShaperV2RowStatus,
       "cmQosShaperV2AdditionalCIRLo": cmQosShaperV2AdditionalCIRLo,
       "cmQosShaperV2AdditionalCIRHi": cmQosShaperV2AdditionalCIRHi,
       "cmQosShaperV2WFQWeight": cmQosShaperV2WFQWeight,
       "cmQosShaperV2ActualCIR": cmQosShaperV2ActualCIR,
       "cmQosShaperV2ActualEIR": cmQosShaperV2ActualEIR,
       "cmQosShaperV2LowLatencyControl": cmQosShaperV2LowLatencyControl,
       "cmTrafficPortQosShaperTable": cmTrafficPortQosShaperTable,
       "cmTrafficPortQosShaperEntry": cmTrafficPortQosShaperEntry,
       "cmTrafficPortQosShaperIndex": cmTrafficPortQosShaperIndex,
       "cmTrafficPortQosShaperAdminState": cmTrafficPortQosShaperAdminState,
       "cmTrafficPortQosShaperOperationalState": cmTrafficPortQosShaperOperationalState,
       "cmTrafficPortQosShaperSecondaryState": cmTrafficPortQosShaperSecondaryState,
       "cmTrafficPortQosShaperAssociatedQueueProfile": cmTrafficPortQosShaperAssociatedQueueProfile,
       "cmTrafficPortQosShaperBufferSize": cmTrafficPortQosShaperBufferSize,
       "cmTrafficPortQosShaperCIRLo": cmTrafficPortQosShaperCIRLo,
       "cmTrafficPortQosShaperCIRHi": cmTrafficPortQosShaperCIRHi,
       "cmTrafficPortQosShaperEIRLo": cmTrafficPortQosShaperEIRLo,
       "cmTrafficPortQosShaperEIRHi": cmTrafficPortQosShaperEIRHi,
       "cmTrafficPortQosShaperStorageType": cmTrafficPortQosShaperStorageType,
       "cmTrafficPortQosShaperRowStatus": cmTrafficPortQosShaperRowStatus,
       "cmTrafficPortQosShaperIngressAverageFrameSize": cmTrafficPortQosShaperIngressAverageFrameSize,
       "cmTrafficPortQosShaperAdditionalCIRLo": cmTrafficPortQosShaperAdditionalCIRLo,
       "cmTrafficPortQosShaperAdditionalCIRHi": cmTrafficPortQosShaperAdditionalCIRHi,
       "cmTrafficPortQosShaperWfqWeight": cmTrafficPortQosShaperWfqWeight,
       "cmTrafficAclRscAllocation": cmTrafficAclRscAllocation,
       "f3NetPortQosShaperTable": f3NetPortQosShaperTable,
       "f3NetPortQosShaperEntry": f3NetPortQosShaperEntry,
       "f3NetPortQosShaperIndex": f3NetPortQosShaperIndex,
       "f3NetPortQosShaperDirection": f3NetPortQosShaperDirection,
       "f3NetPortQosShaperAdminState": f3NetPortQosShaperAdminState,
       "f3NetPortQosShaperOperationalState": f3NetPortQosShaperOperationalState,
       "f3NetPortQosShaperSecondaryState": f3NetPortQosShaperSecondaryState,
       "f3NetPortQosShaperCIRLo": f3NetPortQosShaperCIRLo,
       "f3NetPortQosShaperCIRHi": f3NetPortQosShaperCIRHi,
       "f3NetPortQosShaperEIRLo": f3NetPortQosShaperEIRLo,
       "f3NetPortQosShaperEIRHi": f3NetPortQosShaperEIRHi,
       "f3NetPortQosShaperCBS": f3NetPortQosShaperCBS,
       "f3NetPortQosShaperEBS": f3NetPortQosShaperEBS,
       "f3NetPortQosShaperBufferSize": f3NetPortQosShaperBufferSize,
       "f3NetPortQosShaperCOS": f3NetPortQosShaperCOS,
       "f3NetPortQosShaperSoamCIRLo": f3NetPortQosShaperSoamCIRLo,
       "f3NetPortQosShaperSoamCIRHi": f3NetPortQosShaperSoamCIRHi,
       "f3NetPortQosShaperSoamEIRLo": f3NetPortQosShaperSoamEIRLo,
       "f3NetPortQosShaperSoamEIRHi": f3NetPortQosShaperSoamEIRHi,
       "f3NetPortQosShaperWredGreenMinQueueThreshold": f3NetPortQosShaperWredGreenMinQueueThreshold,
       "f3NetPortQosShaperWredGreenMaxQueueThreshold": f3NetPortQosShaperWredGreenMaxQueueThreshold,
       "f3NetPortQosShaperWredGreenDropProbability": f3NetPortQosShaperWredGreenDropProbability,
       "f3NetPortQosShaperWredYellowMinQueueThreshold": f3NetPortQosShaperWredYellowMinQueueThreshold,
       "f3NetPortQosShaperWredYellowMaxQueueThreshold": f3NetPortQosShaperWredYellowMaxQueueThreshold,
       "f3NetPortQosShaperWredYellowDropProbability": f3NetPortQosShaperWredYellowDropProbability,
       "f3NetPortQosShaperAvgFrameSizeBeforeFragment": f3NetPortQosShaperAvgFrameSizeBeforeFragment,
       "f3NetPortQosShaperWfqWeight": f3NetPortQosShaperWfqWeight,
       "f3Usb3GDCNPortTable": f3Usb3GDCNPortTable,
       "f3Usb3GDCNPortEntry": f3Usb3GDCNPortEntry,
       "f3Usb3GDCNPortIndex": f3Usb3GDCNPortIndex,
       "f3Usb3GDCNPortIfIndex": f3Usb3GDCNPortIfIndex,
       "f3Usb3GDCNPortEntityIndex": f3Usb3GDCNPortEntityIndex,
       "f3Usb3GDCNPortAdminState": f3Usb3GDCNPortAdminState,
       "f3Usb3GDCNPortOperationalState": f3Usb3GDCNPortOperationalState,
       "f3Usb3GDCNPortSecondaryState": f3Usb3GDCNPortSecondaryState,
       "f3Usb3GDCNPortVendorName": f3Usb3GDCNPortVendorName,
       "f3Usb3GDCNPortModel": f3Usb3GDCNPortModel,
       "f3Usb3GDCNPortFSN": f3Usb3GDCNPortFSN,
       "f3Usb3GDCNPortIMEI": f3Usb3GDCNPortIMEI,
       "f3Usb3GDCNPortHardwareVersion": f3Usb3GDCNPortHardwareVersion,
       "f3Usb3GDCNPortFirmwareVersion": f3Usb3GDCNPortFirmwareVersion,
       "f3Usb3GDCNPortSIMStatus": f3Usb3GDCNPortSIMStatus,
       "f3Usb3GDCNPortPINLeftChances": f3Usb3GDCNPortPINLeftChances,
       "f3Usb3GDCNPortPUKLeftChances": f3Usb3GDCNPortPUKLeftChances,
       "f3Usb3GDCNPortConnectionStatus": f3Usb3GDCNPortConnectionStatus,
       "f3Usb3GDCNPortRSSI": f3Usb3GDCNPortRSSI,
       "f3Usb3GDCNPortSpeed": f3Usb3GDCNPortSpeed,
       "f3Usb3GDCNPortMTU": f3Usb3GDCNPortMTU,
       "f3Usb3GDCNPortProviderName": f3Usb3GDCNPortProviderName,
       "f3Usb3GDCNPortDNS1": f3Usb3GDCNPortDNS1,
       "f3Usb3GDCNPortDNS2": f3Usb3GDCNPortDNS2,
       "f3Usb3GDCNPortAPN": f3Usb3GDCNPortAPN,
       "f3Usb3GDCNPortUserName": f3Usb3GDCNPortUserName,
       "f3Usb3GDCNPortPassword": f3Usb3GDCNPortPassword,
       "f3Usb3GDCNPortDailNumber": f3Usb3GDCNPortDailNumber,
       "f3Usb3GDCNPortRedialTimer": f3Usb3GDCNPortRedialTimer,
       "f3Usb3GDCNPortCurrentPinCode": f3Usb3GDCNPortCurrentPinCode,
       "f3Usb3GDCNPortNewPinCode": f3Usb3GDCNPortNewPinCode,
       "f3Usb3GDCNPortConfirmPinCode": f3Usb3GDCNPortConfirmPinCode,
       "f3Usb3GDCNPortCurrentPukCode": f3Usb3GDCNPortCurrentPukCode,
       "f3Usb3GDCNPINCodeAction": f3Usb3GDCNPINCodeAction,
       "f3Usb3GDCNPortStorageType": f3Usb3GDCNPortStorageType,
       "f3Usb3GDCNPortRowStatus": f3Usb3GDCNPortRowStatus,
       "f3Usb3GDCNPortIMSI": f3Usb3GDCNPortIMSI,
       "f3Usb3GDCNPortPINStatus": f3Usb3GDCNPortPINStatus,
       "f3UsbDCNPortMobileNetworkType": f3UsbDCNPortMobileNetworkType,
       "f3Usb3GDCNMuxOperationalMode": f3Usb3GDCNMuxOperationalMode,
       "f3Usb3GDCNPortIpAddress": f3Usb3GDCNPortIpAddress,
       "f3Usb3GDCNPortNetMask": f3Usb3GDCNPortNetMask,
       "ocnStmTable": ocnStmTable,
       "ocnStmEntry": ocnStmEntry,
       "ocnStmIndex": ocnStmIndex,
       "ocnStmIfIndex": ocnStmIfIndex,
       "ocnStmEntityIndex": ocnStmEntityIndex,
       "ocnStmAdminState": ocnStmAdminState,
       "ocnStmOperationalState": ocnStmOperationalState,
       "ocnStmSecondaryState": ocnStmSecondaryState,
       "ocnStmSfpVendorName": ocnStmSfpVendorName,
       "ocnStmSfpPartNumber": ocnStmSfpPartNumber,
       "ocnStmSfpSerialNumber": ocnStmSfpSerialNumber,
       "ocnStmSfpDateOfManufacture": ocnStmSfpDateOfManufacture,
       "ocnStmSfpConnectorValue": ocnStmSfpConnectorValue,
       "ocnStmSfpLinkLength": ocnStmSfpLinkLength,
       "ocnStmSfpLaserWaveLength": ocnStmSfpLaserWaveLength,
       "ocnStmSfpLaserWaveLengthPicometer": ocnStmSfpLaserWaveLengthPicometer,
       "ocnStmSfpMediaType": ocnStmSfpMediaType,
       "ocnStmMultiplexingStructures": ocnStmMultiplexingStructures,
       "ocnStmEoTDMMode": ocnStmEoTDMMode,
       "ocnStmLoopbackConfig": ocnStmLoopbackConfig,
       "ocnStmLoopbackStatus": ocnStmLoopbackStatus,
       "ocnStmLoopbackTime": ocnStmLoopbackTime,
       "ocnStmInsertingAIS": ocnStmInsertingAIS,
       "ocnStmBerExcThreshold": ocnStmBerExcThreshold,
       "ocnStmBerDegThreshold": ocnStmBerDegThreshold,
       "ocnStmRxTrailTrace": ocnStmRxTrailTrace,
       "ocnStmTxTrailTrace": ocnStmTxTrailTrace,
       "ocnStmExpectedTrailTrace": ocnStmExpectedTrailTrace,
       "ocnStmTrailTraceFormat": ocnStmTrailTraceFormat,
       "ocnStmQLModeEnabled": ocnStmQLModeEnabled,
       "ocnStmExpectedQL": ocnStmExpectedQL,
       "ocnStmAssumedQL": ocnStmAssumedQL,
       "ocnStmReceivedQL": ocnStmReceivedQL,
       "ocnStmTransmitQL": ocnStmTransmitQL,
       "ocnStmPortType": ocnStmPortType,
       "ocnStmFreqSourceType": ocnStmFreqSourceType,
       "ocnStmHighOrderPathType": ocnStmHighOrderPathType,
       "ocnStmSfpName": ocnStmSfpName,
       "ocnStmSfpHardwareRevision": ocnStmSfpHardwareRevision,
       "stsVcPathTable": stsVcPathTable,
       "stsVcPathEntry": stsVcPathEntry,
       "stsVcPathParentIfIndex": stsVcPathParentIfIndex,
       "stsVcPathIndex": stsVcPathIndex,
       "stsVcPathIfIndex": stsVcPathIfIndex,
       "stsVcPathAdminState": stsVcPathAdminState,
       "stsVcPathOperationalState": stsVcPathOperationalState,
       "stsVcPathSecondaryState": stsVcPathSecondaryState,
       "stsVcPathLoopbackConfig": stsVcPathLoopbackConfig,
       "stsVcPathLoopbackStatus": stsVcPathLoopbackStatus,
       "stsVcPathLoopbackTime": stsVcPathLoopbackTime,
       "stsVcPathInsertingAIS": stsVcPathInsertingAIS,
       "stsVcPathBerExcThreshold": stsVcPathBerExcThreshold,
       "stsVcPathBerDegThreshold": stsVcPathBerDegThreshold,
       "stsVcPathTrailTraceFormat": stsVcPathTrailTraceFormat,
       "stsVcPathRxTrailTrace": stsVcPathRxTrailTrace,
       "stsVcPathTxTrailTrace": stsVcPathTxTrailTrace,
       "stsVcPathExpectedTrailTrace": stsVcPathExpectedTrailTrace,
       "stsVcPathRxSignalLabel": stsVcPathRxSignalLabel,
       "stsVcPathTxSignalLabel": stsVcPathTxSignalLabel,
       "stsVcPathExpectedSignalLabel": stsVcPathExpectedSignalLabel,
       "stsVcPathRowStatus": stsVcPathRowStatus,
       "stsVcPathLowOrderPathType": stsVcPathLowOrderPathType,
       "vtVcPathTable": vtVcPathTable,
       "vtVcPathEntry": vtVcPathEntry,
       "vtVcPathParentIfIndex": vtVcPathParentIfIndex,
       "vtVcPathIndex": vtVcPathIndex,
       "vtVcPathIfIndex": vtVcPathIfIndex,
       "vtVcPathAdminState": vtVcPathAdminState,
       "vtVcPathOperationalState": vtVcPathOperationalState,
       "vtVcPathSecondaryState": vtVcPathSecondaryState,
       "vtVcPathLoopbackConfig": vtVcPathLoopbackConfig,
       "vtVcPathLoopbackStatus": vtVcPathLoopbackStatus,
       "vtVcPathLoopbackTime": vtVcPathLoopbackTime,
       "vtVcPathInsertingAIS": vtVcPathInsertingAIS,
       "vtVcPathBerExcThreshold": vtVcPathBerExcThreshold,
       "vtVcPathBerDegThreshold": vtVcPathBerDegThreshold,
       "vtVcPathTrailTraceFormat": vtVcPathTrailTraceFormat,
       "vtVcPathRxTrailTrace": vtVcPathRxTrailTrace,
       "vtVcPathTxTrailTrace": vtVcPathTxTrailTrace,
       "vtVcPathExpectedTrailTrace": vtVcPathExpectedTrailTrace,
       "vtVcPathRxSignalLabel": vtVcPathRxSignalLabel,
       "vtVcPathTxSignalLabel": vtVcPathTxSignalLabel,
       "vtVcPathExpectedSignalLabel": vtVcPathExpectedSignalLabel,
       "vtVcPathRowStatus": vtVcPathRowStatus,
       "e1t1Table": e1t1Table,
       "e1t1Entry": e1t1Entry,
       "e1t1ParentIfIndex": e1t1ParentIfIndex,
       "e1t1Index": e1t1Index,
       "e1t1IfIndex": e1t1IfIndex,
       "e1t1EntityIndex": e1t1EntityIndex,
       "e1t1AdminState": e1t1AdminState,
       "e1t1OperationalState": e1t1OperationalState,
       "e1t1SecondaryState": e1t1SecondaryState,
       "e1t1LoopbackConfig": e1t1LoopbackConfig,
       "e1t1LoopbackStatus": e1t1LoopbackStatus,
       "e1t1LoopbackTime": e1t1LoopbackTime,
       "e1t1RemoteLoopbackRequest": e1t1RemoteLoopbackRequest,
       "e1t1InsertingAIS": e1t1InsertingAIS,
       "e1t1RowStatus": e1t1RowStatus,
       "e1t1LineType": e1t1LineType,
       "e1t1LineCode": e1t1LineCode,
       "e1t1FrameFormat": e1t1FrameFormat,
       "e1t1LineBuildOut": e1t1LineBuildOut,
       "e1t1TimingDomain": e1t1TimingDomain,
       "e1t1RcvSensitivity": e1t1RcvSensitivity,
       "e1t1IdlePatternProfile": e1t1IdlePatternProfile,
       "e1t1LoopbackProfile": e1t1LoopbackProfile,
       "e1t1RelatedContainerId": e1t1RelatedContainerId,
       "e1t1PatternLpbkControl": e1t1PatternLpbkControl,
       "e3t3Table": e3t3Table,
       "e3t3Entry": e3t3Entry,
       "e3t3ParentIfIndex": e3t3ParentIfIndex,
       "e3t3Index": e3t3Index,
       "e3t3IfIndex": e3t3IfIndex,
       "e3t3EntityIndex": e3t3EntityIndex,
       "e3t3AdminState": e3t3AdminState,
       "e3t3OperationalState": e3t3OperationalState,
       "e3t3SecondaryState": e3t3SecondaryState,
       "e3t3LoopbackConfig": e3t3LoopbackConfig,
       "e3t3LoopbackStatus": e3t3LoopbackStatus,
       "e3t3LoopbackTime": e3t3LoopbackTime,
       "e3t3RemoteLoopbackRequest": e3t3RemoteLoopbackRequest,
       "e3t3InsertingAIS": e3t3InsertingAIS,
       "e3t3CBitEnable": e3t3CBitEnable,
       "e3t3T3Channelized": e3t3T3Channelized,
       "e3t3RowStatus": e3t3RowStatus,
       "e3t3FrameFormat": e3t3FrameFormat,
       "e3t3RelatedContainerId": e3t3RelatedContainerId,
       "cmEthernetTrafficPortExtTable": cmEthernetTrafficPortExtTable,
       "cmEthernetTrafficPortExtEntry": cmEthernetTrafficPortExtEntry,
       "cmEthernetTrafficPortTDMEncapsulation": cmEthernetTrafficPortTDMEncapsulation,
       "cmEthernetTrafficPortRelatedVCG": cmEthernetTrafficPortRelatedVCG,
       "cmEthernetTrafficPortMcastRateLimitEnabled": cmEthernetTrafficPortMcastRateLimitEnabled,
       "cmEthernetTrafficPortMcastRateLimitSpeedLo": cmEthernetTrafficPortMcastRateLimitSpeedLo,
       "cmEthernetTrafficPortMcastRateLimitSpeedHi": cmEthernetTrafficPortMcastRateLimitSpeedHi,
       "cmEthernetTrafficPortBcastRateLimitEnabled": cmEthernetTrafficPortBcastRateLimitEnabled,
       "cmEthernetTrafficPortBcastRateLimitSpeedLo": cmEthernetTrafficPortBcastRateLimitSpeedLo,
       "cmEthernetTrafficPortBcastRateLimitSpeedHi": cmEthernetTrafficPortBcastRateLimitSpeedHi,
       "cmEthernetTrafficPortCombinedRateLimitEnabled": cmEthernetTrafficPortCombinedRateLimitEnabled,
       "cmEthernetTrafficPortCombinedRateLimitSpeedLo": cmEthernetTrafficPortCombinedRateLimitSpeedLo,
       "cmEthernetTrafficPortCombinedRateLimitSpeedHi": cmEthernetTrafficPortCombinedRateLimitSpeedHi,
       "cmEthernetTrafficPortRefPrioMapProfile": cmEthernetTrafficPortRefPrioMapProfile,
       "f3PulsePerSecondPortTable": f3PulsePerSecondPortTable,
       "f3PulsePerSecondPortEntry": f3PulsePerSecondPortEntry,
       "f3PulsePerSecondPortIndex": f3PulsePerSecondPortIndex,
       "f3PulsePerSecondPortIfIndex": f3PulsePerSecondPortIfIndex,
       "f3PulsePerSecondPortEntityIndex": f3PulsePerSecondPortEntityIndex,
       "f3PulsePerSecondPortAdminState": f3PulsePerSecondPortAdminState,
       "f3PulsePerSecondPortOperationalState": f3PulsePerSecondPortOperationalState,
       "f3PulsePerSecondPortSecondaryState": f3PulsePerSecondPortSecondaryState,
       "f3PulsePerSecondPortSquelchControl": f3PulsePerSecondPortSquelchControl,
       "f3PulsePerSecondPortSquelchQL": f3PulsePerSecondPortSquelchQL,
       "f3PulsePerSecondPortTODSource": f3PulsePerSecondPortTODSource,
       "f3PulsePerSecondPortDirection": f3PulsePerSecondPortDirection,
       "f3PulsePerSecondPortInputRate": f3PulsePerSecondPortInputRate,
       "f3PulsePerSecondPortDelayCompensation": f3PulsePerSecondPortDelayCompensation,
       "f3PulsePerSecondPortClockClass": f3PulsePerSecondPortClockClass,
       "f3PulsePerSecondPortClockAccuracy": f3PulsePerSecondPortClockAccuracy,
       "f3PulsePerSecondPortTimeSource": f3PulsePerSecondPortTimeSource,
       "f3PulsePerSecondPortPhyInterfaceType": f3PulsePerSecondPortPhyInterfaceType,
       "f3PulsePerSecondPortOutputDelay": f3PulsePerSecondPortOutputDelay,
       "f3PulsePerSecondPortWidth": f3PulsePerSecondPortWidth,
       "f3PulsePerSecondPortPolarity": f3PulsePerSecondPortPolarity,
       "f3PulsePerSecondPortImpedance": f3PulsePerSecondPortImpedance,
       "f3PulsePerSecondPortAlias": f3PulsePerSecondPortAlias,
       "f3PulsePerSecondPortAssumedClockClass": f3PulsePerSecondPortAssumedClockClass,
       "f3TimeOfDayPortTable": f3TimeOfDayPortTable,
       "f3TimeOfDayPortEntry": f3TimeOfDayPortEntry,
       "f3TimeOfDayPortIndex": f3TimeOfDayPortIndex,
       "f3TimeOfDayPortIfIndex": f3TimeOfDayPortIfIndex,
       "f3TimeOfDayPortEntityIndex": f3TimeOfDayPortEntityIndex,
       "f3TimeOfDayPortAdminState": f3TimeOfDayPortAdminState,
       "f3TimeOfDayPortOperationalState": f3TimeOfDayPortOperationalState,
       "f3TimeOfDayPortSecondaryState": f3TimeOfDayPortSecondaryState,
       "f3TimeOfDayPortSquelchControl": f3TimeOfDayPortSquelchControl,
       "f3TimeOfDayPortSquelchQL": f3TimeOfDayPortSquelchQL,
       "f3TimeOfDayPortTODSource": f3TimeOfDayPortTODSource,
       "f3TimeOfDayPortOutputFormat": f3TimeOfDayPortOutputFormat,
       "f3TimeOfDayPortSignalDirection": f3TimeOfDayPortSignalDirection,
       "f3TimeOfDayPortInputRate": f3TimeOfDayPortInputRate,
       "f3TimeOfDayPortDelayCompensation": f3TimeOfDayPortDelayCompensation,
       "f3TimeOfDayPortAlias": f3TimeOfDayPortAlias,
       "f3TimeOfDayPortAssumedClockClass": f3TimeOfDayPortAssumedClockClass,
       "cmEthernetNetPortExtTable": cmEthernetNetPortExtTable,
       "cmEthernetNetPortExtEntry": cmEthernetNetPortExtEntry,
       "cmEthernetNetPortTDMEncapsulation": cmEthernetNetPortTDMEncapsulation,
       "cmEthernetNetPortAssociatedTdmEntity": cmEthernetNetPortAssociatedTdmEntity,
       "cmEthernetNetPortInsertingAIS": cmEthernetNetPortInsertingAIS,
       "f3GPSReceiverPortTable": f3GPSReceiverPortTable,
       "f3GPSReceiverPortEntry": f3GPSReceiverPortEntry,
       "f3GPSReceiverPortIndex": f3GPSReceiverPortIndex,
       "f3GPSReceiverPortIfIndex": f3GPSReceiverPortIfIndex,
       "f3GPSReceiverPortEntityIndex": f3GPSReceiverPortEntityIndex,
       "f3GPSReceiverPortAdminState": f3GPSReceiverPortAdminState,
       "f3GPSReceiverPortOperationalState": f3GPSReceiverPortOperationalState,
       "f3GPSReceiverPortSecondaryState": f3GPSReceiverPortSecondaryState,
       "f3GPSReceiverPortPPSGenCondition": f3GPSReceiverPortPPSGenCondition,
       "f3GPSReceiverPortAntennaCableLength": f3GPSReceiverPortAntennaCableLength,
       "f3GPSReceiverPortAntennaStatus": f3GPSReceiverPortAntennaStatus,
       "f3GPSReceiverPortSatellitesUsableFlag": f3GPSReceiverPortSatellitesUsableFlag,
       "f3GPSReceiverPortNumTrackingSatellites": f3GPSReceiverPortNumTrackingSatellites,
       "f3GPSReceiverPortSelfSurveyProgress": f3GPSReceiverPortSelfSurveyProgress,
       "f3GPSReceiverPortPPSGeneratedFlag": f3GPSReceiverPortPPSGeneratedFlag,
       "f3GPSReceiverPortGnssSystem": f3GPSReceiverPortGnssSystem,
       "f3GPSReceiverPortInstallationType": f3GPSReceiverPortInstallationType,
       "f3GPSReceiverPortGnssTOD": f3GPSReceiverPortGnssTOD,
       "f3GPSReceiverPortGnssSystemsBitMap": f3GPSReceiverPortGnssSystemsBitMap,
       "f3GPSReceiverPortAlias": f3GPSReceiverPortAlias,
       "f3GPSReceiverPortAntennaDelayValue": f3GPSReceiverPortAntennaDelayValue,
       "f3GPSReceiverPortAntennaDelayType": f3GPSReceiverPortAntennaDelayType,
       "f3GPSReceiverPortCNOMask": f3GPSReceiverPortCNOMask,
       "f3GPSReceiverPortElevationMask": f3GPSReceiverPortElevationMask,
       "f3GPSReceiverPortCoordinateLatitude": f3GPSReceiverPortCoordinateLatitude,
       "f3GPSReceiverPortCoordinateLongitude": f3GPSReceiverPortCoordinateLongitude,
       "f3GPSReceiverPortCoordinateAltitude": f3GPSReceiverPortCoordinateAltitude,
       "f3GPSReceiverPortFirmwareUpgradePercent": f3GPSReceiverPortFirmwareUpgradePercent,
       "f3GPSReceiverPortPDOPMask": f3GPSReceiverPortPDOPMask,
       "f3GPSReceiverPortSelfSurveyPeriod": f3GPSReceiverPortSelfSurveyPeriod,
       "f3GPSReceiverPortSatMin1Threshold": f3GPSReceiverPortSatMin1Threshold,
       "f3GPSReceiverPortSatMin2Threshold": f3GPSReceiverPortSatMin2Threshold,
       "f3GPSReceiverPortPDOP": f3GPSReceiverPortPDOP,
       "f3GPSReceiverPortSelfSurveyControl": f3GPSReceiverPortSelfSurveyControl,
       "f3GPSReceiverPortCoordinateStringAltitude": f3GPSReceiverPortCoordinateStringAltitude,
       "f3GPSReceiverPortLocationMode": f3GPSReceiverPortLocationMode,
       "f3GPSReceiverPortTimeAdvanceMode": f3GPSReceiverPortTimeAdvanceMode,
       "f3GPSReceiverPortTimeAdvanceValue": f3GPSReceiverPortTimeAdvanceValue,
       "f3GPSReceiverPortForcedAntennaConnected": f3GPSReceiverPortForcedAntennaConnected,
       "f3GPSReceiverPortServiceAvailableTime": f3GPSReceiverPortServiceAvailableTime,
       "f3GPSReceiverPortServiceUnavailableTime": f3GPSReceiverPortServiceUnavailableTime,
       "f3GPSReceiverPortServiceAvailablePercentage": f3GPSReceiverPortServiceAvailablePercentage,
       "f3GPSReceiverPortAGC": f3GPSReceiverPortAGC,
       "f3GPSReceiverPortSelfSurveyPositionAccuracy": f3GPSReceiverPortSelfSurveyPositionAccuracy,
       "f3GPSReceiverPortHorizontalAccuracy": f3GPSReceiverPortHorizontalAccuracy,
       "f3GPSReceiverPortVerticalAccuracy": f3GPSReceiverPortVerticalAccuracy,
       "f3GPSReceiverPortTDOP": f3GPSReceiverPortTDOP,
       "f3GPSReceiverPortHDOP": f3GPSReceiverPortHDOP,
       "f3GPSReceiverPortVDOP": f3GPSReceiverPortVDOP,
       "f3GPSReceiverPortFailureSuspendTime": f3GPSReceiverPortFailureSuspendTime,
       "f3GPSReceiverPortSpoofingPpsThreshold": f3GPSReceiverPortSpoofingPpsThreshold,
       "f3GPSReceiverPortSpoofingPpsDifference": f3GPSReceiverPortSpoofingPpsDifference,
       "f3GPSReceiverPortSpoofingLocationThreshold": f3GPSReceiverPortSpoofingLocationThreshold,
       "f3GPSReceiverPortSpoofingLocationDifference": f3GPSReceiverPortSpoofingLocationDifference,
       "f3GPSReceiverPortGnssDynamicModel": f3GPSReceiverPortGnssDynamicModel,
       "cmPethPsePortExtTable": cmPethPsePortExtTable,
       "cmPethPsePortExtEntry": cmPethPsePortExtEntry,
       "cmPethPsePortExtGroupIndex": cmPethPsePortExtGroupIndex,
       "cmPethPsePortExtIndex": cmPethPsePortExtIndex,
       "cmPethPsePortExtAssociatedPort": cmPethPsePortExtAssociatedPort,
       "pethPsePortExtPowerConsumption": pethPsePortExtPowerConsumption,
       "pethPsePortExtAvailablePowerLevel": pethPsePortExtAvailablePowerLevel,
       "pethMainPseEXTTable": pethMainPseEXTTable,
       "pethMainPseEXTEntry": pethMainPseEXTEntry,
       "pethMainPseExtGroupIndex": pethMainPseExtGroupIndex,
       "pethMainPseExtNonStandardPD": pethMainPseExtNonStandardPD,
       "cmMPFlowTable": cmMPFlowTable,
       "cmMPFlowEntry": cmMPFlowEntry,
       "cmMPFlowIndex": cmMPFlowIndex,
       "cmMPFlowCircuitName": cmMPFlowCircuitName,
       "cmMPFlowAdminState": cmMPFlowAdminState,
       "cmMPFlowOperationalState": cmMPFlowOperationalState,
       "cmMPFlowSecondaryState": cmMPFlowSecondaryState,
       "cmMPFlowLearningEnabled": cmMPFlowLearningEnabled,
       "cmMPFlowAgingTimer": cmMPFlowAgingTimer,
       "cmMPFlowFwdTableSizeProfileID": cmMPFlowFwdTableSizeProfileID,
       "cmMPFlowtableFullAction": cmMPFlowtableFullAction,
       "cmMPFlowStorageType": cmMPFlowStorageType,
       "cmMPFlowRowStatus": cmMPFlowRowStatus,
       "cmMPFlowLearningConfigAction": cmMPFlowLearningConfigAction,
       "cmMPFlowFPList": cmMPFlowFPList,
       "cmMPFlowMemberTable": cmMPFlowMemberTable,
       "cmMPFlowMemberEntry": cmMPFlowMemberEntry,
       "cmMPFlowMemberFPIndex": cmMPFlowMemberFPIndex,
       "cmMPFlowPointRowStatus": cmMPFlowPointRowStatus,
       "cmEthernetTrafficPortPcpDEEncTable": cmEthernetTrafficPortPcpDEEncTable,
       "cmEthernetTrafficPortPcpDEEncEntry": cmEthernetTrafficPortPcpDEEncEntry,
       "cmEthernetTrafficPortPcpDEEncIndex": cmEthernetTrafficPortPcpDEEncIndex,
       "cmEthernetTrafficPortPcpDEEncInPriority": cmEthernetTrafficPortPcpDEEncInPriority,
       "cmEthernetTrafficPortPcpDEEncDropIneligiblePrio": cmEthernetTrafficPortPcpDEEncDropIneligiblePrio,
       "cmEthernetTrafficPortPcpDEEncDropEligiblePrio": cmEthernetTrafficPortPcpDEEncDropEligiblePrio,
       "cmEthernetTrafficPortPcpDEDecTable": cmEthernetTrafficPortPcpDEDecTable,
       "cmEthernetTrafficPortPcpDEDecEntry": cmEthernetTrafficPortPcpDEDecEntry,
       "cmEthernetTrafficPortPcpDEDecIndex": cmEthernetTrafficPortPcpDEDecIndex,
       "cmEthernetTrafficPortPcpDEDecInPriority": cmEthernetTrafficPortPcpDEDecInPriority,
       "cmEthernetTrafficPortPcpDEDecOutPriority": cmEthernetTrafficPortPcpDEDecOutPriority,
       "cmEthernetTrafficPortPcpDEDecDropEligible": cmEthernetTrafficPortPcpDEDecDropEligible,
       "cmEthernetTrafficPortPcpDEPairTable": cmEthernetTrafficPortPcpDEPairTable,
       "cmEthernetTrafficPortPcpDEPairEntry": cmEthernetTrafficPortPcpDEPairEntry,
       "cmEthernetTrafficPortPcpDEPairIndex": cmEthernetTrafficPortPcpDEPairIndex,
       "cmEthernetTrafficPortPcpDEDropIneligiblePrio": cmEthernetTrafficPortPcpDEDropIneligiblePrio,
       "cmEthernetTrafficPortPcpDEDropEligiblePrio": cmEthernetTrafficPortPcpDEDropEligiblePrio,
       "cmEthernetTrafficPortClbTable": cmEthernetTrafficPortClbTable,
       "cmEthernetTrafficPortClbEntry": cmEthernetTrafficPortClbEntry,
       "cmEthernetTrafficPortClbIndex": cmEthernetTrafficPortClbIndex,
       "cmEthernetTrafficPortClbEnabled": cmEthernetTrafficPortClbEnabled,
       "cmEthernetTrafficPortClbLength": cmEthernetTrafficPortClbLength,
       "cmEthernetTrafficPortClbDescr": cmEthernetTrafficPortClbDescr,
       "networkElementTMParamsTable": networkElementTMParamsTable,
       "networkElementTMParamsEntry": networkElementTMParamsEntry,
       "neTMParamsBandwidthProfileMode": neTMParamsBandwidthProfileMode,
       "neTMParamsAgingtime": neTMParamsAgingtime,
       "cmEthernetAccPortJdsuExtTable": cmEthernetAccPortJdsuExtTable,
       "cmEthernetAccPortJdsuExtEntry": cmEthernetAccPortJdsuExtEntry,
       "cmEthernetAccPortJDSUControlFramesSnoopingEnabled": cmEthernetAccPortJDSUControlFramesSnoopingEnabled,
       "cmEthernetAccPortJDSULoopbackVlan": cmEthernetAccPortJDSULoopbackVlan,
       "cmEthernetAccPortJDSULoopbackVlanList": cmEthernetAccPortJDSULoopbackVlanList,
       "cmEthernetNetPortJdsuExtTable": cmEthernetNetPortJdsuExtTable,
       "cmEthernetNetPortJdsuExtEntry": cmEthernetNetPortJdsuExtEntry,
       "cmEthernetNetPortJDSUControlFramesSnoopingEnabled": cmEthernetNetPortJDSUControlFramesSnoopingEnabled,
       "cmEthernetNetPortJDSULoopbackVlan": cmEthernetNetPortJDSULoopbackVlan,
       "cmEthernetNetPortJDSULoopbackVlanList": cmEthernetNetPortJDSULoopbackVlanList,
       "cmEthernetTrafficPortLpbkTable": cmEthernetTrafficPortLpbkTable,
       "cmEthernetTrafficPortLpbkEntry": cmEthernetTrafficPortLpbkEntry,
       "cmEthernetTrafficPortLpbkIndex": cmEthernetTrafficPortLpbkIndex,
       "cmEthernetTrafficPortLpbkInnerVlanEnabled": cmEthernetTrafficPortLpbkInnerVlanEnabled,
       "cmEthernetTrafficPortLpbkInnerVlanTag": cmEthernetTrafficPortLpbkInnerVlanTag,
       "cmEthernetTrafficPortLpbkOuterVlanEnabled": cmEthernetTrafficPortLpbkOuterVlanEnabled,
       "cmEthernetTrafficPortLpbkOuterVlanTag": cmEthernetTrafficPortLpbkOuterVlanTag,
       "cmEthernetTrafficPortLpbkTime": cmEthernetTrafficPortLpbkTime,
       "cmEthernetTrafficPortLpbkStatus": cmEthernetTrafficPortLpbkStatus,
       "cmEthernetTrafficPortLpbkConfig": cmEthernetTrafficPortLpbkConfig,
       "cmPrioMapV2ProfileTable": cmPrioMapV2ProfileTable,
       "cmPrioMapV2ProfileEntry": cmPrioMapV2ProfileEntry,
       "cmPrioMapV2ProfileIndex": cmPrioMapV2ProfileIndex,
       "cmPrioMapV2ProfileAlias": cmPrioMapV2ProfileAlias,
       "cmPrioMapV2ProfileMapModeType": cmPrioMapV2ProfileMapModeType,
       "cmPrioMapV2ProfileStorageType": cmPrioMapV2ProfileStorageType,
       "cmPrioMapV2ProfileRowStatus": cmPrioMapV2ProfileRowStatus,
       "cmPrioMapV2ProfileIngressCosPriority": cmPrioMapV2ProfileIngressCosPriority,
       "cmPrioMapV2ProfileCosMapModeType": cmPrioMapV2ProfileCosMapModeType,
       "cmPrioMapV2ProfileCosMapControl": cmPrioMapV2ProfileCosMapControl,
       "cmPrioMapV2ProfileDefaultCos": cmPrioMapV2ProfileDefaultCos,
       "cmPrioMapV2ProfileEgressCos": cmPrioMapV2ProfileEgressCos,
       "cmPrioMapV2IngressPrioMappingTable": cmPrioMapV2IngressPrioMappingTable,
       "cmPrioMapV2IngressPrioMappingEntry": cmPrioMapV2IngressPrioMappingEntry,
       "cmPrioMapV2IngressPrioMappingIndex": cmPrioMapV2IngressPrioMappingIndex,
       "cmPrioMapV2IngressPrioMappingInPriority": cmPrioMapV2IngressPrioMappingInPriority,
       "cmPrioMapV2IngressPrioMappingCOS": cmPrioMapV2IngressPrioMappingCOS,
       "cmPrioMapV2PrioMappingCOSTable": cmPrioMapV2PrioMappingCOSTable,
       "cmPrioMapV2PrioMappingCOSEntry": cmPrioMapV2PrioMappingCOSEntry,
       "cmPrioMapV2PrioMappingCOSIndex": cmPrioMapV2PrioMappingCOSIndex,
       "cmPrioMapV2PrioMappingCOSValue": cmPrioMapV2PrioMappingCOSValue,
       "cmPrioMapV2PrioMappingCOSOuterTagPri": cmPrioMapV2PrioMappingCOSOuterTagPri,
       "cmPrioMapV2PrioMappingCOSInnerTagPri": cmPrioMapV2PrioMappingCOSInnerTagPri,
       "cmPrioMapV2PrioMappingEncapOuterTagPriority": cmPrioMapV2PrioMappingEncapOuterTagPriority,
       "cmPrioMapV2PrioMappingEncapInnerTagPriority": cmPrioMapV2PrioMappingEncapInnerTagPriority,
       "cmPrioMapV2PrioMappingEncapOuterDscpValue": cmPrioMapV2PrioMappingEncapOuterDscpValue,
       "cmPrioMapV2PrioMappingDscpValue": cmPrioMapV2PrioMappingDscpValue,
       "cmPrioMapV2PrioMappingPriTable": cmPrioMapV2PrioMappingPriTable,
       "cmPrioMapV2PrioMappingPriEntry": cmPrioMapV2PrioMappingPriEntry,
       "cmPrioMapV2PrioMappingPriIndex": cmPrioMapV2PrioMappingPriIndex,
       "cmPrioMapV2PrioMappingPriInPrio": cmPrioMapV2PrioMappingPriInPrio,
       "cmPrioMapV2PrioMappingPriPrioControl": cmPrioMapV2PrioMappingPriPrioControl,
       "cmPrioMapV2PrioMappingPriXTagPrio": cmPrioMapV2PrioMappingPriXTagPrio,
       "cmPrioMapV2PrioMappingPriCOS": cmPrioMapV2PrioMappingPriCOS,
       "cmPrioMapV2ProfileAppliedObjTable": cmPrioMapV2ProfileAppliedObjTable,
       "cmPrioMapV2ProfileAppliedObjEntry": cmPrioMapV2ProfileAppliedObjEntry,
       "cmPrioMapV2ProfileAppliedObj": cmPrioMapV2ProfileAppliedObj,
       "cmAccPortExtTable": cmAccPortExtTable,
       "cmAccPortExtEntry": cmAccPortExtEntry,
       "cmAccPortExtMcastRateLimitEnabled": cmAccPortExtMcastRateLimitEnabled,
       "cmAccPortExtMcastRateLimitSpeedLo": cmAccPortExtMcastRateLimitSpeedLo,
       "cmAccPortExtMcastRateLimitSpeedHi": cmAccPortExtMcastRateLimitSpeedHi,
       "cmAccPortExtBcastRateLimitEnabled": cmAccPortExtBcastRateLimitEnabled,
       "cmAccPortExtBcastRateLimitSpeedLo": cmAccPortExtBcastRateLimitSpeedLo,
       "cmAccPortExtBcastRateLimitSpeedHi": cmAccPortExtBcastRateLimitSpeedHi,
       "cmAccPortExtCombinedRateLimitEnabled": cmAccPortExtCombinedRateLimitEnabled,
       "cmAccPortExtCombinedRateLimitSpeedLo": cmAccPortExtCombinedRateLimitSpeedLo,
       "cmAccPortExtCombinedRateLimitSpeedHi": cmAccPortExtCombinedRateLimitSpeedHi,
       "cmAccPortExtRefPrioMapProfile": cmAccPortExtRefPrioMapProfile,
       "cmNetPortExtTable": cmNetPortExtTable,
       "cmNetPortExtEntry": cmNetPortExtEntry,
       "cmNetPortExtMcastRateLimitEnabled": cmNetPortExtMcastRateLimitEnabled,
       "cmNetPortExtMcastRateLimitSpeedLo": cmNetPortExtMcastRateLimitSpeedLo,
       "cmNetPortExtMcastRateLimitSpeedHi": cmNetPortExtMcastRateLimitSpeedHi,
       "cmNetPortExtBcastRateLimitEnabled": cmNetPortExtBcastRateLimitEnabled,
       "cmNetPortExtBcastRateLimitSpeedLo": cmNetPortExtBcastRateLimitSpeedLo,
       "cmNetPortExtBcastRateLimitSpeedHi": cmNetPortExtBcastRateLimitSpeedHi,
       "cmNetPortExtCombinedRateLimitEnabled": cmNetPortExtCombinedRateLimitEnabled,
       "cmNetPortExtCombinedRateLimitSpeedLo": cmNetPortExtCombinedRateLimitSpeedLo,
       "cmNetPortExtCombinedRateLimitSpeedHi": cmNetPortExtCombinedRateLimitSpeedHi,
       "cmNetPortExtRefPrioMapProfile": cmNetPortExtRefPrioMapProfile,
       "f3UsbWIFIDonglePortTable": f3UsbWIFIDonglePortTable,
       "f3UsbWIFIDonglePortEntry": f3UsbWIFIDonglePortEntry,
       "f3UsbWIFIDonglePortIndex": f3UsbWIFIDonglePortIndex,
       "f3UsbWIFIDonglePortIfIndex": f3UsbWIFIDonglePortIfIndex,
       "f3UsbWIFIDonglePortEntityIndex": f3UsbWIFIDonglePortEntityIndex,
       "f3UsbWIFIDonglePortAdminState": f3UsbWIFIDonglePortAdminState,
       "f3UsbWIFIDonglePortOperationalState": f3UsbWIFIDonglePortOperationalState,
       "f3UsbWIFIDonglePortSecondaryState": f3UsbWIFIDonglePortSecondaryState,
       "f3UsbWIFIDonglePortSSID": f3UsbWIFIDonglePortSSID,
       "f3UsbWIFIDonglePortPassword": f3UsbWIFIDonglePortPassword,
       "f3UsbWIFIDonglePortEncryption": f3UsbWIFIDonglePortEncryption,
       "f3UsbWIFIDonglePortIPAddress": f3UsbWIFIDonglePortIPAddress,
       "f3UsbWIFIDonglePortwWIFIIPNetMask": f3UsbWIFIDonglePortwWIFIIPNetMask,
       "f3UsbWIFIDonglePortWIFIDHCPRole": f3UsbWIFIDonglePortWIFIDHCPRole,
       "f3UsbWIFIDonglePortWIFIAllocatedIPFrom": f3UsbWIFIDonglePortWIFIAllocatedIPFrom,
       "f3UsbWIFIDonglePortWIFIAllocatedIPEnd": f3UsbWIFIDonglePortWIFIAllocatedIPEnd,
       "f3UsbWIFIDonglePortStorageType": f3UsbWIFIDonglePortStorageType,
       "f3UsbWIFIDonglePortRowStatus": f3UsbWIFIDonglePortRowStatus,
       "f3UsbWIFIDonglePortAccessdUsers": f3UsbWIFIDonglePortAccessdUsers,
       "f3UsbWIFIDonglePortName": f3UsbWIFIDonglePortName,
       "bits8PortGroupTable": bits8PortGroupTable,
       "bits8PortGroupEntry": bits8PortGroupEntry,
       "bits8PortGroupIndex": bits8PortGroupIndex,
       "bits8PortGroupIfIndex": bits8PortGroupIfIndex,
       "bits8PortGroupAdminState": bits8PortGroupAdminState,
       "bits8PortGroupOperationalState": bits8PortGroupOperationalState,
       "bits8PortGroupSecondaryState": bits8PortGroupSecondaryState,
       "bits8PortGroupLineType": bits8PortGroupLineType,
       "bits8PortGroupLineCode": bits8PortGroupLineCode,
       "bits8PortGroupFrameFormat": bits8PortGroupFrameFormat,
       "bits8PortGroupSaBitDesignation": bits8PortGroupSaBitDesignation,
       "bits8PortGroupQLModeEnabled": bits8PortGroupQLModeEnabled,
       "bits8PortGroupTransmitQL": bits8PortGroupTransmitQL,
       "bits8PortGroupSquelchQL": bits8PortGroupSquelchQL,
       "bits8PortGroupLineBuildOut": bits8PortGroupLineBuildOut,
       "bits8PortGroupImpedance": bits8PortGroupImpedance,
       "bits8PortGroupRowStatus": bits8PortGroupRowStatus,
       "bits8PortGroupActivePorts": bits8PortGroupActivePorts,
       "bits8PortGroupClkIfEnabledPorts": bits8PortGroupClkIfEnabledPorts,
       "pps16PortGroupTable": pps16PortGroupTable,
       "pps16PortGroupEntry": pps16PortGroupEntry,
       "pps16PortGroupIndex": pps16PortGroupIndex,
       "pps16PortGroupIfIndex": pps16PortGroupIfIndex,
       "pps16PortGroupAdminState": pps16PortGroupAdminState,
       "pps16PortGroupOperationalState": pps16PortGroupOperationalState,
       "pps16PortGroupSecondaryState": pps16PortGroupSecondaryState,
       "pps16PortGroupAlias": pps16PortGroupAlias,
       "pps16PortGroupSquelchControl": pps16PortGroupSquelchControl,
       "pps16PortGroupTODSource": pps16PortGroupTODSource,
       "pps16PortGroupDirection": pps16PortGroupDirection,
       "pps16PortGroupDelayCompensation": pps16PortGroupDelayCompensation,
       "pps16PortGroupRowStatus": pps16PortGroupRowStatus,
       "clk16PortGroupTable": clk16PortGroupTable,
       "clk16PortGroupEntry": clk16PortGroupEntry,
       "clk16PortGroupIndex": clk16PortGroupIndex,
       "clk16PortGroupIfIndex": clk16PortGroupIfIndex,
       "clk16PortGroupAdminState": clk16PortGroupAdminState,
       "clk16PortGroupOperationalState": clk16PortGroupOperationalState,
       "clk16PortGroupSecondaryState": clk16PortGroupSecondaryState,
       "clk16PortGroupAlias": clk16PortGroupAlias,
       "clk16PortGroupDirection": clk16PortGroupDirection,
       "clk16PortGroupSquelchControl": clk16PortGroupSquelchControl,
       "clk16PortGroupSquelchQL": clk16PortGroupSquelchQL,
       "clk16PortGroupRowStatus": clk16PortGroupRowStatus,
       "todPps16PortGroupTable": todPps16PortGroupTable,
       "todPps16PortGroupEntry": todPps16PortGroupEntry,
       "todPps16PortGroupIndex": todPps16PortGroupIndex,
       "todPps16PortGroupIfIndex": todPps16PortGroupIfIndex,
       "todPps16PortGroupAdminState": todPps16PortGroupAdminState,
       "todPps16PortGroupOperationalState": todPps16PortGroupOperationalState,
       "todPps16PortGroupSecondaryState": todPps16PortGroupSecondaryState,
       "todPps16PortGroupAlias": todPps16PortGroupAlias,
       "todPps16PortGroupSquelchControl": todPps16PortGroupSquelchControl,
       "todPps16PortGroupSquelchQL": todPps16PortGroupSquelchQL,
       "todPps16PortGroupTODSource": todPps16PortGroupTODSource,
       "todPps16PortGroupOutputFormat": todPps16PortGroupOutputFormat,
       "todPps16PortGroupDelayCompensation": todPps16PortGroupDelayCompensation,
       "todPps16PortGroupRowStatus": todPps16PortGroupRowStatus,
       "f3PolicerEnvelopeTable": f3PolicerEnvelopeTable,
       "f3PolicerEnvelopeEntry": f3PolicerEnvelopeEntry,
       "f3PolicerEnvelopeIndex": f3PolicerEnvelopeIndex,
       "f3PolicerEnvelopeCouplingFlag": f3PolicerEnvelopeCouplingFlag,
       "f3PolicerEnvelopeStorageType": f3PolicerEnvelopeStorageType,
       "f3PolicerEnvelopeRowStatus": f3PolicerEnvelopeRowStatus,
       "f3EnvelopeAssocPolicerTable": f3EnvelopeAssocPolicerTable,
       "f3EnvelopeAssocPolicerEntry": f3EnvelopeAssocPolicerEntry,
       "f3EnvelopeAssocPolicer": f3EnvelopeAssocPolicer,
       "cmNetPortExpDEEncTable": cmNetPortExpDEEncTable,
       "cmNetPortExpDEEncEntry": cmNetPortExpDEEncEntry,
       "cmNetPortExpDEEncIndex": cmNetPortExpDEEncIndex,
       "cmNetPortExpDEEncInPriority": cmNetPortExpDEEncInPriority,
       "cmNetPortExpDEEncDropIneligiblePrio": cmNetPortExpDEEncDropIneligiblePrio,
       "cmNetPortExpDEEncDropEligiblePrio": cmNetPortExpDEEncDropEligiblePrio,
       "cmNetPortExpDEDecTable": cmNetPortExpDEDecTable,
       "cmNetPortExpDEDecEntry": cmNetPortExpDEDecEntry,
       "cmNetPortExpDEDecIndex": cmNetPortExpDEDecIndex,
       "cmNetPortExpDEDecInPriority": cmNetPortExpDEDecInPriority,
       "cmNetPortExpDEDecOutPriority": cmNetPortExpDEDecOutPriority,
       "cmNetPortExpDEDecDropEligible": cmNetPortExpDEDecDropEligible,
       "cmNetPortExpDEPairTable": cmNetPortExpDEPairTable,
       "cmNetPortExpDEPairEntry": cmNetPortExpDEPairEntry,
       "cmNetPortExpDEPairIndex": cmNetPortExpDEPairIndex,
       "cmNetPortExpDEDropIneligiblePrio": cmNetPortExpDEDropIneligiblePrio,
       "cmNetPortExpDEDropEligiblePrio": cmNetPortExpDEDropEligiblePrio,
       "cmNetPortIpPrecDEEncTable": cmNetPortIpPrecDEEncTable,
       "cmNetPortIpPrecDEEncEntry": cmNetPortIpPrecDEEncEntry,
       "cmNetPortIpPrecDEEncIndex": cmNetPortIpPrecDEEncIndex,
       "cmNetPortIpPrecDEEncInPriority": cmNetPortIpPrecDEEncInPriority,
       "cmNetPortIpPrecDEEncDropIneligiblePrio": cmNetPortIpPrecDEEncDropIneligiblePrio,
       "cmNetPortIpPrecDEEncDropEligiblePrio": cmNetPortIpPrecDEEncDropEligiblePrio,
       "cmNetPortIpPrecDEDecTable": cmNetPortIpPrecDEDecTable,
       "cmNetPortIpPrecDEDecEntry": cmNetPortIpPrecDEDecEntry,
       "cmNetPortIpPrecDEDecIndex": cmNetPortIpPrecDEDecIndex,
       "cmNetPortIpPrecDEDecInPriority": cmNetPortIpPrecDEDecInPriority,
       "cmNetPortIpPrecDEDecOutPriority": cmNetPortIpPrecDEDecOutPriority,
       "cmNetPortIpPrecDEDecDropEligible": cmNetPortIpPrecDEDecDropEligible,
       "cmNetPortIpPrecDEPairTable": cmNetPortIpPrecDEPairTable,
       "cmNetPortIpPrecDEPairEntry": cmNetPortIpPrecDEPairEntry,
       "cmNetPortIpPrecDEPairIndex": cmNetPortIpPrecDEPairIndex,
       "cmNetPortIpPrecDEDropIneligiblePrio": cmNetPortIpPrecDEDropIneligiblePrio,
       "cmNetPortIpPrecDEDropEligiblePrio": cmNetPortIpPrecDEDropEligiblePrio,
       "cmNetPortEncapPcpDEEncTable": cmNetPortEncapPcpDEEncTable,
       "cmNetPortEncapPcpDEEncEntry": cmNetPortEncapPcpDEEncEntry,
       "cmNetPortEncapPcpDEEncIndex": cmNetPortEncapPcpDEEncIndex,
       "cmNetPortEncapPcpDEEncInPriority": cmNetPortEncapPcpDEEncInPriority,
       "cmNetPortEncapPcpDEEncDropIneligiblePrio": cmNetPortEncapPcpDEEncDropIneligiblePrio,
       "cmNetPortEncapPcpDEEncDropEligiblePrio": cmNetPortEncapPcpDEEncDropEligiblePrio,
       "cmNetPortEncapPcpDEDecTable": cmNetPortEncapPcpDEDecTable,
       "cmNetPortEncapPcpDEDecEntry": cmNetPortEncapPcpDEDecEntry,
       "cmNetPortEncapPcpDEDecIndex": cmNetPortEncapPcpDEDecIndex,
       "cmNetPortEncapPcpDEDecInPriority": cmNetPortEncapPcpDEDecInPriority,
       "cmNetPortEncapPcpDEDecOutPriority": cmNetPortEncapPcpDEDecOutPriority,
       "cmNetPortEncapPcpDEDecDropEligible": cmNetPortEncapPcpDEDecDropEligible,
       "cmNetPortEncapPcpDEPairTable": cmNetPortEncapPcpDEPairTable,
       "cmNetPortEncapPcpDEPairEntry": cmNetPortEncapPcpDEPairEntry,
       "cmNetPortEncapPcpDEPairIndex": cmNetPortEncapPcpDEPairIndex,
       "cmNetPortEncapPcpDEDropIneligiblePrio": cmNetPortEncapPcpDEDropIneligiblePrio,
       "cmNetPortEncapPcpDEDropEligiblePrio": cmNetPortEncapPcpDEDropEligiblePrio,
       "f3SatelliteTable": f3SatelliteTable,
       "f3SatelliteEntry": f3SatelliteEntry,
       "f3SatelliteIndex": f3SatelliteIndex,
       "f3SatelliteInUse": f3SatelliteInUse,
       "f3SatelliteSV": f3SatelliteSV,
       "f3SatelliteSVType": f3SatelliteSVType,
       "f3SatelliteCNO": f3SatelliteCNO,
       "f3SatelliteHealth": f3SatelliteHealth,
       "f3SatelliteAzimuth": f3SatelliteAzimuth,
       "f3SatelliteElevation": f3SatelliteElevation,
       "f3SatelliteGnssReceiverPort": f3SatelliteGnssReceiverPort,
       "cmEthernetTrafficPortJdsuExtTable": cmEthernetTrafficPortJdsuExtTable,
       "cmEthernetTrafficPortJdsuExtEntry": cmEthernetTrafficPortJdsuExtEntry,
       "cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled": cmEthernetTrafficPortJDSUControlFramesSnoopingEnabled,
       "cmEthernetTrafficPortJDSULoopbackVlan": cmEthernetTrafficPortJDSULoopbackVlan,
       "cmEthernetTrafficPortJDSULoopbackVlanList": cmEthernetTrafficPortJDSULoopbackVlanList,
       "f3FpQosShaperTable": f3FpQosShaperTable,
       "f3FpQosShaperEntry": f3FpQosShaperEntry,
       "f3FpQosShaperIndex": f3FpQosShaperIndex,
       "f3FpQosShaperAdminState": f3FpQosShaperAdminState,
       "f3FpQosShaperOperationalState": f3FpQosShaperOperationalState,
       "f3FpQosShaperSecondaryState": f3FpQosShaperSecondaryState,
       "f3FpQosShaperCIRLo": f3FpQosShaperCIRLo,
       "f3FpQosShaperCIRHi": f3FpQosShaperCIRHi,
       "f3FpQosShaperEIRLo": f3FpQosShaperEIRLo,
       "f3FpQosShaperEIRHi": f3FpQosShaperEIRHi,
       "f3FpQosShaperCBS": f3FpQosShaperCBS,
       "f3FpQosShaperEBS": f3FpQosShaperEBS,
       "f3FpQosShaperBufferSize": f3FpQosShaperBufferSize,
       "f3FpQosShaperCOS": f3FpQosShaperCOS,
       "f3FpQosShaperStorageType": f3FpQosShaperStorageType,
       "f3FpQosShaperRowStatus": f3FpQosShaperRowStatus,
       "f3FpQosShaperWfqWeight": f3FpQosShaperWfqWeight,
       "f3FpQosPolicerTable": f3FpQosPolicerTable,
       "f3FpQosPolicerEntry": f3FpQosPolicerEntry,
       "f3FpQosPolicerIndex": f3FpQosPolicerIndex,
       "f3FpQosPolicerAdminState": f3FpQosPolicerAdminState,
       "f3FpQosPolicerOperationalState": f3FpQosPolicerOperationalState,
       "f3FpQosPolicerSecondaryState": f3FpQosPolicerSecondaryState,
       "f3FpQosPolicerCIRLo": f3FpQosPolicerCIRLo,
       "f3FpQosPolicerCIRHi": f3FpQosPolicerCIRHi,
       "f3FpQosPolicerEIRLo": f3FpQosPolicerEIRLo,
       "f3FpQosPolicerEIRHi": f3FpQosPolicerEIRHi,
       "f3FpQosPolicerCBS": f3FpQosPolicerCBS,
       "f3FpQosPolicerEBS": f3FpQosPolicerEBS,
       "f3FpQosPolicerAlgorithm": f3FpQosPolicerAlgorithm,
       "f3FpQosPolicerColorMode": f3FpQosPolicerColorMode,
       "f3FpQosPolicerCouplingFlag": f3FpQosPolicerCouplingFlag,
       "f3FpQosPolicerPolicingEnabled": f3FpQosPolicerPolicingEnabled,
       "f3FpQosPolicerStorageType": f3FpQosPolicerStorageType,
       "f3FpQosPolicerRowStatus": f3FpQosPolicerRowStatus,
       "f3FpQosPolicerCIRMaxHi": f3FpQosPolicerCIRMaxHi,
       "f3FpQosPolicerCIRMaxLo": f3FpQosPolicerCIRMaxLo,
       "f3FpQosPolicerEIRMaxHi": f3FpQosPolicerEIRMaxHi,
       "f3FpQosPolicerEIRMaxLo": f3FpQosPolicerEIRMaxLo,
       "f3FpQosPolicerEnvelopeObject": f3FpQosPolicerEnvelopeObject,
       "f3FpQosPolicerRank": f3FpQosPolicerRank,
       "cmEthernetTrafficPortCpdV2Table": cmEthernetTrafficPortCpdV2Table,
       "cmEthernetTrafficPortCpdV2Entry": cmEthernetTrafficPortCpdV2Entry,
       "cmEthernetTrafficPortCpdV2Index": cmEthernetTrafficPortCpdV2Index,
       "cmEthernetTrafficPortCpdV2CiscoGroupDispType": cmEthernetTrafficPortCpdV2CiscoGroupDispType,
       "cmEthernetTrafficPortCpdV2IslDispType": cmEthernetTrafficPortCpdV2IslDispType,
       "cmEthernetTrafficPortCpdV2PagpDispType": cmEthernetTrafficPortCpdV2PagpDispType,
       "cmEthernetTrafficPortCpdV2UdldDispType": cmEthernetTrafficPortCpdV2UdldDispType,
       "cmEthernetTrafficPortCpdV2CdpDispType": cmEthernetTrafficPortCpdV2CdpDispType,
       "cmEthernetTrafficPortCpdV2VtpDispType": cmEthernetTrafficPortCpdV2VtpDispType,
       "cmEthernetTrafficPortCpdV2DtpDispType": cmEthernetTrafficPortCpdV2DtpDispType,
       "cmEthernetTrafficPortCpdV2PvstpPlusDispType": cmEthernetTrafficPortCpdV2PvstpPlusDispType,
       "cmEthernetTrafficPortCpdV2UplinkFastDispType": cmEthernetTrafficPortCpdV2UplinkFastDispType,
       "cmEthernetTrafficPortCpdV2VlanBridgeDispType": cmEthernetTrafficPortCpdV2VlanBridgeDispType,
       "cmEthernetTrafficPortCpdV2L2PTDispType": cmEthernetTrafficPortCpdV2L2PTDispType,
       "cmEthernetTrafficPortCpdV2BridgeGroupDispType": cmEthernetTrafficPortCpdV2BridgeGroupDispType,
       "cmEthernetTrafficPortCpdV2BPDUDispType": cmEthernetTrafficPortCpdV2BPDUDispType,
       "cmEthernetTrafficPortCpdV2PauseDispType": cmEthernetTrafficPortCpdV2PauseDispType,
       "cmEthernetTrafficPortCpdV2LACPDispType": cmEthernetTrafficPortCpdV2LACPDispType,
       "cmEthernetTrafficPortCpdV2LACPMarkerDispType": cmEthernetTrafficPortCpdV2LACPMarkerDispType,
       "cmEthernetTrafficPortCpdV2EfmOamDispType": cmEthernetTrafficPortCpdV2EfmOamDispType,
       "cmEthernetTrafficPortCpdV2SSMDispType": cmEthernetTrafficPortCpdV2SSMDispType,
       "cmEthernetTrafficPortCpdV2PortAuthenDispType": cmEthernetTrafficPortCpdV2PortAuthenDispType,
       "cmEthernetTrafficPortCpdV2BridgeReservedDispType": cmEthernetTrafficPortCpdV2BridgeReservedDispType,
       "cmEthernetTrafficPortCpdV2LANBridgesDispType": cmEthernetTrafficPortCpdV2LANBridgesDispType,
       "cmEthernetTrafficPortCpdV2GARPGroupDispType": cmEthernetTrafficPortCpdV2GARPGroupDispType,
       "cmEthernetTrafficPortCpdV2GMRPDispType": cmEthernetTrafficPortCpdV2GMRPDispType,
       "cmEthernetTrafficPortCpdV2GVRPDispType": cmEthernetTrafficPortCpdV2GVRPDispType,
       "cmEthernetTrafficPortCpdV2GARPDispType": cmEthernetTrafficPortCpdV2GARPDispType,
       "cmEthernetTrafficPortCpdV2LLDPDispType": cmEthernetTrafficPortCpdV2LLDPDispType,
       "cmEthernetTrafficPortCpdV2ELMIDispType": cmEthernetTrafficPortCpdV2ELMIDispType,
       "cmEthernetTrafficPortCpdV2L2PTTunnelMac": cmEthernetTrafficPortCpdV2L2PTTunnelMac,
       "cmEthernetTrafficPortCpdV2Mac00DispType": cmEthernetTrafficPortCpdV2Mac00DispType,
       "cmEthernetTrafficPortCpdV2Mac01DispType": cmEthernetTrafficPortCpdV2Mac01DispType,
       "cmEthernetTrafficPortCpdV2Mac02DispType": cmEthernetTrafficPortCpdV2Mac02DispType,
       "cmEthernetTrafficPortCpdV2Mac03DispType": cmEthernetTrafficPortCpdV2Mac03DispType,
       "cmEthernetTrafficPortCpdV2Mac04DispType": cmEthernetTrafficPortCpdV2Mac04DispType,
       "cmEthernetTrafficPortCpdV2Mac05DispType": cmEthernetTrafficPortCpdV2Mac05DispType,
       "cmEthernetTrafficPortCpdV2Mac06DispType": cmEthernetTrafficPortCpdV2Mac06DispType,
       "cmEthernetTrafficPortCpdV2Mac07DispType": cmEthernetTrafficPortCpdV2Mac07DispType,
       "cmEthernetTrafficPortCpdV2Mac08DispType": cmEthernetTrafficPortCpdV2Mac08DispType,
       "cmEthernetTrafficPortCpdV2Mac09DispType": cmEthernetTrafficPortCpdV2Mac09DispType,
       "cmEthernetTrafficPortCpdV2Mac0ADispType": cmEthernetTrafficPortCpdV2Mac0ADispType,
       "cmEthernetTrafficPortCpdV2Mac0BDispType": cmEthernetTrafficPortCpdV2Mac0BDispType,
       "cmEthernetTrafficPortCpdV2Mac0CDispType": cmEthernetTrafficPortCpdV2Mac0CDispType,
       "cmEthernetTrafficPortCpdV2Mac0DDispType": cmEthernetTrafficPortCpdV2Mac0DDispType,
       "cmEthernetTrafficPortCpdV2Mac0EDispType": cmEthernetTrafficPortCpdV2Mac0EDispType,
       "cmEthernetTrafficPortCpdV2Mac0FDispType": cmEthernetTrafficPortCpdV2Mac0FDispType,
       "cmEthernetTrafficPortCpdV2NearestLLDPDispType": cmEthernetTrafficPortCpdV2NearestLLDPDispType,
       "cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType": cmEthernetTrafficPortCpdV2NonTpmrLLDPDispType,
       "cmEthernetTrafficPortCpdV2CustomerLLDPDispType": cmEthernetTrafficPortCpdV2CustomerLLDPDispType,
       "cmEthernetTrafficPortCpdV2PtpUntaggedDispType": cmEthernetTrafficPortCpdV2PtpUntaggedDispType,
       "cmEthernetTrafficPortCpdV2PtpTaggedDispType": cmEthernetTrafficPortCpdV2PtpTaggedDispType,
       "f3FlowPointCpdV2Table": f3FlowPointCpdV2Table,
       "f3FlowPointCpdV2Entry": f3FlowPointCpdV2Entry,
       "f3FlowPointCpdV2Index": f3FlowPointCpdV2Index,
       "f3FlowPointCpdV2IslDispType": f3FlowPointCpdV2IslDispType,
       "f3FlowPointCpdV2PagpDispType": f3FlowPointCpdV2PagpDispType,
       "f3FlowPointCpdV2UdldDispType": f3FlowPointCpdV2UdldDispType,
       "f3FlowPointCpdV2CdpDispType": f3FlowPointCpdV2CdpDispType,
       "f3FlowPointCpdV2VtpDispType": f3FlowPointCpdV2VtpDispType,
       "f3FlowPointCpdV2DtpDispType": f3FlowPointCpdV2DtpDispType,
       "f3FlowPointCpdV2PvstpPlusDispType": f3FlowPointCpdV2PvstpPlusDispType,
       "f3FlowPointCpdV2UplinkFastDispType": f3FlowPointCpdV2UplinkFastDispType,
       "f3FlowPointCpdV2VlanBridgeDispType": f3FlowPointCpdV2VlanBridgeDispType,
       "f3FlowPointCpdV2L2PTDispType": f3FlowPointCpdV2L2PTDispType,
       "f3FlowPointCpdV2BPDUDispType": f3FlowPointCpdV2BPDUDispType,
       "f3FlowPointCpdV2PauseDispType": f3FlowPointCpdV2PauseDispType,
       "f3FlowPointCpdV2LACPDispType": f3FlowPointCpdV2LACPDispType,
       "f3FlowPointCpdV2LACPMarkerDispType": f3FlowPointCpdV2LACPMarkerDispType,
       "f3FlowPointCpdV2EfmOamDispType": f3FlowPointCpdV2EfmOamDispType,
       "f3FlowPointCpdV2SSMDispType": f3FlowPointCpdV2SSMDispType,
       "f3FlowPointCpdV2PortAuthenDispType": f3FlowPointCpdV2PortAuthenDispType,
       "f3FlowPointCpdV2LANBridgesDispType": f3FlowPointCpdV2LANBridgesDispType,
       "f3FlowPointCpdV2GMRPDispType": f3FlowPointCpdV2GMRPDispType,
       "f3FlowPointCpdV2GVRPDispType": f3FlowPointCpdV2GVRPDispType,
       "f3FlowPointCpdV2GARPDispType": f3FlowPointCpdV2GARPDispType,
       "f3FlowPointCpdV2ActiveControlProtocols": f3FlowPointCpdV2ActiveControlProtocols,
       "f3FlowPointCpdV2ELMIDispType": f3FlowPointCpdV2ELMIDispType,
       "f3FlowPointCpdV2Mac00DispType": f3FlowPointCpdV2Mac00DispType,
       "f3FlowPointCpdV2Mac01DispType": f3FlowPointCpdV2Mac01DispType,
       "f3FlowPointCpdV2Mac02DispType": f3FlowPointCpdV2Mac02DispType,
       "f3FlowPointCpdV2Mac03DispType": f3FlowPointCpdV2Mac03DispType,
       "f3FlowPointCpdV2Mac04DispType": f3FlowPointCpdV2Mac04DispType,
       "f3FlowPointCpdV2Mac05DispType": f3FlowPointCpdV2Mac05DispType,
       "f3FlowPointCpdV2Mac06DispType": f3FlowPointCpdV2Mac06DispType,
       "f3FlowPointCpdV2Mac07DispType": f3FlowPointCpdV2Mac07DispType,
       "f3FlowPointCpdV2Mac08DispType": f3FlowPointCpdV2Mac08DispType,
       "f3FlowPointCpdV2Mac09DispType": f3FlowPointCpdV2Mac09DispType,
       "f3FlowPointCpdV2Mac0ADispType": f3FlowPointCpdV2Mac0ADispType,
       "f3FlowPointCpdV2Mac0BDispType": f3FlowPointCpdV2Mac0BDispType,
       "f3FlowPointCpdV2Mac0CDispType": f3FlowPointCpdV2Mac0CDispType,
       "f3FlowPointCpdV2Mac0DDispType": f3FlowPointCpdV2Mac0DDispType,
       "f3FlowPointCpdV2Mac0EDispType": f3FlowPointCpdV2Mac0EDispType,
       "f3FlowPointCpdV2Mac0FDispType": f3FlowPointCpdV2Mac0FDispType,
       "f3FlowPointCpdV2NearestLLDPDispType": f3FlowPointCpdV2NearestLLDPDispType,
       "f3FlowPointCpdV2NonTpmrLLDPDispType": f3FlowPointCpdV2NonTpmrLLDPDispType,
       "f3FlowPointCpdV2CustomerLLDPDispType": f3FlowPointCpdV2CustomerLLDPDispType,
       "f3AclRuleTable": f3AclRuleTable,
       "f3AclRuleEntry": f3AclRuleEntry,
       "f3AclRuleIndex": f3AclRuleIndex,
       "f3AclRuleAdminState": f3AclRuleAdminState,
       "f3AclRuleAlias": f3AclRuleAlias,
       "f3AclRulePriority": f3AclRulePriority,
       "f3AclRuleOperation": f3AclRuleOperation,
       "f3AclRuleCosOverrideControl": f3AclRuleCosOverrideControl,
       "f3AclRuleCOS": f3AclRuleCOS,
       "f3AclRuleSrcMacAddressControl": f3AclRuleSrcMacAddressControl,
       "f3AclRuleSrcMacAddress": f3AclRuleSrcMacAddress,
       "f3AclRuleSrcMacAddressMask": f3AclRuleSrcMacAddressMask,
       "f3AclRuleDstMacAddressControl": f3AclRuleDstMacAddressControl,
       "f3AclRuleDstMacAddress": f3AclRuleDstMacAddress,
       "f3AclRuleDstMacAddressMask": f3AclRuleDstMacAddressMask,
       "f3AclRuleOuterVlanVIDControl": f3AclRuleOuterVlanVIDControl,
       "f3AclRuleOuterVlanVIDLowLimit": f3AclRuleOuterVlanVIDLowLimit,
       "f3AclRuleOuterVlanVIDHighLimit": f3AclRuleOuterVlanVIDHighLimit,
       "f3AclRuleInnerVlanVIDControl": f3AclRuleInnerVlanVIDControl,
       "f3AclRuleInnerVlanVIDLowLimit": f3AclRuleInnerVlanVIDLowLimit,
       "f3AclRuleInnerVlanVIDHighLimit": f3AclRuleInnerVlanVIDHighLimit,
       "f3AclRuleOuterVlanPcpControl": f3AclRuleOuterVlanPcpControl,
       "f3AclRuleOuterVlanPcpLowLimit": f3AclRuleOuterVlanPcpLowLimit,
       "f3AclRuleOuterVlanPcpHighLimit": f3AclRuleOuterVlanPcpHighLimit,
       "f3AclRuleInnerVlanPcpControl": f3AclRuleInnerVlanPcpControl,
       "f3AclRuleInnerVlanPcpLowLimit": f3AclRuleInnerVlanPcpLowLimit,
       "f3AclRuleInnerVlanPcpHighLimit": f3AclRuleInnerVlanPcpHighLimit,
       "f3AclRuleOuterVlanDeiControl": f3AclRuleOuterVlanDeiControl,
       "f3AclRuleOuterVlanDei": f3AclRuleOuterVlanDei,
       "f3AclRuleEtherTypeControl": f3AclRuleEtherTypeControl,
       "f3AclRuleEtherType": f3AclRuleEtherType,
       "f3AclRuleIpv4PriorityControl": f3AclRuleIpv4PriorityControl,
       "f3AclRuleIpv4PriorityLowLimit": f3AclRuleIpv4PriorityLowLimit,
       "f3AclRuleIpv4PriorityHighLimit": f3AclRuleIpv4PriorityHighLimit,
       "f3AclRuleProtocolControl": f3AclRuleProtocolControl,
       "f3AclRuleProtocolNumber": f3AclRuleProtocolNumber,
       "f3AclRuleSrcIpv4AddressControl": f3AclRuleSrcIpv4AddressControl,
       "f3AclRuleSrcIpv4AddressLowLimit": f3AclRuleSrcIpv4AddressLowLimit,
       "f3AclRuleSrcIpv4AddressHighLimit": f3AclRuleSrcIpv4AddressHighLimit,
       "f3AclRuleDstIpv4AddressControl": f3AclRuleDstIpv4AddressControl,
       "f3AclRuleDstIpv4AddressLowLimit": f3AclRuleDstIpv4AddressLowLimit,
       "f3AclRuleDstIpv4AddressHighLimit": f3AclRuleDstIpv4AddressHighLimit,
       "f3AclRuleSrcPortControl": f3AclRuleSrcPortControl,
       "f3AclRuleSrcPortLowLimit": f3AclRuleSrcPortLowLimit,
       "f3AclRuleSrcPortHighLimit": f3AclRuleSrcPortHighLimit,
       "f3AclRuleDstPortControl": f3AclRuleDstPortControl,
       "f3AclRuleDstPortLowLimit": f3AclRuleDstPortLowLimit,
       "f3AclRuleDstPortHighLimit": f3AclRuleDstPortHighLimit,
       "f3AclRuleTcpFlagsControl": f3AclRuleTcpFlagsControl,
       "f3AclRuleTcpFlags": f3AclRuleTcpFlags,
       "f3AclRuleStorageType": f3AclRuleStorageType,
       "f3AclRuleRowStatus": f3AclRuleRowStatus,
       "f3AclRuleActive": f3AclRuleActive,
       "f3AclRuleSrcIpv6AddressControl": f3AclRuleSrcIpv6AddressControl,
       "f3AclRuleSrcIpv6Address": f3AclRuleSrcIpv6Address,
       "f3AclRuleSrcIpv6AddressPrefixLen": f3AclRuleSrcIpv6AddressPrefixLen,
       "f3AclRuleDstIpv6AddressControl": f3AclRuleDstIpv6AddressControl,
       "f3AclRuleDstIpv6Address": f3AclRuleDstIpv6Address,
       "f3AclRuleDstIpv6AddressPrefixLen": f3AclRuleDstIpv6AddressPrefixLen,
       "f3AclRuleIpV6FlowLabelControl": f3AclRuleIpV6FlowLabelControl,
       "f3AclRuleIpV6FlowLabel": f3AclRuleIpV6FlowLabel,
       "f3AclRulePriorityControl": f3AclRulePriorityControl,
       "f3AclRulePriorityLowLimit": f3AclRulePriorityLowLimit,
       "f3AclRulePriorityHighLimit": f3AclRulePriorityHighLimit,
       "f3EthernetTrafficPortExpDEEncTable": f3EthernetTrafficPortExpDEEncTable,
       "f3EthernetTrafficPortExpDEEncEntry": f3EthernetTrafficPortExpDEEncEntry,
       "f3EthernetTrafficPortExpDEEncIndex": f3EthernetTrafficPortExpDEEncIndex,
       "f3EthernetTrafficPortExpDEEncInPriority": f3EthernetTrafficPortExpDEEncInPriority,
       "f3EthernetTrafficPortExpDEEncDropIneligiblePrio": f3EthernetTrafficPortExpDEEncDropIneligiblePrio,
       "f3EthernetTrafficPortExpDEEncDropEligiblePrio": f3EthernetTrafficPortExpDEEncDropEligiblePrio,
       "f3EthernetTrafficPortExpDEDecTable": f3EthernetTrafficPortExpDEDecTable,
       "f3EthernetTrafficPortExpDEDecEntry": f3EthernetTrafficPortExpDEDecEntry,
       "f3EthernetTrafficPortExpDEDecIndex": f3EthernetTrafficPortExpDEDecIndex,
       "f3EthernetTrafficPortExpDEDecInPriority": f3EthernetTrafficPortExpDEDecInPriority,
       "f3EthernetTrafficPortExpDEDecOutPriority": f3EthernetTrafficPortExpDEDecOutPriority,
       "f3EthernetTrafficPortExpDEDecDropEligible": f3EthernetTrafficPortExpDEDecDropEligible,
       "f3EthernetTrafficPortExpDEPairTable": f3EthernetTrafficPortExpDEPairTable,
       "f3EthernetTrafficPortExpDEPairEntry": f3EthernetTrafficPortExpDEPairEntry,
       "f3EthernetTrafficPortExpDEPairIndex": f3EthernetTrafficPortExpDEPairIndex,
       "f3EthernetTrafficPortExpDEDropIneligiblePrio": f3EthernetTrafficPortExpDEDropIneligiblePrio,
       "f3EthernetTrafficPortExpDEDropEligiblePrio": f3EthernetTrafficPortExpDEDropEligiblePrio,
       "cmEthernetNetPortPppoeParamTable": cmEthernetNetPortPppoeParamTable,
       "cmEthernetNetPortPppoeParamEntry": cmEthernetNetPortPppoeParamEntry,
       "cmEthernetNetPortPppoeOuterVlanControl": cmEthernetNetPortPppoeOuterVlanControl,
       "cmEthernetNetPortPppoeOuterVlanEtherType": cmEthernetNetPortPppoeOuterVlanEtherType,
       "cmEthernetNetPortPppoeOuterVlanId": cmEthernetNetPortPppoeOuterVlanId,
       "cmEthernetNetPortPppoeOuterVlanPriority": cmEthernetNetPortPppoeOuterVlanPriority,
       "cmEthernetNetPortPppoeInnerVlanControl": cmEthernetNetPortPppoeInnerVlanControl,
       "cmEthernetNetPortPppoeInnerVlanEtherType": cmEthernetNetPortPppoeInnerVlanEtherType,
       "cmEthernetNetPortPppoeInnerVlanId": cmEthernetNetPortPppoeInnerVlanId,
       "cmEthernetNetPortPppoeInnerVlanPriority": cmEthernetNetPortPppoeInnerVlanPriority,
       "cmEthernetNetPortPppoeServiceName": cmEthernetNetPortPppoeServiceName,
       "cmEthernetNetPortPppoeLcpKeepAlivePeriod": cmEthernetNetPortPppoeLcpKeepAlivePeriod,
       "cmEthernetNetPortPppoeLcpRetryThreshold": cmEthernetNetPortPppoeLcpRetryThreshold,
       "cmEthernetNetPortPppoeRxAcName": cmEthernetNetPortPppoeRxAcName,
       "cmEthernetNetPortPppoeRxServiceName": cmEthernetNetPortPppoeRxServiceName,
       "cmEthernetNetPortPppoeSessionId": cmEthernetNetPortPppoeSessionId,
       "cmEthernetNetPortPppoeConnStatus": cmEthernetNetPortPppoeConnStatus,
       "cmEthernetNetPortXdslParamTable": cmEthernetNetPortXdslParamTable,
       "cmEthernetNetPortXdslParamEntry": cmEthernetNetPortXdslParamEntry,
       "cmEthernetNetPortXdslConnControl": cmEthernetNetPortXdslConnControl,
       "cmEthernetNetPortXdslModulationMode": cmEthernetNetPortXdslModulationMode,
       "cmEthernetNetPortXdslBitSwapEnabled": cmEthernetNetPortXdslBitSwapEnabled,
       "cmEthernetNetPortXdslGvectorEnabled": cmEthernetNetPortXdslGvectorEnabled,
       "cmEthernetNetPortXdslVdslProfile": cmEthernetNetPortXdslVdslProfile,
       "cmEthernetNetPortXdslStatus": cmEthernetNetPortXdslStatus,
       "cmEthernetNetPortXdslCurVdslProfile": cmEthernetNetPortXdslCurVdslProfile,
       "cmEthernetNetPortXdslActualLinkRateUpStream": cmEthernetNetPortXdslActualLinkRateUpStream,
       "cmEthernetNetPortXdslActualLinkRateDownStream": cmEthernetNetPortXdslActualLinkRateDownStream,
       "cmEthernetNetPortXdslControlChannel": cmEthernetNetPortXdslControlChannel,
       "cmEthernetNetPortXdslCarrierSet": cmEthernetNetPortXdslCarrierSet,
       "cmEthernetNetPortXdslMode": cmEthernetNetPortXdslMode,
       "cmEthernetNetPortXdslAnnex": cmEthernetNetPortXdslAnnex,
       "cmEthernetNetPortXdslDsSNRMargin": cmEthernetNetPortXdslDsSNRMargin,
       "cmEthernetNetPortXdslUsSNRMargin": cmEthernetNetPortXdslUsSNRMargin,
       "cmEthernetNetPortXdslDsSignalAttenuation": cmEthernetNetPortXdslDsSignalAttenuation,
       "cmEthernetNetPortXdslDsLineAttenuation": cmEthernetNetPortXdslDsLineAttenuation,
       "cmEthernetNetPortXdslDsTxPower": cmEthernetNetPortXdslDsTxPower,
       "cmEthernetNetPortXdslUsTxPower": cmEthernetNetPortXdslUsTxPower,
       "cmEthernetNetPortXdslDsAttainableRate": cmEthernetNetPortXdslDsAttainableRate,
       "cmEthernetNetPortXdslUsAttainableRate": cmEthernetNetPortXdslUsAttainableRate,
       "sciPortTable": sciPortTable,
       "sciPortEntry": sciPortEntry,
       "sciPortIndex": sciPortIndex,
       "sciPortAdminState": sciPortAdminState,
       "sciPortOperationalState": sciPortOperationalState,
       "sciPortSignalMode": sciPortSignalMode,
       "sciPortSignalDirection": sciPortSignalDirection,
       "sciPortRxSsmQL": sciPortRxSsmQL,
       "f3IrigRs422OutputPortTable": f3IrigRs422OutputPortTable,
       "f3IrigRs422OutputPortEntry": f3IrigRs422OutputPortEntry,
       "f3IrigRs422OutputPortIndex": f3IrigRs422OutputPortIndex,
       "f3IrigRs422OutputPortIfIndex": f3IrigRs422OutputPortIfIndex,
       "f3IrigRs422OutputPortEntityIndex": f3IrigRs422OutputPortEntityIndex,
       "f3IrigRs422OutputPortAlias": f3IrigRs422OutputPortAlias,
       "f3IrigRs422OutputPortAdminState": f3IrigRs422OutputPortAdminState,
       "f3IrigRs422OutputPortOperationalState": f3IrigRs422OutputPortOperationalState,
       "f3IrigRs422OutputPortSecondaryState": f3IrigRs422OutputPortSecondaryState,
       "f3IrigRs422OutputPortTimeCode": f3IrigRs422OutputPortTimeCode,
       "f3IrigRs422OutputPortControlField": f3IrigRs422OutputPortControlField,
       "f3IrigOpticalOutputPortTable": f3IrigOpticalOutputPortTable,
       "f3IrigOpticalOutputPortEntry": f3IrigOpticalOutputPortEntry,
       "f3IrigOpticalOutputPortIndex": f3IrigOpticalOutputPortIndex,
       "f3IrigOpticalOutputPortIfIndex": f3IrigOpticalOutputPortIfIndex,
       "f3IrigOpticalOutputPortEntityIndex": f3IrigOpticalOutputPortEntityIndex,
       "f3IrigOpticalOutputPortAlias": f3IrigOpticalOutputPortAlias,
       "f3IrigOpticalOutputPortAdminState": f3IrigOpticalOutputPortAdminState,
       "f3IrigOpticalOutputPortOperationalState": f3IrigOpticalOutputPortOperationalState,
       "f3IrigOpticalOutputPortSecondaryState": f3IrigOpticalOutputPortSecondaryState,
       "f3IrigOpticalOutputPortTimeCode": f3IrigOpticalOutputPortTimeCode,
       "f3IrigOpticalOutputPortControlField": f3IrigOpticalOutputPortControlField,
       "f3IrigRelayOutputPortTable": f3IrigRelayOutputPortTable,
       "f3IrigRelayOutputPortEntry": f3IrigRelayOutputPortEntry,
       "f3IrigRelayOutputPortIndex": f3IrigRelayOutputPortIndex,
       "f3IrigRelayOutputPortIfIndex": f3IrigRelayOutputPortIfIndex,
       "f3IrigRelayOutputPortEntityIndex": f3IrigRelayOutputPortEntityIndex,
       "f3IrigRelayOutputPortAlias": f3IrigRelayOutputPortAlias,
       "f3IrigRelayOutputPortAdminState": f3IrigRelayOutputPortAdminState,
       "f3IrigRelayOutputPortOperationalState": f3IrigRelayOutputPortOperationalState,
       "f3IrigRelayOutputPortSecondaryState": f3IrigRelayOutputPortSecondaryState,
       "f3IrigRelayOutputPortRelayOperation": f3IrigRelayOutputPortRelayOperation,
       "f3IrigOutputGroupTable": f3IrigOutputGroupTable,
       "f3IrigOutputGroupEntry": f3IrigOutputGroupEntry,
       "f3IrigOutputGroupIndex": f3IrigOutputGroupIndex,
       "f3IrigOutputGroupIfIndex": f3IrigOutputGroupIfIndex,
       "f3IrigOutputGroupEntityIndex": f3IrigOutputGroupEntityIndex,
       "f3IrigOutputGroupAlias": f3IrigOutputGroupAlias,
       "f3IrigOutputGroupExtensionType": f3IrigOutputGroupExtensionType,
       "f3IrigOutputGroupExtensionDetection": f3IrigOutputGroupExtensionDetection,
       "f3IrigOutputUnitPortTable": f3IrigOutputUnitPortTable,
       "f3IrigOutputUnitPortEntry": f3IrigOutputUnitPortEntry,
       "f3IrigOutputUnitPortIndex": f3IrigOutputUnitPortIndex,
       "f3IrigOutputUnitPortIfIndex": f3IrigOutputUnitPortIfIndex,
       "f3IrigOutputUnitPortEntityIndex": f3IrigOutputUnitPortEntityIndex,
       "f3IrigOutputUnitPortAlias": f3IrigOutputUnitPortAlias,
       "f3IrigOutputUnitPortAdminState": f3IrigOutputUnitPortAdminState,
       "f3IrigOutputUnitPortOperationalState": f3IrigOutputUnitPortOperationalState,
       "f3IrigOutputUnitPortSecondaryState": f3IrigOutputUnitPortSecondaryState,
       "f3IrigOutputUnitPortTimeCode": f3IrigOutputUnitPortTimeCode,
       "f3IrigOutputUnitPortControlField": f3IrigOutputUnitPortControlField,
       "f3IrigOutputUnitPortType": f3IrigOutputUnitPortType,
       "f3IrigOutputUnitPortDigitalVoltage": f3IrigOutputUnitPortDigitalVoltage,
       "ccInputPortTable": ccInputPortTable,
       "ccInputPortEntry": ccInputPortEntry,
       "ccInputPortIndex": ccInputPortIndex,
       "ccInputPortIfIndex": ccInputPortIfIndex,
       "ccInputPortEntityIndex": ccInputPortEntityIndex,
       "ccInputPortAlias": ccInputPortAlias,
       "ccInputPortAdminState": ccInputPortAdminState,
       "ccInputPortOperationalState": ccInputPortOperationalState,
       "ccInputPortSecondaryState": ccInputPortSecondaryState,
       "ccGroupTable": ccGroupTable,
       "ccGroupEntry": ccGroupEntry,
       "ccGroupIndex": ccGroupIndex,
       "ccGroupIfIndex": ccGroupIfIndex,
       "ccGroupEntityIndex": ccGroupEntityIndex,
       "ccGroupAlias": ccGroupAlias,
       "ccGroupActivePorts": ccGroupActivePorts,
       "ccGroupPhaseAdjust": ccGroupPhaseAdjust,
       "ccGroupDutyCycle": ccGroupDutyCycle,
       "cmEncapFlowPointTable": cmEncapFlowPointTable,
       "cmEncapFlowPointEntry": cmEncapFlowPointEntry,
       "cmEncapFlowPointIndex": cmEncapFlowPointIndex,
       "cmEncapFlowPointCircuitName": cmEncapFlowPointCircuitName,
       "cmEncapFlowPointAssociatedFlowId": cmEncapFlowPointAssociatedFlowId,
       "cmEncapFlowPointRefEoMplsPwObject": cmEncapFlowPointRefEoMplsPwObject,
       "cmEncapFlowPointCTagControl": cmEncapFlowPointCTagControl,
       "cmEncapFlowPointCTagVlanId": cmEncapFlowPointCTagVlanId,
       "cmEncapFlowPointCTagVlanPriority": cmEncapFlowPointCTagVlanPriority,
       "cmEncapFlowPointSTagControl": cmEncapFlowPointSTagControl,
       "cmEncapFlowPointSTagVlanId": cmEncapFlowPointSTagVlanId,
       "cmEncapFlowPointSTagVlanPriority": cmEncapFlowPointSTagVlanPriority,
       "cmEncapFlowPointEgressOuterTagPrioMapEnabled": cmEncapFlowPointEgressOuterTagPrioMapEnabled,
       "cmEncapFlowPointEgressInnerTagPrioMapEnabled": cmEncapFlowPointEgressInnerTagPrioMapEnabled,
       "cmEncapFlowPointRefPrioMapProfile": cmEncapFlowPointRefPrioMapProfile,
       "cmEncapFlowPointStorageType": cmEncapFlowPointStorageType,
       "cmEncapFlowPointRowStatus": cmEncapFlowPointRowStatus,
       "cmFacilityConformance": cmFacilityConformance,
       "cmFacilityCompliances": cmFacilityCompliances,
       "cmFacilityCompliance": cmFacilityCompliance,
       "cmFacilityGroups": cmFacilityGroups,
       "cmFacilityObjectGroup": cmFacilityObjectGroup,
       "ethernetAccessPortGroup": ethernetAccessPortGroup,
       "ethernetNetworkPortGroup": ethernetNetworkPortGroup,
       "ethernetMgmtPortGroup": ethernetMgmtPortGroup,
       "bitsPortGroup": bitsPortGroup,
       "trafficGroup": trafficGroup,
       "prioMapGroup": prioMapGroup,
       "pcpEncodeGroup": pcpEncodeGroup,
       "cpdV2Group": cpdV2Group,
       "trafficGroupCmHub": trafficGroupCmHub,
       "ocnStmGroup": ocnStmGroup,
       "stsVcPathGroup": stsVcPathGroup,
       "vtVcPathGroup": vtVcPathGroup,
       "e1t1InterfaceGroup": e1t1InterfaceGroup,
       "e3t3InterfaceGroup": e3t3InterfaceGroup,
       "f3PulsePerSecondPortGroup": f3PulsePerSecondPortGroup,
       "f3TimeOfDayPortGroup": f3TimeOfDayPortGroup,
       "f3Gps10MhzPortGroup": f3Gps10MhzPortGroup,
       "ethernetNetworkPortExtGroup": ethernetNetworkPortExtGroup,
       "f3GPSReceiverPortGroup": f3GPSReceiverPortGroup,
       "cmPsePortGroup": cmPsePortGroup,
       "cmPseEXTGroup": cmPseEXTGroup,
       "cmMPFlowGroup": cmMPFlowGroup,
       "cmMPFlowMemberGroup": cmMPFlowMemberGroup,
       "cmEthernetTrafficPortPcpGroup": cmEthernetTrafficPortPcpGroup,
       "neTMParamsGroup": neTMParamsGroup,
       "cmEthernetTrafficPortGroup": cmEthernetTrafficPortGroup,
       "cmFlowPointGroup": cmFlowPointGroup,
       "ethernetAccessPortJdsuExtGroup": ethernetAccessPortJdsuExtGroup,
       "ethernetNetworkPortJdsuExtGroup": ethernetNetworkPortJdsuExtGroup,
       "cmTrafficPortLpbkGroup": cmTrafficPortLpbkGroup,
       "cmPrioMapV2ProfileGroup": cmPrioMapV2ProfileGroup,
       "cmPrioMapV2IngressPrioMappingGroup": cmPrioMapV2IngressPrioMappingGroup,
       "bits8PortGroupGroup": bits8PortGroupGroup,
       "pps16PortGroupGroup": pps16PortGroupGroup,
       "clk16PortGroupGroup": clk16PortGroupGroup,
       "todPps16PortGroupGroup": todPps16PortGroupGroup,
       "f3PolicerEnvelopeGroup": f3PolicerEnvelopeGroup,
       "cmNetPortExpDeGroup": cmNetPortExpDeGroup,
       "cmNetPortIpPrecDeGroup": cmNetPortIpPrecDeGroup,
       "cmNetPortEncapPcpDeGroup": cmNetPortEncapPcpDeGroup,
       "f3SatelliteGroup": f3SatelliteGroup,
       "cmEthernetTrafficPortJdsuExtGroup": cmEthernetTrafficPortJdsuExtGroup,
       "f3FpQosShaperGroup": f3FpQosShaperGroup,
       "f3FpQosPolicerGroup": f3FpQosPolicerGroup,
       "cpdV2TrafficPortGroup": cpdV2TrafficPortGroup,
       "f3AclRuleGroup": f3AclRuleGroup,
       "f3EthernetTrafficPortExpDeGroup": f3EthernetTrafficPortExpDeGroup,
       "f3XdslAndPpppoeParamGroup": f3XdslAndPpppoeParamGroup,
       "sciPortGroup": sciPortGroup,
       "cmTrafficPortQosShaperGroup": cmTrafficPortQosShaperGroup,
       "f3IrigPortGroup": f3IrigPortGroup,
       "ccGroup": ccGroup,
       "cmEncapFlowPointGroup": cmEncapFlowPointGroup}
)
