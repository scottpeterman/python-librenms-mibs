# SNMP MIB module (ADVA-FSPR7-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\adva\ADVA-FSPR7-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 11:14:42 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(ApsRevertMode,
 ApsType,
 ConnectionNotation,
 CryptoFspR7EncryptionCommunication,
 EntityClassName,
 EntityType,
 EquipmentState,
 FfpType,
 FspR7APSCommand,
 FspR7AccState,
 FspR7AccStateTrap,
 FspR7Access,
 FspR7AccessNcuC2,
 FspR7AccessProtocol,
 FspR7AccessProtocolCaps,
 FspR7AccessStatus,
 FspR7AccountFlag,
 FspR7Acp,
 FspR7AdminState,
 FspR7AidType,
 FspR7AlarmListType,
 FspR7AlarmProfileList,
 FspR7AlsMode,
 FspR7AppType,
 FspR7ApsChannel,
 FspR7ApsFarEndModule,
 FspR7AutosrvLock,
 FspR7BERThreshold,
 FspR7Baund,
 FspR7BidirectionalChannel,
 FspR7Bitrate,
 FspR7CapInventory,
 FspR7Category,
 FspR7CdCompensationRange,
 FspR7CdPostCompensationRange,
 FspR7ChannelBandwidth,
 FspR7ChannelIdentifier,
 FspR7ChannelIdentifierCaps,
 FspR7ChannelNumber,
 FspR7ChannelNumberCaps,
 FspR7ChannelRangeInventory,
 FspR7ChannelSpacing,
 FspR7CodeGain,
 FspR7ColumnMark,
 FspR7Command,
 FspR7CommandBusy,
 FspR7CommandState,
 FspR7Conn,
 FspR7ConnectState,
 FspR7ConnectorType,
 FspR7CpAuthType,
 FspR7DCFiberType,
 FspR7Date,
 FspR7DeploymentScenario,
 FspR7DhcpServer,
 FspR7DisableEnable,
 FspR7DispersionCompensation,
 FspR7DispersionModes,
 FspR7DmLayer,
 FspR7DmsrmtOperation,
 FspR7DmsrmtStatus,
 FspR7EdfaOutputPowerRating,
 FspR7EnableDisable,
 FspR7EncapsulationMethod,
 FspR7EntitySecondaryStates,
 FspR7EntityType,
 FspR7EquipmentAssignState,
 FspR7ErrorFwdMode,
 FspR7FDStatusCaps,
 FspR7FanMode,
 FspR7FecType,
 FspR7FiberBrand,
 FspR7FlowControlMode,
 FspR7FltrCableType,
 FspR7ForcedStatus,
 FspR7FrameFormat,
 FspR7FunctionCrs,
 FspR7Gain,
 FspR7GainRange,
 FspR7GccUsage,
 FspR7GropticsType,
 FspR7IPv6Type,
 FspR7InterfaceCrossover,
 FspR7InterfaceFunction,
 FspR7InterfaceType,
 FspR7InvertTelemetryInputLogic,
 FspR7IpForwarding,
 FspR7IpMode,
 FspR7IpType,
 FspR7Ipv6Address,
 FspR7KeyLength,
 FspR7LLDPChassisType,
 FspR7LLDPLocation,
 FspR7LLDPManagementInterface,
 FspR7LLDPManagementType,
 FspR7LLDPNeighbors,
 FspR7LLDPPortType,
 FspR7LLDPScope,
 FspR7LacpMode,
 FspR7LacpTimeout,
 FspR7LagFendState,
 FspR7LagIdFend,
 FspR7LagPortType,
 FspR7LagPorts,
 FspR7LagStandby,
 FspR7LagState,
 FspR7LagSysIdFend,
 FspR7LaneGroupInventory,
 FspR7LaserDelayTimer,
 FspR7Length,
 FspR7LicenseFilesInstall,
 FspR7LicenseManagement,
 FspR7LicenseServerStatus,
 FspR7LicenseType,
 FspR7LineCoding,
 FspR7ManualAuto,
 FspR7Mapping,
 FspR7MaxBitErrorRate,
 FspR7MonLevel,
 FspR7MpState,
 FspR7MpTag,
 FspR7MuxMethod,
 FspR7NCTRouteType,
 FspR7NCTraceId,
 FspR7NaasMode,
 FspR7NoYes,
 FspR7NtpSyncStatus,
 FspR7NtpTestStatus,
 FspR7NumberOfChannels,
 FspR7OdtuType,
 FspR7OduMultiplexStructure,
 FspR7OperState,
 FspR7OpticalBand,
 FspR7OpticalFiberType,
 FspR7OpticalGroup,
 FspR7OpticalInterfaceReach,
 FspR7OpticalInterfaceReachCaps,
 FspR7OpticalLanes,
 FspR7OpticalMultiplexLevel,
 FspR7OpticalSubBand,
 FspR7Optimize,
 FspR7OpuPayloadType,
 FspR7OscChannel,
 FspR7OscUsage,
 FspR7OspfMode,
 FspR7OtdrPeriod,
 FspR7ParityBit,
 FspR7PasswordHashType,
 FspR7PathNode,
 FspR7PathProt,
 FspR7PlugDataRate,
 FspR7PlugDataRateCaps,
 FspR7PlugMode,
 FspR7PlugType,
 FspR7PmReset,
 FspR7PmSnapshotParameterTypes,
 FspR7PmSnapshotStatus,
 FspR7PortBehaviour,
 FspR7PortMode,
 FspR7PortRole,
 FspR7PrivLevel,
 FspR7PrivacyKeyType,
 FspR7ProtectionRole,
 FspR7ProtectionState,
 FspR7ProtectionType,
 FspR7Protocol,
 FspR7PsuOutputPower,
 FspR7RPFilter,
 FspR7RemoteAuth,
 FspR7RemoteAuthProtocol,
 FspR7RenewMode,
 FspR7RequestAction,
 FspR7RequestState,
 FspR7RlsAction,
 FspR7RoadmNumber,
 FspR7SdnInterface,
 FspR7SdpType,
 FspR7SessionStatus,
 FspR7SignalDirection,
 FspR7SingleFiberLocation,
 FspR7SnmpHexString,
 FspR7SnmpLongString,
 FspR7SnmpPrivLevel,
 FspR7SnmpSecuLevel,
 FspR7SnmpVersion,
 FspR7SshHostKeyEncryptAlgorithm,
 FspR7SshHostKeyLength,
 FspR7Stages,
 FspR7StateConnection,
 FspR7SupplyType,
 FspR7SwitchOverCause,
 FspR7TLSSupport,
 FspR7TelemetryOutput,
 FspR7TerminateSessions,
 FspR7TerminationMode,
 FspR7TiltSet,
 FspR7TimDetMode,
 FspR7TimeShort,
 FspR7Topology,
 FspR7TopologyType,
 FspR7TrafficDirection,
 FspR7TransferProtocol,
 FspR7TransmissionMode,
 FspR7TxOffOnTm,
 FspR7TypeConnection,
 FspR7TypeCrs,
 FspR7UntaggedFrames,
 FspR7UserInterface,
 FspR7VSessChangeReason,
 FspR7VSessStatus,
 FspR7VSessWriteAccess,
 FspR7ValidityPeriod,
 FspR7VoaMode,
 FspR7XfpDecisionThres,
 FspR7YcableType,
 FspR7YesNo,
 Grade) = mibBuilder.importSymbols(
    "ADVA-FSPR7-TC-MIB",
    "ApsRevertMode",
    "ApsType",
    "ConnectionNotation",
    "CryptoFspR7EncryptionCommunication",
    "EntityClassName",
    "EntityType",
    "EquipmentState",
    "FfpType",
    "FspR7APSCommand",
    "FspR7AccState",
    "FspR7AccStateTrap",
    "FspR7Access",
    "FspR7AccessNcuC2",
    "FspR7AccessProtocol",
    "FspR7AccessProtocolCaps",
    "FspR7AccessStatus",
    "FspR7AccountFlag",
    "FspR7Acp",
    "FspR7AdminState",
    "FspR7AidType",
    "FspR7AlarmListType",
    "FspR7AlarmProfileList",
    "FspR7AlsMode",
    "FspR7AppType",
    "FspR7ApsChannel",
    "FspR7ApsFarEndModule",
    "FspR7AutosrvLock",
    "FspR7BERThreshold",
    "FspR7Baund",
    "FspR7BidirectionalChannel",
    "FspR7Bitrate",
    "FspR7CapInventory",
    "FspR7Category",
    "FspR7CdCompensationRange",
    "FspR7CdPostCompensationRange",
    "FspR7ChannelBandwidth",
    "FspR7ChannelIdentifier",
    "FspR7ChannelIdentifierCaps",
    "FspR7ChannelNumber",
    "FspR7ChannelNumberCaps",
    "FspR7ChannelRangeInventory",
    "FspR7ChannelSpacing",
    "FspR7CodeGain",
    "FspR7ColumnMark",
    "FspR7Command",
    "FspR7CommandBusy",
    "FspR7CommandState",
    "FspR7Conn",
    "FspR7ConnectState",
    "FspR7ConnectorType",
    "FspR7CpAuthType",
    "FspR7DCFiberType",
    "FspR7Date",
    "FspR7DeploymentScenario",
    "FspR7DhcpServer",
    "FspR7DisableEnable",
    "FspR7DispersionCompensation",
    "FspR7DispersionModes",
    "FspR7DmLayer",
    "FspR7DmsrmtOperation",
    "FspR7DmsrmtStatus",
    "FspR7EdfaOutputPowerRating",
    "FspR7EnableDisable",
    "FspR7EncapsulationMethod",
    "FspR7EntitySecondaryStates",
    "FspR7EntityType",
    "FspR7EquipmentAssignState",
    "FspR7ErrorFwdMode",
    "FspR7FDStatusCaps",
    "FspR7FanMode",
    "FspR7FecType",
    "FspR7FiberBrand",
    "FspR7FlowControlMode",
    "FspR7FltrCableType",
    "FspR7ForcedStatus",
    "FspR7FrameFormat",
    "FspR7FunctionCrs",
    "FspR7Gain",
    "FspR7GainRange",
    "FspR7GccUsage",
    "FspR7GropticsType",
    "FspR7IPv6Type",
    "FspR7InterfaceCrossover",
    "FspR7InterfaceFunction",
    "FspR7InterfaceType",
    "FspR7InvertTelemetryInputLogic",
    "FspR7IpForwarding",
    "FspR7IpMode",
    "FspR7IpType",
    "FspR7Ipv6Address",
    "FspR7KeyLength",
    "FspR7LLDPChassisType",
    "FspR7LLDPLocation",
    "FspR7LLDPManagementInterface",
    "FspR7LLDPManagementType",
    "FspR7LLDPNeighbors",
    "FspR7LLDPPortType",
    "FspR7LLDPScope",
    "FspR7LacpMode",
    "FspR7LacpTimeout",
    "FspR7LagFendState",
    "FspR7LagIdFend",
    "FspR7LagPortType",
    "FspR7LagPorts",
    "FspR7LagStandby",
    "FspR7LagState",
    "FspR7LagSysIdFend",
    "FspR7LaneGroupInventory",
    "FspR7LaserDelayTimer",
    "FspR7Length",
    "FspR7LicenseFilesInstall",
    "FspR7LicenseManagement",
    "FspR7LicenseServerStatus",
    "FspR7LicenseType",
    "FspR7LineCoding",
    "FspR7ManualAuto",
    "FspR7Mapping",
    "FspR7MaxBitErrorRate",
    "FspR7MonLevel",
    "FspR7MpState",
    "FspR7MpTag",
    "FspR7MuxMethod",
    "FspR7NCTRouteType",
    "FspR7NCTraceId",
    "FspR7NaasMode",
    "FspR7NoYes",
    "FspR7NtpSyncStatus",
    "FspR7NtpTestStatus",
    "FspR7NumberOfChannels",
    "FspR7OdtuType",
    "FspR7OduMultiplexStructure",
    "FspR7OperState",
    "FspR7OpticalBand",
    "FspR7OpticalFiberType",
    "FspR7OpticalGroup",
    "FspR7OpticalInterfaceReach",
    "FspR7OpticalInterfaceReachCaps",
    "FspR7OpticalLanes",
    "FspR7OpticalMultiplexLevel",
    "FspR7OpticalSubBand",
    "FspR7Optimize",
    "FspR7OpuPayloadType",
    "FspR7OscChannel",
    "FspR7OscUsage",
    "FspR7OspfMode",
    "FspR7OtdrPeriod",
    "FspR7ParityBit",
    "FspR7PasswordHashType",
    "FspR7PathNode",
    "FspR7PathProt",
    "FspR7PlugDataRate",
    "FspR7PlugDataRateCaps",
    "FspR7PlugMode",
    "FspR7PlugType",
    "FspR7PmReset",
    "FspR7PmSnapshotParameterTypes",
    "FspR7PmSnapshotStatus",
    "FspR7PortBehaviour",
    "FspR7PortMode",
    "FspR7PortRole",
    "FspR7PrivLevel",
    "FspR7PrivacyKeyType",
    "FspR7ProtectionRole",
    "FspR7ProtectionState",
    "FspR7ProtectionType",
    "FspR7Protocol",
    "FspR7PsuOutputPower",
    "FspR7RPFilter",
    "FspR7RemoteAuth",
    "FspR7RemoteAuthProtocol",
    "FspR7RenewMode",
    "FspR7RequestAction",
    "FspR7RequestState",
    "FspR7RlsAction",
    "FspR7RoadmNumber",
    "FspR7SdnInterface",
    "FspR7SdpType",
    "FspR7SessionStatus",
    "FspR7SignalDirection",
    "FspR7SingleFiberLocation",
    "FspR7SnmpHexString",
    "FspR7SnmpLongString",
    "FspR7SnmpPrivLevel",
    "FspR7SnmpSecuLevel",
    "FspR7SnmpVersion",
    "FspR7SshHostKeyEncryptAlgorithm",
    "FspR7SshHostKeyLength",
    "FspR7Stages",
    "FspR7StateConnection",
    "FspR7SupplyType",
    "FspR7SwitchOverCause",
    "FspR7TLSSupport",
    "FspR7TelemetryOutput",
    "FspR7TerminateSessions",
    "FspR7TerminationMode",
    "FspR7TiltSet",
    "FspR7TimDetMode",
    "FspR7TimeShort",
    "FspR7Topology",
    "FspR7TopologyType",
    "FspR7TrafficDirection",
    "FspR7TransferProtocol",
    "FspR7TransmissionMode",
    "FspR7TxOffOnTm",
    "FspR7TypeConnection",
    "FspR7TypeCrs",
    "FspR7UntaggedFrames",
    "FspR7UserInterface",
    "FspR7VSessChangeReason",
    "FspR7VSessStatus",
    "FspR7VSessWriteAccess",
    "FspR7ValidityPeriod",
    "FspR7VoaMode",
    "FspR7XfpDecisionThres",
    "FspR7YcableType",
    "FspR7YesNo",
    "Grade")

(ApsDirection,
 ApsHoldoffTime,
 AssignmentState,
 EnableState,
 EntityClass,
 EthDuplexMode,
 FileArea,
 FileType,
 FspR7EquipmentType,
 FspR7EquipmentTypeCaps,
 FspR7TrapsinkLifetime,
 LoopConfig,
 OhTerminationLevel,
 OtnPayloadType,
 OtnTcmLevel,
 PgmType,
 ProtectionMech,
 RestoreActivation,
 ServiceAffecting,
 ServiceImpairment,
 SonetTimingSource,
 SonetTraceForm,
 SourceIpAddress,
 TimMode,
 TrapAlarmSeverity,
 VirtualContainerType,
 fspR7) = mibBuilder.importSymbols(
    "ADVA-MIB",
    "ApsDirection",
    "ApsHoldoffTime",
    "AssignmentState",
    "EnableState",
    "EntityClass",
    "EthDuplexMode",
    "FileArea",
    "FileType",
    "FspR7EquipmentType",
    "FspR7EquipmentTypeCaps",
    "FspR7TrapsinkLifetime",
    "LoopConfig",
    "OhTerminationLevel",
    "OtnPayloadType",
    "OtnTcmLevel",
    "PgmType",
    "ProtectionMech",
    "RestoreActivation",
    "ServiceAffecting",
    "ServiceImpairment",
    "SonetTimingSource",
    "SonetTraceForm",
    "SourceIpAddress",
    "TimMode",
    "TrapAlarmSeverity",
    "VirtualContainerType",
    "fspR7")

(SnmpAdminString,) = mibBuilder.importSymbols(
    "SNMP-FRAMEWORK-MIB",
    "SnmpAdminString")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DateAndTime,
 DisplayString,
 MacAddress,
 PhysAddress,
 RowPointer,
 RowStatus,
 TextualConvention,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowPointer",
    "RowStatus",
    "TextualConvention",
    "TruthValue")


# MODULE-IDENTITY

advaFspR7 = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7)
)
if mibBuilder.loadTexts:
    advaFspR7.setRevisions(
        ("2018-12-14 00:00",
         "2018-10-30 00:00",
         "2018-08-09 00:00",
         "2018-05-28 00:00",
         "2018-04-17 00:00",
         "2018-03-15 00:00",
         "2018-02-26 00:00",
         "2017-12-07 00:00",
         "2017-11-01 00:00",
         "2017-09-11 00:00",
         "2017-06-06 00:00",
         "2017-03-23 00:00",
         "2016-06-01 00:00",
         "2016-04-01 00:00",
         "2015-12-10 00:00",
         "2015-10-01 00:00",
         "2015-09-03 00:00",
         "2015-05-06 00:00",
         "2015-03-20 00:00",
         "2014-10-15 00:00",
         "2014-09-29 00:00",
         "2013-12-04 00:00",
         "2013-08-20 00:00",
         "2011-05-22 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Containers_ObjectIdentity = ObjectIdentity
containers = _Containers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1)
)
_ContainerShelfTable_Object = MibTable
containerShelfTable = _ContainerShelfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1)
)
if mibBuilder.loadTexts:
    containerShelfTable.setStatus("current")
_ContainerShelfEntry_Object = MibTableRow
containerShelfEntry = _ContainerShelfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1)
)
containerShelfEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerShelfShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfClassName"),
)
if mibBuilder.loadTexts:
    containerShelfEntry.setStatus("current")
_ContainerShelfShelfNo_Type = Unsigned32
_ContainerShelfShelfNo_Object = MibTableColumn
containerShelfShelfNo = _ContainerShelfShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 1),
    _ContainerShelfShelfNo_Type()
)
containerShelfShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfShelfNo.setStatus("current")
_ContainerShelfSlotNo_Type = Unsigned32
_ContainerShelfSlotNo_Object = MibTableColumn
containerShelfSlotNo = _ContainerShelfSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 2),
    _ContainerShelfSlotNo_Type()
)
containerShelfSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfSlotNo.setStatus("current")
_ContainerShelfPortNo_Type = Unsigned32
_ContainerShelfPortNo_Object = MibTableColumn
containerShelfPortNo = _ContainerShelfPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 3),
    _ContainerShelfPortNo_Type()
)
containerShelfPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfPortNo.setStatus("current")
_ContainerShelfExtNo_Type = Unsigned32
_ContainerShelfExtNo_Object = MibTableColumn
containerShelfExtNo = _ContainerShelfExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 4),
    _ContainerShelfExtNo_Type()
)
containerShelfExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfExtNo.setStatus("current")
_ContainerShelfClassName_Type = EntityClassName
_ContainerShelfClassName_Object = MibTableColumn
containerShelfClassName = _ContainerShelfClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 5),
    _ContainerShelfClassName_Type()
)
containerShelfClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfClassName.setStatus("current")
_ContainerShelfAidString_Type = SnmpAdminString
_ContainerShelfAidString_Object = MibTableColumn
containerShelfAidString = _ContainerShelfAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 6),
    _ContainerShelfAidString_Type()
)
containerShelfAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfAidString.setStatus("current")
_ContainerShelfClass_Type = EntityClass
_ContainerShelfClass_Object = MibTableColumn
containerShelfClass = _ContainerShelfClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 7),
    _ContainerShelfClass_Type()
)
containerShelfClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfClass.setStatus("current")
_ContainerShelfTableId_Type = RowPointer
_ContainerShelfTableId_Object = MibTableColumn
containerShelfTableId = _ContainerShelfTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 8),
    _ContainerShelfTableId_Type()
)
containerShelfTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfTableId.setStatus("current")
_ContainerShelfEquipmentState_Type = EquipmentState
_ContainerShelfEquipmentState_Object = MibTableColumn
containerShelfEquipmentState = _ContainerShelfEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 9),
    _ContainerShelfEquipmentState_Type()
)
containerShelfEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfEquipmentState.setStatus("current")
_ContainerShelfParentId_Type = RowPointer
_ContainerShelfParentId_Object = MibTableColumn
containerShelfParentId = _ContainerShelfParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 1, 1, 10),
    _ContainerShelfParentId_Type()
)
containerShelfParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfParentId.setStatus("current")
_ContainerFanTable_Object = MibTable
containerFanTable = _ContainerFanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2)
)
if mibBuilder.loadTexts:
    containerFanTable.setStatus("current")
_ContainerFanEntry_Object = MibTableRow
containerFanEntry = _ContainerFanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1)
)
containerFanEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerFanShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerFanSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerFanPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerFanExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerFanClassName"),
)
if mibBuilder.loadTexts:
    containerFanEntry.setStatus("current")
_ContainerFanShelfNo_Type = Unsigned32
_ContainerFanShelfNo_Object = MibTableColumn
containerFanShelfNo = _ContainerFanShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 1),
    _ContainerFanShelfNo_Type()
)
containerFanShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFanShelfNo.setStatus("current")
_ContainerFanSlotNo_Type = Unsigned32
_ContainerFanSlotNo_Object = MibTableColumn
containerFanSlotNo = _ContainerFanSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 2),
    _ContainerFanSlotNo_Type()
)
containerFanSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFanSlotNo.setStatus("current")
_ContainerFanPortNo_Type = Unsigned32
_ContainerFanPortNo_Object = MibTableColumn
containerFanPortNo = _ContainerFanPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 3),
    _ContainerFanPortNo_Type()
)
containerFanPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFanPortNo.setStatus("current")
_ContainerFanExtNo_Type = Unsigned32
_ContainerFanExtNo_Object = MibTableColumn
containerFanExtNo = _ContainerFanExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 4),
    _ContainerFanExtNo_Type()
)
containerFanExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFanExtNo.setStatus("current")
_ContainerFanClassName_Type = EntityClassName
_ContainerFanClassName_Object = MibTableColumn
containerFanClassName = _ContainerFanClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 5),
    _ContainerFanClassName_Type()
)
containerFanClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFanClassName.setStatus("current")
_ContainerFanAidString_Type = SnmpAdminString
_ContainerFanAidString_Object = MibTableColumn
containerFanAidString = _ContainerFanAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 6),
    _ContainerFanAidString_Type()
)
containerFanAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFanAidString.setStatus("current")
_ContainerFanClass_Type = EntityClass
_ContainerFanClass_Object = MibTableColumn
containerFanClass = _ContainerFanClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 7),
    _ContainerFanClass_Type()
)
containerFanClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFanClass.setStatus("current")
_ContainerFanTableId_Type = RowPointer
_ContainerFanTableId_Object = MibTableColumn
containerFanTableId = _ContainerFanTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 8),
    _ContainerFanTableId_Type()
)
containerFanTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFanTableId.setStatus("current")
_ContainerFanEquipmentState_Type = EquipmentState
_ContainerFanEquipmentState_Object = MibTableColumn
containerFanEquipmentState = _ContainerFanEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 9),
    _ContainerFanEquipmentState_Type()
)
containerFanEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFanEquipmentState.setStatus("current")
_ContainerFanParentId_Type = RowPointer
_ContainerFanParentId_Object = MibTableColumn
containerFanParentId = _ContainerFanParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 2, 1, 10),
    _ContainerFanParentId_Type()
)
containerFanParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFanParentId.setStatus("current")
_ContainerPlugTable_Object = MibTable
containerPlugTable = _ContainerPlugTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3)
)
if mibBuilder.loadTexts:
    containerPlugTable.setStatus("current")
_ContainerPlugEntry_Object = MibTableRow
containerPlugEntry = _ContainerPlugEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1)
)
containerPlugEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerPlugShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerPlugSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerPlugPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerPlugExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerPlugClassName"),
)
if mibBuilder.loadTexts:
    containerPlugEntry.setStatus("current")
_ContainerPlugShelfNo_Type = Unsigned32
_ContainerPlugShelfNo_Object = MibTableColumn
containerPlugShelfNo = _ContainerPlugShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 1),
    _ContainerPlugShelfNo_Type()
)
containerPlugShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPlugShelfNo.setStatus("current")
_ContainerPlugSlotNo_Type = Unsigned32
_ContainerPlugSlotNo_Object = MibTableColumn
containerPlugSlotNo = _ContainerPlugSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 2),
    _ContainerPlugSlotNo_Type()
)
containerPlugSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPlugSlotNo.setStatus("current")
_ContainerPlugPortNo_Type = Unsigned32
_ContainerPlugPortNo_Object = MibTableColumn
containerPlugPortNo = _ContainerPlugPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 3),
    _ContainerPlugPortNo_Type()
)
containerPlugPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPlugPortNo.setStatus("current")
_ContainerPlugExtNo_Type = Unsigned32
_ContainerPlugExtNo_Object = MibTableColumn
containerPlugExtNo = _ContainerPlugExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 4),
    _ContainerPlugExtNo_Type()
)
containerPlugExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPlugExtNo.setStatus("current")
_ContainerPlugClassName_Type = EntityClassName
_ContainerPlugClassName_Object = MibTableColumn
containerPlugClassName = _ContainerPlugClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 5),
    _ContainerPlugClassName_Type()
)
containerPlugClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPlugClassName.setStatus("current")
_ContainerPlugAidString_Type = SnmpAdminString
_ContainerPlugAidString_Object = MibTableColumn
containerPlugAidString = _ContainerPlugAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 6),
    _ContainerPlugAidString_Type()
)
containerPlugAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPlugAidString.setStatus("current")
_ContainerPlugClass_Type = EntityClass
_ContainerPlugClass_Object = MibTableColumn
containerPlugClass = _ContainerPlugClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 7),
    _ContainerPlugClass_Type()
)
containerPlugClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPlugClass.setStatus("current")
_ContainerPlugTableId_Type = RowPointer
_ContainerPlugTableId_Object = MibTableColumn
containerPlugTableId = _ContainerPlugTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 8),
    _ContainerPlugTableId_Type()
)
containerPlugTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPlugTableId.setStatus("current")
_ContainerPlugEquipmentState_Type = EquipmentState
_ContainerPlugEquipmentState_Object = MibTableColumn
containerPlugEquipmentState = _ContainerPlugEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 9),
    _ContainerPlugEquipmentState_Type()
)
containerPlugEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPlugEquipmentState.setStatus("current")
_ContainerPlugParentId_Type = RowPointer
_ContainerPlugParentId_Object = MibTableColumn
containerPlugParentId = _ContainerPlugParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 3, 1, 10),
    _ContainerPlugParentId_Type()
)
containerPlugParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPlugParentId.setStatus("current")
_ContainerModTable_Object = MibTable
containerModTable = _ContainerModTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4)
)
if mibBuilder.loadTexts:
    containerModTable.setStatus("current")
_ContainerModEntry_Object = MibTableRow
containerModEntry = _ContainerModEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1)
)
containerModEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerModShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerModSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerModPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerModExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerModClassName"),
)
if mibBuilder.loadTexts:
    containerModEntry.setStatus("current")
_ContainerModShelfNo_Type = Unsigned32
_ContainerModShelfNo_Object = MibTableColumn
containerModShelfNo = _ContainerModShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 1),
    _ContainerModShelfNo_Type()
)
containerModShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerModShelfNo.setStatus("current")
_ContainerModSlotNo_Type = Unsigned32
_ContainerModSlotNo_Object = MibTableColumn
containerModSlotNo = _ContainerModSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 2),
    _ContainerModSlotNo_Type()
)
containerModSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerModSlotNo.setStatus("current")
_ContainerModPortNo_Type = Unsigned32
_ContainerModPortNo_Object = MibTableColumn
containerModPortNo = _ContainerModPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 3),
    _ContainerModPortNo_Type()
)
containerModPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerModPortNo.setStatus("current")
_ContainerModExtNo_Type = Unsigned32
_ContainerModExtNo_Object = MibTableColumn
containerModExtNo = _ContainerModExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 4),
    _ContainerModExtNo_Type()
)
containerModExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerModExtNo.setStatus("current")
_ContainerModClassName_Type = EntityClassName
_ContainerModClassName_Object = MibTableColumn
containerModClassName = _ContainerModClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 5),
    _ContainerModClassName_Type()
)
containerModClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerModClassName.setStatus("current")
_ContainerModAidString_Type = SnmpAdminString
_ContainerModAidString_Object = MibTableColumn
containerModAidString = _ContainerModAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 6),
    _ContainerModAidString_Type()
)
containerModAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerModAidString.setStatus("current")
_ContainerModClass_Type = EntityClass
_ContainerModClass_Object = MibTableColumn
containerModClass = _ContainerModClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 7),
    _ContainerModClass_Type()
)
containerModClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerModClass.setStatus("current")
_ContainerModTableId_Type = RowPointer
_ContainerModTableId_Object = MibTableColumn
containerModTableId = _ContainerModTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 8),
    _ContainerModTableId_Type()
)
containerModTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerModTableId.setStatus("current")
_ContainerModEquipmentState_Type = EquipmentState
_ContainerModEquipmentState_Object = MibTableColumn
containerModEquipmentState = _ContainerModEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 9),
    _ContainerModEquipmentState_Type()
)
containerModEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerModEquipmentState.setStatus("current")
_ContainerModParentId_Type = RowPointer
_ContainerModParentId_Object = MibTableColumn
containerModParentId = _ContainerModParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 4, 1, 10),
    _ContainerModParentId_Type()
)
containerModParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerModParentId.setStatus("current")
_ContainerVchTable_Object = MibTable
containerVchTable = _ContainerVchTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7)
)
if mibBuilder.loadTexts:
    containerVchTable.setStatus("current")
_ContainerVchEntry_Object = MibTableRow
containerVchEntry = _ContainerVchEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1)
)
containerVchEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerVchShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerVchSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerVchPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerVchExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerVchClassName"),
)
if mibBuilder.loadTexts:
    containerVchEntry.setStatus("current")
_ContainerVchShelfNo_Type = Unsigned32
_ContainerVchShelfNo_Object = MibTableColumn
containerVchShelfNo = _ContainerVchShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 1),
    _ContainerVchShelfNo_Type()
)
containerVchShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVchShelfNo.setStatus("current")
_ContainerVchSlotNo_Type = Unsigned32
_ContainerVchSlotNo_Object = MibTableColumn
containerVchSlotNo = _ContainerVchSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 2),
    _ContainerVchSlotNo_Type()
)
containerVchSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVchSlotNo.setStatus("current")
_ContainerVchPortNo_Type = Unsigned32
_ContainerVchPortNo_Object = MibTableColumn
containerVchPortNo = _ContainerVchPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 3),
    _ContainerVchPortNo_Type()
)
containerVchPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVchPortNo.setStatus("current")
_ContainerVchExtNo_Type = Unsigned32
_ContainerVchExtNo_Object = MibTableColumn
containerVchExtNo = _ContainerVchExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 4),
    _ContainerVchExtNo_Type()
)
containerVchExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVchExtNo.setStatus("current")
_ContainerVchClassName_Type = EntityClassName
_ContainerVchClassName_Object = MibTableColumn
containerVchClassName = _ContainerVchClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 5),
    _ContainerVchClassName_Type()
)
containerVchClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVchClassName.setStatus("current")
_ContainerVchAidString_Type = SnmpAdminString
_ContainerVchAidString_Object = MibTableColumn
containerVchAidString = _ContainerVchAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 6),
    _ContainerVchAidString_Type()
)
containerVchAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVchAidString.setStatus("current")
_ContainerVchClass_Type = EntityClass
_ContainerVchClass_Object = MibTableColumn
containerVchClass = _ContainerVchClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 7),
    _ContainerVchClass_Type()
)
containerVchClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVchClass.setStatus("current")
_ContainerVchTableId_Type = RowPointer
_ContainerVchTableId_Object = MibTableColumn
containerVchTableId = _ContainerVchTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 8),
    _ContainerVchTableId_Type()
)
containerVchTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVchTableId.setStatus("current")
_ContainerVchParentId_Type = RowPointer
_ContainerVchParentId_Object = MibTableColumn
containerVchParentId = _ContainerVchParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 7, 1, 9),
    _ContainerVchParentId_Type()
)
containerVchParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVchParentId.setStatus("current")
_ContainerCrossConnTable_Object = MibTable
containerCrossConnTable = _ContainerCrossConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8)
)
if mibBuilder.loadTexts:
    containerCrossConnTable.setStatus("current")
_ContainerCrossConnEntry_Object = MibTableRow
containerCrossConnEntry = _ContainerCrossConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1)
)
containerCrossConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromClassName"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnToShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnToSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnToPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnToExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnToClassName"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnClassName"),
)
if mibBuilder.loadTexts:
    containerCrossConnEntry.setStatus("current")
_ContainerCrossConnFromShelfNo_Type = Unsigned32
_ContainerCrossConnFromShelfNo_Object = MibTableColumn
containerCrossConnFromShelfNo = _ContainerCrossConnFromShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 1),
    _ContainerCrossConnFromShelfNo_Type()
)
containerCrossConnFromShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromShelfNo.setStatus("current")
_ContainerCrossConnFromSlotNo_Type = Unsigned32
_ContainerCrossConnFromSlotNo_Object = MibTableColumn
containerCrossConnFromSlotNo = _ContainerCrossConnFromSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 2),
    _ContainerCrossConnFromSlotNo_Type()
)
containerCrossConnFromSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromSlotNo.setStatus("current")
_ContainerCrossConnFromPortNo_Type = Unsigned32
_ContainerCrossConnFromPortNo_Object = MibTableColumn
containerCrossConnFromPortNo = _ContainerCrossConnFromPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 3),
    _ContainerCrossConnFromPortNo_Type()
)
containerCrossConnFromPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPortNo.setStatus("current")
_ContainerCrossConnFromExtNo_Type = Unsigned32
_ContainerCrossConnFromExtNo_Object = MibTableColumn
containerCrossConnFromExtNo = _ContainerCrossConnFromExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 4),
    _ContainerCrossConnFromExtNo_Type()
)
containerCrossConnFromExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromExtNo.setStatus("current")
_ContainerCrossConnFromClassName_Type = EntityClassName
_ContainerCrossConnFromClassName_Object = MibTableColumn
containerCrossConnFromClassName = _ContainerCrossConnFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 5),
    _ContainerCrossConnFromClassName_Type()
)
containerCrossConnFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromClassName.setStatus("current")
_ContainerCrossConnToShelfNo_Type = Unsigned32
_ContainerCrossConnToShelfNo_Object = MibTableColumn
containerCrossConnToShelfNo = _ContainerCrossConnToShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 6),
    _ContainerCrossConnToShelfNo_Type()
)
containerCrossConnToShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnToShelfNo.setStatus("current")
_ContainerCrossConnToSlotNo_Type = Unsigned32
_ContainerCrossConnToSlotNo_Object = MibTableColumn
containerCrossConnToSlotNo = _ContainerCrossConnToSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 7),
    _ContainerCrossConnToSlotNo_Type()
)
containerCrossConnToSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnToSlotNo.setStatus("current")
_ContainerCrossConnToPortNo_Type = Unsigned32
_ContainerCrossConnToPortNo_Object = MibTableColumn
containerCrossConnToPortNo = _ContainerCrossConnToPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 8),
    _ContainerCrossConnToPortNo_Type()
)
containerCrossConnToPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnToPortNo.setStatus("current")
_ContainerCrossConnToExtNo_Type = Unsigned32
_ContainerCrossConnToExtNo_Object = MibTableColumn
containerCrossConnToExtNo = _ContainerCrossConnToExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 9),
    _ContainerCrossConnToExtNo_Type()
)
containerCrossConnToExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnToExtNo.setStatus("current")
_ContainerCrossConnToClassName_Type = EntityClassName
_ContainerCrossConnToClassName_Object = MibTableColumn
containerCrossConnToClassName = _ContainerCrossConnToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 10),
    _ContainerCrossConnToClassName_Type()
)
containerCrossConnToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnToClassName.setStatus("current")
_ContainerCrossConnClassName_Type = EntityClassName
_ContainerCrossConnClassName_Object = MibTableColumn
containerCrossConnClassName = _ContainerCrossConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 11),
    _ContainerCrossConnClassName_Type()
)
containerCrossConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnClassName.setStatus("current")
_ContainerCrossConnAidString_Type = SnmpAdminString
_ContainerCrossConnAidString_Object = MibTableColumn
containerCrossConnAidString = _ContainerCrossConnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 12),
    _ContainerCrossConnAidString_Type()
)
containerCrossConnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnAidString.setStatus("current")
_ContainerCrossConnFromId_Type = RowPointer
_ContainerCrossConnFromId_Object = MibTableColumn
containerCrossConnFromId = _ContainerCrossConnFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 13),
    _ContainerCrossConnFromId_Type()
)
containerCrossConnFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromId.setStatus("current")
_ContainerCrossConnToId_Type = RowPointer
_ContainerCrossConnToId_Object = MibTableColumn
containerCrossConnToId = _ContainerCrossConnToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 14),
    _ContainerCrossConnToId_Type()
)
containerCrossConnToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnToId.setStatus("current")
_ContainerCrossConnClass_Type = EntityClass
_ContainerCrossConnClass_Object = MibTableColumn
containerCrossConnClass = _ContainerCrossConnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 15),
    _ContainerCrossConnClass_Type()
)
containerCrossConnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnClass.setStatus("current")
_ContainerCrossConnTableId_Type = RowPointer
_ContainerCrossConnTableId_Object = MibTableColumn
containerCrossConnTableId = _ContainerCrossConnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 16),
    _ContainerCrossConnTableId_Type()
)
containerCrossConnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnTableId.setStatus("current")
_ContainerCrossConnParentId_Type = RowPointer
_ContainerCrossConnParentId_Object = MibTableColumn
containerCrossConnParentId = _ContainerCrossConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 8, 1, 17),
    _ContainerCrossConnParentId_Type()
)
containerCrossConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnParentId.setStatus("current")
_ContainerCrossConnFromPointTable_Object = MibTable
containerCrossConnFromPointTable = _ContainerCrossConnFromPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9)
)
if mibBuilder.loadTexts:
    containerCrossConnFromPointTable.setStatus("current")
_ContainerCrossConnFromPointEntry_Object = MibTableRow
containerCrossConnFromPointEntry = _ContainerCrossConnFromPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1)
)
containerCrossConnFromPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPointShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPointSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPointPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPointExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossConnFromPointClassName"),
)
if mibBuilder.loadTexts:
    containerCrossConnFromPointEntry.setStatus("current")
_ContainerCrossConnFromPointShelfNo_Type = Unsigned32
_ContainerCrossConnFromPointShelfNo_Object = MibTableColumn
containerCrossConnFromPointShelfNo = _ContainerCrossConnFromPointShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 1),
    _ContainerCrossConnFromPointShelfNo_Type()
)
containerCrossConnFromPointShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPointShelfNo.setStatus("current")
_ContainerCrossConnFromPointSlotNo_Type = Unsigned32
_ContainerCrossConnFromPointSlotNo_Object = MibTableColumn
containerCrossConnFromPointSlotNo = _ContainerCrossConnFromPointSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 2),
    _ContainerCrossConnFromPointSlotNo_Type()
)
containerCrossConnFromPointSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPointSlotNo.setStatus("current")
_ContainerCrossConnFromPointPortNo_Type = Unsigned32
_ContainerCrossConnFromPointPortNo_Object = MibTableColumn
containerCrossConnFromPointPortNo = _ContainerCrossConnFromPointPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 3),
    _ContainerCrossConnFromPointPortNo_Type()
)
containerCrossConnFromPointPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPointPortNo.setStatus("current")
_ContainerCrossConnFromPointExtNo_Type = Unsigned32
_ContainerCrossConnFromPointExtNo_Object = MibTableColumn
containerCrossConnFromPointExtNo = _ContainerCrossConnFromPointExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 4),
    _ContainerCrossConnFromPointExtNo_Type()
)
containerCrossConnFromPointExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPointExtNo.setStatus("current")
_ContainerCrossConnFromPointClassName_Type = EntityClassName
_ContainerCrossConnFromPointClassName_Object = MibTableColumn
containerCrossConnFromPointClassName = _ContainerCrossConnFromPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 5),
    _ContainerCrossConnFromPointClassName_Type()
)
containerCrossConnFromPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossConnFromPointClassName.setStatus("current")
_ContainerCrossConnFromPointAidString_Type = SnmpAdminString
_ContainerCrossConnFromPointAidString_Object = MibTableColumn
containerCrossConnFromPointAidString = _ContainerCrossConnFromPointAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 6),
    _ContainerCrossConnFromPointAidString_Type()
)
containerCrossConnFromPointAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromPointAidString.setStatus("current")
_ContainerCrossConnFromPointFromId_Type = RowPointer
_ContainerCrossConnFromPointFromId_Object = MibTableColumn
containerCrossConnFromPointFromId = _ContainerCrossConnFromPointFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 7),
    _ContainerCrossConnFromPointFromId_Type()
)
containerCrossConnFromPointFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromPointFromId.setStatus("current")
_ContainerCrossConnFromPointClass_Type = EntityClass
_ContainerCrossConnFromPointClass_Object = MibTableColumn
containerCrossConnFromPointClass = _ContainerCrossConnFromPointClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 8),
    _ContainerCrossConnFromPointClass_Type()
)
containerCrossConnFromPointClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromPointClass.setStatus("current")
_ContainerCrossConnFromPointTableId_Type = RowPointer
_ContainerCrossConnFromPointTableId_Object = MibTableColumn
containerCrossConnFromPointTableId = _ContainerCrossConnFromPointTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 9),
    _ContainerCrossConnFromPointTableId_Type()
)
containerCrossConnFromPointTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromPointTableId.setStatus("current")
_ContainerCrossConnFromPointParentId_Type = RowPointer
_ContainerCrossConnFromPointParentId_Object = MibTableColumn
containerCrossConnFromPointParentId = _ContainerCrossConnFromPointParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 9, 1, 10),
    _ContainerCrossConnFromPointParentId_Type()
)
containerCrossConnFromPointParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossConnFromPointParentId.setStatus("current")
_ContainerTerminPointTable_Object = MibTable
containerTerminPointTable = _ContainerTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10)
)
if mibBuilder.loadTexts:
    containerTerminPointTable.setStatus("current")
_ContainerTerminPointEntry_Object = MibTableRow
containerTerminPointEntry = _ContainerTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1)
)
containerTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerTerminPointClassName"),
)
if mibBuilder.loadTexts:
    containerTerminPointEntry.setStatus("current")
_ContainerTerminPointIndexNo1_Type = Unsigned32
_ContainerTerminPointIndexNo1_Object = MibTableColumn
containerTerminPointIndexNo1 = _ContainerTerminPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 1),
    _ContainerTerminPointIndexNo1_Type()
)
containerTerminPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerTerminPointIndexNo1.setStatus("current")
_ContainerTerminPointIndexNo2_Type = Unsigned32
_ContainerTerminPointIndexNo2_Object = MibTableColumn
containerTerminPointIndexNo2 = _ContainerTerminPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 2),
    _ContainerTerminPointIndexNo2_Type()
)
containerTerminPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerTerminPointIndexNo2.setStatus("current")
_ContainerTerminPointIndexNo3_Type = Unsigned32
_ContainerTerminPointIndexNo3_Object = MibTableColumn
containerTerminPointIndexNo3 = _ContainerTerminPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 3),
    _ContainerTerminPointIndexNo3_Type()
)
containerTerminPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerTerminPointIndexNo3.setStatus("current")
_ContainerTerminPointIndexNo4_Type = Unsigned32
_ContainerTerminPointIndexNo4_Object = MibTableColumn
containerTerminPointIndexNo4 = _ContainerTerminPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 4),
    _ContainerTerminPointIndexNo4_Type()
)
containerTerminPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerTerminPointIndexNo4.setStatus("current")
_ContainerTerminPointClassName_Type = EntityClassName
_ContainerTerminPointClassName_Object = MibTableColumn
containerTerminPointClassName = _ContainerTerminPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 5),
    _ContainerTerminPointClassName_Type()
)
containerTerminPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerTerminPointClassName.setStatus("current")
_ContainerTerminPointAidString_Type = SnmpAdminString
_ContainerTerminPointAidString_Object = MibTableColumn
containerTerminPointAidString = _ContainerTerminPointAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 6),
    _ContainerTerminPointAidString_Type()
)
containerTerminPointAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerTerminPointAidString.setStatus("current")
_ContainerTerminPointClass_Type = EntityClass
_ContainerTerminPointClass_Object = MibTableColumn
containerTerminPointClass = _ContainerTerminPointClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 7),
    _ContainerTerminPointClass_Type()
)
containerTerminPointClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerTerminPointClass.setStatus("current")
_ContainerTerminPointTableId_Type = RowPointer
_ContainerTerminPointTableId_Object = MibTableColumn
containerTerminPointTableId = _ContainerTerminPointTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 8),
    _ContainerTerminPointTableId_Type()
)
containerTerminPointTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerTerminPointTableId.setStatus("current")
_ContainerTerminPointParentId_Type = RowPointer
_ContainerTerminPointParentId_Object = MibTableColumn
containerTerminPointParentId = _ContainerTerminPointParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10, 1, 9),
    _ContainerTerminPointParentId_Type()
)
containerTerminPointParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerTerminPointParentId.setStatus("current")
_ContainerConnectStdTable_Object = MibTable
containerConnectStdTable = _ContainerConnectStdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11)
)
if mibBuilder.loadTexts:
    containerConnectStdTable.setStatus("current")
_ContainerConnectStdEntry_Object = MibTableRow
containerConnectStdEntry = _ContainerConnectStdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1)
)
containerConnectStdEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerConnectStdNotation"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdFromIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdFromIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdFromIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdFromIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdFromClassName"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdToIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdToIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdToIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdToIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdToClassName"),
    (0, "ADVA-FSPR7-MIB", "containerConnectStdClassName"),
)
if mibBuilder.loadTexts:
    containerConnectStdEntry.setStatus("current")
_ContainerConnectStdNotation_Type = ConnectionNotation
_ContainerConnectStdNotation_Object = MibTableColumn
containerConnectStdNotation = _ContainerConnectStdNotation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 1),
    _ContainerConnectStdNotation_Type()
)
containerConnectStdNotation.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdNotation.setStatus("current")
_ContainerConnectStdFromIndexNo1_Type = Unsigned32
_ContainerConnectStdFromIndexNo1_Object = MibTableColumn
containerConnectStdFromIndexNo1 = _ContainerConnectStdFromIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 2),
    _ContainerConnectStdFromIndexNo1_Type()
)
containerConnectStdFromIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdFromIndexNo1.setStatus("current")
_ContainerConnectStdFromIndexNo2_Type = Unsigned32
_ContainerConnectStdFromIndexNo2_Object = MibTableColumn
containerConnectStdFromIndexNo2 = _ContainerConnectStdFromIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 3),
    _ContainerConnectStdFromIndexNo2_Type()
)
containerConnectStdFromIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdFromIndexNo2.setStatus("current")
_ContainerConnectStdFromIndexNo3_Type = Unsigned32
_ContainerConnectStdFromIndexNo3_Object = MibTableColumn
containerConnectStdFromIndexNo3 = _ContainerConnectStdFromIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 4),
    _ContainerConnectStdFromIndexNo3_Type()
)
containerConnectStdFromIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdFromIndexNo3.setStatus("current")
_ContainerConnectStdFromIndexNo4_Type = Unsigned32
_ContainerConnectStdFromIndexNo4_Object = MibTableColumn
containerConnectStdFromIndexNo4 = _ContainerConnectStdFromIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 5),
    _ContainerConnectStdFromIndexNo4_Type()
)
containerConnectStdFromIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdFromIndexNo4.setStatus("current")
_ContainerConnectStdFromClassName_Type = EntityClassName
_ContainerConnectStdFromClassName_Object = MibTableColumn
containerConnectStdFromClassName = _ContainerConnectStdFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 6),
    _ContainerConnectStdFromClassName_Type()
)
containerConnectStdFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdFromClassName.setStatus("current")
_ContainerConnectStdToIndexNo1_Type = Unsigned32
_ContainerConnectStdToIndexNo1_Object = MibTableColumn
containerConnectStdToIndexNo1 = _ContainerConnectStdToIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 7),
    _ContainerConnectStdToIndexNo1_Type()
)
containerConnectStdToIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdToIndexNo1.setStatus("current")
_ContainerConnectStdToIndexNo2_Type = Unsigned32
_ContainerConnectStdToIndexNo2_Object = MibTableColumn
containerConnectStdToIndexNo2 = _ContainerConnectStdToIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 8),
    _ContainerConnectStdToIndexNo2_Type()
)
containerConnectStdToIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdToIndexNo2.setStatus("current")
_ContainerConnectStdToIndexNo3_Type = Unsigned32
_ContainerConnectStdToIndexNo3_Object = MibTableColumn
containerConnectStdToIndexNo3 = _ContainerConnectStdToIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 9),
    _ContainerConnectStdToIndexNo3_Type()
)
containerConnectStdToIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdToIndexNo3.setStatus("current")
_ContainerConnectStdToIndexNo4_Type = Unsigned32
_ContainerConnectStdToIndexNo4_Object = MibTableColumn
containerConnectStdToIndexNo4 = _ContainerConnectStdToIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 10),
    _ContainerConnectStdToIndexNo4_Type()
)
containerConnectStdToIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdToIndexNo4.setStatus("current")
_ContainerConnectStdToClassName_Type = EntityClassName
_ContainerConnectStdToClassName_Object = MibTableColumn
containerConnectStdToClassName = _ContainerConnectStdToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 11),
    _ContainerConnectStdToClassName_Type()
)
containerConnectStdToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdToClassName.setStatus("current")
_ContainerConnectStdClassName_Type = EntityClassName
_ContainerConnectStdClassName_Object = MibTableColumn
containerConnectStdClassName = _ContainerConnectStdClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 12),
    _ContainerConnectStdClassName_Type()
)
containerConnectStdClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectStdClassName.setStatus("current")
_ContainerConnectStdAidString_Type = SnmpAdminString
_ContainerConnectStdAidString_Object = MibTableColumn
containerConnectStdAidString = _ContainerConnectStdAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 13),
    _ContainerConnectStdAidString_Type()
)
containerConnectStdAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdAidString.setStatus("current")
_ContainerConnectStdFromId_Type = RowPointer
_ContainerConnectStdFromId_Object = MibTableColumn
containerConnectStdFromId = _ContainerConnectStdFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 14),
    _ContainerConnectStdFromId_Type()
)
containerConnectStdFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdFromId.setStatus("current")
_ContainerConnectStdToId_Type = RowPointer
_ContainerConnectStdToId_Object = MibTableColumn
containerConnectStdToId = _ContainerConnectStdToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 15),
    _ContainerConnectStdToId_Type()
)
containerConnectStdToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdToId.setStatus("current")
_ContainerConnectStdClass_Type = EntityClass
_ContainerConnectStdClass_Object = MibTableColumn
containerConnectStdClass = _ContainerConnectStdClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 16),
    _ContainerConnectStdClass_Type()
)
containerConnectStdClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdClass.setStatus("current")
_ContainerConnectStdTableId_Type = RowPointer
_ContainerConnectStdTableId_Object = MibTableColumn
containerConnectStdTableId = _ContainerConnectStdTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 17),
    _ContainerConnectStdTableId_Type()
)
containerConnectStdTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdTableId.setStatus("current")
_ContainerConnectStdParentId_Type = RowPointer
_ContainerConnectStdParentId_Object = MibTableColumn
containerConnectStdParentId = _ContainerConnectStdParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 11, 1, 18),
    _ContainerConnectStdParentId_Type()
)
containerConnectStdParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectStdParentId.setStatus("current")
_ContainerConnectNonStdTable_Object = MibTable
containerConnectNonStdTable = _ContainerConnectNonStdTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12)
)
if mibBuilder.loadTexts:
    containerConnectNonStdTable.setStatus("current")
_ContainerConnectNonStdEntry_Object = MibTableRow
containerConnectNonStdEntry = _ContainerConnectNonStdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1)
)
containerConnectNonStdEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdNotation"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdFromIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdFromIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdFromIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdFromIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdFromClassName"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdToIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdToIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdToIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdToIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdToClassName"),
    (0, "ADVA-FSPR7-MIB", "containerConnectNonStdClassName"),
)
if mibBuilder.loadTexts:
    containerConnectNonStdEntry.setStatus("current")
_ContainerConnectNonStdNotation_Type = ConnectionNotation
_ContainerConnectNonStdNotation_Object = MibTableColumn
containerConnectNonStdNotation = _ContainerConnectNonStdNotation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 1),
    _ContainerConnectNonStdNotation_Type()
)
containerConnectNonStdNotation.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdNotation.setStatus("current")
_ContainerConnectNonStdFromIndexNo1_Type = Unsigned32
_ContainerConnectNonStdFromIndexNo1_Object = MibTableColumn
containerConnectNonStdFromIndexNo1 = _ContainerConnectNonStdFromIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 2),
    _ContainerConnectNonStdFromIndexNo1_Type()
)
containerConnectNonStdFromIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdFromIndexNo1.setStatus("current")
_ContainerConnectNonStdFromIndexNo2_Type = Unsigned32
_ContainerConnectNonStdFromIndexNo2_Object = MibTableColumn
containerConnectNonStdFromIndexNo2 = _ContainerConnectNonStdFromIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 3),
    _ContainerConnectNonStdFromIndexNo2_Type()
)
containerConnectNonStdFromIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdFromIndexNo2.setStatus("current")
_ContainerConnectNonStdFromIndexNo3_Type = Unsigned32
_ContainerConnectNonStdFromIndexNo3_Object = MibTableColumn
containerConnectNonStdFromIndexNo3 = _ContainerConnectNonStdFromIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 4),
    _ContainerConnectNonStdFromIndexNo3_Type()
)
containerConnectNonStdFromIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdFromIndexNo3.setStatus("current")
_ContainerConnectNonStdFromIndexNo4_Type = Unsigned32
_ContainerConnectNonStdFromIndexNo4_Object = MibTableColumn
containerConnectNonStdFromIndexNo4 = _ContainerConnectNonStdFromIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 5),
    _ContainerConnectNonStdFromIndexNo4_Type()
)
containerConnectNonStdFromIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdFromIndexNo4.setStatus("current")
_ContainerConnectNonStdFromClassName_Type = EntityClassName
_ContainerConnectNonStdFromClassName_Object = MibTableColumn
containerConnectNonStdFromClassName = _ContainerConnectNonStdFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 6),
    _ContainerConnectNonStdFromClassName_Type()
)
containerConnectNonStdFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdFromClassName.setStatus("current")
_ContainerConnectNonStdToIndexNo1_Type = Unsigned32
_ContainerConnectNonStdToIndexNo1_Object = MibTableColumn
containerConnectNonStdToIndexNo1 = _ContainerConnectNonStdToIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 7),
    _ContainerConnectNonStdToIndexNo1_Type()
)
containerConnectNonStdToIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdToIndexNo1.setStatus("current")
_ContainerConnectNonStdToIndexNo2_Type = Unsigned32
_ContainerConnectNonStdToIndexNo2_Object = MibTableColumn
containerConnectNonStdToIndexNo2 = _ContainerConnectNonStdToIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 8),
    _ContainerConnectNonStdToIndexNo2_Type()
)
containerConnectNonStdToIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdToIndexNo2.setStatus("current")
_ContainerConnectNonStdToIndexNo3_Type = Unsigned32
_ContainerConnectNonStdToIndexNo3_Object = MibTableColumn
containerConnectNonStdToIndexNo3 = _ContainerConnectNonStdToIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 9),
    _ContainerConnectNonStdToIndexNo3_Type()
)
containerConnectNonStdToIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdToIndexNo3.setStatus("current")
_ContainerConnectNonStdToIndexNo4_Type = Unsigned32
_ContainerConnectNonStdToIndexNo4_Object = MibTableColumn
containerConnectNonStdToIndexNo4 = _ContainerConnectNonStdToIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 10),
    _ContainerConnectNonStdToIndexNo4_Type()
)
containerConnectNonStdToIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdToIndexNo4.setStatus("current")
_ContainerConnectNonStdToClassName_Type = EntityClassName
_ContainerConnectNonStdToClassName_Object = MibTableColumn
containerConnectNonStdToClassName = _ContainerConnectNonStdToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 11),
    _ContainerConnectNonStdToClassName_Type()
)
containerConnectNonStdToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdToClassName.setStatus("current")
_ContainerConnectNonStdClassName_Type = EntityClassName
_ContainerConnectNonStdClassName_Object = MibTableColumn
containerConnectNonStdClassName = _ContainerConnectNonStdClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 12),
    _ContainerConnectNonStdClassName_Type()
)
containerConnectNonStdClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerConnectNonStdClassName.setStatus("current")
_ContainerConnectNonStdAidString_Type = SnmpAdminString
_ContainerConnectNonStdAidString_Object = MibTableColumn
containerConnectNonStdAidString = _ContainerConnectNonStdAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 13),
    _ContainerConnectNonStdAidString_Type()
)
containerConnectNonStdAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdAidString.setStatus("current")
_ContainerConnectNonStdFromId_Type = RowPointer
_ContainerConnectNonStdFromId_Object = MibTableColumn
containerConnectNonStdFromId = _ContainerConnectNonStdFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 14),
    _ContainerConnectNonStdFromId_Type()
)
containerConnectNonStdFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdFromId.setStatus("current")
_ContainerConnectNonStdToId_Type = RowPointer
_ContainerConnectNonStdToId_Object = MibTableColumn
containerConnectNonStdToId = _ContainerConnectNonStdToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 15),
    _ContainerConnectNonStdToId_Type()
)
containerConnectNonStdToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdToId.setStatus("current")
_ContainerConnectNonStdClass_Type = EntityClass
_ContainerConnectNonStdClass_Object = MibTableColumn
containerConnectNonStdClass = _ContainerConnectNonStdClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 16),
    _ContainerConnectNonStdClass_Type()
)
containerConnectNonStdClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdClass.setStatus("current")
_ContainerConnectNonStdTableId_Type = RowPointer
_ContainerConnectNonStdTableId_Object = MibTableColumn
containerConnectNonStdTableId = _ContainerConnectNonStdTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 17),
    _ContainerConnectNonStdTableId_Type()
)
containerConnectNonStdTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdTableId.setStatus("current")
_ContainerConnectNonStdParentId_Type = RowPointer
_ContainerConnectNonStdParentId_Object = MibTableColumn
containerConnectNonStdParentId = _ContainerConnectNonStdParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 12, 1, 18),
    _ContainerConnectNonStdParentId_Type()
)
containerConnectNonStdParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerConnectNonStdParentId.setStatus("current")
_ContainerExternalPortTable_Object = MibTable
containerExternalPortTable = _ContainerExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13)
)
if mibBuilder.loadTexts:
    containerExternalPortTable.setStatus("current")
_ContainerExternalPortEntry_Object = MibTableRow
containerExternalPortEntry = _ContainerExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1)
)
containerExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalPortClassName"),
)
if mibBuilder.loadTexts:
    containerExternalPortEntry.setStatus("current")
_ContainerExternalPortShelfNo_Type = Unsigned32
_ContainerExternalPortShelfNo_Object = MibTableColumn
containerExternalPortShelfNo = _ContainerExternalPortShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 1),
    _ContainerExternalPortShelfNo_Type()
)
containerExternalPortShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalPortShelfNo.setStatus("current")
_ContainerExternalPortSlotNo_Type = Unsigned32
_ContainerExternalPortSlotNo_Object = MibTableColumn
containerExternalPortSlotNo = _ContainerExternalPortSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 2),
    _ContainerExternalPortSlotNo_Type()
)
containerExternalPortSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalPortSlotNo.setStatus("current")
_ContainerExternalPortPortNo_Type = Unsigned32
_ContainerExternalPortPortNo_Object = MibTableColumn
containerExternalPortPortNo = _ContainerExternalPortPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 3),
    _ContainerExternalPortPortNo_Type()
)
containerExternalPortPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalPortPortNo.setStatus("current")
_ContainerExternalPortExtNo_Type = Unsigned32
_ContainerExternalPortExtNo_Object = MibTableColumn
containerExternalPortExtNo = _ContainerExternalPortExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 4),
    _ContainerExternalPortExtNo_Type()
)
containerExternalPortExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalPortExtNo.setStatus("current")
_ContainerExternalPortClassName_Type = EntityClassName
_ContainerExternalPortClassName_Object = MibTableColumn
containerExternalPortClassName = _ContainerExternalPortClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 5),
    _ContainerExternalPortClassName_Type()
)
containerExternalPortClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalPortClassName.setStatus("current")
_ContainerExternalPortAidString_Type = SnmpAdminString
_ContainerExternalPortAidString_Object = MibTableColumn
containerExternalPortAidString = _ContainerExternalPortAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 6),
    _ContainerExternalPortAidString_Type()
)
containerExternalPortAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalPortAidString.setStatus("current")
_ContainerExternalPortClass_Type = EntityClass
_ContainerExternalPortClass_Object = MibTableColumn
containerExternalPortClass = _ContainerExternalPortClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 7),
    _ContainerExternalPortClass_Type()
)
containerExternalPortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalPortClass.setStatus("current")
_ContainerExternalPortTableId_Type = RowPointer
_ContainerExternalPortTableId_Object = MibTableColumn
containerExternalPortTableId = _ContainerExternalPortTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 8),
    _ContainerExternalPortTableId_Type()
)
containerExternalPortTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalPortTableId.setStatus("current")
_ContainerExternalPortParentId_Type = RowPointer
_ContainerExternalPortParentId_Object = MibTableColumn
containerExternalPortParentId = _ContainerExternalPortParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 13, 1, 9),
    _ContainerExternalPortParentId_Type()
)
containerExternalPortParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalPortParentId.setStatus("current")
_ContainerCrsOptLineTable_Object = MibTable
containerCrsOptLineTable = _ContainerCrsOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14)
)
if mibBuilder.loadTexts:
    containerCrsOptLineTable.setStatus("current")
_ContainerCrsOptLineEntry_Object = MibTableRow
containerCrsOptLineEntry = _ContainerCrsOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1)
)
containerCrsOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromClassName"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineToIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineToIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineToIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineToIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineToClassName"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineClassName"),
)
if mibBuilder.loadTexts:
    containerCrsOptLineEntry.setStatus("current")
_ContainerCrsOptLineFromIndexNo1_Type = Unsigned32
_ContainerCrsOptLineFromIndexNo1_Object = MibTableColumn
containerCrsOptLineFromIndexNo1 = _ContainerCrsOptLineFromIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 1),
    _ContainerCrsOptLineFromIndexNo1_Type()
)
containerCrsOptLineFromIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromIndexNo1.setStatus("current")
_ContainerCrsOptLineFromIndexNo2_Type = Unsigned32
_ContainerCrsOptLineFromIndexNo2_Object = MibTableColumn
containerCrsOptLineFromIndexNo2 = _ContainerCrsOptLineFromIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 2),
    _ContainerCrsOptLineFromIndexNo2_Type()
)
containerCrsOptLineFromIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromIndexNo2.setStatus("current")
_ContainerCrsOptLineFromIndexNo3_Type = Unsigned32
_ContainerCrsOptLineFromIndexNo3_Object = MibTableColumn
containerCrsOptLineFromIndexNo3 = _ContainerCrsOptLineFromIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 3),
    _ContainerCrsOptLineFromIndexNo3_Type()
)
containerCrsOptLineFromIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromIndexNo3.setStatus("current")
_ContainerCrsOptLineFromIndexNo4_Type = Unsigned32
_ContainerCrsOptLineFromIndexNo4_Object = MibTableColumn
containerCrsOptLineFromIndexNo4 = _ContainerCrsOptLineFromIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 4),
    _ContainerCrsOptLineFromIndexNo4_Type()
)
containerCrsOptLineFromIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromIndexNo4.setStatus("current")
_ContainerCrsOptLineFromClassName_Type = EntityClassName
_ContainerCrsOptLineFromClassName_Object = MibTableColumn
containerCrsOptLineFromClassName = _ContainerCrsOptLineFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 5),
    _ContainerCrsOptLineFromClassName_Type()
)
containerCrsOptLineFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromClassName.setStatus("current")
_ContainerCrsOptLineToIndexNo1_Type = Unsigned32
_ContainerCrsOptLineToIndexNo1_Object = MibTableColumn
containerCrsOptLineToIndexNo1 = _ContainerCrsOptLineToIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 6),
    _ContainerCrsOptLineToIndexNo1_Type()
)
containerCrsOptLineToIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineToIndexNo1.setStatus("current")
_ContainerCrsOptLineToIndexNo2_Type = Unsigned32
_ContainerCrsOptLineToIndexNo2_Object = MibTableColumn
containerCrsOptLineToIndexNo2 = _ContainerCrsOptLineToIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 7),
    _ContainerCrsOptLineToIndexNo2_Type()
)
containerCrsOptLineToIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineToIndexNo2.setStatus("current")
_ContainerCrsOptLineToIndexNo3_Type = Unsigned32
_ContainerCrsOptLineToIndexNo3_Object = MibTableColumn
containerCrsOptLineToIndexNo3 = _ContainerCrsOptLineToIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 8),
    _ContainerCrsOptLineToIndexNo3_Type()
)
containerCrsOptLineToIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineToIndexNo3.setStatus("current")
_ContainerCrsOptLineToIndexNo4_Type = Unsigned32
_ContainerCrsOptLineToIndexNo4_Object = MibTableColumn
containerCrsOptLineToIndexNo4 = _ContainerCrsOptLineToIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 9),
    _ContainerCrsOptLineToIndexNo4_Type()
)
containerCrsOptLineToIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineToIndexNo4.setStatus("current")
_ContainerCrsOptLineToClassName_Type = EntityClassName
_ContainerCrsOptLineToClassName_Object = MibTableColumn
containerCrsOptLineToClassName = _ContainerCrsOptLineToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 10),
    _ContainerCrsOptLineToClassName_Type()
)
containerCrsOptLineToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineToClassName.setStatus("current")
_ContainerCrsOptLineClassName_Type = EntityClassName
_ContainerCrsOptLineClassName_Object = MibTableColumn
containerCrsOptLineClassName = _ContainerCrsOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 11),
    _ContainerCrsOptLineClassName_Type()
)
containerCrsOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineClassName.setStatus("current")
_ContainerCrsOptLineAidString_Type = SnmpAdminString
_ContainerCrsOptLineAidString_Object = MibTableColumn
containerCrsOptLineAidString = _ContainerCrsOptLineAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 12),
    _ContainerCrsOptLineAidString_Type()
)
containerCrsOptLineAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineAidString.setStatus("current")
_ContainerCrsOptLineFromId_Type = RowPointer
_ContainerCrsOptLineFromId_Object = MibTableColumn
containerCrsOptLineFromId = _ContainerCrsOptLineFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 13),
    _ContainerCrsOptLineFromId_Type()
)
containerCrsOptLineFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromId.setStatus("current")
_ContainerCrsOptLineToId_Type = RowPointer
_ContainerCrsOptLineToId_Object = MibTableColumn
containerCrsOptLineToId = _ContainerCrsOptLineToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 14),
    _ContainerCrsOptLineToId_Type()
)
containerCrsOptLineToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineToId.setStatus("current")
_ContainerCrsOptLineClass_Type = EntityClass
_ContainerCrsOptLineClass_Object = MibTableColumn
containerCrsOptLineClass = _ContainerCrsOptLineClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 15),
    _ContainerCrsOptLineClass_Type()
)
containerCrsOptLineClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineClass.setStatus("current")
_ContainerCrsOptLineTableId_Type = RowPointer
_ContainerCrsOptLineTableId_Object = MibTableColumn
containerCrsOptLineTableId = _ContainerCrsOptLineTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 16),
    _ContainerCrsOptLineTableId_Type()
)
containerCrsOptLineTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineTableId.setStatus("current")
_ContainerCrsOptLineParentId_Type = RowPointer
_ContainerCrsOptLineParentId_Object = MibTableColumn
containerCrsOptLineParentId = _ContainerCrsOptLineParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 14, 1, 17),
    _ContainerCrsOptLineParentId_Type()
)
containerCrsOptLineParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineParentId.setStatus("current")
_ContainerCrsOptLineFromPointTable_Object = MibTable
containerCrsOptLineFromPointTable = _ContainerCrsOptLineFromPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15)
)
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointTable.setStatus("current")
_ContainerCrsOptLineFromPointEntry_Object = MibTableRow
containerCrsOptLineFromPointEntry = _ContainerCrsOptLineFromPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1)
)
containerCrsOptLineFromPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerCrsOptLineFromPointClassName"),
)
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointEntry.setStatus("current")
_ContainerCrsOptLineFromPointIndexNo1_Type = Unsigned32
_ContainerCrsOptLineFromPointIndexNo1_Object = MibTableColumn
containerCrsOptLineFromPointIndexNo1 = _ContainerCrsOptLineFromPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 1),
    _ContainerCrsOptLineFromPointIndexNo1_Type()
)
containerCrsOptLineFromPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointIndexNo1.setStatus("current")
_ContainerCrsOptLineFromPointIndexNo2_Type = Unsigned32
_ContainerCrsOptLineFromPointIndexNo2_Object = MibTableColumn
containerCrsOptLineFromPointIndexNo2 = _ContainerCrsOptLineFromPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 2),
    _ContainerCrsOptLineFromPointIndexNo2_Type()
)
containerCrsOptLineFromPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointIndexNo2.setStatus("current")
_ContainerCrsOptLineFromPointIndexNo3_Type = Unsigned32
_ContainerCrsOptLineFromPointIndexNo3_Object = MibTableColumn
containerCrsOptLineFromPointIndexNo3 = _ContainerCrsOptLineFromPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 3),
    _ContainerCrsOptLineFromPointIndexNo3_Type()
)
containerCrsOptLineFromPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointIndexNo3.setStatus("current")
_ContainerCrsOptLineFromPointIndexNo4_Type = Unsigned32
_ContainerCrsOptLineFromPointIndexNo4_Object = MibTableColumn
containerCrsOptLineFromPointIndexNo4 = _ContainerCrsOptLineFromPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 4),
    _ContainerCrsOptLineFromPointIndexNo4_Type()
)
containerCrsOptLineFromPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointIndexNo4.setStatus("current")
_ContainerCrsOptLineFromPointClassName_Type = EntityClassName
_ContainerCrsOptLineFromPointClassName_Object = MibTableColumn
containerCrsOptLineFromPointClassName = _ContainerCrsOptLineFromPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 5),
    _ContainerCrsOptLineFromPointClassName_Type()
)
containerCrsOptLineFromPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointClassName.setStatus("current")
_ContainerCrsOptLineFromPointAidString_Type = SnmpAdminString
_ContainerCrsOptLineFromPointAidString_Object = MibTableColumn
containerCrsOptLineFromPointAidString = _ContainerCrsOptLineFromPointAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 6),
    _ContainerCrsOptLineFromPointAidString_Type()
)
containerCrsOptLineFromPointAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointAidString.setStatus("current")
_ContainerCrsOptLineFromPointFromId_Type = RowPointer
_ContainerCrsOptLineFromPointFromId_Object = MibTableColumn
containerCrsOptLineFromPointFromId = _ContainerCrsOptLineFromPointFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 7),
    _ContainerCrsOptLineFromPointFromId_Type()
)
containerCrsOptLineFromPointFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointFromId.setStatus("current")
_ContainerCrsOptLineFromPointClass_Type = EntityClass
_ContainerCrsOptLineFromPointClass_Object = MibTableColumn
containerCrsOptLineFromPointClass = _ContainerCrsOptLineFromPointClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 8),
    _ContainerCrsOptLineFromPointClass_Type()
)
containerCrsOptLineFromPointClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointClass.setStatus("current")
_ContainerCrsOptLineFromPointTableId_Type = RowPointer
_ContainerCrsOptLineFromPointTableId_Object = MibTableColumn
containerCrsOptLineFromPointTableId = _ContainerCrsOptLineFromPointTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 9),
    _ContainerCrsOptLineFromPointTableId_Type()
)
containerCrsOptLineFromPointTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointTableId.setStatus("current")
_ContainerCrsOptLineFromPointParentId_Type = RowPointer
_ContainerCrsOptLineFromPointParentId_Object = MibTableColumn
containerCrsOptLineFromPointParentId = _ContainerCrsOptLineFromPointParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 15, 1, 10),
    _ContainerCrsOptLineFromPointParentId_Type()
)
containerCrsOptLineFromPointParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrsOptLineFromPointParentId.setStatus("current")
_ContainerExternalOmTable_Object = MibTable
containerExternalOmTable = _ContainerExternalOmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16)
)
if mibBuilder.loadTexts:
    containerExternalOmTable.setStatus("current")
_ContainerExternalOmEntry_Object = MibTableRow
containerExternalOmEntry = _ContainerExternalOmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1)
)
containerExternalOmEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerExternalOmShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalOmSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalOmPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalOmExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalOmClassName"),
)
if mibBuilder.loadTexts:
    containerExternalOmEntry.setStatus("current")
_ContainerExternalOmShelfNo_Type = Unsigned32
_ContainerExternalOmShelfNo_Object = MibTableColumn
containerExternalOmShelfNo = _ContainerExternalOmShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 1),
    _ContainerExternalOmShelfNo_Type()
)
containerExternalOmShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalOmShelfNo.setStatus("current")
_ContainerExternalOmSlotNo_Type = Unsigned32
_ContainerExternalOmSlotNo_Object = MibTableColumn
containerExternalOmSlotNo = _ContainerExternalOmSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 2),
    _ContainerExternalOmSlotNo_Type()
)
containerExternalOmSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalOmSlotNo.setStatus("current")
_ContainerExternalOmPortNo_Type = Unsigned32
_ContainerExternalOmPortNo_Object = MibTableColumn
containerExternalOmPortNo = _ContainerExternalOmPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 3),
    _ContainerExternalOmPortNo_Type()
)
containerExternalOmPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalOmPortNo.setStatus("current")
_ContainerExternalOmExtNo_Type = Unsigned32
_ContainerExternalOmExtNo_Object = MibTableColumn
containerExternalOmExtNo = _ContainerExternalOmExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 4),
    _ContainerExternalOmExtNo_Type()
)
containerExternalOmExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalOmExtNo.setStatus("current")
_ContainerExternalOmClassName_Type = EntityClassName
_ContainerExternalOmClassName_Object = MibTableColumn
containerExternalOmClassName = _ContainerExternalOmClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 5),
    _ContainerExternalOmClassName_Type()
)
containerExternalOmClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalOmClassName.setStatus("current")
_ContainerExternalOmAidString_Type = SnmpAdminString
_ContainerExternalOmAidString_Object = MibTableColumn
containerExternalOmAidString = _ContainerExternalOmAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 6),
    _ContainerExternalOmAidString_Type()
)
containerExternalOmAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalOmAidString.setStatus("current")
_ContainerExternalOmClass_Type = EntityClass
_ContainerExternalOmClass_Object = MibTableColumn
containerExternalOmClass = _ContainerExternalOmClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 7),
    _ContainerExternalOmClass_Type()
)
containerExternalOmClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalOmClass.setStatus("current")
_ContainerExternalOmTableId_Type = RowPointer
_ContainerExternalOmTableId_Object = MibTableColumn
containerExternalOmTableId = _ContainerExternalOmTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 8),
    _ContainerExternalOmTableId_Type()
)
containerExternalOmTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalOmTableId.setStatus("current")
_ContainerExternalOmParentId_Type = RowPointer
_ContainerExternalOmParentId_Object = MibTableColumn
containerExternalOmParentId = _ContainerExternalOmParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 16, 1, 9),
    _ContainerExternalOmParentId_Type()
)
containerExternalOmParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalOmParentId.setStatus("current")
_ContainerExternalVchTable_Object = MibTable
containerExternalVchTable = _ContainerExternalVchTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17)
)
if mibBuilder.loadTexts:
    containerExternalVchTable.setStatus("current")
_ContainerExternalVchEntry_Object = MibTableRow
containerExternalVchEntry = _ContainerExternalVchEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1)
)
containerExternalVchEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerExternalVchShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalVchSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalVchPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalVchExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerExternalVchClassName"),
)
if mibBuilder.loadTexts:
    containerExternalVchEntry.setStatus("current")
_ContainerExternalVchShelfNo_Type = Unsigned32
_ContainerExternalVchShelfNo_Object = MibTableColumn
containerExternalVchShelfNo = _ContainerExternalVchShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 1),
    _ContainerExternalVchShelfNo_Type()
)
containerExternalVchShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalVchShelfNo.setStatus("current")
_ContainerExternalVchSlotNo_Type = Unsigned32
_ContainerExternalVchSlotNo_Object = MibTableColumn
containerExternalVchSlotNo = _ContainerExternalVchSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 2),
    _ContainerExternalVchSlotNo_Type()
)
containerExternalVchSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalVchSlotNo.setStatus("current")
_ContainerExternalVchPortNo_Type = Unsigned32
_ContainerExternalVchPortNo_Object = MibTableColumn
containerExternalVchPortNo = _ContainerExternalVchPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 3),
    _ContainerExternalVchPortNo_Type()
)
containerExternalVchPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalVchPortNo.setStatus("current")
_ContainerExternalVchExtNo_Type = Unsigned32
_ContainerExternalVchExtNo_Object = MibTableColumn
containerExternalVchExtNo = _ContainerExternalVchExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 4),
    _ContainerExternalVchExtNo_Type()
)
containerExternalVchExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalVchExtNo.setStatus("current")
_ContainerExternalVchClassName_Type = EntityClassName
_ContainerExternalVchClassName_Object = MibTableColumn
containerExternalVchClassName = _ContainerExternalVchClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 5),
    _ContainerExternalVchClassName_Type()
)
containerExternalVchClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerExternalVchClassName.setStatus("current")
_ContainerExternalVchAidString_Type = SnmpAdminString
_ContainerExternalVchAidString_Object = MibTableColumn
containerExternalVchAidString = _ContainerExternalVchAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 6),
    _ContainerExternalVchAidString_Type()
)
containerExternalVchAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalVchAidString.setStatus("current")
_ContainerExternalVchClass_Type = EntityClass
_ContainerExternalVchClass_Object = MibTableColumn
containerExternalVchClass = _ContainerExternalVchClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 7),
    _ContainerExternalVchClass_Type()
)
containerExternalVchClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalVchClass.setStatus("current")
_ContainerExternalVchTableId_Type = RowPointer
_ContainerExternalVchTableId_Object = MibTableColumn
containerExternalVchTableId = _ContainerExternalVchTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 8),
    _ContainerExternalVchTableId_Type()
)
containerExternalVchTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalVchTableId.setStatus("current")
_ContainerExternalVchParentId_Type = RowPointer
_ContainerExternalVchParentId_Object = MibTableColumn
containerExternalVchParentId = _ContainerExternalVchParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 17, 1, 9),
    _ContainerExternalVchParentId_Type()
)
containerExternalVchParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerExternalVchParentId.setStatus("current")
_ContainerChTable_Object = MibTable
containerChTable = _ContainerChTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20)
)
if mibBuilder.loadTexts:
    containerChTable.setStatus("current")
_ContainerChEntry_Object = MibTableRow
containerChEntry = _ContainerChEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1)
)
containerChEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerChShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerChSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerChPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerChExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerChClassName"),
)
if mibBuilder.loadTexts:
    containerChEntry.setStatus("current")
_ContainerChShelfNo_Type = Unsigned32
_ContainerChShelfNo_Object = MibTableColumn
containerChShelfNo = _ContainerChShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 1),
    _ContainerChShelfNo_Type()
)
containerChShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerChShelfNo.setStatus("current")
_ContainerChSlotNo_Type = Unsigned32
_ContainerChSlotNo_Object = MibTableColumn
containerChSlotNo = _ContainerChSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 2),
    _ContainerChSlotNo_Type()
)
containerChSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerChSlotNo.setStatus("current")
_ContainerChPortNo_Type = Unsigned32
_ContainerChPortNo_Object = MibTableColumn
containerChPortNo = _ContainerChPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 3),
    _ContainerChPortNo_Type()
)
containerChPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerChPortNo.setStatus("current")
_ContainerChExtNo_Type = Unsigned32
_ContainerChExtNo_Object = MibTableColumn
containerChExtNo = _ContainerChExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 4),
    _ContainerChExtNo_Type()
)
containerChExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerChExtNo.setStatus("current")
_ContainerChClassName_Type = EntityClassName
_ContainerChClassName_Object = MibTableColumn
containerChClassName = _ContainerChClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 5),
    _ContainerChClassName_Type()
)
containerChClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerChClassName.setStatus("current")
_ContainerChAidString_Type = SnmpAdminString
_ContainerChAidString_Object = MibTableColumn
containerChAidString = _ContainerChAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 6),
    _ContainerChAidString_Type()
)
containerChAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerChAidString.setStatus("current")
_ContainerChClass_Type = EntityClass
_ContainerChClass_Object = MibTableColumn
containerChClass = _ContainerChClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 7),
    _ContainerChClass_Type()
)
containerChClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerChClass.setStatus("current")
_ContainerChTableId_Type = RowPointer
_ContainerChTableId_Object = MibTableColumn
containerChTableId = _ContainerChTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 8),
    _ContainerChTableId_Type()
)
containerChTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerChTableId.setStatus("current")
_ContainerChParentId_Type = RowPointer
_ContainerChParentId_Object = MibTableColumn
containerChParentId = _ContainerChParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 20, 1, 9),
    _ContainerChParentId_Type()
)
containerChParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerChParentId.setStatus("current")
_ContainerEthTable_Object = MibTable
containerEthTable = _ContainerEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21)
)
if mibBuilder.loadTexts:
    containerEthTable.setStatus("current")
_ContainerEthEntry_Object = MibTableRow
containerEthEntry = _ContainerEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1)
)
containerEthEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerEthShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerEthSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerEthPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerEthExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerEthClassName"),
)
if mibBuilder.loadTexts:
    containerEthEntry.setStatus("current")
_ContainerEthShelfNo_Type = Unsigned32
_ContainerEthShelfNo_Object = MibTableColumn
containerEthShelfNo = _ContainerEthShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 1),
    _ContainerEthShelfNo_Type()
)
containerEthShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEthShelfNo.setStatus("current")
_ContainerEthSlotNo_Type = Unsigned32
_ContainerEthSlotNo_Object = MibTableColumn
containerEthSlotNo = _ContainerEthSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 2),
    _ContainerEthSlotNo_Type()
)
containerEthSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEthSlotNo.setStatus("current")
_ContainerEthPortNo_Type = Unsigned32
_ContainerEthPortNo_Object = MibTableColumn
containerEthPortNo = _ContainerEthPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 3),
    _ContainerEthPortNo_Type()
)
containerEthPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEthPortNo.setStatus("current")
_ContainerEthExtNo_Type = Unsigned32
_ContainerEthExtNo_Object = MibTableColumn
containerEthExtNo = _ContainerEthExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 4),
    _ContainerEthExtNo_Type()
)
containerEthExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEthExtNo.setStatus("current")
_ContainerEthClassName_Type = EntityClassName
_ContainerEthClassName_Object = MibTableColumn
containerEthClassName = _ContainerEthClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 5),
    _ContainerEthClassName_Type()
)
containerEthClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEthClassName.setStatus("current")
_ContainerEthAidString_Type = SnmpAdminString
_ContainerEthAidString_Object = MibTableColumn
containerEthAidString = _ContainerEthAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 6),
    _ContainerEthAidString_Type()
)
containerEthAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEthAidString.setStatus("current")
_ContainerEthClass_Type = EntityClass
_ContainerEthClass_Object = MibTableColumn
containerEthClass = _ContainerEthClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 7),
    _ContainerEthClass_Type()
)
containerEthClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEthClass.setStatus("current")
_ContainerEthTableId_Type = RowPointer
_ContainerEthTableId_Object = MibTableColumn
containerEthTableId = _ContainerEthTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 8),
    _ContainerEthTableId_Type()
)
containerEthTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEthTableId.setStatus("current")
_ContainerEthParentId_Type = RowPointer
_ContainerEthParentId_Object = MibTableColumn
containerEthParentId = _ContainerEthParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 21, 1, 9),
    _ContainerEthParentId_Type()
)
containerEthParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEthParentId.setStatus("current")
_ContainerVethTable_Object = MibTable
containerVethTable = _ContainerVethTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22)
)
if mibBuilder.loadTexts:
    containerVethTable.setStatus("current")
_ContainerVethEntry_Object = MibTableRow
containerVethEntry = _ContainerVethEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1)
)
containerVethEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerVethShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerVethSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerVethPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerVethExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerVethClassName"),
)
if mibBuilder.loadTexts:
    containerVethEntry.setStatus("current")
_ContainerVethShelfNo_Type = Unsigned32
_ContainerVethShelfNo_Object = MibTableColumn
containerVethShelfNo = _ContainerVethShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 1),
    _ContainerVethShelfNo_Type()
)
containerVethShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVethShelfNo.setStatus("current")
_ContainerVethSlotNo_Type = Unsigned32
_ContainerVethSlotNo_Object = MibTableColumn
containerVethSlotNo = _ContainerVethSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 2),
    _ContainerVethSlotNo_Type()
)
containerVethSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVethSlotNo.setStatus("current")
_ContainerVethPortNo_Type = Unsigned32
_ContainerVethPortNo_Object = MibTableColumn
containerVethPortNo = _ContainerVethPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 3),
    _ContainerVethPortNo_Type()
)
containerVethPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVethPortNo.setStatus("current")
_ContainerVethExtNo_Type = Unsigned32
_ContainerVethExtNo_Object = MibTableColumn
containerVethExtNo = _ContainerVethExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 4),
    _ContainerVethExtNo_Type()
)
containerVethExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVethExtNo.setStatus("current")
_ContainerVethClassName_Type = EntityClassName
_ContainerVethClassName_Object = MibTableColumn
containerVethClassName = _ContainerVethClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 5),
    _ContainerVethClassName_Type()
)
containerVethClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVethClassName.setStatus("current")
_ContainerVethAidString_Type = SnmpAdminString
_ContainerVethAidString_Object = MibTableColumn
containerVethAidString = _ContainerVethAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 6),
    _ContainerVethAidString_Type()
)
containerVethAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVethAidString.setStatus("current")
_ContainerVethClass_Type = EntityClass
_ContainerVethClass_Object = MibTableColumn
containerVethClass = _ContainerVethClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 7),
    _ContainerVethClass_Type()
)
containerVethClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVethClass.setStatus("current")
_ContainerVethTableId_Type = RowPointer
_ContainerVethTableId_Object = MibTableColumn
containerVethTableId = _ContainerVethTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 8),
    _ContainerVethTableId_Type()
)
containerVethTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVethTableId.setStatus("current")
_ContainerVethParentId_Type = RowPointer
_ContainerVethParentId_Object = MibTableColumn
containerVethParentId = _ContainerVethParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 22, 1, 9),
    _ContainerVethParentId_Type()
)
containerVethParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVethParentId.setStatus("current")
_ContainerOtlgTable_Object = MibTable
containerOtlgTable = _ContainerOtlgTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23)
)
if mibBuilder.loadTexts:
    containerOtlgTable.setStatus("current")
_ContainerOtlgEntry_Object = MibTableRow
containerOtlgEntry = _ContainerOtlgEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1)
)
containerOtlgEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerOtlgShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerOtlgSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerOtlgPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerOtlgExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerOtlgClassName"),
)
if mibBuilder.loadTexts:
    containerOtlgEntry.setStatus("current")
_ContainerOtlgShelfNo_Type = Unsigned32
_ContainerOtlgShelfNo_Object = MibTableColumn
containerOtlgShelfNo = _ContainerOtlgShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 1),
    _ContainerOtlgShelfNo_Type()
)
containerOtlgShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOtlgShelfNo.setStatus("current")
_ContainerOtlgSlotNo_Type = Unsigned32
_ContainerOtlgSlotNo_Object = MibTableColumn
containerOtlgSlotNo = _ContainerOtlgSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 2),
    _ContainerOtlgSlotNo_Type()
)
containerOtlgSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOtlgSlotNo.setStatus("current")
_ContainerOtlgPortNo_Type = Unsigned32
_ContainerOtlgPortNo_Object = MibTableColumn
containerOtlgPortNo = _ContainerOtlgPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 3),
    _ContainerOtlgPortNo_Type()
)
containerOtlgPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOtlgPortNo.setStatus("current")
_ContainerOtlgExtNo_Type = Unsigned32
_ContainerOtlgExtNo_Object = MibTableColumn
containerOtlgExtNo = _ContainerOtlgExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 4),
    _ContainerOtlgExtNo_Type()
)
containerOtlgExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOtlgExtNo.setStatus("current")
_ContainerOtlgClassName_Type = EntityClassName
_ContainerOtlgClassName_Object = MibTableColumn
containerOtlgClassName = _ContainerOtlgClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 5),
    _ContainerOtlgClassName_Type()
)
containerOtlgClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOtlgClassName.setStatus("current")
_ContainerOtlgAidString_Type = SnmpAdminString
_ContainerOtlgAidString_Object = MibTableColumn
containerOtlgAidString = _ContainerOtlgAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 6),
    _ContainerOtlgAidString_Type()
)
containerOtlgAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOtlgAidString.setStatus("current")
_ContainerOtlgClass_Type = EntityClass
_ContainerOtlgClass_Object = MibTableColumn
containerOtlgClass = _ContainerOtlgClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 7),
    _ContainerOtlgClass_Type()
)
containerOtlgClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOtlgClass.setStatus("current")
_ContainerOtlgTableId_Type = RowPointer
_ContainerOtlgTableId_Object = MibTableColumn
containerOtlgTableId = _ContainerOtlgTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 8),
    _ContainerOtlgTableId_Type()
)
containerOtlgTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOtlgTableId.setStatus("current")
_ContainerOtlgParentId_Type = RowPointer
_ContainerOtlgParentId_Object = MibTableColumn
containerOtlgParentId = _ContainerOtlgParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 23, 1, 9),
    _ContainerOtlgParentId_Type()
)
containerOtlgParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOtlgParentId.setStatus("current")
_ContainerPchTable_Object = MibTable
containerPchTable = _ContainerPchTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24)
)
if mibBuilder.loadTexts:
    containerPchTable.setStatus("current")
_ContainerPchEntry_Object = MibTableRow
containerPchEntry = _ContainerPchEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1)
)
containerPchEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerPchShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerPchSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerPchPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerPchExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerPchClassName"),
)
if mibBuilder.loadTexts:
    containerPchEntry.setStatus("current")
_ContainerPchShelfNo_Type = Unsigned32
_ContainerPchShelfNo_Object = MibTableColumn
containerPchShelfNo = _ContainerPchShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 1),
    _ContainerPchShelfNo_Type()
)
containerPchShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPchShelfNo.setStatus("current")
_ContainerPchSlotNo_Type = Unsigned32
_ContainerPchSlotNo_Object = MibTableColumn
containerPchSlotNo = _ContainerPchSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 2),
    _ContainerPchSlotNo_Type()
)
containerPchSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPchSlotNo.setStatus("current")
_ContainerPchPortNo_Type = Unsigned32
_ContainerPchPortNo_Object = MibTableColumn
containerPchPortNo = _ContainerPchPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 3),
    _ContainerPchPortNo_Type()
)
containerPchPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPchPortNo.setStatus("current")
_ContainerPchExtNo_Type = Unsigned32
_ContainerPchExtNo_Object = MibTableColumn
containerPchExtNo = _ContainerPchExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 4),
    _ContainerPchExtNo_Type()
)
containerPchExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPchExtNo.setStatus("current")
_ContainerPchClassName_Type = EntityClassName
_ContainerPchClassName_Object = MibTableColumn
containerPchClassName = _ContainerPchClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 5),
    _ContainerPchClassName_Type()
)
containerPchClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerPchClassName.setStatus("current")
_ContainerPchAidString_Type = SnmpAdminString
_ContainerPchAidString_Object = MibTableColumn
containerPchAidString = _ContainerPchAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 6),
    _ContainerPchAidString_Type()
)
containerPchAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPchAidString.setStatus("current")
_ContainerPchClass_Type = EntityClass
_ContainerPchClass_Object = MibTableColumn
containerPchClass = _ContainerPchClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 7),
    _ContainerPchClass_Type()
)
containerPchClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPchClass.setStatus("current")
_ContainerPchTableId_Type = RowPointer
_ContainerPchTableId_Object = MibTableColumn
containerPchTableId = _ContainerPchTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 8),
    _ContainerPchTableId_Type()
)
containerPchTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPchTableId.setStatus("current")
_ContainerPchParentId_Type = RowPointer
_ContainerPchParentId_Object = MibTableColumn
containerPchParentId = _ContainerPchParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 24, 1, 9),
    _ContainerPchParentId_Type()
)
containerPchParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerPchParentId.setStatus("current")
_ContainerVschTable_Object = MibTable
containerVschTable = _ContainerVschTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25)
)
if mibBuilder.loadTexts:
    containerVschTable.setStatus("current")
_ContainerVschEntry_Object = MibTableRow
containerVschEntry = _ContainerVschEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1)
)
containerVschEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerVschShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerVschSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerVschPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerVschExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerVschClassName"),
)
if mibBuilder.loadTexts:
    containerVschEntry.setStatus("current")
_ContainerVschShelfNo_Type = Unsigned32
_ContainerVschShelfNo_Object = MibTableColumn
containerVschShelfNo = _ContainerVschShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 1),
    _ContainerVschShelfNo_Type()
)
containerVschShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVschShelfNo.setStatus("current")
_ContainerVschSlotNo_Type = Unsigned32
_ContainerVschSlotNo_Object = MibTableColumn
containerVschSlotNo = _ContainerVschSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 2),
    _ContainerVschSlotNo_Type()
)
containerVschSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVschSlotNo.setStatus("current")
_ContainerVschPortNo_Type = Unsigned32
_ContainerVschPortNo_Object = MibTableColumn
containerVschPortNo = _ContainerVschPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 3),
    _ContainerVschPortNo_Type()
)
containerVschPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVschPortNo.setStatus("current")
_ContainerVschExtNo_Type = Unsigned32
_ContainerVschExtNo_Object = MibTableColumn
containerVschExtNo = _ContainerVschExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 4),
    _ContainerVschExtNo_Type()
)
containerVschExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVschExtNo.setStatus("current")
_ContainerVschClassName_Type = EntityClassName
_ContainerVschClassName_Object = MibTableColumn
containerVschClassName = _ContainerVschClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 5),
    _ContainerVschClassName_Type()
)
containerVschClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVschClassName.setStatus("current")
_ContainerVschAidString_Type = SnmpAdminString
_ContainerVschAidString_Object = MibTableColumn
containerVschAidString = _ContainerVschAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 6),
    _ContainerVschAidString_Type()
)
containerVschAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVschAidString.setStatus("current")
_ContainerVschClass_Type = EntityClass
_ContainerVschClass_Object = MibTableColumn
containerVschClass = _ContainerVschClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 7),
    _ContainerVschClass_Type()
)
containerVschClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVschClass.setStatus("current")
_ContainerVschTableId_Type = RowPointer
_ContainerVschTableId_Object = MibTableColumn
containerVschTableId = _ContainerVschTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 8),
    _ContainerVschTableId_Type()
)
containerVschTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVschTableId.setStatus("current")
_ContainerVschParentId_Type = RowPointer
_ContainerVschParentId_Object = MibTableColumn
containerVschParentId = _ContainerVschParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 25, 1, 9),
    _ContainerVschParentId_Type()
)
containerVschParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVschParentId.setStatus("current")
_ContainerVch1Table_Object = MibTable
containerVch1Table = _ContainerVch1Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26)
)
if mibBuilder.loadTexts:
    containerVch1Table.setStatus("current")
_ContainerVch1Entry_Object = MibTableRow
containerVch1Entry = _ContainerVch1Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1)
)
containerVch1Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerVch1ShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerVch1SlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerVch1PortNo"),
    (0, "ADVA-FSPR7-MIB", "containerVch1ExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerVch1ClassName"),
)
if mibBuilder.loadTexts:
    containerVch1Entry.setStatus("current")
_ContainerVch1ShelfNo_Type = Unsigned32
_ContainerVch1ShelfNo_Object = MibTableColumn
containerVch1ShelfNo = _ContainerVch1ShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 1),
    _ContainerVch1ShelfNo_Type()
)
containerVch1ShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVch1ShelfNo.setStatus("current")
_ContainerVch1SlotNo_Type = Unsigned32
_ContainerVch1SlotNo_Object = MibTableColumn
containerVch1SlotNo = _ContainerVch1SlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 2),
    _ContainerVch1SlotNo_Type()
)
containerVch1SlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVch1SlotNo.setStatus("current")
_ContainerVch1PortNo_Type = Unsigned32
_ContainerVch1PortNo_Object = MibTableColumn
containerVch1PortNo = _ContainerVch1PortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 3),
    _ContainerVch1PortNo_Type()
)
containerVch1PortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVch1PortNo.setStatus("current")
_ContainerVch1ExtNo_Type = Unsigned32
_ContainerVch1ExtNo_Object = MibTableColumn
containerVch1ExtNo = _ContainerVch1ExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 4),
    _ContainerVch1ExtNo_Type()
)
containerVch1ExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVch1ExtNo.setStatus("current")
_ContainerVch1ClassName_Type = EntityClassName
_ContainerVch1ClassName_Object = MibTableColumn
containerVch1ClassName = _ContainerVch1ClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 5),
    _ContainerVch1ClassName_Type()
)
containerVch1ClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVch1ClassName.setStatus("current")
_ContainerVch1AidString_Type = SnmpAdminString
_ContainerVch1AidString_Object = MibTableColumn
containerVch1AidString = _ContainerVch1AidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 6),
    _ContainerVch1AidString_Type()
)
containerVch1AidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVch1AidString.setStatus("current")
_ContainerVch1Class_Type = EntityClass
_ContainerVch1Class_Object = MibTableColumn
containerVch1Class = _ContainerVch1Class_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 7),
    _ContainerVch1Class_Type()
)
containerVch1Class.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVch1Class.setStatus("current")
_ContainerVch1TableId_Type = RowPointer
_ContainerVch1TableId_Object = MibTableColumn
containerVch1TableId = _ContainerVch1TableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 8),
    _ContainerVch1TableId_Type()
)
containerVch1TableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVch1TableId.setStatus("current")
_ContainerVch1ParentId_Type = RowPointer
_ContainerVch1ParentId_Object = MibTableColumn
containerVch1ParentId = _ContainerVch1ParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 26, 1, 9),
    _ContainerVch1ParentId_Type()
)
containerVch1ParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVch1ParentId.setStatus("current")
_ContainerOmTable_Object = MibTable
containerOmTable = _ContainerOmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40)
)
if mibBuilder.loadTexts:
    containerOmTable.setStatus("current")
_ContainerOmEntry_Object = MibTableRow
containerOmEntry = _ContainerOmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1)
)
containerOmEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerOmShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerOmSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerOmPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerOmExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerOmClassName"),
)
if mibBuilder.loadTexts:
    containerOmEntry.setStatus("current")
_ContainerOmShelfNo_Type = Unsigned32
_ContainerOmShelfNo_Object = MibTableColumn
containerOmShelfNo = _ContainerOmShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 1),
    _ContainerOmShelfNo_Type()
)
containerOmShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOmShelfNo.setStatus("current")
_ContainerOmSlotNo_Type = Unsigned32
_ContainerOmSlotNo_Object = MibTableColumn
containerOmSlotNo = _ContainerOmSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 2),
    _ContainerOmSlotNo_Type()
)
containerOmSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOmSlotNo.setStatus("current")
_ContainerOmPortNo_Type = Unsigned32
_ContainerOmPortNo_Object = MibTableColumn
containerOmPortNo = _ContainerOmPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 3),
    _ContainerOmPortNo_Type()
)
containerOmPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOmPortNo.setStatus("current")
_ContainerOmExtNo_Type = Unsigned32
_ContainerOmExtNo_Object = MibTableColumn
containerOmExtNo = _ContainerOmExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 4),
    _ContainerOmExtNo_Type()
)
containerOmExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOmExtNo.setStatus("current")
_ContainerOmClassName_Type = EntityClassName
_ContainerOmClassName_Object = MibTableColumn
containerOmClassName = _ContainerOmClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 5),
    _ContainerOmClassName_Type()
)
containerOmClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOmClassName.setStatus("current")
_ContainerOmAidString_Type = SnmpAdminString
_ContainerOmAidString_Object = MibTableColumn
containerOmAidString = _ContainerOmAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 6),
    _ContainerOmAidString_Type()
)
containerOmAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOmAidString.setStatus("current")
_ContainerOmClass_Type = EntityClass
_ContainerOmClass_Object = MibTableColumn
containerOmClass = _ContainerOmClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 7),
    _ContainerOmClass_Type()
)
containerOmClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOmClass.setStatus("current")
_ContainerOmTableId_Type = RowPointer
_ContainerOmTableId_Object = MibTableColumn
containerOmTableId = _ContainerOmTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 8),
    _ContainerOmTableId_Type()
)
containerOmTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOmTableId.setStatus("current")
_ContainerOmParentId_Type = RowPointer
_ContainerOmParentId_Object = MibTableColumn
containerOmParentId = _ContainerOmParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 40, 1, 9),
    _ContainerOmParentId_Type()
)
containerOmParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOmParentId.setStatus("current")
_ContainerVomTable_Object = MibTable
containerVomTable = _ContainerVomTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41)
)
if mibBuilder.loadTexts:
    containerVomTable.setStatus("current")
_ContainerVomEntry_Object = MibTableRow
containerVomEntry = _ContainerVomEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1)
)
containerVomEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerVomShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerVomSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerVomPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerVomExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerVomClassName"),
)
if mibBuilder.loadTexts:
    containerVomEntry.setStatus("current")
_ContainerVomShelfNo_Type = Unsigned32
_ContainerVomShelfNo_Object = MibTableColumn
containerVomShelfNo = _ContainerVomShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 1),
    _ContainerVomShelfNo_Type()
)
containerVomShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVomShelfNo.setStatus("current")
_ContainerVomSlotNo_Type = Unsigned32
_ContainerVomSlotNo_Object = MibTableColumn
containerVomSlotNo = _ContainerVomSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 2),
    _ContainerVomSlotNo_Type()
)
containerVomSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVomSlotNo.setStatus("current")
_ContainerVomPortNo_Type = Unsigned32
_ContainerVomPortNo_Object = MibTableColumn
containerVomPortNo = _ContainerVomPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 3),
    _ContainerVomPortNo_Type()
)
containerVomPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVomPortNo.setStatus("current")
_ContainerVomExtNo_Type = Unsigned32
_ContainerVomExtNo_Object = MibTableColumn
containerVomExtNo = _ContainerVomExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 4),
    _ContainerVomExtNo_Type()
)
containerVomExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVomExtNo.setStatus("current")
_ContainerVomClassName_Type = EntityClassName
_ContainerVomClassName_Object = MibTableColumn
containerVomClassName = _ContainerVomClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 5),
    _ContainerVomClassName_Type()
)
containerVomClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerVomClassName.setStatus("current")
_ContainerVomAidString_Type = SnmpAdminString
_ContainerVomAidString_Object = MibTableColumn
containerVomAidString = _ContainerVomAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 6),
    _ContainerVomAidString_Type()
)
containerVomAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVomAidString.setStatus("current")
_ContainerVomClass_Type = EntityClass
_ContainerVomClass_Object = MibTableColumn
containerVomClass = _ContainerVomClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 7),
    _ContainerVomClass_Type()
)
containerVomClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVomClass.setStatus("current")
_ContainerVomTableId_Type = RowPointer
_ContainerVomTableId_Object = MibTableColumn
containerVomTableId = _ContainerVomTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 8),
    _ContainerVomTableId_Type()
)
containerVomTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVomTableId.setStatus("current")
_ContainerVomParentId_Type = RowPointer
_ContainerVomParentId_Object = MibTableColumn
containerVomParentId = _ContainerVomParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 41, 1, 9),
    _ContainerVomParentId_Type()
)
containerVomParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVomParentId.setStatus("current")
_ContainerShelfConnTable_Object = MibTable
containerShelfConnTable = _ContainerShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50)
)
if mibBuilder.loadTexts:
    containerShelfConnTable.setStatus("current")
_ContainerShelfConnEntry_Object = MibTableRow
containerShelfConnEntry = _ContainerShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1)
)
containerShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerShelfConnClassName"),
)
if mibBuilder.loadTexts:
    containerShelfConnEntry.setStatus("current")
_ContainerShelfConnShelfNo_Type = Unsigned32
_ContainerShelfConnShelfNo_Object = MibTableColumn
containerShelfConnShelfNo = _ContainerShelfConnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 1),
    _ContainerShelfConnShelfNo_Type()
)
containerShelfConnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfConnShelfNo.setStatus("current")
_ContainerShelfConnSlotNo_Type = Unsigned32
_ContainerShelfConnSlotNo_Object = MibTableColumn
containerShelfConnSlotNo = _ContainerShelfConnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 2),
    _ContainerShelfConnSlotNo_Type()
)
containerShelfConnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfConnSlotNo.setStatus("current")
_ContainerShelfConnPortNo_Type = Unsigned32
_ContainerShelfConnPortNo_Object = MibTableColumn
containerShelfConnPortNo = _ContainerShelfConnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 3),
    _ContainerShelfConnPortNo_Type()
)
containerShelfConnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfConnPortNo.setStatus("current")
_ContainerShelfConnExtNo_Type = Unsigned32
_ContainerShelfConnExtNo_Object = MibTableColumn
containerShelfConnExtNo = _ContainerShelfConnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 4),
    _ContainerShelfConnExtNo_Type()
)
containerShelfConnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfConnExtNo.setStatus("current")
_ContainerShelfConnClassName_Type = EntityClassName
_ContainerShelfConnClassName_Object = MibTableColumn
containerShelfConnClassName = _ContainerShelfConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 5),
    _ContainerShelfConnClassName_Type()
)
containerShelfConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerShelfConnClassName.setStatus("current")
_ContainerShelfConnAidString_Type = SnmpAdminString
_ContainerShelfConnAidString_Object = MibTableColumn
containerShelfConnAidString = _ContainerShelfConnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 6),
    _ContainerShelfConnAidString_Type()
)
containerShelfConnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfConnAidString.setStatus("current")
_ContainerShelfConnClass_Type = EntityClass
_ContainerShelfConnClass_Object = MibTableColumn
containerShelfConnClass = _ContainerShelfConnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 7),
    _ContainerShelfConnClass_Type()
)
containerShelfConnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfConnClass.setStatus("current")
_ContainerShelfConnTableId_Type = RowPointer
_ContainerShelfConnTableId_Object = MibTableColumn
containerShelfConnTableId = _ContainerShelfConnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 8),
    _ContainerShelfConnTableId_Type()
)
containerShelfConnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfConnTableId.setStatus("current")
_ContainerShelfConnParentId_Type = RowPointer
_ContainerShelfConnParentId_Object = MibTableColumn
containerShelfConnParentId = _ContainerShelfConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 50, 1, 9),
    _ContainerShelfConnParentId_Type()
)
containerShelfConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfConnParentId.setStatus("current")
_ContainerFfpTable_Object = MibTable
containerFfpTable = _ContainerFfpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60)
)
if mibBuilder.loadTexts:
    containerFfpTable.setStatus("current")
_ContainerFfpEntry_Object = MibTableRow
containerFfpEntry = _ContainerFfpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1)
)
containerFfpEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerFfpShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerFfpSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerFfpPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerFfpExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerFfpClassName"),
)
if mibBuilder.loadTexts:
    containerFfpEntry.setStatus("current")
_ContainerFfpShelfNo_Type = Unsigned32
_ContainerFfpShelfNo_Object = MibTableColumn
containerFfpShelfNo = _ContainerFfpShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 1),
    _ContainerFfpShelfNo_Type()
)
containerFfpShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFfpShelfNo.setStatus("current")
_ContainerFfpSlotNo_Type = Unsigned32
_ContainerFfpSlotNo_Object = MibTableColumn
containerFfpSlotNo = _ContainerFfpSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 2),
    _ContainerFfpSlotNo_Type()
)
containerFfpSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFfpSlotNo.setStatus("current")
_ContainerFfpPortNo_Type = Unsigned32
_ContainerFfpPortNo_Object = MibTableColumn
containerFfpPortNo = _ContainerFfpPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 3),
    _ContainerFfpPortNo_Type()
)
containerFfpPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFfpPortNo.setStatus("current")
_ContainerFfpExtNo_Type = Unsigned32
_ContainerFfpExtNo_Object = MibTableColumn
containerFfpExtNo = _ContainerFfpExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 4),
    _ContainerFfpExtNo_Type()
)
containerFfpExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFfpExtNo.setStatus("current")
_ContainerFfpClassName_Type = EntityClassName
_ContainerFfpClassName_Object = MibTableColumn
containerFfpClassName = _ContainerFfpClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 5),
    _ContainerFfpClassName_Type()
)
containerFfpClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerFfpClassName.setStatus("current")
_ContainerFfpAidString_Type = SnmpAdminString
_ContainerFfpAidString_Object = MibTableColumn
containerFfpAidString = _ContainerFfpAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 6),
    _ContainerFfpAidString_Type()
)
containerFfpAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFfpAidString.setStatus("current")
_ContainerFfpClass_Type = EntityClass
_ContainerFfpClass_Object = MibTableColumn
containerFfpClass = _ContainerFfpClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 7),
    _ContainerFfpClass_Type()
)
containerFfpClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFfpClass.setStatus("current")
_ContainerFfpTableId_Type = RowPointer
_ContainerFfpTableId_Object = MibTableColumn
containerFfpTableId = _ContainerFfpTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 8),
    _ContainerFfpTableId_Type()
)
containerFfpTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFfpTableId.setStatus("current")
_ContainerFfpParentId_Type = RowPointer
_ContainerFfpParentId_Object = MibTableColumn
containerFfpParentId = _ContainerFfpParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 60, 1, 9),
    _ContainerFfpParentId_Type()
)
containerFfpParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerFfpParentId.setStatus("current")
_ContainerEccTable_Object = MibTable
containerEccTable = _ContainerEccTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70)
)
if mibBuilder.loadTexts:
    containerEccTable.setStatus("current")
_ContainerEccEntry_Object = MibTableRow
containerEccEntry = _ContainerEccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1)
)
containerEccEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerEccShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerEccSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerEccPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerEccExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerEccClassName"),
)
if mibBuilder.loadTexts:
    containerEccEntry.setStatus("current")
_ContainerEccShelfNo_Type = Unsigned32
_ContainerEccShelfNo_Object = MibTableColumn
containerEccShelfNo = _ContainerEccShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 1),
    _ContainerEccShelfNo_Type()
)
containerEccShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEccShelfNo.setStatus("current")
_ContainerEccSlotNo_Type = Unsigned32
_ContainerEccSlotNo_Object = MibTableColumn
containerEccSlotNo = _ContainerEccSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 2),
    _ContainerEccSlotNo_Type()
)
containerEccSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEccSlotNo.setStatus("current")
_ContainerEccPortNo_Type = Unsigned32
_ContainerEccPortNo_Object = MibTableColumn
containerEccPortNo = _ContainerEccPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 3),
    _ContainerEccPortNo_Type()
)
containerEccPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEccPortNo.setStatus("current")
_ContainerEccExtNo_Type = Unsigned32
_ContainerEccExtNo_Object = MibTableColumn
containerEccExtNo = _ContainerEccExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 4),
    _ContainerEccExtNo_Type()
)
containerEccExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEccExtNo.setStatus("current")
_ContainerEccClassName_Type = EntityClassName
_ContainerEccClassName_Object = MibTableColumn
containerEccClassName = _ContainerEccClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 5),
    _ContainerEccClassName_Type()
)
containerEccClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEccClassName.setStatus("current")
_ContainerEccAidString_Type = SnmpAdminString
_ContainerEccAidString_Object = MibTableColumn
containerEccAidString = _ContainerEccAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 6),
    _ContainerEccAidString_Type()
)
containerEccAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEccAidString.setStatus("current")
_ContainerEccClass_Type = EntityClass
_ContainerEccClass_Object = MibTableColumn
containerEccClass = _ContainerEccClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 7),
    _ContainerEccClass_Type()
)
containerEccClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEccClass.setStatus("current")
_ContainerEccTableId_Type = RowPointer
_ContainerEccTableId_Object = MibTableColumn
containerEccTableId = _ContainerEccTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 8),
    _ContainerEccTableId_Type()
)
containerEccTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEccTableId.setStatus("current")
_ContainerEccParentId_Type = RowPointer
_ContainerEccParentId_Object = MibTableColumn
containerEccParentId = _ContainerEccParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 70, 1, 9),
    _ContainerEccParentId_Type()
)
containerEccParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEccParentId.setStatus("current")
_ContainerLinkTable_Object = MibTable
containerLinkTable = _ContainerLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71)
)
if mibBuilder.loadTexts:
    containerLinkTable.setStatus("current")
_ContainerLinkEntry_Object = MibTableRow
containerLinkEntry = _ContainerLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1)
)
containerLinkEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerLinkShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerLinkSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerLinkPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerLinkExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerLinkClassName"),
)
if mibBuilder.loadTexts:
    containerLinkEntry.setStatus("current")
_ContainerLinkShelfNo_Type = Unsigned32
_ContainerLinkShelfNo_Object = MibTableColumn
containerLinkShelfNo = _ContainerLinkShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 1),
    _ContainerLinkShelfNo_Type()
)
containerLinkShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLinkShelfNo.setStatus("current")
_ContainerLinkSlotNo_Type = Unsigned32
_ContainerLinkSlotNo_Object = MibTableColumn
containerLinkSlotNo = _ContainerLinkSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 2),
    _ContainerLinkSlotNo_Type()
)
containerLinkSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLinkSlotNo.setStatus("current")
_ContainerLinkPortNo_Type = Unsigned32
_ContainerLinkPortNo_Object = MibTableColumn
containerLinkPortNo = _ContainerLinkPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 3),
    _ContainerLinkPortNo_Type()
)
containerLinkPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLinkPortNo.setStatus("current")
_ContainerLinkExtNo_Type = Unsigned32
_ContainerLinkExtNo_Object = MibTableColumn
containerLinkExtNo = _ContainerLinkExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 4),
    _ContainerLinkExtNo_Type()
)
containerLinkExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLinkExtNo.setStatus("current")
_ContainerLinkClassName_Type = EntityClassName
_ContainerLinkClassName_Object = MibTableColumn
containerLinkClassName = _ContainerLinkClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 5),
    _ContainerLinkClassName_Type()
)
containerLinkClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLinkClassName.setStatus("current")
_ContainerLinkAidString_Type = SnmpAdminString
_ContainerLinkAidString_Object = MibTableColumn
containerLinkAidString = _ContainerLinkAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 6),
    _ContainerLinkAidString_Type()
)
containerLinkAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLinkAidString.setStatus("current")
_ContainerLinkClass_Type = EntityClass
_ContainerLinkClass_Object = MibTableColumn
containerLinkClass = _ContainerLinkClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 7),
    _ContainerLinkClass_Type()
)
containerLinkClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLinkClass.setStatus("current")
_ContainerLinkTableId_Type = RowPointer
_ContainerLinkTableId_Object = MibTableColumn
containerLinkTableId = _ContainerLinkTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 8),
    _ContainerLinkTableId_Type()
)
containerLinkTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLinkTableId.setStatus("current")
_ContainerLinkParentId_Type = RowPointer
_ContainerLinkParentId_Object = MibTableColumn
containerLinkParentId = _ContainerLinkParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 71, 1, 9),
    _ContainerLinkParentId_Type()
)
containerLinkParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLinkParentId.setStatus("current")
_ContainerScTable_Object = MibTable
containerScTable = _ContainerScTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72)
)
if mibBuilder.loadTexts:
    containerScTable.setStatus("current")
_ContainerScEntry_Object = MibTableRow
containerScEntry = _ContainerScEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1)
)
containerScEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerScShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerScSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerScPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerScExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerScClassName"),
)
if mibBuilder.loadTexts:
    containerScEntry.setStatus("current")
_ContainerScShelfNo_Type = Unsigned32
_ContainerScShelfNo_Object = MibTableColumn
containerScShelfNo = _ContainerScShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 1),
    _ContainerScShelfNo_Type()
)
containerScShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerScShelfNo.setStatus("current")
_ContainerScSlotNo_Type = Unsigned32
_ContainerScSlotNo_Object = MibTableColumn
containerScSlotNo = _ContainerScSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 2),
    _ContainerScSlotNo_Type()
)
containerScSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerScSlotNo.setStatus("current")
_ContainerScPortNo_Type = Unsigned32
_ContainerScPortNo_Object = MibTableColumn
containerScPortNo = _ContainerScPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 3),
    _ContainerScPortNo_Type()
)
containerScPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerScPortNo.setStatus("current")
_ContainerScExtNo_Type = Unsigned32
_ContainerScExtNo_Object = MibTableColumn
containerScExtNo = _ContainerScExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 4),
    _ContainerScExtNo_Type()
)
containerScExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerScExtNo.setStatus("current")
_ContainerScClassName_Type = EntityClassName
_ContainerScClassName_Object = MibTableColumn
containerScClassName = _ContainerScClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 5),
    _ContainerScClassName_Type()
)
containerScClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerScClassName.setStatus("current")
_ContainerScAidString_Type = SnmpAdminString
_ContainerScAidString_Object = MibTableColumn
containerScAidString = _ContainerScAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 6),
    _ContainerScAidString_Type()
)
containerScAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerScAidString.setStatus("current")
_ContainerScClass_Type = EntityClass
_ContainerScClass_Object = MibTableColumn
containerScClass = _ContainerScClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 7),
    _ContainerScClass_Type()
)
containerScClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerScClass.setStatus("current")
_ContainerScTableId_Type = RowPointer
_ContainerScTableId_Object = MibTableColumn
containerScTableId = _ContainerScTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 8),
    _ContainerScTableId_Type()
)
containerScTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerScTableId.setStatus("current")
_ContainerScParentId_Type = RowPointer
_ContainerScParentId_Object = MibTableColumn
containerScParentId = _ContainerScParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 72, 1, 9),
    _ContainerScParentId_Type()
)
containerScParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerScParentId.setStatus("current")
_ContainerLanTable_Object = MibTable
containerLanTable = _ContainerLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73)
)
if mibBuilder.loadTexts:
    containerLanTable.setStatus("current")
_ContainerLanEntry_Object = MibTableRow
containerLanEntry = _ContainerLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1)
)
containerLanEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerLanShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerLanSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerLanPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerLanExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerLanClassName"),
)
if mibBuilder.loadTexts:
    containerLanEntry.setStatus("current")
_ContainerLanShelfNo_Type = Unsigned32
_ContainerLanShelfNo_Object = MibTableColumn
containerLanShelfNo = _ContainerLanShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 1),
    _ContainerLanShelfNo_Type()
)
containerLanShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLanShelfNo.setStatus("current")
_ContainerLanSlotNo_Type = Unsigned32
_ContainerLanSlotNo_Object = MibTableColumn
containerLanSlotNo = _ContainerLanSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 2),
    _ContainerLanSlotNo_Type()
)
containerLanSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLanSlotNo.setStatus("current")
_ContainerLanPortNo_Type = Unsigned32
_ContainerLanPortNo_Object = MibTableColumn
containerLanPortNo = _ContainerLanPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 3),
    _ContainerLanPortNo_Type()
)
containerLanPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLanPortNo.setStatus("current")
_ContainerLanExtNo_Type = Unsigned32
_ContainerLanExtNo_Object = MibTableColumn
containerLanExtNo = _ContainerLanExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 4),
    _ContainerLanExtNo_Type()
)
containerLanExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLanExtNo.setStatus("current")
_ContainerLanClassName_Type = EntityClassName
_ContainerLanClassName_Object = MibTableColumn
containerLanClassName = _ContainerLanClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 5),
    _ContainerLanClassName_Type()
)
containerLanClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerLanClassName.setStatus("current")
_ContainerLanAidString_Type = SnmpAdminString
_ContainerLanAidString_Object = MibTableColumn
containerLanAidString = _ContainerLanAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 6),
    _ContainerLanAidString_Type()
)
containerLanAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLanAidString.setStatus("current")
_ContainerLanClass_Type = EntityClass
_ContainerLanClass_Object = MibTableColumn
containerLanClass = _ContainerLanClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 7),
    _ContainerLanClass_Type()
)
containerLanClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLanClass.setStatus("current")
_ContainerLanTableId_Type = RowPointer
_ContainerLanTableId_Object = MibTableColumn
containerLanTableId = _ContainerLanTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 8),
    _ContainerLanTableId_Type()
)
containerLanTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLanTableId.setStatus("current")
_ContainerLanParentId_Type = RowPointer
_ContainerLanParentId_Object = MibTableColumn
containerLanParentId = _ContainerLanParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 73, 1, 9),
    _ContainerLanParentId_Type()
)
containerLanParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerLanParentId.setStatus("current")
_ContainerEnvTable_Object = MibTable
containerEnvTable = _ContainerEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80)
)
if mibBuilder.loadTexts:
    containerEnvTable.setStatus("current")
_ContainerEnvEntry_Object = MibTableRow
containerEnvEntry = _ContainerEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1)
)
containerEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerEnvClassName"),
)
if mibBuilder.loadTexts:
    containerEnvEntry.setStatus("current")
_ContainerEnvShelfNo_Type = Unsigned32
_ContainerEnvShelfNo_Object = MibTableColumn
containerEnvShelfNo = _ContainerEnvShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 1),
    _ContainerEnvShelfNo_Type()
)
containerEnvShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEnvShelfNo.setStatus("current")
_ContainerEnvSlotNo_Type = Unsigned32
_ContainerEnvSlotNo_Object = MibTableColumn
containerEnvSlotNo = _ContainerEnvSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 2),
    _ContainerEnvSlotNo_Type()
)
containerEnvSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEnvSlotNo.setStatus("current")
_ContainerEnvPortNo_Type = Unsigned32
_ContainerEnvPortNo_Object = MibTableColumn
containerEnvPortNo = _ContainerEnvPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 3),
    _ContainerEnvPortNo_Type()
)
containerEnvPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEnvPortNo.setStatus("current")
_ContainerEnvExtNo_Type = Unsigned32
_ContainerEnvExtNo_Object = MibTableColumn
containerEnvExtNo = _ContainerEnvExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 4),
    _ContainerEnvExtNo_Type()
)
containerEnvExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEnvExtNo.setStatus("current")
_ContainerEnvClassName_Type = EntityClassName
_ContainerEnvClassName_Object = MibTableColumn
containerEnvClassName = _ContainerEnvClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 5),
    _ContainerEnvClassName_Type()
)
containerEnvClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerEnvClassName.setStatus("current")
_ContainerEnvAidString_Type = SnmpAdminString
_ContainerEnvAidString_Object = MibTableColumn
containerEnvAidString = _ContainerEnvAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 6),
    _ContainerEnvAidString_Type()
)
containerEnvAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEnvAidString.setStatus("current")
_ContainerEnvClass_Type = EntityClass
_ContainerEnvClass_Object = MibTableColumn
containerEnvClass = _ContainerEnvClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 7),
    _ContainerEnvClass_Type()
)
containerEnvClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEnvClass.setStatus("current")
_ContainerEnvTableId_Type = RowPointer
_ContainerEnvTableId_Object = MibTableColumn
containerEnvTableId = _ContainerEnvTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 8),
    _ContainerEnvTableId_Type()
)
containerEnvTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEnvTableId.setStatus("current")
_ContainerEnvParentId_Type = RowPointer
_ContainerEnvParentId_Object = MibTableColumn
containerEnvParentId = _ContainerEnvParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 80, 1, 9),
    _ContainerEnvParentId_Type()
)
containerEnvParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerEnvParentId.setStatus("current")
_ContainerWchTable_Object = MibTable
containerWchTable = _ContainerWchTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90)
)
if mibBuilder.loadTexts:
    containerWchTable.setStatus("current")
_ContainerWchEntry_Object = MibTableRow
containerWchEntry = _ContainerWchEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1)
)
containerWchEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerWchIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerWchIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerWchIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerWchIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerWchClassName"),
)
if mibBuilder.loadTexts:
    containerWchEntry.setStatus("current")
_ContainerWchIndexNo1_Type = Unsigned32
_ContainerWchIndexNo1_Object = MibTableColumn
containerWchIndexNo1 = _ContainerWchIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 1),
    _ContainerWchIndexNo1_Type()
)
containerWchIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerWchIndexNo1.setStatus("current")
_ContainerWchIndexNo2_Type = Unsigned32
_ContainerWchIndexNo2_Object = MibTableColumn
containerWchIndexNo2 = _ContainerWchIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 2),
    _ContainerWchIndexNo2_Type()
)
containerWchIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerWchIndexNo2.setStatus("current")
_ContainerWchIndexNo3_Type = Unsigned32
_ContainerWchIndexNo3_Object = MibTableColumn
containerWchIndexNo3 = _ContainerWchIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 3),
    _ContainerWchIndexNo3_Type()
)
containerWchIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerWchIndexNo3.setStatus("current")
_ContainerWchIndexNo4_Type = Unsigned32
_ContainerWchIndexNo4_Object = MibTableColumn
containerWchIndexNo4 = _ContainerWchIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 4),
    _ContainerWchIndexNo4_Type()
)
containerWchIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerWchIndexNo4.setStatus("current")
_ContainerWchClassName_Type = EntityClassName
_ContainerWchClassName_Object = MibTableColumn
containerWchClassName = _ContainerWchClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 5),
    _ContainerWchClassName_Type()
)
containerWchClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerWchClassName.setStatus("current")
_ContainerWchAidString_Type = SnmpAdminString
_ContainerWchAidString_Object = MibTableColumn
containerWchAidString = _ContainerWchAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 6),
    _ContainerWchAidString_Type()
)
containerWchAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerWchAidString.setStatus("current")
_ContainerWchClass_Type = EntityClass
_ContainerWchClass_Object = MibTableColumn
containerWchClass = _ContainerWchClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 7),
    _ContainerWchClass_Type()
)
containerWchClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerWchClass.setStatus("current")
_ContainerWchTableId_Type = RowPointer
_ContainerWchTableId_Object = MibTableColumn
containerWchTableId = _ContainerWchTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 8),
    _ContainerWchTableId_Type()
)
containerWchTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerWchTableId.setStatus("current")
_ContainerWchParentId_Type = RowPointer
_ContainerWchParentId_Object = MibTableColumn
containerWchParentId = _ContainerWchParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 90, 1, 9),
    _ContainerWchParentId_Type()
)
containerWchParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerWchParentId.setStatus("current")
_ContainerOlTable_Object = MibTable
containerOlTable = _ContainerOlTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91)
)
if mibBuilder.loadTexts:
    containerOlTable.setStatus("current")
_ContainerOlEntry_Object = MibTableRow
containerOlEntry = _ContainerOlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1)
)
containerOlEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerOlIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerOlIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerOlIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerOlIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerOlClassName"),
)
if mibBuilder.loadTexts:
    containerOlEntry.setStatus("current")
_ContainerOlIndexNo1_Type = Unsigned32
_ContainerOlIndexNo1_Object = MibTableColumn
containerOlIndexNo1 = _ContainerOlIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 1),
    _ContainerOlIndexNo1_Type()
)
containerOlIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOlIndexNo1.setStatus("current")
_ContainerOlIndexNo2_Type = Unsigned32
_ContainerOlIndexNo2_Object = MibTableColumn
containerOlIndexNo2 = _ContainerOlIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 2),
    _ContainerOlIndexNo2_Type()
)
containerOlIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOlIndexNo2.setStatus("current")
_ContainerOlIndexNo3_Type = Unsigned32
_ContainerOlIndexNo3_Object = MibTableColumn
containerOlIndexNo3 = _ContainerOlIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 3),
    _ContainerOlIndexNo3_Type()
)
containerOlIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOlIndexNo3.setStatus("current")
_ContainerOlIndexNo4_Type = Unsigned32
_ContainerOlIndexNo4_Object = MibTableColumn
containerOlIndexNo4 = _ContainerOlIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 4),
    _ContainerOlIndexNo4_Type()
)
containerOlIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOlIndexNo4.setStatus("current")
_ContainerOlClassName_Type = EntityClassName
_ContainerOlClassName_Object = MibTableColumn
containerOlClassName = _ContainerOlClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 5),
    _ContainerOlClassName_Type()
)
containerOlClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOlClassName.setStatus("current")
_ContainerOlAidString_Type = SnmpAdminString
_ContainerOlAidString_Object = MibTableColumn
containerOlAidString = _ContainerOlAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 6),
    _ContainerOlAidString_Type()
)
containerOlAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOlAidString.setStatus("current")
_ContainerOlClass_Type = EntityClass
_ContainerOlClass_Object = MibTableColumn
containerOlClass = _ContainerOlClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 7),
    _ContainerOlClass_Type()
)
containerOlClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOlClass.setStatus("current")
_ContainerOlTableId_Type = RowPointer
_ContainerOlTableId_Object = MibTableColumn
containerOlTableId = _ContainerOlTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 8),
    _ContainerOlTableId_Type()
)
containerOlTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOlTableId.setStatus("current")
_ContainerOlParentId_Type = RowPointer
_ContainerOlParentId_Object = MibTableColumn
containerOlParentId = _ContainerOlParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 91, 1, 9),
    _ContainerOlParentId_Type()
)
containerOlParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOlParentId.setStatus("current")
_ContainerOwlgTable_Object = MibTable
containerOwlgTable = _ContainerOwlgTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92)
)
if mibBuilder.loadTexts:
    containerOwlgTable.setStatus("current")
_ContainerOwlgEntry_Object = MibTableRow
containerOwlgEntry = _ContainerOwlgEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1)
)
containerOwlgEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerOwlgIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "containerOwlgIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "containerOwlgIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "containerOwlgIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "containerOwlgClassName"),
)
if mibBuilder.loadTexts:
    containerOwlgEntry.setStatus("current")
_ContainerOwlgIndexNo1_Type = Unsigned32
_ContainerOwlgIndexNo1_Object = MibTableColumn
containerOwlgIndexNo1 = _ContainerOwlgIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 1),
    _ContainerOwlgIndexNo1_Type()
)
containerOwlgIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOwlgIndexNo1.setStatus("current")
_ContainerOwlgIndexNo2_Type = Unsigned32
_ContainerOwlgIndexNo2_Object = MibTableColumn
containerOwlgIndexNo2 = _ContainerOwlgIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 2),
    _ContainerOwlgIndexNo2_Type()
)
containerOwlgIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOwlgIndexNo2.setStatus("current")
_ContainerOwlgIndexNo3_Type = Unsigned32
_ContainerOwlgIndexNo3_Object = MibTableColumn
containerOwlgIndexNo3 = _ContainerOwlgIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 3),
    _ContainerOwlgIndexNo3_Type()
)
containerOwlgIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOwlgIndexNo3.setStatus("current")
_ContainerOwlgIndexNo4_Type = Unsigned32
_ContainerOwlgIndexNo4_Object = MibTableColumn
containerOwlgIndexNo4 = _ContainerOwlgIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 4),
    _ContainerOwlgIndexNo4_Type()
)
containerOwlgIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOwlgIndexNo4.setStatus("current")
_ContainerOwlgClassName_Type = EntityClassName
_ContainerOwlgClassName_Object = MibTableColumn
containerOwlgClassName = _ContainerOwlgClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 5),
    _ContainerOwlgClassName_Type()
)
containerOwlgClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerOwlgClassName.setStatus("current")
_ContainerOwlgAidString_Type = SnmpAdminString
_ContainerOwlgAidString_Object = MibTableColumn
containerOwlgAidString = _ContainerOwlgAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 6),
    _ContainerOwlgAidString_Type()
)
containerOwlgAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOwlgAidString.setStatus("current")
_ContainerOwlgClass_Type = EntityClass
_ContainerOwlgClass_Object = MibTableColumn
containerOwlgClass = _ContainerOwlgClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 7),
    _ContainerOwlgClass_Type()
)
containerOwlgClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOwlgClass.setStatus("current")
_ContainerOwlgTableId_Type = RowPointer
_ContainerOwlgTableId_Object = MibTableColumn
containerOwlgTableId = _ContainerOwlgTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 8),
    _ContainerOwlgTableId_Type()
)
containerOwlgTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOwlgTableId.setStatus("current")
_ContainerOwlgParentId_Type = RowPointer
_ContainerOwlgParentId_Object = MibTableColumn
containerOwlgParentId = _ContainerOwlgParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 92, 1, 9),
    _ContainerOwlgParentId_Type()
)
containerOwlgParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOwlgParentId.setStatus("current")
_ContainerCrossDcnTable_Object = MibTable
containerCrossDcnTable = _ContainerCrossDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93)
)
if mibBuilder.loadTexts:
    containerCrossDcnTable.setStatus("current")
_ContainerCrossDcnEntry_Object = MibTableRow
containerCrossDcnEntry = _ContainerCrossDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1)
)
containerCrossDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerCrossDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "containerCrossDcnClassName"),
)
if mibBuilder.loadTexts:
    containerCrossDcnEntry.setStatus("current")
_ContainerCrossDcnShelfNo_Type = Unsigned32
_ContainerCrossDcnShelfNo_Object = MibTableColumn
containerCrossDcnShelfNo = _ContainerCrossDcnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 1),
    _ContainerCrossDcnShelfNo_Type()
)
containerCrossDcnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossDcnShelfNo.setStatus("current")
_ContainerCrossDcnSlotNo_Type = Unsigned32
_ContainerCrossDcnSlotNo_Object = MibTableColumn
containerCrossDcnSlotNo = _ContainerCrossDcnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 2),
    _ContainerCrossDcnSlotNo_Type()
)
containerCrossDcnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossDcnSlotNo.setStatus("current")
_ContainerCrossDcnPortNo_Type = Unsigned32
_ContainerCrossDcnPortNo_Object = MibTableColumn
containerCrossDcnPortNo = _ContainerCrossDcnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 3),
    _ContainerCrossDcnPortNo_Type()
)
containerCrossDcnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossDcnPortNo.setStatus("current")
_ContainerCrossDcnExtNo_Type = Unsigned32
_ContainerCrossDcnExtNo_Object = MibTableColumn
containerCrossDcnExtNo = _ContainerCrossDcnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 4),
    _ContainerCrossDcnExtNo_Type()
)
containerCrossDcnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossDcnExtNo.setStatus("current")
_ContainerCrossDcnClassName_Type = EntityClassName
_ContainerCrossDcnClassName_Object = MibTableColumn
containerCrossDcnClassName = _ContainerCrossDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 5),
    _ContainerCrossDcnClassName_Type()
)
containerCrossDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    containerCrossDcnClassName.setStatus("current")
_ContainerCrossDcnAidString_Type = SnmpAdminString
_ContainerCrossDcnAidString_Object = MibTableColumn
containerCrossDcnAidString = _ContainerCrossDcnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 6),
    _ContainerCrossDcnAidString_Type()
)
containerCrossDcnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossDcnAidString.setStatus("current")
_ContainerCrossDcnClass_Type = EntityClass
_ContainerCrossDcnClass_Object = MibTableColumn
containerCrossDcnClass = _ContainerCrossDcnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 7),
    _ContainerCrossDcnClass_Type()
)
containerCrossDcnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossDcnClass.setStatus("current")
_ContainerCrossDcnTableId_Type = RowPointer
_ContainerCrossDcnTableId_Object = MibTableColumn
containerCrossDcnTableId = _ContainerCrossDcnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 8),
    _ContainerCrossDcnTableId_Type()
)
containerCrossDcnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossDcnTableId.setStatus("current")
_ContainerCrossDcnParentId_Type = RowPointer
_ContainerCrossDcnParentId_Object = MibTableColumn
containerCrossDcnParentId = _ContainerCrossDcnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 93, 1, 9),
    _ContainerCrossDcnParentId_Type()
)
containerCrossDcnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerCrossDcnParentId.setStatus("current")
_NextUnusedPc_Type = SnmpAdminString
_NextUnusedPc_Object = MibScalar
nextUnusedPc = _NextUnusedPc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 94),
    _NextUnusedPc_Type()
)
nextUnusedPc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nextUnusedPc.setStatus("current")
_NextUnusedFc_Type = SnmpAdminString
_NextUnusedFc_Object = MibScalar
nextUnusedFc = _NextUnusedFc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 95),
    _NextUnusedFc_Type()
)
nextUnusedFc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nextUnusedFc.setStatus("current")
_EndOfContainers_Type = Integer32
_EndOfContainers_Object = MibScalar
endOfContainers = _EndOfContainers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 1, 10000),
    _EndOfContainers_Type()
)
endOfContainers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfContainers.setStatus("current")
_Entities_ObjectIdentity = ObjectIdentity
entities = _Entities_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2)
)
_EntitySysTable_Object = MibTable
entitySysTable = _EntitySysTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1)
)
if mibBuilder.loadTexts:
    entitySysTable.setStatus("current")
_EntitySysEntry_Object = MibTableRow
entitySysEntry = _EntitySysEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1)
)
entitySysEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entitySysShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysPortNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysExtNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysClassName"),
)
if mibBuilder.loadTexts:
    entitySysEntry.setStatus("current")
_EntitySysShelfNo_Type = Unsigned32
_EntitySysShelfNo_Object = MibTableColumn
entitySysShelfNo = _EntitySysShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 1),
    _EntitySysShelfNo_Type()
)
entitySysShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entitySysShelfNo.setStatus("current")
_EntitySysSlotNo_Type = Unsigned32
_EntitySysSlotNo_Object = MibTableColumn
entitySysSlotNo = _EntitySysSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 2),
    _EntitySysSlotNo_Type()
)
entitySysSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entitySysSlotNo.setStatus("current")
_EntitySysPortNo_Type = Unsigned32
_EntitySysPortNo_Object = MibTableColumn
entitySysPortNo = _EntitySysPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 3),
    _EntitySysPortNo_Type()
)
entitySysPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entitySysPortNo.setStatus("current")
_EntitySysExtNo_Type = Unsigned32
_EntitySysExtNo_Object = MibTableColumn
entitySysExtNo = _EntitySysExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 4),
    _EntitySysExtNo_Type()
)
entitySysExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entitySysExtNo.setStatus("current")
_EntitySysClassName_Type = EntityClassName
_EntitySysClassName_Object = MibTableColumn
entitySysClassName = _EntitySysClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 5),
    _EntitySysClassName_Type()
)
entitySysClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entitySysClassName.setStatus("current")
_EntitySysAidString_Type = SnmpAdminString
_EntitySysAidString_Object = MibTableColumn
entitySysAidString = _EntitySysAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 6),
    _EntitySysAidString_Type()
)
entitySysAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysAidString.setStatus("current")
_EntitySysType_Type = FspR7EntityType
_EntitySysType_Object = MibTableColumn
entitySysType = _EntitySysType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 7),
    _EntitySysType_Type()
)
entitySysType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysType.setStatus("current")
_EntitySysTableId_Type = RowPointer
_EntitySysTableId_Object = MibTableColumn
entitySysTableId = _EntitySysTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 8),
    _EntitySysTableId_Type()
)
entitySysTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysTableId.setStatus("current")
_EntitySysParentId_Type = RowPointer
_EntitySysParentId_Object = MibTableColumn
entitySysParentId = _EntitySysParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 9),
    _EntitySysParentId_Type()
)
entitySysParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysParentId.setStatus("current")
_EntitySysClass_Type = EntityClass
_EntitySysClass_Object = MibTableColumn
entitySysClass = _EntitySysClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 10),
    _EntitySysClass_Type()
)
entitySysClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysClass.setStatus("current")
_EntitySysOneIndex_Type = Unsigned32
_EntitySysOneIndex_Object = MibTableColumn
entitySysOneIndex = _EntitySysOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 11),
    _EntitySysOneIndex_Type()
)
entitySysOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysOneIndex.setStatus("current")
_EntitySysEquipmentState_Type = EquipmentState
_EntitySysEquipmentState_Object = MibTableColumn
entitySysEquipmentState = _EntitySysEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 1, 1, 12),
    _EntitySysEquipmentState_Type()
)
entitySysEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitySysEquipmentState.setStatus("current")
_EntityEqptTable_Object = MibTable
entityEqptTable = _EntityEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2)
)
if mibBuilder.loadTexts:
    entityEqptTable.setStatus("current")
_EntityEqptEntry_Object = MibTableRow
entityEqptEntry = _EntityEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1)
)
entityEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    entityEqptEntry.setStatus("current")
_EntityEqptShelfNo_Type = Unsigned32
_EntityEqptShelfNo_Object = MibTableColumn
entityEqptShelfNo = _EntityEqptShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 1),
    _EntityEqptShelfNo_Type()
)
entityEqptShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEqptShelfNo.setStatus("current")
_EntityEqptSlotNo_Type = Unsigned32
_EntityEqptSlotNo_Object = MibTableColumn
entityEqptSlotNo = _EntityEqptSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 2),
    _EntityEqptSlotNo_Type()
)
entityEqptSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEqptSlotNo.setStatus("current")
_EntityEqptPortNo_Type = Unsigned32
_EntityEqptPortNo_Object = MibTableColumn
entityEqptPortNo = _EntityEqptPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 3),
    _EntityEqptPortNo_Type()
)
entityEqptPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEqptPortNo.setStatus("current")
_EntityEqptExtNo_Type = Unsigned32
_EntityEqptExtNo_Object = MibTableColumn
entityEqptExtNo = _EntityEqptExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 4),
    _EntityEqptExtNo_Type()
)
entityEqptExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEqptExtNo.setStatus("current")
_EntityEqptClassName_Type = EntityClassName
_EntityEqptClassName_Object = MibTableColumn
entityEqptClassName = _EntityEqptClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 5),
    _EntityEqptClassName_Type()
)
entityEqptClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEqptClassName.setStatus("current")
_EntityEqptAidString_Type = SnmpAdminString
_EntityEqptAidString_Object = MibTableColumn
entityEqptAidString = _EntityEqptAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 6),
    _EntityEqptAidString_Type()
)
entityEqptAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptAidString.setStatus("current")
_EntityEqptType_Type = FspR7EntityType
_EntityEqptType_Object = MibTableColumn
entityEqptType = _EntityEqptType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 7),
    _EntityEqptType_Type()
)
entityEqptType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptType.setStatus("current")
_EntityEqptTableId_Type = RowPointer
_EntityEqptTableId_Object = MibTableColumn
entityEqptTableId = _EntityEqptTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 8),
    _EntityEqptTableId_Type()
)
entityEqptTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptTableId.setStatus("current")
_EntityEqptParentId_Type = RowPointer
_EntityEqptParentId_Object = MibTableColumn
entityEqptParentId = _EntityEqptParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 9),
    _EntityEqptParentId_Type()
)
entityEqptParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptParentId.setStatus("current")
_EntityEqptClass_Type = EntityClass
_EntityEqptClass_Object = MibTableColumn
entityEqptClass = _EntityEqptClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 10),
    _EntityEqptClass_Type()
)
entityEqptClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptClass.setStatus("current")
_EntityEqptOneIndex_Type = Unsigned32
_EntityEqptOneIndex_Object = MibTableColumn
entityEqptOneIndex = _EntityEqptOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 11),
    _EntityEqptOneIndex_Type()
)
entityEqptOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptOneIndex.setStatus("current")
_EntityEqptEquipmentState_Type = EquipmentState
_EntityEqptEquipmentState_Object = MibTableColumn
entityEqptEquipmentState = _EntityEqptEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 12),
    _EntityEqptEquipmentState_Type()
)
entityEqptEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptEquipmentState.setStatus("current")
_EntityEqptMtosiParentId_Type = RowPointer
_EntityEqptMtosiParentId_Object = MibTableColumn
entityEqptMtosiParentId = _EntityEqptMtosiParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 2, 1, 13),
    _EntityEqptMtosiParentId_Type()
)
entityEqptMtosiParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEqptMtosiParentId.setStatus("current")
_EntityDcnTable_Object = MibTable
entityDcnTable = _EntityDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3)
)
if mibBuilder.loadTexts:
    entityDcnTable.setStatus("current")
_EntityDcnEntry_Object = MibTableRow
entityDcnEntry = _EntityDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1)
)
entityDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    entityDcnEntry.setStatus("current")
_EntityDcnShelfNo_Type = Unsigned32
_EntityDcnShelfNo_Object = MibTableColumn
entityDcnShelfNo = _EntityDcnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 1),
    _EntityDcnShelfNo_Type()
)
entityDcnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityDcnShelfNo.setStatus("current")
_EntityDcnSlotNo_Type = Unsigned32
_EntityDcnSlotNo_Object = MibTableColumn
entityDcnSlotNo = _EntityDcnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 2),
    _EntityDcnSlotNo_Type()
)
entityDcnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityDcnSlotNo.setStatus("current")
_EntityDcnPortNo_Type = Unsigned32
_EntityDcnPortNo_Object = MibTableColumn
entityDcnPortNo = _EntityDcnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 3),
    _EntityDcnPortNo_Type()
)
entityDcnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityDcnPortNo.setStatus("current")
_EntityDcnExtNo_Type = Unsigned32
_EntityDcnExtNo_Object = MibTableColumn
entityDcnExtNo = _EntityDcnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 4),
    _EntityDcnExtNo_Type()
)
entityDcnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityDcnExtNo.setStatus("current")
_EntityDcnClassName_Type = EntityClassName
_EntityDcnClassName_Object = MibTableColumn
entityDcnClassName = _EntityDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 5),
    _EntityDcnClassName_Type()
)
entityDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityDcnClassName.setStatus("current")
_EntityDcnAidString_Type = SnmpAdminString
_EntityDcnAidString_Object = MibTableColumn
entityDcnAidString = _EntityDcnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 6),
    _EntityDcnAidString_Type()
)
entityDcnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnAidString.setStatus("current")
_EntityDcnType_Type = FspR7EntityType
_EntityDcnType_Object = MibTableColumn
entityDcnType = _EntityDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 7),
    _EntityDcnType_Type()
)
entityDcnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnType.setStatus("current")
_EntityDcnTableId_Type = RowPointer
_EntityDcnTableId_Object = MibTableColumn
entityDcnTableId = _EntityDcnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 8),
    _EntityDcnTableId_Type()
)
entityDcnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnTableId.setStatus("current")
_EntityDcnParentId_Type = RowPointer
_EntityDcnParentId_Object = MibTableColumn
entityDcnParentId = _EntityDcnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 9),
    _EntityDcnParentId_Type()
)
entityDcnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnParentId.setStatus("current")
_EntityDcnClass_Type = EntityClass
_EntityDcnClass_Object = MibTableColumn
entityDcnClass = _EntityDcnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 10),
    _EntityDcnClass_Type()
)
entityDcnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnClass.setStatus("current")
_EntityDcnOneIndex_Type = Unsigned32
_EntityDcnOneIndex_Object = MibTableColumn
entityDcnOneIndex = _EntityDcnOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 3, 1, 11),
    _EntityDcnOneIndex_Type()
)
entityDcnOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityDcnOneIndex.setStatus("current")
_EntityOptLineTable_Object = MibTable
entityOptLineTable = _EntityOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4)
)
if mibBuilder.loadTexts:
    entityOptLineTable.setStatus("current")
_EntityOptLineEntry_Object = MibTableRow
entityOptLineEntry = _EntityOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1)
)
entityOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineClassName"),
)
if mibBuilder.loadTexts:
    entityOptLineEntry.setStatus("current")
_EntityOptLineIndexNo1_Type = Unsigned32
_EntityOptLineIndexNo1_Object = MibTableColumn
entityOptLineIndexNo1 = _EntityOptLineIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 1),
    _EntityOptLineIndexNo1_Type()
)
entityOptLineIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOptLineIndexNo1.setStatus("current")
_EntityOptLineIndexNo2_Type = Unsigned32
_EntityOptLineIndexNo2_Object = MibTableColumn
entityOptLineIndexNo2 = _EntityOptLineIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 2),
    _EntityOptLineIndexNo2_Type()
)
entityOptLineIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOptLineIndexNo2.setStatus("current")
_EntityOptLineIndexNo3_Type = Unsigned32
_EntityOptLineIndexNo3_Object = MibTableColumn
entityOptLineIndexNo3 = _EntityOptLineIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 3),
    _EntityOptLineIndexNo3_Type()
)
entityOptLineIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOptLineIndexNo3.setStatus("current")
_EntityOptLineIndexNo4_Type = Unsigned32
_EntityOptLineIndexNo4_Object = MibTableColumn
entityOptLineIndexNo4 = _EntityOptLineIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 4),
    _EntityOptLineIndexNo4_Type()
)
entityOptLineIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOptLineIndexNo4.setStatus("current")
_EntityOptLineClassName_Type = EntityClassName
_EntityOptLineClassName_Object = MibTableColumn
entityOptLineClassName = _EntityOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 5),
    _EntityOptLineClassName_Type()
)
entityOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOptLineClassName.setStatus("current")
_EntityOptLineAidString_Type = SnmpAdminString
_EntityOptLineAidString_Object = MibTableColumn
entityOptLineAidString = _EntityOptLineAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 6),
    _EntityOptLineAidString_Type()
)
entityOptLineAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineAidString.setStatus("current")
_EntityOptLineType_Type = FspR7EntityType
_EntityOptLineType_Object = MibTableColumn
entityOptLineType = _EntityOptLineType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 7),
    _EntityOptLineType_Type()
)
entityOptLineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineType.setStatus("current")
_EntityOptLineTableId_Type = RowPointer
_EntityOptLineTableId_Object = MibTableColumn
entityOptLineTableId = _EntityOptLineTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 8),
    _EntityOptLineTableId_Type()
)
entityOptLineTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineTableId.setStatus("current")
_EntityOptLineParentId_Type = RowPointer
_EntityOptLineParentId_Object = MibTableColumn
entityOptLineParentId = _EntityOptLineParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 9),
    _EntityOptLineParentId_Type()
)
entityOptLineParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineParentId.setStatus("current")
_EntityOptLineOneIndex_Type = Unsigned32
_EntityOptLineOneIndex_Object = MibTableColumn
entityOptLineOneIndex = _EntityOptLineOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 10),
    _EntityOptLineOneIndex_Type()
)
entityOptLineOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineOneIndex.setStatus("current")
_EntityOptLineClass_Type = EntityClass
_EntityOptLineClass_Object = MibTableColumn
entityOptLineClass = _EntityOptLineClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 4, 1, 11),
    _EntityOptLineClass_Type()
)
entityOptLineClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOptLineClass.setStatus("current")
_EntityEnvTable_Object = MibTable
entityEnvTable = _EntityEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5)
)
if mibBuilder.loadTexts:
    entityEnvTable.setStatus("current")
_EntityEnvEntry_Object = MibTableRow
entityEnvEntry = _EntityEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1)
)
entityEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvClassName"),
)
if mibBuilder.loadTexts:
    entityEnvEntry.setStatus("current")
_EntityEnvShelfNo_Type = Unsigned32
_EntityEnvShelfNo_Object = MibTableColumn
entityEnvShelfNo = _EntityEnvShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 1),
    _EntityEnvShelfNo_Type()
)
entityEnvShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEnvShelfNo.setStatus("current")
_EntityEnvSlotNo_Type = Unsigned32
_EntityEnvSlotNo_Object = MibTableColumn
entityEnvSlotNo = _EntityEnvSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 2),
    _EntityEnvSlotNo_Type()
)
entityEnvSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEnvSlotNo.setStatus("current")
_EntityEnvPortNo_Type = Unsigned32
_EntityEnvPortNo_Object = MibTableColumn
entityEnvPortNo = _EntityEnvPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 3),
    _EntityEnvPortNo_Type()
)
entityEnvPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEnvPortNo.setStatus("current")
_EntityEnvExtNo_Type = Unsigned32
_EntityEnvExtNo_Object = MibTableColumn
entityEnvExtNo = _EntityEnvExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 4),
    _EntityEnvExtNo_Type()
)
entityEnvExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEnvExtNo.setStatus("current")
_EntityEnvClassName_Type = EntityClassName
_EntityEnvClassName_Object = MibTableColumn
entityEnvClassName = _EntityEnvClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 5),
    _EntityEnvClassName_Type()
)
entityEnvClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEnvClassName.setStatus("current")
_EntityEnvAidString_Type = SnmpAdminString
_EntityEnvAidString_Object = MibTableColumn
entityEnvAidString = _EntityEnvAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 6),
    _EntityEnvAidString_Type()
)
entityEnvAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvAidString.setStatus("current")
_EntityEnvType_Type = FspR7EntityType
_EntityEnvType_Object = MibTableColumn
entityEnvType = _EntityEnvType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 7),
    _EntityEnvType_Type()
)
entityEnvType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvType.setStatus("current")
_EntityEnvTableId_Type = RowPointer
_EntityEnvTableId_Object = MibTableColumn
entityEnvTableId = _EntityEnvTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 8),
    _EntityEnvTableId_Type()
)
entityEnvTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvTableId.setStatus("current")
_EntityEnvParentId_Type = RowPointer
_EntityEnvParentId_Object = MibTableColumn
entityEnvParentId = _EntityEnvParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 9),
    _EntityEnvParentId_Type()
)
entityEnvParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvParentId.setStatus("current")
_EntityEnvClass_Type = EntityClass
_EntityEnvClass_Object = MibTableColumn
entityEnvClass = _EntityEnvClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 10),
    _EntityEnvClass_Type()
)
entityEnvClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvClass.setStatus("current")
_EntityEnvOneIndex_Type = Unsigned32
_EntityEnvOneIndex_Object = MibTableColumn
entityEnvOneIndex = _EntityEnvOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 5, 1, 11),
    _EntityEnvOneIndex_Type()
)
entityEnvOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEnvOneIndex.setStatus("current")
_EntityFacilityTable_Object = MibTable
entityFacilityTable = _EntityFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7)
)
if mibBuilder.loadTexts:
    entityFacilityTable.setStatus("current")
_EntityFacilityEntry_Object = MibTableRow
entityFacilityEntry = _EntityFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1)
)
entityFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    entityFacilityEntry.setStatus("current")
_EntityFacilityShelfNo_Type = Unsigned32
_EntityFacilityShelfNo_Object = MibTableColumn
entityFacilityShelfNo = _EntityFacilityShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 1),
    _EntityFacilityShelfNo_Type()
)
entityFacilityShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFacilityShelfNo.setStatus("current")
_EntityFacilitySlotNo_Type = Unsigned32
_EntityFacilitySlotNo_Object = MibTableColumn
entityFacilitySlotNo = _EntityFacilitySlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 2),
    _EntityFacilitySlotNo_Type()
)
entityFacilitySlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFacilitySlotNo.setStatus("current")
_EntityFacilityPortNo_Type = Unsigned32
_EntityFacilityPortNo_Object = MibTableColumn
entityFacilityPortNo = _EntityFacilityPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 3),
    _EntityFacilityPortNo_Type()
)
entityFacilityPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFacilityPortNo.setStatus("current")
_EntityFacilityExtNo_Type = Unsigned32
_EntityFacilityExtNo_Object = MibTableColumn
entityFacilityExtNo = _EntityFacilityExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 4),
    _EntityFacilityExtNo_Type()
)
entityFacilityExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFacilityExtNo.setStatus("current")
_EntityFacilityClassName_Type = EntityClassName
_EntityFacilityClassName_Object = MibTableColumn
entityFacilityClassName = _EntityFacilityClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 5),
    _EntityFacilityClassName_Type()
)
entityFacilityClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFacilityClassName.setStatus("current")
_EntityFacilityAidString_Type = SnmpAdminString
_EntityFacilityAidString_Object = MibTableColumn
entityFacilityAidString = _EntityFacilityAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 6),
    _EntityFacilityAidString_Type()
)
entityFacilityAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityAidString.setStatus("current")
_EntityFacilityType_Type = FspR7EntityType
_EntityFacilityType_Object = MibTableColumn
entityFacilityType = _EntityFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 7),
    _EntityFacilityType_Type()
)
entityFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityType.setStatus("current")
_EntityFacilityTableId_Type = RowPointer
_EntityFacilityTableId_Object = MibTableColumn
entityFacilityTableId = _EntityFacilityTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 8),
    _EntityFacilityTableId_Type()
)
entityFacilityTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityTableId.setStatus("current")
_EntityFacilityParentId_Type = RowPointer
_EntityFacilityParentId_Object = MibTableColumn
entityFacilityParentId = _EntityFacilityParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 9),
    _EntityFacilityParentId_Type()
)
entityFacilityParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityParentId.setStatus("current")
_EntityFacilityClass_Type = EntityClass
_EntityFacilityClass_Object = MibTableColumn
entityFacilityClass = _EntityFacilityClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 10),
    _EntityFacilityClass_Type()
)
entityFacilityClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityClass.setStatus("current")
_EntityFacilityOneIndex_Type = Unsigned32
_EntityFacilityOneIndex_Object = MibTableColumn
entityFacilityOneIndex = _EntityFacilityOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 7, 1, 11),
    _EntityFacilityOneIndex_Type()
)
entityFacilityOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFacilityOneIndex.setStatus("current")
_EntityCrossConnTable_Object = MibTable
entityCrossConnTable = _EntityCrossConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8)
)
if mibBuilder.loadTexts:
    entityCrossConnTable.setStatus("current")
_EntityCrossConnEntry_Object = MibTableRow
entityCrossConnEntry = _EntityCrossConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1)
)
entityCrossConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnClassName"),
)
if mibBuilder.loadTexts:
    entityCrossConnEntry.setStatus("current")
_EntityCrossConnFromShelfNo_Type = Unsigned32
_EntityCrossConnFromShelfNo_Object = MibTableColumn
entityCrossConnFromShelfNo = _EntityCrossConnFromShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 1),
    _EntityCrossConnFromShelfNo_Type()
)
entityCrossConnFromShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnFromShelfNo.setStatus("current")
_EntityCrossConnFromSlotNo_Type = Unsigned32
_EntityCrossConnFromSlotNo_Object = MibTableColumn
entityCrossConnFromSlotNo = _EntityCrossConnFromSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 2),
    _EntityCrossConnFromSlotNo_Type()
)
entityCrossConnFromSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnFromSlotNo.setStatus("current")
_EntityCrossConnFromPortNo_Type = Unsigned32
_EntityCrossConnFromPortNo_Object = MibTableColumn
entityCrossConnFromPortNo = _EntityCrossConnFromPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 3),
    _EntityCrossConnFromPortNo_Type()
)
entityCrossConnFromPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnFromPortNo.setStatus("current")
_EntityCrossConnFromExtNo_Type = Unsigned32
_EntityCrossConnFromExtNo_Object = MibTableColumn
entityCrossConnFromExtNo = _EntityCrossConnFromExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 4),
    _EntityCrossConnFromExtNo_Type()
)
entityCrossConnFromExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnFromExtNo.setStatus("current")
_EntityCrossConnFromClassName_Type = EntityClassName
_EntityCrossConnFromClassName_Object = MibTableColumn
entityCrossConnFromClassName = _EntityCrossConnFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 5),
    _EntityCrossConnFromClassName_Type()
)
entityCrossConnFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnFromClassName.setStatus("current")
_EntityCrossConnToShelfNo_Type = Unsigned32
_EntityCrossConnToShelfNo_Object = MibTableColumn
entityCrossConnToShelfNo = _EntityCrossConnToShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 6),
    _EntityCrossConnToShelfNo_Type()
)
entityCrossConnToShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnToShelfNo.setStatus("current")
_EntityCrossConnToSlotNo_Type = Unsigned32
_EntityCrossConnToSlotNo_Object = MibTableColumn
entityCrossConnToSlotNo = _EntityCrossConnToSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 7),
    _EntityCrossConnToSlotNo_Type()
)
entityCrossConnToSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnToSlotNo.setStatus("current")
_EntityCrossConnToPortNo_Type = Unsigned32
_EntityCrossConnToPortNo_Object = MibTableColumn
entityCrossConnToPortNo = _EntityCrossConnToPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 8),
    _EntityCrossConnToPortNo_Type()
)
entityCrossConnToPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnToPortNo.setStatus("current")
_EntityCrossConnToExtNo_Type = Unsigned32
_EntityCrossConnToExtNo_Object = MibTableColumn
entityCrossConnToExtNo = _EntityCrossConnToExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 9),
    _EntityCrossConnToExtNo_Type()
)
entityCrossConnToExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnToExtNo.setStatus("current")
_EntityCrossConnToClassName_Type = EntityClassName
_EntityCrossConnToClassName_Object = MibTableColumn
entityCrossConnToClassName = _EntityCrossConnToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 10),
    _EntityCrossConnToClassName_Type()
)
entityCrossConnToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnToClassName.setStatus("current")
_EntityCrossConnClassName_Type = EntityClassName
_EntityCrossConnClassName_Object = MibTableColumn
entityCrossConnClassName = _EntityCrossConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 11),
    _EntityCrossConnClassName_Type()
)
entityCrossConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossConnClassName.setStatus("current")
_EntityCrossConnAidString_Type = SnmpAdminString
_EntityCrossConnAidString_Object = MibTableColumn
entityCrossConnAidString = _EntityCrossConnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 12),
    _EntityCrossConnAidString_Type()
)
entityCrossConnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnAidString.setStatus("current")
_EntityCrossConnType_Type = FspR7EntityType
_EntityCrossConnType_Object = MibTableColumn
entityCrossConnType = _EntityCrossConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 13),
    _EntityCrossConnType_Type()
)
entityCrossConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnType.setStatus("current")
_EntityCrossConnTableId_Type = RowPointer
_EntityCrossConnTableId_Object = MibTableColumn
entityCrossConnTableId = _EntityCrossConnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 14),
    _EntityCrossConnTableId_Type()
)
entityCrossConnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnTableId.setStatus("current")
_EntityCrossConnParentId_Type = RowPointer
_EntityCrossConnParentId_Object = MibTableColumn
entityCrossConnParentId = _EntityCrossConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 15),
    _EntityCrossConnParentId_Type()
)
entityCrossConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnParentId.setStatus("current")
_EntityCrossConnFromId_Type = RowPointer
_EntityCrossConnFromId_Object = MibTableColumn
entityCrossConnFromId = _EntityCrossConnFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 16),
    _EntityCrossConnFromId_Type()
)
entityCrossConnFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnFromId.setStatus("current")
_EntityCrossConnToId_Type = RowPointer
_EntityCrossConnToId_Object = MibTableColumn
entityCrossConnToId = _EntityCrossConnToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 17),
    _EntityCrossConnToId_Type()
)
entityCrossConnToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnToId.setStatus("current")
_EntityCrossConnClass_Type = EntityClass
_EntityCrossConnClass_Object = MibTableColumn
entityCrossConnClass = _EntityCrossConnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 8, 1, 18),
    _EntityCrossConnClass_Type()
)
entityCrossConnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossConnClass.setStatus("current")
_EntityTerminPointTable_Object = MibTable
entityTerminPointTable = _EntityTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10)
)
if mibBuilder.loadTexts:
    entityTerminPointTable.setStatus("current")
_EntityTerminPointEntry_Object = MibTableRow
entityTerminPointEntry = _EntityTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1)
)
entityTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
)
if mibBuilder.loadTexts:
    entityTerminPointEntry.setStatus("current")
_EntityTerminPointIndexNo1_Type = Unsigned32
_EntityTerminPointIndexNo1_Object = MibTableColumn
entityTerminPointIndexNo1 = _EntityTerminPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 1),
    _EntityTerminPointIndexNo1_Type()
)
entityTerminPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityTerminPointIndexNo1.setStatus("current")
_EntityTerminPointIndexNo2_Type = Unsigned32
_EntityTerminPointIndexNo2_Object = MibTableColumn
entityTerminPointIndexNo2 = _EntityTerminPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 2),
    _EntityTerminPointIndexNo2_Type()
)
entityTerminPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityTerminPointIndexNo2.setStatus("current")
_EntityTerminPointIndexNo3_Type = Unsigned32
_EntityTerminPointIndexNo3_Object = MibTableColumn
entityTerminPointIndexNo3 = _EntityTerminPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 3),
    _EntityTerminPointIndexNo3_Type()
)
entityTerminPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityTerminPointIndexNo3.setStatus("current")
_EntityTerminPointIndexNo4_Type = Unsigned32
_EntityTerminPointIndexNo4_Object = MibTableColumn
entityTerminPointIndexNo4 = _EntityTerminPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 4),
    _EntityTerminPointIndexNo4_Type()
)
entityTerminPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityTerminPointIndexNo4.setStatus("current")
_EntityTerminPointClassName_Type = EntityClassName
_EntityTerminPointClassName_Object = MibTableColumn
entityTerminPointClassName = _EntityTerminPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 5),
    _EntityTerminPointClassName_Type()
)
entityTerminPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityTerminPointClassName.setStatus("current")
_EntityTerminPointAidString_Type = SnmpAdminString
_EntityTerminPointAidString_Object = MibTableColumn
entityTerminPointAidString = _EntityTerminPointAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 6),
    _EntityTerminPointAidString_Type()
)
entityTerminPointAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointAidString.setStatus("current")
_EntityTerminPointType_Type = FspR7EntityType
_EntityTerminPointType_Object = MibTableColumn
entityTerminPointType = _EntityTerminPointType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 7),
    _EntityTerminPointType_Type()
)
entityTerminPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointType.setStatus("current")
_EntityTerminPointAssignState_Type = AssignmentState
_EntityTerminPointAssignState_Object = MibTableColumn
entityTerminPointAssignState = _EntityTerminPointAssignState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 8),
    _EntityTerminPointAssignState_Type()
)
entityTerminPointAssignState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointAssignState.setStatus("current")
_EntityTerminPointTableId_Type = RowPointer
_EntityTerminPointTableId_Object = MibTableColumn
entityTerminPointTableId = _EntityTerminPointTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 9),
    _EntityTerminPointTableId_Type()
)
entityTerminPointTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointTableId.setStatus("current")
_EntityTerminPointParentId_Type = RowPointer
_EntityTerminPointParentId_Object = MibTableColumn
entityTerminPointParentId = _EntityTerminPointParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 10),
    _EntityTerminPointParentId_Type()
)
entityTerminPointParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointParentId.setStatus("current")
_EntityTerminPointOneIndex_Type = Unsigned32
_EntityTerminPointOneIndex_Object = MibTableColumn
entityTerminPointOneIndex = _EntityTerminPointOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 11),
    _EntityTerminPointOneIndex_Type()
)
entityTerminPointOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointOneIndex.setStatus("current")
_EntityTerminPointReferencedTo_Type = RowPointer
_EntityTerminPointReferencedTo_Object = MibTableColumn
entityTerminPointReferencedTo = _EntityTerminPointReferencedTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 12),
    _EntityTerminPointReferencedTo_Type()
)
entityTerminPointReferencedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointReferencedTo.setStatus("current")
_EntityTerminPointClass_Type = EntityClass
_EntityTerminPointClass_Object = MibTableColumn
entityTerminPointClass = _EntityTerminPointClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 13),
    _EntityTerminPointClass_Type()
)
entityTerminPointClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointClass.setStatus("current")
_EntityTerminPointPortClass_Type = EntityClass
_EntityTerminPointPortClass_Object = MibTableColumn
entityTerminPointPortClass = _EntityTerminPointPortClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10, 1, 14),
    _EntityTerminPointPortClass_Type()
)
entityTerminPointPortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityTerminPointPortClass.setStatus("current")
_EntityConnectionTable_Object = MibTable
entityConnectionTable = _EntityConnectionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11)
)
if mibBuilder.loadTexts:
    entityConnectionTable.setStatus("current")
_EntityConnectionEntry_Object = MibTableRow
entityConnectionEntry = _EntityConnectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1)
)
entityConnectionEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "entityConnectionClassName"),
)
if mibBuilder.loadTexts:
    entityConnectionEntry.setStatus("current")
_EntityConnectionClassName_Type = EntityClassName
_EntityConnectionClassName_Object = MibTableColumn
entityConnectionClassName = _EntityConnectionClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 1),
    _EntityConnectionClassName_Type()
)
entityConnectionClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityConnectionClassName.setStatus("current")
_EntityConnectionAidString_Type = SnmpAdminString
_EntityConnectionAidString_Object = MibTableColumn
entityConnectionAidString = _EntityConnectionAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 2),
    _EntityConnectionAidString_Type()
)
entityConnectionAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionAidString.setStatus("current")
_EntityConnectionType_Type = FspR7EntityType
_EntityConnectionType_Object = MibTableColumn
entityConnectionType = _EntityConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 3),
    _EntityConnectionType_Type()
)
entityConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionType.setStatus("current")
_EntityConnectionTableId_Type = RowPointer
_EntityConnectionTableId_Object = MibTableColumn
entityConnectionTableId = _EntityConnectionTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 4),
    _EntityConnectionTableId_Type()
)
entityConnectionTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionTableId.setStatus("current")
_EntityConnectionParentId_Type = RowPointer
_EntityConnectionParentId_Object = MibTableColumn
entityConnectionParentId = _EntityConnectionParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 5),
    _EntityConnectionParentId_Type()
)
entityConnectionParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionParentId.setStatus("current")
_EntityConnectionFromId_Type = RowPointer
_EntityConnectionFromId_Object = MibTableColumn
entityConnectionFromId = _EntityConnectionFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 6),
    _EntityConnectionFromId_Type()
)
entityConnectionFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionFromId.setStatus("current")
_EntityConnectionToId_Type = RowPointer
_EntityConnectionToId_Object = MibTableColumn
entityConnectionToId = _EntityConnectionToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 7),
    _EntityConnectionToId_Type()
)
entityConnectionToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionToId.setStatus("current")
_EntityConnectionClass_Type = EntityClass
_EntityConnectionClass_Object = MibTableColumn
entityConnectionClass = _EntityConnectionClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 11, 1, 8),
    _EntityConnectionClass_Type()
)
entityConnectionClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityConnectionClass.setStatus("current")
_EntityExternalPortTable_Object = MibTable
entityExternalPortTable = _EntityExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12)
)
if mibBuilder.loadTexts:
    entityExternalPortTable.setStatus("current")
_EntityExternalPortEntry_Object = MibTableRow
entityExternalPortEntry = _EntityExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1)
)
entityExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
)
if mibBuilder.loadTexts:
    entityExternalPortEntry.setStatus("current")
_EntityExternalPortShelfNo_Type = Unsigned32
_EntityExternalPortShelfNo_Object = MibTableColumn
entityExternalPortShelfNo = _EntityExternalPortShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 1),
    _EntityExternalPortShelfNo_Type()
)
entityExternalPortShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityExternalPortShelfNo.setStatus("current")
_EntityExternalPortSlotNo_Type = Unsigned32
_EntityExternalPortSlotNo_Object = MibTableColumn
entityExternalPortSlotNo = _EntityExternalPortSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 2),
    _EntityExternalPortSlotNo_Type()
)
entityExternalPortSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityExternalPortSlotNo.setStatus("current")
_EntityExternalPortPortNo_Type = Unsigned32
_EntityExternalPortPortNo_Object = MibTableColumn
entityExternalPortPortNo = _EntityExternalPortPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 3),
    _EntityExternalPortPortNo_Type()
)
entityExternalPortPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityExternalPortPortNo.setStatus("current")
_EntityExternalPortExtNo_Type = Unsigned32
_EntityExternalPortExtNo_Object = MibTableColumn
entityExternalPortExtNo = _EntityExternalPortExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 4),
    _EntityExternalPortExtNo_Type()
)
entityExternalPortExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityExternalPortExtNo.setStatus("current")
_EntityExternalPortClassName_Type = EntityClassName
_EntityExternalPortClassName_Object = MibTableColumn
entityExternalPortClassName = _EntityExternalPortClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 5),
    _EntityExternalPortClassName_Type()
)
entityExternalPortClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityExternalPortClassName.setStatus("current")
_EntityExternalPortAidString_Type = SnmpAdminString
_EntityExternalPortAidString_Object = MibTableColumn
entityExternalPortAidString = _EntityExternalPortAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 6),
    _EntityExternalPortAidString_Type()
)
entityExternalPortAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortAidString.setStatus("current")
_EntityExternalPortType_Type = FspR7EntityType
_EntityExternalPortType_Object = MibTableColumn
entityExternalPortType = _EntityExternalPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 7),
    _EntityExternalPortType_Type()
)
entityExternalPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortType.setStatus("current")
_EntityExternalPortTableId_Type = RowPointer
_EntityExternalPortTableId_Object = MibTableColumn
entityExternalPortTableId = _EntityExternalPortTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 8),
    _EntityExternalPortTableId_Type()
)
entityExternalPortTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortTableId.setStatus("current")
_EntityExternalPortParentId_Type = RowPointer
_EntityExternalPortParentId_Object = MibTableColumn
entityExternalPortParentId = _EntityExternalPortParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 9),
    _EntityExternalPortParentId_Type()
)
entityExternalPortParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortParentId.setStatus("current")
_EntityExternalPortClass_Type = EntityClass
_EntityExternalPortClass_Object = MibTableColumn
entityExternalPortClass = _EntityExternalPortClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 10),
    _EntityExternalPortClass_Type()
)
entityExternalPortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortClass.setStatus("current")
_EntityExternalPortOneIndex_Type = Unsigned32
_EntityExternalPortOneIndex_Object = MibTableColumn
entityExternalPortOneIndex = _EntityExternalPortOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 12, 1, 11),
    _EntityExternalPortOneIndex_Type()
)
entityExternalPortOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityExternalPortOneIndex.setStatus("current")
_EntityCrsOptLineTable_Object = MibTable
entityCrsOptLineTable = _EntityCrsOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13)
)
if mibBuilder.loadTexts:
    entityCrsOptLineTable.setStatus("current")
_EntityCrsOptLineEntry_Object = MibTableRow
entityCrsOptLineEntry = _EntityCrsOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1)
)
entityCrsOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineClassName"),
)
if mibBuilder.loadTexts:
    entityCrsOptLineEntry.setStatus("current")
_EntityCrsOptLineFromIndexNo1_Type = Unsigned32
_EntityCrsOptLineFromIndexNo1_Object = MibTableColumn
entityCrsOptLineFromIndexNo1 = _EntityCrsOptLineFromIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 1),
    _EntityCrsOptLineFromIndexNo1_Type()
)
entityCrsOptLineFromIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineFromIndexNo1.setStatus("current")
_EntityCrsOptLineFromIndexNo2_Type = Unsigned32
_EntityCrsOptLineFromIndexNo2_Object = MibTableColumn
entityCrsOptLineFromIndexNo2 = _EntityCrsOptLineFromIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 2),
    _EntityCrsOptLineFromIndexNo2_Type()
)
entityCrsOptLineFromIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineFromIndexNo2.setStatus("current")
_EntityCrsOptLineFromIndexNo3_Type = Unsigned32
_EntityCrsOptLineFromIndexNo3_Object = MibTableColumn
entityCrsOptLineFromIndexNo3 = _EntityCrsOptLineFromIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 3),
    _EntityCrsOptLineFromIndexNo3_Type()
)
entityCrsOptLineFromIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineFromIndexNo3.setStatus("current")
_EntityCrsOptLineFromIndexNo4_Type = Unsigned32
_EntityCrsOptLineFromIndexNo4_Object = MibTableColumn
entityCrsOptLineFromIndexNo4 = _EntityCrsOptLineFromIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 4),
    _EntityCrsOptLineFromIndexNo4_Type()
)
entityCrsOptLineFromIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineFromIndexNo4.setStatus("current")
_EntityCrsOptLineFromClassName_Type = EntityClassName
_EntityCrsOptLineFromClassName_Object = MibTableColumn
entityCrsOptLineFromClassName = _EntityCrsOptLineFromClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 5),
    _EntityCrsOptLineFromClassName_Type()
)
entityCrsOptLineFromClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineFromClassName.setStatus("current")
_EntityCrsOptLineToIndexNo1_Type = Unsigned32
_EntityCrsOptLineToIndexNo1_Object = MibTableColumn
entityCrsOptLineToIndexNo1 = _EntityCrsOptLineToIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 6),
    _EntityCrsOptLineToIndexNo1_Type()
)
entityCrsOptLineToIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineToIndexNo1.setStatus("current")
_EntityCrsOptLineToIndexNo2_Type = Unsigned32
_EntityCrsOptLineToIndexNo2_Object = MibTableColumn
entityCrsOptLineToIndexNo2 = _EntityCrsOptLineToIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 7),
    _EntityCrsOptLineToIndexNo2_Type()
)
entityCrsOptLineToIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineToIndexNo2.setStatus("current")
_EntityCrsOptLineToIndexNo3_Type = Unsigned32
_EntityCrsOptLineToIndexNo3_Object = MibTableColumn
entityCrsOptLineToIndexNo3 = _EntityCrsOptLineToIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 8),
    _EntityCrsOptLineToIndexNo3_Type()
)
entityCrsOptLineToIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineToIndexNo3.setStatus("current")
_EntityCrsOptLineToIndexNo4_Type = Unsigned32
_EntityCrsOptLineToIndexNo4_Object = MibTableColumn
entityCrsOptLineToIndexNo4 = _EntityCrsOptLineToIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 9),
    _EntityCrsOptLineToIndexNo4_Type()
)
entityCrsOptLineToIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineToIndexNo4.setStatus("current")
_EntityCrsOptLineToClassName_Type = EntityClassName
_EntityCrsOptLineToClassName_Object = MibTableColumn
entityCrsOptLineToClassName = _EntityCrsOptLineToClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 10),
    _EntityCrsOptLineToClassName_Type()
)
entityCrsOptLineToClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineToClassName.setStatus("current")
_EntityCrsOptLineClassName_Type = EntityClassName
_EntityCrsOptLineClassName_Object = MibTableColumn
entityCrsOptLineClassName = _EntityCrsOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 11),
    _EntityCrsOptLineClassName_Type()
)
entityCrsOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrsOptLineClassName.setStatus("current")
_EntityCrsOptLineAidString_Type = SnmpAdminString
_EntityCrsOptLineAidString_Object = MibTableColumn
entityCrsOptLineAidString = _EntityCrsOptLineAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 12),
    _EntityCrsOptLineAidString_Type()
)
entityCrsOptLineAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineAidString.setStatus("current")
_EntityCrsOptLineType_Type = FspR7EntityType
_EntityCrsOptLineType_Object = MibTableColumn
entityCrsOptLineType = _EntityCrsOptLineType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 13),
    _EntityCrsOptLineType_Type()
)
entityCrsOptLineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineType.setStatus("current")
_EntityCrsOptLineTableId_Type = RowPointer
_EntityCrsOptLineTableId_Object = MibTableColumn
entityCrsOptLineTableId = _EntityCrsOptLineTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 14),
    _EntityCrsOptLineTableId_Type()
)
entityCrsOptLineTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineTableId.setStatus("current")
_EntityCrsOptLineParentId_Type = RowPointer
_EntityCrsOptLineParentId_Object = MibTableColumn
entityCrsOptLineParentId = _EntityCrsOptLineParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 15),
    _EntityCrsOptLineParentId_Type()
)
entityCrsOptLineParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineParentId.setStatus("current")
_EntityCrsOptLineFromId_Type = RowPointer
_EntityCrsOptLineFromId_Object = MibTableColumn
entityCrsOptLineFromId = _EntityCrsOptLineFromId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 16),
    _EntityCrsOptLineFromId_Type()
)
entityCrsOptLineFromId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineFromId.setStatus("current")
_EntityCrsOptLineToId_Type = RowPointer
_EntityCrsOptLineToId_Object = MibTableColumn
entityCrsOptLineToId = _EntityCrsOptLineToId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 17),
    _EntityCrsOptLineToId_Type()
)
entityCrsOptLineToId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineToId.setStatus("current")
_EntityCrsOptLineClass_Type = EntityClass
_EntityCrsOptLineClass_Object = MibTableColumn
entityCrsOptLineClass = _EntityCrsOptLineClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 13, 1, 18),
    _EntityCrsOptLineClass_Type()
)
entityCrsOptLineClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrsOptLineClass.setStatus("current")
_EntityContainerTable_Object = MibTable
entityContainerTable = _EntityContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16)
)
if mibBuilder.loadTexts:
    entityContainerTable.setStatus("current")
_EntityContainerEntry_Object = MibTableRow
entityContainerEntry = _EntityContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1)
)
entityContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerClassName"),
)
if mibBuilder.loadTexts:
    entityContainerEntry.setStatus("current")
_EntityContainerShelfNo_Type = Unsigned32
_EntityContainerShelfNo_Object = MibTableColumn
entityContainerShelfNo = _EntityContainerShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 1),
    _EntityContainerShelfNo_Type()
)
entityContainerShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityContainerShelfNo.setStatus("current")
_EntityContainerSlotNo_Type = Unsigned32
_EntityContainerSlotNo_Object = MibTableColumn
entityContainerSlotNo = _EntityContainerSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 2),
    _EntityContainerSlotNo_Type()
)
entityContainerSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityContainerSlotNo.setStatus("current")
_EntityContainerPortNo_Type = Unsigned32
_EntityContainerPortNo_Object = MibTableColumn
entityContainerPortNo = _EntityContainerPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 3),
    _EntityContainerPortNo_Type()
)
entityContainerPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityContainerPortNo.setStatus("current")
_EntityContainerExtNo_Type = Unsigned32
_EntityContainerExtNo_Object = MibTableColumn
entityContainerExtNo = _EntityContainerExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 4),
    _EntityContainerExtNo_Type()
)
entityContainerExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityContainerExtNo.setStatus("current")
_EntityContainerClassName_Type = EntityClassName
_EntityContainerClassName_Object = MibTableColumn
entityContainerClassName = _EntityContainerClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 5),
    _EntityContainerClassName_Type()
)
entityContainerClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityContainerClassName.setStatus("current")
_EntityContainerAidString_Type = SnmpAdminString
_EntityContainerAidString_Object = MibTableColumn
entityContainerAidString = _EntityContainerAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 6),
    _EntityContainerAidString_Type()
)
entityContainerAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerAidString.setStatus("current")
_EntityContainerType_Type = FspR7EntityType
_EntityContainerType_Object = MibTableColumn
entityContainerType = _EntityContainerType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 7),
    _EntityContainerType_Type()
)
entityContainerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerType.setStatus("current")
_EntityContainerTableId_Type = RowPointer
_EntityContainerTableId_Object = MibTableColumn
entityContainerTableId = _EntityContainerTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 8),
    _EntityContainerTableId_Type()
)
entityContainerTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerTableId.setStatus("current")
_EntityContainerParentId_Type = RowPointer
_EntityContainerParentId_Object = MibTableColumn
entityContainerParentId = _EntityContainerParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 9),
    _EntityContainerParentId_Type()
)
entityContainerParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerParentId.setStatus("current")
_EntityContainerClass_Type = EntityClass
_EntityContainerClass_Object = MibTableColumn
entityContainerClass = _EntityContainerClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 10),
    _EntityContainerClass_Type()
)
entityContainerClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerClass.setStatus("current")
_EntityContainerOneIndex_Type = Unsigned32
_EntityContainerOneIndex_Object = MibTableColumn
entityContainerOneIndex = _EntityContainerOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 16, 1, 11),
    _EntityContainerOneIndex_Type()
)
entityContainerOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityContainerOneIndex.setStatus("current")
_EntityOpticalMuxTable_Object = MibTable
entityOpticalMuxTable = _EntityOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17)
)
if mibBuilder.loadTexts:
    entityOpticalMuxTable.setStatus("current")
_EntityOpticalMuxEntry_Object = MibTableRow
entityOpticalMuxEntry = _EntityOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1)
)
entityOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"),
)
if mibBuilder.loadTexts:
    entityOpticalMuxEntry.setStatus("current")
_EntityOpticalMuxShelfNo_Type = Unsigned32
_EntityOpticalMuxShelfNo_Object = MibTableColumn
entityOpticalMuxShelfNo = _EntityOpticalMuxShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 1),
    _EntityOpticalMuxShelfNo_Type()
)
entityOpticalMuxShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOpticalMuxShelfNo.setStatus("current")
_EntityOpticalMuxSlotNo_Type = Unsigned32
_EntityOpticalMuxSlotNo_Object = MibTableColumn
entityOpticalMuxSlotNo = _EntityOpticalMuxSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 2),
    _EntityOpticalMuxSlotNo_Type()
)
entityOpticalMuxSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOpticalMuxSlotNo.setStatus("current")
_EntityOpticalMuxPortNo_Type = Unsigned32
_EntityOpticalMuxPortNo_Object = MibTableColumn
entityOpticalMuxPortNo = _EntityOpticalMuxPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 3),
    _EntityOpticalMuxPortNo_Type()
)
entityOpticalMuxPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOpticalMuxPortNo.setStatus("current")
_EntityOpticalMuxExtNo_Type = Unsigned32
_EntityOpticalMuxExtNo_Object = MibTableColumn
entityOpticalMuxExtNo = _EntityOpticalMuxExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 4),
    _EntityOpticalMuxExtNo_Type()
)
entityOpticalMuxExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOpticalMuxExtNo.setStatus("current")
_EntityOpticalMuxClassName_Type = EntityClassName
_EntityOpticalMuxClassName_Object = MibTableColumn
entityOpticalMuxClassName = _EntityOpticalMuxClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 5),
    _EntityOpticalMuxClassName_Type()
)
entityOpticalMuxClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityOpticalMuxClassName.setStatus("current")
_EntityOpticalMuxAidString_Type = SnmpAdminString
_EntityOpticalMuxAidString_Object = MibTableColumn
entityOpticalMuxAidString = _EntityOpticalMuxAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 6),
    _EntityOpticalMuxAidString_Type()
)
entityOpticalMuxAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxAidString.setStatus("current")
_EntityOpticalMuxType_Type = FspR7EntityType
_EntityOpticalMuxType_Object = MibTableColumn
entityOpticalMuxType = _EntityOpticalMuxType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 7),
    _EntityOpticalMuxType_Type()
)
entityOpticalMuxType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxType.setStatus("current")
_EntityOpticalMuxTableId_Type = RowPointer
_EntityOpticalMuxTableId_Object = MibTableColumn
entityOpticalMuxTableId = _EntityOpticalMuxTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 8),
    _EntityOpticalMuxTableId_Type()
)
entityOpticalMuxTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxTableId.setStatus("current")
_EntityOpticalMuxParentId_Type = RowPointer
_EntityOpticalMuxParentId_Object = MibTableColumn
entityOpticalMuxParentId = _EntityOpticalMuxParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 9),
    _EntityOpticalMuxParentId_Type()
)
entityOpticalMuxParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxParentId.setStatus("current")
_EntityOpticalMuxClass_Type = EntityClass
_EntityOpticalMuxClass_Object = MibTableColumn
entityOpticalMuxClass = _EntityOpticalMuxClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 10),
    _EntityOpticalMuxClass_Type()
)
entityOpticalMuxClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxClass.setStatus("current")
_EntityOpticalMuxOneIndex_Type = Unsigned32
_EntityOpticalMuxOneIndex_Object = MibTableColumn
entityOpticalMuxOneIndex = _EntityOpticalMuxOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 17, 1, 11),
    _EntityOpticalMuxOneIndex_Type()
)
entityOpticalMuxOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityOpticalMuxOneIndex.setStatus("current")
_EntityShelfConnTable_Object = MibTable
entityShelfConnTable = _EntityShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18)
)
if mibBuilder.loadTexts:
    entityShelfConnTable.setStatus("current")
_EntityShelfConnEntry_Object = MibTableRow
entityShelfConnEntry = _EntityShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1)
)
entityShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"),
)
if mibBuilder.loadTexts:
    entityShelfConnEntry.setStatus("current")
_EntityShelfConnShelfNo_Type = Unsigned32
_EntityShelfConnShelfNo_Object = MibTableColumn
entityShelfConnShelfNo = _EntityShelfConnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 1),
    _EntityShelfConnShelfNo_Type()
)
entityShelfConnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityShelfConnShelfNo.setStatus("current")
_EntityShelfConnSlotNo_Type = Unsigned32
_EntityShelfConnSlotNo_Object = MibTableColumn
entityShelfConnSlotNo = _EntityShelfConnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 2),
    _EntityShelfConnSlotNo_Type()
)
entityShelfConnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityShelfConnSlotNo.setStatus("current")
_EntityShelfConnPortNo_Type = Unsigned32
_EntityShelfConnPortNo_Object = MibTableColumn
entityShelfConnPortNo = _EntityShelfConnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 3),
    _EntityShelfConnPortNo_Type()
)
entityShelfConnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityShelfConnPortNo.setStatus("current")
_EntityShelfConnExtNo_Type = Unsigned32
_EntityShelfConnExtNo_Object = MibTableColumn
entityShelfConnExtNo = _EntityShelfConnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 4),
    _EntityShelfConnExtNo_Type()
)
entityShelfConnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityShelfConnExtNo.setStatus("current")
_EntityShelfConnClassName_Type = EntityClassName
_EntityShelfConnClassName_Object = MibTableColumn
entityShelfConnClassName = _EntityShelfConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 5),
    _EntityShelfConnClassName_Type()
)
entityShelfConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityShelfConnClassName.setStatus("current")
_EntityShelfConnAidString_Type = SnmpAdminString
_EntityShelfConnAidString_Object = MibTableColumn
entityShelfConnAidString = _EntityShelfConnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 6),
    _EntityShelfConnAidString_Type()
)
entityShelfConnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnAidString.setStatus("current")
_EntityShelfConnType_Type = FspR7EntityType
_EntityShelfConnType_Object = MibTableColumn
entityShelfConnType = _EntityShelfConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 7),
    _EntityShelfConnType_Type()
)
entityShelfConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnType.setStatus("current")
_EntityShelfConnTableId_Type = RowPointer
_EntityShelfConnTableId_Object = MibTableColumn
entityShelfConnTableId = _EntityShelfConnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 8),
    _EntityShelfConnTableId_Type()
)
entityShelfConnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnTableId.setStatus("current")
_EntityShelfConnParentId_Type = RowPointer
_EntityShelfConnParentId_Object = MibTableColumn
entityShelfConnParentId = _EntityShelfConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 9),
    _EntityShelfConnParentId_Type()
)
entityShelfConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnParentId.setStatus("current")
_EntityShelfConnClass_Type = EntityClass
_EntityShelfConnClass_Object = MibTableColumn
entityShelfConnClass = _EntityShelfConnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 10),
    _EntityShelfConnClass_Type()
)
entityShelfConnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnClass.setStatus("current")
_EntityShelfConnOneIndex_Type = Unsigned32
_EntityShelfConnOneIndex_Object = MibTableColumn
entityShelfConnOneIndex = _EntityShelfConnOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 18, 1, 11),
    _EntityShelfConnOneIndex_Type()
)
entityShelfConnOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityShelfConnOneIndex.setStatus("current")
_EntityFfpTable_Object = MibTable
entityFfpTable = _EntityFfpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19)
)
if mibBuilder.loadTexts:
    entityFfpTable.setStatus("current")
_EntityFfpEntry_Object = MibTableRow
entityFfpEntry = _EntityFfpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1)
)
entityFfpEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFfpShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpClassName"),
)
if mibBuilder.loadTexts:
    entityFfpEntry.setStatus("current")
_EntityFfpShelfNo_Type = Unsigned32
_EntityFfpShelfNo_Object = MibTableColumn
entityFfpShelfNo = _EntityFfpShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 1),
    _EntityFfpShelfNo_Type()
)
entityFfpShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFfpShelfNo.setStatus("current")
_EntityFfpSlotNo_Type = Unsigned32
_EntityFfpSlotNo_Object = MibTableColumn
entityFfpSlotNo = _EntityFfpSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 2),
    _EntityFfpSlotNo_Type()
)
entityFfpSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFfpSlotNo.setStatus("current")
_EntityFfpPortNo_Type = Unsigned32
_EntityFfpPortNo_Object = MibTableColumn
entityFfpPortNo = _EntityFfpPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 3),
    _EntityFfpPortNo_Type()
)
entityFfpPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFfpPortNo.setStatus("current")
_EntityFfpExtNo_Type = Unsigned32
_EntityFfpExtNo_Object = MibTableColumn
entityFfpExtNo = _EntityFfpExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 4),
    _EntityFfpExtNo_Type()
)
entityFfpExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFfpExtNo.setStatus("current")
_EntityFfpClassName_Type = EntityClassName
_EntityFfpClassName_Object = MibTableColumn
entityFfpClassName = _EntityFfpClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 5),
    _EntityFfpClassName_Type()
)
entityFfpClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFfpClassName.setStatus("current")
_EntityFfpAidString_Type = SnmpAdminString
_EntityFfpAidString_Object = MibTableColumn
entityFfpAidString = _EntityFfpAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 6),
    _EntityFfpAidString_Type()
)
entityFfpAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpAidString.setStatus("current")
_EntityFfpType_Type = FspR7EntityType
_EntityFfpType_Object = MibTableColumn
entityFfpType = _EntityFfpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 7),
    _EntityFfpType_Type()
)
entityFfpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpType.setStatus("current")
_EntityFfpTableId_Type = RowPointer
_EntityFfpTableId_Object = MibTableColumn
entityFfpTableId = _EntityFfpTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 8),
    _EntityFfpTableId_Type()
)
entityFfpTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpTableId.setStatus("current")
_EntityFfpParentId_Type = RowPointer
_EntityFfpParentId_Object = MibTableColumn
entityFfpParentId = _EntityFfpParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 9),
    _EntityFfpParentId_Type()
)
entityFfpParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpParentId.setStatus("current")
_EntityFfpClass_Type = EntityClass
_EntityFfpClass_Object = MibTableColumn
entityFfpClass = _EntityFfpClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 10),
    _EntityFfpClass_Type()
)
entityFfpClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpClass.setStatus("current")
_EntityFfpOneIndex_Type = Unsigned32
_EntityFfpOneIndex_Object = MibTableColumn
entityFfpOneIndex = _EntityFfpOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 19, 1, 11),
    _EntityFfpOneIndex_Type()
)
entityFfpOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFfpOneIndex.setStatus("current")
_EntityCrossDcnTable_Object = MibTable
entityCrossDcnTable = _EntityCrossDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20)
)
if mibBuilder.loadTexts:
    entityCrossDcnTable.setStatus("current")
_EntityCrossDcnEntry_Object = MibTableRow
entityCrossDcnEntry = _EntityCrossDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1)
)
entityCrossDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnClassName"),
)
if mibBuilder.loadTexts:
    entityCrossDcnEntry.setStatus("current")
_EntityCrossDcnShelfNo_Type = Unsigned32
_EntityCrossDcnShelfNo_Object = MibTableColumn
entityCrossDcnShelfNo = _EntityCrossDcnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 1),
    _EntityCrossDcnShelfNo_Type()
)
entityCrossDcnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossDcnShelfNo.setStatus("current")
_EntityCrossDcnSlotNo_Type = Unsigned32
_EntityCrossDcnSlotNo_Object = MibTableColumn
entityCrossDcnSlotNo = _EntityCrossDcnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 2),
    _EntityCrossDcnSlotNo_Type()
)
entityCrossDcnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossDcnSlotNo.setStatus("current")
_EntityCrossDcnPortNo_Type = Unsigned32
_EntityCrossDcnPortNo_Object = MibTableColumn
entityCrossDcnPortNo = _EntityCrossDcnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 3),
    _EntityCrossDcnPortNo_Type()
)
entityCrossDcnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossDcnPortNo.setStatus("current")
_EntityCrossDcnExtNo_Type = Unsigned32
_EntityCrossDcnExtNo_Object = MibTableColumn
entityCrossDcnExtNo = _EntityCrossDcnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 4),
    _EntityCrossDcnExtNo_Type()
)
entityCrossDcnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossDcnExtNo.setStatus("current")
_EntityCrossDcnClassName_Type = EntityClassName
_EntityCrossDcnClassName_Object = MibTableColumn
entityCrossDcnClassName = _EntityCrossDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 5),
    _EntityCrossDcnClassName_Type()
)
entityCrossDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityCrossDcnClassName.setStatus("current")
_EntityCrossDcnAidString_Type = SnmpAdminString
_EntityCrossDcnAidString_Object = MibTableColumn
entityCrossDcnAidString = _EntityCrossDcnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 6),
    _EntityCrossDcnAidString_Type()
)
entityCrossDcnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnAidString.setStatus("current")
_EntityCrossDcnType_Type = FspR7EntityType
_EntityCrossDcnType_Object = MibTableColumn
entityCrossDcnType = _EntityCrossDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 7),
    _EntityCrossDcnType_Type()
)
entityCrossDcnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnType.setStatus("current")
_EntityCrossDcnTableId_Type = RowPointer
_EntityCrossDcnTableId_Object = MibTableColumn
entityCrossDcnTableId = _EntityCrossDcnTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 8),
    _EntityCrossDcnTableId_Type()
)
entityCrossDcnTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnTableId.setStatus("current")
_EntityCrossDcnParentId_Type = RowPointer
_EntityCrossDcnParentId_Object = MibTableColumn
entityCrossDcnParentId = _EntityCrossDcnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 9),
    _EntityCrossDcnParentId_Type()
)
entityCrossDcnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnParentId.setStatus("current")
_EntityCrossDcnClass_Type = EntityClass
_EntityCrossDcnClass_Object = MibTableColumn
entityCrossDcnClass = _EntityCrossDcnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 10),
    _EntityCrossDcnClass_Type()
)
entityCrossDcnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnClass.setStatus("current")
_EntityCrossDcnOneIndex_Type = Unsigned32
_EntityCrossDcnOneIndex_Object = MibTableColumn
entityCrossDcnOneIndex = _EntityCrossDcnOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 20, 1, 11),
    _EntityCrossDcnOneIndex_Type()
)
entityCrossDcnOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCrossDcnOneIndex.setStatus("current")
_EntityProtectionCableTable_Object = MibTable
entityProtectionCableTable = _EntityProtectionCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21)
)
if mibBuilder.loadTexts:
    entityProtectionCableTable.setStatus("current")
_EntityProtectionCableEntry_Object = MibTableRow
entityProtectionCableEntry = _EntityProtectionCableEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1)
)
entityProtectionCableEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex1"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex2"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex3"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex4"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableClassName"),
)
if mibBuilder.loadTexts:
    entityProtectionCableEntry.setStatus("current")
_EntityProtectionCableIndex1_Type = Unsigned32
_EntityProtectionCableIndex1_Object = MibTableColumn
entityProtectionCableIndex1 = _EntityProtectionCableIndex1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 1),
    _EntityProtectionCableIndex1_Type()
)
entityProtectionCableIndex1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityProtectionCableIndex1.setStatus("current")
_EntityProtectionCableIndex2_Type = Unsigned32
_EntityProtectionCableIndex2_Object = MibTableColumn
entityProtectionCableIndex2 = _EntityProtectionCableIndex2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 2),
    _EntityProtectionCableIndex2_Type()
)
entityProtectionCableIndex2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityProtectionCableIndex2.setStatus("current")
_EntityProtectionCableIndex3_Type = Unsigned32
_EntityProtectionCableIndex3_Object = MibTableColumn
entityProtectionCableIndex3 = _EntityProtectionCableIndex3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 3),
    _EntityProtectionCableIndex3_Type()
)
entityProtectionCableIndex3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityProtectionCableIndex3.setStatus("current")
_EntityProtectionCableIndex4_Type = Unsigned32
_EntityProtectionCableIndex4_Object = MibTableColumn
entityProtectionCableIndex4 = _EntityProtectionCableIndex4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 4),
    _EntityProtectionCableIndex4_Type()
)
entityProtectionCableIndex4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityProtectionCableIndex4.setStatus("current")
_EntityProtectionCableClassName_Type = EntityClassName
_EntityProtectionCableClassName_Object = MibTableColumn
entityProtectionCableClassName = _EntityProtectionCableClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 5),
    _EntityProtectionCableClassName_Type()
)
entityProtectionCableClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityProtectionCableClassName.setStatus("current")
_EntityProtectionCableAidString_Type = SnmpAdminString
_EntityProtectionCableAidString_Object = MibTableColumn
entityProtectionCableAidString = _EntityProtectionCableAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 6),
    _EntityProtectionCableAidString_Type()
)
entityProtectionCableAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityProtectionCableAidString.setStatus("current")
_EntityProtectionCableType_Type = FspR7EntityType
_EntityProtectionCableType_Object = MibTableColumn
entityProtectionCableType = _EntityProtectionCableType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 7),
    _EntityProtectionCableType_Type()
)
entityProtectionCableType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityProtectionCableType.setStatus("current")
_EntityProtectionCableTableId_Type = RowPointer
_EntityProtectionCableTableId_Object = MibTableColumn
entityProtectionCableTableId = _EntityProtectionCableTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 8),
    _EntityProtectionCableTableId_Type()
)
entityProtectionCableTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityProtectionCableTableId.setStatus("current")
_EntityProtectionCableParentId_Type = RowPointer
_EntityProtectionCableParentId_Object = MibTableColumn
entityProtectionCableParentId = _EntityProtectionCableParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 9),
    _EntityProtectionCableParentId_Type()
)
entityProtectionCableParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityProtectionCableParentId.setStatus("current")
_EntityProtectionCableClass_Type = EntityClass
_EntityProtectionCableClass_Object = MibTableColumn
entityProtectionCableClass = _EntityProtectionCableClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 21, 1, 10),
    _EntityProtectionCableClass_Type()
)
entityProtectionCableClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityProtectionCableClass.setStatus("current")
_EntityFilterCableTable_Object = MibTable
entityFilterCableTable = _EntityFilterCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22)
)
if mibBuilder.loadTexts:
    entityFilterCableTable.setStatus("current")
_EntityFilterCableEntry_Object = MibTableRow
entityFilterCableEntry = _EntityFilterCableEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1)
)
entityFilterCableEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex1"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex2"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex3"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex4"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableClassName"),
)
if mibBuilder.loadTexts:
    entityFilterCableEntry.setStatus("current")
_EntityFilterCableIndex1_Type = Unsigned32
_EntityFilterCableIndex1_Object = MibTableColumn
entityFilterCableIndex1 = _EntityFilterCableIndex1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 1),
    _EntityFilterCableIndex1_Type()
)
entityFilterCableIndex1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFilterCableIndex1.setStatus("current")
_EntityFilterCableIndex2_Type = Unsigned32
_EntityFilterCableIndex2_Object = MibTableColumn
entityFilterCableIndex2 = _EntityFilterCableIndex2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 2),
    _EntityFilterCableIndex2_Type()
)
entityFilterCableIndex2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFilterCableIndex2.setStatus("current")
_EntityFilterCableIndex3_Type = Unsigned32
_EntityFilterCableIndex3_Object = MibTableColumn
entityFilterCableIndex3 = _EntityFilterCableIndex3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 3),
    _EntityFilterCableIndex3_Type()
)
entityFilterCableIndex3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFilterCableIndex3.setStatus("current")
_EntityFilterCableIndex4_Type = Unsigned32
_EntityFilterCableIndex4_Object = MibTableColumn
entityFilterCableIndex4 = _EntityFilterCableIndex4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 4),
    _EntityFilterCableIndex4_Type()
)
entityFilterCableIndex4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFilterCableIndex4.setStatus("current")
_EntityFilterCableClassName_Type = EntityClassName
_EntityFilterCableClassName_Object = MibTableColumn
entityFilterCableClassName = _EntityFilterCableClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 5),
    _EntityFilterCableClassName_Type()
)
entityFilterCableClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityFilterCableClassName.setStatus("current")
_EntityFilterCableAidString_Type = SnmpAdminString
_EntityFilterCableAidString_Object = MibTableColumn
entityFilterCableAidString = _EntityFilterCableAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 6),
    _EntityFilterCableAidString_Type()
)
entityFilterCableAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFilterCableAidString.setStatus("current")
_EntityFilterCableType_Type = FspR7EntityType
_EntityFilterCableType_Object = MibTableColumn
entityFilterCableType = _EntityFilterCableType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 7),
    _EntityFilterCableType_Type()
)
entityFilterCableType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFilterCableType.setStatus("current")
_EntityFilterCableTableId_Type = RowPointer
_EntityFilterCableTableId_Object = MibTableColumn
entityFilterCableTableId = _EntityFilterCableTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 8),
    _EntityFilterCableTableId_Type()
)
entityFilterCableTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFilterCableTableId.setStatus("current")
_EntityFilterCableParentId_Type = RowPointer
_EntityFilterCableParentId_Object = MibTableColumn
entityFilterCableParentId = _EntityFilterCableParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 9),
    _EntityFilterCableParentId_Type()
)
entityFilterCableParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFilterCableParentId.setStatus("current")
_EntityFilterCableClass_Type = EntityClass
_EntityFilterCableClass_Object = MibTableColumn
entityFilterCableClass = _EntityFilterCableClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 22, 1, 10),
    _EntityFilterCableClass_Type()
)
entityFilterCableClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityFilterCableClass.setStatus("current")
_EntityMtosiSlotsTable_Object = MibTable
entityMtosiSlotsTable = _EntityMtosiSlotsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100)
)
if mibBuilder.loadTexts:
    entityMtosiSlotsTable.setStatus("current")
_EntityMtosiSlotsEntry_Object = MibTableRow
entityMtosiSlotsEntry = _EntityMtosiSlotsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1)
)
entityMtosiSlotsEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityMtosiSlotsShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityMtosiSlotsSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityMtosiSlotsPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityMtosiSlotsExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityMtosiSlotsClassName"),
)
if mibBuilder.loadTexts:
    entityMtosiSlotsEntry.setStatus("current")
_EntityMtosiSlotsShelfNo_Type = Unsigned32
_EntityMtosiSlotsShelfNo_Object = MibTableColumn
entityMtosiSlotsShelfNo = _EntityMtosiSlotsShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 1),
    _EntityMtosiSlotsShelfNo_Type()
)
entityMtosiSlotsShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityMtosiSlotsShelfNo.setStatus("current")
_EntityMtosiSlotsSlotNo_Type = Unsigned32
_EntityMtosiSlotsSlotNo_Object = MibTableColumn
entityMtosiSlotsSlotNo = _EntityMtosiSlotsSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 2),
    _EntityMtosiSlotsSlotNo_Type()
)
entityMtosiSlotsSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityMtosiSlotsSlotNo.setStatus("current")
_EntityMtosiSlotsPortNo_Type = Unsigned32
_EntityMtosiSlotsPortNo_Object = MibTableColumn
entityMtosiSlotsPortNo = _EntityMtosiSlotsPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 3),
    _EntityMtosiSlotsPortNo_Type()
)
entityMtosiSlotsPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityMtosiSlotsPortNo.setStatus("current")
_EntityMtosiSlotsExtNo_Type = Unsigned32
_EntityMtosiSlotsExtNo_Object = MibTableColumn
entityMtosiSlotsExtNo = _EntityMtosiSlotsExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 4),
    _EntityMtosiSlotsExtNo_Type()
)
entityMtosiSlotsExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityMtosiSlotsExtNo.setStatus("current")
_EntityMtosiSlotsClassName_Type = EntityClassName
_EntityMtosiSlotsClassName_Object = MibTableColumn
entityMtosiSlotsClassName = _EntityMtosiSlotsClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 5),
    _EntityMtosiSlotsClassName_Type()
)
entityMtosiSlotsClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityMtosiSlotsClassName.setStatus("current")
_EntityMtosiSlotsAidString_Type = SnmpAdminString
_EntityMtosiSlotsAidString_Object = MibTableColumn
entityMtosiSlotsAidString = _EntityMtosiSlotsAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 6),
    _EntityMtosiSlotsAidString_Type()
)
entityMtosiSlotsAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityMtosiSlotsAidString.setStatus("current")
_EntityMtosiSlotsParentId_Type = RowPointer
_EntityMtosiSlotsParentId_Object = MibTableColumn
entityMtosiSlotsParentId = _EntityMtosiSlotsParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 7),
    _EntityMtosiSlotsParentId_Type()
)
entityMtosiSlotsParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityMtosiSlotsParentId.setStatus("current")
_EntityMtosiSlotsClass_Type = EntityClass
_EntityMtosiSlotsClass_Object = MibTableColumn
entityMtosiSlotsClass = _EntityMtosiSlotsClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 8),
    _EntityMtosiSlotsClass_Type()
)
entityMtosiSlotsClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityMtosiSlotsClass.setStatus("current")
_EntityMtosiSlotsChildId_Type = RowPointer
_EntityMtosiSlotsChildId_Object = MibTableColumn
entityMtosiSlotsChildId = _EntityMtosiSlotsChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 100, 1, 9),
    _EntityMtosiSlotsChildId_Type()
)
entityMtosiSlotsChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityMtosiSlotsChildId.setStatus("current")
_EndOfEntities_Type = Integer32
_EndOfEntities_Object = MibScalar
endOfEntities = _EndOfEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 2, 10000),
    _EndOfEntities_Type()
)
endOfEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEntities.setStatus("current")
_Management_ObjectIdentity = ObjectIdentity
management = _Management_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3)
)
_NeMgmt_ObjectIdentity = ObjectIdentity
neMgmt = _NeMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1)
)
_TrapModeLegacy_Type = FspR7NoYes
_TrapModeLegacy_Object = MibScalar
trapModeLegacy = _TrapModeLegacy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 1),
    _TrapModeLegacy_Type()
)
trapModeLegacy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapModeLegacy.setStatus("current")
_ArtificialEntity_Type = FspR7EnableDisable
_ArtificialEntity_Object = MibScalar
artificialEntity = _ArtificialEntity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 2),
    _ArtificialEntity_Type()
)
artificialEntity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    artificialEntity.setStatus("current")
_IdentifyTraps_Type = FspR7EnableDisable
_IdentifyTraps_Object = MibScalar
identifyTraps = _IdentifyTraps_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 3),
    _IdentifyTraps_Type()
)
identifyTraps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    identifyTraps.setStatus("current")
_ControlPlane_Type = FspR7EnableDisable
_ControlPlane_Object = MibScalar
controlPlane = _ControlPlane_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 4),
    _ControlPlane_Type()
)
controlPlane.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlane.setStatus("current")
_AutoRestart_Type = FspR7EnableDisable
_AutoRestart_Object = MibScalar
autoRestart = _AutoRestart_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 5),
    _AutoRestart_Type()
)
autoRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoRestart.setStatus("current")


class _AutoRestartMax_Type(Unsigned32):
    """Custom type autoRestartMax based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_AutoRestartMax_Type.__name__ = "Unsigned32"
_AutoRestartMax_Object = MibScalar
autoRestartMax = _AutoRestartMax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 6),
    _AutoRestartMax_Type()
)
autoRestartMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoRestartMax.setStatus("current")


class _AutoRestartCount_Type(Unsigned32):
    """Custom type autoRestartCount based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_AutoRestartCount_Type.__name__ = "Unsigned32"
_AutoRestartCount_Object = MibScalar
autoRestartCount = _AutoRestartCount_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 7),
    _AutoRestartCount_Type()
)
autoRestartCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoRestartCount.setStatus("current")
_CpRest_Type = FspR7EnableDisable
_CpRest_Object = MibScalar
cpRest = _CpRest_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 8),
    _CpRest_Type()
)
cpRest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cpRest.setStatus("current")
_AutoProvisionOL_Type = FspR7EnableDisable
_AutoProvisionOL_Object = MibScalar
autoProvisionOL = _AutoProvisionOL_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 9),
    _AutoProvisionOL_Type()
)
autoProvisionOL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoProvisionOL.setStatus("current")


class _UidEraseTime_Type(Unsigned32):
    """Custom type uidEraseTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1096),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_UidEraseTime_Type.__name__ = "Unsigned32"
_UidEraseTime_Object = MibScalar
uidEraseTime = _UidEraseTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 10),
    _UidEraseTime_Type()
)
uidEraseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uidEraseTime.setStatus("current")
if mibBuilder.loadTexts:
    uidEraseTime.setUnits("day")
_RestConf_Type = FspR7EnableDisable
_RestConf_Object = MibScalar
restConf = _RestConf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 11),
    _RestConf_Type()
)
restConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    restConf.setStatus("deprecated")
_NetConf_Type = FspR7EnableDisable
_NetConf_Object = MibScalar
netConf = _NetConf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 12),
    _NetConf_Type()
)
netConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netConf.setStatus("deprecated")
_NetworkIntelligence_Type = FspR7EnableDisable
_NetworkIntelligence_Object = MibScalar
networkIntelligence = _NetworkIntelligence_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 13),
    _NetworkIntelligence_Type()
)
networkIntelligence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    networkIntelligence.setStatus("current")
_ChannelSpacing_Type = FspR7ChannelSpacing
_ChannelSpacing_Object = MibScalar
channelSpacing = _ChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 14),
    _ChannelSpacing_Type()
)
channelSpacing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    channelSpacing.setStatus("current")
_SdnInterface_Type = FspR7SdnInterface
_SdnInterface_Object = MibScalar
sdnInterface = _SdnInterface_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 15),
    _SdnInterface_Type()
)
sdnInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sdnInterface.setStatus("current")
_WebInterface_Type = FspR7EnableDisable
_WebInterface_Object = MibScalar
webInterface = _WebInterface_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 16),
    _WebInterface_Type()
)
webInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    webInterface.setStatus("current")
_UpdateFwpOnInstall_Type = FspR7EnableDisable
_UpdateFwpOnInstall_Object = MibScalar
updateFwpOnInstall = _UpdateFwpOnInstall_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 17),
    _UpdateFwpOnInstall_Type()
)
updateFwpOnInstall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    updateFwpOnInstall.setStatus("current")
_MpFilePointer_Type = RowPointer
_MpFilePointer_Object = MibScalar
mpFilePointer = _MpFilePointer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 18),
    _MpFilePointer_Type()
)
mpFilePointer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mpFilePointer.setStatus("current")
_IpConf_ObjectIdentity = ObjectIdentity
ipConf = _IpConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100)
)
_Ipv6Control_Type = FspR7EnableDisable
_Ipv6Control_Object = MibScalar
ipv6Control = _Ipv6Control_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 1),
    _Ipv6Control_Type()
)
ipv6Control.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6Control.setStatus("current")
_Ipv6DefGateway_Type = SnmpAdminString
_Ipv6DefGateway_Object = MibScalar
ipv6DefGateway = _Ipv6DefGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 2),
    _Ipv6DefGateway_Type()
)
ipv6DefGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6DefGateway.setStatus("current")
_Ipv6_Type = SnmpAdminString
_Ipv6_Object = MibScalar
ipv6 = _Ipv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 3),
    _Ipv6_Type()
)
ipv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6.setStatus("current")


class _Ipv6PrefixLen_Type(Unsigned32):
    """Custom type ipv6PrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_Ipv6PrefixLen_Type.__name__ = "Unsigned32"
_Ipv6PrefixLen_Object = MibScalar
ipv6PrefixLen = _Ipv6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 4),
    _Ipv6PrefixLen_Type()
)
ipv6PrefixLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6PrefixLen.setStatus("current")
_DnsServer1_Type = SnmpAdminString
_DnsServer1_Object = MibScalar
dnsServer1 = _DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 10),
    _DnsServer1_Type()
)
dnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsServer1.setStatus("current")
_DnsServer2_Type = SnmpAdminString
_DnsServer2_Object = MibScalar
dnsServer2 = _DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 100, 11),
    _DnsServer2_Type()
)
dnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsServer2.setStatus("current")
_OspfConf_ObjectIdentity = ObjectIdentity
ospfConf = _OspfConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 101)
)
_NaasMode_Type = FspR7NaasMode
_NaasMode_Object = MibScalar
naasMode = _NaasMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 101, 3),
    _NaasMode_Type()
)
naasMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    naasMode.setStatus("current")
_TimeoutConf_ObjectIdentity = ObjectIdentity
timeoutConf = _TimeoutConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 102)
)


class _NetConfTmout_Type(Unsigned32):
    """Custom type netConfTmout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NetConfTmout_Type.__name__ = "Unsigned32"
_NetConfTmout_Object = MibScalar
netConfTmout = _NetConfTmout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 102, 3),
    _NetConfTmout_Type()
)
netConfTmout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netConfTmout.setStatus("current")
if mibBuilder.loadTexts:
    netConfTmout.setUnits("s")
_EndOfNeMgmt_Type = Integer32
_EndOfNeMgmt_Object = MibScalar
endOfNeMgmt = _EndOfNeMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 1, 10000),
    _EndOfNeMgmt_Type()
)
endOfNeMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNeMgmt.setStatus("current")
_SpecificMgmt_ObjectIdentity = ObjectIdentity
specificMgmt = _SpecificMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2)
)
_CrossConnectionTable_Object = MibTable
crossConnectionTable = _CrossConnectionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6)
)
if mibBuilder.loadTexts:
    crossConnectionTable.setStatus("current")
_CrossConnectionEntry_Object = MibTableRow
crossConnectionEntry = _CrossConnectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1)
)
crossConnectionEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnFromClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnToClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrossConnClassName"),
)
if mibBuilder.loadTexts:
    crossConnectionEntry.setStatus("current")
_CrossConnectionRowStatus_Type = RowStatus
_CrossConnectionRowStatus_Object = MibTableColumn
crossConnectionRowStatus = _CrossConnectionRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 1),
    _CrossConnectionRowStatus_Type()
)
crossConnectionRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionRowStatus.setStatus("current")
_CrossConnectionAdmin_Type = FspR7AdminState
_CrossConnectionAdmin_Object = MibTableColumn
crossConnectionAdmin = _CrossConnectionAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 2),
    _CrossConnectionAdmin_Type()
)
crossConnectionAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionAdmin.setStatus("current")
_CrossConnectionRedLineState_Type = FspR7YesNo
_CrossConnectionRedLineState_Object = MibTableColumn
crossConnectionRedLineState = _CrossConnectionRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 3),
    _CrossConnectionRedLineState_Type()
)
crossConnectionRedLineState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionRedLineState.setStatus("current")
_CrossConnectionCrsFunction_Type = FspR7FunctionCrs
_CrossConnectionCrsFunction_Object = MibTableColumn
crossConnectionCrsFunction = _CrossConnectionCrsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 4),
    _CrossConnectionCrsFunction_Type()
)
crossConnectionCrsFunction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsFunction.setStatus("current")
_CrossConnectionConn_Type = FspR7Conn
_CrossConnectionConn_Object = MibTableColumn
crossConnectionConn = _CrossConnectionConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 5),
    _CrossConnectionConn_Type()
)
crossConnectionConn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionConn.setStatus("current")
_CrossConnectionCrsType_Type = FspR7TypeCrs
_CrossConnectionCrsType_Object = MibTableColumn
crossConnectionCrsType = _CrossConnectionCrsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 6),
    _CrossConnectionCrsType_Type()
)
crossConnectionCrsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsType.setStatus("current")
_CrossConnectionAlias_Type = SnmpAdminString
_CrossConnectionAlias_Object = MibTableColumn
crossConnectionAlias = _CrossConnectionAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 7),
    _CrossConnectionAlias_Type()
)
crossConnectionAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionAlias.setStatus("current")
_CrossConnectionPathNode_Type = FspR7PathNode
_CrossConnectionPathNode_Object = MibTableColumn
crossConnectionPathNode = _CrossConnectionPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 8),
    _CrossConnectionPathNode_Type()
)
crossConnectionPathNode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionPathNode.setStatus("current")
_CrossConnectionTunnelAid_Type = SnmpAdminString
_CrossConnectionTunnelAid_Object = MibTableColumn
crossConnectionTunnelAid = _CrossConnectionTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 9),
    _CrossConnectionTunnelAid_Type()
)
crossConnectionTunnelAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionTunnelAid.setStatus("current")
_CrossConnectionIngressTid_Type = SnmpAdminString
_CrossConnectionIngressTid_Object = MibTableColumn
crossConnectionIngressTid = _CrossConnectionIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 10),
    _CrossConnectionIngressTid_Type()
)
crossConnectionIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossConnectionIngressTid.setStatus("current")
_CrossConnectionIngressNodeIp_Type = IpAddress
_CrossConnectionIngressNodeIp_Object = MibTableColumn
crossConnectionIngressNodeIp = _CrossConnectionIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 11),
    _CrossConnectionIngressNodeIp_Type()
)
crossConnectionIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossConnectionIngressNodeIp.setStatus("current")
_CrossConnectionOperState_Type = FspR7OperState
_CrossConnectionOperState_Object = MibTableColumn
crossConnectionOperState = _CrossConnectionOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 12),
    _CrossConnectionOperState_Type()
)
crossConnectionOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossConnectionOperState.setStatus("current")
_CrossConnectionSecondaryStates_Type = FspR7EntitySecondaryStates
_CrossConnectionSecondaryStates_Object = MibTableColumn
crossConnectionSecondaryStates = _CrossConnectionSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 13),
    _CrossConnectionSecondaryStates_Type()
)
crossConnectionSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossConnectionSecondaryStates.setStatus("current")
_CrossConnectionType_Type = FspR7InterfaceType
_CrossConnectionType_Object = MibTableColumn
crossConnectionType = _CrossConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 14),
    _CrossConnectionType_Type()
)
crossConnectionType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionType.setStatus("current")
_CrossConnectionPathProtection_Type = FspR7PathProt
_CrossConnectionPathProtection_Object = MibTableColumn
crossConnectionPathProtection = _CrossConnectionPathProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 15),
    _CrossConnectionPathProtection_Type()
)
crossConnectionPathProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossConnectionPathProtection.setStatus("current")
_CrossConnectionCrsFromAidTwo_Type = FspR7SnmpLongString
_CrossConnectionCrsFromAidTwo_Object = MibTableColumn
crossConnectionCrsFromAidTwo = _CrossConnectionCrsFromAidTwo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 16),
    _CrossConnectionCrsFromAidTwo_Type()
)
crossConnectionCrsFromAidTwo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsFromAidTwo.setStatus("current")
_CrossConnectionCrsToAidTwo_Type = FspR7SnmpLongString
_CrossConnectionCrsToAidTwo_Object = MibTableColumn
crossConnectionCrsToAidTwo = _CrossConnectionCrsToAidTwo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 17),
    _CrossConnectionCrsToAidTwo_Type()
)
crossConnectionCrsToAidTwo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsToAidTwo.setStatus("current")
_CrossConnectionCrsMcAidList_Type = FspR7SnmpLongString
_CrossConnectionCrsMcAidList_Object = MibTableColumn
crossConnectionCrsMcAidList = _CrossConnectionCrsMcAidList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 18),
    _CrossConnectionCrsMcAidList_Type()
)
crossConnectionCrsMcAidList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsMcAidList.setStatus("current")
_CrossConnectionCrsContAidList_Type = FspR7SnmpLongString
_CrossConnectionCrsContAidList_Object = MibTableColumn
crossConnectionCrsContAidList = _CrossConnectionCrsContAidList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 19),
    _CrossConnectionCrsContAidList_Type()
)
crossConnectionCrsContAidList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsContAidList.setStatus("current")
_CrossConnectionCrsContAidListTwo_Type = FspR7SnmpLongString
_CrossConnectionCrsContAidListTwo_Object = MibTableColumn
crossConnectionCrsContAidListTwo = _CrossConnectionCrsContAidListTwo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 6, 1, 20),
    _CrossConnectionCrsContAidListTwo_Type()
)
crossConnectionCrsContAidListTwo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossConnectionCrsContAidListTwo.setStatus("current")
_CrossOpticalLineTable_Object = MibTable
crossOpticalLineTable = _CrossOpticalLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7)
)
if mibBuilder.loadTexts:
    crossOpticalLineTable.setStatus("current")
_CrossOpticalLineEntry_Object = MibTableRow
crossOpticalLineEntry = _CrossOpticalLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1)
)
crossOpticalLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineFromClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineToClassName"),
    (0, "ADVA-FSPR7-MIB", "entityCrsOptLineClassName"),
)
if mibBuilder.loadTexts:
    crossOpticalLineEntry.setStatus("current")
_CrossOpticalLineRowStatus_Type = RowStatus
_CrossOpticalLineRowStatus_Object = MibTableColumn
crossOpticalLineRowStatus = _CrossOpticalLineRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 1),
    _CrossOpticalLineRowStatus_Type()
)
crossOpticalLineRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineRowStatus.setStatus("current")
_CrossOpticalLineRedLineState_Type = FspR7YesNo
_CrossOpticalLineRedLineState_Object = MibTableColumn
crossOpticalLineRedLineState = _CrossOpticalLineRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 2),
    _CrossOpticalLineRedLineState_Type()
)
crossOpticalLineRedLineState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineRedLineState.setStatus("current")
_CrossOpticalLineCrsFunction_Type = FspR7FunctionCrs
_CrossOpticalLineCrsFunction_Object = MibTableColumn
crossOpticalLineCrsFunction = _CrossOpticalLineCrsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 3),
    _CrossOpticalLineCrsFunction_Type()
)
crossOpticalLineCrsFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossOpticalLineCrsFunction.setStatus("current")
_CrossOpticalLineConn_Type = FspR7Conn
_CrossOpticalLineConn_Object = MibTableColumn
crossOpticalLineConn = _CrossOpticalLineConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 4),
    _CrossOpticalLineConn_Type()
)
crossOpticalLineConn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineConn.setStatus("current")
_CrossOpticalLineCrsType_Type = FspR7TypeCrs
_CrossOpticalLineCrsType_Object = MibTableColumn
crossOpticalLineCrsType = _CrossOpticalLineCrsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 5),
    _CrossOpticalLineCrsType_Type()
)
crossOpticalLineCrsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineCrsType.setStatus("current")
_CrossOpticalLineAlias_Type = SnmpAdminString
_CrossOpticalLineAlias_Object = MibTableColumn
crossOpticalLineAlias = _CrossOpticalLineAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 6),
    _CrossOpticalLineAlias_Type()
)
crossOpticalLineAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineAlias.setStatus("current")
_CrossOpticalLineTunnelAid_Type = SnmpAdminString
_CrossOpticalLineTunnelAid_Object = MibTableColumn
crossOpticalLineTunnelAid = _CrossOpticalLineTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 7),
    _CrossOpticalLineTunnelAid_Type()
)
crossOpticalLineTunnelAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossOpticalLineTunnelAid.setStatus("current")
_CrossOpticalLineIngressTid_Type = SnmpAdminString
_CrossOpticalLineIngressTid_Object = MibTableColumn
crossOpticalLineIngressTid = _CrossOpticalLineIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 8),
    _CrossOpticalLineIngressTid_Type()
)
crossOpticalLineIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossOpticalLineIngressTid.setStatus("current")
_CrossOpticalLineIngressNodeIp_Type = IpAddress
_CrossOpticalLineIngressNodeIp_Object = MibTableColumn
crossOpticalLineIngressNodeIp = _CrossOpticalLineIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 9),
    _CrossOpticalLineIngressNodeIp_Type()
)
crossOpticalLineIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossOpticalLineIngressNodeIp.setStatus("current")
_CrossOpticalLineSecondaryStates_Type = FspR7EntitySecondaryStates
_CrossOpticalLineSecondaryStates_Object = MibTableColumn
crossOpticalLineSecondaryStates = _CrossOpticalLineSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 7, 1, 10),
    _CrossOpticalLineSecondaryStates_Type()
)
crossOpticalLineSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crossOpticalLineSecondaryStates.setStatus("current")
_EndOfCrossOpticalLineTable_Type = Integer32
_EndOfCrossOpticalLineTable_Object = MibScalar
endOfCrossOpticalLineTable = _EndOfCrossOpticalLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 8),
    _EndOfCrossOpticalLineTable_Type()
)
endOfCrossOpticalLineTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfCrossOpticalLineTable.setStatus("current")
_CrossDcnTable_Object = MibTable
crossDcnTable = _CrossDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9)
)
if mibBuilder.loadTexts:
    crossDcnTable.setStatus("current")
_CrossDcnEntry_Object = MibTableRow
crossDcnEntry = _CrossDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9, 1)
)
crossDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityCrossDcnClassName"),
)
if mibBuilder.loadTexts:
    crossDcnEntry.setStatus("current")
_CrossDcnRowStatus_Type = RowStatus
_CrossDcnRowStatus_Object = MibTableColumn
crossDcnRowStatus = _CrossDcnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9, 1, 1),
    _CrossDcnRowStatus_Type()
)
crossDcnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossDcnRowStatus.setStatus("current")
_CrossDcnType_Type = FspR7TypeConnection
_CrossDcnType_Object = MibTableColumn
crossDcnType = _CrossDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9, 1, 2),
    _CrossDcnType_Type()
)
crossDcnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossDcnType.setStatus("current")
_CrossDcnLink_Type = SnmpAdminString
_CrossDcnLink_Object = MibTableColumn
crossDcnLink = _CrossDcnLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9, 1, 3),
    _CrossDcnLink_Type()
)
crossDcnLink.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossDcnLink.setStatus("current")
_CrossDcnEcc_Type = SnmpAdminString
_CrossDcnEcc_Object = MibTableColumn
crossDcnEcc = _CrossDcnEcc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 9, 1, 4),
    _CrossDcnEcc_Type()
)
crossDcnEcc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    crossDcnEcc.setStatus("current")
_EndOfCrossDcnTable_Type = Integer32
_EndOfCrossDcnTable_Object = MibScalar
endOfCrossDcnTable = _EndOfCrossDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 10),
    _EndOfCrossDcnTable_Type()
)
endOfCrossDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfCrossDcnTable.setStatus("current")
_EndOfSpecificMgmt_Type = Integer32
_EndOfSpecificMgmt_Object = MibScalar
endOfSpecificMgmt = _EndOfSpecificMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 2, 10000),
    _EndOfSpecificMgmt_Type()
)
endOfSpecificMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfSpecificMgmt.setStatus("current")
_EqptMgmt_ObjectIdentity = ObjectIdentity
eqptMgmt = _EqptMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3)
)
_ShelfTable_Object = MibTable
shelfTable = _ShelfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1)
)
if mibBuilder.loadTexts:
    shelfTable.setStatus("current")
_ShelfEntry_Object = MibTableRow
shelfEntry = _ShelfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1)
)
shelfEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    shelfEntry.setStatus("current")
_ShelfRowStatus_Type = RowStatus
_ShelfRowStatus_Object = MibTableColumn
shelfRowStatus = _ShelfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 1),
    _ShelfRowStatus_Type()
)
shelfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfRowStatus.setStatus("current")
_ShelfNetworkPorts_Type = Unsigned32
_ShelfNetworkPorts_Object = MibTableColumn
shelfNetworkPorts = _ShelfNetworkPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 2),
    _ShelfNetworkPorts_Type()
)
shelfNetworkPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfNetworkPorts.setStatus("current")
_ShelfInternalPlugs_Type = FspR7EquipmentTypeCaps
_ShelfInternalPlugs_Object = MibTableColumn
shelfInternalPlugs = _ShelfInternalPlugs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 3),
    _ShelfInternalPlugs_Type()
)
shelfInternalPlugs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInternalPlugs.setStatus("current")
_ShelfConnectionType_Type = FspR7TypeConnection
_ShelfConnectionType_Object = MibTableColumn
shelfConnectionType = _ShelfConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 4),
    _ShelfConnectionType_Type()
)
shelfConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnectionType.setStatus("current")


class _ShelfOscPorts_Type(Unsigned32):
    """Custom type shelfOscPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_ShelfOscPorts_Type.__name__ = "Unsigned32"
_ShelfOscPorts_Object = MibTableColumn
shelfOscPorts = _ShelfOscPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 5),
    _ShelfOscPorts_Type()
)
shelfOscPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfOscPorts.setStatus("current")
_ShelfShelfHeight_Type = Unsigned32
_ShelfShelfHeight_Object = MibTableColumn
shelfShelfHeight = _ShelfShelfHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 6),
    _ShelfShelfHeight_Type()
)
shelfShelfHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfShelfHeight.setStatus("current")
if mibBuilder.loadTexts:
    shelfShelfHeight.setUnits("HU")
_ShelfChannel_Type = FspR7ChannelIdentifierCaps
_ShelfChannel_Object = MibTableColumn
shelfChannel = _ShelfChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 7),
    _ShelfChannel_Type()
)
shelfChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfChannel.setStatus("current")
_ShelfPsuOutputPower_Type = FspR7PsuOutputPower
_ShelfPsuOutputPower_Object = MibTableColumn
shelfPsuOutputPower = _ShelfPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 8),
    _ShelfPsuOutputPower_Type()
)
shelfPsuOutputPower.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfPsuOutputPower.setStatus("current")
_ShelfType_Type = FspR7EquipmentType
_ShelfType_Object = MibTableColumn
shelfType = _ShelfType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 9),
    _ShelfType_Type()
)
shelfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfType.setStatus("current")
_ShelfChannelsNumber_Type = FspR7NumberOfChannels
_ShelfChannelsNumber_Object = MibTableColumn
shelfChannelsNumber = _ShelfChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 10),
    _ShelfChannelsNumber_Type()
)
shelfChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfChannelsNumber.setStatus("current")
_ShelfRack_Type = SnmpAdminString
_ShelfRack_Object = MibTableColumn
shelfRack = _ShelfRack_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 11),
    _ShelfRack_Type()
)
shelfRack.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfRack.setStatus("current")
_ShelfInternalPlugRates_Type = FspR7PlugDataRateCaps
_ShelfInternalPlugRates_Object = MibTableColumn
shelfInternalPlugRates = _ShelfInternalPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 12),
    _ShelfInternalPlugRates_Type()
)
shelfInternalPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInternalPlugRates.setStatus("current")
_ShelfConnectorType_Type = FspR7ConnectorType
_ShelfConnectorType_Object = MibTableColumn
shelfConnectorType = _ShelfConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 13),
    _ShelfConnectorType_Type()
)
shelfConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnectorType.setStatus("current")
_ShelfSupply_Type = FspR7SupplyType
_ShelfSupply_Object = MibTableColumn
shelfSupply = _ShelfSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 14),
    _ShelfSupply_Type()
)
shelfSupply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfSupply.setStatus("current")


class _ShelfClientPorts_Type(Unsigned32):
    """Custom type shelfClientPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_ShelfClientPorts_Type.__name__ = "Unsigned32"
_ShelfClientPorts_Object = MibTableColumn
shelfClientPorts = _ShelfClientPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 15),
    _ShelfClientPorts_Type()
)
shelfClientPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfClientPorts.setStatus("current")
_ShelfFiberBrand_Type = FspR7FiberBrand
_ShelfFiberBrand_Object = MibTableColumn
shelfFiberBrand = _ShelfFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 16),
    _ShelfFiberBrand_Type()
)
shelfFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfFiberBrand.setStatus("current")
_ShelfTransmitChannel_Type = FspR7ChannelIdentifier
_ShelfTransmitChannel_Object = MibTableColumn
shelfTransmitChannel = _ShelfTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 17),
    _ShelfTransmitChannel_Type()
)
shelfTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfTransmitChannel.setStatus("current")
_ShelfBandProvision_Type = FspR7OpticalBand
_ShelfBandProvision_Object = MibTableColumn
shelfBandProvision = _ShelfBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 18),
    _ShelfBandProvision_Type()
)
shelfBandProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfBandProvision.setStatus("current")
_ShelfUpgradePorts_Type = Unsigned32
_ShelfUpgradePorts_Object = MibTableColumn
shelfUpgradePorts = _ShelfUpgradePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 19),
    _ShelfUpgradePorts_Type()
)
shelfUpgradePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfUpgradePorts.setStatus("current")
_ShelfStandardSlotHeight_Type = Unsigned32
_ShelfStandardSlotHeight_Object = MibTableColumn
shelfStandardSlotHeight = _ShelfStandardSlotHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 20),
    _ShelfStandardSlotHeight_Type()
)
shelfStandardSlotHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfStandardSlotHeight.setStatus("current")
if mibBuilder.loadTexts:
    shelfStandardSlotHeight.setUnits("0.1 HU")


class _ShelfStandardSlots_Type(Unsigned32):
    """Custom type shelfStandardSlots based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 20),
    )


_ShelfStandardSlots_Type.__name__ = "Unsigned32"
_ShelfStandardSlots_Object = MibTableColumn
shelfStandardSlots = _ShelfStandardSlots_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 21),
    _ShelfStandardSlots_Type()
)
shelfStandardSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfStandardSlots.setStatus("current")
_ShelfChannelBandwith_Type = FspR7ChannelBandwidth
_ShelfChannelBandwith_Object = MibTableColumn
shelfChannelBandwith = _ShelfChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 22),
    _ShelfChannelBandwith_Type()
)
shelfChannelBandwith.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfChannelBandwith.setStatus("current")
_ShelfAdmin_Type = FspR7AdminState
_ShelfAdmin_Object = MibTableColumn
shelfAdmin = _ShelfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 23),
    _ShelfAdmin_Type()
)
shelfAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfAdmin.setStatus("current")
_ShelfInternalPorts_Type = Unsigned32
_ShelfInternalPorts_Object = MibTableColumn
shelfInternalPorts = _ShelfInternalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 24),
    _ShelfInternalPorts_Type()
)
shelfInternalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInternalPorts.setStatus("current")


class _ShelfRackNumber_Type(Unsigned32):
    """Custom type shelfRackNumber based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_ShelfRackNumber_Type.__name__ = "Unsigned32"
_ShelfRackNumber_Object = MibTableColumn
shelfRackNumber = _ShelfRackNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 25),
    _ShelfRackNumber_Type()
)
shelfRackNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfRackNumber.setStatus("current")


class _ShelfRackOrder_Type(Unsigned32):
    """Custom type shelfRackOrder based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 45),
    )


_ShelfRackOrder_Type.__name__ = "Unsigned32"
_ShelfRackOrder_Object = MibTableColumn
shelfRackOrder = _ShelfRackOrder_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 26),
    _ShelfRackOrder_Type()
)
shelfRackOrder.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfRackOrder.setStatus("current")
if mibBuilder.loadTexts:
    shelfRackOrder.setUnits("HU")
_ShelfOscChannel_Type = FspR7OscChannel
_ShelfOscChannel_Object = MibTableColumn
shelfOscChannel = _ShelfOscChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 27),
    _ShelfOscChannel_Type()
)
shelfOscChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfOscChannel.setStatus("current")
_ShelfMaxPowerConsumption_Type = Unsigned32
_ShelfMaxPowerConsumption_Object = MibTableColumn
shelfMaxPowerConsumption = _ShelfMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 28),
    _ShelfMaxPowerConsumption_Type()
)
shelfMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    shelfMaxPowerConsumption.setUnits("0.1 W")
_ShelfAlias_Type = SnmpAdminString
_ShelfAlias_Object = MibTableColumn
shelfAlias = _ShelfAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 29),
    _ShelfAlias_Type()
)
shelfAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfAlias.setStatus("current")
_ShelfFiberType_Type = FspR7OpticalFiberType
_ShelfFiberType_Object = MibTableColumn
shelfFiberType = _ShelfFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 30),
    _ShelfFiberType_Type()
)
shelfFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfFiberType.setStatus("current")
_ShelfChannelSpacing_Type = FspR7ChannelSpacing
_ShelfChannelSpacing_Object = MibTableColumn
shelfChannelSpacing = _ShelfChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 31),
    _ShelfChannelSpacing_Type()
)
shelfChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfChannelSpacing.setStatus("current")
_ShelfSecondaryStates_Type = FspR7EntitySecondaryStates
_ShelfSecondaryStates_Object = MibTableColumn
shelfSecondaryStates = _ShelfSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 32),
    _ShelfSecondaryStates_Type()
)
shelfSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfSecondaryStates.setStatus("current")
_ShelfOperState_Type = FspR7OperState
_ShelfOperState_Object = MibTableColumn
shelfOperState = _ShelfOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 33),
    _ShelfOperState_Type()
)
shelfOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfOperState.setStatus("current")
_ShelfScuRing_Type = FspR7EnableDisable
_ShelfScuRing_Object = MibTableColumn
shelfScuRing = _ShelfScuRing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 34),
    _ShelfScuRing_Type()
)
shelfScuRing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfScuRing.setStatus("current")
_ShelfShelfId_Type = Unsigned32
_ShelfShelfId_Object = MibTableColumn
shelfShelfId = _ShelfShelfId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 35),
    _ShelfShelfId_Type()
)
shelfShelfId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfShelfId.setStatus("current")
_ShelfFDports_Type = Unsigned32
_ShelfFDports_Object = MibTableColumn
shelfFDports = _ShelfFDports_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 36),
    _ShelfFDports_Type()
)
shelfFDports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfFDports.setStatus("current")


class _ShelfSlot_Type(Unsigned32):
    """Custom type shelfSlot based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_ShelfSlot_Type.__name__ = "Unsigned32"
_ShelfSlot_Object = MibTableColumn
shelfSlot = _ShelfSlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 37),
    _ShelfSlot_Type()
)
shelfSlot.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfSlot.setStatus("current")
_ShelfChannelRangeProvision_Type = FspR7ChannelRangeInventory
_ShelfChannelRangeProvision_Object = MibTableColumn
shelfChannelRangeProvision = _ShelfChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 38),
    _ShelfChannelRangeProvision_Type()
)
shelfChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfChannelRangeProvision.setStatus("current")
_ShelfPowerSupplyProtection_Type = FspR7EnableDisable
_ShelfPowerSupplyProtection_Object = MibTableColumn
shelfPowerSupplyProtection = _ShelfPowerSupplyProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 39),
    _ShelfPowerSupplyProtection_Type()
)
shelfPowerSupplyProtection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfPowerSupplyProtection.setStatus("current")
_ShelfAirFilterClear_Type = FspR7RlsAction
_ShelfAirFilterClear_Object = MibTableColumn
shelfAirFilterClear = _ShelfAirFilterClear_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 40),
    _ShelfAirFilterClear_Type()
)
shelfAirFilterClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfAirFilterClear.setStatus("current")
_ShelfAirFilterChange_Type = Unsigned32
_ShelfAirFilterChange_Object = MibTableColumn
shelfAirFilterChange = _ShelfAirFilterChange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 41),
    _ShelfAirFilterChange_Type()
)
shelfAirFilterChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfAirFilterChange.setStatus("current")
if mibBuilder.loadTexts:
    shelfAirFilterChange.setUnits("day")


class _ShelfAirFilterCycle_Type(Unsigned32):
    """Custom type shelfAirFilterCycle based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_ShelfAirFilterCycle_Type.__name__ = "Unsigned32"
_ShelfAirFilterCycle_Object = MibTableColumn
shelfAirFilterCycle = _ShelfAirFilterCycle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 1, 1, 42),
    _ShelfAirFilterCycle_Type()
)
shelfAirFilterCycle.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfAirFilterCycle.setStatus("current")
if mibBuilder.loadTexts:
    shelfAirFilterCycle.setUnits("month")
_EndOfShelfTable_Type = Integer32
_EndOfShelfTable_Object = MibScalar
endOfShelfTable = _EndOfShelfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 2),
    _EndOfShelfTable_Type()
)
endOfShelfTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfShelfTable.setStatus("current")
_FanTable_Object = MibTable
fanTable = _FanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3)
)
if mibBuilder.loadTexts:
    fanTable.setStatus("current")
_FanEntry_Object = MibTableRow
fanEntry = _FanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1)
)
fanEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    fanEntry.setStatus("current")
_FanRowStatus_Type = RowStatus
_FanRowStatus_Object = MibTableColumn
fanRowStatus = _FanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 1),
    _FanRowStatus_Type()
)
fanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fanRowStatus.setStatus("current")
_FanForceDestroy_Type = FspR7ForcedStatus
_FanForceDestroy_Object = MibTableColumn
fanForceDestroy = _FanForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 2),
    _FanForceDestroy_Type()
)
fanForceDestroy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fanForceDestroy.setStatus("current")
_FanMaxPowerConsumption_Type = Unsigned32
_FanMaxPowerConsumption_Object = MibTableColumn
fanMaxPowerConsumption = _FanMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 3),
    _FanMaxPowerConsumption_Type()
)
fanMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fanMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    fanMaxPowerConsumption.setUnits("0.1 W")
_FanAdmin_Type = FspR7AdminState
_FanAdmin_Object = MibTableColumn
fanAdmin = _FanAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 4),
    _FanAdmin_Type()
)
fanAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fanAdmin.setStatus("current")
_FanType_Type = FspR7EquipmentType
_FanType_Object = MibTableColumn
fanType = _FanType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 5),
    _FanType_Type()
)
fanType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fanType.setStatus("current")
_FanAlias_Type = SnmpAdminString
_FanAlias_Object = MibTableColumn
fanAlias = _FanAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 6),
    _FanAlias_Type()
)
fanAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fanAlias.setStatus("current")
_FanOutputReset_Type = FspR7RlsAction
_FanOutputReset_Object = MibTableColumn
fanOutputReset = _FanOutputReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 7),
    _FanOutputReset_Type()
)
fanOutputReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fanOutputReset.setStatus("current")


class _FanFanPorts_Type(Unsigned32):
    """Custom type fanFanPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_FanFanPorts_Type.__name__ = "Unsigned32"
_FanFanPorts_Object = MibTableColumn
fanFanPorts = _FanFanPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 8),
    _FanFanPorts_Type()
)
fanFanPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fanFanPorts.setStatus("current")
_FanSecondaryStates_Type = FspR7EntitySecondaryStates
_FanSecondaryStates_Object = MibTableColumn
fanSecondaryStates = _FanSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 9),
    _FanSecondaryStates_Type()
)
fanSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fanSecondaryStates.setStatus("current")
_FanOperState_Type = FspR7OperState
_FanOperState_Object = MibTableColumn
fanOperState = _FanOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 10),
    _FanOperState_Type()
)
fanOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fanOperState.setStatus("current")
_FanFanProfile_Type = FspR7FanMode
_FanFanProfile_Object = MibTableColumn
fanFanProfile = _FanFanProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 3, 1, 11),
    _FanFanProfile_Type()
)
fanFanProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fanFanProfile.setStatus("current")
_EndOfFanTable_Type = Integer32
_EndOfFanTable_Object = MibScalar
endOfFanTable = _EndOfFanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 4),
    _EndOfFanTable_Type()
)
endOfFanTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFanTable.setStatus("current")
_PlugTable_Object = MibTable
plugTable = _PlugTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5)
)
if mibBuilder.loadTexts:
    plugTable.setStatus("current")
_PlugEntry_Object = MibTableRow
plugEntry = _PlugEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1)
)
plugEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    plugEntry.setStatus("current")
_PlugRowStatus_Type = RowStatus
_PlugRowStatus_Object = MibTableColumn
plugRowStatus = _PlugRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 1),
    _PlugRowStatus_Type()
)
plugRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugRowStatus.setStatus("current")
_PlugConnector_Type = FspR7ConnectorType
_PlugConnector_Object = MibTableColumn
plugConnector = _PlugConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 2),
    _PlugConnector_Type()
)
plugConnector.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugConnector.setStatus("current")
_PlugType_Type = FspR7EquipmentType
_PlugType_Object = MibTableColumn
plugType = _PlugType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 3),
    _PlugType_Type()
)
plugType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugType.setStatus("current")
_PlugReach_Type = FspR7OpticalInterfaceReach
_PlugReach_Object = MibTableColumn
plugReach = _PlugReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 4),
    _PlugReach_Type()
)
plugReach.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugReach.setStatus("current")


class _PlugLoopbackAttenuation_Type(Unsigned32):
    """Custom type plugLoopbackAttenuation based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
    )


_PlugLoopbackAttenuation_Type.__name__ = "Unsigned32"
_PlugLoopbackAttenuation_Object = MibTableColumn
plugLoopbackAttenuation = _PlugLoopbackAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 5),
    _PlugLoopbackAttenuation_Type()
)
plugLoopbackAttenuation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugLoopbackAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    plugLoopbackAttenuation.setUnits("0.1 dB")


class _PlugGenericPorts_Type(Unsigned32):
    """Custom type plugGenericPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
    )


_PlugGenericPorts_Type.__name__ = "Unsigned32"
_PlugGenericPorts_Object = MibTableColumn
plugGenericPorts = _PlugGenericPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 6),
    _PlugGenericPorts_Type()
)
plugGenericPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugGenericPorts.setStatus("current")
_PlugConnectorType_Type = FspR7ConnectorType
_PlugConnectorType_Object = MibTableColumn
plugConnectorType = _PlugConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 7),
    _PlugConnectorType_Type()
)
plugConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugConnectorType.setStatus("current")
_PlugFiberType_Type = FspR7OpticalFiberType
_PlugFiberType_Object = MibTableColumn
plugFiberType = _PlugFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 8),
    _PlugFiberType_Type()
)
plugFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugFiberType.setStatus("current")
_PlugTransmitChannel_Type = FspR7ChannelIdentifier
_PlugTransmitChannel_Object = MibTableColumn
plugTransmitChannel = _PlugTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 9),
    _PlugTransmitChannel_Type()
)
plugTransmitChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugTransmitChannel.setStatus("current")
_PlugAlias_Type = SnmpAdminString
_PlugAlias_Object = MibTableColumn
plugAlias = _PlugAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 10),
    _PlugAlias_Type()
)
plugAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugAlias.setStatus("current")
_PlugLaneGroup_Type = FspR7LaneGroupInventory
_PlugLaneGroup_Object = MibTableColumn
plugLaneGroup = _PlugLaneGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 11),
    _PlugLaneGroup_Type()
)
plugLaneGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugLaneGroup.setStatus("current")
_PlugMaxDataRate_Type = FspR7PlugDataRate
_PlugMaxDataRate_Object = MibTableColumn
plugMaxDataRate = _PlugMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 12),
    _PlugMaxDataRate_Type()
)
plugMaxDataRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugMaxDataRate.setStatus("current")
_PlugThirdPartyUsage_Type = EnableState
_PlugThirdPartyUsage_Object = MibTableColumn
plugThirdPartyUsage = _PlugThirdPartyUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 13),
    _PlugThirdPartyUsage_Type()
)
plugThirdPartyUsage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugThirdPartyUsage.setStatus("current")
_PlugAdmin_Type = FspR7AdminState
_PlugAdmin_Object = MibTableColumn
plugAdmin = _PlugAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 14),
    _PlugAdmin_Type()
)
plugAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugAdmin.setStatus("current")
_PlugSecondaryStates_Type = FspR7EntitySecondaryStates
_PlugSecondaryStates_Object = MibTableColumn
plugSecondaryStates = _PlugSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 15),
    _PlugSecondaryStates_Type()
)
plugSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugSecondaryStates.setStatus("current")
_PlugOperState_Type = FspR7OperState
_PlugOperState_Object = MibTableColumn
plugOperState = _PlugOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 16),
    _PlugOperState_Type()
)
plugOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugOperState.setStatus("current")
_PlugBidirectionalChannel_Type = FspR7BidirectionalChannel
_PlugBidirectionalChannel_Object = MibTableColumn
plugBidirectionalChannel = _PlugBidirectionalChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 17),
    _PlugBidirectionalChannel_Type()
)
plugBidirectionalChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugBidirectionalChannel.setStatus("current")
_PlugChannelSpacingProvision_Type = FspR7ChannelSpacing
_PlugChannelSpacingProvision_Object = MibTableColumn
plugChannelSpacingProvision = _PlugChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 18),
    _PlugChannelSpacingProvision_Type()
)
plugChannelSpacingProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugChannelSpacingProvision.setStatus("current")
_PlugChannelRangeProvision_Type = FspR7ChannelRangeInventory
_PlugChannelRangeProvision_Object = MibTableColumn
plugChannelRangeProvision = _PlugChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 19),
    _PlugChannelRangeProvision_Type()
)
plugChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugChannelRangeProvision.setStatus("current")
_PlugLength_Type = FspR7Length
_PlugLength_Object = MibTableColumn
plugLength = _PlugLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 20),
    _PlugLength_Type()
)
plugLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugLength.setStatus("current")
_PlugPlugType_Type = FspR7PlugType
_PlugPlugType_Object = MibTableColumn
plugPlugType = _PlugPlugType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 21),
    _PlugPlugType_Type()
)
plugPlugType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugPlugType.setStatus("current")
_PlugPlugMode_Type = FspR7PlugMode
_PlugPlugMode_Object = MibTableColumn
plugPlugMode = _PlugPlugMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 5, 1, 22),
    _PlugPlugMode_Type()
)
plugPlugMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    plugPlugMode.setStatus("current")
_EndOfPlugTable_Type = Integer32
_EndOfPlugTable_Object = MibScalar
endOfPlugTable = _EndOfPlugTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 6),
    _EndOfPlugTable_Type()
)
endOfPlugTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfPlugTable.setStatus("current")
_ModuleTable_Object = MibTable
moduleTable = _ModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7)
)
if mibBuilder.loadTexts:
    moduleTable.setStatus("current")
_ModuleEntry_Object = MibTableRow
moduleEntry = _ModuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1)
)
moduleEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    moduleEntry.setStatus("current")
_ModuleRowStatus_Type = RowStatus
_ModuleRowStatus_Object = MibTableColumn
moduleRowStatus = _ModuleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 1),
    _ModuleRowStatus_Type()
)
moduleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleRowStatus.setStatus("current")
_ModuleForceDestroy_Type = FspR7ForcedStatus
_ModuleForceDestroy_Object = MibTableColumn
moduleForceDestroy = _ModuleForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 2),
    _ModuleForceDestroy_Type()
)
moduleForceDestroy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleForceDestroy.setStatus("current")
_ModuleCategory_Type = FspR7Category
_ModuleCategory_Object = MibTableColumn
moduleCategory = _ModuleCategory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 3),
    _ModuleCategory_Type()
)
moduleCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleCategory.setStatus("current")
_ModuleNetworkPorts_Type = Unsigned32
_ModuleNetworkPorts_Object = MibTableColumn
moduleNetworkPorts = _ModuleNetworkPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 4),
    _ModuleNetworkPorts_Type()
)
moduleNetworkPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleNetworkPorts.setStatus("current")
_ModuleInternalPlugs_Type = FspR7EquipmentTypeCaps
_ModuleInternalPlugs_Object = MibTableColumn
moduleInternalPlugs = _ModuleInternalPlugs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 5),
    _ModuleInternalPlugs_Type()
)
moduleInternalPlugs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleInternalPlugs.setStatus("current")
_ModulePsuOutputPower_Type = FspR7PsuOutputPower
_ModulePsuOutputPower_Object = MibTableColumn
modulePsuOutputPower = _ModulePsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 6),
    _ModulePsuOutputPower_Type()
)
modulePsuOutputPower.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePsuOutputPower.setStatus("current")
_ModuleWidth_Type = Unsigned32
_ModuleWidth_Object = MibTableColumn
moduleWidth = _ModuleWidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 7),
    _ModuleWidth_Type()
)
moduleWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleWidth.setStatus("current")
if mibBuilder.loadTexts:
    moduleWidth.setUnits("0.1 HP")
_ModulePower_Type = FspR7EdfaOutputPowerRating
_ModulePower_Object = MibTableColumn
modulePower = _ModulePower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 8),
    _ModulePower_Type()
)
modulePower.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePower.setStatus("current")
_ModuleReach_Type = FspR7OpticalInterfaceReach
_ModuleReach_Object = MibTableColumn
moduleReach = _ModuleReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 9),
    _ModuleReach_Type()
)
moduleReach.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleReach.setStatus("current")
_ModuleInitEqlz_Type = FspR7RlsAction
_ModuleInitEqlz_Object = MibTableColumn
moduleInitEqlz = _ModuleInitEqlz_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 10),
    _ModuleInitEqlz_Type()
)
moduleInitEqlz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleInitEqlz.setStatus("current")
_ModuleSuppClientPlugTypes_Type = FspR7EquipmentTypeCaps
_ModuleSuppClientPlugTypes_Object = MibTableColumn
moduleSuppClientPlugTypes = _ModuleSuppClientPlugTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 11),
    _ModuleSuppClientPlugTypes_Type()
)
moduleSuppClientPlugTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSuppClientPlugTypes.setStatus("current")
_ModuleSuppNetworkPlugTypes_Type = FspR7EquipmentTypeCaps
_ModuleSuppNetworkPlugTypes_Object = MibTableColumn
moduleSuppNetworkPlugTypes = _ModuleSuppNetworkPlugTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 12),
    _ModuleSuppNetworkPlugTypes_Type()
)
moduleSuppNetworkPlugTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSuppNetworkPlugTypes.setStatus("current")
_ModuleLanAid_Type = SnmpAdminString
_ModuleLanAid_Object = MibTableColumn
moduleLanAid = _ModuleLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 13),
    _ModuleLanAid_Type()
)
moduleLanAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleLanAid.setStatus("current")
_ModuleType_Type = FspR7EquipmentType
_ModuleType_Object = MibTableColumn
moduleType = _ModuleType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 14),
    _ModuleType_Type()
)
moduleType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleType.setStatus("current")
_ModuleMapping_Type = FspR7Mapping
_ModuleMapping_Object = MibTableColumn
moduleMapping = _ModuleMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 15),
    _ModuleMapping_Type()
)
moduleMapping.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleMapping.setStatus("current")
_ModuleGainRange_Type = FspR7GainRange
_ModuleGainRange_Object = MibTableColumn
moduleGainRange = _ModuleGainRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 16),
    _ModuleGainRange_Type()
)
moduleGainRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleGainRange.setStatus("current")
_ModuleInternalPlugRates_Type = FspR7PlugDataRateCaps
_ModuleInternalPlugRates_Object = MibTableColumn
moduleInternalPlugRates = _ModuleInternalPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 17),
    _ModuleInternalPlugRates_Type()
)
moduleInternalPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleInternalPlugRates.setStatus("current")
_ModuleSfProvision_Type = FspR7SingleFiberLocation
_ModuleSfProvision_Object = MibTableColumn
moduleSfProvision = _ModuleSfProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 18),
    _ModuleSfProvision_Type()
)
moduleSfProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleSfProvision.setStatus("current")
_ModuleInternalPlugsReach_Type = FspR7OpticalInterfaceReachCaps
_ModuleInternalPlugsReach_Object = MibTableColumn
moduleInternalPlugsReach = _ModuleInternalPlugsReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 19),
    _ModuleInternalPlugsReach_Type()
)
moduleInternalPlugsReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleInternalPlugsReach.setStatus("current")
_ModuleCapabilityLevelProvision_Type = FspR7CapInventory
_ModuleCapabilityLevelProvision_Object = MibTableColumn
moduleCapabilityLevelProvision = _ModuleCapabilityLevelProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 20),
    _ModuleCapabilityLevelProvision_Type()
)
moduleCapabilityLevelProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleCapabilityLevelProvision.setStatus("current")
_ModuleConnector_Type = FspR7ConnectorType
_ModuleConnector_Object = MibTableColumn
moduleConnector = _ModuleConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 21),
    _ModuleConnector_Type()
)
moduleConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleConnector.setStatus("current")
_ModuleDCFiberType_Type = FspR7DCFiberType
_ModuleDCFiberType_Object = MibTableColumn
moduleDCFiberType = _ModuleDCFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 22),
    _ModuleDCFiberType_Type()
)
moduleDCFiberType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleDCFiberType.setStatus("current")
_ModuleChannelsProvision_Type = FspR7NumberOfChannels
_ModuleChannelsProvision_Object = MibTableColumn
moduleChannelsProvision = _ModuleChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 23),
    _ModuleChannelsProvision_Type()
)
moduleChannelsProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleChannelsProvision.setStatus("current")
_ModuleFiberDetect_Type = FspR7EnableDisable
_ModuleFiberDetect_Object = MibTableColumn
moduleFiberDetect = _ModuleFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 24),
    _ModuleFiberDetect_Type()
)
moduleFiberDetect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleFiberDetect.setStatus("current")
_ModuleDescription_Type = SnmpAdminString
_ModuleDescription_Object = MibTableColumn
moduleDescription = _ModuleDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 25),
    _ModuleDescription_Type()
)
moduleDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDescription.setStatus("current")
_ModuleSupply_Type = FspR7SupplyType
_ModuleSupply_Object = MibTableColumn
moduleSupply = _ModuleSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 26),
    _ModuleSupply_Type()
)
moduleSupply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleSupply.setStatus("current")
_ModuleSuppClientPlugRates_Type = FspR7PlugDataRateCaps
_ModuleSuppClientPlugRates_Object = MibTableColumn
moduleSuppClientPlugRates = _ModuleSuppClientPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 27),
    _ModuleSuppClientPlugRates_Type()
)
moduleSuppClientPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSuppClientPlugRates.setStatus("current")


class _ModuleClientPorts_Type(Unsigned32):
    """Custom type moduleClientPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_ModuleClientPorts_Type.__name__ = "Unsigned32"
_ModuleClientPorts_Object = MibTableColumn
moduleClientPorts = _ModuleClientPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 28),
    _ModuleClientPorts_Type()
)
moduleClientPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleClientPorts.setStatus("current")
_ModuleGroup_Type = FspR7OpticalGroup
_ModuleGroup_Object = MibTableColumn
moduleGroup = _ModuleGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 29),
    _ModuleGroup_Type()
)
moduleGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleGroup.setStatus("current")
_ModuleDeploy_Type = FspR7DeploymentScenario
_ModuleDeploy_Object = MibTableColumn
moduleDeploy = _ModuleDeploy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 30),
    _ModuleDeploy_Type()
)
moduleDeploy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleDeploy.setStatus("current")


class _ModuleLagSysPrio_Type(Unsigned32):
    """Custom type moduleLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ModuleLagSysPrio_Type.__name__ = "Unsigned32"
_ModuleLagSysPrio_Object = MibTableColumn
moduleLagSysPrio = _ModuleLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 31),
    _ModuleLagSysPrio_Type()
)
moduleLagSysPrio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleLagSysPrio.setStatus("current")
_ModuleMaxPowerConsumption_Type = Unsigned32
_ModuleMaxPowerConsumption_Object = MibTableColumn
moduleMaxPowerConsumption = _ModuleMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 32),
    _ModuleMaxPowerConsumption_Type()
)
moduleMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    moduleMaxPowerConsumption.setUnits("0.1 W")
_ModuleTransmitChannel_Type = FspR7ChannelIdentifier
_ModuleTransmitChannel_Object = MibTableColumn
moduleTransmitChannel = _ModuleTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 33),
    _ModuleTransmitChannel_Type()
)
moduleTransmitChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleTransmitChannel.setStatus("current")
_ModuleBand_Type = FspR7OpticalBand
_ModuleBand_Object = MibTableColumn
moduleBand = _ModuleBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 34),
    _ModuleBand_Type()
)
moduleBand.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleBand.setStatus("current")
_ModuleUpgradePorts_Type = Unsigned32
_ModuleUpgradePorts_Object = MibTableColumn
moduleUpgradePorts = _ModuleUpgradePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 35),
    _ModuleUpgradePorts_Type()
)
moduleUpgradePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleUpgradePorts.setStatus("current")
_ModuleTrafficDirection_Type = FspR7TrafficDirection
_ModuleTrafficDirection_Object = MibTableColumn
moduleTrafficDirection = _ModuleTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 36),
    _ModuleTrafficDirection_Type()
)
moduleTrafficDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleTrafficDirection.setStatus("current")
_ModuleMidstagePorts_Type = Unsigned32
_ModuleMidstagePorts_Object = MibTableColumn
moduleMidstagePorts = _ModuleMidstagePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 37),
    _ModuleMidstagePorts_Type()
)
moduleMidstagePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleMidstagePorts.setStatus("current")
_ModuleStages_Type = FspR7Stages
_ModuleStages_Object = MibTableColumn
moduleStages = _ModuleStages_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 38),
    _ModuleStages_Type()
)
moduleStages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleStages.setStatus("current")
_ModuleIpAddr_Type = IpAddress
_ModuleIpAddr_Object = MibTableColumn
moduleIpAddr = _ModuleIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 39),
    _ModuleIpAddr_Type()
)
moduleIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleIpAddr.setStatus("current")
_ModuleDispersionCompensation_Type = FspR7DispersionCompensation
_ModuleDispersionCompensation_Object = MibTableColumn
moduleDispersionCompensation = _ModuleDispersionCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 40),
    _ModuleDispersionCompensation_Type()
)
moduleDispersionCompensation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleDispersionCompensation.setStatus("current")
_ModuleActivateDetect_Type = FspR7YesNo
_ModuleActivateDetect_Object = MibTableColumn
moduleActivateDetect = _ModuleActivateDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 41),
    _ModuleActivateDetect_Type()
)
moduleActivateDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleActivateDetect.setStatus("current")
_ModuleOscUsage_Type = FspR7OscUsage
_ModuleOscUsage_Object = MibTableColumn
moduleOscUsage = _ModuleOscUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 42),
    _ModuleOscUsage_Type()
)
moduleOscUsage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleOscUsage.setStatus("current")
_ModuleInternalPorts_Type = Unsigned32
_ModuleInternalPorts_Object = MibTableColumn
moduleInternalPorts = _ModuleInternalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 43),
    _ModuleInternalPorts_Type()
)
moduleInternalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleInternalPorts.setStatus("current")
_ModuleAdmin_Type = FspR7AdminState
_ModuleAdmin_Object = MibTableColumn
moduleAdmin = _ModuleAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 44),
    _ModuleAdmin_Type()
)
moduleAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleAdmin.setStatus("current")
_ModuleScrambling_Type = FspR7EnableDisable
_ModuleScrambling_Object = MibTableColumn
moduleScrambling = _ModuleScrambling_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 45),
    _ModuleScrambling_Type()
)
moduleScrambling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleScrambling.setStatus("current")
_ModuleTerminationType_Type = FspR7EquipmentType
_ModuleTerminationType_Object = MibTableColumn
moduleTerminationType = _ModuleTerminationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 46),
    _ModuleTerminationType_Type()
)
moduleTerminationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleTerminationType.setStatus("current")
_ModuleChannelsNumber_Type = FspR7NumberOfChannels
_ModuleChannelsNumber_Object = MibTableColumn
moduleChannelsNumber = _ModuleChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 47),
    _ModuleChannelsNumber_Type()
)
moduleChannelsNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleChannelsNumber.setStatus("current")


class _ModuleLanPorts_Type(Unsigned32):
    """Custom type moduleLanPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_ModuleLanPorts_Type.__name__ = "Unsigned32"
_ModuleLanPorts_Object = MibTableColumn
moduleLanPorts = _ModuleLanPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 48),
    _ModuleLanPorts_Type()
)
moduleLanPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleLanPorts.setStatus("current")
_ModuleChannelSpacingProvision_Type = FspR7ChannelSpacing
_ModuleChannelSpacingProvision_Object = MibTableColumn
moduleChannelSpacingProvision = _ModuleChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 49),
    _ModuleChannelSpacingProvision_Type()
)
moduleChannelSpacingProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleChannelSpacingProvision.setStatus("current")
_ModuleMode_Type = FspR7TransmissionMode
_ModuleMode_Object = MibTableColumn
moduleMode = _ModuleMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 50),
    _ModuleMode_Type()
)
moduleMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleMode.setStatus("current")


class _ModuleEccPorts_Type(Unsigned32):
    """Custom type moduleEccPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 50),
    )


_ModuleEccPorts_Type.__name__ = "Unsigned32"
_ModuleEccPorts_Object = MibTableColumn
moduleEccPorts = _ModuleEccPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 51),
    _ModuleEccPorts_Type()
)
moduleEccPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleEccPorts.setStatus("current")
_ModuleSubBandProvision_Type = FspR7OpticalSubBand
_ModuleSubBandProvision_Object = MibTableColumn
moduleSubBandProvision = _ModuleSubBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 52),
    _ModuleSubBandProvision_Type()
)
moduleSubBandProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleSubBandProvision.setStatus("current")
_ModuleSuppNetworkPlugRates_Type = FspR7PlugDataRateCaps
_ModuleSuppNetworkPlugRates_Object = MibTableColumn
moduleSuppNetworkPlugRates = _ModuleSuppNetworkPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 53),
    _ModuleSuppNetworkPlugRates_Type()
)
moduleSuppNetworkPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSuppNetworkPlugRates.setStatus("current")
_ModuleHeight_Type = Unsigned32
_ModuleHeight_Object = MibTableColumn
moduleHeight = _ModuleHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 54),
    _ModuleHeight_Type()
)
moduleHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleHeight.setStatus("current")
if mibBuilder.loadTexts:
    moduleHeight.setUnits("0.1 HU")
_ModuleAlias_Type = SnmpAdminString
_ModuleAlias_Object = MibTableColumn
moduleAlias = _ModuleAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 55),
    _ModuleAlias_Type()
)
moduleAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleAlias.setStatus("current")
_ModuleFiberType_Type = FspR7OpticalFiberType
_ModuleFiberType_Object = MibTableColumn
moduleFiberType = _ModuleFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 56),
    _ModuleFiberType_Type()
)
moduleFiberType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleFiberType.setStatus("current")
_ModuleChannelSpacing_Type = FspR7ChannelSpacing
_ModuleChannelSpacing_Object = MibTableColumn
moduleChannelSpacing = _ModuleChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 57),
    _ModuleChannelSpacing_Type()
)
moduleChannelSpacing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleChannelSpacing.setStatus("current")
_ModuleOutputReset_Type = FspR7RlsAction
_ModuleOutputReset_Object = MibTableColumn
moduleOutputReset = _ModuleOutputReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 58),
    _ModuleOutputReset_Type()
)
moduleOutputReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleOutputReset.setStatus("current")


class _ModuleSerialPorts_Type(Unsigned32):
    """Custom type moduleSerialPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_ModuleSerialPorts_Type.__name__ = "Unsigned32"
_ModuleSerialPorts_Object = MibTableColumn
moduleSerialPorts = _ModuleSerialPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 59),
    _ModuleSerialPorts_Type()
)
moduleSerialPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSerialPorts.setStatus("current")
_ModuleRoadmNumber_Type = FspR7RoadmNumber
_ModuleRoadmNumber_Object = MibTableColumn
moduleRoadmNumber = _ModuleRoadmNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 60),
    _ModuleRoadmNumber_Type()
)
moduleRoadmNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleRoadmNumber.setStatus("current")
_ModuleSecondaryStates_Type = FspR7EntitySecondaryStates
_ModuleSecondaryStates_Object = MibTableColumn
moduleSecondaryStates = _ModuleSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 61),
    _ModuleSecondaryStates_Type()
)
moduleSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleSecondaryStates.setStatus("current")
_ModuleOperState_Type = FspR7OperState
_ModuleOperState_Object = MibTableColumn
moduleOperState = _ModuleOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 62),
    _ModuleOperState_Type()
)
moduleOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleOperState.setStatus("current")
_ModuleAlsConf_Type = FspR7EnableDisable
_ModuleAlsConf_Object = MibTableColumn
moduleAlsConf = _ModuleAlsConf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 63),
    _ModuleAlsConf_Type()
)
moduleAlsConf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAlsConf.setStatus("current")
_ModuleTopologyType_Type = FspR7TopologyType
_ModuleTopologyType_Object = MibTableColumn
moduleTopologyType = _ModuleTopologyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 64),
    _ModuleTopologyType_Type()
)
moduleTopologyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleTopologyType.setStatus("current")
_ModuleScuRing_Type = FspR7EnableDisable
_ModuleScuRing_Object = MibTableColumn
moduleScuRing = _ModuleScuRing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 65),
    _ModuleScuRing_Type()
)
moduleScuRing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleScuRing.setStatus("current")
_ModuleNodeIpAddress_Type = SnmpAdminString
_ModuleNodeIpAddress_Object = MibTableColumn
moduleNodeIpAddress = _ModuleNodeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 66),
    _ModuleNodeIpAddress_Type()
)
moduleNodeIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleNodeIpAddress.setStatus("current")
_ModuleInventoryDescription_Type = SnmpAdminString
_ModuleInventoryDescription_Object = MibTableColumn
moduleInventoryDescription = _ModuleInventoryDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 67),
    _ModuleInventoryDescription_Type()
)
moduleInventoryDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleInventoryDescription.setStatus("current")
_ModuleGenericPlugRates_Type = FspR7PlugDataRateCaps
_ModuleGenericPlugRates_Object = MibTableColumn
moduleGenericPlugRates = _ModuleGenericPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 68),
    _ModuleGenericPlugRates_Type()
)
moduleGenericPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleGenericPlugRates.setStatus("current")
_ModuleTopology_Type = FspR7Topology
_ModuleTopology_Object = MibTableColumn
moduleTopology = _ModuleTopology_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 69),
    _ModuleTopology_Type()
)
moduleTopology.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleTopology.setStatus("current")
_ModuleForceConfig_Type = FspR7RlsAction
_ModuleForceConfig_Object = MibTableColumn
moduleForceConfig = _ModuleForceConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 70),
    _ModuleForceConfig_Type()
)
moduleForceConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleForceConfig.setStatus("current")
_ModuleRamUsage_Type = Unsigned32
_ModuleRamUsage_Object = MibTableColumn
moduleRamUsage = _ModuleRamUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 71),
    _ModuleRamUsage_Type()
)
moduleRamUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleRamUsage.setStatus("current")
if mibBuilder.loadTexts:
    moduleRamUsage.setUnits("kByte")
_ModuleFanMode_Type = FspR7FanMode
_ModuleFanMode_Object = MibTableColumn
moduleFanMode = _ModuleFanMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 72),
    _ModuleFanMode_Type()
)
moduleFanMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleFanMode.setStatus("current")
_ModuleMuxMethod_Type = FspR7MuxMethod
_ModuleMuxMethod_Object = MibTableColumn
moduleMuxMethod = _ModuleMuxMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 73),
    _ModuleMuxMethod_Type()
)
moduleMuxMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleMuxMethod.setStatus("current")
_ModuleNdpCleanup_Type = FspR7RlsAction
_ModuleNdpCleanup_Object = MibTableColumn
moduleNdpCleanup = _ModuleNdpCleanup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 74),
    _ModuleNdpCleanup_Type()
)
moduleNdpCleanup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleNdpCleanup.setStatus("current")
_ModuleAvlndpGbeTxcrs_Type = Unsigned32
_ModuleAvlndpGbeTxcrs_Object = MibTableColumn
moduleAvlndpGbeTxcrs = _ModuleAvlndpGbeTxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 75),
    _ModuleAvlndpGbeTxcrs_Type()
)
moduleAvlndpGbeTxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpGbeTxcrs.setStatus("current")
_ModuleAvlndpGbeRxcrs_Type = Unsigned32
_ModuleAvlndpGbeRxcrs_Object = MibTableColumn
moduleAvlndpGbeRxcrs = _ModuleAvlndpGbeRxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 76),
    _ModuleAvlndpGbeRxcrs_Type()
)
moduleAvlndpGbeRxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpGbeRxcrs.setStatus("current")
_ModuleAvlndpF125Txcrs_Type = Unsigned32
_ModuleAvlndpF125Txcrs_Object = MibTableColumn
moduleAvlndpF125Txcrs = _ModuleAvlndpF125Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 77),
    _ModuleAvlndpF125Txcrs_Type()
)
moduleAvlndpF125Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF125Txcrs.setStatus("current")
_ModuleAvlndpF125Rxcrs_Type = Unsigned32
_ModuleAvlndpF125Rxcrs_Object = MibTableColumn
moduleAvlndpF125Rxcrs = _ModuleAvlndpF125Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 78),
    _ModuleAvlndpF125Rxcrs_Type()
)
moduleAvlndpF125Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF125Rxcrs.setStatus("current")
_ModuleAvlndpF270Txcrs_Type = Unsigned32
_ModuleAvlndpF270Txcrs_Object = MibTableColumn
moduleAvlndpF270Txcrs = _ModuleAvlndpF270Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 79),
    _ModuleAvlndpF270Txcrs_Type()
)
moduleAvlndpF270Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF270Txcrs.setStatus("current")
_ModuleAvlndpF270Rxcrs_Type = Unsigned32
_ModuleAvlndpF270Rxcrs_Object = MibTableColumn
moduleAvlndpF270Rxcrs = _ModuleAvlndpF270Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 80),
    _ModuleAvlndpF270Rxcrs_Type()
)
moduleAvlndpF270Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF270Rxcrs.setStatus("current")
_ModuleAvlndpF1483Txcrs_Type = Unsigned32
_ModuleAvlndpF1483Txcrs_Object = MibTableColumn
moduleAvlndpF1483Txcrs = _ModuleAvlndpF1483Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 81),
    _ModuleAvlndpF1483Txcrs_Type()
)
moduleAvlndpF1483Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF1483Txcrs.setStatus("current")
_ModuleAvlndpF1483Rxcrs_Type = Unsigned32
_ModuleAvlndpF1483Rxcrs_Object = MibTableColumn
moduleAvlndpF1483Rxcrs = _ModuleAvlndpF1483Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 82),
    _ModuleAvlndpF1483Rxcrs_Type()
)
moduleAvlndpF1483Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF1483Rxcrs.setStatus("current")
_ModuleAvlndpF1485Txcrs_Type = Unsigned32
_ModuleAvlndpF1485Txcrs_Object = MibTableColumn
moduleAvlndpF1485Txcrs = _ModuleAvlndpF1485Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 83),
    _ModuleAvlndpF1485Txcrs_Type()
)
moduleAvlndpF1485Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF1485Txcrs.setStatus("current")
_ModuleAvlndpF1485Rxcrs_Type = Unsigned32
_ModuleAvlndpF1485Rxcrs_Object = MibTableColumn
moduleAvlndpF1485Rxcrs = _ModuleAvlndpF1485Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 84),
    _ModuleAvlndpF1485Rxcrs_Type()
)
moduleAvlndpF1485Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF1485Rxcrs.setStatus("current")
_ModuleAvlndpF2967Txcrs_Type = Unsigned32
_ModuleAvlndpF2967Txcrs_Object = MibTableColumn
moduleAvlndpF2967Txcrs = _ModuleAvlndpF2967Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 85),
    _ModuleAvlndpF2967Txcrs_Type()
)
moduleAvlndpF2967Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF2967Txcrs.setStatus("current")
_ModuleAvlndpF2967Rxcrs_Type = Unsigned32
_ModuleAvlndpF2967Rxcrs_Object = MibTableColumn
moduleAvlndpF2967Rxcrs = _ModuleAvlndpF2967Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 86),
    _ModuleAvlndpF2967Rxcrs_Type()
)
moduleAvlndpF2967Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF2967Rxcrs.setStatus("current")
_ModuleAvlndpF2970Txcrs_Type = Unsigned32
_ModuleAvlndpF2970Txcrs_Object = MibTableColumn
moduleAvlndpF2970Txcrs = _ModuleAvlndpF2970Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 87),
    _ModuleAvlndpF2970Txcrs_Type()
)
moduleAvlndpF2970Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF2970Txcrs.setStatus("current")
_ModuleAvlndpF2970Rxcrs_Type = Unsigned32
_ModuleAvlndpF2970Rxcrs_Object = MibTableColumn
moduleAvlndpF2970Rxcrs = _ModuleAvlndpF2970Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 88),
    _ModuleAvlndpF2970Rxcrs_Type()
)
moduleAvlndpF2970Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpF2970Rxcrs.setStatus("current")
_ModuleAvlmdp_Type = Unsigned32
_ModuleAvlmdp_Object = MibTableColumn
moduleAvlmdp = _ModuleAvlmdp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 89),
    _ModuleAvlmdp_Type()
)
moduleAvlmdp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlmdp.setStatus("current")
_ModuleRstp_Type = FspR7EnableDisable
_ModuleRstp_Object = MibTableColumn
moduleRstp = _ModuleRstp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 90),
    _ModuleRstp_Type()
)
moduleRstp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleRstp.setStatus("current")
_ModuleRemoteReset_Type = FspR7RlsAction
_ModuleRemoteReset_Object = MibTableColumn
moduleRemoteReset = _ModuleRemoteReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 91),
    _ModuleRemoteReset_Type()
)
moduleRemoteReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleRemoteReset.setStatus("current")
_ModuleChannelRangeProvision_Type = FspR7ChannelRangeInventory
_ModuleChannelRangeProvision_Object = MibTableColumn
moduleChannelRangeProvision = _ModuleChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 92),
    _ModuleChannelRangeProvision_Type()
)
moduleChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleChannelRangeProvision.setStatus("current")
_ModulePartner1_Type = SnmpAdminString
_ModulePartner1_Object = MibTableColumn
modulePartner1 = _ModulePartner1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 93),
    _ModulePartner1_Type()
)
modulePartner1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePartner1.setStatus("current")
_ModulePartner2_Type = SnmpAdminString
_ModulePartner2_Object = MibTableColumn
modulePartner2 = _ModulePartner2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 94),
    _ModulePartner2_Type()
)
modulePartner2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePartner2.setStatus("current")
_ModulePartner3_Type = SnmpAdminString
_ModulePartner3_Object = MibTableColumn
modulePartner3 = _ModulePartner3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 95),
    _ModulePartner3_Type()
)
modulePartner3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePartner3.setStatus("current")
_ModulePartner4_Type = SnmpAdminString
_ModulePartner4_Object = MibTableColumn
modulePartner4 = _ModulePartner4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 96),
    _ModulePartner4_Type()
)
modulePartner4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    modulePartner4.setStatus("current")
_ModuleAcp_Type = FspR7Acp
_ModuleAcp_Object = MibTableColumn
moduleAcp = _ModuleAcp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 97),
    _ModuleAcp_Type()
)
moduleAcp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    moduleAcp.setStatus("current")
_ModuleAvlSwCap_Type = Unsigned32
_ModuleAvlSwCap_Object = MibTableColumn
moduleAvlSwCap = _ModuleAvlSwCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 98),
    _ModuleAvlSwCap_Type()
)
moduleAvlSwCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlSwCap.setStatus("current")
if mibBuilder.loadTexts:
    moduleAvlSwCap.setUnits("0.01 Gbps")
_ModuleAvlMapCapUp_Type = Unsigned32
_ModuleAvlMapCapUp_Object = MibTableColumn
moduleAvlMapCapUp = _ModuleAvlMapCapUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 99),
    _ModuleAvlMapCapUp_Type()
)
moduleAvlMapCapUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlMapCapUp.setStatus("current")
if mibBuilder.loadTexts:
    moduleAvlMapCapUp.setUnits("0.01 Gbps")
_ModuleAvlMapCapDown_Type = Unsigned32
_ModuleAvlMapCapDown_Object = MibTableColumn
moduleAvlMapCapDown = _ModuleAvlMapCapDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 100),
    _ModuleAvlMapCapDown_Type()
)
moduleAvlMapCapDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlMapCapDown.setStatus("current")
if mibBuilder.loadTexts:
    moduleAvlMapCapDown.setUnits("0.01 Gbps")
_ModuleAvlndpAdapt1485Txcrs_Type = Unsigned32
_ModuleAvlndpAdapt1485Txcrs_Object = MibTableColumn
moduleAvlndpAdapt1485Txcrs = _ModuleAvlndpAdapt1485Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 101),
    _ModuleAvlndpAdapt1485Txcrs_Type()
)
moduleAvlndpAdapt1485Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpAdapt1485Txcrs.setStatus("current")
_ModuleAvlndpAdapt1485Rxcrs_Type = Unsigned32
_ModuleAvlndpAdapt1485Rxcrs_Object = MibTableColumn
moduleAvlndpAdapt1485Rxcrs = _ModuleAvlndpAdapt1485Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 102),
    _ModuleAvlndpAdapt1485Rxcrs_Type()
)
moduleAvlndpAdapt1485Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpAdapt1485Rxcrs.setStatus("current")
_ModuleAvlndpAdapt2970Txcrs_Type = Unsigned32
_ModuleAvlndpAdapt2970Txcrs_Object = MibTableColumn
moduleAvlndpAdapt2970Txcrs = _ModuleAvlndpAdapt2970Txcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 103),
    _ModuleAvlndpAdapt2970Txcrs_Type()
)
moduleAvlndpAdapt2970Txcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpAdapt2970Txcrs.setStatus("current")
_ModuleAvlndpAdapt2970Rxcrs_Type = Unsigned32
_ModuleAvlndpAdapt2970Rxcrs_Object = MibTableColumn
moduleAvlndpAdapt2970Rxcrs = _ModuleAvlndpAdapt2970Rxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 104),
    _ModuleAvlndpAdapt2970Rxcrs_Type()
)
moduleAvlndpAdapt2970Rxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleAvlndpAdapt2970Rxcrs.setStatus("current")
_ModuleManagementPorts_Type = Unsigned32
_ModuleManagementPorts_Object = MibTableColumn
moduleManagementPorts = _ModuleManagementPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 7, 1, 105),
    _ModuleManagementPorts_Type()
)
moduleManagementPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleManagementPorts.setStatus("current")
_EndOfModuleTable_Type = Integer32
_EndOfModuleTable_Object = MibScalar
endOfModuleTable = _EndOfModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 8),
    _EndOfModuleTable_Type()
)
endOfModuleTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfModuleTable.setStatus("current")
_ProtectionCableTable_Object = MibTable
protectionCableTable = _ProtectionCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 9)
)
if mibBuilder.loadTexts:
    protectionCableTable.setStatus("current")
_ProtectionCableEntry_Object = MibTableRow
protectionCableEntry = _ProtectionCableEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 9, 1)
)
protectionCableEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex1"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex2"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex3"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableIndex4"),
    (0, "ADVA-FSPR7-MIB", "entityProtectionCableClassName"),
)
if mibBuilder.loadTexts:
    protectionCableEntry.setStatus("current")
_ProtectionCableRowStatus_Type = RowStatus
_ProtectionCableRowStatus_Object = MibTableColumn
protectionCableRowStatus = _ProtectionCableRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 9, 1, 1),
    _ProtectionCableRowStatus_Type()
)
protectionCableRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    protectionCableRowStatus.setStatus("current")
_ProtectionCableType_Type = FspR7YcableType
_ProtectionCableType_Object = MibTableColumn
protectionCableType = _ProtectionCableType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 9, 1, 2),
    _ProtectionCableType_Type()
)
protectionCableType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    protectionCableType.setStatus("current")
_EndOfProtectionCableTable_Type = Integer32
_EndOfProtectionCableTable_Object = MibScalar
endOfProtectionCableTable = _EndOfProtectionCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 10),
    _EndOfProtectionCableTable_Type()
)
endOfProtectionCableTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfProtectionCableTable.setStatus("current")
_FilterCableTable_Object = MibTable
filterCableTable = _FilterCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 11)
)
if mibBuilder.loadTexts:
    filterCableTable.setStatus("current")
_FilterCableEntry_Object = MibTableRow
filterCableEntry = _FilterCableEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 11, 1)
)
filterCableEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex1"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex2"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex3"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableIndex4"),
    (0, "ADVA-FSPR7-MIB", "entityFilterCableClassName"),
)
if mibBuilder.loadTexts:
    filterCableEntry.setStatus("current")
_FilterCableRowStatus_Type = RowStatus
_FilterCableRowStatus_Object = MibTableColumn
filterCableRowStatus = _FilterCableRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 11, 1, 1),
    _FilterCableRowStatus_Type()
)
filterCableRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterCableRowStatus.setStatus("current")
_FilterCableType_Type = FspR7FltrCableType
_FilterCableType_Object = MibTableColumn
filterCableType = _FilterCableType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 11, 1, 2),
    _FilterCableType_Type()
)
filterCableType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterCableType.setStatus("current")
_EndOfFilterCableTable_Type = Integer32
_EndOfFilterCableTable_Object = MibScalar
endOfFilterCableTable = _EndOfFilterCableTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 12),
    _EndOfFilterCableTable_Type()
)
endOfFilterCableTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFilterCableTable.setStatus("current")
_EndOfEqptMgmt_Type = Integer32
_EndOfEqptMgmt_Object = MibScalar
endOfEqptMgmt = _EndOfEqptMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 3, 10000),
    _EndOfEqptMgmt_Type()
)
endOfEqptMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEqptMgmt.setStatus("current")
_FacilityMgmt_ObjectIdentity = ObjectIdentity
facilityMgmt = _FacilityMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4)
)
_PhysicalPortTable_Object = MibTable
physicalPortTable = _PhysicalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1)
)
if mibBuilder.loadTexts:
    physicalPortTable.setStatus("current")
_PhysicalPortEntry_Object = MibTableRow
physicalPortEntry = _PhysicalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1)
)
physicalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    physicalPortEntry.setStatus("current")
_PhysicalPortRowStatus_Type = RowStatus
_PhysicalPortRowStatus_Object = MibTableColumn
physicalPortRowStatus = _PhysicalPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 1),
    _PhysicalPortRowStatus_Type()
)
physicalPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortRowStatus.setStatus("current")
_PhysicalPortType_Type = FspR7InterfaceType
_PhysicalPortType_Object = MibTableColumn
physicalPortType = _PhysicalPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 2),
    _PhysicalPortType_Type()
)
physicalPortType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortType.setStatus("current")
_PhysicalPortAdmin_Type = FspR7AdminState
_PhysicalPortAdmin_Object = MibTableColumn
physicalPortAdmin = _PhysicalPortAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 3),
    _PhysicalPortAdmin_Type()
)
physicalPortAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortAdmin.setStatus("current")
_PhysicalPortConnector_Type = FspR7ConnectorType
_PhysicalPortConnector_Object = MibTableColumn
physicalPortConnector = _PhysicalPortConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 4),
    _PhysicalPortConnector_Type()
)
physicalPortConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortConnector.setStatus("current")
_PhysicalPortFiber_Type = FspR7OpticalFiberType
_PhysicalPortFiber_Object = MibTableColumn
physicalPortFiber = _PhysicalPortFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 5),
    _PhysicalPortFiber_Type()
)
physicalPortFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortFiber.setStatus("current")
_PhysicalPortConnType_Type = FspR7TypeConnection
_PhysicalPortConnType_Object = MibTableColumn
physicalPortConnType = _PhysicalPortConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 6),
    _PhysicalPortConnType_Type()
)
physicalPortConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortConnType.setStatus("current")
_PhysicalPortOperState_Type = FspR7OperState
_PhysicalPortOperState_Object = MibTableColumn
physicalPortOperState = _PhysicalPortOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 7),
    _PhysicalPortOperState_Type()
)
physicalPortOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortOperState.setStatus("current")
_PhysicalPortLaneChannel_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannel_Object = MibTableColumn
physicalPortLaneChannel = _PhysicalPortLaneChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 8),
    _PhysicalPortLaneChannel_Type()
)
physicalPortLaneChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaneChannel.setStatus("current")
_PhysicalPortLaserBiasCurrLevel_Type = Unsigned32
_PhysicalPortLaserBiasCurrLevel_Object = MibTableColumn
physicalPortLaserBiasCurrLevel = _PhysicalPortLaserBiasCurrLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 9),
    _PhysicalPortLaserBiasCurrLevel_Type()
)
physicalPortLaserBiasCurrLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaserBiasCurrLevel.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortLaserBiasCurrLevel.setUnits("0.001 A")
_PhysicalPortLaserTemp_Type = Integer32
_PhysicalPortLaserTemp_Object = MibTableColumn
physicalPortLaserTemp = _PhysicalPortLaserTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 10),
    _PhysicalPortLaserTemp_Type()
)
physicalPortLaserTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaserTemp.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortLaserTemp.setUnits("0.1 degree Celsius")
_PhysicalPortInputPower_Type = Integer32
_PhysicalPortInputPower_Object = MibTableColumn
physicalPortInputPower = _PhysicalPortInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 11),
    _PhysicalPortInputPower_Type()
)
physicalPortInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortInputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    physicalPortInputPower.setUnits("0.1 dBm")
_PhysicalPortOutputPower_Type = Integer32
_PhysicalPortOutputPower_Object = MibTableColumn
physicalPortOutputPower = _PhysicalPortOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 12),
    _PhysicalPortOutputPower_Type()
)
physicalPortOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortOutputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    physicalPortOutputPower.setUnits("0.1 dBm")
_PhysicalPortSecondaryStates_Type = FspR7EntitySecondaryStates
_PhysicalPortSecondaryStates_Object = MibTableColumn
physicalPortSecondaryStates = _PhysicalPortSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 13),
    _PhysicalPortSecondaryStates_Type()
)
physicalPortSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortSecondaryStates.setStatus("current")
_PhysicalPortAlias_Type = SnmpAdminString
_PhysicalPortAlias_Object = MibTableColumn
physicalPortAlias = _PhysicalPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 14),
    _PhysicalPortAlias_Type()
)
physicalPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortAlias.setStatus("current")
_PhysicalPortAlsMode_Type = FspR7AlsMode
_PhysicalPortAlsMode_Object = MibTableColumn
physicalPortAlsMode = _PhysicalPortAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 15),
    _PhysicalPortAlsMode_Type()
)
physicalPortAlsMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortAlsMode.setStatus("current")
_PhysicalPortAutoThresReset_Type = FspR7RlsAction
_PhysicalPortAutoThresReset_Object = MibTableColumn
physicalPortAutoThresReset = _PhysicalPortAutoThresReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 16),
    _PhysicalPortAutoThresReset_Type()
)
physicalPortAutoThresReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortAutoThresReset.setStatus("current")
_PhysicalPortAutonegotiation_Type = EnableState
_PhysicalPortAutonegotiation_Object = MibTableColumn
physicalPortAutonegotiation = _PhysicalPortAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 17),
    _PhysicalPortAutonegotiation_Type()
)
physicalPortAutonegotiation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortAutonegotiation.setStatus("current")
_PhysicalPortBand_Type = FspR7OpticalBand
_PhysicalPortBand_Object = MibTableColumn
physicalPortBand = _PhysicalPortBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 18),
    _PhysicalPortBand_Type()
)
physicalPortBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortBand.setStatus("current")
_PhysicalPortPhysIfBaseType_Type = FspR7InterfaceType
_PhysicalPortPhysIfBaseType_Object = MibTableColumn
physicalPortPhysIfBaseType = _PhysicalPortPhysIfBaseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 19),
    _PhysicalPortPhysIfBaseType_Type()
)
physicalPortPhysIfBaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortPhysIfBaseType.setStatus("current")
_PhysicalPortConnState_Type = FspR7ConnectState
_PhysicalPortConnState_Object = MibTableColumn
physicalPortConnState = _PhysicalPortConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 20),
    _PhysicalPortConnState_Type()
)
physicalPortConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortConnState.setStatus("current")
_PhysicalPortBehaviour_Type = FspR7PortBehaviour
_PhysicalPortBehaviour_Object = MibTableColumn
physicalPortBehaviour = _PhysicalPortBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 21),
    _PhysicalPortBehaviour_Type()
)
physicalPortBehaviour.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortBehaviour.setStatus("current")
_PhysicalPortRate_Type = Unsigned32
_PhysicalPortRate_Object = MibTableColumn
physicalPortRate = _PhysicalPortRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 22),
    _PhysicalPortRate_Type()
)
physicalPortRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortRate.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortRate.setUnits("Mbps")
_PhysicalPortBitrate_Type = FspR7Bitrate
_PhysicalPortBitrate_Object = MibTableColumn
physicalPortBitrate = _PhysicalPortBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 23),
    _PhysicalPortBitrate_Type()
)
physicalPortBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortBitrate.setStatus("current")
_PhysicalPortDispertionConfig_Type = FspR7RlsAction
_PhysicalPortDispertionConfig_Object = MibTableColumn
physicalPortDispertionConfig = _PhysicalPortDispertionConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 24),
    _PhysicalPortDispertionConfig_Type()
)
physicalPortDispertionConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortDispertionConfig.setStatus("current")


class _PhysicalPortDispersionSetting_Type(Integer32):
    """Custom type physicalPortDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
    )


_PhysicalPortDispersionSetting_Type.__name__ = "Integer32"
_PhysicalPortDispersionSetting_Object = MibTableColumn
physicalPortDispersionSetting = _PhysicalPortDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 25),
    _PhysicalPortDispersionSetting_Type()
)
physicalPortDispersionSetting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortDispersionSetting.setUnits("ps/nm")
_PhysicalPortDispersionMode_Type = FspR7DispersionModes
_PhysicalPortDispersionMode_Object = MibTableColumn
physicalPortDispersionMode = _PhysicalPortDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 26),
    _PhysicalPortDispersionMode_Type()
)
physicalPortDispersionMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortDispersionMode.setStatus("current")
_PhysicalPortChannelSpacing_Type = FspR7ChannelSpacing
_PhysicalPortChannelSpacing_Object = MibTableColumn
physicalPortChannelSpacing = _PhysicalPortChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 27),
    _PhysicalPortChannelSpacing_Type()
)
physicalPortChannelSpacing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortChannelSpacing.setStatus("current")
_PhysicalPortChannelProv_Type = FspR7ChannelIdentifier
_PhysicalPortChannelProv_Object = MibTableColumn
physicalPortChannelProv = _PhysicalPortChannelProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 28),
    _PhysicalPortChannelProv_Type()
)
physicalPortChannelProv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortChannelProv.setStatus("current")
_PhysicalPortWdmRxChannel_Type = FspR7ChannelIdentifier
_PhysicalPortWdmRxChannel_Object = MibTableColumn
physicalPortWdmRxChannel = _PhysicalPortWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 29),
    _PhysicalPortWdmRxChannel_Type()
)
physicalPortWdmRxChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortWdmRxChannel.setStatus("current")
_PhysicalPortCodeGain_Type = FspR7CodeGain
_PhysicalPortCodeGain_Object = MibTableColumn
physicalPortCodeGain = _PhysicalPortCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 30),
    _PhysicalPortCodeGain_Type()
)
physicalPortCodeGain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortCodeGain.setStatus("current")
_PhysicalPortXfpDecisionThres_Type = FspR7XfpDecisionThres
_PhysicalPortXfpDecisionThres_Object = MibTableColumn
physicalPortXfpDecisionThres = _PhysicalPortXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 31),
    _PhysicalPortXfpDecisionThres_Type()
)
physicalPortXfpDecisionThres.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortXfpDecisionThres.setStatus("current")
_PhysicalPortDisparityCorrection_Type = EnableState
_PhysicalPortDisparityCorrection_Object = MibTableColumn
physicalPortDisparityCorrection = _PhysicalPortDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 32),
    _PhysicalPortDisparityCorrection_Type()
)
physicalPortDisparityCorrection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortDisparityCorrection.setStatus("current")
_PhysicalPortDuplexMode_Type = EthDuplexMode
_PhysicalPortDuplexMode_Object = MibTableColumn
physicalPortDuplexMode = _PhysicalPortDuplexMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 33),
    _PhysicalPortDuplexMode_Type()
)
physicalPortDuplexMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortDuplexMode.setStatus("current")
_PhysicalPortEqlzAdmin_Type = FspR7EnableDisable
_PhysicalPortEqlzAdmin_Object = MibTableColumn
physicalPortEqlzAdmin = _PhysicalPortEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 34),
    _PhysicalPortEqlzAdmin_Type()
)
physicalPortEqlzAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortEqlzAdmin.setStatus("current")
_PhysicalPortErrorForwarding_Type = FspR7ErrorFwdMode
_PhysicalPortErrorForwarding_Object = MibTableColumn
physicalPortErrorForwarding = _PhysicalPortErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 35),
    _PhysicalPortErrorForwarding_Type()
)
physicalPortErrorForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortErrorForwarding.setStatus("current")
_PhysicalPortFecType_Type = FspR7FecType
_PhysicalPortFecType_Object = MibTableColumn
physicalPortFecType = _PhysicalPortFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 36),
    _PhysicalPortFecType_Type()
)
physicalPortFecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortFecType.setStatus("current")
_PhysicalPortFarEndCommunication_Type = FspR7YesNo
_PhysicalPortFarEndCommunication_Object = MibTableColumn
physicalPortFarEndCommunication = _PhysicalPortFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 37),
    _PhysicalPortFarEndCommunication_Type()
)
physicalPortFarEndCommunication.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortFarEndCommunication.setStatus("current")
_PhysicalPortFlowControl_Type = FspR7FlowControlMode
_PhysicalPortFlowControl_Object = MibTableColumn
physicalPortFlowControl = _PhysicalPortFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 38),
    _PhysicalPortFlowControl_Type()
)
physicalPortFlowControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortFlowControl.setStatus("current")
_PhysicalPortForceLaserOn_Type = FspR7RlsAction
_PhysicalPortForceLaserOn_Object = MibTableColumn
physicalPortForceLaserOn = _PhysicalPortForceLaserOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 39),
    _PhysicalPortForceLaserOn_Type()
)
physicalPortForceLaserOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortForceLaserOn.setStatus("current")
_PhysicalPortFrequency_Type = Unsigned32
_PhysicalPortFrequency_Object = MibTableColumn
physicalPortFrequency = _PhysicalPortFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 40),
    _PhysicalPortFrequency_Type()
)
physicalPortFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortFrequency.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortFrequency.setUnits("0.01 THz")
_PhysicalPortReceiverFrequency_Type = Unsigned32
_PhysicalPortReceiverFrequency_Object = MibTableColumn
physicalPortReceiverFrequency = _PhysicalPortReceiverFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 41),
    _PhysicalPortReceiverFrequency_Type()
)
physicalPortReceiverFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortReceiverFrequency.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortReceiverFrequency.setUnits("0.01 THz")
_PhysicalPortInhibitSwitchToProt_Type = FspR7YesNo
_PhysicalPortInhibitSwitchToProt_Object = MibTableColumn
physicalPortInhibitSwitchToProt = _PhysicalPortInhibitSwitchToProt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 42),
    _PhysicalPortInhibitSwitchToProt_Type()
)
physicalPortInhibitSwitchToProt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortInhibitSwitchToProt.setStatus("current")
_PhysicalPortInhibitSwitchToWork_Type = FspR7YesNo
_PhysicalPortInhibitSwitchToWork_Object = MibTableColumn
physicalPortInhibitSwitchToWork = _PhysicalPortInhibitSwitchToWork_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 43),
    _PhysicalPortInhibitSwitchToWork_Type()
)
physicalPortInhibitSwitchToWork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortInhibitSwitchToWork.setStatus("current")
_PhysicalPortTransmitWavelength_Type = Unsigned32
_PhysicalPortTransmitWavelength_Object = MibTableColumn
physicalPortTransmitWavelength = _PhysicalPortTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 44),
    _PhysicalPortTransmitWavelength_Type()
)
physicalPortTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortTransmitWavelength.setUnits("0.01 nm")
_PhysicalPortReceiverWavelength_Type = Unsigned32
_PhysicalPortReceiverWavelength_Object = MibTableColumn
physicalPortReceiverWavelength = _PhysicalPortReceiverWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 45),
    _PhysicalPortReceiverWavelength_Type()
)
physicalPortReceiverWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortReceiverWavelength.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortReceiverWavelength.setUnits("0.01 nm")
_PhysicalPortLaneChannelSetting_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannelSetting_Object = MibTableColumn
physicalPortLaneChannelSetting = _PhysicalPortLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 46),
    _PhysicalPortLaneChannelSetting_Type()
)
physicalPortLaneChannelSetting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaneChannelSetting.setStatus("current")
_PhysicalPortLaneChannel1_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannel1_Object = MibTableColumn
physicalPortLaneChannel1 = _PhysicalPortLaneChannel1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 47),
    _PhysicalPortLaneChannel1_Type()
)
physicalPortLaneChannel1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaneChannel1.setStatus("current")
_PhysicalPortLaneChannel2_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannel2_Object = MibTableColumn
physicalPortLaneChannel2 = _PhysicalPortLaneChannel2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 48),
    _PhysicalPortLaneChannel2_Type()
)
physicalPortLaneChannel2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaneChannel2.setStatus("current")
_PhysicalPortLaneChannel3_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannel3_Object = MibTableColumn
physicalPortLaneChannel3 = _PhysicalPortLaneChannel3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 49),
    _PhysicalPortLaneChannel3_Type()
)
physicalPortLaneChannel3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaneChannel3.setStatus("current")
_PhysicalPortLaneChannel4_Type = FspR7ChannelIdentifier
_PhysicalPortLaneChannel4_Object = MibTableColumn
physicalPortLaneChannel4 = _PhysicalPortLaneChannel4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 50),
    _PhysicalPortLaneChannel4_Type()
)
physicalPortLaneChannel4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaneChannel4.setStatus("current")
_PhysicalPortLaneGroup_Type = FspR7LaneGroupInventory
_PhysicalPortLaneGroup_Object = MibTableColumn
physicalPortLaneGroup = _PhysicalPortLaneGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 51),
    _PhysicalPortLaneGroup_Type()
)
physicalPortLaneGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaneGroup.setStatus("current")
_PhysicalPortLoopConfig_Type = LoopConfig
_PhysicalPortLoopConfig_Object = MibTableColumn
physicalPortLoopConfig = _PhysicalPortLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 52),
    _PhysicalPortLoopConfig_Type()
)
physicalPortLoopConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortLoopConfig.setStatus("current")
_PhysicalPortLaserDelayTimer_Type = FspR7LaserDelayTimer
_PhysicalPortLaserDelayTimer_Object = MibTableColumn
physicalPortLaserDelayTimer = _PhysicalPortLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 53),
    _PhysicalPortLaserDelayTimer_Type()
)
physicalPortLaserDelayTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaserDelayTimer.setStatus("current")


class _PhysicalPortLaserOffTimer_Type(Unsigned32):
    """Custom type physicalPortLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_PhysicalPortLaserOffTimer_Type.__name__ = "Unsigned32"
_PhysicalPortLaserOffTimer_Object = MibTableColumn
physicalPortLaserOffTimer = _PhysicalPortLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 54),
    _PhysicalPortLaserOffTimer_Type()
)
physicalPortLaserOffTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortLaserOffTimer.setUnits("ms")


class _PhysicalPortLaserOnTimer_Type(Unsigned32):
    """Custom type physicalPortLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_PhysicalPortLaserOnTimer_Type.__name__ = "Unsigned32"
_PhysicalPortLaserOnTimer_Object = MibTableColumn
physicalPortLaserOnTimer = _PhysicalPortLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 55),
    _PhysicalPortLaserOnTimer_Type()
)
physicalPortLaserOnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortLaserOnTimer.setUnits("ms")
_PhysicalPortLaserOffDelayFunction_Type = EnableState
_PhysicalPortLaserOffDelayFunction_Object = MibTableColumn
physicalPortLaserOffDelayFunction = _PhysicalPortLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 56),
    _PhysicalPortLaserOffDelayFunction_Type()
)
physicalPortLaserOffDelayFunction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLaserOffDelayFunction.setStatus("current")
_PhysicalPortMonLevel_Type = FspR7MonLevel
_PhysicalPortMonLevel_Object = MibTableColumn
physicalPortMonLevel = _PhysicalPortMonLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 57),
    _PhysicalPortMonLevel_Type()
)
physicalPortMonLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortMonLevel.setStatus("current")


class _PhysicalPortSumTransmited_Type(Unsigned32):
    """Custom type physicalPortSumTransmited based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
    )


_PhysicalPortSumTransmited_Type.__name__ = "Unsigned32"
_PhysicalPortSumTransmited_Object = MibTableColumn
physicalPortSumTransmited = _PhysicalPortSumTransmited_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 58),
    _PhysicalPortSumTransmited_Type()
)
physicalPortSumTransmited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortSumTransmited.setStatus("current")
_PhysicalPortAutoPTassignment_Type = FspR7ManualAuto
_PhysicalPortAutoPTassignment_Object = MibTableColumn
physicalPortAutoPTassignment = _PhysicalPortAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 59),
    _PhysicalPortAutoPTassignment_Type()
)
physicalPortAutoPTassignment.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortAutoPTassignment.setStatus("current")
_PhysicalPortTributarySlotMethod_Type = FspR7ManualAuto
_PhysicalPortTributarySlotMethod_Object = MibTableColumn
physicalPortTributarySlotMethod = _PhysicalPortTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 60),
    _PhysicalPortTributarySlotMethod_Type()
)
physicalPortTributarySlotMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTributarySlotMethod.setStatus("current")


class _PhysicalPortTributaryFreeSlotNo_Type(Unsigned32):
    """Custom type physicalPortTributaryFreeSlotNo based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512),
    )


_PhysicalPortTributaryFreeSlotNo_Type.__name__ = "Unsigned32"
_PhysicalPortTributaryFreeSlotNo_Object = MibTableColumn
physicalPortTributaryFreeSlotNo = _PhysicalPortTributaryFreeSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 61),
    _PhysicalPortTributaryFreeSlotNo_Type()
)
physicalPortTributaryFreeSlotNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTributaryFreeSlotNo.setStatus("current")


class _PhysicalPortTributaryAssignedSlotNo_Type(Unsigned32):
    """Custom type physicalPortTributaryAssignedSlotNo based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512),
    )


_PhysicalPortTributaryAssignedSlotNo_Type.__name__ = "Unsigned32"
_PhysicalPortTributaryAssignedSlotNo_Object = MibTableColumn
physicalPortTributaryAssignedSlotNo = _PhysicalPortTributaryAssignedSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 62),
    _PhysicalPortTributaryAssignedSlotNo_Type()
)
physicalPortTributaryAssignedSlotNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTributaryAssignedSlotNo.setStatus("current")
_PhysicalPortInitiateEqualization_Type = FspR7RlsAction
_PhysicalPortInitiateEqualization_Object = MibTableColumn
physicalPortInitiateEqualization = _PhysicalPortInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 63),
    _PhysicalPortInitiateEqualization_Type()
)
physicalPortInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortInitiateEqualization.setStatus("current")
_PhysicalPortLossAttenuation_Type = FspR7RlsAction
_PhysicalPortLossAttenuation_Object = MibTableColumn
physicalPortLossAttenuation = _PhysicalPortLossAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 64),
    _PhysicalPortLossAttenuation_Type()
)
physicalPortLossAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortLossAttenuation.setStatus("current")


class _PhysicalPortOpticalSetPoint_Type(Integer32):
    """Custom type physicalPortOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 100),
    )


_PhysicalPortOpticalSetPoint_Type.__name__ = "Integer32"
_PhysicalPortOpticalSetPoint_Object = MibTableColumn
physicalPortOpticalSetPoint = _PhysicalPortOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 65),
    _PhysicalPortOpticalSetPoint_Type()
)
physicalPortOpticalSetPoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPoint.setUnits("0.1 dBm")
_PhysicalPortDataLayerPmReset_Type = FspR7PmReset
_PhysicalPortDataLayerPmReset_Object = MibTableColumn
physicalPortDataLayerPmReset = _PhysicalPortDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 66),
    _PhysicalPortDataLayerPmReset_Type()
)
physicalPortDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortDataLayerPmReset.setStatus("current")
_PhysicalPortPrbsPmReset_Type = FspR7PmReset
_PhysicalPortPrbsPmReset_Object = MibTableColumn
physicalPortPrbsPmReset = _PhysicalPortPrbsPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 67),
    _PhysicalPortPrbsPmReset_Type()
)
physicalPortPrbsPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortPrbsPmReset.setStatus("current")
_PhysicalPortTestPrbsRcvMode_Type = FspR7RlsAction
_PhysicalPortTestPrbsRcvMode_Object = MibTableColumn
physicalPortTestPrbsRcvMode = _PhysicalPortTestPrbsRcvMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 68),
    _PhysicalPortTestPrbsRcvMode_Type()
)
physicalPortTestPrbsRcvMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortTestPrbsRcvMode.setStatus("current")
_PhysicalPortTestPrbsTrmtMode_Type = FspR7RlsAction
_PhysicalPortTestPrbsTrmtMode_Object = MibTableColumn
physicalPortTestPrbsTrmtMode = _PhysicalPortTestPrbsTrmtMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 69),
    _PhysicalPortTestPrbsTrmtMode_Type()
)
physicalPortTestPrbsTrmtMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortTestPrbsTrmtMode.setStatus("current")
_PhysicalPortSwitchCommand_Type = FspR7APSCommand
_PhysicalPortSwitchCommand_Object = MibTableColumn
physicalPortSwitchCommand = _PhysicalPortSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 70),
    _PhysicalPortSwitchCommand_Type()
)
physicalPortSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortSwitchCommand.setStatus("current")
_PhysicalPortOpuPayloadType_Type = FspR7OpuPayloadType
_PhysicalPortOpuPayloadType_Object = MibTableColumn
physicalPortOpuPayloadType = _PhysicalPortOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 71),
    _PhysicalPortOpuPayloadType_Type()
)
physicalPortOpuPayloadType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOpuPayloadType.setStatus("current")
_PhysicalPortReach_Type = FspR7OpticalInterfaceReach
_PhysicalPortReach_Object = MibTableColumn
physicalPortReach = _PhysicalPortReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 72),
    _PhysicalPortReach_Type()
)
physicalPortReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortReach.setStatus("current")
_PhysicalPortSigDegThresSonetLine_Type = FspR7BERThreshold
_PhysicalPortSigDegThresSonetLine_Object = MibTableColumn
physicalPortSigDegThresSonetLine = _PhysicalPortSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 73),
    _PhysicalPortSigDegThresSonetLine_Type()
)
physicalPortSigDegThresSonetLine.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSonetLine.setStatus("current")


class _PhysicalPortSigDegThresSdhMs_Type(Unsigned32):
    """Custom type physicalPortSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegThresSdhMs_Object = MibTableColumn
physicalPortSigDegThresSdhMs = _PhysicalPortSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 74),
    _PhysicalPortSigDegThresSdhMs_Type()
)
physicalPortSigDegThresSdhMs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSdhMs.setUnits("%")


class _PhysicalPortSigDegThresOtu_Type(Integer32):
    """Custom type physicalPortSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresOtu_Type.__name__ = "Integer32"
_PhysicalPortSigDegThresOtu_Object = MibTableColumn
physicalPortSigDegThresOtu = _PhysicalPortSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 75),
    _PhysicalPortSigDegThresOtu_Type()
)
physicalPortSigDegThresOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOtu.setUnits("%")


class _PhysicalPortSigDegThresOdu_Type(Integer32):
    """Custom type physicalPortSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresOdu_Type.__name__ = "Integer32"
_PhysicalPortSigDegThresOdu_Object = MibTableColumn
physicalPortSigDegThresOdu = _PhysicalPortSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 76),
    _PhysicalPortSigDegThresOdu_Type()
)
physicalPortSigDegThresOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOdu.setUnits("%")


class _PhysicalPortSigDegThreshold_Type(Unsigned32):
    """Custom type physicalPortSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_PhysicalPortSigDegThreshold_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegThreshold_Object = MibTableColumn
physicalPortSigDegThreshold = _PhysicalPortSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 77),
    _PhysicalPortSigDegThreshold_Type()
)
physicalPortSigDegThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThreshold.setStatus("current")


class _PhysicalPortSigDegPcslThreshold_Type(Unsigned32):
    """Custom type physicalPortSigDegPcslThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegPcslThreshold_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPcslThreshold_Object = MibTableColumn
physicalPortSigDegPcslThreshold = _PhysicalPortSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 78),
    _PhysicalPortSigDegPcslThreshold_Type()
)
physicalPortSigDegPcslThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPcslThreshold.setUnits("%")
_PhysicalPortSigDegThresSonetSection_Type = FspR7BERThreshold
_PhysicalPortSigDegThresSonetSection_Object = MibTableColumn
physicalPortSigDegThresSonetSection = _PhysicalPortSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 79),
    _PhysicalPortSigDegThresSonetSection_Type()
)
physicalPortSigDegThresSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSonetSection.setStatus("current")


class _PhysicalPortSigDegThresSdhSection_Type(Unsigned32):
    """Custom type physicalPortSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegThresSdhSection_Object = MibTableColumn
physicalPortSigDegThresSdhSection = _PhysicalPortSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 80),
    _PhysicalPortSigDegThresSdhSection_Type()
)
physicalPortSigDegThresSdhSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresSdhSection.setUnits("%")


class _PhysicalPortSigDegThresOduTcmA_Type(Integer32):
    """Custom type physicalPortSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresOduTcmA_Type.__name__ = "Integer32"
_PhysicalPortSigDegThresOduTcmA_Object = MibTableColumn
physicalPortSigDegThresOduTcmA = _PhysicalPortSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 81),
    _PhysicalPortSigDegThresOduTcmA_Type()
)
physicalPortSigDegThresOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmA.setUnits("%")


class _PhysicalPortSigDegThresOduTcmB_Type(Integer32):
    """Custom type physicalPortSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresOduTcmB_Type.__name__ = "Integer32"
_PhysicalPortSigDegThresOduTcmB_Object = MibTableColumn
physicalPortSigDegThresOduTcmB = _PhysicalPortSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 82),
    _PhysicalPortSigDegThresOduTcmB_Type()
)
physicalPortSigDegThresOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmB.setUnits("%")


class _PhysicalPortSigDegThresOduTcmC_Type(Integer32):
    """Custom type physicalPortSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_PhysicalPortSigDegThresOduTcmC_Type.__name__ = "Integer32"
_PhysicalPortSigDegThresOduTcmC_Object = MibTableColumn
physicalPortSigDegThresOduTcmC = _PhysicalPortSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 83),
    _PhysicalPortSigDegThresOduTcmC_Type()
)
physicalPortSigDegThresOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegThresOduTcmC.setUnits("%")


class _PhysicalPortSignalDegradePeriod_Type(Unsigned32):
    """Custom type physicalPortSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSignalDegradePeriod_Type.__name__ = "Unsigned32"
_PhysicalPortSignalDegradePeriod_Object = MibTableColumn
physicalPortSignalDegradePeriod = _PhysicalPortSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 84),
    _PhysicalPortSignalDegradePeriod_Type()
)
physicalPortSignalDegradePeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSignalDegradePeriod.setUnits("s")


class _PhysicalPortSigDegPeriodOdu_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodOdu_Object = MibTableColumn
physicalPortSigDegPeriodOdu = _PhysicalPortSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 85),
    _PhysicalPortSigDegPeriodOdu_Type()
)
physicalPortSigDegPeriodOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOdu.setUnits("s")


class _PhysicalPortSigDegPeriodOtu_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodOtu_Object = MibTableColumn
physicalPortSigDegPeriodOtu = _PhysicalPortSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 86),
    _PhysicalPortSigDegPeriodOtu_Type()
)
physicalPortSigDegPeriodOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOtu.setUnits("s")


class _PhysicalPortSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_PhysicalPortSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodIntegration_Object = MibTableColumn
physicalPortSigDegPeriodIntegration = _PhysicalPortSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 87),
    _PhysicalPortSigDegPeriodIntegration_Type()
)
physicalPortSigDegPeriodIntegration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodIntegration.setUnits("s")


class _PhysicalPortSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodSdhSection_Object = MibTableColumn
physicalPortSigDegPeriodSdhSection = _PhysicalPortSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 88),
    _PhysicalPortSigDegPeriodSdhSection_Type()
)
physicalPortSigDegPeriodSdhSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodSdhSection.setUnits("s")


class _PhysicalPortSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodOduTcmA_Object = MibTableColumn
physicalPortSigDegPeriodOduTcmA = _PhysicalPortSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 89),
    _PhysicalPortSigDegPeriodOduTcmA_Type()
)
physicalPortSigDegPeriodOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmA.setUnits("s")


class _PhysicalPortSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodOduTcmB_Object = MibTableColumn
physicalPortSigDegPeriodOduTcmB = _PhysicalPortSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 90),
    _PhysicalPortSigDegPeriodOduTcmB_Type()
)
physicalPortSigDegPeriodOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmB.setUnits("s")


class _PhysicalPortSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type physicalPortSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_PhysicalPortSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_PhysicalPortSigDegPeriodOduTcmC_Object = MibTableColumn
physicalPortSigDegPeriodOduTcmC = _PhysicalPortSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 91),
    _PhysicalPortSigDegPeriodOduTcmC_Type()
)
physicalPortSigDegPeriodOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortSigDegPeriodOduTcmC.setUnits("s")
_PhysicalPortOtnStuffing_Type = FspR7YesNo
_PhysicalPortOtnStuffing_Object = MibTableColumn
physicalPortOtnStuffing = _PhysicalPortOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 92),
    _PhysicalPortOtnStuffing_Type()
)
physicalPortOtnStuffing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOtnStuffing.setStatus("current")
_PhysicalPortTcmALevel_Type = OtnTcmLevel
_PhysicalPortTcmALevel_Object = MibTableColumn
physicalPortTcmALevel = _PhysicalPortTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 93),
    _PhysicalPortTcmALevel_Type()
)
physicalPortTcmALevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTcmALevel.setStatus("current")
_PhysicalPortTcmBLevel_Type = OtnTcmLevel
_PhysicalPortTcmBLevel_Object = MibTableColumn
physicalPortTcmBLevel = _PhysicalPortTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 94),
    _PhysicalPortTcmBLevel_Type()
)
physicalPortTcmBLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTcmBLevel.setStatus("current")
_PhysicalPortTcmCLevel_Type = OtnTcmLevel
_PhysicalPortTcmCLevel_Object = MibTableColumn
physicalPortTcmCLevel = _PhysicalPortTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 95),
    _PhysicalPortTcmCLevel_Type()
)
physicalPortTcmCLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTcmCLevel.setStatus("current")
_PhysicalPortTerminationLevel_Type = OhTerminationLevel
_PhysicalPortTerminationLevel_Object = MibTableColumn
physicalPortTerminationLevel = _PhysicalPortTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 96),
    _PhysicalPortTerminationLevel_Type()
)
physicalPortTerminationLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTerminationLevel.setStatus("current")
_PhysicalPortTimingSource_Type = SonetTimingSource
_PhysicalPortTimingSource_Object = MibTableColumn
physicalPortTimingSource = _PhysicalPortTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 97),
    _PhysicalPortTimingSource_Type()
)
physicalPortTimingSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimingSource.setStatus("current")
_PhysicalPortTimModeOdu_Type = TimMode
_PhysicalPortTimModeOdu_Object = MibTableColumn
physicalPortTimModeOdu = _PhysicalPortTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 98),
    _PhysicalPortTimModeOdu_Type()
)
physicalPortTimModeOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeOdu.setStatus("current")
_PhysicalPortTimModeOtu_Type = TimMode
_PhysicalPortTimModeOtu_Object = MibTableColumn
physicalPortTimModeOtu = _PhysicalPortTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 99),
    _PhysicalPortTimModeOtu_Type()
)
physicalPortTimModeOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeOtu.setStatus("current")
_PhysicalPortTimModeSonetSection_Type = TimMode
_PhysicalPortTimModeSonetSection_Object = MibTableColumn
physicalPortTimModeSonetSection = _PhysicalPortTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 100),
    _PhysicalPortTimModeSonetSection_Type()
)
physicalPortTimModeSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeSonetSection.setStatus("current")
_PhysicalPortTimModeOduTcmA_Type = TimMode
_PhysicalPortTimModeOduTcmA_Object = MibTableColumn
physicalPortTimModeOduTcmA = _PhysicalPortTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 101),
    _PhysicalPortTimModeOduTcmA_Type()
)
physicalPortTimModeOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeOduTcmA.setStatus("current")
_PhysicalPortTimModeOduTcmB_Type = TimMode
_PhysicalPortTimModeOduTcmB_Object = MibTableColumn
physicalPortTimModeOduTcmB = _PhysicalPortTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 102),
    _PhysicalPortTimModeOduTcmB_Type()
)
physicalPortTimModeOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeOduTcmB.setStatus("current")
_PhysicalPortTimModeOduTcmC_Type = TimMode
_PhysicalPortTimModeOduTcmC_Object = MibTableColumn
physicalPortTimModeOduTcmC = _PhysicalPortTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 103),
    _PhysicalPortTimModeOduTcmC_Type()
)
physicalPortTimModeOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimModeOduTcmC.setStatus("current")
_PhysicalPortTraceFormSonetSection_Type = SonetTraceForm
_PhysicalPortTraceFormSonetSection_Object = MibTableColumn
physicalPortTraceFormSonetSection = _PhysicalPortTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 104),
    _PhysicalPortTraceFormSonetSection_Type()
)
physicalPortTraceFormSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceFormSonetSection.setStatus("current")


class _PhysicalPortTraceExpectedSonetSection_Type(OctetString):
    """Custom type physicalPortTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_PhysicalPortTraceExpectedSonetSection_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedSonetSection_Object = MibTableColumn
physicalPortTraceExpectedSonetSection = _PhysicalPortTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 105),
    _PhysicalPortTraceExpectedSonetSection_Type()
)
physicalPortTraceExpectedSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedSonetSection.setStatus("current")


class _PhysicalPortTraceTransmitSonetSection_Type(OctetString):
    """Custom type physicalPortTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_PhysicalPortTraceTransmitSonetSection_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSonetSection_Object = MibTableColumn
physicalPortTraceTransmitSonetSection = _PhysicalPortTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 106),
    _PhysicalPortTraceTransmitSonetSection_Type()
)
physicalPortTraceTransmitSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSonetSection.setStatus("current")


class _PhysicalPortTraceExpectedOtu_Type(OctetString):
    """Custom type physicalPortTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceExpectedOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedOtu_Object = MibTableColumn
physicalPortTraceExpectedOtu = _PhysicalPortTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 107),
    _PhysicalPortTraceExpectedOtu_Type()
)
physicalPortTraceExpectedOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOtu.setStatus("current")


class _PhysicalPortTraceTransmitSapiOtu_Type(OctetString):
    """Custom type physicalPortTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSapiOtu_Object = MibTableColumn
physicalPortTraceTransmitSapiOtu = _PhysicalPortTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 108),
    _PhysicalPortTraceTransmitSapiOtu_Type()
)
physicalPortTraceTransmitSapiOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSapiOtu.setStatus("current")


class _PhysicalPortTraceTransmitDapiOtu_Type(OctetString):
    """Custom type physicalPortTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitDapiOtu_Object = MibTableColumn
physicalPortTraceTransmitDapiOtu = _PhysicalPortTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 109),
    _PhysicalPortTraceTransmitDapiOtu_Type()
)
physicalPortTraceTransmitDapiOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitDapiOtu.setStatus("current")


class _PhysicalPortTraceTransmitOpspOtu_Type(OctetString):
    """Custom type physicalPortTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitOpspOtu_Object = MibTableColumn
physicalPortTraceTransmitOpspOtu = _PhysicalPortTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 110),
    _PhysicalPortTraceTransmitOpspOtu_Type()
)
physicalPortTraceTransmitOpspOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitOpspOtu.setStatus("current")


class _PhysicalPortTraceExpectedOdu_Type(OctetString):
    """Custom type physicalPortTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceExpectedOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedOdu_Object = MibTableColumn
physicalPortTraceExpectedOdu = _PhysicalPortTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 111),
    _PhysicalPortTraceExpectedOdu_Type()
)
physicalPortTraceExpectedOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOdu.setStatus("current")


class _PhysicalPortTraceTransmitSapiOdu_Type(OctetString):
    """Custom type physicalPortTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSapiOdu_Object = MibTableColumn
physicalPortTraceTransmitSapiOdu = _PhysicalPortTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 112),
    _PhysicalPortTraceTransmitSapiOdu_Type()
)
physicalPortTraceTransmitSapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSapiOdu.setStatus("current")


class _PhysicalPortTraceTransmitDapiOdu_Type(OctetString):
    """Custom type physicalPortTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitDapiOdu_Object = MibTableColumn
physicalPortTraceTransmitDapiOdu = _PhysicalPortTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 113),
    _PhysicalPortTraceTransmitDapiOdu_Type()
)
physicalPortTraceTransmitDapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitDapiOdu.setStatus("current")


class _PhysicalPortTraceTransmitOpspOdu_Type(OctetString):
    """Custom type physicalPortTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitOpspOdu_Object = MibTableColumn
physicalPortTraceTransmitOpspOdu = _PhysicalPortTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 114),
    _PhysicalPortTraceTransmitOpspOdu_Type()
)
physicalPortTraceTransmitOpspOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitOpspOdu.setStatus("current")


class _PhysicalPortTraceExpectedOduTcmA_Type(OctetString):
    """Custom type physicalPortTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedOduTcmA_Object = MibTableColumn
physicalPortTraceExpectedOduTcmA = _PhysicalPortTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 115),
    _PhysicalPortTraceExpectedOduTcmA_Type()
)
physicalPortTraceExpectedOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOduTcmA.setStatus("current")


class _PhysicalPortTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type physicalPortTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSapiOduTcmA_Object = MibTableColumn
physicalPortTraceTransmitSapiOduTcmA = _PhysicalPortTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 116),
    _PhysicalPortTraceTransmitSapiOduTcmA_Type()
)
physicalPortTraceTransmitSapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSapiOduTcmA.setStatus("current")


class _PhysicalPortTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type physicalPortTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitDapiOduTcmA_Object = MibTableColumn
physicalPortTraceTransmitDapiOduTcmA = _PhysicalPortTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 117),
    _PhysicalPortTraceTransmitDapiOduTcmA_Type()
)
physicalPortTraceTransmitDapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitDapiOduTcmA.setStatus("current")


class _PhysicalPortTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type physicalPortTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitOpspOduTcmA_Object = MibTableColumn
physicalPortTraceTransmitOpspOduTcmA = _PhysicalPortTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 118),
    _PhysicalPortTraceTransmitOpspOduTcmA_Type()
)
physicalPortTraceTransmitOpspOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitOpspOduTcmA.setStatus("current")


class _PhysicalPortTraceExpectedOduTcmB_Type(OctetString):
    """Custom type physicalPortTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedOduTcmB_Object = MibTableColumn
physicalPortTraceExpectedOduTcmB = _PhysicalPortTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 119),
    _PhysicalPortTraceExpectedOduTcmB_Type()
)
physicalPortTraceExpectedOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOduTcmB.setStatus("current")


class _PhysicalPortTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type physicalPortTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSapiOduTcmB_Object = MibTableColumn
physicalPortTraceTransmitSapiOduTcmB = _PhysicalPortTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 120),
    _PhysicalPortTraceTransmitSapiOduTcmB_Type()
)
physicalPortTraceTransmitSapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSapiOduTcmB.setStatus("current")


class _PhysicalPortTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type physicalPortTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitDapiOduTcmB_Object = MibTableColumn
physicalPortTraceTransmitDapiOduTcmB = _PhysicalPortTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 121),
    _PhysicalPortTraceTransmitDapiOduTcmB_Type()
)
physicalPortTraceTransmitDapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitDapiOduTcmB.setStatus("current")


class _PhysicalPortTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type physicalPortTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitOpspOduTcmB_Object = MibTableColumn
physicalPortTraceTransmitOpspOduTcmB = _PhysicalPortTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 122),
    _PhysicalPortTraceTransmitOpspOduTcmB_Type()
)
physicalPortTraceTransmitOpspOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitOpspOduTcmB.setStatus("current")


class _PhysicalPortTraceExpectedOduTcmC_Type(OctetString):
    """Custom type physicalPortTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_PhysicalPortTraceExpectedOduTcmC_Object = MibTableColumn
physicalPortTraceExpectedOduTcmC = _PhysicalPortTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 123),
    _PhysicalPortTraceExpectedOduTcmC_Type()
)
physicalPortTraceExpectedOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOduTcmC.setStatus("current")


class _PhysicalPortTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type physicalPortTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitSapiOduTcmC_Object = MibTableColumn
physicalPortTraceTransmitSapiOduTcmC = _PhysicalPortTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 124),
    _PhysicalPortTraceTransmitSapiOduTcmC_Type()
)
physicalPortTraceTransmitSapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitSapiOduTcmC.setStatus("current")


class _PhysicalPortTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type physicalPortTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitDapiOduTcmC_Object = MibTableColumn
physicalPortTraceTransmitDapiOduTcmC = _PhysicalPortTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 125),
    _PhysicalPortTraceTransmitDapiOduTcmC_Type()
)
physicalPortTraceTransmitDapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitDapiOduTcmC.setStatus("current")


class _PhysicalPortTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type physicalPortTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_PhysicalPortTraceTransmitOpspOduTcmC_Object = MibTableColumn
physicalPortTraceTransmitOpspOduTcmC = _PhysicalPortTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 126),
    _PhysicalPortTraceTransmitOpspOduTcmC_Type()
)
physicalPortTraceTransmitOpspOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceTransmitOpspOduTcmC.setStatus("current")


class _PhysicalPortTraceRcvSapiOdu_Type(OctetString):
    """Custom type physicalPortTraceRcvSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvSapiOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvSapiOdu_Object = MibTableColumn
physicalPortTraceRcvSapiOdu = _PhysicalPortTraceRcvSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 127),
    _PhysicalPortTraceRcvSapiOdu_Type()
)
physicalPortTraceRcvSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvSapiOdu.setStatus("current")


class _PhysicalPortTraceRcvDapiOdu_Type(OctetString):
    """Custom type physicalPortTraceRcvDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvDapiOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvDapiOdu_Object = MibTableColumn
physicalPortTraceRcvDapiOdu = _PhysicalPortTraceRcvDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 128),
    _PhysicalPortTraceRcvDapiOdu_Type()
)
physicalPortTraceRcvDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvDapiOdu.setStatus("current")


class _PhysicalPortTraceRcvOpspOdu_Type(OctetString):
    """Custom type physicalPortTraceRcvOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceRcvOpspOdu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvOpspOdu_Object = MibTableColumn
physicalPortTraceRcvOpspOdu = _PhysicalPortTraceRcvOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 129),
    _PhysicalPortTraceRcvOpspOdu_Type()
)
physicalPortTraceRcvOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvOpspOdu.setStatus("current")


class _PhysicalPortTraceRcvSapiOtu_Type(OctetString):
    """Custom type physicalPortTraceRcvSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvSapiOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvSapiOtu_Object = MibTableColumn
physicalPortTraceRcvSapiOtu = _PhysicalPortTraceRcvSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 130),
    _PhysicalPortTraceRcvSapiOtu_Type()
)
physicalPortTraceRcvSapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvSapiOtu.setStatus("current")


class _PhysicalPortTraceRcvDapiOtu_Type(OctetString):
    """Custom type physicalPortTraceRcvDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvDapiOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvDapiOtu_Object = MibTableColumn
physicalPortTraceRcvDapiOtu = _PhysicalPortTraceRcvDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 131),
    _PhysicalPortTraceRcvDapiOtu_Type()
)
physicalPortTraceRcvDapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvDapiOtu.setStatus("current")


class _PhysicalPortTraceRcvOpspOtu_Type(OctetString):
    """Custom type physicalPortTraceRcvOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceRcvOpspOtu_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvOpspOtu_Object = MibTableColumn
physicalPortTraceRcvOpspOtu = _PhysicalPortTraceRcvOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 132),
    _PhysicalPortTraceRcvOpspOtu_Type()
)
physicalPortTraceRcvOpspOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvOpspOtu.setStatus("current")


class _PhysicalPortTraceRcvSapiTcma_Type(OctetString):
    """Custom type physicalPortTraceRcvSapiTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvSapiTcma_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvSapiTcma_Object = MibTableColumn
physicalPortTraceRcvSapiTcma = _PhysicalPortTraceRcvSapiTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 133),
    _PhysicalPortTraceRcvSapiTcma_Type()
)
physicalPortTraceRcvSapiTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvSapiTcma.setStatus("current")


class _PhysicalPortTraceRcvDapiTcma_Type(OctetString):
    """Custom type physicalPortTraceRcvDapiTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvDapiTcma_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvDapiTcma_Object = MibTableColumn
physicalPortTraceRcvDapiTcma = _PhysicalPortTraceRcvDapiTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 134),
    _PhysicalPortTraceRcvDapiTcma_Type()
)
physicalPortTraceRcvDapiTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvDapiTcma.setStatus("current")


class _PhysicalPortTraceRcvOpspTcma_Type(OctetString):
    """Custom type physicalPortTraceRcvOpspTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceRcvOpspTcma_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvOpspTcma_Object = MibTableColumn
physicalPortTraceRcvOpspTcma = _PhysicalPortTraceRcvOpspTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 135),
    _PhysicalPortTraceRcvOpspTcma_Type()
)
physicalPortTraceRcvOpspTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvOpspTcma.setStatus("current")


class _PhysicalPortTraceRcvSapiTcmb_Type(OctetString):
    """Custom type physicalPortTraceRcvSapiTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvSapiTcmb_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvSapiTcmb_Object = MibTableColumn
physicalPortTraceRcvSapiTcmb = _PhysicalPortTraceRcvSapiTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 136),
    _PhysicalPortTraceRcvSapiTcmb_Type()
)
physicalPortTraceRcvSapiTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvSapiTcmb.setStatus("current")


class _PhysicalPortTraceRcvDapiTcmb_Type(OctetString):
    """Custom type physicalPortTraceRcvDapiTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvDapiTcmb_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvDapiTcmb_Object = MibTableColumn
physicalPortTraceRcvDapiTcmb = _PhysicalPortTraceRcvDapiTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 137),
    _PhysicalPortTraceRcvDapiTcmb_Type()
)
physicalPortTraceRcvDapiTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvDapiTcmb.setStatus("current")


class _PhysicalPortTraceRcvOpspTcmb_Type(OctetString):
    """Custom type physicalPortTraceRcvOpspTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceRcvOpspTcmb_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvOpspTcmb_Object = MibTableColumn
physicalPortTraceRcvOpspTcmb = _PhysicalPortTraceRcvOpspTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 138),
    _PhysicalPortTraceRcvOpspTcmb_Type()
)
physicalPortTraceRcvOpspTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvOpspTcmb.setStatus("current")


class _PhysicalPortTraceRcvSapiTcmc_Type(OctetString):
    """Custom type physicalPortTraceRcvSapiTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvSapiTcmc_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvSapiTcmc_Object = MibTableColumn
physicalPortTraceRcvSapiTcmc = _PhysicalPortTraceRcvSapiTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 139),
    _PhysicalPortTraceRcvSapiTcmc_Type()
)
physicalPortTraceRcvSapiTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvSapiTcmc.setStatus("current")


class _PhysicalPortTraceRcvDapiTcmc_Type(OctetString):
    """Custom type physicalPortTraceRcvDapiTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_PhysicalPortTraceRcvDapiTcmc_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvDapiTcmc_Object = MibTableColumn
physicalPortTraceRcvDapiTcmc = _PhysicalPortTraceRcvDapiTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 140),
    _PhysicalPortTraceRcvDapiTcmc_Type()
)
physicalPortTraceRcvDapiTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvDapiTcmc.setStatus("current")


class _PhysicalPortTraceRcvOpspTcmc_Type(OctetString):
    """Custom type physicalPortTraceRcvOpspTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PhysicalPortTraceRcvOpspTcmc_Type.__name__ = "OctetString"
_PhysicalPortTraceRcvOpspTcmc_Object = MibTableColumn
physicalPortTraceRcvOpspTcmc = _PhysicalPortTraceRcvOpspTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 141),
    _PhysicalPortTraceRcvOpspTcmc_Type()
)
physicalPortTraceRcvOpspTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceRcvOpspTcmc.setStatus("current")


class _PhysicalPortTraceReceived_Type(OctetString):
    """Custom type physicalPortTraceReceived based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_PhysicalPortTraceReceived_Type.__name__ = "OctetString"
_PhysicalPortTraceReceived_Object = MibTableColumn
physicalPortTraceReceived = _PhysicalPortTraceReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 142),
    _PhysicalPortTraceReceived_Type()
)
physicalPortTraceReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTraceReceived.setStatus("current")
_PhysicalPortTurnupConfig_Type = FspR7RlsAction
_PhysicalPortTurnupConfig_Object = MibTableColumn
physicalPortTurnupConfig = _PhysicalPortTurnupConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 143),
    _PhysicalPortTurnupConfig_Type()
)
physicalPortTurnupConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortTurnupConfig.setStatus("current")
_PhysicalPortTxOffDelay_Type = FspR7EnableDisable
_PhysicalPortTxOffDelay_Object = MibTableColumn
physicalPortTxOffDelay = _PhysicalPortTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 144),
    _PhysicalPortTxOffDelay_Type()
)
physicalPortTxOffDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTxOffDelay.setStatus("current")
_PhysicalPortVoaMode_Type = FspR7VoaMode
_PhysicalPortVoaMode_Object = MibTableColumn
physicalPortVoaMode = _PhysicalPortVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 145),
    _PhysicalPortVoaMode_Type()
)
physicalPortVoaMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortVoaMode.setStatus("current")


class _PhysicalPortVoaSetpoint_Type(Unsigned32):
    """Custom type physicalPortVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_PhysicalPortVoaSetpoint_Type.__name__ = "Unsigned32"
_PhysicalPortVoaSetpoint_Object = MibTableColumn
physicalPortVoaSetpoint = _PhysicalPortVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 146),
    _PhysicalPortVoaSetpoint_Type()
)
physicalPortVoaSetpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortVoaSetpoint.setUnits("0.1 dB")


class _PhysicalPortCbsRcv_Type(Unsigned32):
    """Custom type physicalPortCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
    )


_PhysicalPortCbsRcv_Type.__name__ = "Unsigned32"
_PhysicalPortCbsRcv_Object = MibTableColumn
physicalPortCbsRcv = _PhysicalPortCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 147),
    _PhysicalPortCbsRcv_Type()
)
physicalPortCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortCbsRcv.setUnits("Byte")


class _PhysicalPortCbsTrmt_Type(Unsigned32):
    """Custom type physicalPortCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
    )


_PhysicalPortCbsTrmt_Type.__name__ = "Unsigned32"
_PhysicalPortCbsTrmt_Object = MibTableColumn
physicalPortCbsTrmt = _PhysicalPortCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 148),
    _PhysicalPortCbsTrmt_Type()
)
physicalPortCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortCbsTrmt.setUnits("kByte")
_PhysicalPortCirRcv_Type = Unsigned32
_PhysicalPortCirRcv_Object = MibTableColumn
physicalPortCirRcv = _PhysicalPortCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 149),
    _PhysicalPortCirRcv_Type()
)
physicalPortCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortCirRcv.setUnits("Mbps")
_PhysicalPortCirTrmt_Type = Unsigned32
_PhysicalPortCirTrmt_Object = MibTableColumn
physicalPortCirTrmt = _PhysicalPortCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 150),
    _PhysicalPortCirTrmt_Type()
)
physicalPortCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortCirTrmt.setUnits("Mbps")


class _PhysicalPortLagPrio_Type(Unsigned32):
    """Custom type physicalPortLagPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhysicalPortLagPrio_Type.__name__ = "Unsigned32"
_PhysicalPortLagPrio_Object = MibTableColumn
physicalPortLagPrio = _PhysicalPortLagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 151),
    _PhysicalPortLagPrio_Type()
)
physicalPortLagPrio.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLagPrio.setStatus("current")
_PhysicalPortMacAddress_Type = MacAddress
_PhysicalPortMacAddress_Object = MibTableColumn
physicalPortMacAddress = _PhysicalPortMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 152),
    _PhysicalPortMacAddress_Type()
)
physicalPortMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortMacAddress.setStatus("current")


class _PhysicalPortMaxFrameSize_Type(Unsigned32):
    """Custom type physicalPortMaxFrameSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 9600),
    )


_PhysicalPortMaxFrameSize_Type.__name__ = "Unsigned32"
_PhysicalPortMaxFrameSize_Object = MibTableColumn
physicalPortMaxFrameSize = _PhysicalPortMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 153),
    _PhysicalPortMaxFrameSize_Type()
)
physicalPortMaxFrameSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortMaxFrameSize.setStatus("current")
_PhysicalPortPayload_Type = OtnPayloadType
_PhysicalPortPayload_Object = MibTableColumn
physicalPortPayload = _PhysicalPortPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 154),
    _PhysicalPortPayload_Type()
)
physicalPortPayload.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortPayload.setStatus("current")
_PhysicalPortPortMode_Type = FspR7PortMode
_PhysicalPortPortMode_Object = MibTableColumn
physicalPortPortMode = _PhysicalPortPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 155),
    _PhysicalPortPortMode_Type()
)
physicalPortPortMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortPortMode.setStatus("current")
_PhysicalPortPortRole_Type = FspR7PortRole
_PhysicalPortPortRole_Object = MibTableColumn
physicalPortPortRole = _PhysicalPortPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 156),
    _PhysicalPortPortRole_Type()
)
physicalPortPortRole.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortPortRole.setStatus("current")


class _PhysicalPortPriority_Type(Unsigned32):
    """Custom type physicalPortPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PhysicalPortPriority_Type.__name__ = "Unsigned32"
_PhysicalPortPriority_Object = MibTableColumn
physicalPortPriority = _PhysicalPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 157),
    _PhysicalPortPriority_Type()
)
physicalPortPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortPriority.setStatus("current")


class _PhysicalPortPvid_Type(Unsigned32):
    """Custom type physicalPortPvid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PhysicalPortPvid_Type.__name__ = "Unsigned32"
_PhysicalPortPvid_Object = MibTableColumn
physicalPortPvid = _PhysicalPortPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 158),
    _PhysicalPortPvid_Type()
)
physicalPortPvid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortPvid.setStatus("current")
_PhysicalPortStagType_Type = FspR7SnmpHexString
_PhysicalPortStagType_Object = MibTableColumn
physicalPortStagType = _PhysicalPortStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 159),
    _PhysicalPortStagType_Type()
)
physicalPortStagType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortStagType.setStatus("current")
_PhysicalPortUtag_Type = FspR7UntaggedFrames
_PhysicalPortUtag_Object = MibTableColumn
physicalPortUtag = _PhysicalPortUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 160),
    _PhysicalPortUtag_Type()
)
physicalPortUtag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortUtag.setStatus("current")
_PhysicalPortVethAid_Type = SnmpAdminString
_PhysicalPortVethAid_Object = MibTableColumn
physicalPortVethAid = _PhysicalPortVethAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 161),
    _PhysicalPortVethAid_Type()
)
physicalPortVethAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortVethAid.setStatus("current")
_PhysicalPortChannelBandwith_Type = FspR7ChannelBandwidth
_PhysicalPortChannelBandwith_Object = MibTableColumn
physicalPortChannelBandwith = _PhysicalPortChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 162),
    _PhysicalPortChannelBandwith_Type()
)
physicalPortChannelBandwith.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortChannelBandwith.setStatus("current")
_PhysicalPortFacilities_Type = SnmpAdminString
_PhysicalPortFacilities_Object = MibTableColumn
physicalPortFacilities = _PhysicalPortFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 163),
    _PhysicalPortFacilities_Type()
)
physicalPortFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortFacilities.setStatus("current")
_PhysicalPortLanes_Type = FspR7OpticalLanes
_PhysicalPortLanes_Object = MibTableColumn
physicalPortLanes = _PhysicalPortLanes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 164),
    _PhysicalPortLanes_Type()
)
physicalPortLanes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLanes.setStatus("current")
_PhysicalPortProtectionRole_Type = FspR7ProtectionRole
_PhysicalPortProtectionRole_Object = MibTableColumn
physicalPortProtectionRole = _PhysicalPortProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 165),
    _PhysicalPortProtectionRole_Type()
)
physicalPortProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortProtectionRole.setStatus("current")
_PhysicalPortMonitoredBitrate_Type = Unsigned32
_PhysicalPortMonitoredBitrate_Object = MibTableColumn
physicalPortMonitoredBitrate = _PhysicalPortMonitoredBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 166),
    _PhysicalPortMonitoredBitrate_Type()
)
physicalPortMonitoredBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortMonitoredBitrate.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortMonitoredBitrate.setUnits("Mbps")
_PhysicalPortLagState_Type = FspR7LagState
_PhysicalPortLagState_Object = MibTableColumn
physicalPortLagState = _PhysicalPortLagState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 167),
    _PhysicalPortLagState_Type()
)
physicalPortLagState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLagState.setStatus("current")
_PhysicalPortLagIdFend_Type = FspR7LagIdFend
_PhysicalPortLagIdFend_Object = MibTableColumn
physicalPortLagIdFend = _PhysicalPortLagIdFend_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 168),
    _PhysicalPortLagIdFend_Type()
)
physicalPortLagIdFend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLagIdFend.setStatus("current")
_PhysicalPortLagFendState_Type = FspR7LagFendState
_PhysicalPortLagFendState_Object = MibTableColumn
physicalPortLagFendState = _PhysicalPortLagFendState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 169),
    _PhysicalPortLagFendState_Type()
)
physicalPortLagFendState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLagFendState.setStatus("current")
_PhysicalPortLagPortNo_Type = Unsigned32
_PhysicalPortLagPortNo_Object = MibTableColumn
physicalPortLagPortNo = _PhysicalPortLagPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 170),
    _PhysicalPortLagPortNo_Type()
)
physicalPortLagPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLagPortNo.setStatus("current")
_PhysicalPortLagKey_Type = Unsigned32
_PhysicalPortLagKey_Object = MibTableColumn
physicalPortLagKey = _PhysicalPortLagKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 171),
    _PhysicalPortLagKey_Type()
)
physicalPortLagKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLagKey.setStatus("current")


class _PhysicalPortValidSigTimer_Type(Unsigned32):
    """Custom type physicalPortValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_PhysicalPortValidSigTimer_Type.__name__ = "Unsigned32"
_PhysicalPortValidSigTimer_Object = MibTableColumn
physicalPortValidSigTimer = _PhysicalPortValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 172),
    _PhysicalPortValidSigTimer_Type()
)
physicalPortValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortValidSigTimer.setUnits("min")


class _PhysicalPortLaserReleaseTimer_Type(Unsigned32):
    """Custom type physicalPortLaserReleaseTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1440),
    )


_PhysicalPortLaserReleaseTimer_Type.__name__ = "Unsigned32"
_PhysicalPortLaserReleaseTimer_Object = MibTableColumn
physicalPortLaserReleaseTimer = _PhysicalPortLaserReleaseTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 173),
    _PhysicalPortLaserReleaseTimer_Type()
)
physicalPortLaserReleaseTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortLaserReleaseTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortLaserReleaseTimer.setUnits("min")
_PhysicalPortBidirectionalChannel_Type = FspR7BidirectionalChannel
_PhysicalPortBidirectionalChannel_Object = MibTableColumn
physicalPortBidirectionalChannel = _PhysicalPortBidirectionalChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 174),
    _PhysicalPortBidirectionalChannel_Type()
)
physicalPortBidirectionalChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortBidirectionalChannel.setStatus("current")
_PhysicalPortTransmitterWavelength_Type = Unsigned32
_PhysicalPortTransmitterWavelength_Object = MibTableColumn
physicalPortTransmitterWavelength = _PhysicalPortTransmitterWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 175),
    _PhysicalPortTransmitterWavelength_Type()
)
physicalPortTransmitterWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTransmitterWavelength.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortTransmitterWavelength.setUnits("0.01 nm")
_PhysicalPortTransmitterFrequency_Type = Unsigned32
_PhysicalPortTransmitterFrequency_Object = MibTableColumn
physicalPortTransmitterFrequency = _PhysicalPortTransmitterFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 176),
    _PhysicalPortTransmitterFrequency_Type()
)
physicalPortTransmitterFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTransmitterFrequency.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortTransmitterFrequency.setUnits("0.01 THz")
_PhysicalPortRedLineState_Type = FspR7YesNo
_PhysicalPortRedLineState_Object = MibTableColumn
physicalPortRedLineState = _PhysicalPortRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 177),
    _PhysicalPortRedLineState_Type()
)
physicalPortRedLineState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortRedLineState.setStatus("current")
_PhysicalPortTunnelAid_Type = SnmpAdminString
_PhysicalPortTunnelAid_Object = MibTableColumn
physicalPortTunnelAid = _PhysicalPortTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 178),
    _PhysicalPortTunnelAid_Type()
)
physicalPortTunnelAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTunnelAid.setStatus("current")
_PhysicalPortIngressTid_Type = SnmpAdminString
_PhysicalPortIngressTid_Object = MibTableColumn
physicalPortIngressTid = _PhysicalPortIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 179),
    _PhysicalPortIngressTid_Type()
)
physicalPortIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortIngressTid.setStatus("current")
_PhysicalPortIngressNodeIp_Type = IpAddress
_PhysicalPortIngressNodeIp_Object = MibTableColumn
physicalPortIngressNodeIp = _PhysicalPortIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 180),
    _PhysicalPortIngressNodeIp_Type()
)
physicalPortIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortIngressNodeIp.setStatus("current")
_PhysicalPortRateLimit_Type = FspR7DisableEnable
_PhysicalPortRateLimit_Object = MibTableColumn
physicalPortRateLimit = _PhysicalPortRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 181),
    _PhysicalPortRateLimit_Type()
)
physicalPortRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortRateLimit.setStatus("current")
_PhysicalPortPathProtection_Type = FspR7PathProt
_PhysicalPortPathProtection_Object = MibTableColumn
physicalPortPathProtection = _PhysicalPortPathProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 182),
    _PhysicalPortPathProtection_Type()
)
physicalPortPathProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortPathProtection.setStatus("current")
_PhysicalPortGropticsType_Type = FspR7GropticsType
_PhysicalPortGropticsType_Object = MibTableColumn
physicalPortGropticsType = _PhysicalPortGropticsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 183),
    _PhysicalPortGropticsType_Type()
)
physicalPortGropticsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortGropticsType.setStatus("current")


class _PhysicalPortAvlntsTxcrs_Type(Unsigned32):
    """Custom type physicalPortAvlntsTxcrs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_PhysicalPortAvlntsTxcrs_Type.__name__ = "Unsigned32"
_PhysicalPortAvlntsTxcrs_Object = MibTableColumn
physicalPortAvlntsTxcrs = _PhysicalPortAvlntsTxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 184),
    _PhysicalPortAvlntsTxcrs_Type()
)
physicalPortAvlntsTxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortAvlntsTxcrs.setStatus("current")


class _PhysicalPortAvlntsRxcrs_Type(Unsigned32):
    """Custom type physicalPortAvlntsRxcrs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_PhysicalPortAvlntsRxcrs_Type.__name__ = "Unsigned32"
_PhysicalPortAvlntsRxcrs_Object = MibTableColumn
physicalPortAvlntsRxcrs = _PhysicalPortAvlntsRxcrs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 185),
    _PhysicalPortAvlntsRxcrs_Type()
)
physicalPortAvlntsRxcrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortAvlntsRxcrs.setStatus("current")
_PhysicalPortTxOffOnTm_Type = FspR7TxOffOnTm
_PhysicalPortTxOffOnTm_Object = MibTableColumn
physicalPortTxOffOnTm = _PhysicalPortTxOffOnTm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 186),
    _PhysicalPortTxOffOnTm_Type()
)
physicalPortTxOffOnTm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTxOffOnTm.setStatus("current")


class _PhysicalPortTxOffTimer_Type(Unsigned32):
    """Custom type physicalPortTxOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_PhysicalPortTxOffTimer_Type.__name__ = "Unsigned32"
_PhysicalPortTxOffTimer_Object = MibTableColumn
physicalPortTxOffTimer = _PhysicalPortTxOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 187),
    _PhysicalPortTxOffTimer_Type()
)
physicalPortTxOffTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTxOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortTxOffTimer.setUnits("ms")


class _PhysicalPortTxOnTimer_Type(Unsigned32):
    """Custom type physicalPortTxOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_PhysicalPortTxOnTimer_Type.__name__ = "Unsigned32"
_PhysicalPortTxOnTimer_Object = MibTableColumn
physicalPortTxOnTimer = _PhysicalPortTxOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 188),
    _PhysicalPortTxOnTimer_Type()
)
physicalPortTxOnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTxOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortTxOnTimer.setUnits("ms")
_PhysicalPortTrafficDirection_Type = FspR7TrafficDirection
_PhysicalPortTrafficDirection_Object = MibTableColumn
physicalPortTrafficDirection = _PhysicalPortTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 189),
    _PhysicalPortTrafficDirection_Type()
)
physicalPortTrafficDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortTrafficDirection.setStatus("current")
_PhysicalPortChannelSpacingProvision_Type = FspR7ChannelSpacing
_PhysicalPortChannelSpacingProvision_Object = MibTableColumn
physicalPortChannelSpacingProvision = _PhysicalPortChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 190),
    _PhysicalPortChannelSpacingProvision_Type()
)
physicalPortChannelSpacingProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortChannelSpacingProvision.setStatus("current")
_PhysicalPortChannelRangeProvision_Type = FspR7ChannelRangeInventory
_PhysicalPortChannelRangeProvision_Object = MibTableColumn
physicalPortChannelRangeProvision = _PhysicalPortChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 191),
    _PhysicalPortChannelRangeProvision_Type()
)
physicalPortChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortChannelRangeProvision.setStatus("current")
_PhysicalPortMode_Type = FspR7TransmissionMode
_PhysicalPortMode_Object = MibTableColumn
physicalPortMode = _PhysicalPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 192),
    _PhysicalPortMode_Type()
)
physicalPortMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortMode.setStatus("current")
_PhysicalPortNearEndProtectionState_Type = FspR7ProtectionState
_PhysicalPortNearEndProtectionState_Object = MibTableColumn
physicalPortNearEndProtectionState = _PhysicalPortNearEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 193),
    _PhysicalPortNearEndProtectionState_Type()
)
physicalPortNearEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortNearEndProtectionState.setStatus("current")
_PhysicalPortFarEndProtectionState_Type = FspR7ProtectionState
_PhysicalPortFarEndProtectionState_Object = MibTableColumn
physicalPortFarEndProtectionState = _PhysicalPortFarEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 194),
    _PhysicalPortFarEndProtectionState_Type()
)
physicalPortFarEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortFarEndProtectionState.setStatus("current")
_PhysicalPortChannelPlan_Type = FspR7ChannelRangeInventory
_PhysicalPortChannelPlan_Object = MibTableColumn
physicalPortChannelPlan = _PhysicalPortChannelPlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 195),
    _PhysicalPortChannelPlan_Type()
)
physicalPortChannelPlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortChannelPlan.setStatus("current")
_PhysicalPortAutosrvLock_Type = FspR7AutosrvLock
_PhysicalPortAutosrvLock_Object = MibTableColumn
physicalPortAutosrvLock = _PhysicalPortAutosrvLock_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 196),
    _PhysicalPortAutosrvLock_Type()
)
physicalPortAutosrvLock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortAutosrvLock.setStatus("current")
_PhysicalPortOptimize_Type = FspR7Optimize
_PhysicalPortOptimize_Object = MibTableColumn
physicalPortOptimize = _PhysicalPortOptimize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 197),
    _PhysicalPortOptimize_Type()
)
physicalPortOptimize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOptimize.setStatus("current")
_PhysicalPortEncryptionChannel_Type = CryptoFspR7EncryptionCommunication
_PhysicalPortEncryptionChannel_Object = MibTableColumn
physicalPortEncryptionChannel = _PhysicalPortEncryptionChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 198),
    _PhysicalPortEncryptionChannel_Type()
)
physicalPortEncryptionChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortEncryptionChannel.setStatus("current")
_PhysicalPortLinkSetup_Type = FspR7DisableEnable
_PhysicalPortLinkSetup_Object = MibTableColumn
physicalPortLinkSetup = _PhysicalPortLinkSetup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 199),
    _PhysicalPortLinkSetup_Type()
)
physicalPortLinkSetup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLinkSetup.setStatus("current")
_PhysicalPortCdCompensationRange_Type = FspR7CdCompensationRange
_PhysicalPortCdCompensationRange_Object = MibTableColumn
physicalPortCdCompensationRange = _PhysicalPortCdCompensationRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 200),
    _PhysicalPortCdCompensationRange_Type()
)
physicalPortCdCompensationRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortCdCompensationRange.setStatus("current")
_PhysicalPortLLDPNeighborsRx_Type = FspR7LLDPNeighbors
_PhysicalPortLLDPNeighborsRx_Object = MibTableColumn
physicalPortLLDPNeighborsRx = _PhysicalPortLLDPNeighborsRx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 201),
    _PhysicalPortLLDPNeighborsRx_Type()
)
physicalPortLLDPNeighborsRx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLLDPNeighborsRx.setStatus("current")
_PhysicalPortLLDPNeighborsTx_Type = FspR7LLDPNeighbors
_PhysicalPortLLDPNeighborsTx_Object = MibTableColumn
physicalPortLLDPNeighborsTx = _PhysicalPortLLDPNeighborsTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 202),
    _PhysicalPortLLDPNeighborsTx_Type()
)
physicalPortLLDPNeighborsTx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortLLDPNeighborsTx.setStatus("current")
_PhysicalPortCdPostCompensationRange_Type = FspR7CdPostCompensationRange
_PhysicalPortCdPostCompensationRange_Object = MibTableColumn
physicalPortCdPostCompensationRange = _PhysicalPortCdPostCompensationRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 203),
    _PhysicalPortCdPostCompensationRange_Type()
)
physicalPortCdPostCompensationRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortCdPostCompensationRange.setStatus("current")


class _PhysicalPortOpticalSetPointLane1_Type(Integer32):
    """Custom type physicalPortOpticalSetPointLane1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 100),
    )


_PhysicalPortOpticalSetPointLane1_Type.__name__ = "Integer32"
_PhysicalPortOpticalSetPointLane1_Object = MibTableColumn
physicalPortOpticalSetPointLane1 = _PhysicalPortOpticalSetPointLane1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 204),
    _PhysicalPortOpticalSetPointLane1_Type()
)
physicalPortOpticalSetPointLane1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPointLane1.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPointLane1.setUnits("0.1 dBm")


class _PhysicalPortOpticalSetPointLane2_Type(Integer32):
    """Custom type physicalPortOpticalSetPointLane2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 100),
    )


_PhysicalPortOpticalSetPointLane2_Type.__name__ = "Integer32"
_PhysicalPortOpticalSetPointLane2_Object = MibTableColumn
physicalPortOpticalSetPointLane2 = _PhysicalPortOpticalSetPointLane2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 205),
    _PhysicalPortOpticalSetPointLane2_Type()
)
physicalPortOpticalSetPointLane2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPointLane2.setStatus("current")
if mibBuilder.loadTexts:
    physicalPortOpticalSetPointLane2.setUnits("0.1 dBm")
_PhysicalPortOduMultiplexStructure_Type = FspR7OduMultiplexStructure
_PhysicalPortOduMultiplexStructure_Object = MibTableColumn
physicalPortOduMultiplexStructure = _PhysicalPortOduMultiplexStructure_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 206),
    _PhysicalPortOduMultiplexStructure_Type()
)
physicalPortOduMultiplexStructure.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortOduMultiplexStructure.setStatus("current")
_PhysicalPortTerminationMode_Type = FspR7TerminationMode
_PhysicalPortTerminationMode_Object = MibTableColumn
physicalPortTerminationMode = _PhysicalPortTerminationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 207),
    _PhysicalPortTerminationMode_Type()
)
physicalPortTerminationMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTerminationMode.setStatus("current")
_PhysicalPortTimDetModeOtu_Type = FspR7TimDetMode
_PhysicalPortTimDetModeOtu_Object = MibTableColumn
physicalPortTimDetModeOtu = _PhysicalPortTimDetModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 208),
    _PhysicalPortTimDetModeOtu_Type()
)
physicalPortTimDetModeOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimDetModeOtu.setStatus("current")
_PhysicalPortTimActionOtu_Type = FspR7YesNo
_PhysicalPortTimActionOtu_Object = MibTableColumn
physicalPortTimActionOtu = _PhysicalPortTimActionOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 209),
    _PhysicalPortTimActionOtu_Type()
)
physicalPortTimActionOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimActionOtu.setStatus("current")
_PhysicalPortTraceExpectedDapiOtu_Type = SnmpAdminString
_PhysicalPortTraceExpectedDapiOtu_Object = MibTableColumn
physicalPortTraceExpectedDapiOtu = _PhysicalPortTraceExpectedDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 210),
    _PhysicalPortTraceExpectedDapiOtu_Type()
)
physicalPortTraceExpectedDapiOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedDapiOtu.setStatus("current")
_PhysicalPortTraceExpectedOpspOtu_Type = SnmpAdminString
_PhysicalPortTraceExpectedOpspOtu_Object = MibTableColumn
physicalPortTraceExpectedOpspOtu = _PhysicalPortTraceExpectedOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 211),
    _PhysicalPortTraceExpectedOpspOtu_Type()
)
physicalPortTraceExpectedOpspOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOpspOtu.setStatus("current")
_PhysicalPortTimDetModeOdu_Type = FspR7TimDetMode
_PhysicalPortTimDetModeOdu_Object = MibTableColumn
physicalPortTimDetModeOdu = _PhysicalPortTimDetModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 212),
    _PhysicalPortTimDetModeOdu_Type()
)
physicalPortTimDetModeOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimDetModeOdu.setStatus("current")
_PhysicalPortTimActionOdu_Type = FspR7YesNo
_PhysicalPortTimActionOdu_Object = MibTableColumn
physicalPortTimActionOdu = _PhysicalPortTimActionOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 213),
    _PhysicalPortTimActionOdu_Type()
)
physicalPortTimActionOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTimActionOdu.setStatus("current")
_PhysicalPortTraceExpectedDapiOdu_Type = SnmpAdminString
_PhysicalPortTraceExpectedDapiOdu_Object = MibTableColumn
physicalPortTraceExpectedDapiOdu = _PhysicalPortTraceExpectedDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 214),
    _PhysicalPortTraceExpectedDapiOdu_Type()
)
physicalPortTraceExpectedDapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedDapiOdu.setStatus("current")
_PhysicalPortTraceExpectedOpspOdu_Type = SnmpAdminString
_PhysicalPortTraceExpectedOpspOdu_Object = MibTableColumn
physicalPortTraceExpectedOpspOdu = _PhysicalPortTraceExpectedOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 215),
    _PhysicalPortTraceExpectedOpspOdu_Type()
)
physicalPortTraceExpectedOpspOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortTraceExpectedOpspOdu.setStatus("current")
_PhysicalPortReportAisLine_Type = FspR7YesNo
_PhysicalPortReportAisLine_Object = MibTableColumn
physicalPortReportAisLine = _PhysicalPortReportAisLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 216),
    _PhysicalPortReportAisLine_Type()
)
physicalPortReportAisLine.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortReportAisLine.setStatus("current")
_PhysicalPortReportSsfLine_Type = FspR7YesNo
_PhysicalPortReportSsfLine_Object = MibTableColumn
physicalPortReportSsfLine = _PhysicalPortReportSsfLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 217),
    _PhysicalPortReportSsfLine_Type()
)
physicalPortReportSsfLine.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortReportSsfLine.setStatus("current")
_PhysicalPortReportSsfSection_Type = FspR7YesNo
_PhysicalPortReportSsfSection_Object = MibTableColumn
physicalPortReportSsfSection = _PhysicalPortReportSsfSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 218),
    _PhysicalPortReportSsfSection_Type()
)
physicalPortReportSsfSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    physicalPortReportSsfSection.setStatus("current")
_PhysicalPortDelayMeasurementLayer_Type = FspR7DmLayer
_PhysicalPortDelayMeasurementLayer_Object = MibTableColumn
physicalPortDelayMeasurementLayer = _PhysicalPortDelayMeasurementLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 219),
    _PhysicalPortDelayMeasurementLayer_Type()
)
physicalPortDelayMeasurementLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortDelayMeasurementLayer.setStatus("current")
_PhysicalPortDelayMeasurementOperation_Type = FspR7DmsrmtOperation
_PhysicalPortDelayMeasurementOperation_Object = MibTableColumn
physicalPortDelayMeasurementOperation = _PhysicalPortDelayMeasurementOperation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 220),
    _PhysicalPortDelayMeasurementOperation_Type()
)
physicalPortDelayMeasurementOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    physicalPortDelayMeasurementOperation.setStatus("current")
_PhysicalPortDelayMeasurementStatus_Type = FspR7DmsrmtStatus
_PhysicalPortDelayMeasurementStatus_Object = MibTableColumn
physicalPortDelayMeasurementStatus = _PhysicalPortDelayMeasurementStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 221),
    _PhysicalPortDelayMeasurementStatus_Type()
)
physicalPortDelayMeasurementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortDelayMeasurementStatus.setStatus("current")
_PhysicalPortDelayMeasurementTime_Type = DateAndTime
_PhysicalPortDelayMeasurementTime_Object = MibTableColumn
physicalPortDelayMeasurementTime = _PhysicalPortDelayMeasurementTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 1, 1, 222),
    _PhysicalPortDelayMeasurementTime_Type()
)
physicalPortDelayMeasurementTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalPortDelayMeasurementTime.setStatus("current")
_VirtualPortTable_Object = MibTable
virtualPortTable = _VirtualPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2)
)
if mibBuilder.loadTexts:
    virtualPortTable.setStatus("current")
_VirtualPortEntry_Object = MibTableRow
virtualPortEntry = _VirtualPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1)
)
virtualPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    virtualPortEntry.setStatus("current")
_VirtualPortRowStatus_Type = RowStatus
_VirtualPortRowStatus_Object = MibTableColumn
virtualPortRowStatus = _VirtualPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 1),
    _VirtualPortRowStatus_Type()
)
virtualPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortRowStatus.setStatus("current")
_VirtualPortChannelBand_Type = FspR7ChannelBandwidth
_VirtualPortChannelBand_Object = MibTableColumn
virtualPortChannelBand = _VirtualPortChannelBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 2),
    _VirtualPortChannelBand_Type()
)
virtualPortChannelBand.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortChannelBand.setStatus("current")
_VirtualPortType_Type = FspR7InterfaceType
_VirtualPortType_Object = MibTableColumn
virtualPortType = _VirtualPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 3),
    _VirtualPortType_Type()
)
virtualPortType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortType.setStatus("current")
_VirtualPortAlias_Type = SnmpAdminString
_VirtualPortAlias_Object = MibTableColumn
virtualPortAlias = _VirtualPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 4),
    _VirtualPortAlias_Type()
)
virtualPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortAlias.setStatus("current")
_VirtualPortFunction_Type = FspR7InterfaceFunction
_VirtualPortFunction_Object = MibTableColumn
virtualPortFunction = _VirtualPortFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 5),
    _VirtualPortFunction_Type()
)
virtualPortFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortFunction.setStatus("current")
_VirtualPortChannelProv_Type = FspR7ChannelIdentifier
_VirtualPortChannelProv_Object = MibTableColumn
virtualPortChannelProv = _VirtualPortChannelProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 6),
    _VirtualPortChannelProv_Type()
)
virtualPortChannelProv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortChannelProv.setStatus("current")
_VirtualPortLambda_Type = Unsigned32
_VirtualPortLambda_Object = MibTableColumn
virtualPortLambda = _VirtualPortLambda_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 7),
    _VirtualPortLambda_Type()
)
virtualPortLambda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLambda.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortLambda.setUnits("0.01 nm")
_VirtualPortFrequency_Type = Unsigned32
_VirtualPortFrequency_Object = MibTableColumn
virtualPortFrequency = _VirtualPortFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 8),
    _VirtualPortFrequency_Type()
)
virtualPortFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortFrequency.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortFrequency.setUnits("0.01 THz")
_VirtualPortAdmin_Type = FspR7AdminState
_VirtualPortAdmin_Object = MibTableColumn
virtualPortAdmin = _VirtualPortAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 9),
    _VirtualPortAdmin_Type()
)
virtualPortAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortAdmin.setStatus("current")
_VirtualPortOperState_Type = FspR7OperState
_VirtualPortOperState_Object = MibTableColumn
virtualPortOperState = _VirtualPortOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 10),
    _VirtualPortOperState_Type()
)
virtualPortOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOperState.setStatus("current")
_VirtualPortConnState_Type = FspR7ConnectState
_VirtualPortConnState_Object = MibTableColumn
virtualPortConnState = _VirtualPortConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 11),
    _VirtualPortConnState_Type()
)
virtualPortConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortConnState.setStatus("current")
_VirtualPortEqlzAdmin_Type = FspR7EnableDisable
_VirtualPortEqlzAdmin_Object = MibTableColumn
virtualPortEqlzAdmin = _VirtualPortEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 12),
    _VirtualPortEqlzAdmin_Type()
)
virtualPortEqlzAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortEqlzAdmin.setStatus("current")
_VirtualPortInitEqlz_Type = FspR7RlsAction
_VirtualPortInitEqlz_Object = MibTableColumn
virtualPortInitEqlz = _VirtualPortInitEqlz_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 13),
    _VirtualPortInitEqlz_Type()
)
virtualPortInitEqlz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortInitEqlz.setStatus("current")
_VirtualPortInputPower_Type = Integer32
_VirtualPortInputPower_Object = MibTableColumn
virtualPortInputPower = _VirtualPortInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 14),
    _VirtualPortInputPower_Type()
)
virtualPortInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortInputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    virtualPortInputPower.setUnits("0.1 dBm")
_VirtualPortOutputPower_Type = Integer32
_VirtualPortOutputPower_Object = MibTableColumn
virtualPortOutputPower = _VirtualPortOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 15),
    _VirtualPortOutputPower_Type()
)
virtualPortOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOutputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    virtualPortOutputPower.setUnits("0.1 dBm")
_VirtualPortSecondaryStates_Type = FspR7EntitySecondaryStates
_VirtualPortSecondaryStates_Object = MibTableColumn
virtualPortSecondaryStates = _VirtualPortSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 16),
    _VirtualPortSecondaryStates_Type()
)
virtualPortSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortSecondaryStates.setStatus("current")
_VirtualPortRate_Type = Unsigned32
_VirtualPortRate_Object = MibTableColumn
virtualPortRate = _VirtualPortRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 17),
    _VirtualPortRate_Type()
)
virtualPortRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortRate.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortRate.setUnits("Mbps")
_VirtualPortCirRcv_Type = Unsigned32
_VirtualPortCirRcv_Object = MibTableColumn
virtualPortCirRcv = _VirtualPortCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 18),
    _VirtualPortCirRcv_Type()
)
virtualPortCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortCirRcv.setUnits("Mbps")


class _VirtualPortCbsRcv_Type(Unsigned32):
    """Custom type virtualPortCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
    )


_VirtualPortCbsRcv_Type.__name__ = "Unsigned32"
_VirtualPortCbsRcv_Object = MibTableColumn
virtualPortCbsRcv = _VirtualPortCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 19),
    _VirtualPortCbsRcv_Type()
)
virtualPortCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortCbsRcv.setUnits("Byte")
_VirtualPortCirTrmt_Type = Unsigned32
_VirtualPortCirTrmt_Object = MibTableColumn
virtualPortCirTrmt = _VirtualPortCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 20),
    _VirtualPortCirTrmt_Type()
)
virtualPortCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortCirTrmt.setUnits("Mbps")


class _VirtualPortCbsTrmt_Type(Unsigned32):
    """Custom type virtualPortCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
    )


_VirtualPortCbsTrmt_Type.__name__ = "Unsigned32"
_VirtualPortCbsTrmt_Object = MibTableColumn
virtualPortCbsTrmt = _VirtualPortCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 21),
    _VirtualPortCbsTrmt_Type()
)
virtualPortCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortCbsTrmt.setUnits("kByte")
_VirtualPortLagPorts_Type = FspR7LagPorts
_VirtualPortLagPorts_Object = MibTableColumn
virtualPortLagPorts = _VirtualPortLagPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 22),
    _VirtualPortLagPorts_Type()
)
virtualPortLagPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLagPorts.setStatus("current")
_VirtualPortLagPortType_Type = FspR7LagPortType
_VirtualPortLagPortType_Object = MibTableColumn
virtualPortLagPortType = _VirtualPortLagPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 23),
    _VirtualPortLagPortType_Type()
)
virtualPortLagPortType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortLagPortType.setStatus("current")
_VirtualPortLagStandby_Type = FspR7LagStandby
_VirtualPortLagStandby_Object = MibTableColumn
virtualPortLagStandby = _VirtualPortLagStandby_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 24),
    _VirtualPortLagStandby_Type()
)
virtualPortLagStandby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLagStandby.setStatus("current")
_VirtualPortLacpMode_Type = FspR7LacpMode
_VirtualPortLacpMode_Object = MibTableColumn
virtualPortLacpMode = _VirtualPortLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 25),
    _VirtualPortLacpMode_Type()
)
virtualPortLacpMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortLacpMode.setStatus("current")
_VirtualPortLacpTimeout_Type = FspR7LacpTimeout
_VirtualPortLacpTimeout_Object = MibTableColumn
virtualPortLacpTimeout = _VirtualPortLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 26),
    _VirtualPortLacpTimeout_Type()
)
virtualPortLacpTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortLacpTimeout.setStatus("current")


class _VirtualPortLagActivePorts_Type(Unsigned32):
    """Custom type virtualPortLagActivePorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_VirtualPortLagActivePorts_Type.__name__ = "Unsigned32"
_VirtualPortLagActivePorts_Object = MibTableColumn
virtualPortLagActivePorts = _VirtualPortLagActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 27),
    _VirtualPortLagActivePorts_Type()
)
virtualPortLagActivePorts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortLagActivePorts.setStatus("current")
_VirtualPortMacAddress_Type = MacAddress
_VirtualPortMacAddress_Object = MibTableColumn
virtualPortMacAddress = _VirtualPortMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 28),
    _VirtualPortMacAddress_Type()
)
virtualPortMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortMacAddress.setStatus("current")


class _VirtualPortMaxFrameSize_Type(Unsigned32):
    """Custom type virtualPortMaxFrameSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 9600),
    )


_VirtualPortMaxFrameSize_Type.__name__ = "Unsigned32"
_VirtualPortMaxFrameSize_Object = MibTableColumn
virtualPortMaxFrameSize = _VirtualPortMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 29),
    _VirtualPortMaxFrameSize_Type()
)
virtualPortMaxFrameSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortMaxFrameSize.setStatus("current")
_VirtualPortPortMode_Type = FspR7PortMode
_VirtualPortPortMode_Object = MibTableColumn
virtualPortPortMode = _VirtualPortPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 30),
    _VirtualPortPortMode_Type()
)
virtualPortPortMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortPortMode.setStatus("current")
_VirtualPortDataLayerPmReset_Type = FspR7PmReset
_VirtualPortDataLayerPmReset_Object = MibTableColumn
virtualPortDataLayerPmReset = _VirtualPortDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 31),
    _VirtualPortDataLayerPmReset_Type()
)
virtualPortDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortDataLayerPmReset.setStatus("current")
_VirtualPortPortRole_Type = FspR7PortRole
_VirtualPortPortRole_Object = MibTableColumn
virtualPortPortRole = _VirtualPortPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 32),
    _VirtualPortPortRole_Type()
)
virtualPortPortRole.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortPortRole.setStatus("current")


class _VirtualPortPriority_Type(Unsigned32):
    """Custom type virtualPortPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VirtualPortPriority_Type.__name__ = "Unsigned32"
_VirtualPortPriority_Object = MibTableColumn
virtualPortPriority = _VirtualPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 33),
    _VirtualPortPriority_Type()
)
virtualPortPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortPriority.setStatus("current")


class _VirtualPortPvid_Type(Unsigned32):
    """Custom type virtualPortPvid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VirtualPortPvid_Type.__name__ = "Unsigned32"
_VirtualPortPvid_Object = MibTableColumn
virtualPortPvid = _VirtualPortPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 34),
    _VirtualPortPvid_Type()
)
virtualPortPvid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortPvid.setStatus("current")
_VirtualPortRevertiveMode_Type = ApsRevertMode
_VirtualPortRevertiveMode_Object = MibTableColumn
virtualPortRevertiveMode = _VirtualPortRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 35),
    _VirtualPortRevertiveMode_Type()
)
virtualPortRevertiveMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortRevertiveMode.setStatus("current")
_VirtualPortStagType_Type = FspR7SnmpHexString
_VirtualPortStagType_Object = MibTableColumn
virtualPortStagType = _VirtualPortStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 36),
    _VirtualPortStagType_Type()
)
virtualPortStagType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortStagType.setStatus("current")
_VirtualPortUtag_Type = FspR7UntaggedFrames
_VirtualPortUtag_Object = MibTableColumn
virtualPortUtag = _VirtualPortUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 37),
    _VirtualPortUtag_Type()
)
virtualPortUtag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortUtag.setStatus("current")
_VirtualPortBundle_Type = FspR7SnmpLongString
_VirtualPortBundle_Object = MibTableColumn
virtualPortBundle = _VirtualPortBundle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 38),
    _VirtualPortBundle_Type()
)
virtualPortBundle.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortBundle.setStatus("current")
_VirtualPortSwitchCommand_Type = FspR7APSCommand
_VirtualPortSwitchCommand_Object = MibTableColumn
virtualPortSwitchCommand = _VirtualPortSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 39),
    _VirtualPortSwitchCommand_Type()
)
virtualPortSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortSwitchCommand.setStatus("current")
_VirtualPortInhibitSwitchToWork_Type = FspR7YesNo
_VirtualPortInhibitSwitchToWork_Object = MibTableColumn
virtualPortInhibitSwitchToWork = _VirtualPortInhibitSwitchToWork_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 40),
    _VirtualPortInhibitSwitchToWork_Type()
)
virtualPortInhibitSwitchToWork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortInhibitSwitchToWork.setStatus("current")
_VirtualPortInhibitSwitchToProt_Type = FspR7YesNo
_VirtualPortInhibitSwitchToProt_Object = MibTableColumn
virtualPortInhibitSwitchToProt = _VirtualPortInhibitSwitchToProt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 41),
    _VirtualPortInhibitSwitchToProt_Type()
)
virtualPortInhibitSwitchToProt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortInhibitSwitchToProt.setStatus("current")
_VirtualPortMonLevel_Type = FspR7MonLevel
_VirtualPortMonLevel_Object = MibTableColumn
virtualPortMonLevel = _VirtualPortMonLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 42),
    _VirtualPortMonLevel_Type()
)
virtualPortMonLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortMonLevel.setStatus("current")
_VirtualPortOduTribPortNo_Type = SnmpAdminString
_VirtualPortOduTribPortNo_Object = MibTableColumn
virtualPortOduTribPortNo = _VirtualPortOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 43),
    _VirtualPortOduTribPortNo_Type()
)
virtualPortOduTribPortNo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortOduTribPortNo.setStatus("current")
_VirtualPortOduTribTimeSlottNo_Type = SnmpAdminString
_VirtualPortOduTribTimeSlottNo_Object = MibTableColumn
virtualPortOduTribTimeSlottNo = _VirtualPortOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 44),
    _VirtualPortOduTribTimeSlottNo_Type()
)
virtualPortOduTribTimeSlottNo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortOduTribTimeSlottNo.setStatus("current")


class _VirtualPortSigDegThresOdu_Type(Integer32):
    """Custom type virtualPortSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VirtualPortSigDegThresOdu_Type.__name__ = "Integer32"
_VirtualPortSigDegThresOdu_Object = MibTableColumn
virtualPortSigDegThresOdu = _VirtualPortSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 45),
    _VirtualPortSigDegThresOdu_Type()
)
virtualPortSigDegThresOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOdu.setUnits("%")


class _VirtualPortSigDegPeriodOdu_Type(Unsigned32):
    """Custom type virtualPortSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_VirtualPortSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_VirtualPortSigDegPeriodOdu_Object = MibTableColumn
virtualPortSigDegPeriodOdu = _VirtualPortSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 46),
    _VirtualPortSigDegPeriodOdu_Type()
)
virtualPortSigDegPeriodOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOdu.setUnits("s")


class _VirtualPortTraceExpectedOdu_Type(OctetString):
    """Custom type virtualPortTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceExpectedOdu_Type.__name__ = "OctetString"
_VirtualPortTraceExpectedOdu_Object = MibTableColumn
virtualPortTraceExpectedOdu = _VirtualPortTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 47),
    _VirtualPortTraceExpectedOdu_Type()
)
virtualPortTraceExpectedOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedOdu.setStatus("current")


class _VirtualPortTraceTransmitSapiOdu_Type(OctetString):
    """Custom type virtualPortTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitSapiOdu_Object = MibTableColumn
virtualPortTraceTransmitSapiOdu = _VirtualPortTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 48),
    _VirtualPortTraceTransmitSapiOdu_Type()
)
virtualPortTraceTransmitSapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitSapiOdu.setStatus("current")


class _VirtualPortTraceTransmitDapiOdu_Type(OctetString):
    """Custom type virtualPortTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitDapiOdu_Object = MibTableColumn
virtualPortTraceTransmitDapiOdu = _VirtualPortTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 49),
    _VirtualPortTraceTransmitDapiOdu_Type()
)
virtualPortTraceTransmitDapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitDapiOdu.setStatus("current")


class _VirtualPortTraceTransmitOpspOdu_Type(OctetString):
    """Custom type virtualPortTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitOpspOdu_Object = MibTableColumn
virtualPortTraceTransmitOpspOdu = _VirtualPortTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 50),
    _VirtualPortTraceTransmitOpspOdu_Type()
)
virtualPortTraceTransmitOpspOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitOpspOdu.setStatus("current")
_VirtualPortTimModeOdu_Type = TimMode
_VirtualPortTimModeOdu_Object = MibTableColumn
virtualPortTimModeOdu = _VirtualPortTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 51),
    _VirtualPortTimModeOdu_Type()
)
virtualPortTimModeOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimModeOdu.setStatus("current")


class _VirtualPortSigDegThresOduTcmA_Type(Integer32):
    """Custom type virtualPortSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VirtualPortSigDegThresOduTcmA_Type.__name__ = "Integer32"
_VirtualPortSigDegThresOduTcmA_Object = MibTableColumn
virtualPortSigDegThresOduTcmA = _VirtualPortSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 52),
    _VirtualPortSigDegThresOduTcmA_Type()
)
virtualPortSigDegThresOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmA.setUnits("%")


class _VirtualPortSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type virtualPortSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_VirtualPortSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_VirtualPortSigDegPeriodOduTcmA_Object = MibTableColumn
virtualPortSigDegPeriodOduTcmA = _VirtualPortSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 53),
    _VirtualPortSigDegPeriodOduTcmA_Type()
)
virtualPortSigDegPeriodOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmA.setUnits("s")


class _VirtualPortSigDegThresOduTcmB_Type(Integer32):
    """Custom type virtualPortSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VirtualPortSigDegThresOduTcmB_Type.__name__ = "Integer32"
_VirtualPortSigDegThresOduTcmB_Object = MibTableColumn
virtualPortSigDegThresOduTcmB = _VirtualPortSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 54),
    _VirtualPortSigDegThresOduTcmB_Type()
)
virtualPortSigDegThresOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmB.setUnits("%")


class _VirtualPortSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type virtualPortSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_VirtualPortSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_VirtualPortSigDegPeriodOduTcmB_Object = MibTableColumn
virtualPortSigDegPeriodOduTcmB = _VirtualPortSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 55),
    _VirtualPortSigDegPeriodOduTcmB_Type()
)
virtualPortSigDegPeriodOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmB.setUnits("s")


class _VirtualPortSigDegThresOduTcmC_Type(Integer32):
    """Custom type virtualPortSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VirtualPortSigDegThresOduTcmC_Type.__name__ = "Integer32"
_VirtualPortSigDegThresOduTcmC_Object = MibTableColumn
virtualPortSigDegThresOduTcmC = _VirtualPortSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 56),
    _VirtualPortSigDegThresOduTcmC_Type()
)
virtualPortSigDegThresOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegThresOduTcmC.setUnits("%")


class _VirtualPortSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type virtualPortSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_VirtualPortSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_VirtualPortSigDegPeriodOduTcmC_Object = MibTableColumn
virtualPortSigDegPeriodOduTcmC = _VirtualPortSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 57),
    _VirtualPortSigDegPeriodOduTcmC_Type()
)
virtualPortSigDegPeriodOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortSigDegPeriodOduTcmC.setUnits("s")
_VirtualPortTcmALevel_Type = OtnTcmLevel
_VirtualPortTcmALevel_Object = MibTableColumn
virtualPortTcmALevel = _VirtualPortTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 58),
    _VirtualPortTcmALevel_Type()
)
virtualPortTcmALevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTcmALevel.setStatus("current")
_VirtualPortTcmBLevel_Type = OtnTcmLevel
_VirtualPortTcmBLevel_Object = MibTableColumn
virtualPortTcmBLevel = _VirtualPortTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 59),
    _VirtualPortTcmBLevel_Type()
)
virtualPortTcmBLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTcmBLevel.setStatus("current")
_VirtualPortTcmCLevel_Type = OtnTcmLevel
_VirtualPortTcmCLevel_Object = MibTableColumn
virtualPortTcmCLevel = _VirtualPortTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 60),
    _VirtualPortTcmCLevel_Type()
)
virtualPortTcmCLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTcmCLevel.setStatus("current")


class _VirtualPortTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type virtualPortTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitSapiOduTcmA_Object = MibTableColumn
virtualPortTraceTransmitSapiOduTcmA = _VirtualPortTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 61),
    _VirtualPortTraceTransmitSapiOduTcmA_Type()
)
virtualPortTraceTransmitSapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitSapiOduTcmA.setStatus("current")


class _VirtualPortTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type virtualPortTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitDapiOduTcmA_Object = MibTableColumn
virtualPortTraceTransmitDapiOduTcmA = _VirtualPortTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 62),
    _VirtualPortTraceTransmitDapiOduTcmA_Type()
)
virtualPortTraceTransmitDapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitDapiOduTcmA.setStatus("current")


class _VirtualPortTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type virtualPortTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitOpspOduTcmA_Object = MibTableColumn
virtualPortTraceTransmitOpspOduTcmA = _VirtualPortTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 63),
    _VirtualPortTraceTransmitOpspOduTcmA_Type()
)
virtualPortTraceTransmitOpspOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitOpspOduTcmA.setStatus("current")


class _VirtualPortTraceExpectedOduTcmA_Type(OctetString):
    """Custom type virtualPortTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_VirtualPortTraceExpectedOduTcmA_Object = MibTableColumn
virtualPortTraceExpectedOduTcmA = _VirtualPortTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 64),
    _VirtualPortTraceExpectedOduTcmA_Type()
)
virtualPortTraceExpectedOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedOduTcmA.setStatus("current")
_VirtualPortTimModeOduTcmA_Type = TimMode
_VirtualPortTimModeOduTcmA_Object = MibTableColumn
virtualPortTimModeOduTcmA = _VirtualPortTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 65),
    _VirtualPortTimModeOduTcmA_Type()
)
virtualPortTimModeOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimModeOduTcmA.setStatus("current")


class _VirtualPortTraceExpectedOduTcmB_Type(OctetString):
    """Custom type virtualPortTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_VirtualPortTraceExpectedOduTcmB_Object = MibTableColumn
virtualPortTraceExpectedOduTcmB = _VirtualPortTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 66),
    _VirtualPortTraceExpectedOduTcmB_Type()
)
virtualPortTraceExpectedOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedOduTcmB.setStatus("current")


class _VirtualPortTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type virtualPortTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitSapiOduTcmB_Object = MibTableColumn
virtualPortTraceTransmitSapiOduTcmB = _VirtualPortTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 67),
    _VirtualPortTraceTransmitSapiOduTcmB_Type()
)
virtualPortTraceTransmitSapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitSapiOduTcmB.setStatus("current")


class _VirtualPortTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type virtualPortTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitDapiOduTcmB_Object = MibTableColumn
virtualPortTraceTransmitDapiOduTcmB = _VirtualPortTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 68),
    _VirtualPortTraceTransmitDapiOduTcmB_Type()
)
virtualPortTraceTransmitDapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitDapiOduTcmB.setStatus("current")


class _VirtualPortTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type virtualPortTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitOpspOduTcmB_Object = MibTableColumn
virtualPortTraceTransmitOpspOduTcmB = _VirtualPortTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 69),
    _VirtualPortTraceTransmitOpspOduTcmB_Type()
)
virtualPortTraceTransmitOpspOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitOpspOduTcmB.setStatus("current")
_VirtualPortTimModeOduTcmB_Type = TimMode
_VirtualPortTimModeOduTcmB_Object = MibTableColumn
virtualPortTimModeOduTcmB = _VirtualPortTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 70),
    _VirtualPortTimModeOduTcmB_Type()
)
virtualPortTimModeOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimModeOduTcmB.setStatus("current")


class _VirtualPortTraceExpectedOduTcmC_Type(OctetString):
    """Custom type virtualPortTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_VirtualPortTraceExpectedOduTcmC_Object = MibTableColumn
virtualPortTraceExpectedOduTcmC = _VirtualPortTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 71),
    _VirtualPortTraceExpectedOduTcmC_Type()
)
virtualPortTraceExpectedOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedOduTcmC.setStatus("current")


class _VirtualPortTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type virtualPortTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitSapiOduTcmC_Object = MibTableColumn
virtualPortTraceTransmitSapiOduTcmC = _VirtualPortTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 72),
    _VirtualPortTraceTransmitSapiOduTcmC_Type()
)
virtualPortTraceTransmitSapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitSapiOduTcmC.setStatus("current")


class _VirtualPortTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type virtualPortTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitDapiOduTcmC_Object = MibTableColumn
virtualPortTraceTransmitDapiOduTcmC = _VirtualPortTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 73),
    _VirtualPortTraceTransmitDapiOduTcmC_Type()
)
virtualPortTraceTransmitDapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitDapiOduTcmC.setStatus("current")


class _VirtualPortTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type virtualPortTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_VirtualPortTraceTransmitOpspOduTcmC_Object = MibTableColumn
virtualPortTraceTransmitOpspOduTcmC = _VirtualPortTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 74),
    _VirtualPortTraceTransmitOpspOduTcmC_Type()
)
virtualPortTraceTransmitOpspOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceTransmitOpspOduTcmC.setStatus("current")
_VirtualPortTimModeOduTcmC_Type = TimMode
_VirtualPortTimModeOduTcmC_Object = MibTableColumn
virtualPortTimModeOduTcmC = _VirtualPortTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 75),
    _VirtualPortTimModeOduTcmC_Type()
)
virtualPortTimModeOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimModeOduTcmC.setStatus("current")


class _VirtualPortTraceRcvSapiOdu_Type(OctetString):
    """Custom type virtualPortTraceRcvSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvSapiOdu_Type.__name__ = "OctetString"
_VirtualPortTraceRcvSapiOdu_Object = MibTableColumn
virtualPortTraceRcvSapiOdu = _VirtualPortTraceRcvSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 76),
    _VirtualPortTraceRcvSapiOdu_Type()
)
virtualPortTraceRcvSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvSapiOdu.setStatus("current")


class _VirtualPortTraceRcvDapiOdu_Type(OctetString):
    """Custom type virtualPortTraceRcvDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvDapiOdu_Type.__name__ = "OctetString"
_VirtualPortTraceRcvDapiOdu_Object = MibTableColumn
virtualPortTraceRcvDapiOdu = _VirtualPortTraceRcvDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 77),
    _VirtualPortTraceRcvDapiOdu_Type()
)
virtualPortTraceRcvDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvDapiOdu.setStatus("current")


class _VirtualPortTraceRcvOpspOdu_Type(OctetString):
    """Custom type virtualPortTraceRcvOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceRcvOpspOdu_Type.__name__ = "OctetString"
_VirtualPortTraceRcvOpspOdu_Object = MibTableColumn
virtualPortTraceRcvOpspOdu = _VirtualPortTraceRcvOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 78),
    _VirtualPortTraceRcvOpspOdu_Type()
)
virtualPortTraceRcvOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvOpspOdu.setStatus("current")


class _VirtualPortTraceRcvSapiTcma_Type(OctetString):
    """Custom type virtualPortTraceRcvSapiTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvSapiTcma_Type.__name__ = "OctetString"
_VirtualPortTraceRcvSapiTcma_Object = MibTableColumn
virtualPortTraceRcvSapiTcma = _VirtualPortTraceRcvSapiTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 79),
    _VirtualPortTraceRcvSapiTcma_Type()
)
virtualPortTraceRcvSapiTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvSapiTcma.setStatus("current")


class _VirtualPortTraceRcvDapiTcma_Type(OctetString):
    """Custom type virtualPortTraceRcvDapiTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvDapiTcma_Type.__name__ = "OctetString"
_VirtualPortTraceRcvDapiTcma_Object = MibTableColumn
virtualPortTraceRcvDapiTcma = _VirtualPortTraceRcvDapiTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 80),
    _VirtualPortTraceRcvDapiTcma_Type()
)
virtualPortTraceRcvDapiTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvDapiTcma.setStatus("current")


class _VirtualPortTraceRcvOpspTcma_Type(OctetString):
    """Custom type virtualPortTraceRcvOpspTcma based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceRcvOpspTcma_Type.__name__ = "OctetString"
_VirtualPortTraceRcvOpspTcma_Object = MibTableColumn
virtualPortTraceRcvOpspTcma = _VirtualPortTraceRcvOpspTcma_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 81),
    _VirtualPortTraceRcvOpspTcma_Type()
)
virtualPortTraceRcvOpspTcma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvOpspTcma.setStatus("current")


class _VirtualPortTraceRcvSapiTcmb_Type(OctetString):
    """Custom type virtualPortTraceRcvSapiTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvSapiTcmb_Type.__name__ = "OctetString"
_VirtualPortTraceRcvSapiTcmb_Object = MibTableColumn
virtualPortTraceRcvSapiTcmb = _VirtualPortTraceRcvSapiTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 82),
    _VirtualPortTraceRcvSapiTcmb_Type()
)
virtualPortTraceRcvSapiTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvSapiTcmb.setStatus("current")


class _VirtualPortTraceRcvDapiTcmb_Type(OctetString):
    """Custom type virtualPortTraceRcvDapiTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvDapiTcmb_Type.__name__ = "OctetString"
_VirtualPortTraceRcvDapiTcmb_Object = MibTableColumn
virtualPortTraceRcvDapiTcmb = _VirtualPortTraceRcvDapiTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 83),
    _VirtualPortTraceRcvDapiTcmb_Type()
)
virtualPortTraceRcvDapiTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvDapiTcmb.setStatus("current")


class _VirtualPortTraceRcvOpspTcmb_Type(OctetString):
    """Custom type virtualPortTraceRcvOpspTcmb based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceRcvOpspTcmb_Type.__name__ = "OctetString"
_VirtualPortTraceRcvOpspTcmb_Object = MibTableColumn
virtualPortTraceRcvOpspTcmb = _VirtualPortTraceRcvOpspTcmb_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 84),
    _VirtualPortTraceRcvOpspTcmb_Type()
)
virtualPortTraceRcvOpspTcmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvOpspTcmb.setStatus("current")


class _VirtualPortTraceRcvSapiTcmc_Type(OctetString):
    """Custom type virtualPortTraceRcvSapiTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvSapiTcmc_Type.__name__ = "OctetString"
_VirtualPortTraceRcvSapiTcmc_Object = MibTableColumn
virtualPortTraceRcvSapiTcmc = _VirtualPortTraceRcvSapiTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 85),
    _VirtualPortTraceRcvSapiTcmc_Type()
)
virtualPortTraceRcvSapiTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvSapiTcmc.setStatus("current")


class _VirtualPortTraceRcvDapiTcmc_Type(OctetString):
    """Custom type virtualPortTraceRcvDapiTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_VirtualPortTraceRcvDapiTcmc_Type.__name__ = "OctetString"
_VirtualPortTraceRcvDapiTcmc_Object = MibTableColumn
virtualPortTraceRcvDapiTcmc = _VirtualPortTraceRcvDapiTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 86),
    _VirtualPortTraceRcvDapiTcmc_Type()
)
virtualPortTraceRcvDapiTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvDapiTcmc.setStatus("current")


class _VirtualPortTraceRcvOpspTcmc_Type(OctetString):
    """Custom type virtualPortTraceRcvOpspTcmc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VirtualPortTraceRcvOpspTcmc_Type.__name__ = "OctetString"
_VirtualPortTraceRcvOpspTcmc_Object = MibTableColumn
virtualPortTraceRcvOpspTcmc = _VirtualPortTraceRcvOpspTcmc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 87),
    _VirtualPortTraceRcvOpspTcmc_Type()
)
virtualPortTraceRcvOpspTcmc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTraceRcvOpspTcmc.setStatus("current")
_VirtualPortTerminationLevel_Type = OhTerminationLevel
_VirtualPortTerminationLevel_Object = MibTableColumn
virtualPortTerminationLevel = _VirtualPortTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 88),
    _VirtualPortTerminationLevel_Type()
)
virtualPortTerminationLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTerminationLevel.setStatus("current")
_VirtualPortChannelSpacing_Type = FspR7ChannelSpacing
_VirtualPortChannelSpacing_Object = MibTableColumn
virtualPortChannelSpacing = _VirtualPortChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 89),
    _VirtualPortChannelSpacing_Type()
)
virtualPortChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortChannelSpacing.setStatus("current")
_VirtualPortCir_Type = Unsigned32
_VirtualPortCir_Object = MibTableColumn
virtualPortCir = _VirtualPortCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 90),
    _VirtualPortCir_Type()
)
virtualPortCir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortCir.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortCir.setUnits("Mbps")
_VirtualPortLoopConfig_Type = LoopConfig
_VirtualPortLoopConfig_Object = MibTableColumn
virtualPortLoopConfig = _VirtualPortLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 91),
    _VirtualPortLoopConfig_Type()
)
virtualPortLoopConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortLoopConfig.setStatus("current")
_VirtualPortOwnerAid_Type = SnmpAdminString
_VirtualPortOwnerAid_Object = MibTableColumn
virtualPortOwnerAid = _VirtualPortOwnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 92),
    _VirtualPortOwnerAid_Type()
)
virtualPortOwnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOwnerAid.setStatus("current")
_VirtualPortPayload_Type = OtnPayloadType
_VirtualPortPayload_Object = MibTableColumn
virtualPortPayload = _VirtualPortPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 93),
    _VirtualPortPayload_Type()
)
virtualPortPayload.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortPayload.setStatus("current")
_VirtualPortVcType_Type = VirtualContainerType
_VirtualPortVcType_Object = MibTableColumn
virtualPortVcType = _VirtualPortVcType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 94),
    _VirtualPortVcType_Type()
)
virtualPortVcType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortVcType.setStatus("current")
_VirtualPortOdtuType_Type = FspR7OdtuType
_VirtualPortOdtuType_Object = MibTableColumn
virtualPortOdtuType = _VirtualPortOdtuType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 95),
    _VirtualPortOdtuType_Type()
)
virtualPortOdtuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOdtuType.setStatus("current")
_VirtualPortProtectionRole_Type = FspR7ProtectionRole
_VirtualPortProtectionRole_Object = MibTableColumn
virtualPortProtectionRole = _VirtualPortProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 96),
    _VirtualPortProtectionRole_Type()
)
virtualPortProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortProtectionRole.setStatus("current")


class _VirtualPortLagSysPrio_Type(Unsigned32):
    """Custom type virtualPortLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VirtualPortLagSysPrio_Type.__name__ = "Unsigned32"
_VirtualPortLagSysPrio_Object = MibTableColumn
virtualPortLagSysPrio = _VirtualPortLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 97),
    _VirtualPortLagSysPrio_Type()
)
virtualPortLagSysPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLagSysPrio.setStatus("current")
_VirtualPortOpuPayloadType_Type = FspR7OpuPayloadType
_VirtualPortOpuPayloadType_Object = MibTableColumn
virtualPortOpuPayloadType = _VirtualPortOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 98),
    _VirtualPortOpuPayloadType_Type()
)
virtualPortOpuPayloadType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortOpuPayloadType.setStatus("current")
_VirtualPortLagSysMac_Type = MacAddress
_VirtualPortLagSysMac_Object = MibTableColumn
virtualPortLagSysMac = _VirtualPortLagSysMac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 99),
    _VirtualPortLagSysMac_Type()
)
virtualPortLagSysMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLagSysMac.setStatus("current")
_VirtualPortLagSysIdFend_Type = FspR7LagSysIdFend
_VirtualPortLagSysIdFend_Object = MibTableColumn
virtualPortLagSysIdFend = _VirtualPortLagSysIdFend_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 100),
    _VirtualPortLagSysIdFend_Type()
)
virtualPortLagSysIdFend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortLagSysIdFend.setStatus("current")


class _VirtualPortValidSigTimer_Type(Unsigned32):
    """Custom type virtualPortValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_VirtualPortValidSigTimer_Type.__name__ = "Unsigned32"
_VirtualPortValidSigTimer_Object = MibTableColumn
virtualPortValidSigTimer = _VirtualPortValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 101),
    _VirtualPortValidSigTimer_Type()
)
virtualPortValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortValidSigTimer.setUnits("min")
_VirtualPortOtnStuffing_Type = FspR7YesNo
_VirtualPortOtnStuffing_Object = MibTableColumn
virtualPortOtnStuffing = _VirtualPortOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 102),
    _VirtualPortOtnStuffing_Type()
)
virtualPortOtnStuffing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortOtnStuffing.setStatus("current")
_VirtualPortRedLineState_Type = FspR7YesNo
_VirtualPortRedLineState_Object = MibTableColumn
virtualPortRedLineState = _VirtualPortRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 103),
    _VirtualPortRedLineState_Type()
)
virtualPortRedLineState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortRedLineState.setStatus("current")
_VirtualPortTunnelAid_Type = SnmpAdminString
_VirtualPortTunnelAid_Object = MibTableColumn
virtualPortTunnelAid = _VirtualPortTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 104),
    _VirtualPortTunnelAid_Type()
)
virtualPortTunnelAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTunnelAid.setStatus("current")
_VirtualPortIngressTid_Type = SnmpAdminString
_VirtualPortIngressTid_Object = MibTableColumn
virtualPortIngressTid = _VirtualPortIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 105),
    _VirtualPortIngressTid_Type()
)
virtualPortIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortIngressTid.setStatus("current")
_VirtualPortIngressNodeIp_Type = IpAddress
_VirtualPortIngressNodeIp_Object = MibTableColumn
virtualPortIngressNodeIp = _VirtualPortIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 106),
    _VirtualPortIngressNodeIp_Type()
)
virtualPortIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortIngressNodeIp.setStatus("current")
_VirtualPortEncapsulationMethod_Type = FspR7EncapsulationMethod
_VirtualPortEncapsulationMethod_Object = MibTableColumn
virtualPortEncapsulationMethod = _VirtualPortEncapsulationMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 107),
    _VirtualPortEncapsulationMethod_Type()
)
virtualPortEncapsulationMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortEncapsulationMethod.setStatus("current")
_VirtualPortPathProtection_Type = FspR7PathProt
_VirtualPortPathProtection_Object = MibTableColumn
virtualPortPathProtection = _VirtualPortPathProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 108),
    _VirtualPortPathProtection_Type()
)
virtualPortPathProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortPathProtection.setStatus("current")


class _VirtualPortTimeslot_Type(Unsigned32):
    """Custom type virtualPortTimeslot based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_VirtualPortTimeslot_Type.__name__ = "Unsigned32"
_VirtualPortTimeslot_Object = MibTableColumn
virtualPortTimeslot = _VirtualPortTimeslot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 109),
    _VirtualPortTimeslot_Type()
)
virtualPortTimeslot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTimeslot.setStatus("current")


class _VirtualPortOffsetHigh_Type(Integer32):
    """Custom type virtualPortOffsetHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 210),
    )


_VirtualPortOffsetHigh_Type.__name__ = "Integer32"
_VirtualPortOffsetHigh_Object = MibTableColumn
virtualPortOffsetHigh = _VirtualPortOffsetHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 110),
    _VirtualPortOffsetHigh_Type()
)
virtualPortOffsetHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOffsetHigh.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortOffsetHigh.setUnits("0.1 dBm")


class _VirtualPortOffsetLow_Type(Integer32):
    """Custom type virtualPortOffsetLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 210),
    )


_VirtualPortOffsetLow_Type.__name__ = "Integer32"
_VirtualPortOffsetLow_Object = MibTableColumn
virtualPortOffsetLow = _VirtualPortOffsetLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 111),
    _VirtualPortOffsetLow_Type()
)
virtualPortOffsetLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortOffsetLow.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortOffsetLow.setUnits("0.1 dBm")
_VirtualPortTrafficDirection_Type = FspR7TrafficDirection
_VirtualPortTrafficDirection_Object = MibTableColumn
virtualPortTrafficDirection = _VirtualPortTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 112),
    _VirtualPortTrafficDirection_Type()
)
virtualPortTrafficDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTrafficDirection.setStatus("current")


class _VirtualPortChannelId_Type(Unsigned32):
    """Custom type virtualPortChannelId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_VirtualPortChannelId_Type.__name__ = "Unsigned32"
_VirtualPortChannelId_Object = MibTableColumn
virtualPortChannelId = _VirtualPortChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 113),
    _VirtualPortChannelId_Type()
)
virtualPortChannelId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortChannelId.setStatus("current")
_VirtualPortNearEndProtectionState_Type = FspR7ProtectionState
_VirtualPortNearEndProtectionState_Object = MibTableColumn
virtualPortNearEndProtectionState = _VirtualPortNearEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 114),
    _VirtualPortNearEndProtectionState_Type()
)
virtualPortNearEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortNearEndProtectionState.setStatus("current")
_VirtualPortFarEndProtectionState_Type = FspR7ProtectionState
_VirtualPortFarEndProtectionState_Object = MibTableColumn
virtualPortFarEndProtectionState = _VirtualPortFarEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 115),
    _VirtualPortFarEndProtectionState_Type()
)
virtualPortFarEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortFarEndProtectionState.setStatus("current")
_VirtualPortAutosrvLock_Type = FspR7AutosrvLock
_VirtualPortAutosrvLock_Object = MibTableColumn
virtualPortAutosrvLock = _VirtualPortAutosrvLock_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 116),
    _VirtualPortAutosrvLock_Type()
)
virtualPortAutosrvLock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortAutosrvLock.setStatus("current")


class _VirtualPortOptSetDeviation_Type(Integer32):
    """Custom type virtualPortOptSetDeviation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-100, 100),
    )


_VirtualPortOptSetDeviation_Type.__name__ = "Integer32"
_VirtualPortOptSetDeviation_Object = MibTableColumn
virtualPortOptSetDeviation = _VirtualPortOptSetDeviation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 117),
    _VirtualPortOptSetDeviation_Type()
)
virtualPortOptSetDeviation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortOptSetDeviation.setStatus("current")
if mibBuilder.loadTexts:
    virtualPortOptSetDeviation.setUnits("0.1 dB")
_VirtualPortPrbsPmReset_Type = FspR7PmReset
_VirtualPortPrbsPmReset_Object = MibTableColumn
virtualPortPrbsPmReset = _VirtualPortPrbsPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 118),
    _VirtualPortPrbsPmReset_Type()
)
virtualPortPrbsPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortPrbsPmReset.setStatus("current")
_VirtualPortTestPrbsRcvMode_Type = FspR7RlsAction
_VirtualPortTestPrbsRcvMode_Object = MibTableColumn
virtualPortTestPrbsRcvMode = _VirtualPortTestPrbsRcvMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 119),
    _VirtualPortTestPrbsRcvMode_Type()
)
virtualPortTestPrbsRcvMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortTestPrbsRcvMode.setStatus("current")
_VirtualPortTestPrbsTrmtMode_Type = FspR7RlsAction
_VirtualPortTestPrbsTrmtMode_Object = MibTableColumn
virtualPortTestPrbsTrmtMode = _VirtualPortTestPrbsTrmtMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 120),
    _VirtualPortTestPrbsTrmtMode_Type()
)
virtualPortTestPrbsTrmtMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualPortTestPrbsTrmtMode.setStatus("current")
_VirtualPortTerminationMode_Type = FspR7TerminationMode
_VirtualPortTerminationMode_Object = MibTableColumn
virtualPortTerminationMode = _VirtualPortTerminationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 121),
    _VirtualPortTerminationMode_Type()
)
virtualPortTerminationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualPortTerminationMode.setStatus("current")
_VirtualPortTimDetModeOdu_Type = FspR7TimDetMode
_VirtualPortTimDetModeOdu_Object = MibTableColumn
virtualPortTimDetModeOdu = _VirtualPortTimDetModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 122),
    _VirtualPortTimDetModeOdu_Type()
)
virtualPortTimDetModeOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimDetModeOdu.setStatus("current")
_VirtualPortTimActionOdu_Type = FspR7YesNo
_VirtualPortTimActionOdu_Object = MibTableColumn
virtualPortTimActionOdu = _VirtualPortTimActionOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 123),
    _VirtualPortTimActionOdu_Type()
)
virtualPortTimActionOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTimActionOdu.setStatus("current")
_VirtualPortTraceExpectedDapiOdu_Type = SnmpAdminString
_VirtualPortTraceExpectedDapiOdu_Object = MibTableColumn
virtualPortTraceExpectedDapiOdu = _VirtualPortTraceExpectedDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 124),
    _VirtualPortTraceExpectedDapiOdu_Type()
)
virtualPortTraceExpectedDapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedDapiOdu.setStatus("current")
_VirtualPortTraceExpectedOpspOdu_Type = SnmpAdminString
_VirtualPortTraceExpectedOpspOdu_Object = MibTableColumn
virtualPortTraceExpectedOpspOdu = _VirtualPortTraceExpectedOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 2, 1, 125),
    _VirtualPortTraceExpectedOpspOdu_Type()
)
virtualPortTraceExpectedOpspOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    virtualPortTraceExpectedOpspOdu.setStatus("current")
_LldpTable_Object = MibTable
lldpTable = _LldpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3)
)
if mibBuilder.loadTexts:
    lldpTable.setStatus("current")
_LldpEntry_Object = MibTableRow
lldpEntry = _LldpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1)
)
lldpEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    lldpEntry.setStatus("current")
_LldpRowStatus_Type = RowStatus
_LldpRowStatus_Object = MibTableColumn
lldpRowStatus = _LldpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 1),
    _LldpRowStatus_Type()
)
lldpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lldpRowStatus.setStatus("current")
_LldpType_Type = FspR7InterfaceType
_LldpType_Object = MibTableColumn
lldpType = _LldpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 2),
    _LldpType_Type()
)
lldpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lldpType.setStatus("current")
_LldpAlias_Type = SnmpAdminString
_LldpAlias_Object = MibTableColumn
lldpAlias = _LldpAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 3),
    _LldpAlias_Type()
)
lldpAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lldpAlias.setStatus("current")
_LldpDataLayerPmReset_Type = FspR7PmReset
_LldpDataLayerPmReset_Object = MibTableColumn
lldpDataLayerPmReset = _LldpDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 4),
    _LldpDataLayerPmReset_Type()
)
lldpDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lldpDataLayerPmReset.setStatus("current")
_LldpAdmin_Type = FspR7AdminState
_LldpAdmin_Object = MibTableColumn
lldpAdmin = _LldpAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 5),
    _LldpAdmin_Type()
)
lldpAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lldpAdmin.setStatus("current")
_LldpOperState_Type = FspR7OperState
_LldpOperState_Object = MibTableColumn
lldpOperState = _LldpOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 6),
    _LldpOperState_Type()
)
lldpOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpOperState.setStatus("current")
_LldpLLDPScope_Type = FspR7LLDPScope
_LldpLLDPScope_Object = MibTableColumn
lldpLLDPScope = _LldpLLDPScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 7),
    _LldpLLDPScope_Type()
)
lldpLLDPScope.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lldpLLDPScope.setStatus("current")
_LldpLLDPLocation_Type = FspR7LLDPLocation
_LldpLLDPLocation_Object = MibTableColumn
lldpLLDPLocation = _LldpLLDPLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 8),
    _LldpLLDPLocation_Type()
)
lldpLLDPLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpLLDPLocation.setStatus("current")
_LldpAgeOutPeriod_Type = Unsigned32
_LldpAgeOutPeriod_Object = MibTableColumn
lldpAgeOutPeriod = _LldpAgeOutPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 9),
    _LldpAgeOutPeriod_Type()
)
lldpAgeOutPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpAgeOutPeriod.setStatus("current")
if mibBuilder.loadTexts:
    lldpAgeOutPeriod.setUnits("S")
_LldpTimeTillAgeOut_Type = Unsigned32
_LldpTimeTillAgeOut_Object = MibTableColumn
lldpTimeTillAgeOut = _LldpTimeTillAgeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 10),
    _LldpTimeTillAgeOut_Type()
)
lldpTimeTillAgeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpTimeTillAgeOut.setStatus("current")
if mibBuilder.loadTexts:
    lldpTimeTillAgeOut.setUnits("S")
_LldpLLDPChassisType_Type = FspR7LLDPChassisType
_LldpLLDPChassisType_Object = MibTableColumn
lldpLLDPChassisType = _LldpLLDPChassisType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 11),
    _LldpLLDPChassisType_Type()
)
lldpLLDPChassisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpLLDPChassisType.setStatus("current")
_LldpChassisID_Type = SnmpAdminString
_LldpChassisID_Object = MibTableColumn
lldpChassisID = _LldpChassisID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 12),
    _LldpChassisID_Type()
)
lldpChassisID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpChassisID.setStatus("current")
_LldpPortType_Type = FspR7LLDPPortType
_LldpPortType_Object = MibTableColumn
lldpPortType = _LldpPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 13),
    _LldpPortType_Type()
)
lldpPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpPortType.setStatus("current")
_LldpPortID_Type = SnmpAdminString
_LldpPortID_Object = MibTableColumn
lldpPortID = _LldpPortID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 14),
    _LldpPortID_Type()
)
lldpPortID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpPortID.setStatus("current")
_LldpPortDescription_Type = SnmpAdminString
_LldpPortDescription_Object = MibTableColumn
lldpPortDescription = _LldpPortDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 15),
    _LldpPortDescription_Type()
)
lldpPortDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpPortDescription.setStatus("current")
_LldpSystemName_Type = SnmpAdminString
_LldpSystemName_Object = MibTableColumn
lldpSystemName = _LldpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 16),
    _LldpSystemName_Type()
)
lldpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpSystemName.setStatus("current")
_LldpSystemDescription_Type = SnmpAdminString
_LldpSystemDescription_Object = MibTableColumn
lldpSystemDescription = _LldpSystemDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 17),
    _LldpSystemDescription_Type()
)
lldpSystemDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpSystemDescription.setStatus("current")
_LldpSystemCapabilityList_Type = SnmpAdminString
_LldpSystemCapabilityList_Object = MibTableColumn
lldpSystemCapabilityList = _LldpSystemCapabilityList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 18),
    _LldpSystemCapabilityList_Type()
)
lldpSystemCapabilityList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpSystemCapabilityList.setStatus("current")
_LldpSystemOperationList_Type = SnmpAdminString
_LldpSystemOperationList_Object = MibTableColumn
lldpSystemOperationList = _LldpSystemOperationList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 19),
    _LldpSystemOperationList_Type()
)
lldpSystemOperationList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpSystemOperationList.setStatus("current")
_LldpManagementType_Type = FspR7LLDPManagementType
_LldpManagementType_Object = MibTableColumn
lldpManagementType = _LldpManagementType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 20),
    _LldpManagementType_Type()
)
lldpManagementType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpManagementType.setStatus("current")
_LldpManagementAddress_Type = SnmpAdminString
_LldpManagementAddress_Object = MibTableColumn
lldpManagementAddress = _LldpManagementAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 21),
    _LldpManagementAddress_Type()
)
lldpManagementAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpManagementAddress.setStatus("current")
_LldpManagementInterface_Type = FspR7LLDPManagementInterface
_LldpManagementInterface_Object = MibTableColumn
lldpManagementInterface = _LldpManagementInterface_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 22),
    _LldpManagementInterface_Type()
)
lldpManagementInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpManagementInterface.setStatus("current")
_LldpManagementReference_Type = Unsigned32
_LldpManagementReference_Object = MibTableColumn
lldpManagementReference = _LldpManagementReference_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 23),
    _LldpManagementReference_Type()
)
lldpManagementReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpManagementReference.setStatus("current")
_LldpManagementObjectID_Type = SnmpAdminString
_LldpManagementObjectID_Object = MibTableColumn
lldpManagementObjectID = _LldpManagementObjectID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 3, 1, 24),
    _LldpManagementObjectID_Type()
)
lldpManagementObjectID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lldpManagementObjectID.setStatus("current")
_EndOfFacilityMgmt_Type = Integer32
_EndOfFacilityMgmt_Object = MibScalar
endOfFacilityMgmt = _EndOfFacilityMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 4, 10000),
    _EndOfFacilityMgmt_Type()
)
endOfFacilityMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFacilityMgmt.setStatus("current")
_DcnMgmt_ObjectIdentity = ObjectIdentity
dcnMgmt = _DcnMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5)
)
_LinkTable_Object = MibTable
linkTable = _LinkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1)
)
if mibBuilder.loadTexts:
    linkTable.setStatus("current")
_LinkEntry_Object = MibTableRow
linkEntry = _LinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1)
)
linkEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    linkEntry.setStatus("current")
_LinkRowStatus_Type = RowStatus
_LinkRowStatus_Object = MibTableColumn
linkRowStatus = _LinkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 1),
    _LinkRowStatus_Type()
)
linkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkRowStatus.setStatus("current")
_LinkType_Type = FspR7InterfaceType
_LinkType_Object = MibTableColumn
linkType = _LinkType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 2),
    _LinkType_Type()
)
linkType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkType.setStatus("current")
_LinkAdmin_Type = FspR7AdminState
_LinkAdmin_Object = MibTableColumn
linkAdmin = _LinkAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 3),
    _LinkAdmin_Type()
)
linkAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkAdmin.setStatus("current")
_LinkAlias_Type = SnmpAdminString
_LinkAlias_Object = MibTableColumn
linkAlias = _LinkAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 4),
    _LinkAlias_Type()
)
linkAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkAlias.setStatus("current")
_LinkAuthString_Type = SnmpAdminString
_LinkAuthString_Object = MibTableColumn
linkAuthString = _LinkAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 5),
    _LinkAuthString_Type()
)
linkAuthString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkAuthString.setStatus("current")
_LinkConnector_Type = FspR7ConnectorType
_LinkConnector_Object = MibTableColumn
linkConnector = _LinkConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 6),
    _LinkConnector_Type()
)
linkConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkConnector.setStatus("current")
_LinkProxyArp_Type = FspR7NoYes
_LinkProxyArp_Object = MibTableColumn
linkProxyArp = _LinkProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 7),
    _LinkProxyArp_Type()
)
linkProxyArp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkProxyArp.setStatus("current")
_LinkOspf_Type = FspR7OspfMode
_LinkOspf_Object = MibTableColumn
linkOspf = _LinkOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 8),
    _LinkOspf_Type()
)
linkOspf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkOspf.setStatus("current")
_LinkBaud_Type = FspR7Baund
_LinkBaud_Object = MibTableColumn
linkBaud = _LinkBaud_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 9),
    _LinkBaud_Type()
)
linkBaud.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkBaud.setStatus("current")
_LinkAuthType_Type = FspR7CpAuthType
_LinkAuthType_Object = MibTableColumn
linkAuthType = _LinkAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 10),
    _LinkAuthType_Type()
)
linkAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkAuthType.setStatus("current")
_LinkIpType_Type = FspR7IpType
_LinkIpType_Object = MibTableColumn
linkIpType = _LinkIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 11),
    _LinkIpType_Type()
)
linkIpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkIpType.setStatus("current")


class _LinkMetric_Type(Unsigned32):
    """Custom type linkMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LinkMetric_Type.__name__ = "Unsigned32"
_LinkMetric_Object = MibTableColumn
linkMetric = _LinkMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 12),
    _LinkMetric_Type()
)
linkMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkMetric.setStatus("current")
_LinkAreaAid_Type = SnmpAdminString
_LinkAreaAid_Object = MibTableColumn
linkAreaAid = _LinkAreaAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 13),
    _LinkAreaAid_Type()
)
linkAreaAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkAreaAid.setStatus("current")
_LinkEccAid_Type = SnmpAdminString
_LinkEccAid_Object = MibTableColumn
linkEccAid = _LinkEccAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 14),
    _LinkEccAid_Type()
)
linkEccAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkEccAid.setStatus("current")
_LinkNearEndIp_Type = IpAddress
_LinkNearEndIp_Object = MibTableColumn
linkNearEndIp = _LinkNearEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 15),
    _LinkNearEndIp_Type()
)
linkNearEndIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkNearEndIp.setStatus("current")
_LinkFarEndIp_Type = IpAddress
_LinkFarEndIp_Object = MibTableColumn
linkFarEndIp = _LinkFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 16),
    _LinkFarEndIp_Type()
)
linkFarEndIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkFarEndIp.setStatus("current")


class _LinkBitrate_Type(Unsigned32):
    """Custom type linkBitrate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 13702),
    )


_LinkBitrate_Type.__name__ = "Unsigned32"
_LinkBitrate_Object = MibTableColumn
linkBitrate = _LinkBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 17),
    _LinkBitrate_Type()
)
linkBitrate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkBitrate.setStatus("current")
if mibBuilder.loadTexts:
    linkBitrate.setUnits("kbps")
_LinkParityBit_Type = FspR7ParityBit
_LinkParityBit_Object = MibTableColumn
linkParityBit = _LinkParityBit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 18),
    _LinkParityBit_Type()
)
linkParityBit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkParityBit.setStatus("current")
_LinkSecondaryStates_Type = FspR7EntitySecondaryStates
_LinkSecondaryStates_Object = MibTableColumn
linkSecondaryStates = _LinkSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 19),
    _LinkSecondaryStates_Type()
)
linkSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkSecondaryStates.setStatus("current")
_LinkOperState_Type = FspR7OperState
_LinkOperState_Object = MibTableColumn
linkOperState = _LinkOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 20),
    _LinkOperState_Type()
)
linkOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkOperState.setStatus("current")
_LinkNendIpMonitor_Type = IpAddress
_LinkNendIpMonitor_Object = MibTableColumn
linkNendIpMonitor = _LinkNendIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 21),
    _LinkNendIpMonitor_Type()
)
linkNendIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkNendIpMonitor.setStatus("current")


class _LinkValidSigTimer_Type(Unsigned32):
    """Custom type linkValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_LinkValidSigTimer_Type.__name__ = "Unsigned32"
_LinkValidSigTimer_Object = MibTableColumn
linkValidSigTimer = _LinkValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 22),
    _LinkValidSigTimer_Type()
)
linkValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    linkValidSigTimer.setUnits("min")
_LinkIPv6Type_Type = FspR7IPv6Type
_LinkIPv6Type_Object = MibTableColumn
linkIPv6Type = _LinkIPv6Type_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 23),
    _LinkIPv6Type_Type()
)
linkIPv6Type.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkIPv6Type.setStatus("current")
_LinkNendIPv6_Type = SnmpAdminString
_LinkNendIPv6_Object = MibTableColumn
linkNendIPv6 = _LinkNendIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 24),
    _LinkNendIPv6_Type()
)
linkNendIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkNendIPv6.setStatus("current")
_LinkFendIPv6_Type = SnmpAdminString
_LinkFendIPv6_Object = MibTableColumn
linkFendIPv6 = _LinkFendIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 25),
    _LinkFendIPv6_Type()
)
linkFendIPv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkFendIPv6.setStatus("current")


class _LinkMtu_Type(Unsigned32):
    """Custom type linkMtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1280, 1500),
    )


_LinkMtu_Type.__name__ = "Unsigned32"
_LinkMtu_Object = MibTableColumn
linkMtu = _LinkMtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 26),
    _LinkMtu_Type()
)
linkMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkMtu.setStatus("current")
if mibBuilder.loadTexts:
    linkMtu.setUnits("Byte")


class _LinkHelloInterval_Type(Unsigned32):
    """Custom type linkHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LinkHelloInterval_Type.__name__ = "Unsigned32"
_LinkHelloInterval_Object = MibTableColumn
linkHelloInterval = _LinkHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 27),
    _LinkHelloInterval_Type()
)
linkHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    linkHelloInterval.setUnits("s")


class _LinkDeadInterval_Type(Unsigned32):
    """Custom type linkDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LinkDeadInterval_Type.__name__ = "Unsigned32"
_LinkDeadInterval_Object = MibTableColumn
linkDeadInterval = _LinkDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 28),
    _LinkDeadInterval_Type()
)
linkDeadInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    linkDeadInterval.setUnits("s")


class _LinkRetransmitInterval_Type(Unsigned32):
    """Custom type linkRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_LinkRetransmitInterval_Type.__name__ = "Unsigned32"
_LinkRetransmitInterval_Object = MibTableColumn
linkRetransmitInterval = _LinkRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 29),
    _LinkRetransmitInterval_Type()
)
linkRetransmitInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    linkRetransmitInterval.setUnits("s")
_LinkNendLogicalIpAddr_Type = IpAddress
_LinkNendLogicalIpAddr_Object = MibTableColumn
linkNendLogicalIpAddr = _LinkNendLogicalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 30),
    _LinkNendLogicalIpAddr_Type()
)
linkNendLogicalIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkNendLogicalIpAddr.setStatus("current")
_LinkFendLogicalIpAddr_Type = IpAddress
_LinkFendLogicalIpAddr_Object = MibTableColumn
linkFendLogicalIpAddr = _LinkFendLogicalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 1, 1, 31),
    _LinkFendLogicalIpAddr_Type()
)
linkFendLogicalIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    linkFendLogicalIpAddr.setStatus("current")
_EndOfLinkTable_Type = Integer32
_EndOfLinkTable_Object = MibScalar
endOfLinkTable = _EndOfLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 2),
    _EndOfLinkTable_Type()
)
endOfLinkTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfLinkTable.setStatus("current")
_ScTable_Object = MibTable
scTable = _ScTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3)
)
if mibBuilder.loadTexts:
    scTable.setStatus("current")
_ScEntry_Object = MibTableRow
scEntry = _ScEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1)
)
scEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    scEntry.setStatus("current")
_ScRowStatus_Type = RowStatus
_ScRowStatus_Object = MibTableColumn
scRowStatus = _ScRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 1),
    _ScRowStatus_Type()
)
scRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scRowStatus.setStatus("current")
_ScType_Type = FspR7InterfaceType
_ScType_Object = MibTableColumn
scType = _ScType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 2),
    _ScType_Type()
)
scType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scType.setStatus("current")
_ScAdmin_Type = FspR7AdminState
_ScAdmin_Object = MibTableColumn
scAdmin = _ScAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 3),
    _ScAdmin_Type()
)
scAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAdmin.setStatus("current")
_ScAlias_Type = SnmpAdminString
_ScAlias_Object = MibTableColumn
scAlias = _ScAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 4),
    _ScAlias_Type()
)
scAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAlias.setStatus("current")
_ScAuthString_Type = SnmpAdminString
_ScAuthString_Object = MibTableColumn
scAuthString = _ScAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 5),
    _ScAuthString_Type()
)
scAuthString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAuthString.setStatus("current")
_ScConnector_Type = FspR7ConnectorType
_ScConnector_Object = MibTableColumn
scConnector = _ScConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 6),
    _ScConnector_Type()
)
scConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scConnector.setStatus("current")
_ScOspf_Type = FspR7OspfMode
_ScOspf_Object = MibTableColumn
scOspf = _ScOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 7),
    _ScOspf_Type()
)
scOspf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scOspf.setStatus("current")
_ScAuthType_Type = FspR7CpAuthType
_ScAuthType_Object = MibTableColumn
scAuthType = _ScAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 8),
    _ScAuthType_Type()
)
scAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAuthType.setStatus("current")
_ScIpType_Type = FspR7IpType
_ScIpType_Object = MibTableColumn
scIpType = _ScIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 9),
    _ScIpType_Type()
)
scIpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIpType.setStatus("current")


class _ScMetric_Type(Unsigned32):
    """Custom type scMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ScMetric_Type.__name__ = "Unsigned32"
_ScMetric_Object = MibTableColumn
scMetric = _ScMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 10),
    _ScMetric_Type()
)
scMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scMetric.setStatus("current")
_ScAreaAid_Type = SnmpAdminString
_ScAreaAid_Object = MibTableColumn
scAreaAid = _ScAreaAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 11),
    _ScAreaAid_Type()
)
scAreaAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAreaAid.setStatus("current")
_ScAlsMode_Type = FspR7AlsMode
_ScAlsMode_Object = MibTableColumn
scAlsMode = _ScAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 12),
    _ScAlsMode_Type()
)
scAlsMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAlsMode.setStatus("current")
_ScSigDegThresReceiver_Type = Unsigned32
_ScSigDegThresReceiver_Object = MibTableColumn
scSigDegThresReceiver = _ScSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 13),
    _ScSigDegThresReceiver_Type()
)
scSigDegThresReceiver.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    scSigDegThresReceiver.setUnits("0.1 dB")
_ScAutonegotiation_Type = EnableState
_ScAutonegotiation_Object = MibTableColumn
scAutonegotiation = _ScAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 14),
    _ScAutonegotiation_Type()
)
scAutonegotiation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAutonegotiation.setStatus("current")
_ScPhysIfBaseType_Type = FspR7InterfaceType
_ScPhysIfBaseType_Object = MibTableColumn
scPhysIfBaseType = _ScPhysIfBaseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 15),
    _ScPhysIfBaseType_Type()
)
scPhysIfBaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scPhysIfBaseType.setStatus("current")
_ScBitrate_Type = FspR7Bitrate
_ScBitrate_Object = MibTableColumn
scBitrate = _ScBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 16),
    _ScBitrate_Type()
)
scBitrate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scBitrate.setStatus("current")
_ScConnectionType_Type = FspR7TypeConnection
_ScConnectionType_Object = MibTableColumn
scConnectionType = _ScConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 17),
    _ScConnectionType_Type()
)
scConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scConnectionType.setStatus("current")
_ScChannel_Type = FspR7ChannelIdentifier
_ScChannel_Object = MibTableColumn
scChannel = _ScChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 18),
    _ScChannel_Type()
)
scChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scChannel.setStatus("current")
_ScDuplex_Type = EthDuplexMode
_ScDuplex_Object = MibTableColumn
scDuplex = _ScDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 19),
    _ScDuplex_Type()
)
scDuplex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDuplex.setStatus("current")
_ScFarEndTid_Type = SnmpAdminString
_ScFarEndTid_Object = MibTableColumn
scFarEndTid = _ScFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 20),
    _ScFarEndTid_Type()
)
scFarEndTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFarEndTid.setStatus("current")
_ScFiberType_Type = FspR7OpticalFiberType
_ScFiberType_Object = MibTableColumn
scFiberType = _ScFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 21),
    _ScFiberType_Type()
)
scFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFiberType.setStatus("current")
_ScTrmtFrequency_Type = Unsigned32
_ScTrmtFrequency_Object = MibTableColumn
scTrmtFrequency = _ScTrmtFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 22),
    _ScTrmtFrequency_Type()
)
scTrmtFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scTrmtFrequency.setStatus("current")
if mibBuilder.loadTexts:
    scTrmtFrequency.setUnits("0.01 THz")


class _ScAttGradientTh_Type(Unsigned32):
    """Custom type scAttGradientTh based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 990),
    )


_ScAttGradientTh_Type.__name__ = "Unsigned32"
_ScAttGradientTh_Object = MibTableColumn
scAttGradientTh = _ScAttGradientTh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 23),
    _ScAttGradientTh_Type()
)
scAttGradientTh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scAttGradientTh.setStatus("current")
if mibBuilder.loadTexts:
    scAttGradientTh.setUnits("0.1 dB/min")
_ScIpAddr_Type = IpAddress
_ScIpAddr_Object = MibTableColumn
scIpAddr = _ScIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 24),
    _ScIpAddr_Type()
)
scIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIpAddr.setStatus("current")
_ScTrmtWavelength_Type = Unsigned32
_ScTrmtWavelength_Object = MibTableColumn
scTrmtWavelength = _ScTrmtWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 25),
    _ScTrmtWavelength_Type()
)
scTrmtWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scTrmtWavelength.setStatus("current")
if mibBuilder.loadTexts:
    scTrmtWavelength.setUnits("0.01 nm")
_ScLanAid_Type = SnmpAdminString
_ScLanAid_Object = MibTableColumn
scLanAid = _ScLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 26),
    _ScLanAid_Type()
)
scLanAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scLanAid.setStatus("current")
_ScIpMask_Type = IpAddress
_ScIpMask_Object = MibTableColumn
scIpMask = _ScIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 27),
    _ScIpMask_Type()
)
scIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIpMask.setStatus("current")
_ScDataLayerPmReset_Type = FspR7PmReset
_ScDataLayerPmReset_Object = MibTableColumn
scDataLayerPmReset = _ScDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 28),
    _ScDataLayerPmReset_Type()
)
scDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    scDataLayerPmReset.setStatus("current")


class _ScPriority_Type(Unsigned32):
    """Custom type scPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ScPriority_Type.__name__ = "Unsigned32"
_ScPriority_Object = MibTableColumn
scPriority = _ScPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 29),
    _ScPriority_Type()
)
scPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scPriority.setStatus("current")
_ScReach_Type = FspR7OpticalInterfaceReach
_ScReach_Object = MibTableColumn
scReach = _ScReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 30),
    _ScReach_Type()
)
scReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scReach.setStatus("current")
_ScSecondaryStates_Type = FspR7EntitySecondaryStates
_ScSecondaryStates_Object = MibTableColumn
scSecondaryStates = _ScSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 31),
    _ScSecondaryStates_Type()
)
scSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scSecondaryStates.setStatus("current")
_ScOperState_Type = FspR7OperState
_ScOperState_Object = MibTableColumn
scOperState = _ScOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 32),
    _ScOperState_Type()
)
scOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scOperState.setStatus("current")
_ScIpAddrMonitor_Type = IpAddress
_ScIpAddrMonitor_Object = MibTableColumn
scIpAddrMonitor = _ScIpAddrMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 33),
    _ScIpAddrMonitor_Type()
)
scIpAddrMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scIpAddrMonitor.setStatus("current")
_ScMonitoredDuplexMode_Type = EthDuplexMode
_ScMonitoredDuplexMode_Object = MibTableColumn
scMonitoredDuplexMode = _ScMonitoredDuplexMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 34),
    _ScMonitoredDuplexMode_Type()
)
scMonitoredDuplexMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scMonitoredDuplexMode.setStatus("current")
_ScMonitoredBitrate_Type = Unsigned32
_ScMonitoredBitrate_Object = MibTableColumn
scMonitoredBitrate = _ScMonitoredBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 35),
    _ScMonitoredBitrate_Type()
)
scMonitoredBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scMonitoredBitrate.setStatus("current")
if mibBuilder.loadTexts:
    scMonitoredBitrate.setUnits("Mbps")
_ScIpMaskMonitor_Type = IpAddress
_ScIpMaskMonitor_Object = MibTableColumn
scIpMaskMonitor = _ScIpMaskMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 36),
    _ScIpMaskMonitor_Type()
)
scIpMaskMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scIpMaskMonitor.setStatus("current")
_ScFarEndPort_Type = SnmpAdminString
_ScFarEndPort_Object = MibTableColumn
scFarEndPort = _ScFarEndPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 37),
    _ScFarEndPort_Type()
)
scFarEndPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFarEndPort.setStatus("current")
_ScFendTransportTermPoint_Type = SnmpAdminString
_ScFendTransportTermPoint_Object = MibTableColumn
scFendTransportTermPoint = _ScFendTransportTermPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 38),
    _ScFendTransportTermPoint_Type()
)
scFendTransportTermPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFendTransportTermPoint.setStatus("current")
_ScFarEndIp_Type = IpAddress
_ScFarEndIp_Object = MibTableColumn
scFarEndIp = _ScFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 39),
    _ScFarEndIp_Type()
)
scFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFarEndIp.setStatus("current")
_ScFarEndSigDegThres_Type = Unsigned32
_ScFarEndSigDegThres_Object = MibTableColumn
scFarEndSigDegThres = _ScFarEndSigDegThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 40),
    _ScFarEndSigDegThres_Type()
)
scFarEndSigDegThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scFarEndSigDegThres.setStatus("current")
if mibBuilder.loadTexts:
    scFarEndSigDegThres.setUnits("0.1 dB")


class _ScValidSigTimer_Type(Unsigned32):
    """Custom type scValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_ScValidSigTimer_Type.__name__ = "Unsigned32"
_ScValidSigTimer_Object = MibTableColumn
scValidSigTimer = _ScValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 41),
    _ScValidSigTimer_Type()
)
scValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    scValidSigTimer.setUnits("min")
_ScIPv6_Type = SnmpAdminString
_ScIPv6_Object = MibTableColumn
scIPv6 = _ScIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 42),
    _ScIPv6_Type()
)
scIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIPv6.setStatus("current")


class _ScIPv6PrefixLen_Type(Unsigned32):
    """Custom type scIPv6PrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_ScIPv6PrefixLen_Type.__name__ = "Unsigned32"
_ScIPv6PrefixLen_Object = MibTableColumn
scIPv6PrefixLen = _ScIPv6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 43),
    _ScIPv6PrefixLen_Type()
)
scIPv6PrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIPv6PrefixLen.setStatus("current")
_ScIPv6LinkLocal_Type = SnmpAdminString
_ScIPv6LinkLocal_Object = MibTableColumn
scIPv6LinkLocal = _ScIPv6LinkLocal_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 44),
    _ScIPv6LinkLocal_Type()
)
scIPv6LinkLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scIPv6LinkLocal.setStatus("current")
_ScIpMode_Type = FspR7IpMode
_ScIpMode_Object = MibTableColumn
scIpMode = _ScIpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 45),
    _ScIpMode_Type()
)
scIpMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scIpMode.setStatus("current")
_ScGatewayProxyArp_Type = FspR7EnableDisable
_ScGatewayProxyArp_Object = MibTableColumn
scGatewayProxyArp = _ScGatewayProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 46),
    _ScGatewayProxyArp_Type()
)
scGatewayProxyArp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scGatewayProxyArp.setStatus("current")


class _ScMtu_Type(Unsigned32):
    """Custom type scMtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1280, 1500),
    )


_ScMtu_Type.__name__ = "Unsigned32"
_ScMtu_Object = MibTableColumn
scMtu = _ScMtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 47),
    _ScMtu_Type()
)
scMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scMtu.setStatus("current")
if mibBuilder.loadTexts:
    scMtu.setUnits("Byte")


class _ScHelloInterval_Type(Unsigned32):
    """Custom type scHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ScHelloInterval_Type.__name__ = "Unsigned32"
_ScHelloInterval_Object = MibTableColumn
scHelloInterval = _ScHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 48),
    _ScHelloInterval_Type()
)
scHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    scHelloInterval.setUnits("s")


class _ScDeadInterval_Type(Unsigned32):
    """Custom type scDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ScDeadInterval_Type.__name__ = "Unsigned32"
_ScDeadInterval_Object = MibTableColumn
scDeadInterval = _ScDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 49),
    _ScDeadInterval_Type()
)
scDeadInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    scDeadInterval.setUnits("s")


class _ScRetransmitInterval_Type(Unsigned32):
    """Custom type scRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_ScRetransmitInterval_Type.__name__ = "Unsigned32"
_ScRetransmitInterval_Object = MibTableColumn
scRetransmitInterval = _ScRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 50),
    _ScRetransmitInterval_Type()
)
scRetransmitInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    scRetransmitInterval.setUnits("s")
_ScDhcpServer_Type = FspR7DhcpServer
_ScDhcpServer_Object = MibTableColumn
scDhcpServer = _ScDhcpServer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 51),
    _ScDhcpServer_Type()
)
scDhcpServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDhcpServer.setStatus("current")
_ScDhcpStartAddr_Type = IpAddress
_ScDhcpStartAddr_Object = MibTableColumn
scDhcpStartAddr = _ScDhcpStartAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 52),
    _ScDhcpStartAddr_Type()
)
scDhcpStartAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDhcpStartAddr.setStatus("current")
_ScDhcpStopAddr_Type = IpAddress
_ScDhcpStopAddr_Object = MibTableColumn
scDhcpStopAddr = _ScDhcpStopAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 53),
    _ScDhcpStopAddr_Type()
)
scDhcpStopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDhcpStopAddr.setStatus("current")
_ScDhcpMask_Type = IpAddress
_ScDhcpMask_Object = MibTableColumn
scDhcpMask = _ScDhcpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 54),
    _ScDhcpMask_Type()
)
scDhcpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scDhcpMask.setStatus("current")
_ScFrcdLogin_Type = FspR7EnableDisable
_ScFrcdLogin_Object = MibTableColumn
scFrcdLogin = _ScFrcdLogin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 55),
    _ScFrcdLogin_Type()
)
scFrcdLogin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scFrcdLogin.setStatus("current")
_ScMdix_Type = FspR7InterfaceCrossover
_ScMdix_Object = MibTableColumn
scMdix = _ScMdix_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 3, 1, 56),
    _ScMdix_Type()
)
scMdix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    scMdix.setStatus("current")
_EndOfScTable_Type = Integer32
_EndOfScTable_Object = MibScalar
endOfScTable = _EndOfScTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 4),
    _EndOfScTable_Type()
)
endOfScTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfScTable.setStatus("current")
_LanTable_Object = MibTable
lanTable = _LanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5)
)
if mibBuilder.loadTexts:
    lanTable.setStatus("current")
_LanEntry_Object = MibTableRow
lanEntry = _LanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1)
)
lanEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    lanEntry.setStatus("current")
_LanRowStatus_Type = RowStatus
_LanRowStatus_Object = MibTableColumn
lanRowStatus = _LanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 1),
    _LanRowStatus_Type()
)
lanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanRowStatus.setStatus("current")
_LanType_Type = FspR7InterfaceType
_LanType_Object = MibTableColumn
lanType = _LanType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 2),
    _LanType_Type()
)
lanType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanType.setStatus("current")
_LanAdmin_Type = FspR7AdminState
_LanAdmin_Object = MibTableColumn
lanAdmin = _LanAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 3),
    _LanAdmin_Type()
)
lanAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanAdmin.setStatus("current")
_LanAlias_Type = SnmpAdminString
_LanAlias_Object = MibTableColumn
lanAlias = _LanAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 4),
    _LanAlias_Type()
)
lanAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanAlias.setStatus("current")
_LanAuthString_Type = SnmpAdminString
_LanAuthString_Object = MibTableColumn
lanAuthString = _LanAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 5),
    _LanAuthString_Type()
)
lanAuthString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanAuthString.setStatus("current")
_LanOspf_Type = FspR7OspfMode
_LanOspf_Object = MibTableColumn
lanOspf = _LanOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 6),
    _LanOspf_Type()
)
lanOspf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanOspf.setStatus("current")
_LanAuthType_Type = FspR7CpAuthType
_LanAuthType_Object = MibTableColumn
lanAuthType = _LanAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 7),
    _LanAuthType_Type()
)
lanAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanAuthType.setStatus("current")
_LanIpType_Type = FspR7IpType
_LanIpType_Object = MibTableColumn
lanIpType = _LanIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 8),
    _LanIpType_Type()
)
lanIpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIpType.setStatus("current")


class _LanMetric_Type(Unsigned32):
    """Custom type lanMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LanMetric_Type.__name__ = "Unsigned32"
_LanMetric_Object = MibTableColumn
lanMetric = _LanMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 9),
    _LanMetric_Type()
)
lanMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanMetric.setStatus("current")
_LanAreaAid_Type = SnmpAdminString
_LanAreaAid_Object = MibTableColumn
lanAreaAid = _LanAreaAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 10),
    _LanAreaAid_Type()
)
lanAreaAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanAreaAid.setStatus("current")
_LanIpAddr_Type = IpAddress
_LanIpAddr_Object = MibTableColumn
lanIpAddr = _LanIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 11),
    _LanIpAddr_Type()
)
lanIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIpAddr.setStatus("current")
_LanIpMask_Type = IpAddress
_LanIpMask_Object = MibTableColumn
lanIpMask = _LanIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 12),
    _LanIpMask_Type()
)
lanIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIpMask.setStatus("current")


class _LanPriority_Type(Unsigned32):
    """Custom type lanPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_LanPriority_Type.__name__ = "Unsigned32"
_LanPriority_Object = MibTableColumn
lanPriority = _LanPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 13),
    _LanPriority_Type()
)
lanPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanPriority.setStatus("current")
_LanLanMembers_Type = SnmpAdminString
_LanLanMembers_Object = MibTableColumn
lanLanMembers = _LanLanMembers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 14),
    _LanLanMembers_Type()
)
lanLanMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanLanMembers.setStatus("current")
_LanSecondaryStates_Type = FspR7EntitySecondaryStates
_LanSecondaryStates_Object = MibTableColumn
lanSecondaryStates = _LanSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 15),
    _LanSecondaryStates_Type()
)
lanSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanSecondaryStates.setStatus("current")
_LanOperState_Type = FspR7OperState
_LanOperState_Object = MibTableColumn
lanOperState = _LanOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 16),
    _LanOperState_Type()
)
lanOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanOperState.setStatus("current")
_LanIpAddrMonitor_Type = IpAddress
_LanIpAddrMonitor_Object = MibTableColumn
lanIpAddrMonitor = _LanIpAddrMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 17),
    _LanIpAddrMonitor_Type()
)
lanIpAddrMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanIpAddrMonitor.setStatus("current")
_LanIpMaskMonitor_Type = IpAddress
_LanIpMaskMonitor_Object = MibTableColumn
lanIpMaskMonitor = _LanIpMaskMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 18),
    _LanIpMaskMonitor_Type()
)
lanIpMaskMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanIpMaskMonitor.setStatus("current")


class _LanValidSigTimer_Type(Unsigned32):
    """Custom type lanValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_LanValidSigTimer_Type.__name__ = "Unsigned32"
_LanValidSigTimer_Object = MibTableColumn
lanValidSigTimer = _LanValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 19),
    _LanValidSigTimer_Type()
)
lanValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    lanValidSigTimer.setUnits("min")
_LanIPv6_Type = SnmpAdminString
_LanIPv6_Object = MibTableColumn
lanIPv6 = _LanIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 20),
    _LanIPv6_Type()
)
lanIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIPv6.setStatus("current")


class _LanIPv6PrefixLen_Type(Unsigned32):
    """Custom type lanIPv6PrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_LanIPv6PrefixLen_Type.__name__ = "Unsigned32"
_LanIPv6PrefixLen_Object = MibTableColumn
lanIPv6PrefixLen = _LanIPv6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 21),
    _LanIPv6PrefixLen_Type()
)
lanIPv6PrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIPv6PrefixLen.setStatus("current")
_LanIPv6LinkLocal_Type = SnmpAdminString
_LanIPv6LinkLocal_Object = MibTableColumn
lanIPv6LinkLocal = _LanIPv6LinkLocal_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 22),
    _LanIPv6LinkLocal_Type()
)
lanIPv6LinkLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanIPv6LinkLocal.setStatus("current")
_LanIpMode_Type = FspR7IpMode
_LanIpMode_Object = MibTableColumn
lanIpMode = _LanIpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 23),
    _LanIpMode_Type()
)
lanIpMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanIpMode.setStatus("current")


class _LanMtu_Type(Unsigned32):
    """Custom type lanMtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1280, 1500),
    )


_LanMtu_Type.__name__ = "Unsigned32"
_LanMtu_Object = MibTableColumn
lanMtu = _LanMtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 24),
    _LanMtu_Type()
)
lanMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanMtu.setStatus("current")
if mibBuilder.loadTexts:
    lanMtu.setUnits("Byte")


class _LanHelloInterval_Type(Unsigned32):
    """Custom type lanHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LanHelloInterval_Type.__name__ = "Unsigned32"
_LanHelloInterval_Object = MibTableColumn
lanHelloInterval = _LanHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 25),
    _LanHelloInterval_Type()
)
lanHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    lanHelloInterval.setUnits("s")


class _LanDeadInterval_Type(Unsigned32):
    """Custom type lanDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LanDeadInterval_Type.__name__ = "Unsigned32"
_LanDeadInterval_Object = MibTableColumn
lanDeadInterval = _LanDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 26),
    _LanDeadInterval_Type()
)
lanDeadInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    lanDeadInterval.setUnits("s")


class _LanRetransmitInterval_Type(Unsigned32):
    """Custom type lanRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_LanRetransmitInterval_Type.__name__ = "Unsigned32"
_LanRetransmitInterval_Object = MibTableColumn
lanRetransmitInterval = _LanRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 27),
    _LanRetransmitInterval_Type()
)
lanRetransmitInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    lanRetransmitInterval.setUnits("s")
_LanDhcpServer_Type = FspR7DhcpServer
_LanDhcpServer_Object = MibTableColumn
lanDhcpServer = _LanDhcpServer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 28),
    _LanDhcpServer_Type()
)
lanDhcpServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanDhcpServer.setStatus("current")
_LanDhcpStartAddr_Type = IpAddress
_LanDhcpStartAddr_Object = MibTableColumn
lanDhcpStartAddr = _LanDhcpStartAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 29),
    _LanDhcpStartAddr_Type()
)
lanDhcpStartAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanDhcpStartAddr.setStatus("current")
_LanDhcpStopAddr_Type = IpAddress
_LanDhcpStopAddr_Object = MibTableColumn
lanDhcpStopAddr = _LanDhcpStopAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 30),
    _LanDhcpStopAddr_Type()
)
lanDhcpStopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanDhcpStopAddr.setStatus("current")
_LanDhcpMask_Type = IpAddress
_LanDhcpMask_Object = MibTableColumn
lanDhcpMask = _LanDhcpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 31),
    _LanDhcpMask_Type()
)
lanDhcpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanDhcpMask.setStatus("current")
_LanFrcdLogin_Type = FspR7EnableDisable
_LanFrcdLogin_Object = MibTableColumn
lanFrcdLogin = _LanFrcdLogin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 5, 1, 32),
    _LanFrcdLogin_Type()
)
lanFrcdLogin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lanFrcdLogin.setStatus("current")
_EndOfLanTable_Type = Integer32
_EndOfLanTable_Object = MibScalar
endOfLanTable = _EndOfLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 6),
    _EndOfLanTable_Type()
)
endOfLanTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfLanTable.setStatus("current")
_EccTable_Object = MibTable
eccTable = _EccTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7)
)
if mibBuilder.loadTexts:
    eccTable.setStatus("current")
_EccEntry_Object = MibTableRow
eccEntry = _EccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1)
)
eccEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    eccEntry.setStatus("current")
_EccRowStatus_Type = RowStatus
_EccRowStatus_Object = MibTableColumn
eccRowStatus = _EccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 1),
    _EccRowStatus_Type()
)
eccRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccRowStatus.setStatus("current")
_EccType_Type = FspR7InterfaceType
_EccType_Object = MibTableColumn
eccType = _EccType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 2),
    _EccType_Type()
)
eccType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccType.setStatus("current")
_EccAdmin_Type = FspR7AdminState
_EccAdmin_Object = MibTableColumn
eccAdmin = _EccAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 3),
    _EccAdmin_Type()
)
eccAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccAdmin.setStatus("current")
_EccAlias_Type = SnmpAdminString
_EccAlias_Object = MibTableColumn
eccAlias = _EccAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 4),
    _EccAlias_Type()
)
eccAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccAlias.setStatus("current")
_EccConnectionType_Type = FspR7TypeConnection
_EccConnectionType_Object = MibTableColumn
eccConnectionType = _EccConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 5),
    _EccConnectionType_Type()
)
eccConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccConnectionType.setStatus("current")
_EccLanAid_Type = SnmpAdminString
_EccLanAid_Object = MibTableColumn
eccLanAid = _EccLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 6),
    _EccLanAid_Type()
)
eccLanAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccLanAid.setStatus("current")


class _EccExternalVid_Type(Unsigned32):
    """Custom type eccExternalVid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_EccExternalVid_Type.__name__ = "Unsigned32"
_EccExternalVid_Object = MibTableColumn
eccExternalVid = _EccExternalVid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 7),
    _EccExternalVid_Type()
)
eccExternalVid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccExternalVid.setStatus("current")
_EccpppIpLinkAid_Type = SnmpAdminString
_EccpppIpLinkAid_Object = MibTableColumn
eccpppIpLinkAid = _EccpppIpLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 8),
    _EccpppIpLinkAid_Type()
)
eccpppIpLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccpppIpLinkAid.setStatus("current")
_EccMaxDataRate_Type = Unsigned32
_EccMaxDataRate_Object = MibTableColumn
eccMaxDataRate = _EccMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 9),
    _EccMaxDataRate_Type()
)
eccMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccMaxDataRate.setStatus("current")
if mibBuilder.loadTexts:
    eccMaxDataRate.setUnits("kbps")
_EccProtAvailability_Type = FspR7NoYes
_EccProtAvailability_Object = MibTableColumn
eccProtAvailability = _EccProtAvailability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 10),
    _EccProtAvailability_Type()
)
eccProtAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccProtAvailability.setStatus("current")
_EccSecondaryStates_Type = FspR7EntitySecondaryStates
_EccSecondaryStates_Object = MibTableColumn
eccSecondaryStates = _EccSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 11),
    _EccSecondaryStates_Type()
)
eccSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccSecondaryStates.setStatus("current")
_EccConnState_Type = FspR7ConnectState
_EccConnState_Object = MibTableColumn
eccConnState = _EccConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 12),
    _EccConnState_Type()
)
eccConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccConnState.setStatus("current")
_EccOperState_Type = FspR7OperState
_EccOperState_Object = MibTableColumn
eccOperState = _EccOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 13),
    _EccOperState_Type()
)
eccOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccOperState.setStatus("current")


class _EccValidSigTimer_Type(Unsigned32):
    """Custom type eccValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_EccValidSigTimer_Type.__name__ = "Unsigned32"
_EccValidSigTimer_Object = MibTableColumn
eccValidSigTimer = _EccValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 14),
    _EccValidSigTimer_Type()
)
eccValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eccValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    eccValidSigTimer.setUnits("min")
_EccGccUsage_Type = FspR7GccUsage
_EccGccUsage_Object = MibTableColumn
eccGccUsage = _EccGccUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 7, 1, 15),
    _EccGccUsage_Type()
)
eccGccUsage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    eccGccUsage.setStatus("current")
_EndOfEccTable_Type = Integer32
_EndOfEccTable_Object = MibScalar
endOfEccTable = _EndOfEccTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 8),
    _EndOfEccTable_Type()
)
endOfEccTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEccTable.setStatus("current")
_EndOfDcnMgmt_Type = Integer32
_EndOfDcnMgmt_Object = MibScalar
endOfDcnMgmt = _EndOfDcnMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 5, 10000),
    _EndOfDcnMgmt_Type()
)
endOfDcnMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDcnMgmt.setStatus("current")
_OpticalMuxMgmt_ObjectIdentity = ObjectIdentity
opticalMuxMgmt = _OpticalMuxMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6)
)
_OpticalMuxTable_Object = MibTable
opticalMuxTable = _OpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1)
)
if mibBuilder.loadTexts:
    opticalMuxTable.setStatus("current")
_OpticalMuxEntry_Object = MibTableRow
opticalMuxEntry = _OpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1)
)
opticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"),
)
if mibBuilder.loadTexts:
    opticalMuxEntry.setStatus("current")
_OpticalMuxRowStatus_Type = RowStatus
_OpticalMuxRowStatus_Object = MibTableColumn
opticalMuxRowStatus = _OpticalMuxRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 1),
    _OpticalMuxRowStatus_Type()
)
opticalMuxRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxRowStatus.setStatus("current")
_OpticalMuxConnectionType_Type = FspR7TypeConnection
_OpticalMuxConnectionType_Object = MibTableColumn
opticalMuxConnectionType = _OpticalMuxConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 2),
    _OpticalMuxConnectionType_Type()
)
opticalMuxConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxConnectionType.setStatus("current")
_OpticalMuxChannelsNumber_Type = FspR7NumberOfChannels
_OpticalMuxChannelsNumber_Object = MibTableColumn
opticalMuxChannelsNumber = _OpticalMuxChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 3),
    _OpticalMuxChannelsNumber_Type()
)
opticalMuxChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxChannelsNumber.setStatus("current")


class _OpticalMuxPumpPower_Type(Integer32):
    """Custom type opticalMuxPumpPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(115, 138),
    )


_OpticalMuxPumpPower_Type.__name__ = "Integer32"
_OpticalMuxPumpPower_Object = MibTableColumn
opticalMuxPumpPower = _OpticalMuxPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 4),
    _OpticalMuxPumpPower_Type()
)
opticalMuxPumpPower.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxPumpPower.setUnits("0.2 dBm")
_OpticalMuxInhibitSwitchToWork_Type = FspR7YesNo
_OpticalMuxInhibitSwitchToWork_Object = MibTableColumn
opticalMuxInhibitSwitchToWork = _OpticalMuxInhibitSwitchToWork_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 5),
    _OpticalMuxInhibitSwitchToWork_Type()
)
opticalMuxInhibitSwitchToWork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxInhibitSwitchToWork.setStatus("current")
_OpticalMuxForceLaserOn_Type = FspR7RlsAction
_OpticalMuxForceLaserOn_Object = MibTableColumn
opticalMuxForceLaserOn = _OpticalMuxForceLaserOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 6),
    _OpticalMuxForceLaserOn_Type()
)
opticalMuxForceLaserOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxForceLaserOn.setStatus("current")
_OpticalMuxAseTabCreation_Type = FspR7RlsAction
_OpticalMuxAseTabCreation_Object = MibTableColumn
opticalMuxAseTabCreation = _OpticalMuxAseTabCreation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 7),
    _OpticalMuxAseTabCreation_Type()
)
opticalMuxAseTabCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxAseTabCreation.setStatus("current")
_OpticalMuxTransmitFrequency_Type = Unsigned32
_OpticalMuxTransmitFrequency_Object = MibTableColumn
opticalMuxTransmitFrequency = _OpticalMuxTransmitFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 8),
    _OpticalMuxTransmitFrequency_Type()
)
opticalMuxTransmitFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxTransmitFrequency.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxTransmitFrequency.setUnits("0.01 THz")
_OpticalMuxMultiplexLevel_Type = FspR7OpticalMultiplexLevel
_OpticalMuxMultiplexLevel_Object = MibTableColumn
opticalMuxMultiplexLevel = _OpticalMuxMultiplexLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 9),
    _OpticalMuxMultiplexLevel_Type()
)
opticalMuxMultiplexLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxMultiplexLevel.setStatus("current")


class _OpticalMuxOpticalSetPoint_Type(Integer32):
    """Custom type opticalMuxOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 100),
    )


_OpticalMuxOpticalSetPoint_Type.__name__ = "Integer32"
_OpticalMuxOpticalSetPoint_Object = MibTableColumn
opticalMuxOpticalSetPoint = _OpticalMuxOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 10),
    _OpticalMuxOpticalSetPoint_Type()
)
opticalMuxOpticalSetPoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxOpticalSetPoint.setUnits("0.1 dBm")
_OpticalMuxInitiateEqualization_Type = FspR7RlsAction
_OpticalMuxInitiateEqualization_Object = MibTableColumn
opticalMuxInitiateEqualization = _OpticalMuxInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 11),
    _OpticalMuxInitiateEqualization_Type()
)
opticalMuxInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxInitiateEqualization.setStatus("current")
_OpticalMuxConnectorType_Type = FspR7ConnectorType
_OpticalMuxConnectorType_Object = MibTableColumn
opticalMuxConnectorType = _OpticalMuxConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 12),
    _OpticalMuxConnectorType_Type()
)
opticalMuxConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxConnectorType.setStatus("current")
_OpticalMuxFiberType_Type = FspR7OpticalFiberType
_OpticalMuxFiberType_Object = MibTableColumn
opticalMuxFiberType = _OpticalMuxFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 13),
    _OpticalMuxFiberType_Type()
)
opticalMuxFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxFiberType.setStatus("current")


class _OpticalMuxTilt_Type(Integer32):
    """Custom type opticalMuxTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
    )


_OpticalMuxTilt_Type.__name__ = "Integer32"
_OpticalMuxTilt_Object = MibTableColumn
opticalMuxTilt = _OpticalMuxTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 14),
    _OpticalMuxTilt_Type()
)
opticalMuxTilt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxTilt.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxTilt.setUnits("0.1 dB")


class _OpticalMuxOscOpticalSetpoint_Type(Integer32):
    """Custom type opticalMuxOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
    )


_OpticalMuxOscOpticalSetpoint_Type.__name__ = "Integer32"
_OpticalMuxOscOpticalSetpoint_Object = MibTableColumn
opticalMuxOscOpticalSetpoint = _OpticalMuxOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 15),
    _OpticalMuxOscOpticalSetpoint_Type()
)
opticalMuxOscOpticalSetpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxOscOpticalSetpoint.setUnits("0.1 dBm")


class _OpticalMuxOffset_Type(Integer32):
    """Custom type opticalMuxOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
    )


_OpticalMuxOffset_Type.__name__ = "Integer32"
_OpticalMuxOffset_Object = MibTableColumn
opticalMuxOffset = _OpticalMuxOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 16),
    _OpticalMuxOffset_Type()
)
opticalMuxOffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxOffset.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxOffset.setUnits("0.1 dB")
_OpticalMuxSwitchCommand_Type = FspR7APSCommand
_OpticalMuxSwitchCommand_Object = MibTableColumn
opticalMuxSwitchCommand = _OpticalMuxSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 17),
    _OpticalMuxSwitchCommand_Type()
)
opticalMuxSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxSwitchCommand.setStatus("current")
_OpticalMuxTransmitChannel_Type = FspR7ChannelIdentifier
_OpticalMuxTransmitChannel_Object = MibTableColumn
opticalMuxTransmitChannel = _OpticalMuxTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 18),
    _OpticalMuxTransmitChannel_Type()
)
opticalMuxTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxTransmitChannel.setStatus("current")
_OpticalMuxBandProvision_Type = FspR7OpticalBand
_OpticalMuxBandProvision_Object = MibTableColumn
opticalMuxBandProvision = _OpticalMuxBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 19),
    _OpticalMuxBandProvision_Type()
)
opticalMuxBandProvision.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxBandProvision.setStatus("current")
_OpticalMuxAlsMode_Type = FspR7AlsMode
_OpticalMuxAlsMode_Object = MibTableColumn
opticalMuxAlsMode = _OpticalMuxAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 20),
    _OpticalMuxAlsMode_Type()
)
opticalMuxAlsMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxAlsMode.setStatus("current")
_OpticalMuxType_Type = FspR7InterfaceType
_OpticalMuxType_Object = MibTableColumn
opticalMuxType = _OpticalMuxType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 21),
    _OpticalMuxType_Type()
)
opticalMuxType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxType.setStatus("current")


class _OpticalMuxAttenuationGradient_Type(Unsigned32):
    """Custom type opticalMuxAttenuationGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 990),
    )


_OpticalMuxAttenuationGradient_Type.__name__ = "Unsigned32"
_OpticalMuxAttenuationGradient_Object = MibTableColumn
opticalMuxAttenuationGradient = _OpticalMuxAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 22),
    _OpticalMuxAttenuationGradient_Type()
)
opticalMuxAttenuationGradient.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxAttenuationGradient.setUnits("0.1 dB/min")
_OpticalMuxTransmitWavelength_Type = Unsigned32
_OpticalMuxTransmitWavelength_Object = MibTableColumn
opticalMuxTransmitWavelength = _OpticalMuxTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 23),
    _OpticalMuxTransmitWavelength_Type()
)
opticalMuxTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxTransmitWavelength.setUnits("0.01 nm")
_OpticalMuxInhibitSwitchToProt_Type = FspR7YesNo
_OpticalMuxInhibitSwitchToProt_Object = MibTableColumn
opticalMuxInhibitSwitchToProt = _OpticalMuxInhibitSwitchToProt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 24),
    _OpticalMuxInhibitSwitchToProt_Type()
)
opticalMuxInhibitSwitchToProt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxInhibitSwitchToProt.setStatus("current")
_OpticalMuxTrmtChannel_Type = FspR7ChannelIdentifier
_OpticalMuxTrmtChannel_Object = MibTableColumn
opticalMuxTrmtChannel = _OpticalMuxTrmtChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 25),
    _OpticalMuxTrmtChannel_Type()
)
opticalMuxTrmtChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxTrmtChannel.setStatus("current")


class _OpticalMuxVariableGain_Type(Unsigned32):
    """Custom type opticalMuxVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 350),
    )


_OpticalMuxVariableGain_Type.__name__ = "Unsigned32"
_OpticalMuxVariableGain_Object = MibTableColumn
opticalMuxVariableGain = _OpticalMuxVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 26),
    _OpticalMuxVariableGain_Type()
)
opticalMuxVariableGain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVariableGain.setUnits("0.1 dB")


class _OpticalMuxSumTransmited_Type(Unsigned32):
    """Custom type opticalMuxSumTransmited based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
    )


_OpticalMuxSumTransmited_Type.__name__ = "Unsigned32"
_OpticalMuxSumTransmited_Object = MibTableColumn
opticalMuxSumTransmited = _OpticalMuxSumTransmited_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 27),
    _OpticalMuxSumTransmited_Type()
)
opticalMuxSumTransmited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxSumTransmited.setStatus("current")
_OpticalMuxRcvChannel_Type = FspR7ChannelIdentifier
_OpticalMuxRcvChannel_Object = MibTableColumn
opticalMuxRcvChannel = _OpticalMuxRcvChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 28),
    _OpticalMuxRcvChannel_Type()
)
opticalMuxRcvChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxRcvChannel.setStatus("current")
_OpticalMuxAdmin_Type = FspR7AdminState
_OpticalMuxAdmin_Object = MibTableColumn
opticalMuxAdmin = _OpticalMuxAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 29),
    _OpticalMuxAdmin_Type()
)
opticalMuxAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxAdmin.setStatus("current")
_OpticalMuxTimePeriod_Type = FspR7OtdrPeriod
_OpticalMuxTimePeriod_Object = MibTableColumn
opticalMuxTimePeriod = _OpticalMuxTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 30),
    _OpticalMuxTimePeriod_Type()
)
opticalMuxTimePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxTimePeriod.setStatus("current")
_OpticalMuxSigDegThresReceiver_Type = Unsigned32
_OpticalMuxSigDegThresReceiver_Object = MibTableColumn
opticalMuxSigDegThresReceiver = _OpticalMuxSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 31),
    _OpticalMuxSigDegThresReceiver_Type()
)
opticalMuxSigDegThresReceiver.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxSigDegThresReceiver.setUnits("0.1 dB")
_OpticalMuxChannelsProvision_Type = FspR7NumberOfChannels
_OpticalMuxChannelsProvision_Object = MibTableColumn
opticalMuxChannelsProvision = _OpticalMuxChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 32),
    _OpticalMuxChannelsProvision_Type()
)
opticalMuxChannelsProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxChannelsProvision.setStatus("current")
_OpticalMuxAlias_Type = SnmpAdminString
_OpticalMuxAlias_Object = MibTableColumn
opticalMuxAlias = _OpticalMuxAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 33),
    _OpticalMuxAlias_Type()
)
opticalMuxAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxAlias.setStatus("current")
_OpticalMuxChannelSpacing_Type = FspR7ChannelSpacing
_OpticalMuxChannelSpacing_Object = MibTableColumn
opticalMuxChannelSpacing = _OpticalMuxChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 34),
    _OpticalMuxChannelSpacing_Type()
)
opticalMuxChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxChannelSpacing.setStatus("current")
_OpticalMuxDataLayerPmReset_Type = FspR7PmReset
_OpticalMuxDataLayerPmReset_Object = MibTableColumn
opticalMuxDataLayerPmReset = _OpticalMuxDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 35),
    _OpticalMuxDataLayerPmReset_Type()
)
opticalMuxDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxDataLayerPmReset.setStatus("current")
_OpticalMuxGain_Type = FspR7Gain
_OpticalMuxGain_Object = MibTableColumn
opticalMuxGain = _OpticalMuxGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 36),
    _OpticalMuxGain_Type()
)
opticalMuxGain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxGain.setStatus("current")
_OpticalMuxSignalDirection_Type = FspR7SignalDirection
_OpticalMuxSignalDirection_Object = MibTableColumn
opticalMuxSignalDirection = _OpticalMuxSignalDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 37),
    _OpticalMuxSignalDirection_Type()
)
opticalMuxSignalDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxSignalDirection.setStatus("current")
_OpticalMuxEdfaPwrOut_Type = FspR7EdfaOutputPowerRating
_OpticalMuxEdfaPwrOut_Object = MibTableColumn
opticalMuxEdfaPwrOut = _OpticalMuxEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 38),
    _OpticalMuxEdfaPwrOut_Type()
)
opticalMuxEdfaPwrOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxEdfaPwrOut.setStatus("current")


class _OpticalMuxVoaSetpoint_Type(Unsigned32):
    """Custom type opticalMuxVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_OpticalMuxVoaSetpoint_Type.__name__ = "Unsigned32"
_OpticalMuxVoaSetpoint_Object = MibTableColumn
opticalMuxVoaSetpoint = _OpticalMuxVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 39),
    _OpticalMuxVoaSetpoint_Type()
)
opticalMuxVoaSetpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVoaSetpoint.setUnits("0.1 dB")
_OpticalMuxFiberBrand_Type = FspR7FiberBrand
_OpticalMuxFiberBrand_Object = MibTableColumn
opticalMuxFiberBrand = _OpticalMuxFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 40),
    _OpticalMuxFiberBrand_Type()
)
opticalMuxFiberBrand.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxFiberBrand.setStatus("current")
_OpticalMuxStages_Type = FspR7Stages
_OpticalMuxStages_Object = MibTableColumn
opticalMuxStages = _OpticalMuxStages_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 41),
    _OpticalMuxStages_Type()
)
opticalMuxStages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxStages.setStatus("current")
_OpticalMuxTiltSet_Type = FspR7TiltSet
_OpticalMuxTiltSet_Object = MibTableColumn
opticalMuxTiltSet = _OpticalMuxTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 42),
    _OpticalMuxTiltSet_Type()
)
opticalMuxTiltSet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxTiltSet.setStatus("current")
_OpticalMuxForceFwdAsePilotOn_Type = FspR7RlsAction
_OpticalMuxForceFwdAsePilotOn_Object = MibTableColumn
opticalMuxForceFwdAsePilotOn = _OpticalMuxForceFwdAsePilotOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 43),
    _OpticalMuxForceFwdAsePilotOn_Type()
)
opticalMuxForceFwdAsePilotOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxForceFwdAsePilotOn.setStatus("current")
_OpticalMuxSecondaryStates_Type = FspR7EntitySecondaryStates
_OpticalMuxSecondaryStates_Object = MibTableColumn
opticalMuxSecondaryStates = _OpticalMuxSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 44),
    _OpticalMuxSecondaryStates_Type()
)
opticalMuxSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxSecondaryStates.setStatus("current")
_OpticalMuxConnState_Type = FspR7ConnectState
_OpticalMuxConnState_Object = MibTableColumn
opticalMuxConnState = _OpticalMuxConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 45),
    _OpticalMuxConnState_Type()
)
opticalMuxConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxConnState.setStatus("current")
_OpticalMuxOperState_Type = FspR7OperState
_OpticalMuxOperState_Object = MibTableColumn
opticalMuxOperState = _OpticalMuxOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 46),
    _OpticalMuxOperState_Type()
)
opticalMuxOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxOperState.setStatus("current")
_OpticalMuxProtectionRole_Type = FspR7ProtectionRole
_OpticalMuxProtectionRole_Object = MibTableColumn
opticalMuxProtectionRole = _OpticalMuxProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 47),
    _OpticalMuxProtectionRole_Type()
)
opticalMuxProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxProtectionRole.setStatus("current")
_OpticalMuxFarEndSigDegThres_Type = Unsigned32
_OpticalMuxFarEndSigDegThres_Object = MibTableColumn
opticalMuxFarEndSigDegThres = _OpticalMuxFarEndSigDegThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 48),
    _OpticalMuxFarEndSigDegThres_Type()
)
opticalMuxFarEndSigDegThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxFarEndSigDegThres.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxFarEndSigDegThres.setUnits("0.1 dB")
_OpticalMuxMaxRamanGainMon_Type = Unsigned32
_OpticalMuxMaxRamanGainMon_Object = MibTableColumn
opticalMuxMaxRamanGainMon = _OpticalMuxMaxRamanGainMon_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 49),
    _OpticalMuxMaxRamanGainMon_Type()
)
opticalMuxMaxRamanGainMon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxMaxRamanGainMon.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxMaxRamanGainMon.setUnits("0.1 dB")


class _OpticalMuxValidSigTimer_Type(Unsigned32):
    """Custom type opticalMuxValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_OpticalMuxValidSigTimer_Type.__name__ = "Unsigned32"
_OpticalMuxValidSigTimer_Object = MibTableColumn
opticalMuxValidSigTimer = _OpticalMuxValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 50),
    _OpticalMuxValidSigTimer_Type()
)
opticalMuxValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxValidSigTimer.setUnits("min")
_OpticalMuxGainRange_Type = FspR7GainRange
_OpticalMuxGainRange_Object = MibTableColumn
opticalMuxGainRange = _OpticalMuxGainRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 51),
    _OpticalMuxGainRange_Type()
)
opticalMuxGainRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxGainRange.setStatus("current")


class _OpticalMuxPpc_Type(Integer32):
    """Custom type opticalMuxPpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-220, 150),
    )


_OpticalMuxPpc_Type.__name__ = "Integer32"
_OpticalMuxPpc_Object = MibTableColumn
opticalMuxPpc = _OpticalMuxPpc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 52),
    _OpticalMuxPpc_Type()
)
opticalMuxPpc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxPpc.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxPpc.setUnits("0.1 dBm")


class _OpticalMuxOffsetHigh_Type(Integer32):
    """Custom type opticalMuxOffsetHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 210),
    )


_OpticalMuxOffsetHigh_Type.__name__ = "Integer32"
_OpticalMuxOffsetHigh_Object = MibTableColumn
opticalMuxOffsetHigh = _OpticalMuxOffsetHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 53),
    _OpticalMuxOffsetHigh_Type()
)
opticalMuxOffsetHigh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxOffsetHigh.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxOffsetHigh.setUnits("0.1 dBm")


class _OpticalMuxOffsetLow_Type(Integer32):
    """Custom type opticalMuxOffsetLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 210),
    )


_OpticalMuxOffsetLow_Type.__name__ = "Integer32"
_OpticalMuxOffsetLow_Object = MibTableColumn
opticalMuxOffsetLow = _OpticalMuxOffsetLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 54),
    _OpticalMuxOffsetLow_Type()
)
opticalMuxOffsetLow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxOffsetLow.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxOffsetLow.setUnits("0.1 dBm")
_OpticalMuxOptUpdate_Type = FspR7RlsAction
_OpticalMuxOptUpdate_Object = MibTableColumn
opticalMuxOptUpdate = _OpticalMuxOptUpdate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 55),
    _OpticalMuxOptUpdate_Type()
)
opticalMuxOptUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalMuxOptUpdate.setStatus("current")
_OpticalMuxChannelRangeProvision_Type = FspR7ChannelRangeInventory
_OpticalMuxChannelRangeProvision_Object = MibTableColumn
opticalMuxChannelRangeProvision = _OpticalMuxChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 56),
    _OpticalMuxChannelRangeProvision_Type()
)
opticalMuxChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxChannelRangeProvision.setStatus("current")
_OpticalMuxNearEndProtectionState_Type = FspR7ProtectionState
_OpticalMuxNearEndProtectionState_Object = MibTableColumn
opticalMuxNearEndProtectionState = _OpticalMuxNearEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 57),
    _OpticalMuxNearEndProtectionState_Type()
)
opticalMuxNearEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxNearEndProtectionState.setStatus("current")
_OpticalMuxFarEndProtectionState_Type = FspR7ProtectionState
_OpticalMuxFarEndProtectionState_Object = MibTableColumn
opticalMuxFarEndProtectionState = _OpticalMuxFarEndProtectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 58),
    _OpticalMuxFarEndProtectionState_Type()
)
opticalMuxFarEndProtectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxFarEndProtectionState.setStatus("current")


class _OpticalMuxVariableGainNtoR_Type(Unsigned32):
    """Custom type opticalMuxVariableGainNtoR based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 350),
    )


_OpticalMuxVariableGainNtoR_Type.__name__ = "Unsigned32"
_OpticalMuxVariableGainNtoR_Object = MibTableColumn
opticalMuxVariableGainNtoR = _OpticalMuxVariableGainNtoR_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 59),
    _OpticalMuxVariableGainNtoR_Type()
)
opticalMuxVariableGainNtoR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxVariableGainNtoR.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVariableGainNtoR.setUnits("0.1 dB")


class _OpticalMuxVariableGainNtoC_Type(Unsigned32):
    """Custom type opticalMuxVariableGainNtoC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 350),
    )


_OpticalMuxVariableGainNtoC_Type.__name__ = "Unsigned32"
_OpticalMuxVariableGainNtoC_Object = MibTableColumn
opticalMuxVariableGainNtoC = _OpticalMuxVariableGainNtoC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 60),
    _OpticalMuxVariableGainNtoC_Type()
)
opticalMuxVariableGainNtoC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxVariableGainNtoC.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVariableGainNtoC.setUnits("0.1 dB")


class _OpticalMuxVariableGainRtoN_Type(Unsigned32):
    """Custom type opticalMuxVariableGainRtoN based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 350),
    )


_OpticalMuxVariableGainRtoN_Type.__name__ = "Unsigned32"
_OpticalMuxVariableGainRtoN_Object = MibTableColumn
opticalMuxVariableGainRtoN = _OpticalMuxVariableGainRtoN_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 61),
    _OpticalMuxVariableGainRtoN_Type()
)
opticalMuxVariableGainRtoN.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalMuxVariableGainRtoN.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVariableGainRtoN.setUnits("0.1 dB")


class _OpticalMuxVariableGainCtoN_Type(Unsigned32):
    """Custom type opticalMuxVariableGainCtoN based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 350),
    )


_OpticalMuxVariableGainCtoN_Type.__name__ = "Unsigned32"
_OpticalMuxVariableGainCtoN_Object = MibTableColumn
opticalMuxVariableGainCtoN = _OpticalMuxVariableGainCtoN_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 1, 1, 62),
    _OpticalMuxVariableGainCtoN_Type()
)
opticalMuxVariableGainCtoN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxVariableGainCtoN.setStatus("current")
if mibBuilder.loadTexts:
    opticalMuxVariableGainCtoN.setUnits("0.1 dB")
_EndOfOpticalMuxTable_Type = Integer32
_EndOfOpticalMuxTable_Object = MibScalar
endOfOpticalMuxTable = _EndOfOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 2),
    _EndOfOpticalMuxTable_Type()
)
endOfOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfOpticalMuxTable.setStatus("current")
_EndOfOpticalMuxMgmt_Type = Integer32
_EndOfOpticalMuxMgmt_Object = MibScalar
endOfOpticalMuxMgmt = _EndOfOpticalMuxMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 6, 10000),
    _EndOfOpticalMuxMgmt_Type()
)
endOfOpticalMuxMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfOpticalMuxMgmt.setStatus("current")
_ShelfConnMgmt_ObjectIdentity = ObjectIdentity
shelfConnMgmt = _ShelfConnMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7)
)
_ShelfConnTable_Object = MibTable
shelfConnTable = _ShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1)
)
if mibBuilder.loadTexts:
    shelfConnTable.setStatus("current")
_ShelfConnEntry_Object = MibTableRow
shelfConnEntry = _ShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1)
)
shelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"),
)
if mibBuilder.loadTexts:
    shelfConnEntry.setStatus("current")
_ShelfConnRowStatus_Type = RowStatus
_ShelfConnRowStatus_Object = MibTableColumn
shelfConnRowStatus = _ShelfConnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 1),
    _ShelfConnRowStatus_Type()
)
shelfConnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnRowStatus.setStatus("current")
_ShelfConnConnectionType_Type = FspR7TypeConnection
_ShelfConnConnectionType_Object = MibTableColumn
shelfConnConnectionType = _ShelfConnConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 2),
    _ShelfConnConnectionType_Type()
)
shelfConnConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnConnectionType.setStatus("current")
_ShelfConnConnector_Type = FspR7ConnectorType
_ShelfConnConnector_Object = MibTableColumn
shelfConnConnector = _ShelfConnConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 3),
    _ShelfConnConnector_Type()
)
shelfConnConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnConnector.setStatus("current")
_ShelfConnFiber_Type = FspR7OpticalFiberType
_ShelfConnFiber_Object = MibTableColumn
shelfConnFiber = _ShelfConnFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 4),
    _ShelfConnFiber_Type()
)
shelfConnFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnFiber.setStatus("current")
_ShelfConnReach_Type = FspR7OpticalInterfaceReach
_ShelfConnReach_Object = MibTableColumn
shelfConnReach = _ShelfConnReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 5),
    _ShelfConnReach_Type()
)
shelfConnReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnReach.setStatus("current")
_ShelfConnRate_Type = Unsigned32
_ShelfConnRate_Object = MibTableColumn
shelfConnRate = _ShelfConnRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 6),
    _ShelfConnRate_Type()
)
shelfConnRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnRate.setStatus("current")
if mibBuilder.loadTexts:
    shelfConnRate.setUnits("Mbps")
_ShelfConnAdmin_Type = FspR7AdminState
_ShelfConnAdmin_Object = MibTableColumn
shelfConnAdmin = _ShelfConnAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 7),
    _ShelfConnAdmin_Type()
)
shelfConnAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnAdmin.setStatus("current")
_ShelfConnAlias_Type = SnmpAdminString
_ShelfConnAlias_Object = MibTableColumn
shelfConnAlias = _ShelfConnAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 8),
    _ShelfConnAlias_Type()
)
shelfConnAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnAlias.setStatus("current")
_ShelfConnTransmitChannel_Type = FspR7ChannelIdentifier
_ShelfConnTransmitChannel_Object = MibTableColumn
shelfConnTransmitChannel = _ShelfConnTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 9),
    _ShelfConnTransmitChannel_Type()
)
shelfConnTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnTransmitChannel.setStatus("current")
_ShelfConnFacilityType_Type = FspR7InterfaceType
_ShelfConnFacilityType_Object = MibTableColumn
shelfConnFacilityType = _ShelfConnFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 10),
    _ShelfConnFacilityType_Type()
)
shelfConnFacilityType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnFacilityType.setStatus("current")
_ShelfConnSecondaryStates_Type = FspR7EntitySecondaryStates
_ShelfConnSecondaryStates_Object = MibTableColumn
shelfConnSecondaryStates = _ShelfConnSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 11),
    _ShelfConnSecondaryStates_Type()
)
shelfConnSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnSecondaryStates.setStatus("current")
_ShelfConnOperState_Type = FspR7OperState
_ShelfConnOperState_Object = MibTableColumn
shelfConnOperState = _ShelfConnOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 12),
    _ShelfConnOperState_Type()
)
shelfConnOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnOperState.setStatus("current")


class _ShelfConnValidSigTimer_Type(Unsigned32):
    """Custom type shelfConnValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_ShelfConnValidSigTimer_Type.__name__ = "Unsigned32"
_ShelfConnValidSigTimer_Object = MibTableColumn
shelfConnValidSigTimer = _ShelfConnValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 13),
    _ShelfConnValidSigTimer_Type()
)
shelfConnValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfConnValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    shelfConnValidSigTimer.setUnits("min")
_ShelfConnDataLayerPmReset_Type = FspR7PmReset
_ShelfConnDataLayerPmReset_Object = MibTableColumn
shelfConnDataLayerPmReset = _ShelfConnDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 14),
    _ShelfConnDataLayerPmReset_Type()
)
shelfConnDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfConnDataLayerPmReset.setStatus("current")
_ShelfConnAutonegotiation_Type = EnableState
_ShelfConnAutonegotiation_Object = MibTableColumn
shelfConnAutonegotiation = _ShelfConnAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 15),
    _ShelfConnAutonegotiation_Type()
)
shelfConnAutonegotiation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnAutonegotiation.setStatus("current")
_ShelfConnBitrate_Type = FspR7Bitrate
_ShelfConnBitrate_Object = MibTableColumn
shelfConnBitrate = _ShelfConnBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 16),
    _ShelfConnBitrate_Type()
)
shelfConnBitrate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnBitrate.setStatus("current")
_ShelfConnDuplex_Type = EthDuplexMode
_ShelfConnDuplex_Object = MibTableColumn
shelfConnDuplex = _ShelfConnDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 17),
    _ShelfConnDuplex_Type()
)
shelfConnDuplex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnDuplex.setStatus("current")
_ShelfConnMdix_Type = FspR7InterfaceCrossover
_ShelfConnMdix_Object = MibTableColumn
shelfConnMdix = _ShelfConnMdix_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 1, 1, 18),
    _ShelfConnMdix_Type()
)
shelfConnMdix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfConnMdix.setStatus("current")
_EndOfShelfConnTable_Type = Integer32
_EndOfShelfConnTable_Object = MibScalar
endOfShelfConnTable = _EndOfShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 2),
    _EndOfShelfConnTable_Type()
)
endOfShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfShelfConnTable.setStatus("current")
_EndOfShelfConnMgmt_Type = Integer32
_EndOfShelfConnMgmt_Object = MibScalar
endOfShelfConnMgmt = _EndOfShelfConnMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 7, 10000),
    _EndOfShelfConnMgmt_Type()
)
endOfShelfConnMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfShelfConnMgmt.setStatus("current")
_EnvMgmt_ObjectIdentity = ObjectIdentity
envMgmt = _EnvMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8)
)
_EnvPortTable_Object = MibTable
envPortTable = _EnvPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1)
)
if mibBuilder.loadTexts:
    envPortTable.setStatus("current")
_EnvPortEntry_Object = MibTableRow
envPortEntry = _EnvPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1)
)
envPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    envPortEntry.setStatus("current")
_EnvPortRowStatus_Type = RowStatus
_EnvPortRowStatus_Object = MibTableColumn
envPortRowStatus = _EnvPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 1),
    _EnvPortRowStatus_Type()
)
envPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortRowStatus.setStatus("current")
_EnvPortConnectorType_Type = FspR7ConnectorType
_EnvPortConnectorType_Object = MibTableColumn
envPortConnectorType = _EnvPortConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 2),
    _EnvPortConnectorType_Type()
)
envPortConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envPortConnectorType.setStatus("current")
_EnvPortTelemetry_Type = FspR7TelemetryOutput
_EnvPortTelemetry_Object = MibTableColumn
envPortTelemetry = _EnvPortTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 3),
    _EnvPortTelemetry_Type()
)
envPortTelemetry.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortTelemetry.setStatus("current")
_EnvPortFacilityType_Type = FspR7InterfaceType
_EnvPortFacilityType_Object = MibTableColumn
envPortFacilityType = _EnvPortFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 4),
    _EnvPortFacilityType_Type()
)
envPortFacilityType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortFacilityType.setStatus("current")
_EnvPortTifAlarmType_Type = SnmpAdminString
_EnvPortTifAlarmType_Object = MibTableColumn
envPortTifAlarmType = _EnvPortTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 5),
    _EnvPortTifAlarmType_Type()
)
envPortTifAlarmType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortTifAlarmType.setStatus("current")
_EnvPortTifAlarmMessage_Type = SnmpAdminString
_EnvPortTifAlarmMessage_Object = MibTableColumn
envPortTifAlarmMessage = _EnvPortTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 6),
    _EnvPortTifAlarmMessage_Type()
)
envPortTifAlarmMessage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortTifAlarmMessage.setStatus("current")
_EnvPortInvertTifInputLogic_Type = FspR7InvertTelemetryInputLogic
_EnvPortInvertTifInputLogic_Object = MibTableColumn
envPortInvertTifInputLogic = _EnvPortInvertTifInputLogic_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 1, 1, 7),
    _EnvPortInvertTifInputLogic_Type()
)
envPortInvertTifInputLogic.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    envPortInvertTifInputLogic.setStatus("current")
_EndOfEnvPortTable_Type = Integer32
_EndOfEnvPortTable_Object = MibScalar
endOfEnvPortTable = _EndOfEnvPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 2),
    _EndOfEnvPortTable_Type()
)
endOfEnvPortTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEnvPortTable.setStatus("current")
_EndOfEnvMgmt_Type = Integer32
_EndOfEnvMgmt_Object = MibScalar
endOfEnvMgmt = _EndOfEnvMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 8, 10000),
    _EndOfEnvMgmt_Type()
)
endOfEnvMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEnvMgmt.setStatus("current")
_ContainerMgmt_ObjectIdentity = ObjectIdentity
containerMgmt = _ContainerMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9)
)
_ContainerTable_Object = MibTable
containerTable = _ContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1)
)
if mibBuilder.loadTexts:
    containerTable.setStatus("current")
_ContainerEntry_Object = MibTableRow
containerEntry = _ContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1)
)
containerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerClassName"),
)
if mibBuilder.loadTexts:
    containerEntry.setStatus("current")
_ContainerRowStatus_Type = RowStatus
_ContainerRowStatus_Object = MibTableColumn
containerRowStatus = _ContainerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 1),
    _ContainerRowStatus_Type()
)
containerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    containerRowStatus.setStatus("current")
_ContainerAdmin_Type = FspR7AdminState
_ContainerAdmin_Object = MibTableColumn
containerAdmin = _ContainerAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 2),
    _ContainerAdmin_Type()
)
containerAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerAdmin.setStatus("current")
_ContainerSequenceNumber_Type = Unsigned32
_ContainerSequenceNumber_Object = MibTableColumn
containerSequenceNumber = _ContainerSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 3),
    _ContainerSequenceNumber_Type()
)
containerSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerSequenceNumber.setStatus("current")
_ContainerFacilityType_Type = FspR7InterfaceType
_ContainerFacilityType_Object = MibTableColumn
containerFacilityType = _ContainerFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 4),
    _ContainerFacilityType_Type()
)
containerFacilityType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    containerFacilityType.setStatus("current")
_ContainerContainer_Type = SnmpAdminString
_ContainerContainer_Object = MibTableColumn
containerContainer = _ContainerContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 5),
    _ContainerContainer_Type()
)
containerContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerContainer.setStatus("current")
_ContainerVSContainer_Type = SnmpAdminString
_ContainerVSContainer_Object = MibTableColumn
containerVSContainer = _ContainerVSContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 6),
    _ContainerVSContainer_Type()
)
containerVSContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerVSContainer.setStatus("current")
_ContainerSecondaryStates_Type = FspR7EntitySecondaryStates
_ContainerSecondaryStates_Object = MibTableColumn
containerSecondaryStates = _ContainerSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 7),
    _ContainerSecondaryStates_Type()
)
containerSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerSecondaryStates.setStatus("current")
_ContainerOperState_Type = FspR7OperState
_ContainerOperState_Object = MibTableColumn
containerOperState = _ContainerOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 1, 1, 8),
    _ContainerOperState_Type()
)
containerOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerOperState.setStatus("current")
_EndOfContainerTable_Type = Integer32
_EndOfContainerTable_Object = MibScalar
endOfContainerTable = _EndOfContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 2),
    _EndOfContainerTable_Type()
)
endOfContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfContainerTable.setStatus("current")
_EndOfContainerMgmt_Type = Integer32
_EndOfContainerMgmt_Object = MibScalar
endOfContainerMgmt = _EndOfContainerMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 9, 10000),
    _EndOfContainerMgmt_Type()
)
endOfContainerMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfContainerMgmt.setStatus("current")
_OpticalLineMgmt_ObjectIdentity = ObjectIdentity
opticalLineMgmt = _OpticalLineMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10)
)
_OpticalLineTable_Object = MibTable
opticalLineTable = _OpticalLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1)
)
if mibBuilder.loadTexts:
    opticalLineTable.setStatus("current")
_OpticalLineEntry_Object = MibTableRow
opticalLineEntry = _OpticalLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1)
)
opticalLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityOptLineClassName"),
)
if mibBuilder.loadTexts:
    opticalLineEntry.setStatus("current")
_OpticalLineRowStatus_Type = RowStatus
_OpticalLineRowStatus_Object = MibTableColumn
opticalLineRowStatus = _OpticalLineRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 1),
    _OpticalLineRowStatus_Type()
)
opticalLineRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineRowStatus.setStatus("current")
_OpticalLineTxLineAttenuation_Type = Integer32
_OpticalLineTxLineAttenuation_Object = MibTableColumn
opticalLineTxLineAttenuation = _OpticalLineTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 2),
    _OpticalLineTxLineAttenuation_Type()
)
opticalLineTxLineAttenuation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalLineTxLineAttenuation.setUnits("0.1 dB")
_OpticalLineRxLineAttenuation_Type = Integer32
_OpticalLineRxLineAttenuation_Object = MibTableColumn
opticalLineRxLineAttenuation = _OpticalLineRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 3),
    _OpticalLineRxLineAttenuation_Type()
)
opticalLineRxLineAttenuation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalLineRxLineAttenuation.setUnits("0.1 dB")
_OpticalLineAlias_Type = SnmpAdminString
_OpticalLineAlias_Object = MibTableColumn
opticalLineAlias = _OpticalLineAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 4),
    _OpticalLineAlias_Type()
)
opticalLineAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineAlias.setStatus("current")
_OpticalLineFarEndLocation_Type = SnmpAdminString
_OpticalLineFarEndLocation_Object = MibTableColumn
opticalLineFarEndLocation = _OpticalLineFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 5),
    _OpticalLineFarEndLocation_Type()
)
opticalLineFarEndLocation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineFarEndLocation.setStatus("current")
_OpticalLineLaneChannel1_Type = FspR7ChannelIdentifier
_OpticalLineLaneChannel1_Object = MibTableColumn
opticalLineLaneChannel1 = _OpticalLineLaneChannel1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 6),
    _OpticalLineLaneChannel1_Type()
)
opticalLineLaneChannel1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLaneChannel1.setStatus("current")
_OpticalLineLaneChannel2_Type = FspR7ChannelIdentifier
_OpticalLineLaneChannel2_Object = MibTableColumn
opticalLineLaneChannel2 = _OpticalLineLaneChannel2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 7),
    _OpticalLineLaneChannel2_Type()
)
opticalLineLaneChannel2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLaneChannel2.setStatus("current")
_OpticalLineLaneChannel3_Type = FspR7ChannelIdentifier
_OpticalLineLaneChannel3_Object = MibTableColumn
opticalLineLaneChannel3 = _OpticalLineLaneChannel3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 8),
    _OpticalLineLaneChannel3_Type()
)
opticalLineLaneChannel3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLaneChannel3.setStatus("current")
_OpticalLineLaneChannel4_Type = FspR7ChannelIdentifier
_OpticalLineLaneChannel4_Object = MibTableColumn
opticalLineLaneChannel4 = _OpticalLineLaneChannel4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 9),
    _OpticalLineLaneChannel4_Type()
)
opticalLineLaneChannel4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLaneChannel4.setStatus("current")
_OpticalLineLanes_Type = FspR7OpticalLanes
_OpticalLineLanes_Object = MibTableColumn
opticalLineLanes = _OpticalLineLanes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 10),
    _OpticalLineLanes_Type()
)
opticalLineLanes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLanes.setStatus("current")
_OpticalLineChannelBandwith_Type = FspR7ChannelBandwidth
_OpticalLineChannelBandwith_Object = MibTableColumn
opticalLineChannelBandwith = _OpticalLineChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 11),
    _OpticalLineChannelBandwith_Type()
)
opticalLineChannelBandwith.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineChannelBandwith.setStatus("current")
_OpticalLineChannelSpacing_Type = FspR7ChannelSpacing
_OpticalLineChannelSpacing_Object = MibTableColumn
opticalLineChannelSpacing = _OpticalLineChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 12),
    _OpticalLineChannelSpacing_Type()
)
opticalLineChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineChannelSpacing.setStatus("current")
_OpticalLineFacilities_Type = SnmpAdminString
_OpticalLineFacilities_Object = MibTableColumn
opticalLineFacilities = _OpticalLineFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 13),
    _OpticalLineFacilities_Type()
)
opticalLineFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineFacilities.setStatus("current")
_OpticalLineSecondaryStates_Type = FspR7EntitySecondaryStates
_OpticalLineSecondaryStates_Object = MibTableColumn
opticalLineSecondaryStates = _OpticalLineSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 14),
    _OpticalLineSecondaryStates_Type()
)
opticalLineSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineSecondaryStates.setStatus("current")
_OpticalLineConnState_Type = FspR7ConnectState
_OpticalLineConnState_Object = MibTableColumn
opticalLineConnState = _OpticalLineConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 15),
    _OpticalLineConnState_Type()
)
opticalLineConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineConnState.setStatus("current")
_OpticalLineLogicalInterfaceAid_Type = SnmpAdminString
_OpticalLineLogicalInterfaceAid_Object = MibTableColumn
opticalLineLogicalInterfaceAid = _OpticalLineLogicalInterfaceAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 16),
    _OpticalLineLogicalInterfaceAid_Type()
)
opticalLineLogicalInterfaceAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineLogicalInterfaceAid.setStatus("current")
_OpticalLineOwnerAid_Type = SnmpAdminString
_OpticalLineOwnerAid_Object = MibTableColumn
opticalLineOwnerAid = _OpticalLineOwnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 17),
    _OpticalLineOwnerAid_Type()
)
opticalLineOwnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineOwnerAid.setStatus("current")
_OpticalLineTransmitWavelength_Type = Unsigned32
_OpticalLineTransmitWavelength_Object = MibTableColumn
opticalLineTransmitWavelength = _OpticalLineTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 18),
    _OpticalLineTransmitWavelength_Type()
)
opticalLineTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    opticalLineTransmitWavelength.setUnits("0.01 nm")
_OpticalLineTransmitFrequency_Type = Unsigned32
_OpticalLineTransmitFrequency_Object = MibTableColumn
opticalLineTransmitFrequency = _OpticalLineTransmitFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 19),
    _OpticalLineTransmitFrequency_Type()
)
opticalLineTransmitFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineTransmitFrequency.setStatus("current")
if mibBuilder.loadTexts:
    opticalLineTransmitFrequency.setUnits("0.01 THz")
_OpticalLineTransmitChannel_Type = FspR7ChannelIdentifier
_OpticalLineTransmitChannel_Object = MibTableColumn
opticalLineTransmitChannel = _OpticalLineTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 20),
    _OpticalLineTransmitChannel_Type()
)
opticalLineTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLineTransmitChannel.setStatus("current")


class _OpticalLineFiberLength_Type(Unsigned32):
    """Custom type opticalLineFiberLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_OpticalLineFiberLength_Type.__name__ = "Unsigned32"
_OpticalLineFiberLength_Object = MibTableColumn
opticalLineFiberLength = _OpticalLineFiberLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 1, 1, 21),
    _OpticalLineFiberLength_Type()
)
opticalLineFiberLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    opticalLineFiberLength.setStatus("current")
if mibBuilder.loadTexts:
    opticalLineFiberLength.setUnits("km")
_EndOfOpticalLineTable_Type = Integer32
_EndOfOpticalLineTable_Object = MibScalar
endOfOpticalLineTable = _EndOfOpticalLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 2),
    _EndOfOpticalLineTable_Type()
)
endOfOpticalLineTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfOpticalLineTable.setStatus("current")
_EndOfOpticalLineMgmt_Type = Integer32
_EndOfOpticalLineMgmt_Object = MibScalar
endOfOpticalLineMgmt = _EndOfOpticalLineMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 3, 10, 10000),
    _EndOfOpticalLineMgmt_Type()
)
endOfOpticalLineMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfOpticalLineMgmt.setStatus("current")
_Alarm_ObjectIdentity = ObjectIdentity
alarm = _Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4)
)
_AlarmSysTable_Object = MibTable
alarmSysTable = _AlarmSysTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1)
)
if mibBuilder.loadTexts:
    alarmSysTable.setStatus("current")
_AlarmSysEntry_Object = MibTableRow
alarmSysEntry = _AlarmSysEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1, 1)
)
alarmSysEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entitySysShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysPortNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysExtNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSysType"),
)
if mibBuilder.loadTexts:
    alarmSysEntry.setStatus("current")
_AlarmSysType_Type = FspR7AlarmListType
_AlarmSysType_Object = MibTableColumn
alarmSysType = _AlarmSysType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1, 1, 1),
    _AlarmSysType_Type()
)
alarmSysType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSysType.setStatus("current")
_AlarmSysSeverity_Type = TrapAlarmSeverity
_AlarmSysSeverity_Object = MibTableColumn
alarmSysSeverity = _AlarmSysSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1, 1, 2),
    _AlarmSysSeverity_Type()
)
alarmSysSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmSysSeverity.setStatus("current")
_AlarmSysAffect_Type = ServiceImpairment
_AlarmSysAffect_Object = MibTableColumn
alarmSysAffect = _AlarmSysAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1, 1, 3),
    _AlarmSysAffect_Type()
)
alarmSysAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmSysAffect.setStatus("current")
_AlarmSysTimeStamp_Type = DateAndTime
_AlarmSysTimeStamp_Object = MibTableColumn
alarmSysTimeStamp = _AlarmSysTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1, 1, 4),
    _AlarmSysTimeStamp_Type()
)
alarmSysTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmSysTimeStamp.setStatus("current")
_EndOfAlarmSysTable_Type = Integer32
_EndOfAlarmSysTable_Object = MibScalar
endOfAlarmSysTable = _EndOfAlarmSysTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 2),
    _EndOfAlarmSysTable_Type()
)
endOfAlarmSysTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSysTable.setStatus("current")
_AlarmSeveritySysTable_Object = MibTable
alarmSeveritySysTable = _AlarmSeveritySysTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 3)
)
if mibBuilder.loadTexts:
    alarmSeveritySysTable.setStatus("current")
_AlarmSeveritySysEntry_Object = MibTableRow
alarmSeveritySysEntry = _AlarmSeveritySysEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 3, 1)
)
alarmSeveritySysEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entitySysShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysPortNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysExtNo"),
    (0, "ADVA-FSPR7-MIB", "entitySysClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeveritySysType"),
)
if mibBuilder.loadTexts:
    alarmSeveritySysEntry.setStatus("current")
_AlarmSeveritySysType_Type = FspR7AlarmListType
_AlarmSeveritySysType_Object = MibTableColumn
alarmSeveritySysType = _AlarmSeveritySysType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 3, 1, 1),
    _AlarmSeveritySysType_Type()
)
alarmSeveritySysType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeveritySysType.setStatus("current")
_AlarmSeveritySysValue_Type = TrapAlarmSeverity
_AlarmSeveritySysValue_Object = MibTableColumn
alarmSeveritySysValue = _AlarmSeveritySysValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 3, 1, 2),
    _AlarmSeveritySysValue_Type()
)
alarmSeveritySysValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeveritySysValue.setStatus("current")
_EndOfAlarmSeveritySysTable_Type = Integer32
_EndOfAlarmSeveritySysTable_Object = MibScalar
endOfAlarmSeveritySysTable = _EndOfAlarmSeveritySysTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 4),
    _EndOfAlarmSeveritySysTable_Type()
)
endOfAlarmSeveritySysTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeveritySysTable.setStatus("current")
_AlarmEqptTable_Object = MibTable
alarmEqptTable = _AlarmEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5)
)
if mibBuilder.loadTexts:
    alarmEqptTable.setStatus("current")
_AlarmEqptEntry_Object = MibTableRow
alarmEqptEntry = _AlarmEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5, 1)
)
alarmEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmEqptType"),
)
if mibBuilder.loadTexts:
    alarmEqptEntry.setStatus("current")
_AlarmEqptType_Type = FspR7AlarmListType
_AlarmEqptType_Object = MibTableColumn
alarmEqptType = _AlarmEqptType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5, 1, 1),
    _AlarmEqptType_Type()
)
alarmEqptType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmEqptType.setStatus("current")
_AlarmEqptSeverity_Type = TrapAlarmSeverity
_AlarmEqptSeverity_Object = MibTableColumn
alarmEqptSeverity = _AlarmEqptSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5, 1, 2),
    _AlarmEqptSeverity_Type()
)
alarmEqptSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEqptSeverity.setStatus("current")
_AlarmEqptAffect_Type = ServiceImpairment
_AlarmEqptAffect_Object = MibTableColumn
alarmEqptAffect = _AlarmEqptAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5, 1, 3),
    _AlarmEqptAffect_Type()
)
alarmEqptAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEqptAffect.setStatus("current")
_AlarmEqptTimeStamp_Type = DateAndTime
_AlarmEqptTimeStamp_Object = MibTableColumn
alarmEqptTimeStamp = _AlarmEqptTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 5, 1, 4),
    _AlarmEqptTimeStamp_Type()
)
alarmEqptTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEqptTimeStamp.setStatus("current")
_EndOfAlarmEqptTable_Type = Integer32
_EndOfAlarmEqptTable_Object = MibScalar
endOfAlarmEqptTable = _EndOfAlarmEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 6),
    _EndOfAlarmEqptTable_Type()
)
endOfAlarmEqptTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmEqptTable.setStatus("current")
_AlarmFacilityTable_Object = MibTable
alarmFacilityTable = _AlarmFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7)
)
if mibBuilder.loadTexts:
    alarmFacilityTable.setStatus("current")
_AlarmFacilityEntry_Object = MibTableRow
alarmFacilityEntry = _AlarmFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7, 1)
)
alarmFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmFacilityType"),
)
if mibBuilder.loadTexts:
    alarmFacilityEntry.setStatus("current")
_AlarmFacilityType_Type = FspR7AlarmListType
_AlarmFacilityType_Object = MibTableColumn
alarmFacilityType = _AlarmFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7, 1, 1),
    _AlarmFacilityType_Type()
)
alarmFacilityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmFacilityType.setStatus("current")
_AlarmFacilitySeverity_Type = TrapAlarmSeverity
_AlarmFacilitySeverity_Object = MibTableColumn
alarmFacilitySeverity = _AlarmFacilitySeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7, 1, 2),
    _AlarmFacilitySeverity_Type()
)
alarmFacilitySeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmFacilitySeverity.setStatus("current")
_AlarmFacilityAffect_Type = ServiceImpairment
_AlarmFacilityAffect_Object = MibTableColumn
alarmFacilityAffect = _AlarmFacilityAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7, 1, 3),
    _AlarmFacilityAffect_Type()
)
alarmFacilityAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmFacilityAffect.setStatus("current")
_AlarmFacilityTimeStamp_Type = DateAndTime
_AlarmFacilityTimeStamp_Object = MibTableColumn
alarmFacilityTimeStamp = _AlarmFacilityTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 7, 1, 4),
    _AlarmFacilityTimeStamp_Type()
)
alarmFacilityTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmFacilityTimeStamp.setStatus("current")
_AlarmSeverityFacilityTable_Object = MibTable
alarmSeverityFacilityTable = _AlarmSeverityFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 8)
)
if mibBuilder.loadTexts:
    alarmSeverityFacilityTable.setStatus("current")
_AlarmSeverityFacilityEntry_Object = MibTableRow
alarmSeverityFacilityEntry = _AlarmSeverityFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 8, 1)
)
alarmSeverityFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityFacilityType"),
)
if mibBuilder.loadTexts:
    alarmSeverityFacilityEntry.setStatus("current")
_AlarmSeverityFacilityType_Type = FspR7AlarmListType
_AlarmSeverityFacilityType_Object = MibTableColumn
alarmSeverityFacilityType = _AlarmSeverityFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 8, 1, 1),
    _AlarmSeverityFacilityType_Type()
)
alarmSeverityFacilityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityFacilityType.setStatus("current")
_AlarmSeverityFacilityValue_Type = TrapAlarmSeverity
_AlarmSeverityFacilityValue_Object = MibTableColumn
alarmSeverityFacilityValue = _AlarmSeverityFacilityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 8, 1, 2),
    _AlarmSeverityFacilityValue_Type()
)
alarmSeverityFacilityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityFacilityValue.setStatus("current")
_AlarmTerminPointTable_Object = MibTable
alarmTerminPointTable = _AlarmTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9)
)
if mibBuilder.loadTexts:
    alarmTerminPointTable.setStatus("current")
_AlarmTerminPointEntry_Object = MibTableRow
alarmTerminPointEntry = _AlarmTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9, 1)
)
alarmTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmTerminPointType"),
)
if mibBuilder.loadTexts:
    alarmTerminPointEntry.setStatus("current")
_AlarmTerminPointType_Type = FspR7AlarmListType
_AlarmTerminPointType_Object = MibTableColumn
alarmTerminPointType = _AlarmTerminPointType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9, 1, 1),
    _AlarmTerminPointType_Type()
)
alarmTerminPointType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmTerminPointType.setStatus("current")
_AlarmTerminPointSeverity_Type = TrapAlarmSeverity
_AlarmTerminPointSeverity_Object = MibTableColumn
alarmTerminPointSeverity = _AlarmTerminPointSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9, 1, 2),
    _AlarmTerminPointSeverity_Type()
)
alarmTerminPointSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmTerminPointSeverity.setStatus("current")
_AlarmTerminPointAffect_Type = ServiceImpairment
_AlarmTerminPointAffect_Object = MibTableColumn
alarmTerminPointAffect = _AlarmTerminPointAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9, 1, 3),
    _AlarmTerminPointAffect_Type()
)
alarmTerminPointAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmTerminPointAffect.setStatus("current")
_AlarmTerminPointTimeStamp_Type = DateAndTime
_AlarmTerminPointTimeStamp_Object = MibTableColumn
alarmTerminPointTimeStamp = _AlarmTerminPointTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 9, 1, 4),
    _AlarmTerminPointTimeStamp_Type()
)
alarmTerminPointTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmTerminPointTimeStamp.setStatus("current")
_AlarmSeverityTerminPointTable_Object = MibTable
alarmSeverityTerminPointTable = _AlarmSeverityTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 10)
)
if mibBuilder.loadTexts:
    alarmSeverityTerminPointTable.setStatus("current")
_AlarmSeverityTerminPointEntry_Object = MibTableRow
alarmSeverityTerminPointEntry = _AlarmSeverityTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 10, 1)
)
alarmSeverityTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityTerminPointType"),
)
if mibBuilder.loadTexts:
    alarmSeverityTerminPointEntry.setStatus("current")
_AlarmSeverityTerminPointType_Type = FspR7AlarmListType
_AlarmSeverityTerminPointType_Object = MibTableColumn
alarmSeverityTerminPointType = _AlarmSeverityTerminPointType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 10, 1, 1),
    _AlarmSeverityTerminPointType_Type()
)
alarmSeverityTerminPointType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityTerminPointType.setStatus("current")
_AlarmSeverityTerminPointValue_Type = TrapAlarmSeverity
_AlarmSeverityTerminPointValue_Object = MibTableColumn
alarmSeverityTerminPointValue = _AlarmSeverityTerminPointValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 10, 1, 2),
    _AlarmSeverityTerminPointValue_Type()
)
alarmSeverityTerminPointValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityTerminPointValue.setStatus("current")
_AlarmExternalPortTable_Object = MibTable
alarmExternalPortTable = _AlarmExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11)
)
if mibBuilder.loadTexts:
    alarmExternalPortTable.setStatus("current")
_AlarmExternalPortEntry_Object = MibTableRow
alarmExternalPortEntry = _AlarmExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11, 1)
)
alarmExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmExternalPortType"),
)
if mibBuilder.loadTexts:
    alarmExternalPortEntry.setStatus("current")
_AlarmExternalPortType_Type = FspR7AlarmListType
_AlarmExternalPortType_Object = MibTableColumn
alarmExternalPortType = _AlarmExternalPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11, 1, 1),
    _AlarmExternalPortType_Type()
)
alarmExternalPortType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmExternalPortType.setStatus("current")
_AlarmExternalPortSeverity_Type = TrapAlarmSeverity
_AlarmExternalPortSeverity_Object = MibTableColumn
alarmExternalPortSeverity = _AlarmExternalPortSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11, 1, 2),
    _AlarmExternalPortSeverity_Type()
)
alarmExternalPortSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmExternalPortSeverity.setStatus("current")
_AlarmExternalPortAffect_Type = ServiceImpairment
_AlarmExternalPortAffect_Object = MibTableColumn
alarmExternalPortAffect = _AlarmExternalPortAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11, 1, 3),
    _AlarmExternalPortAffect_Type()
)
alarmExternalPortAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmExternalPortAffect.setStatus("current")
_AlarmExternalPortTimeStamp_Type = DateAndTime
_AlarmExternalPortTimeStamp_Object = MibTableColumn
alarmExternalPortTimeStamp = _AlarmExternalPortTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 11, 1, 4),
    _AlarmExternalPortTimeStamp_Type()
)
alarmExternalPortTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmExternalPortTimeStamp.setStatus("current")
_AlarmSeverityExternalPortTable_Object = MibTable
alarmSeverityExternalPortTable = _AlarmSeverityExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 12)
)
if mibBuilder.loadTexts:
    alarmSeverityExternalPortTable.setStatus("current")
_AlarmSeverityExternalPortEntry_Object = MibTableRow
alarmSeverityExternalPortEntry = _AlarmSeverityExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 12, 1)
)
alarmSeverityExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityExternalPortType"),
)
if mibBuilder.loadTexts:
    alarmSeverityExternalPortEntry.setStatus("current")
_AlarmSeverityExternalPortType_Type = FspR7AlarmListType
_AlarmSeverityExternalPortType_Object = MibTableColumn
alarmSeverityExternalPortType = _AlarmSeverityExternalPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 12, 1, 1),
    _AlarmSeverityExternalPortType_Type()
)
alarmSeverityExternalPortType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityExternalPortType.setStatus("current")
_AlarmSeverityExternalPortValue_Type = TrapAlarmSeverity
_AlarmSeverityExternalPortValue_Object = MibTableColumn
alarmSeverityExternalPortValue = _AlarmSeverityExternalPortValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 12, 1, 2),
    _AlarmSeverityExternalPortValue_Type()
)
alarmSeverityExternalPortValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityExternalPortValue.setStatus("current")
_EndOfAlarmSeverityExternalPortTable_Type = Integer32
_EndOfAlarmSeverityExternalPortTable_Object = MibScalar
endOfAlarmSeverityExternalPortTable = _EndOfAlarmSeverityExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 13),
    _EndOfAlarmSeverityExternalPortTable_Type()
)
endOfAlarmSeverityExternalPortTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityExternalPortTable.setStatus("current")
_AlarmSeverityEqptTable_Object = MibTable
alarmSeverityEqptTable = _AlarmSeverityEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 14)
)
if mibBuilder.loadTexts:
    alarmSeverityEqptTable.setStatus("current")
_AlarmSeverityEqptEntry_Object = MibTableRow
alarmSeverityEqptEntry = _AlarmSeverityEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 14, 1)
)
alarmSeverityEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityEqptType"),
)
if mibBuilder.loadTexts:
    alarmSeverityEqptEntry.setStatus("current")
_AlarmSeverityEqptType_Type = FspR7AlarmListType
_AlarmSeverityEqptType_Object = MibTableColumn
alarmSeverityEqptType = _AlarmSeverityEqptType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 14, 1, 1),
    _AlarmSeverityEqptType_Type()
)
alarmSeverityEqptType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityEqptType.setStatus("current")
_AlarmSeverityEqptValue_Type = TrapAlarmSeverity
_AlarmSeverityEqptValue_Object = MibTableColumn
alarmSeverityEqptValue = _AlarmSeverityEqptValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 14, 1, 2),
    _AlarmSeverityEqptValue_Type()
)
alarmSeverityEqptValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityEqptValue.setStatus("current")
_EndOfAlarmSeverityEqptTable_Type = Integer32
_EndOfAlarmSeverityEqptTable_Object = MibScalar
endOfAlarmSeverityEqptTable = _EndOfAlarmSeverityEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 15),
    _EndOfAlarmSeverityEqptTable_Type()
)
endOfAlarmSeverityEqptTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityEqptTable.setStatus("current")
_AlarmDcnTable_Object = MibTable
alarmDcnTable = _AlarmDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16)
)
if mibBuilder.loadTexts:
    alarmDcnTable.setStatus("current")
_AlarmDcnEntry_Object = MibTableRow
alarmDcnEntry = _AlarmDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16, 1)
)
alarmDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmDcnType"),
)
if mibBuilder.loadTexts:
    alarmDcnEntry.setStatus("current")
_AlarmDcnType_Type = FspR7AlarmListType
_AlarmDcnType_Object = MibTableColumn
alarmDcnType = _AlarmDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16, 1, 1),
    _AlarmDcnType_Type()
)
alarmDcnType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmDcnType.setStatus("current")
_AlarmDcnSeverity_Type = TrapAlarmSeverity
_AlarmDcnSeverity_Object = MibTableColumn
alarmDcnSeverity = _AlarmDcnSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16, 1, 2),
    _AlarmDcnSeverity_Type()
)
alarmDcnSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmDcnSeverity.setStatus("current")
_AlarmDcnAffect_Type = ServiceImpairment
_AlarmDcnAffect_Object = MibTableColumn
alarmDcnAffect = _AlarmDcnAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16, 1, 3),
    _AlarmDcnAffect_Type()
)
alarmDcnAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmDcnAffect.setStatus("current")
_AlarmDcnTimeStamp_Type = DateAndTime
_AlarmDcnTimeStamp_Object = MibTableColumn
alarmDcnTimeStamp = _AlarmDcnTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 16, 1, 4),
    _AlarmDcnTimeStamp_Type()
)
alarmDcnTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmDcnTimeStamp.setStatus("current")
_EndOfAlarmDcnTable_Type = Integer32
_EndOfAlarmDcnTable_Object = MibScalar
endOfAlarmDcnTable = _EndOfAlarmDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 17),
    _EndOfAlarmDcnTable_Type()
)
endOfAlarmDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmDcnTable.setStatus("current")
_AlarmSeverityDcnTable_Object = MibTable
alarmSeverityDcnTable = _AlarmSeverityDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 18)
)
if mibBuilder.loadTexts:
    alarmSeverityDcnTable.setStatus("current")
_AlarmSeverityDcnEntry_Object = MibTableRow
alarmSeverityDcnEntry = _AlarmSeverityDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 18, 1)
)
alarmSeverityDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityDcnType"),
)
if mibBuilder.loadTexts:
    alarmSeverityDcnEntry.setStatus("current")
_AlarmSeverityDcnType_Type = FspR7AlarmListType
_AlarmSeverityDcnType_Object = MibTableColumn
alarmSeverityDcnType = _AlarmSeverityDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 18, 1, 1),
    _AlarmSeverityDcnType_Type()
)
alarmSeverityDcnType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityDcnType.setStatus("current")
_AlarmSeverityDcnValue_Type = TrapAlarmSeverity
_AlarmSeverityDcnValue_Object = MibTableColumn
alarmSeverityDcnValue = _AlarmSeverityDcnValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 18, 1, 2),
    _AlarmSeverityDcnValue_Type()
)
alarmSeverityDcnValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityDcnValue.setStatus("current")
_EndOfAlarmSeverityDcnTable_Type = Integer32
_EndOfAlarmSeverityDcnTable_Object = MibScalar
endOfAlarmSeverityDcnTable = _EndOfAlarmSeverityDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 19),
    _EndOfAlarmSeverityDcnTable_Type()
)
endOfAlarmSeverityDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityDcnTable.setStatus("current")
_AlarmEnvTable_Object = MibTable
alarmEnvTable = _AlarmEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20)
)
if mibBuilder.loadTexts:
    alarmEnvTable.setStatus("current")
_AlarmEnvEntry_Object = MibTableRow
alarmEnvEntry = _AlarmEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20, 1)
)
alarmEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmEnvType"),
)
if mibBuilder.loadTexts:
    alarmEnvEntry.setStatus("current")
_AlarmEnvType_Type = FspR7AlarmListType
_AlarmEnvType_Object = MibTableColumn
alarmEnvType = _AlarmEnvType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20, 1, 1),
    _AlarmEnvType_Type()
)
alarmEnvType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmEnvType.setStatus("current")
_AlarmEnvSeverity_Type = TrapAlarmSeverity
_AlarmEnvSeverity_Object = MibTableColumn
alarmEnvSeverity = _AlarmEnvSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20, 1, 2),
    _AlarmEnvSeverity_Type()
)
alarmEnvSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEnvSeverity.setStatus("current")
_AlarmEnvAffect_Type = ServiceImpairment
_AlarmEnvAffect_Object = MibTableColumn
alarmEnvAffect = _AlarmEnvAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20, 1, 3),
    _AlarmEnvAffect_Type()
)
alarmEnvAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEnvAffect.setStatus("current")
_AlarmEnvTimeStamp_Type = DateAndTime
_AlarmEnvTimeStamp_Object = MibTableColumn
alarmEnvTimeStamp = _AlarmEnvTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 20, 1, 4),
    _AlarmEnvTimeStamp_Type()
)
alarmEnvTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmEnvTimeStamp.setStatus("current")
_EndOfAlarmEnvTable_Type = Integer32
_EndOfAlarmEnvTable_Object = MibScalar
endOfAlarmEnvTable = _EndOfAlarmEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 21),
    _EndOfAlarmEnvTable_Type()
)
endOfAlarmEnvTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmEnvTable.setStatus("current")
_AlarmSeverityEnvTable_Object = MibTable
alarmSeverityEnvTable = _AlarmSeverityEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 22)
)
if mibBuilder.loadTexts:
    alarmSeverityEnvTable.setStatus("current")
_AlarmSeverityEnvEntry_Object = MibTableRow
alarmSeverityEnvEntry = _AlarmSeverityEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 22, 1)
)
alarmSeverityEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEnvClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityEnvType"),
)
if mibBuilder.loadTexts:
    alarmSeverityEnvEntry.setStatus("current")
_AlarmSeverityEnvType_Type = FspR7AlarmListType
_AlarmSeverityEnvType_Object = MibTableColumn
alarmSeverityEnvType = _AlarmSeverityEnvType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 22, 1, 1),
    _AlarmSeverityEnvType_Type()
)
alarmSeverityEnvType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityEnvType.setStatus("current")
_AlarmSeverityEnvValue_Type = TrapAlarmSeverity
_AlarmSeverityEnvValue_Object = MibTableColumn
alarmSeverityEnvValue = _AlarmSeverityEnvValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 22, 1, 2),
    _AlarmSeverityEnvValue_Type()
)
alarmSeverityEnvValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityEnvValue.setStatus("current")
_EndOfAlarmSeverityEnvTable_Type = Integer32
_EndOfAlarmSeverityEnvTable_Object = MibScalar
endOfAlarmSeverityEnvTable = _EndOfAlarmSeverityEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 23),
    _EndOfAlarmSeverityEnvTable_Type()
)
endOfAlarmSeverityEnvTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityEnvTable.setStatus("current")
_AlarmContainerTable_Object = MibTable
alarmContainerTable = _AlarmContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24)
)
if mibBuilder.loadTexts:
    alarmContainerTable.setStatus("current")
_AlarmContainerEntry_Object = MibTableRow
alarmContainerEntry = _AlarmContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24, 1)
)
alarmContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmContainerType"),
)
if mibBuilder.loadTexts:
    alarmContainerEntry.setStatus("current")
_AlarmContainerType_Type = FspR7AlarmListType
_AlarmContainerType_Object = MibTableColumn
alarmContainerType = _AlarmContainerType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24, 1, 1),
    _AlarmContainerType_Type()
)
alarmContainerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmContainerType.setStatus("current")
_AlarmContainerSeverity_Type = TrapAlarmSeverity
_AlarmContainerSeverity_Object = MibTableColumn
alarmContainerSeverity = _AlarmContainerSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24, 1, 2),
    _AlarmContainerSeverity_Type()
)
alarmContainerSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmContainerSeverity.setStatus("current")
_AlarmContainerAffect_Type = ServiceImpairment
_AlarmContainerAffect_Object = MibTableColumn
alarmContainerAffect = _AlarmContainerAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24, 1, 3),
    _AlarmContainerAffect_Type()
)
alarmContainerAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmContainerAffect.setStatus("current")
_AlarmContainerTimeStamp_Type = DateAndTime
_AlarmContainerTimeStamp_Object = MibTableColumn
alarmContainerTimeStamp = _AlarmContainerTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 24, 1, 4),
    _AlarmContainerTimeStamp_Type()
)
alarmContainerTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmContainerTimeStamp.setStatus("current")
_EndOfAlarmContainerTable_Type = Integer32
_EndOfAlarmContainerTable_Object = MibScalar
endOfAlarmContainerTable = _EndOfAlarmContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 25),
    _EndOfAlarmContainerTable_Type()
)
endOfAlarmContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmContainerTable.setStatus("current")
_AlarmSeverityContainerTable_Object = MibTable
alarmSeverityContainerTable = _AlarmSeverityContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 26)
)
if mibBuilder.loadTexts:
    alarmSeverityContainerTable.setStatus("current")
_AlarmSeverityContainerEntry_Object = MibTableRow
alarmSeverityContainerEntry = _AlarmSeverityContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 26, 1)
)
alarmSeverityContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityContainerClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityContainerType"),
)
if mibBuilder.loadTexts:
    alarmSeverityContainerEntry.setStatus("current")
_AlarmSeverityContainerType_Type = FspR7AlarmListType
_AlarmSeverityContainerType_Object = MibTableColumn
alarmSeverityContainerType = _AlarmSeverityContainerType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 26, 1, 1),
    _AlarmSeverityContainerType_Type()
)
alarmSeverityContainerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityContainerType.setStatus("current")
_AlarmSeverityContainerValue_Type = TrapAlarmSeverity
_AlarmSeverityContainerValue_Object = MibTableColumn
alarmSeverityContainerValue = _AlarmSeverityContainerValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 26, 1, 2),
    _AlarmSeverityContainerValue_Type()
)
alarmSeverityContainerValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityContainerValue.setStatus("current")
_EndOfAlarmSeverityContainerTable_Type = Integer32
_EndOfAlarmSeverityContainerTable_Object = MibScalar
endOfAlarmSeverityContainerTable = _EndOfAlarmSeverityContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 27),
    _EndOfAlarmSeverityContainerTable_Type()
)
endOfAlarmSeverityContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityContainerTable.setStatus("current")
_AlarmOpticalMuxTable_Object = MibTable
alarmOpticalMuxTable = _AlarmOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28)
)
if mibBuilder.loadTexts:
    alarmOpticalMuxTable.setStatus("current")
_AlarmOpticalMuxEntry_Object = MibTableRow
alarmOpticalMuxEntry = _AlarmOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28, 1)
)
alarmOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmOpticalMuxType"),
)
if mibBuilder.loadTexts:
    alarmOpticalMuxEntry.setStatus("current")
_AlarmOpticalMuxType_Type = FspR7AlarmListType
_AlarmOpticalMuxType_Object = MibTableColumn
alarmOpticalMuxType = _AlarmOpticalMuxType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28, 1, 1),
    _AlarmOpticalMuxType_Type()
)
alarmOpticalMuxType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmOpticalMuxType.setStatus("current")
_AlarmOpticalMuxSeverity_Type = TrapAlarmSeverity
_AlarmOpticalMuxSeverity_Object = MibTableColumn
alarmOpticalMuxSeverity = _AlarmOpticalMuxSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28, 1, 2),
    _AlarmOpticalMuxSeverity_Type()
)
alarmOpticalMuxSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOpticalMuxSeverity.setStatus("current")
_AlarmOpticalMuxAffect_Type = ServiceImpairment
_AlarmOpticalMuxAffect_Object = MibTableColumn
alarmOpticalMuxAffect = _AlarmOpticalMuxAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28, 1, 3),
    _AlarmOpticalMuxAffect_Type()
)
alarmOpticalMuxAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOpticalMuxAffect.setStatus("current")
_AlarmOpticalMuxTimeStamp_Type = DateAndTime
_AlarmOpticalMuxTimeStamp_Object = MibTableColumn
alarmOpticalMuxTimeStamp = _AlarmOpticalMuxTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 28, 1, 4),
    _AlarmOpticalMuxTimeStamp_Type()
)
alarmOpticalMuxTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOpticalMuxTimeStamp.setStatus("current")
_EndOfAlarmOpticalMuxTable_Type = Integer32
_EndOfAlarmOpticalMuxTable_Object = MibScalar
endOfAlarmOpticalMuxTable = _EndOfAlarmOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 29),
    _EndOfAlarmOpticalMuxTable_Type()
)
endOfAlarmOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmOpticalMuxTable.setStatus("current")
_AlarmSeverityOpticalMuxTable_Object = MibTable
alarmSeverityOpticalMuxTable = _AlarmSeverityOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 30)
)
if mibBuilder.loadTexts:
    alarmSeverityOpticalMuxTable.setStatus("current")
_AlarmSeverityOpticalMuxEntry_Object = MibTableRow
alarmSeverityOpticalMuxEntry = _AlarmSeverityOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 30, 1)
)
alarmSeverityOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityOpticalMuxType"),
)
if mibBuilder.loadTexts:
    alarmSeverityOpticalMuxEntry.setStatus("current")
_AlarmSeverityOpticalMuxType_Type = FspR7AlarmListType
_AlarmSeverityOpticalMuxType_Object = MibTableColumn
alarmSeverityOpticalMuxType = _AlarmSeverityOpticalMuxType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 30, 1, 1),
    _AlarmSeverityOpticalMuxType_Type()
)
alarmSeverityOpticalMuxType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityOpticalMuxType.setStatus("current")
_AlarmSeverityOpticalMuxValue_Type = TrapAlarmSeverity
_AlarmSeverityOpticalMuxValue_Object = MibTableColumn
alarmSeverityOpticalMuxValue = _AlarmSeverityOpticalMuxValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 30, 1, 2),
    _AlarmSeverityOpticalMuxValue_Type()
)
alarmSeverityOpticalMuxValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityOpticalMuxValue.setStatus("current")
_EndOfAlarmSeverityOpticalMuxTable_Type = Integer32
_EndOfAlarmSeverityOpticalMuxTable_Object = MibScalar
endOfAlarmSeverityOpticalMuxTable = _EndOfAlarmSeverityOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 31),
    _EndOfAlarmSeverityOpticalMuxTable_Type()
)
endOfAlarmSeverityOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityOpticalMuxTable.setStatus("current")
_AlarmShelfConnTable_Object = MibTable
alarmShelfConnTable = _AlarmShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32)
)
if mibBuilder.loadTexts:
    alarmShelfConnTable.setStatus("current")
_AlarmShelfConnEntry_Object = MibTableRow
alarmShelfConnEntry = _AlarmShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32, 1)
)
alarmShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmShelfConnType"),
)
if mibBuilder.loadTexts:
    alarmShelfConnEntry.setStatus("current")
_AlarmShelfConnType_Type = FspR7AlarmListType
_AlarmShelfConnType_Object = MibTableColumn
alarmShelfConnType = _AlarmShelfConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32, 1, 1),
    _AlarmShelfConnType_Type()
)
alarmShelfConnType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmShelfConnType.setStatus("current")
_AlarmShelfConnSeverity_Type = TrapAlarmSeverity
_AlarmShelfConnSeverity_Object = MibTableColumn
alarmShelfConnSeverity = _AlarmShelfConnSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32, 1, 2),
    _AlarmShelfConnSeverity_Type()
)
alarmShelfConnSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfConnSeverity.setStatus("current")
_AlarmShelfConnAffect_Type = ServiceImpairment
_AlarmShelfConnAffect_Object = MibTableColumn
alarmShelfConnAffect = _AlarmShelfConnAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32, 1, 3),
    _AlarmShelfConnAffect_Type()
)
alarmShelfConnAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfConnAffect.setStatus("current")
_AlarmShelfConnTimeStamp_Type = DateAndTime
_AlarmShelfConnTimeStamp_Object = MibTableColumn
alarmShelfConnTimeStamp = _AlarmShelfConnTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 32, 1, 4),
    _AlarmShelfConnTimeStamp_Type()
)
alarmShelfConnTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfConnTimeStamp.setStatus("current")
_EndOfAlarmShelfConnTable_Type = Integer32
_EndOfAlarmShelfConnTable_Object = MibScalar
endOfAlarmShelfConnTable = _EndOfAlarmShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 33),
    _EndOfAlarmShelfConnTable_Type()
)
endOfAlarmShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmShelfConnTable.setStatus("current")
_AlarmSeverityShelfConnTable_Object = MibTable
alarmSeverityShelfConnTable = _AlarmSeverityShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 34)
)
if mibBuilder.loadTexts:
    alarmSeverityShelfConnTable.setStatus("current")
_AlarmSeverityShelfConnEntry_Object = MibTableRow
alarmSeverityShelfConnEntry = _AlarmSeverityShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 34, 1)
)
alarmSeverityShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityShelfConnType"),
)
if mibBuilder.loadTexts:
    alarmSeverityShelfConnEntry.setStatus("current")
_AlarmSeverityShelfConnType_Type = FspR7AlarmListType
_AlarmSeverityShelfConnType_Object = MibTableColumn
alarmSeverityShelfConnType = _AlarmSeverityShelfConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 34, 1, 1),
    _AlarmSeverityShelfConnType_Type()
)
alarmSeverityShelfConnType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityShelfConnType.setStatus("current")
_AlarmSeverityShelfConnValue_Type = TrapAlarmSeverity
_AlarmSeverityShelfConnValue_Object = MibTableColumn
alarmSeverityShelfConnValue = _AlarmSeverityShelfConnValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 34, 1, 2),
    _AlarmSeverityShelfConnValue_Type()
)
alarmSeverityShelfConnValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityShelfConnValue.setStatus("current")
_EndOfAlarmSeverityShelfConnTable_Type = Integer32
_EndOfAlarmSeverityShelfConnTable_Object = MibScalar
endOfAlarmSeverityShelfConnTable = _EndOfAlarmSeverityShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 35),
    _EndOfAlarmSeverityShelfConnTable_Type()
)
endOfAlarmSeverityShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmSeverityShelfConnTable.setStatus("current")
_AlarmNtpIPv4Table_Object = MibTable
alarmNtpIPv4Table = _AlarmNtpIPv4Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36)
)
if mibBuilder.loadTexts:
    alarmNtpIPv4Table.setStatus("current")
_AlarmNtpIPv4Entry_Object = MibTableRow
alarmNtpIPv4Entry = _AlarmNtpIPv4Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36, 1)
)
alarmNtpIPv4Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv4Ip"),
    (0, "ADVA-FSPR7-MIB", "alarmNtpIPv4Type"),
)
if mibBuilder.loadTexts:
    alarmNtpIPv4Entry.setStatus("current")
_AlarmNtpIPv4Type_Type = FspR7AlarmListType
_AlarmNtpIPv4Type_Object = MibTableColumn
alarmNtpIPv4Type = _AlarmNtpIPv4Type_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36, 1, 1),
    _AlarmNtpIPv4Type_Type()
)
alarmNtpIPv4Type.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmNtpIPv4Type.setStatus("current")
_AlarmNtpIPv4Severity_Type = TrapAlarmSeverity
_AlarmNtpIPv4Severity_Object = MibTableColumn
alarmNtpIPv4Severity = _AlarmNtpIPv4Severity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36, 1, 2),
    _AlarmNtpIPv4Severity_Type()
)
alarmNtpIPv4Severity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv4Severity.setStatus("current")
_AlarmNtpIPv4Affect_Type = ServiceImpairment
_AlarmNtpIPv4Affect_Object = MibTableColumn
alarmNtpIPv4Affect = _AlarmNtpIPv4Affect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36, 1, 3),
    _AlarmNtpIPv4Affect_Type()
)
alarmNtpIPv4Affect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv4Affect.setStatus("current")
_AlarmNtpIPv4TimeStamp_Type = DateAndTime
_AlarmNtpIPv4TimeStamp_Object = MibTableColumn
alarmNtpIPv4TimeStamp = _AlarmNtpIPv4TimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 36, 1, 4),
    _AlarmNtpIPv4TimeStamp_Type()
)
alarmNtpIPv4TimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv4TimeStamp.setStatus("current")
_AlarmSeverityNtpIPv4Table_Object = MibTable
alarmSeverityNtpIPv4Table = _AlarmSeverityNtpIPv4Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 38)
)
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv4Table.setStatus("current")
_AlarmSeverityNtpIPv4Entry_Object = MibTableRow
alarmSeverityNtpIPv4Entry = _AlarmSeverityNtpIPv4Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 38, 1)
)
alarmSeverityNtpIPv4Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv4Ip"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityNtpIPv4Type"),
)
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv4Entry.setStatus("current")
_AlarmSeverityNtpIPv4Type_Type = FspR7AlarmListType
_AlarmSeverityNtpIPv4Type_Object = MibTableColumn
alarmSeverityNtpIPv4Type = _AlarmSeverityNtpIPv4Type_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 38, 1, 1),
    _AlarmSeverityNtpIPv4Type_Type()
)
alarmSeverityNtpIPv4Type.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv4Type.setStatus("current")
_AlarmSeverityNtpIPv4Value_Type = TrapAlarmSeverity
_AlarmSeverityNtpIPv4Value_Object = MibTableColumn
alarmSeverityNtpIPv4Value = _AlarmSeverityNtpIPv4Value_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 38, 1, 2),
    _AlarmSeverityNtpIPv4Value_Type()
)
alarmSeverityNtpIPv4Value.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv4Value.setStatus("current")
_AlarmNtpIPv6Table_Object = MibTable
alarmNtpIPv6Table = _AlarmNtpIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40)
)
if mibBuilder.loadTexts:
    alarmNtpIPv6Table.setStatus("current")
_AlarmNtpIPv6Entry_Object = MibTableRow
alarmNtpIPv6Entry = _AlarmNtpIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40, 1)
)
alarmNtpIPv6Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv6Ip"),
    (0, "ADVA-FSPR7-MIB", "alarmNtpIPv6Type"),
)
if mibBuilder.loadTexts:
    alarmNtpIPv6Entry.setStatus("current")
_AlarmNtpIPv6Type_Type = FspR7AlarmListType
_AlarmNtpIPv6Type_Object = MibTableColumn
alarmNtpIPv6Type = _AlarmNtpIPv6Type_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40, 1, 1),
    _AlarmNtpIPv6Type_Type()
)
alarmNtpIPv6Type.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmNtpIPv6Type.setStatus("current")
_AlarmNtpIPv6Severity_Type = TrapAlarmSeverity
_AlarmNtpIPv6Severity_Object = MibTableColumn
alarmNtpIPv6Severity = _AlarmNtpIPv6Severity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40, 1, 2),
    _AlarmNtpIPv6Severity_Type()
)
alarmNtpIPv6Severity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv6Severity.setStatus("current")
_AlarmNtpIPv6Affect_Type = ServiceImpairment
_AlarmNtpIPv6Affect_Object = MibTableColumn
alarmNtpIPv6Affect = _AlarmNtpIPv6Affect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40, 1, 3),
    _AlarmNtpIPv6Affect_Type()
)
alarmNtpIPv6Affect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv6Affect.setStatus("current")
_AlarmNtpIPv6TimeStamp_Type = DateAndTime
_AlarmNtpIPv6TimeStamp_Object = MibTableColumn
alarmNtpIPv6TimeStamp = _AlarmNtpIPv6TimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 40, 1, 4),
    _AlarmNtpIPv6TimeStamp_Type()
)
alarmNtpIPv6TimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmNtpIPv6TimeStamp.setStatus("current")
_AlarmSeverityNtpIPv6Table_Object = MibTable
alarmSeverityNtpIPv6Table = _AlarmSeverityNtpIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 42)
)
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv6Table.setStatus("current")
_AlarmSeverityNtpIPv6Entry_Object = MibTableRow
alarmSeverityNtpIPv6Entry = _AlarmSeverityNtpIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 42, 1)
)
alarmSeverityNtpIPv6Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv6Ip"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityNtpIPv6Type"),
)
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv6Entry.setStatus("current")
_AlarmSeverityNtpIPv6Type_Type = FspR7AlarmListType
_AlarmSeverityNtpIPv6Type_Object = MibTableColumn
alarmSeverityNtpIPv6Type = _AlarmSeverityNtpIPv6Type_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 42, 1, 1),
    _AlarmSeverityNtpIPv6Type_Type()
)
alarmSeverityNtpIPv6Type.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv6Type.setStatus("current")
_AlarmSeverityNtpIPv6Value_Type = TrapAlarmSeverity
_AlarmSeverityNtpIPv6Value_Object = MibTableColumn
alarmSeverityNtpIPv6Value = _AlarmSeverityNtpIPv6Value_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 42, 1, 2),
    _AlarmSeverityNtpIPv6Value_Type()
)
alarmSeverityNtpIPv6Value.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityNtpIPv6Value.setStatus("current")
_AlarmProfile_ObjectIdentity = ObjectIdentity
alarmProfile = _AlarmProfile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100)
)
_AlarmProfileSeverityTable_Object = MibTable
alarmProfileSeverityTable = _AlarmProfileSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1)
)
if mibBuilder.loadTexts:
    alarmProfileSeverityTable.setStatus("current")
_AlarmProfileSeverityEntry_Object = MibTableRow
alarmProfileSeverityEntry = _AlarmProfileSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1, 1)
)
alarmProfileSeverityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "alarmProfileSeverityAidType"),
    (0, "ADVA-FSPR7-MIB", "alarmProfileSeverityType"),
)
if mibBuilder.loadTexts:
    alarmProfileSeverityEntry.setStatus("current")
_AlarmProfileSeverityAidType_Type = FspR7AidType
_AlarmProfileSeverityAidType_Object = MibTableColumn
alarmProfileSeverityAidType = _AlarmProfileSeverityAidType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1, 1, 1),
    _AlarmProfileSeverityAidType_Type()
)
alarmProfileSeverityAidType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmProfileSeverityAidType.setStatus("current")
_AlarmProfileSeverityType_Type = FspR7AlarmProfileList
_AlarmProfileSeverityType_Object = MibTableColumn
alarmProfileSeverityType = _AlarmProfileSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1, 1, 2),
    _AlarmProfileSeverityType_Type()
)
alarmProfileSeverityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmProfileSeverityType.setStatus("current")
_AlarmProfileSeverityValue_Type = TrapAlarmSeverity
_AlarmProfileSeverityValue_Object = MibTableColumn
alarmProfileSeverityValue = _AlarmProfileSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1, 1, 3),
    _AlarmProfileSeverityValue_Type()
)
alarmProfileSeverityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmProfileSeverityValue.setStatus("current")
_AlarmProfileSeverityDefaultValue_Type = TrapAlarmSeverity
_AlarmProfileSeverityDefaultValue_Object = MibTableColumn
alarmProfileSeverityDefaultValue = _AlarmProfileSeverityDefaultValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 1, 1, 4),
    _AlarmProfileSeverityDefaultValue_Type()
)
alarmProfileSeverityDefaultValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmProfileSeverityDefaultValue.setStatus("current")
_EndOfAlarmProfileSeverityTable_Type = Integer32
_EndOfAlarmProfileSeverityTable_Object = MibScalar
endOfAlarmProfileSeverityTable = _EndOfAlarmProfileSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 2),
    _EndOfAlarmProfileSeverityTable_Type()
)
endOfAlarmProfileSeverityTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmProfileSeverityTable.setStatus("current")
_EndOfAlarmProfile_Type = Integer32
_EndOfAlarmProfile_Object = MibScalar
endOfAlarmProfile = _EndOfAlarmProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 100, 10000),
    _EndOfAlarmProfile_Type()
)
endOfAlarmProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarmProfile.setStatus("current")
_ServiceAffecting_Type = ServiceAffecting
_ServiceAffecting_Object = MibScalar
serviceAffecting = _ServiceAffecting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 1000),
    _ServiceAffecting_Type()
)
serviceAffecting.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    serviceAffecting.setStatus("current")
_EndOfAlarm_Type = Integer32
_EndOfAlarm_Object = MibScalar
endOfAlarm = _EndOfAlarm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 4, 10000),
    _EndOfAlarm_Type()
)
endOfAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAlarm.setStatus("current")
_Trap_ObjectIdentity = ObjectIdentity
trap = _Trap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5)
)
_FspR7Trap_ObjectIdentity = ObjectIdentity
fspR7Trap = _FspR7Trap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0)
)
_Performance_ObjectIdentity = ObjectIdentity
performance = _Performance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6)
)
_PerformanceFacility_ObjectIdentity = ObjectIdentity
performanceFacility = _PerformanceFacility_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4)
)
_PerformanceFacilityThreshold_ObjectIdentity = ObjectIdentity
performanceFacilityThreshold = _PerformanceFacilityThreshold_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1)
)
_OptThresholdConfigTable_Object = MibTable
optThresholdConfigTable = _OptThresholdConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1)
)
if mibBuilder.loadTexts:
    optThresholdConfigTable.setStatus("deprecated")
_OptThresholdConfigEntry_Object = MibTableRow
optThresholdConfigEntry = _OptThresholdConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1, 1)
)
optThresholdConfigEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    optThresholdConfigEntry.setStatus("deprecated")
_OptThresholdConfigLowFixed_Type = Integer32
_OptThresholdConfigLowFixed_Object = MibTableColumn
optThresholdConfigLowFixed = _OptThresholdConfigLowFixed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1, 1, 1),
    _OptThresholdConfigLowFixed_Type()
)
optThresholdConfigLowFixed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optThresholdConfigLowFixed.setStatus("deprecated")
if mibBuilder.loadTexts:
    optThresholdConfigLowFixed.setUnits("0.1 dBm")
_OptThresholdConfigHighFixed_Type = Integer32
_OptThresholdConfigHighFixed_Object = MibTableColumn
optThresholdConfigHighFixed = _OptThresholdConfigHighFixed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1, 1, 2),
    _OptThresholdConfigHighFixed_Type()
)
optThresholdConfigHighFixed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optThresholdConfigHighFixed.setStatus("deprecated")
if mibBuilder.loadTexts:
    optThresholdConfigHighFixed.setUnits("0.1 dBm")


class _OptThresholdConfigLowConfig_Type(Integer32):
    """Custom type optThresholdConfigLowConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-500, 300),
    )


_OptThresholdConfigLowConfig_Type.__name__ = "Integer32"
_OptThresholdConfigLowConfig_Object = MibTableColumn
optThresholdConfigLowConfig = _OptThresholdConfigLowConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1, 1, 3),
    _OptThresholdConfigLowConfig_Type()
)
optThresholdConfigLowConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    optThresholdConfigLowConfig.setStatus("deprecated")
if mibBuilder.loadTexts:
    optThresholdConfigLowConfig.setUnits("0.1 dBm")


class _OptThresholdConfigHighConfig_Type(Integer32):
    """Custom type optThresholdConfigHighConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-500, 300),
    )


_OptThresholdConfigHighConfig_Type.__name__ = "Integer32"
_OptThresholdConfigHighConfig_Object = MibTableColumn
optThresholdConfigHighConfig = _OptThresholdConfigHighConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 1, 1, 4),
    _OptThresholdConfigHighConfig_Type()
)
optThresholdConfigHighConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    optThresholdConfigHighConfig.setStatus("deprecated")
if mibBuilder.loadTexts:
    optThresholdConfigHighConfig.setUnits("0.1 dBm")
_OprThresholdConfigTable_Object = MibTable
oprThresholdConfigTable = _OprThresholdConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 2)
)
if mibBuilder.loadTexts:
    oprThresholdConfigTable.setStatus("deprecated")
_OprThresholdConfigEntry_Object = MibTableRow
oprThresholdConfigEntry = _OprThresholdConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 2, 1)
)
oprThresholdConfigEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    oprThresholdConfigEntry.setStatus("deprecated")


class _OprThresholdConfigLowConfig_Type(Integer32):
    """Custom type oprThresholdConfigLowConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 260),
    )


_OprThresholdConfigLowConfig_Type.__name__ = "Integer32"
_OprThresholdConfigLowConfig_Object = MibTableColumn
oprThresholdConfigLowConfig = _OprThresholdConfigLowConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 2, 1, 1),
    _OprThresholdConfigLowConfig_Type()
)
oprThresholdConfigLowConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oprThresholdConfigLowConfig.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprThresholdConfigLowConfig.setUnits("0.1 dBm")


class _OprThresholdConfigHighConfig_Type(Integer32):
    """Custom type oprThresholdConfigHighConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 270),
    )


_OprThresholdConfigHighConfig_Type.__name__ = "Integer32"
_OprThresholdConfigHighConfig_Object = MibTableColumn
oprThresholdConfigHighConfig = _OprThresholdConfigHighConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 2, 1, 2),
    _OprThresholdConfigHighConfig_Type()
)
oprThresholdConfigHighConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oprThresholdConfigHighConfig.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprThresholdConfigHighConfig.setUnits("0.1 dBm")
_LsrtempThresholdConfigTable_Object = MibTable
lsrtempThresholdConfigTable = _LsrtempThresholdConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 3)
)
if mibBuilder.loadTexts:
    lsrtempThresholdConfigTable.setStatus("deprecated")
_LsrtempThresholdConfigEntry_Object = MibTableRow
lsrtempThresholdConfigEntry = _LsrtempThresholdConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 3, 1)
)
lsrtempThresholdConfigEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    lsrtempThresholdConfigEntry.setStatus("deprecated")
_LsrtempThresholdConfigLowFixed_Type = Integer32
_LsrtempThresholdConfigLowFixed_Object = MibTableColumn
lsrtempThresholdConfigLowFixed = _LsrtempThresholdConfigLowFixed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 3, 1, 1),
    _LsrtempThresholdConfigLowFixed_Type()
)
lsrtempThresholdConfigLowFixed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lsrtempThresholdConfigLowFixed.setStatus("deprecated")
if mibBuilder.loadTexts:
    lsrtempThresholdConfigLowFixed.setUnits("0.1 degree Celsius")
_LsrtempThresholdConfigHighFixed_Type = Integer32
_LsrtempThresholdConfigHighFixed_Object = MibTableColumn
lsrtempThresholdConfigHighFixed = _LsrtempThresholdConfigHighFixed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 1, 3, 1, 2),
    _LsrtempThresholdConfigHighFixed_Type()
)
lsrtempThresholdConfigHighFixed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lsrtempThresholdConfigHighFixed.setStatus("deprecated")
if mibBuilder.loadTexts:
    lsrtempThresholdConfigHighFixed.setUnits("0.1 degree Celsius")
_PerformanceFacilityMonitoring_ObjectIdentity = ObjectIdentity
performanceFacilityMonitoring = _PerformanceFacilityMonitoring_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2)
)
_OptIntervalPm15minTable_Object = MibTable
optIntervalPm15minTable = _OptIntervalPm15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1)
)
if mibBuilder.loadTexts:
    optIntervalPm15minTable.setStatus("deprecated")
_OptIntervalPm15minEntry_Object = MibTableRow
optIntervalPm15minEntry = _OptIntervalPm15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1)
)
optIntervalPm15minEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "optIntervalPm15minNumber"),
)
if mibBuilder.loadTexts:
    optIntervalPm15minEntry.setStatus("deprecated")


class _OptIntervalPm15minNumber_Type(Integer32):
    """Custom type optIntervalPm15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_OptIntervalPm15minNumber_Type.__name__ = "Integer32"
_OptIntervalPm15minNumber_Object = MibTableColumn
optIntervalPm15minNumber = _OptIntervalPm15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 1),
    _OptIntervalPm15minNumber_Type()
)
optIntervalPm15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    optIntervalPm15minNumber.setStatus("current")
_OptIntervalPm15minLow_Type = Integer32
_OptIntervalPm15minLow_Object = MibTableColumn
optIntervalPm15minLow = _OptIntervalPm15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 2),
    _OptIntervalPm15minLow_Type()
)
optIntervalPm15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm15minLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm15minLow.setUnits("0.1 dBm")
_OptIntervalPm15minMean_Type = Integer32
_OptIntervalPm15minMean_Object = MibTableColumn
optIntervalPm15minMean = _OptIntervalPm15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 3),
    _OptIntervalPm15minMean_Type()
)
optIntervalPm15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm15minMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm15minMean.setUnits("0.1 dBm")
_OptIntervalPm15minHigh_Type = Integer32
_OptIntervalPm15minHigh_Object = MibTableColumn
optIntervalPm15minHigh = _OptIntervalPm15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 4),
    _OptIntervalPm15minHigh_Type()
)
optIntervalPm15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm15minHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm15minHigh.setUnits("0.1 dBm")
_OptIntervalPm15minValidFlag_Type = TruthValue
_OptIntervalPm15minValidFlag_Object = MibTableColumn
optIntervalPm15minValidFlag = _OptIntervalPm15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 5),
    _OptIntervalPm15minValidFlag_Type()
)
optIntervalPm15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm15minValidFlag.setStatus("deprecated")
_OptIntervalPm15minTimeStamp_Type = DateAndTime
_OptIntervalPm15minTimeStamp_Object = MibTableColumn
optIntervalPm15minTimeStamp = _OptIntervalPm15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 1, 1, 6),
    _OptIntervalPm15minTimeStamp_Type()
)
optIntervalPm15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm15minTimeStamp.setStatus("deprecated")
_OptIntervalPm1dayTable_Object = MibTable
optIntervalPm1dayTable = _OptIntervalPm1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2)
)
if mibBuilder.loadTexts:
    optIntervalPm1dayTable.setStatus("deprecated")
_OptIntervalPm1dayEntry_Object = MibTableRow
optIntervalPm1dayEntry = _OptIntervalPm1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1)
)
optIntervalPm1dayEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "optIntervalPm1dayNumber"),
)
if mibBuilder.loadTexts:
    optIntervalPm1dayEntry.setStatus("deprecated")


class _OptIntervalPm1dayNumber_Type(Integer32):
    """Custom type optIntervalPm1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_OptIntervalPm1dayNumber_Type.__name__ = "Integer32"
_OptIntervalPm1dayNumber_Object = MibTableColumn
optIntervalPm1dayNumber = _OptIntervalPm1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 1),
    _OptIntervalPm1dayNumber_Type()
)
optIntervalPm1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    optIntervalPm1dayNumber.setStatus("current")
_OptIntervalPm1dayLow_Type = Integer32
_OptIntervalPm1dayLow_Object = MibTableColumn
optIntervalPm1dayLow = _OptIntervalPm1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 2),
    _OptIntervalPm1dayLow_Type()
)
optIntervalPm1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1dayLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1dayLow.setUnits("0.1 dBm")
_OptIntervalPm1dayMean_Type = Integer32
_OptIntervalPm1dayMean_Object = MibTableColumn
optIntervalPm1dayMean = _OptIntervalPm1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 3),
    _OptIntervalPm1dayMean_Type()
)
optIntervalPm1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1dayMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1dayMean.setUnits("0.1 dBm")
_OptIntervalPm1dayHigh_Type = Integer32
_OptIntervalPm1dayHigh_Object = MibTableColumn
optIntervalPm1dayHigh = _OptIntervalPm1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 4),
    _OptIntervalPm1dayHigh_Type()
)
optIntervalPm1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1dayHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1dayHigh.setUnits("0.1 dBm")
_OptIntervalPm1dayValidFlag_Type = TruthValue
_OptIntervalPm1dayValidFlag_Object = MibTableColumn
optIntervalPm1dayValidFlag = _OptIntervalPm1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 5),
    _OptIntervalPm1dayValidFlag_Type()
)
optIntervalPm1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1dayValidFlag.setStatus("deprecated")
_OptIntervalPm1dayTimeStamp_Type = DateAndTime
_OptIntervalPm1dayTimeStamp_Object = MibTableColumn
optIntervalPm1dayTimeStamp = _OptIntervalPm1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 2, 1, 6),
    _OptIntervalPm1dayTimeStamp_Type()
)
optIntervalPm1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1dayTimeStamp.setStatus("deprecated")
_OptIntervalPm1weekTable_Object = MibTable
optIntervalPm1weekTable = _OptIntervalPm1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3)
)
if mibBuilder.loadTexts:
    optIntervalPm1weekTable.setStatus("deprecated")
_OptIntervalPm1weekEntry_Object = MibTableRow
optIntervalPm1weekEntry = _OptIntervalPm1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1)
)
optIntervalPm1weekEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "optIntervalPm1weekNumber"),
)
if mibBuilder.loadTexts:
    optIntervalPm1weekEntry.setStatus("deprecated")


class _OptIntervalPm1weekNumber_Type(Integer32):
    """Custom type optIntervalPm1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_OptIntervalPm1weekNumber_Type.__name__ = "Integer32"
_OptIntervalPm1weekNumber_Object = MibTableColumn
optIntervalPm1weekNumber = _OptIntervalPm1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 1),
    _OptIntervalPm1weekNumber_Type()
)
optIntervalPm1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    optIntervalPm1weekNumber.setStatus("current")
_OptIntervalPm1weekLow_Type = Integer32
_OptIntervalPm1weekLow_Object = MibTableColumn
optIntervalPm1weekLow = _OptIntervalPm1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 2),
    _OptIntervalPm1weekLow_Type()
)
optIntervalPm1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1weekLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1weekLow.setUnits("0.1 dBm")
_OptIntervalPm1weekMean_Type = Integer32
_OptIntervalPm1weekMean_Object = MibTableColumn
optIntervalPm1weekMean = _OptIntervalPm1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 3),
    _OptIntervalPm1weekMean_Type()
)
optIntervalPm1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1weekMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1weekMean.setUnits("0.1 dBm")
_OptIntervalPm1weekHigh_Type = Integer32
_OptIntervalPm1weekHigh_Object = MibTableColumn
optIntervalPm1weekHigh = _OptIntervalPm1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 4),
    _OptIntervalPm1weekHigh_Type()
)
optIntervalPm1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1weekHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    optIntervalPm1weekHigh.setUnits("0.1 dBm")
_OptIntervalPm1weekValidFlag_Type = TruthValue
_OptIntervalPm1weekValidFlag_Object = MibTableColumn
optIntervalPm1weekValidFlag = _OptIntervalPm1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 5),
    _OptIntervalPm1weekValidFlag_Type()
)
optIntervalPm1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1weekValidFlag.setStatus("deprecated")
_OptIntervalPm1weekTimeStamp_Type = DateAndTime
_OptIntervalPm1weekTimeStamp_Object = MibTableColumn
optIntervalPm1weekTimeStamp = _OptIntervalPm1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 3, 1, 6),
    _OptIntervalPm1weekTimeStamp_Type()
)
optIntervalPm1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    optIntervalPm1weekTimeStamp.setStatus("deprecated")
_OprIntervalPm15minTable_Object = MibTable
oprIntervalPm15minTable = _OprIntervalPm15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4)
)
if mibBuilder.loadTexts:
    oprIntervalPm15minTable.setStatus("deprecated")
_OprIntervalPm15minEntry_Object = MibTableRow
oprIntervalPm15minEntry = _OprIntervalPm15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1)
)
oprIntervalPm15minEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "oprIntervalPm15minNumber"),
)
if mibBuilder.loadTexts:
    oprIntervalPm15minEntry.setStatus("deprecated")


class _OprIntervalPm15minNumber_Type(Integer32):
    """Custom type oprIntervalPm15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_OprIntervalPm15minNumber_Type.__name__ = "Integer32"
_OprIntervalPm15minNumber_Object = MibTableColumn
oprIntervalPm15minNumber = _OprIntervalPm15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 1),
    _OprIntervalPm15minNumber_Type()
)
oprIntervalPm15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oprIntervalPm15minNumber.setStatus("current")
_OprIntervalPm15minLow_Type = Integer32
_OprIntervalPm15minLow_Object = MibTableColumn
oprIntervalPm15minLow = _OprIntervalPm15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 2),
    _OprIntervalPm15minLow_Type()
)
oprIntervalPm15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm15minLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm15minLow.setUnits("0.1 dBm")
_OprIntervalPm15minMean_Type = Integer32
_OprIntervalPm15minMean_Object = MibTableColumn
oprIntervalPm15minMean = _OprIntervalPm15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 3),
    _OprIntervalPm15minMean_Type()
)
oprIntervalPm15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm15minMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm15minMean.setUnits("0.1 dBm")
_OprIntervalPm15minHigh_Type = Integer32
_OprIntervalPm15minHigh_Object = MibTableColumn
oprIntervalPm15minHigh = _OprIntervalPm15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 4),
    _OprIntervalPm15minHigh_Type()
)
oprIntervalPm15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm15minHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm15minHigh.setUnits("0.1 dBm")
_OprIntervalPm15minValidFlag_Type = TruthValue
_OprIntervalPm15minValidFlag_Object = MibTableColumn
oprIntervalPm15minValidFlag = _OprIntervalPm15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 5),
    _OprIntervalPm15minValidFlag_Type()
)
oprIntervalPm15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm15minValidFlag.setStatus("deprecated")
_OprIntervalPm15minTimeStamp_Type = DateAndTime
_OprIntervalPm15minTimeStamp_Object = MibTableColumn
oprIntervalPm15minTimeStamp = _OprIntervalPm15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 4, 1, 6),
    _OprIntervalPm15minTimeStamp_Type()
)
oprIntervalPm15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm15minTimeStamp.setStatus("deprecated")
_OprIntervalPm1dayTable_Object = MibTable
oprIntervalPm1dayTable = _OprIntervalPm1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5)
)
if mibBuilder.loadTexts:
    oprIntervalPm1dayTable.setStatus("deprecated")
_OprIntervalPm1dayEntry_Object = MibTableRow
oprIntervalPm1dayEntry = _OprIntervalPm1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1)
)
oprIntervalPm1dayEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "oprIntervalPm1dayNumber"),
)
if mibBuilder.loadTexts:
    oprIntervalPm1dayEntry.setStatus("deprecated")


class _OprIntervalPm1dayNumber_Type(Integer32):
    """Custom type oprIntervalPm1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_OprIntervalPm1dayNumber_Type.__name__ = "Integer32"
_OprIntervalPm1dayNumber_Object = MibTableColumn
oprIntervalPm1dayNumber = _OprIntervalPm1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 1),
    _OprIntervalPm1dayNumber_Type()
)
oprIntervalPm1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oprIntervalPm1dayNumber.setStatus("current")
_OprIntervalPm1dayLow_Type = Integer32
_OprIntervalPm1dayLow_Object = MibTableColumn
oprIntervalPm1dayLow = _OprIntervalPm1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 2),
    _OprIntervalPm1dayLow_Type()
)
oprIntervalPm1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1dayLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1dayLow.setUnits("0.1 dBm")
_OprIntervalPm1dayMean_Type = Integer32
_OprIntervalPm1dayMean_Object = MibTableColumn
oprIntervalPm1dayMean = _OprIntervalPm1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 3),
    _OprIntervalPm1dayMean_Type()
)
oprIntervalPm1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1dayMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1dayMean.setUnits("0.1 dBm")
_OprIntervalPm1dayHigh_Type = Integer32
_OprIntervalPm1dayHigh_Object = MibTableColumn
oprIntervalPm1dayHigh = _OprIntervalPm1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 4),
    _OprIntervalPm1dayHigh_Type()
)
oprIntervalPm1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1dayHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1dayHigh.setUnits("0.1 dBm")
_OprIntervalPm1dayValidFlag_Type = TruthValue
_OprIntervalPm1dayValidFlag_Object = MibTableColumn
oprIntervalPm1dayValidFlag = _OprIntervalPm1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 5),
    _OprIntervalPm1dayValidFlag_Type()
)
oprIntervalPm1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1dayValidFlag.setStatus("deprecated")
_OprIntervalPm1dayTimeStamp_Type = DateAndTime
_OprIntervalPm1dayTimeStamp_Object = MibTableColumn
oprIntervalPm1dayTimeStamp = _OprIntervalPm1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 5, 1, 6),
    _OprIntervalPm1dayTimeStamp_Type()
)
oprIntervalPm1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1dayTimeStamp.setStatus("deprecated")
_OprIntervalPm1weekTable_Object = MibTable
oprIntervalPm1weekTable = _OprIntervalPm1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6)
)
if mibBuilder.loadTexts:
    oprIntervalPm1weekTable.setStatus("deprecated")
_OprIntervalPm1weekEntry_Object = MibTableRow
oprIntervalPm1weekEntry = _OprIntervalPm1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1)
)
oprIntervalPm1weekEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "oprIntervalPm1weekNumber"),
)
if mibBuilder.loadTexts:
    oprIntervalPm1weekEntry.setStatus("deprecated")


class _OprIntervalPm1weekNumber_Type(Integer32):
    """Custom type oprIntervalPm1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_OprIntervalPm1weekNumber_Type.__name__ = "Integer32"
_OprIntervalPm1weekNumber_Object = MibTableColumn
oprIntervalPm1weekNumber = _OprIntervalPm1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 1),
    _OprIntervalPm1weekNumber_Type()
)
oprIntervalPm1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oprIntervalPm1weekNumber.setStatus("current")
_OprIntervalPm1weekLow_Type = Integer32
_OprIntervalPm1weekLow_Object = MibTableColumn
oprIntervalPm1weekLow = _OprIntervalPm1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 2),
    _OprIntervalPm1weekLow_Type()
)
oprIntervalPm1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1weekLow.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1weekLow.setUnits("0.1 dBm")
_OprIntervalPm1weekMean_Type = Integer32
_OprIntervalPm1weekMean_Object = MibTableColumn
oprIntervalPm1weekMean = _OprIntervalPm1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 3),
    _OprIntervalPm1weekMean_Type()
)
oprIntervalPm1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1weekMean.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1weekMean.setUnits("0.1 dBm")
_OprIntervalPm1weekHigh_Type = Integer32
_OprIntervalPm1weekHigh_Object = MibTableColumn
oprIntervalPm1weekHigh = _OprIntervalPm1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 4),
    _OprIntervalPm1weekHigh_Type()
)
oprIntervalPm1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1weekHigh.setStatus("deprecated")
if mibBuilder.loadTexts:
    oprIntervalPm1weekHigh.setUnits("0.1 dBm")
_OprIntervalPm1weekValidFlag_Type = TruthValue
_OprIntervalPm1weekValidFlag_Object = MibTableColumn
oprIntervalPm1weekValidFlag = _OprIntervalPm1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 5),
    _OprIntervalPm1weekValidFlag_Type()
)
oprIntervalPm1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1weekValidFlag.setStatus("deprecated")
_OprIntervalPm1weekTimeStamp_Type = DateAndTime
_OprIntervalPm1weekTimeStamp_Object = MibTableColumn
oprIntervalPm1weekTimeStamp = _OprIntervalPm1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 4, 2, 6, 1, 6),
    _OprIntervalPm1weekTimeStamp_Type()
)
oprIntervalPm1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oprIntervalPm1weekTimeStamp.setStatus("deprecated")
_EndOfPerformance_Type = Integer32
_EndOfPerformance_Object = MibScalar
endOfPerformance = _EndOfPerformance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 6, 10000),
    _EndOfPerformance_Type()
)
endOfPerformance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfPerformance.setStatus("current")
_FeatureSpecific_ObjectIdentity = ObjectIdentity
featureSpecific = _FeatureSpecific_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7)
)
_FiberMap_ObjectIdentity = ObjectIdentity
fiberMap = _FiberMap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1)
)
_TerminationPointTable_Object = MibTable
terminationPointTable = _TerminationPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1)
)
if mibBuilder.loadTexts:
    terminationPointTable.setStatus("current")
_TerminationPointEntry_Object = MibTableRow
terminationPointEntry = _TerminationPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1)
)
terminationPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
)
if mibBuilder.loadTexts:
    terminationPointEntry.setStatus("current")
_TerminationPointRowStatus_Type = RowStatus
_TerminationPointRowStatus_Object = MibTableColumn
terminationPointRowStatus = _TerminationPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 1),
    _TerminationPointRowStatus_Type()
)
terminationPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    terminationPointRowStatus.setStatus("current")
_TerminationPointPartnerAid_Type = RowPointer
_TerminationPointPartnerAid_Object = MibTableColumn
terminationPointPartnerAid = _TerminationPointPartnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 2),
    _TerminationPointPartnerAid_Type()
)
terminationPointPartnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointPartnerAid.setStatus("current")
_TerminationPointAdmin_Type = FspR7AdminState
_TerminationPointAdmin_Object = MibTableColumn
terminationPointAdmin = _TerminationPointAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 3),
    _TerminationPointAdmin_Type()
)
terminationPointAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    terminationPointAdmin.setStatus("current")
_TerminationPointFiberDetect_Type = FspR7EnableDisable
_TerminationPointFiberDetect_Object = MibTableColumn
terminationPointFiberDetect = _TerminationPointFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 4),
    _TerminationPointFiberDetect_Type()
)
terminationPointFiberDetect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    terminationPointFiberDetect.setStatus("current")
_TerminationPointFiberDetectStatus_Type = FspR7FDStatusCaps
_TerminationPointFiberDetectStatus_Object = MibTableColumn
terminationPointFiberDetectStatus = _TerminationPointFiberDetectStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 5),
    _TerminationPointFiberDetectStatus_Type()
)
terminationPointFiberDetectStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointFiberDetectStatus.setStatus("current")
_TerminationPointFunction_Type = FspR7InterfaceFunction
_TerminationPointFunction_Object = MibTableColumn
terminationPointFunction = _TerminationPointFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 6),
    _TerminationPointFunction_Type()
)
terminationPointFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointFunction.setStatus("current")
_TerminationPointAlias_Type = SnmpAdminString
_TerminationPointAlias_Object = MibTableColumn
terminationPointAlias = _TerminationPointAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 7),
    _TerminationPointAlias_Type()
)
terminationPointAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    terminationPointAlias.setStatus("current")


class _TerminationPointValidSigTimer_Type(Unsigned32):
    """Custom type terminationPointValidSigTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
    )


_TerminationPointValidSigTimer_Type.__name__ = "Unsigned32"
_TerminationPointValidSigTimer_Object = MibTableColumn
terminationPointValidSigTimer = _TerminationPointValidSigTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 8),
    _TerminationPointValidSigTimer_Type()
)
terminationPointValidSigTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointValidSigTimer.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointValidSigTimer.setUnits("min")
_TerminationPointConnector_Type = FspR7ConnectorType
_TerminationPointConnector_Object = MibTableColumn
terminationPointConnector = _TerminationPointConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 9),
    _TerminationPointConnector_Type()
)
terminationPointConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointConnector.setStatus("current")
_TerminationPointFiber_Type = FspR7OpticalFiberType
_TerminationPointFiber_Object = MibTableColumn
terminationPointFiber = _TerminationPointFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 10),
    _TerminationPointFiber_Type()
)
terminationPointFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointFiber.setStatus("current")
_TerminationPointConnType_Type = FspR7TypeConnection
_TerminationPointConnType_Object = MibTableColumn
terminationPointConnType = _TerminationPointConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 11),
    _TerminationPointConnType_Type()
)
terminationPointConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointConnType.setStatus("current")
_TerminationPointOper_Type = FspR7OperState
_TerminationPointOper_Object = MibTableColumn
terminationPointOper = _TerminationPointOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 12),
    _TerminationPointOper_Type()
)
terminationPointOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointOper.setStatus("current")
_TerminationPointOutputPower_Type = Integer32
_TerminationPointOutputPower_Object = MibTableColumn
terminationPointOutputPower = _TerminationPointOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 13),
    _TerminationPointOutputPower_Type()
)
terminationPointOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointOutputPower.setUnits("0.1 dBm")
_TerminationPointInputPower_Type = Integer32
_TerminationPointInputPower_Object = MibTableColumn
terminationPointInputPower = _TerminationPointInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 14),
    _TerminationPointInputPower_Type()
)
terminationPointInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointInputPower.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointInputPower.setUnits("0.1 dBm")
_TerminationPointFiberConnAtten_Type = Integer32
_TerminationPointFiberConnAtten_Object = MibTableColumn
terminationPointFiberConnAtten = _TerminationPointFiberConnAtten_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 15),
    _TerminationPointFiberConnAtten_Type()
)
terminationPointFiberConnAtten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointFiberConnAtten.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointFiberConnAtten.setUnits("0.1 dB")
_TerminationPointConnEqptState_Type = FspR7ConnectState
_TerminationPointConnEqptState_Object = MibTableColumn
terminationPointConnEqptState = _TerminationPointConnEqptState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 16),
    _TerminationPointConnEqptState_Type()
)
terminationPointConnEqptState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointConnEqptState.setStatus("current")
_TerminationPointTermType_Type = FspR7EquipmentType
_TerminationPointTermType_Object = MibTableColumn
terminationPointTermType = _TerminationPointTermType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 17),
    _TerminationPointTermType_Type()
)
terminationPointTermType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointTermType.setStatus("current")
_TerminationPointChannel_Type = FspR7ChannelIdentifier
_TerminationPointChannel_Object = MibTableColumn
terminationPointChannel = _TerminationPointChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 18),
    _TerminationPointChannel_Type()
)
terminationPointChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointChannel.setStatus("current")
_TerminationPointLambda_Type = Unsigned32
_TerminationPointLambda_Object = MibTableColumn
terminationPointLambda = _TerminationPointLambda_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 19),
    _TerminationPointLambda_Type()
)
terminationPointLambda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointLambda.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointLambda.setUnits("0.01 nm")
_TerminationPointFrequency_Type = Unsigned32
_TerminationPointFrequency_Object = MibTableColumn
terminationPointFrequency = _TerminationPointFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 20),
    _TerminationPointFrequency_Type()
)
terminationPointFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointFrequency.setStatus("current")
if mibBuilder.loadTexts:
    terminationPointFrequency.setUnits("0.01 THz")
_TerminationPointReach_Type = FspR7OpticalInterfaceReach
_TerminationPointReach_Object = MibTableColumn
terminationPointReach = _TerminationPointReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 21),
    _TerminationPointReach_Type()
)
terminationPointReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointReach.setStatus("current")
_TerminationPointBand_Type = FspR7OpticalBand
_TerminationPointBand_Object = MibTableColumn
terminationPointBand = _TerminationPointBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 22),
    _TerminationPointBand_Type()
)
terminationPointBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointBand.setStatus("current")
_TerminationPointSubBand_Type = FspR7OpticalSubBand
_TerminationPointSubBand_Object = MibTableColumn
terminationPointSubBand = _TerminationPointSubBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 23),
    _TerminationPointSubBand_Type()
)
terminationPointSubBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointSubBand.setStatus("current")
_TerminationPointGroup_Type = FspR7OpticalGroup
_TerminationPointGroup_Object = MibTableColumn
terminationPointGroup = _TerminationPointGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 24),
    _TerminationPointGroup_Type()
)
terminationPointGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointGroup.setStatus("current")
_TerminationPointSfProvision_Type = FspR7SingleFiberLocation
_TerminationPointSfProvision_Object = MibTableColumn
terminationPointSfProvision = _TerminationPointSfProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 25),
    _TerminationPointSfProvision_Type()
)
terminationPointSfProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointSfProvision.setStatus("current")
_TerminationPointDirection_Type = ApsDirection
_TerminationPointDirection_Object = MibTableColumn
terminationPointDirection = _TerminationPointDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 26),
    _TerminationPointDirection_Type()
)
terminationPointDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointDirection.setStatus("current")
_TerminationPointLevel_Type = FspR7OpticalMultiplexLevel
_TerminationPointLevel_Object = MibTableColumn
terminationPointLevel = _TerminationPointLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 27),
    _TerminationPointLevel_Type()
)
terminationPointLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointLevel.setStatus("current")
_TerminationPointSecondaryStates_Type = FspR7EntitySecondaryStates
_TerminationPointSecondaryStates_Object = MibTableColumn
terminationPointSecondaryStates = _TerminationPointSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 28),
    _TerminationPointSecondaryStates_Type()
)
terminationPointSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointSecondaryStates.setStatus("current")
_TerminationPointChannelRangeProvision_Type = FspR7ChannelRangeInventory
_TerminationPointChannelRangeProvision_Object = MibTableColumn
terminationPointChannelRangeProvision = _TerminationPointChannelRangeProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 1, 1, 29),
    _TerminationPointChannelRangeProvision_Type()
)
terminationPointChannelRangeProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    terminationPointChannelRangeProvision.setStatus("current")
_ConnectionTable_Object = MibTable
connectionTable = _ConnectionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2)
)
if mibBuilder.loadTexts:
    connectionTable.setStatus("current")
_ConnectionEntry_Object = MibTableRow
connectionEntry = _ConnectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2, 1)
)
connectionEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "entityConnectionClassName"),
)
if mibBuilder.loadTexts:
    connectionEntry.setStatus("current")
_ConnectionRowStatus_Type = RowStatus
_ConnectionRowStatus_Object = MibTableColumn
connectionRowStatus = _ConnectionRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2, 1, 1),
    _ConnectionRowStatus_Type()
)
connectionRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    connectionRowStatus.setStatus("current")
_ConnectionType_Type = FspR7TypeConnection
_ConnectionType_Object = MibTableColumn
connectionType = _ConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2, 1, 2),
    _ConnectionType_Type()
)
connectionType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    connectionType.setStatus("current")
_ConnectionState_Type = FspR7StateConnection
_ConnectionState_Object = MibTableColumn
connectionState = _ConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2, 1, 3),
    _ConnectionState_Type()
)
connectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionState.setStatus("current")
_ConnectionCreationMethod_Type = FfpType
_ConnectionCreationMethod_Object = MibTableColumn
connectionCreationMethod = _ConnectionCreationMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 2, 1, 4),
    _ConnectionCreationMethod_Type()
)
connectionCreationMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    connectionCreationMethod.setStatus("current")
_FacilityReferByTable_Object = MibTable
facilityReferByTable = _FacilityReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 3)
)
if mibBuilder.loadTexts:
    facilityReferByTable.setStatus("current")
_FacilityReferByEntry_Object = MibTableRow
facilityReferByEntry = _FacilityReferByEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 3, 1)
)
facilityReferByEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    facilityReferByEntry.setStatus("current")
_FacilityReferByTerminPoint_Type = RowPointer
_FacilityReferByTerminPoint_Object = MibTableColumn
facilityReferByTerminPoint = _FacilityReferByTerminPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 3, 1, 1),
    _FacilityReferByTerminPoint_Type()
)
facilityReferByTerminPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    facilityReferByTerminPoint.setStatus("current")
_ExternalPortReferByTable_Object = MibTable
externalPortReferByTable = _ExternalPortReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 4)
)
if mibBuilder.loadTexts:
    externalPortReferByTable.setStatus("current")
_ExternalPortReferByEntry_Object = MibTableRow
externalPortReferByEntry = _ExternalPortReferByEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 4, 1)
)
externalPortReferByEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
)
if mibBuilder.loadTexts:
    externalPortReferByEntry.setStatus("current")
_ExternalPortReferByTerminPoint_Type = RowPointer
_ExternalPortReferByTerminPoint_Object = MibTableColumn
externalPortReferByTerminPoint = _ExternalPortReferByTerminPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 4, 1, 1),
    _ExternalPortReferByTerminPoint_Type()
)
externalPortReferByTerminPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalPortReferByTerminPoint.setStatus("current")
_EndOfExternalPortReferByTabke_Type = Integer32
_EndOfExternalPortReferByTabke_Object = MibScalar
endOfExternalPortReferByTabke = _EndOfExternalPortReferByTabke_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 5),
    _EndOfExternalPortReferByTabke_Type()
)
endOfExternalPortReferByTabke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfExternalPortReferByTabke.setStatus("current")
_DcnReferByTable_Object = MibTable
dcnReferByTable = _DcnReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 6)
)
if mibBuilder.loadTexts:
    dcnReferByTable.setStatus("current")
_DcnReferByEntry_Object = MibTableRow
dcnReferByEntry = _DcnReferByEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 6, 1)
)
dcnReferByEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityDcnClassName"),
)
if mibBuilder.loadTexts:
    dcnReferByEntry.setStatus("current")
_DcnReferByTerminPoint_Type = RowPointer
_DcnReferByTerminPoint_Object = MibTableColumn
dcnReferByTerminPoint = _DcnReferByTerminPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 6, 1, 1),
    _DcnReferByTerminPoint_Type()
)
dcnReferByTerminPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnReferByTerminPoint.setStatus("current")
_EndOfDcnReferByTable_Type = Integer32
_EndOfDcnReferByTable_Object = MibScalar
endOfDcnReferByTable = _EndOfDcnReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 7),
    _EndOfDcnReferByTable_Type()
)
endOfDcnReferByTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDcnReferByTable.setStatus("current")
_OpticalMuxReferByTable_Object = MibTable
opticalMuxReferByTable = _OpticalMuxReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 8)
)
if mibBuilder.loadTexts:
    opticalMuxReferByTable.setStatus("current")
_OpticalMuxReferByEntry_Object = MibTableRow
opticalMuxReferByEntry = _OpticalMuxReferByEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 8, 1)
)
opticalMuxReferByEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"),
)
if mibBuilder.loadTexts:
    opticalMuxReferByEntry.setStatus("current")
_OpticalMuxReferByTerminPoint_Type = RowPointer
_OpticalMuxReferByTerminPoint_Object = MibTableColumn
opticalMuxReferByTerminPoint = _OpticalMuxReferByTerminPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 8, 1, 1),
    _OpticalMuxReferByTerminPoint_Type()
)
opticalMuxReferByTerminPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalMuxReferByTerminPoint.setStatus("current")
_EndOfOpticalMuxReferByTable_Type = Integer32
_EndOfOpticalMuxReferByTable_Object = MibScalar
endOfOpticalMuxReferByTable = _EndOfOpticalMuxReferByTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 9),
    _EndOfOpticalMuxReferByTable_Type()
)
endOfOpticalMuxReferByTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfOpticalMuxReferByTable.setStatus("current")
_EndOfFiberMap_Type = Integer32
_EndOfFiberMap_Object = MibScalar
endOfFiberMap = _EndOfFiberMap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 1, 10000),
    _EndOfFiberMap_Type()
)
endOfFiberMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFiberMap.setStatus("current")
_PmSnapshot_ObjectIdentity = ObjectIdentity
pmSnapshot = _PmSnapshot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2)
)
_StartPmSnapshot_Type = FspR7RlsAction
_StartPmSnapshot_Object = MibScalar
startPmSnapshot = _StartPmSnapshot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 1),
    _StartPmSnapshot_Type()
)
startPmSnapshot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    startPmSnapshot.setStatus("current")
_PmSnapshotStatus_Type = FspR7PmSnapshotStatus
_PmSnapshotStatus_Object = MibScalar
pmSnapshotStatus = _PmSnapshotStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 2),
    _PmSnapshotStatus_Type()
)
pmSnapshotStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotStatus.setStatus("current")
_PmSnapshotCurrentTable_Object = MibTable
pmSnapshotCurrentTable = _PmSnapshotCurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3)
)
if mibBuilder.loadTexts:
    pmSnapshotCurrentTable.setStatus("current")
_PmSnapshotCurrentEntry_Object = MibTableRow
pmSnapshotCurrentEntry = _PmSnapshotCurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1)
)
pmSnapshotCurrentEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    pmSnapshotCurrentEntry.setStatus("current")
_PmSnapshotCurrentOutputPower_Type = Integer32
_PmSnapshotCurrentOutputPower_Object = MibTableColumn
pmSnapshotCurrentOutputPower = _PmSnapshotCurrentOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 1),
    _PmSnapshotCurrentOutputPower_Type()
)
pmSnapshotCurrentOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOutputPower.setUnits("0.1 dBm")
_PmSnapshotCurrentInputPower_Type = Integer32
_PmSnapshotCurrentInputPower_Object = MibTableColumn
pmSnapshotCurrentInputPower = _PmSnapshotCurrentInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 2),
    _PmSnapshotCurrentInputPower_Type()
)
pmSnapshotCurrentInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentInputPower.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentInputPower.setUnits("0.1 dBm")
_PmSnapshotCurrentAttenuation_Type = Integer32
_PmSnapshotCurrentAttenuation_Object = MibTableColumn
pmSnapshotCurrentAttenuation = _PmSnapshotCurrentAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 3),
    _PmSnapshotCurrentAttenuation_Type()
)
pmSnapshotCurrentAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentAttenuation.setUnits("0.1 dB")
_PmSnapshotCurrentAttenOfVoa_Type = Unsigned32
_PmSnapshotCurrentAttenOfVoa_Object = MibTableColumn
pmSnapshotCurrentAttenOfVoa = _PmSnapshotCurrentAttenOfVoa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 4),
    _PmSnapshotCurrentAttenOfVoa_Type()
)
pmSnapshotCurrentAttenOfVoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentAttenOfVoa.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentAttenOfVoa.setUnits("0.1 dB")
_PmSnapshotCurrentOscGain_Type = Unsigned32
_PmSnapshotCurrentOscGain_Object = MibTableColumn
pmSnapshotCurrentOscGain = _PmSnapshotCurrentOscGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 5),
    _PmSnapshotCurrentOscGain_Type()
)
pmSnapshotCurrentOscGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOscGain.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOscGain.setUnits("0.1 dB")
_PmSnapshotCurrentBckreflecPwrRx_Type = Integer32
_PmSnapshotCurrentBckreflecPwrRx_Object = MibTableColumn
pmSnapshotCurrentBckreflecPwrRx = _PmSnapshotCurrentBckreflecPwrRx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 6),
    _PmSnapshotCurrentBckreflecPwrRx_Type()
)
pmSnapshotCurrentBckreflecPwrRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentBckreflecPwrRx.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentBckreflecPwrRx.setUnits("0.1 dB")
_PmSnapshotCurrentRamanPumpPower_Type = Integer32
_PmSnapshotCurrentRamanPumpPower_Object = MibTableColumn
pmSnapshotCurrentRamanPumpPower = _PmSnapshotCurrentRamanPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 7),
    _PmSnapshotCurrentRamanPumpPower_Type()
)
pmSnapshotCurrentRamanPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentRamanPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentRamanPumpPower.setUnits("0.1 dBm")
_PmSnapshotCurrentOscPwrReceived_Type = Integer32
_PmSnapshotCurrentOscPwrReceived_Object = MibTableColumn
pmSnapshotCurrentOscPwrReceived = _PmSnapshotCurrentOscPwrReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 8),
    _PmSnapshotCurrentOscPwrReceived_Type()
)
pmSnapshotCurrentOscPwrReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOscPwrReceived.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentOscPwrReceived.setUnits("0.1 dBm")
_PmSnapshotCurrentVariableGain_Type = Unsigned32
_PmSnapshotCurrentVariableGain_Object = MibTableColumn
pmSnapshotCurrentVariableGain = _PmSnapshotCurrentVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 9),
    _PmSnapshotCurrentVariableGain_Type()
)
pmSnapshotCurrentVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentVariableGain.setUnits("0.1 dB")
_PmSnapshotCurrentTxLineAtten_Type = Integer32
_PmSnapshotCurrentTxLineAtten_Object = MibTableColumn
pmSnapshotCurrentTxLineAtten = _PmSnapshotCurrentTxLineAtten_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 10),
    _PmSnapshotCurrentTxLineAtten_Type()
)
pmSnapshotCurrentTxLineAtten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTxLineAtten.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTxLineAtten.setUnits("0.1 dB")
_PmSnapshotCurrentRxLineAtten_Type = Integer32
_PmSnapshotCurrentRxLineAtten_Object = MibTableColumn
pmSnapshotCurrentRxLineAtten = _PmSnapshotCurrentRxLineAtten_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 3, 1, 11),
    _PmSnapshotCurrentRxLineAtten_Type()
)
pmSnapshotCurrentRxLineAtten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentRxLineAtten.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotCurrentRxLineAtten.setUnits("0.1 dB")
_PmSnapshotHistoricalTable_Object = MibTable
pmSnapshotHistoricalTable = _PmSnapshotHistoricalTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4)
)
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTable.setStatus("current")
_PmSnapshotHistoricalEntry_Object = MibTableRow
pmSnapshotHistoricalEntry = _PmSnapshotHistoricalEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1)
)
pmSnapshotHistoricalEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "pmSnapshotHistoricalParameter"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "pmSnapshotHistoricalNumber"),
)
if mibBuilder.loadTexts:
    pmSnapshotHistoricalEntry.setStatus("current")
_PmSnapshotHistoricalParameter_Type = FspR7PmSnapshotParameterTypes
_PmSnapshotHistoricalParameter_Object = MibTableColumn
pmSnapshotHistoricalParameter = _PmSnapshotHistoricalParameter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1, 1),
    _PmSnapshotHistoricalParameter_Type()
)
pmSnapshotHistoricalParameter.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalParameter.setStatus("current")


class _PmSnapshotHistoricalNumber_Type(Unsigned32):
    """Custom type pmSnapshotHistoricalNumber based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_PmSnapshotHistoricalNumber_Type.__name__ = "Unsigned32"
_PmSnapshotHistoricalNumber_Object = MibTableColumn
pmSnapshotHistoricalNumber = _PmSnapshotHistoricalNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1, 2),
    _PmSnapshotHistoricalNumber_Type()
)
pmSnapshotHistoricalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalNumber.setStatus("current")
_PmSnapshotHistoricalValue_Type = Integer32
_PmSnapshotHistoricalValue_Object = MibTableColumn
pmSnapshotHistoricalValue = _PmSnapshotHistoricalValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1, 3),
    _PmSnapshotHistoricalValue_Type()
)
pmSnapshotHistoricalValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalValue.setStatus("current")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalValue.setUnits("0.1")
_PmSnapshotHistoricalValidFlag_Type = TruthValue
_PmSnapshotHistoricalValidFlag_Object = MibTableColumn
pmSnapshotHistoricalValidFlag = _PmSnapshotHistoricalValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1, 4),
    _PmSnapshotHistoricalValidFlag_Type()
)
pmSnapshotHistoricalValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalValidFlag.setStatus("current")
_PmSnapshotHistoricalTimeStamp_Type = DateAndTime
_PmSnapshotHistoricalTimeStamp_Object = MibTableColumn
pmSnapshotHistoricalTimeStamp = _PmSnapshotHistoricalTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 4, 1, 5),
    _PmSnapshotHistoricalTimeStamp_Type()
)
pmSnapshotHistoricalTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTimeStamp.setStatus("current")
_PmSnapshotCurrentTerminPointTable_Object = MibTable
pmSnapshotCurrentTerminPointTable = _PmSnapshotCurrentTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 5)
)
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointTable.setStatus("deprecated")
_PmSnapshotCurrentTerminPointEntry_Object = MibTableRow
pmSnapshotCurrentTerminPointEntry = _PmSnapshotCurrentTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 5, 1)
)
pmSnapshotCurrentTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
)
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointEntry.setStatus("deprecated")
_PmSnapshotCurrentTerminPointOutputPower_Type = Integer32
_PmSnapshotCurrentTerminPointOutputPower_Object = MibTableColumn
pmSnapshotCurrentTerminPointOutputPower = _PmSnapshotCurrentTerminPointOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 5, 1, 1),
    _PmSnapshotCurrentTerminPointOutputPower_Type()
)
pmSnapshotCurrentTerminPointOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointOutputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointOutputPower.setUnits("0.1 dBm")
_PmSnapshotCurrentTerminPointInputPower_Type = Integer32
_PmSnapshotCurrentTerminPointInputPower_Object = MibTableColumn
pmSnapshotCurrentTerminPointInputPower = _PmSnapshotCurrentTerminPointInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 5, 1, 2),
    _PmSnapshotCurrentTerminPointInputPower_Type()
)
pmSnapshotCurrentTerminPointInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointInputPower.setStatus("deprecated")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointInputPower.setUnits("0.1 dBm")
_PmSnapshotCurrentTerminPointFiberConnAtten_Type = Integer32
_PmSnapshotCurrentTerminPointFiberConnAtten_Object = MibTableColumn
pmSnapshotCurrentTerminPointFiberConnAtten = _PmSnapshotCurrentTerminPointFiberConnAtten_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 5, 1, 3),
    _PmSnapshotCurrentTerminPointFiberConnAtten_Type()
)
pmSnapshotCurrentTerminPointFiberConnAtten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointFiberConnAtten.setStatus("deprecated")
if mibBuilder.loadTexts:
    pmSnapshotCurrentTerminPointFiberConnAtten.setUnits("0.1 dB")
_PmSnapshotHistoricalTerminPointTable_Object = MibTable
pmSnapshotHistoricalTerminPointTable = _PmSnapshotHistoricalTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6)
)
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointTable.setStatus("deprecated")
_PmSnapshotHistoricalTerminPointEntry_Object = MibTableRow
pmSnapshotHistoricalTerminPointEntry = _PmSnapshotHistoricalTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1)
)
pmSnapshotHistoricalTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "pmSnapshotHistoricalTerminPointParameter"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "pmSnapshotHistoricalTerminPointNumber"),
)
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointEntry.setStatus("deprecated")
_PmSnapshotHistoricalTerminPointParameter_Type = FspR7PmSnapshotParameterTypes
_PmSnapshotHistoricalTerminPointParameter_Object = MibTableColumn
pmSnapshotHistoricalTerminPointParameter = _PmSnapshotHistoricalTerminPointParameter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1, 1),
    _PmSnapshotHistoricalTerminPointParameter_Type()
)
pmSnapshotHistoricalTerminPointParameter.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointParameter.setStatus("deprecated")


class _PmSnapshotHistoricalTerminPointNumber_Type(Unsigned32):
    """Custom type pmSnapshotHistoricalTerminPointNumber based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_PmSnapshotHistoricalTerminPointNumber_Type.__name__ = "Unsigned32"
_PmSnapshotHistoricalTerminPointNumber_Object = MibTableColumn
pmSnapshotHistoricalTerminPointNumber = _PmSnapshotHistoricalTerminPointNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1, 2),
    _PmSnapshotHistoricalTerminPointNumber_Type()
)
pmSnapshotHistoricalTerminPointNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointNumber.setStatus("deprecated")
_PmSnapshotHistoricalTerminPointValue_Type = Integer32
_PmSnapshotHistoricalTerminPointValue_Object = MibTableColumn
pmSnapshotHistoricalTerminPointValue = _PmSnapshotHistoricalTerminPointValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1, 3),
    _PmSnapshotHistoricalTerminPointValue_Type()
)
pmSnapshotHistoricalTerminPointValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointValue.setStatus("deprecated")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointValue.setUnits("0.1")
_PmSnapshotHistoricalTerminPointValidFlag_Type = TruthValue
_PmSnapshotHistoricalTerminPointValidFlag_Object = MibTableColumn
pmSnapshotHistoricalTerminPointValidFlag = _PmSnapshotHistoricalTerminPointValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1, 4),
    _PmSnapshotHistoricalTerminPointValidFlag_Type()
)
pmSnapshotHistoricalTerminPointValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointValidFlag.setStatus("deprecated")
_PmSnapshotHistoricalTerminPointTimeStamp_Type = DateAndTime
_PmSnapshotHistoricalTerminPointTimeStamp_Object = MibTableColumn
pmSnapshotHistoricalTerminPointTimeStamp = _PmSnapshotHistoricalTerminPointTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 6, 1, 5),
    _PmSnapshotHistoricalTerminPointTimeStamp_Type()
)
pmSnapshotHistoricalTerminPointTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotHistoricalTerminPointTimeStamp.setStatus("deprecated")
_EndOfPmSnampshot_Type = Integer32
_EndOfPmSnampshot_Object = MibScalar
endOfPmSnampshot = _EndOfPmSnampshot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 2, 10000),
    _EndOfPmSnampshot_Type()
)
endOfPmSnampshot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfPmSnampshot.setStatus("current")
_Eci_ObjectIdentity = ObjectIdentity
eci = _Eci_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3)
)
_ExternalPortTable_Object = MibTable
externalPortTable = _ExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1)
)
if mibBuilder.loadTexts:
    externalPortTable.setStatus("current")
_ExternalPortEntry_Object = MibTableRow
externalPortEntry = _ExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1)
)
externalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
)
if mibBuilder.loadTexts:
    externalPortEntry.setStatus("current")
_ExternalPortRowStatus_Type = RowStatus
_ExternalPortRowStatus_Object = MibTableColumn
externalPortRowStatus = _ExternalPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 1),
    _ExternalPortRowStatus_Type()
)
externalPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortRowStatus.setStatus("current")
_ExternalPortConnectionState_Type = FspR7ConnectState
_ExternalPortConnectionState_Object = MibTableColumn
externalPortConnectionState = _ExternalPortConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 2),
    _ExternalPortConnectionState_Type()
)
externalPortConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalPortConnectionState.setStatus("current")
_ExternalPortType_Type = FspR7InterfaceType
_ExternalPortType_Object = MibTableColumn
externalPortType = _ExternalPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 3),
    _ExternalPortType_Type()
)
externalPortType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortType.setStatus("current")
_ExternalPortTransmitChannel_Type = FspR7ChannelIdentifier
_ExternalPortTransmitChannel_Object = MibTableColumn
externalPortTransmitChannel = _ExternalPortTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 4),
    _ExternalPortTransmitChannel_Type()
)
externalPortTransmitChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortTransmitChannel.setStatus("current")
_ExternalPortChannelBandwith_Type = FspR7ChannelBandwidth
_ExternalPortChannelBandwith_Object = MibTableColumn
externalPortChannelBandwith = _ExternalPortChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 5),
    _ExternalPortChannelBandwith_Type()
)
externalPortChannelBandwith.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortChannelBandwith.setStatus("current")
_ExternalPortAlias_Type = SnmpAdminString
_ExternalPortAlias_Object = MibTableColumn
externalPortAlias = _ExternalPortAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 6),
    _ExternalPortAlias_Type()
)
externalPortAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortAlias.setStatus("current")
_ExternalPortFarEndLocation_Type = SnmpAdminString
_ExternalPortFarEndLocation_Object = MibTableColumn
externalPortFarEndLocation = _ExternalPortFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 7),
    _ExternalPortFarEndLocation_Type()
)
externalPortFarEndLocation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortFarEndLocation.setStatus("current")
_ExternalPortBitrate_Type = Unsigned32
_ExternalPortBitrate_Object = MibTableColumn
externalPortBitrate = _ExternalPortBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 8),
    _ExternalPortBitrate_Type()
)
externalPortBitrate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortBitrate.setStatus("current")
if mibBuilder.loadTexts:
    externalPortBitrate.setUnits("Mbps")
_ExternalPortFecType_Type = FspR7FecType
_ExternalPortFecType_Object = MibTableColumn
externalPortFecType = _ExternalPortFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 9),
    _ExternalPortFecType_Type()
)
externalPortFecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortFecType.setStatus("current")
_ExternalPortLineCoding_Type = FspR7LineCoding
_ExternalPortLineCoding_Object = MibTableColumn
externalPortLineCoding = _ExternalPortLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 10),
    _ExternalPortLineCoding_Type()
)
externalPortLineCoding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortLineCoding.setStatus("current")
_ExternalPortFrameFormat_Type = FspR7FrameFormat
_ExternalPortFrameFormat_Object = MibTableColumn
externalPortFrameFormat = _ExternalPortFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 11),
    _ExternalPortFrameFormat_Type()
)
externalPortFrameFormat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortFrameFormat.setStatus("current")


class _ExternalPortOpticalPowerTx_Type(Integer32):
    """Custom type externalPortOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
    )


_ExternalPortOpticalPowerTx_Type.__name__ = "Integer32"
_ExternalPortOpticalPowerTx_Object = MibTableColumn
externalPortOpticalPowerTx = _ExternalPortOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 12),
    _ExternalPortOpticalPowerTx_Type()
)
externalPortOpticalPowerTx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    externalPortOpticalPowerTx.setUnits("0.1 dBm")


class _ExternalPortOsnrTransmit_Type(Unsigned32):
    """Custom type externalPortOsnrTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
    )


_ExternalPortOsnrTransmit_Type.__name__ = "Unsigned32"
_ExternalPortOsnrTransmit_Object = MibTableColumn
externalPortOsnrTransmit = _ExternalPortOsnrTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 13),
    _ExternalPortOsnrTransmit_Type()
)
externalPortOsnrTransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortOsnrTransmit.setStatus("current")
if mibBuilder.loadTexts:
    externalPortOsnrTransmit.setUnits("dB")


class _ExternalPortPmdTransmit_Type(Unsigned32):
    """Custom type externalPortPmdTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_ExternalPortPmdTransmit_Type.__name__ = "Unsigned32"
_ExternalPortPmdTransmit_Object = MibTableColumn
externalPortPmdTransmit = _ExternalPortPmdTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 14),
    _ExternalPortPmdTransmit_Type()
)
externalPortPmdTransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortPmdTransmit.setStatus("current")
if mibBuilder.loadTexts:
    externalPortPmdTransmit.setUnits("ps")


class _ExternalPortChromDisperTx_Type(Integer32):
    """Custom type externalPortChromDisperTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalPortChromDisperTx_Type.__name__ = "Integer32"
_ExternalPortChromDisperTx_Object = MibTableColumn
externalPortChromDisperTx = _ExternalPortChromDisperTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 15),
    _ExternalPortChromDisperTx_Type()
)
externalPortChromDisperTx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortChromDisperTx.setStatus("current")
if mibBuilder.loadTexts:
    externalPortChromDisperTx.setUnits("ps/nm")


class _ExternalPortMinOsnrRcv_Type(Unsigned32):
    """Custom type externalPortMinOsnrRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
    )


_ExternalPortMinOsnrRcv_Type.__name__ = "Unsigned32"
_ExternalPortMinOsnrRcv_Object = MibTableColumn
externalPortMinOsnrRcv = _ExternalPortMinOsnrRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 16),
    _ExternalPortMinOsnrRcv_Type()
)
externalPortMinOsnrRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMinOsnrRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMinOsnrRcv.setUnits("dB")


class _ExternalPortMinOptPowerRcv_Type(Integer32):
    """Custom type externalPortMinOptPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 1000),
    )


_ExternalPortMinOptPowerRcv_Type.__name__ = "Integer32"
_ExternalPortMinOptPowerRcv_Object = MibTableColumn
externalPortMinOptPowerRcv = _ExternalPortMinOptPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 17),
    _ExternalPortMinOptPowerRcv_Type()
)
externalPortMinOptPowerRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMinOptPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMinOptPowerRcv.setUnits("0.1 dBm")


class _ExternalPortMaxOptPowerRcv_Type(Integer32):
    """Custom type externalPortMaxOptPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 1000),
    )


_ExternalPortMaxOptPowerRcv_Type.__name__ = "Integer32"
_ExternalPortMaxOptPowerRcv_Object = MibTableColumn
externalPortMaxOptPowerRcv = _ExternalPortMaxOptPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 18),
    _ExternalPortMaxOptPowerRcv_Type()
)
externalPortMaxOptPowerRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMaxOptPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMaxOptPowerRcv.setUnits("0.1 dBm")


class _ExternalPortMaxPmdRcv_Type(Unsigned32):
    """Custom type externalPortMaxPmdRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_ExternalPortMaxPmdRcv_Type.__name__ = "Unsigned32"
_ExternalPortMaxPmdRcv_Object = MibTableColumn
externalPortMaxPmdRcv = _ExternalPortMaxPmdRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 19),
    _ExternalPortMaxPmdRcv_Type()
)
externalPortMaxPmdRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMaxPmdRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMaxPmdRcv.setUnits("ps")


class _ExternalPortMinChromDisperRcv_Type(Integer32):
    """Custom type externalPortMinChromDisperRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalPortMinChromDisperRcv_Type.__name__ = "Integer32"
_ExternalPortMinChromDisperRcv_Object = MibTableColumn
externalPortMinChromDisperRcv = _ExternalPortMinChromDisperRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 20),
    _ExternalPortMinChromDisperRcv_Type()
)
externalPortMinChromDisperRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMinChromDisperRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMinChromDisperRcv.setUnits("ps/nm")


class _ExternalPortMaxChromDisperRcv_Type(Integer32):
    """Custom type externalPortMaxChromDisperRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalPortMaxChromDisperRcv_Type.__name__ = "Integer32"
_ExternalPortMaxChromDisperRcv_Object = MibTableColumn
externalPortMaxChromDisperRcv = _ExternalPortMaxChromDisperRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 21),
    _ExternalPortMaxChromDisperRcv_Type()
)
externalPortMaxChromDisperRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMaxChromDisperRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalPortMaxChromDisperRcv.setUnits("ps/nm")
_ExternalPortMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_ExternalPortMaxBitErrorRate_Object = MibTableColumn
externalPortMaxBitErrorRate = _ExternalPortMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 22),
    _ExternalPortMaxBitErrorRate_Type()
)
externalPortMaxBitErrorRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortMaxBitErrorRate.setStatus("current")
_ExternalPortSourceProfile_Type = SnmpAdminString
_ExternalPortSourceProfile_Object = MibTableColumn
externalPortSourceProfile = _ExternalPortSourceProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 23),
    _ExternalPortSourceProfile_Type()
)
externalPortSourceProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalPortSourceProfile.setStatus("current")
_ExternalPortSecondaryStates_Type = FspR7EntitySecondaryStates
_ExternalPortSecondaryStates_Object = MibTableColumn
externalPortSecondaryStates = _ExternalPortSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 1, 1, 24),
    _ExternalPortSecondaryStates_Type()
)
externalPortSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalPortSecondaryStates.setStatus("current")
_ExternalOmTable_Object = MibTable
externalOmTable = _ExternalOmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 3)
)
if mibBuilder.loadTexts:
    externalOmTable.setStatus("current")
_ExternalOmEntry_Object = MibTableRow
externalOmEntry = _ExternalOmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 3, 1)
)
externalOmEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
)
if mibBuilder.loadTexts:
    externalOmEntry.setStatus("current")
_ExternalOmRowStatus_Type = RowStatus
_ExternalOmRowStatus_Object = MibTableColumn
externalOmRowStatus = _ExternalOmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 3, 1, 1),
    _ExternalOmRowStatus_Type()
)
externalOmRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalOmRowStatus.setStatus("current")
_ExternalOmType_Type = FspR7InterfaceType
_ExternalOmType_Object = MibTableColumn
externalOmType = _ExternalOmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 3, 1, 2),
    _ExternalOmType_Type()
)
externalOmType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalOmType.setStatus("current")
_ExternalOmHostName_Type = SnmpAdminString
_ExternalOmHostName_Object = MibTableColumn
externalOmHostName = _ExternalOmHostName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 3, 1, 3),
    _ExternalOmHostName_Type()
)
externalOmHostName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalOmHostName.setStatus("current")
_ExternalVchTable_Object = MibTable
externalVchTable = _ExternalVchTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5)
)
if mibBuilder.loadTexts:
    externalVchTable.setStatus("current")
_ExternalVchEntry_Object = MibTableRow
externalVchEntry = _ExternalVchEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1)
)
externalVchEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityExternalPortClassName"),
)
if mibBuilder.loadTexts:
    externalVchEntry.setStatus("current")
_ExternalVchRowStatus_Type = RowStatus
_ExternalVchRowStatus_Object = MibTableColumn
externalVchRowStatus = _ExternalVchRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 1),
    _ExternalVchRowStatus_Type()
)
externalVchRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchRowStatus.setStatus("current")
_ExternalVchConnectionState_Type = FspR7ConnectState
_ExternalVchConnectionState_Object = MibTableColumn
externalVchConnectionState = _ExternalVchConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 2),
    _ExternalVchConnectionState_Type()
)
externalVchConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalVchConnectionState.setStatus("current")
_ExternalVchType_Type = FspR7InterfaceType
_ExternalVchType_Object = MibTableColumn
externalVchType = _ExternalVchType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 3),
    _ExternalVchType_Type()
)
externalVchType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchType.setStatus("current")
_ExternalVchTransmitChannel_Type = FspR7ChannelIdentifier
_ExternalVchTransmitChannel_Object = MibTableColumn
externalVchTransmitChannel = _ExternalVchTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 4),
    _ExternalVchTransmitChannel_Type()
)
externalVchTransmitChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchTransmitChannel.setStatus("current")
_ExternalVchChannelBandwith_Type = FspR7ChannelBandwidth
_ExternalVchChannelBandwith_Object = MibTableColumn
externalVchChannelBandwith = _ExternalVchChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 5),
    _ExternalVchChannelBandwith_Type()
)
externalVchChannelBandwith.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchChannelBandwith.setStatus("current")
_ExternalVchAlias_Type = SnmpAdminString
_ExternalVchAlias_Object = MibTableColumn
externalVchAlias = _ExternalVchAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 6),
    _ExternalVchAlias_Type()
)
externalVchAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchAlias.setStatus("current")
_ExternalVchFarEndLocation_Type = SnmpAdminString
_ExternalVchFarEndLocation_Object = MibTableColumn
externalVchFarEndLocation = _ExternalVchFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 7),
    _ExternalVchFarEndLocation_Type()
)
externalVchFarEndLocation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchFarEndLocation.setStatus("current")
_ExternalVchBitrate_Type = Unsigned32
_ExternalVchBitrate_Object = MibTableColumn
externalVchBitrate = _ExternalVchBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 8),
    _ExternalVchBitrate_Type()
)
externalVchBitrate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchBitrate.setStatus("current")
if mibBuilder.loadTexts:
    externalVchBitrate.setUnits("Mbps")
_ExternalVchFecType_Type = FspR7FecType
_ExternalVchFecType_Object = MibTableColumn
externalVchFecType = _ExternalVchFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 9),
    _ExternalVchFecType_Type()
)
externalVchFecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchFecType.setStatus("current")
_ExternalVchLineCoding_Type = FspR7LineCoding
_ExternalVchLineCoding_Object = MibTableColumn
externalVchLineCoding = _ExternalVchLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 10),
    _ExternalVchLineCoding_Type()
)
externalVchLineCoding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchLineCoding.setStatus("current")
_ExternalVchFrameFormat_Type = FspR7FrameFormat
_ExternalVchFrameFormat_Object = MibTableColumn
externalVchFrameFormat = _ExternalVchFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 11),
    _ExternalVchFrameFormat_Type()
)
externalVchFrameFormat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchFrameFormat.setStatus("current")


class _ExternalVchOpticalPowerTx_Type(Integer32):
    """Custom type externalVchOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
    )


_ExternalVchOpticalPowerTx_Type.__name__ = "Integer32"
_ExternalVchOpticalPowerTx_Object = MibTableColumn
externalVchOpticalPowerTx = _ExternalVchOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 12),
    _ExternalVchOpticalPowerTx_Type()
)
externalVchOpticalPowerTx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    externalVchOpticalPowerTx.setUnits("0.1 dBm")


class _ExternalVchOsnrTransmit_Type(Unsigned32):
    """Custom type externalVchOsnrTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
    )


_ExternalVchOsnrTransmit_Type.__name__ = "Unsigned32"
_ExternalVchOsnrTransmit_Object = MibTableColumn
externalVchOsnrTransmit = _ExternalVchOsnrTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 13),
    _ExternalVchOsnrTransmit_Type()
)
externalVchOsnrTransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchOsnrTransmit.setStatus("current")
if mibBuilder.loadTexts:
    externalVchOsnrTransmit.setUnits("dB")


class _ExternalVchPmdTransmit_Type(Unsigned32):
    """Custom type externalVchPmdTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_ExternalVchPmdTransmit_Type.__name__ = "Unsigned32"
_ExternalVchPmdTransmit_Object = MibTableColumn
externalVchPmdTransmit = _ExternalVchPmdTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 14),
    _ExternalVchPmdTransmit_Type()
)
externalVchPmdTransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchPmdTransmit.setStatus("current")
if mibBuilder.loadTexts:
    externalVchPmdTransmit.setUnits("ps")


class _ExternalVchChromDisperTx_Type(Integer32):
    """Custom type externalVchChromDisperTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalVchChromDisperTx_Type.__name__ = "Integer32"
_ExternalVchChromDisperTx_Object = MibTableColumn
externalVchChromDisperTx = _ExternalVchChromDisperTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 15),
    _ExternalVchChromDisperTx_Type()
)
externalVchChromDisperTx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchChromDisperTx.setStatus("current")
if mibBuilder.loadTexts:
    externalVchChromDisperTx.setUnits("ps/nm")


class _ExternalVchMinOsnrRcv_Type(Unsigned32):
    """Custom type externalVchMinOsnrRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
    )


_ExternalVchMinOsnrRcv_Type.__name__ = "Unsigned32"
_ExternalVchMinOsnrRcv_Object = MibTableColumn
externalVchMinOsnrRcv = _ExternalVchMinOsnrRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 16),
    _ExternalVchMinOsnrRcv_Type()
)
externalVchMinOsnrRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMinOsnrRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMinOsnrRcv.setUnits("dB")


class _ExternalVchMinOptPowerRcv_Type(Integer32):
    """Custom type externalVchMinOptPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 1000),
    )


_ExternalVchMinOptPowerRcv_Type.__name__ = "Integer32"
_ExternalVchMinOptPowerRcv_Object = MibTableColumn
externalVchMinOptPowerRcv = _ExternalVchMinOptPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 17),
    _ExternalVchMinOptPowerRcv_Type()
)
externalVchMinOptPowerRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMinOptPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMinOptPowerRcv.setUnits("0.1 dBm")


class _ExternalVchMaxOptPowerRcv_Type(Integer32):
    """Custom type externalVchMaxOptPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 1000),
    )


_ExternalVchMaxOptPowerRcv_Type.__name__ = "Integer32"
_ExternalVchMaxOptPowerRcv_Object = MibTableColumn
externalVchMaxOptPowerRcv = _ExternalVchMaxOptPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 18),
    _ExternalVchMaxOptPowerRcv_Type()
)
externalVchMaxOptPowerRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMaxOptPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMaxOptPowerRcv.setUnits("0.1 dBm")


class _ExternalVchMaxPmdRcv_Type(Unsigned32):
    """Custom type externalVchMaxPmdRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_ExternalVchMaxPmdRcv_Type.__name__ = "Unsigned32"
_ExternalVchMaxPmdRcv_Object = MibTableColumn
externalVchMaxPmdRcv = _ExternalVchMaxPmdRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 19),
    _ExternalVchMaxPmdRcv_Type()
)
externalVchMaxPmdRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMaxPmdRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMaxPmdRcv.setUnits("ps")


class _ExternalVchMinChromDisperRcv_Type(Integer32):
    """Custom type externalVchMinChromDisperRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalVchMinChromDisperRcv_Type.__name__ = "Integer32"
_ExternalVchMinChromDisperRcv_Object = MibTableColumn
externalVchMinChromDisperRcv = _ExternalVchMinChromDisperRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 20),
    _ExternalVchMinChromDisperRcv_Type()
)
externalVchMinChromDisperRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMinChromDisperRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMinChromDisperRcv.setUnits("ps/nm")


class _ExternalVchMaxChromDisperRcv_Type(Integer32):
    """Custom type externalVchMaxChromDisperRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
    )


_ExternalVchMaxChromDisperRcv_Type.__name__ = "Integer32"
_ExternalVchMaxChromDisperRcv_Object = MibTableColumn
externalVchMaxChromDisperRcv = _ExternalVchMaxChromDisperRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 21),
    _ExternalVchMaxChromDisperRcv_Type()
)
externalVchMaxChromDisperRcv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMaxChromDisperRcv.setStatus("current")
if mibBuilder.loadTexts:
    externalVchMaxChromDisperRcv.setUnits("ps/nm")
_ExternalVchMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_ExternalVchMaxBitErrorRate_Object = MibTableColumn
externalVchMaxBitErrorRate = _ExternalVchMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 5, 1, 22),
    _ExternalVchMaxBitErrorRate_Type()
)
externalVchMaxBitErrorRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    externalVchMaxBitErrorRate.setStatus("current")
_EndOfEci_Type = Integer32
_EndOfEci_Object = MibScalar
endOfEci = _EndOfEci_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 3, 10000),
    _EndOfEci_Type()
)
endOfEci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfEci.setStatus("current")
_ServiceDiagnostics_ObjectIdentity = ObjectIdentity
serviceDiagnostics = _ServiceDiagnostics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4)
)
_ChannelTracesTable_Object = MibTable
channelTracesTable = _ChannelTracesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1)
)
if mibBuilder.loadTexts:
    channelTracesTable.setStatus("current")
_ChannelTracesEntry_Object = MibTableRow
channelTracesEntry = _ChannelTracesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1)
)
channelTracesEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "channelTracesIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "channelTracesIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "channelTracesIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "channelTracesIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "channelTracesClassName"),
    (0, "ADVA-FSPR7-MIB", "channelTracesChannelNumber"),
    (0, "ADVA-FSPR7-MIB", "channelTracesRouteId"),
    (0, "ADVA-FSPR7-MIB", "channelTracesElementId"),
)
if mibBuilder.loadTexts:
    channelTracesEntry.setStatus("current")
_ChannelTracesIndexNo1_Type = Unsigned32
_ChannelTracesIndexNo1_Object = MibTableColumn
channelTracesIndexNo1 = _ChannelTracesIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 1),
    _ChannelTracesIndexNo1_Type()
)
channelTracesIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesIndexNo1.setStatus("current")
_ChannelTracesIndexNo2_Type = Unsigned32
_ChannelTracesIndexNo2_Object = MibTableColumn
channelTracesIndexNo2 = _ChannelTracesIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 2),
    _ChannelTracesIndexNo2_Type()
)
channelTracesIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesIndexNo2.setStatus("current")
_ChannelTracesIndexNo3_Type = Unsigned32
_ChannelTracesIndexNo3_Object = MibTableColumn
channelTracesIndexNo3 = _ChannelTracesIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 3),
    _ChannelTracesIndexNo3_Type()
)
channelTracesIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesIndexNo3.setStatus("current")
_ChannelTracesIndexNo4_Type = Unsigned32
_ChannelTracesIndexNo4_Object = MibTableColumn
channelTracesIndexNo4 = _ChannelTracesIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 4),
    _ChannelTracesIndexNo4_Type()
)
channelTracesIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesIndexNo4.setStatus("current")
_ChannelTracesClassName_Type = EntityClassName
_ChannelTracesClassName_Object = MibTableColumn
channelTracesClassName = _ChannelTracesClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 5),
    _ChannelTracesClassName_Type()
)
channelTracesClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesClassName.setStatus("current")
_ChannelTracesChannelNumber_Type = FspR7ChannelNumber
_ChannelTracesChannelNumber_Object = MibTableColumn
channelTracesChannelNumber = _ChannelTracesChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 6),
    _ChannelTracesChannelNumber_Type()
)
channelTracesChannelNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesChannelNumber.setStatus("current")
_ChannelTracesRouteId_Type = FspR7NCTraceId
_ChannelTracesRouteId_Object = MibTableColumn
channelTracesRouteId = _ChannelTracesRouteId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 7),
    _ChannelTracesRouteId_Type()
)
channelTracesRouteId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesRouteId.setStatus("current")
_ChannelTracesElementId_Type = Unsigned32
_ChannelTracesElementId_Object = MibTableColumn
channelTracesElementId = _ChannelTracesElementId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 8),
    _ChannelTracesElementId_Type()
)
channelTracesElementId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelTracesElementId.setStatus("current")
_ChannelTracesFromAid_Type = SnmpAdminString
_ChannelTracesFromAid_Object = MibTableColumn
channelTracesFromAid = _ChannelTracesFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 9),
    _ChannelTracesFromAid_Type()
)
channelTracesFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelTracesFromAid.setStatus("current")
_ChannelTracesToAid_Type = SnmpAdminString
_ChannelTracesToAid_Object = MibTableColumn
channelTracesToAid = _ChannelTracesToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 10),
    _ChannelTracesToAid_Type()
)
channelTracesToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelTracesToAid.setStatus("current")
_ChannelTracesRouteType_Type = FspR7NCTRouteType
_ChannelTracesRouteType_Object = MibTableColumn
channelTracesRouteType = _ChannelTracesRouteType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 11),
    _ChannelTracesRouteType_Type()
)
channelTracesRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelTracesRouteType.setStatus("current")
_ChannelTracesChannelRx_Type = FspR7ChannelNumber
_ChannelTracesChannelRx_Object = MibTableColumn
channelTracesChannelRx = _ChannelTracesChannelRx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 12),
    _ChannelTracesChannelRx_Type()
)
channelTracesChannelRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelTracesChannelRx.setStatus("current")
_ChannelTracesChannelTx_Type = FspR7ChannelNumber
_ChannelTracesChannelTx_Object = MibTableColumn
channelTracesChannelTx = _ChannelTracesChannelTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 1, 1, 13),
    _ChannelTracesChannelTx_Type()
)
channelTracesChannelTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelTracesChannelTx.setStatus("current")
_EndOfchannelTracesTable_Type = Integer32
_EndOfchannelTracesTable_Object = MibScalar
endOfchannelTracesTable = _EndOfchannelTracesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 2),
    _EndOfchannelTracesTable_Type()
)
endOfchannelTracesTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfchannelTracesTable.setStatus("current")
_RatFrom_Type = SnmpAdminString
_RatFrom_Object = MibScalar
ratFrom = _RatFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 3),
    _RatFrom_Type()
)
ratFrom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratFrom.setStatus("current")
_RatTo_Type = SnmpAdminString
_RatTo_Object = MibScalar
ratTo = _RatTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 4),
    _RatTo_Type()
)
ratTo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratTo.setStatus("current")
_RatChIngress_Type = FspR7ChannelNumber
_RatChIngress_Object = MibScalar
ratChIngress = _RatChIngress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 5),
    _RatChIngress_Type()
)
ratChIngress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratChIngress.setStatus("current")
_RatChEgress_Type = FspR7ChannelNumber
_RatChEgress_Object = MibScalar
ratChEgress = _RatChEgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 6),
    _RatChEgress_Type()
)
ratChEgress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratChEgress.setStatus("current")
_RatSuperChannel_Type = FspR7NoYes
_RatSuperChannel_Object = MibScalar
ratSuperChannel = _RatSuperChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 7),
    _RatSuperChannel_Type()
)
ratSuperChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratSuperChannel.setStatus("current")
_RatSuperChannelFq_Type = FspR7ChannelIdentifier
_RatSuperChannelFq_Object = MibScalar
ratSuperChannelFq = _RatSuperChannelFq_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 8),
    _RatSuperChannelFq_Type()
)
ratSuperChannelFq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ratSuperChannelFq.setStatus("current")
_RatStartPointTable_Object = MibTable
ratStartPointTable = _RatStartPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10)
)
if mibBuilder.loadTexts:
    ratStartPointTable.setStatus("current")
_RatStartPointEntry_Object = MibTableRow
ratStartPointEntry = _RatStartPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1)
)
ratStartPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ratStartPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "ratStartPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "ratStartPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "ratStartPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "ratStartPointClassName"),
)
if mibBuilder.loadTexts:
    ratStartPointEntry.setStatus("current")
_RatStartPointIndexNo1_Type = Unsigned32
_RatStartPointIndexNo1_Object = MibTableColumn
ratStartPointIndexNo1 = _RatStartPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 1),
    _RatStartPointIndexNo1_Type()
)
ratStartPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratStartPointIndexNo1.setStatus("current")
_RatStartPointIndexNo2_Type = Unsigned32
_RatStartPointIndexNo2_Object = MibTableColumn
ratStartPointIndexNo2 = _RatStartPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 2),
    _RatStartPointIndexNo2_Type()
)
ratStartPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratStartPointIndexNo2.setStatus("current")
_RatStartPointIndexNo3_Type = Unsigned32
_RatStartPointIndexNo3_Object = MibTableColumn
ratStartPointIndexNo3 = _RatStartPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 3),
    _RatStartPointIndexNo3_Type()
)
ratStartPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratStartPointIndexNo3.setStatus("current")
_RatStartPointIndexNo4_Type = Unsigned32
_RatStartPointIndexNo4_Object = MibTableColumn
ratStartPointIndexNo4 = _RatStartPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 4),
    _RatStartPointIndexNo4_Type()
)
ratStartPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratStartPointIndexNo4.setStatus("current")
_RatStartPointClassName_Type = EntityClassName
_RatStartPointClassName_Object = MibTableColumn
ratStartPointClassName = _RatStartPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 5),
    _RatStartPointClassName_Type()
)
ratStartPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratStartPointClassName.setStatus("current")
_RatStartPointAidString_Type = SnmpAdminString
_RatStartPointAidString_Object = MibTableColumn
ratStartPointAidString = _RatStartPointAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 6),
    _RatStartPointAidString_Type()
)
ratStartPointAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratStartPointAidString.setStatus("current")
_RatStartPointTableId_Type = RowPointer
_RatStartPointTableId_Object = MibTableColumn
ratStartPointTableId = _RatStartPointTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 7),
    _RatStartPointTableId_Type()
)
ratStartPointTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratStartPointTableId.setStatus("current")
_RatStartPointChannelNumber_Type = FspR7ChannelNumberCaps
_RatStartPointChannelNumber_Object = MibTableColumn
ratStartPointChannelNumber = _RatStartPointChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 8),
    _RatStartPointChannelNumber_Type()
)
ratStartPointChannelNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratStartPointChannelNumber.setStatus("current")
_RatStartPointChannelGroup_Type = FspR7ChannelIdentifierCaps
_RatStartPointChannelGroup_Object = MibTableColumn
ratStartPointChannelGroup = _RatStartPointChannelGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 9),
    _RatStartPointChannelGroup_Type()
)
ratStartPointChannelGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratStartPointChannelGroup.setStatus("current")
_RatStartPointClass_Type = EntityClass
_RatStartPointClass_Object = MibTableColumn
ratStartPointClass = _RatStartPointClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10, 1, 10),
    _RatStartPointClass_Type()
)
ratStartPointClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratStartPointClass.setStatus("current")
_EndOfRatStartPointTable_Type = Integer32
_EndOfRatStartPointTable_Object = MibScalar
endOfRatStartPointTable = _EndOfRatStartPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 11),
    _EndOfRatStartPointTable_Type()
)
endOfRatStartPointTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfRatStartPointTable.setStatus("current")
_RatAnalyzerTable_Object = MibTable
ratAnalyzerTable = _RatAnalyzerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12)
)
if mibBuilder.loadTexts:
    ratAnalyzerTable.setStatus("current")
_RatAnalyzerEntry_Object = MibTableRow
ratAnalyzerEntry = _RatAnalyzerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1)
)
ratAnalyzerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ratAnalyzerRouteId"),
    (0, "ADVA-FSPR7-MIB", "ratAnalyzerElementId"),
)
if mibBuilder.loadTexts:
    ratAnalyzerEntry.setStatus("current")
_RatAnalyzerRouteId_Type = Unsigned32
_RatAnalyzerRouteId_Object = MibTableColumn
ratAnalyzerRouteId = _RatAnalyzerRouteId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 1),
    _RatAnalyzerRouteId_Type()
)
ratAnalyzerRouteId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratAnalyzerRouteId.setStatus("current")
_RatAnalyzerElementId_Type = Unsigned32
_RatAnalyzerElementId_Object = MibTableColumn
ratAnalyzerElementId = _RatAnalyzerElementId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 2),
    _RatAnalyzerElementId_Type()
)
ratAnalyzerElementId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratAnalyzerElementId.setStatus("current")
_RatAnalyzerFromAid_Type = SnmpAdminString
_RatAnalyzerFromAid_Object = MibTableColumn
ratAnalyzerFromAid = _RatAnalyzerFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 3),
    _RatAnalyzerFromAid_Type()
)
ratAnalyzerFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratAnalyzerFromAid.setStatus("current")
_RatAnalyzerToAid_Type = SnmpAdminString
_RatAnalyzerToAid_Object = MibTableColumn
ratAnalyzerToAid = _RatAnalyzerToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 4),
    _RatAnalyzerToAid_Type()
)
ratAnalyzerToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratAnalyzerToAid.setStatus("current")
_RatAnalyzerChannelTx_Type = FspR7ChannelNumber
_RatAnalyzerChannelTx_Object = MibTableColumn
ratAnalyzerChannelTx = _RatAnalyzerChannelTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 5),
    _RatAnalyzerChannelTx_Type()
)
ratAnalyzerChannelTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratAnalyzerChannelTx.setStatus("current")
_RatAnalyzerState_Type = FspR7StateConnection
_RatAnalyzerState_Object = MibTableColumn
ratAnalyzerState = _RatAnalyzerState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 6),
    _RatAnalyzerState_Type()
)
ratAnalyzerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratAnalyzerState.setStatus("current")
_RatAnalyzerRouteType_Type = FspR7NCTRouteType
_RatAnalyzerRouteType_Object = MibTableColumn
ratAnalyzerRouteType = _RatAnalyzerRouteType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 12, 1, 7),
    _RatAnalyzerRouteType_Type()
)
ratAnalyzerRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratAnalyzerRouteType.setStatus("current")
_EndOfRatAnalyzerTable_Type = Integer32
_EndOfRatAnalyzerTable_Object = MibScalar
endOfRatAnalyzerTable = _EndOfRatAnalyzerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 13),
    _EndOfRatAnalyzerTable_Type()
)
endOfRatAnalyzerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfRatAnalyzerTable.setStatus("current")
_RatBlockingTable_Object = MibTable
ratBlockingTable = _RatBlockingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14)
)
if mibBuilder.loadTexts:
    ratBlockingTable.setStatus("current")
_RatBlockingEntry_Object = MibTableRow
ratBlockingEntry = _RatBlockingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14, 1)
)
ratBlockingEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ratBlockingElementId"),
)
if mibBuilder.loadTexts:
    ratBlockingEntry.setStatus("current")
_RatBlockingElementId_Type = Unsigned32
_RatBlockingElementId_Object = MibTableColumn
ratBlockingElementId = _RatBlockingElementId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14, 1, 1),
    _RatBlockingElementId_Type()
)
ratBlockingElementId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ratBlockingElementId.setStatus("current")
_RatBlockingType_Type = FspR7EquipmentType
_RatBlockingType_Object = MibTableColumn
ratBlockingType = _RatBlockingType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14, 1, 2),
    _RatBlockingType_Type()
)
ratBlockingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratBlockingType.setStatus("current")
_RatBlockingConnState_Type = FspR7ConnectState
_RatBlockingConnState_Object = MibTableColumn
ratBlockingConnState = _RatBlockingConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14, 1, 3),
    _RatBlockingConnState_Type()
)
ratBlockingConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratBlockingConnState.setStatus("current")
_RatBlockingAid_Type = SnmpAdminString
_RatBlockingAid_Object = MibTableColumn
ratBlockingAid = _RatBlockingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 14, 1, 4),
    _RatBlockingAid_Type()
)
ratBlockingAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ratBlockingAid.setStatus("current")
_EndOfRatBlockingTable_Type = Integer32
_EndOfRatBlockingTable_Object = MibScalar
endOfRatBlockingTable = _EndOfRatBlockingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 15),
    _EndOfRatBlockingTable_Type()
)
endOfRatBlockingTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfRatBlockingTable.setStatus("current")
_EndOfserviceDiagnostics_Type = Integer32
_EndOfserviceDiagnostics_Object = MibScalar
endOfserviceDiagnostics = _EndOfserviceDiagnostics_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 4, 10000),
    _EndOfserviceDiagnostics_Type()
)
endOfserviceDiagnostics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfserviceDiagnostics.setStatus("current")
_ChangeService_ObjectIdentity = ObjectIdentity
changeService = _ChangeService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5)
)
_ChangePhysicalPortServiceTable_Object = MibTable
changePhysicalPortServiceTable = _ChangePhysicalPortServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1)
)
if mibBuilder.loadTexts:
    changePhysicalPortServiceTable.setStatus("current")
_ChangePhysicalPortServiceEntry_Object = MibTableRow
changePhysicalPortServiceEntry = _ChangePhysicalPortServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1)
)
changePhysicalPortServiceEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"),
)
if mibBuilder.loadTexts:
    changePhysicalPortServiceEntry.setStatus("current")
_ChangePhysicalPortServiceRowStatus_Type = RowStatus
_ChangePhysicalPortServiceRowStatus_Object = MibTableColumn
changePhysicalPortServiceRowStatus = _ChangePhysicalPortServiceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 1),
    _ChangePhysicalPortServiceRowStatus_Type()
)
changePhysicalPortServiceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceRowStatus.setStatus("current")
_ChangePhysicalPortServiceType_Type = FspR7InterfaceType
_ChangePhysicalPortServiceType_Object = MibTableColumn
changePhysicalPortServiceType = _ChangePhysicalPortServiceType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 2),
    _ChangePhysicalPortServiceType_Type()
)
changePhysicalPortServiceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceType.setStatus("current")
_ChangePhysicalPortServiceAdmin_Type = FspR7AdminState
_ChangePhysicalPortServiceAdmin_Object = MibTableColumn
changePhysicalPortServiceAdmin = _ChangePhysicalPortServiceAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 3),
    _ChangePhysicalPortServiceAdmin_Type()
)
changePhysicalPortServiceAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceAdmin.setStatus("current")
_ChangePhysicalPortServiceAlias_Type = SnmpAdminString
_ChangePhysicalPortServiceAlias_Object = MibTableColumn
changePhysicalPortServiceAlias = _ChangePhysicalPortServiceAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 4),
    _ChangePhysicalPortServiceAlias_Type()
)
changePhysicalPortServiceAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceAlias.setStatus("current")
_ChangePhysicalPortServiceAlsMode_Type = FspR7AlsMode
_ChangePhysicalPortServiceAlsMode_Object = MibTableColumn
changePhysicalPortServiceAlsMode = _ChangePhysicalPortServiceAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 5),
    _ChangePhysicalPortServiceAlsMode_Type()
)
changePhysicalPortServiceAlsMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceAlsMode.setStatus("current")
_ChangePhysicalPortServiceBehaviour_Type = FspR7PortBehaviour
_ChangePhysicalPortServiceBehaviour_Object = MibTableColumn
changePhysicalPortServiceBehaviour = _ChangePhysicalPortServiceBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 6),
    _ChangePhysicalPortServiceBehaviour_Type()
)
changePhysicalPortServiceBehaviour.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceBehaviour.setStatus("current")


class _ChangePhysicalPortServiceDispersionSetting_Type(Integer32):
    """Custom type changePhysicalPortServiceDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
    )


_ChangePhysicalPortServiceDispersionSetting_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceDispersionSetting_Object = MibTableColumn
changePhysicalPortServiceDispersionSetting = _ChangePhysicalPortServiceDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 7),
    _ChangePhysicalPortServiceDispersionSetting_Type()
)
changePhysicalPortServiceDispersionSetting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceDispersionSetting.setUnits("ps/nm")
_ChangePhysicalPortServiceDispersionMode_Type = FspR7DispersionModes
_ChangePhysicalPortServiceDispersionMode_Object = MibTableColumn
changePhysicalPortServiceDispersionMode = _ChangePhysicalPortServiceDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 8),
    _ChangePhysicalPortServiceDispersionMode_Type()
)
changePhysicalPortServiceDispersionMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceDispersionMode.setStatus("current")
_ChangePhysicalPortServiceChannelProv_Type = FspR7ChannelIdentifier
_ChangePhysicalPortServiceChannelProv_Object = MibTableColumn
changePhysicalPortServiceChannelProv = _ChangePhysicalPortServiceChannelProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 9),
    _ChangePhysicalPortServiceChannelProv_Type()
)
changePhysicalPortServiceChannelProv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceChannelProv.setStatus("current")
_ChangePhysicalPortServiceWdmRxChannel_Type = FspR7ChannelIdentifier
_ChangePhysicalPortServiceWdmRxChannel_Object = MibTableColumn
changePhysicalPortServiceWdmRxChannel = _ChangePhysicalPortServiceWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 10),
    _ChangePhysicalPortServiceWdmRxChannel_Type()
)
changePhysicalPortServiceWdmRxChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceWdmRxChannel.setStatus("current")
_ChangePhysicalPortServiceCodeGain_Type = FspR7CodeGain
_ChangePhysicalPortServiceCodeGain_Object = MibTableColumn
changePhysicalPortServiceCodeGain = _ChangePhysicalPortServiceCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 11),
    _ChangePhysicalPortServiceCodeGain_Type()
)
changePhysicalPortServiceCodeGain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceCodeGain.setStatus("current")
_ChangePhysicalPortServiceXfpDecisionThres_Type = FspR7XfpDecisionThres
_ChangePhysicalPortServiceXfpDecisionThres_Object = MibTableColumn
changePhysicalPortServiceXfpDecisionThres = _ChangePhysicalPortServiceXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 12),
    _ChangePhysicalPortServiceXfpDecisionThres_Type()
)
changePhysicalPortServiceXfpDecisionThres.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceXfpDecisionThres.setStatus("current")
_ChangePhysicalPortServiceDisparityCorrection_Type = EnableState
_ChangePhysicalPortServiceDisparityCorrection_Object = MibTableColumn
changePhysicalPortServiceDisparityCorrection = _ChangePhysicalPortServiceDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 13),
    _ChangePhysicalPortServiceDisparityCorrection_Type()
)
changePhysicalPortServiceDisparityCorrection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceDisparityCorrection.setStatus("current")
_ChangePhysicalPortServiceEqlzAdmin_Type = FspR7EnableDisable
_ChangePhysicalPortServiceEqlzAdmin_Object = MibTableColumn
changePhysicalPortServiceEqlzAdmin = _ChangePhysicalPortServiceEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 14),
    _ChangePhysicalPortServiceEqlzAdmin_Type()
)
changePhysicalPortServiceEqlzAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceEqlzAdmin.setStatus("current")
_ChangePhysicalPortServiceErrorForwarding_Type = FspR7ErrorFwdMode
_ChangePhysicalPortServiceErrorForwarding_Object = MibTableColumn
changePhysicalPortServiceErrorForwarding = _ChangePhysicalPortServiceErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 15),
    _ChangePhysicalPortServiceErrorForwarding_Type()
)
changePhysicalPortServiceErrorForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceErrorForwarding.setStatus("current")
_ChangePhysicalPortServiceFecType_Type = FspR7FecType
_ChangePhysicalPortServiceFecType_Object = MibTableColumn
changePhysicalPortServiceFecType = _ChangePhysicalPortServiceFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 16),
    _ChangePhysicalPortServiceFecType_Type()
)
changePhysicalPortServiceFecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceFecType.setStatus("current")
_ChangePhysicalPortServiceFarEndCommunication_Type = FspR7YesNo
_ChangePhysicalPortServiceFarEndCommunication_Object = MibTableColumn
changePhysicalPortServiceFarEndCommunication = _ChangePhysicalPortServiceFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 17),
    _ChangePhysicalPortServiceFarEndCommunication_Type()
)
changePhysicalPortServiceFarEndCommunication.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceFarEndCommunication.setStatus("current")
_ChangePhysicalPortServiceFlowControl_Type = FspR7FlowControlMode
_ChangePhysicalPortServiceFlowControl_Object = MibTableColumn
changePhysicalPortServiceFlowControl = _ChangePhysicalPortServiceFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 18),
    _ChangePhysicalPortServiceFlowControl_Type()
)
changePhysicalPortServiceFlowControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceFlowControl.setStatus("current")
_ChangePhysicalPortServiceLaneChannelSetting_Type = FspR7ChannelIdentifier
_ChangePhysicalPortServiceLaneChannelSetting_Object = MibTableColumn
changePhysicalPortServiceLaneChannelSetting = _ChangePhysicalPortServiceLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 19),
    _ChangePhysicalPortServiceLaneChannelSetting_Type()
)
changePhysicalPortServiceLaneChannelSetting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaneChannelSetting.setStatus("current")
_ChangePhysicalPortServiceLaserDelayTimer_Type = FspR7LaserDelayTimer
_ChangePhysicalPortServiceLaserDelayTimer_Object = MibTableColumn
changePhysicalPortServiceLaserDelayTimer = _ChangePhysicalPortServiceLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 20),
    _ChangePhysicalPortServiceLaserDelayTimer_Type()
)
changePhysicalPortServiceLaserDelayTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserDelayTimer.setStatus("current")


class _ChangePhysicalPortServiceLaserOffTimer_Type(Unsigned32):
    """Custom type changePhysicalPortServiceLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_ChangePhysicalPortServiceLaserOffTimer_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceLaserOffTimer_Object = MibTableColumn
changePhysicalPortServiceLaserOffTimer = _ChangePhysicalPortServiceLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 21),
    _ChangePhysicalPortServiceLaserOffTimer_Type()
)
changePhysicalPortServiceLaserOffTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserOffTimer.setUnits("ms")


class _ChangePhysicalPortServiceLaserOnTimer_Type(Unsigned32):
    """Custom type changePhysicalPortServiceLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_ChangePhysicalPortServiceLaserOnTimer_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceLaserOnTimer_Object = MibTableColumn
changePhysicalPortServiceLaserOnTimer = _ChangePhysicalPortServiceLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 22),
    _ChangePhysicalPortServiceLaserOnTimer_Type()
)
changePhysicalPortServiceLaserOnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserOnTimer.setUnits("ms")
_ChangePhysicalPortServiceLaserOffDelayFunction_Type = EnableState
_ChangePhysicalPortServiceLaserOffDelayFunction_Object = MibTableColumn
changePhysicalPortServiceLaserOffDelayFunction = _ChangePhysicalPortServiceLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 23),
    _ChangePhysicalPortServiceLaserOffDelayFunction_Type()
)
changePhysicalPortServiceLaserOffDelayFunction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLaserOffDelayFunction.setStatus("current")
_ChangePhysicalPortServiceAutoPTassignment_Type = FspR7ManualAuto
_ChangePhysicalPortServiceAutoPTassignment_Object = MibTableColumn
changePhysicalPortServiceAutoPTassignment = _ChangePhysicalPortServiceAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 24),
    _ChangePhysicalPortServiceAutoPTassignment_Type()
)
changePhysicalPortServiceAutoPTassignment.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceAutoPTassignment.setStatus("current")
_ChangePhysicalPortServiceTributarySlotMethod_Type = FspR7ManualAuto
_ChangePhysicalPortServiceTributarySlotMethod_Object = MibTableColumn
changePhysicalPortServiceTributarySlotMethod = _ChangePhysicalPortServiceTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 25),
    _ChangePhysicalPortServiceTributarySlotMethod_Type()
)
changePhysicalPortServiceTributarySlotMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTributarySlotMethod.setStatus("current")


class _ChangePhysicalPortServiceOpticalSetPoint_Type(Integer32):
    """Custom type changePhysicalPortServiceOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 100),
    )


_ChangePhysicalPortServiceOpticalSetPoint_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceOpticalSetPoint_Object = MibTableColumn
changePhysicalPortServiceOpticalSetPoint = _ChangePhysicalPortServiceOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 26),
    _ChangePhysicalPortServiceOpticalSetPoint_Type()
)
changePhysicalPortServiceOpticalSetPoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceOpticalSetPoint.setUnits("0.1 dBm")
_ChangePhysicalPortServiceOpuPayloadType_Type = FspR7OpuPayloadType
_ChangePhysicalPortServiceOpuPayloadType_Object = MibTableColumn
changePhysicalPortServiceOpuPayloadType = _ChangePhysicalPortServiceOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 27),
    _ChangePhysicalPortServiceOpuPayloadType_Type()
)
changePhysicalPortServiceOpuPayloadType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceOpuPayloadType.setStatus("current")
_ChangePhysicalPortServiceSigDegThresSonetLine_Type = FspR7BERThreshold
_ChangePhysicalPortServiceSigDegThresSonetLine_Object = MibTableColumn
changePhysicalPortServiceSigDegThresSonetLine = _ChangePhysicalPortServiceSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 28),
    _ChangePhysicalPortServiceSigDegThresSonetLine_Type()
)
changePhysicalPortServiceSigDegThresSonetLine.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSonetLine.setStatus("current")


class _ChangePhysicalPortServiceSigDegThresSdhMs_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegThresSdhMs_Object = MibTableColumn
changePhysicalPortServiceSigDegThresSdhMs = _ChangePhysicalPortServiceSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 29),
    _ChangePhysicalPortServiceSigDegThresSdhMs_Type()
)
changePhysicalPortServiceSigDegThresSdhMs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSdhMs.setUnits("%")


class _ChangePhysicalPortServiceSigDegThresOtu_Type(Integer32):
    """Custom type changePhysicalPortServiceSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresOtu_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceSigDegThresOtu_Object = MibTableColumn
changePhysicalPortServiceSigDegThresOtu = _ChangePhysicalPortServiceSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 30),
    _ChangePhysicalPortServiceSigDegThresOtu_Type()
)
changePhysicalPortServiceSigDegThresOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOtu.setUnits("%")


class _ChangePhysicalPortServiceSigDegThresOdu_Type(Integer32):
    """Custom type changePhysicalPortServiceSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresOdu_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceSigDegThresOdu_Object = MibTableColumn
changePhysicalPortServiceSigDegThresOdu = _ChangePhysicalPortServiceSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 31),
    _ChangePhysicalPortServiceSigDegThresOdu_Type()
)
changePhysicalPortServiceSigDegThresOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOdu.setUnits("%")


class _ChangePhysicalPortServiceSigDegThreshold_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_ChangePhysicalPortServiceSigDegThreshold_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegThreshold_Object = MibTableColumn
changePhysicalPortServiceSigDegThreshold = _ChangePhysicalPortServiceSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 32),
    _ChangePhysicalPortServiceSigDegThreshold_Type()
)
changePhysicalPortServiceSigDegThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThreshold.setStatus("current")


class _ChangePhysicalPortServiceSigDegPcslThreshold_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPcslThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegPcslThreshold_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPcslThreshold_Object = MibTableColumn
changePhysicalPortServiceSigDegPcslThreshold = _ChangePhysicalPortServiceSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 33),
    _ChangePhysicalPortServiceSigDegPcslThreshold_Type()
)
changePhysicalPortServiceSigDegPcslThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPcslThreshold.setUnits("%")
_ChangePhysicalPortServiceSigDegThresSonetSection_Type = FspR7BERThreshold
_ChangePhysicalPortServiceSigDegThresSonetSection_Object = MibTableColumn
changePhysicalPortServiceSigDegThresSonetSection = _ChangePhysicalPortServiceSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 34),
    _ChangePhysicalPortServiceSigDegThresSonetSection_Type()
)
changePhysicalPortServiceSigDegThresSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSonetSection.setStatus("current")


class _ChangePhysicalPortServiceSigDegThresSdhSection_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegThresSdhSection_Object = MibTableColumn
changePhysicalPortServiceSigDegThresSdhSection = _ChangePhysicalPortServiceSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 35),
    _ChangePhysicalPortServiceSigDegThresSdhSection_Type()
)
changePhysicalPortServiceSigDegThresSdhSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresSdhSection.setUnits("%")


class _ChangePhysicalPortServiceSigDegThresOduTcmA_Type(Integer32):
    """Custom type changePhysicalPortServiceSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresOduTcmA_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceSigDegThresOduTcmA_Object = MibTableColumn
changePhysicalPortServiceSigDegThresOduTcmA = _ChangePhysicalPortServiceSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 36),
    _ChangePhysicalPortServiceSigDegThresOduTcmA_Type()
)
changePhysicalPortServiceSigDegThresOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmA.setUnits("%")


class _ChangePhysicalPortServiceSigDegThresOduTcmB_Type(Integer32):
    """Custom type changePhysicalPortServiceSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresOduTcmB_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceSigDegThresOduTcmB_Object = MibTableColumn
changePhysicalPortServiceSigDegThresOduTcmB = _ChangePhysicalPortServiceSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 37),
    _ChangePhysicalPortServiceSigDegThresOduTcmB_Type()
)
changePhysicalPortServiceSigDegThresOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmB.setUnits("%")


class _ChangePhysicalPortServiceSigDegThresOduTcmC_Type(Integer32):
    """Custom type changePhysicalPortServiceSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ChangePhysicalPortServiceSigDegThresOduTcmC_Type.__name__ = "Integer32"
_ChangePhysicalPortServiceSigDegThresOduTcmC_Object = MibTableColumn
changePhysicalPortServiceSigDegThresOduTcmC = _ChangePhysicalPortServiceSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 38),
    _ChangePhysicalPortServiceSigDegThresOduTcmC_Type()
)
changePhysicalPortServiceSigDegThresOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegThresOduTcmC.setUnits("%")


class _ChangePhysicalPortServiceSignalDegradePeriod_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSignalDegradePeriod_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSignalDegradePeriod_Object = MibTableColumn
changePhysicalPortServiceSignalDegradePeriod = _ChangePhysicalPortServiceSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 39),
    _ChangePhysicalPortServiceSignalDegradePeriod_Type()
)
changePhysicalPortServiceSignalDegradePeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSignalDegradePeriod.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodOdu_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodOdu_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodOdu = _ChangePhysicalPortServiceSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 40),
    _ChangePhysicalPortServiceSigDegPeriodOdu_Type()
)
changePhysicalPortServiceSigDegPeriodOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOdu.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodOtu_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodOtu_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodOtu = _ChangePhysicalPortServiceSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 41),
    _ChangePhysicalPortServiceSigDegPeriodOtu_Type()
)
changePhysicalPortServiceSigDegPeriodOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOtu.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodIntegration_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodIntegration = _ChangePhysicalPortServiceSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 42),
    _ChangePhysicalPortServiceSigDegPeriodIntegration_Type()
)
changePhysicalPortServiceSigDegPeriodIntegration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodIntegration.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodSdhSection_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodSdhSection = _ChangePhysicalPortServiceSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 43),
    _ChangePhysicalPortServiceSigDegPeriodSdhSection_Type()
)
changePhysicalPortServiceSigDegPeriodSdhSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodSdhSection.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodOduTcmA_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodOduTcmA = _ChangePhysicalPortServiceSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 44),
    _ChangePhysicalPortServiceSigDegPeriodOduTcmA_Type()
)
changePhysicalPortServiceSigDegPeriodOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmA.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodOduTcmB_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodOduTcmB = _ChangePhysicalPortServiceSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 45),
    _ChangePhysicalPortServiceSigDegPeriodOduTcmB_Type()
)
changePhysicalPortServiceSigDegPeriodOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmB.setUnits("s")


class _ChangePhysicalPortServiceSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type changePhysicalPortServiceSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_ChangePhysicalPortServiceSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceSigDegPeriodOduTcmC_Object = MibTableColumn
changePhysicalPortServiceSigDegPeriodOduTcmC = _ChangePhysicalPortServiceSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 46),
    _ChangePhysicalPortServiceSigDegPeriodOduTcmC_Type()
)
changePhysicalPortServiceSigDegPeriodOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceSigDegPeriodOduTcmC.setUnits("s")
_ChangePhysicalPortServiceOtnStuffing_Type = FspR7YesNo
_ChangePhysicalPortServiceOtnStuffing_Object = MibTableColumn
changePhysicalPortServiceOtnStuffing = _ChangePhysicalPortServiceOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 47),
    _ChangePhysicalPortServiceOtnStuffing_Type()
)
changePhysicalPortServiceOtnStuffing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceOtnStuffing.setStatus("current")
_ChangePhysicalPortServiceTcmALevel_Type = OtnTcmLevel
_ChangePhysicalPortServiceTcmALevel_Object = MibTableColumn
changePhysicalPortServiceTcmALevel = _ChangePhysicalPortServiceTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 48),
    _ChangePhysicalPortServiceTcmALevel_Type()
)
changePhysicalPortServiceTcmALevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTcmALevel.setStatus("current")
_ChangePhysicalPortServiceTcmBLevel_Type = OtnTcmLevel
_ChangePhysicalPortServiceTcmBLevel_Object = MibTableColumn
changePhysicalPortServiceTcmBLevel = _ChangePhysicalPortServiceTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 49),
    _ChangePhysicalPortServiceTcmBLevel_Type()
)
changePhysicalPortServiceTcmBLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTcmBLevel.setStatus("current")
_ChangePhysicalPortServiceTcmCLevel_Type = OtnTcmLevel
_ChangePhysicalPortServiceTcmCLevel_Object = MibTableColumn
changePhysicalPortServiceTcmCLevel = _ChangePhysicalPortServiceTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 50),
    _ChangePhysicalPortServiceTcmCLevel_Type()
)
changePhysicalPortServiceTcmCLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTcmCLevel.setStatus("current")
_ChangePhysicalPortServiceTerminationLevel_Type = OhTerminationLevel
_ChangePhysicalPortServiceTerminationLevel_Object = MibTableColumn
changePhysicalPortServiceTerminationLevel = _ChangePhysicalPortServiceTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 51),
    _ChangePhysicalPortServiceTerminationLevel_Type()
)
changePhysicalPortServiceTerminationLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTerminationLevel.setStatus("current")
_ChangePhysicalPortServiceTimingSource_Type = SonetTimingSource
_ChangePhysicalPortServiceTimingSource_Object = MibTableColumn
changePhysicalPortServiceTimingSource = _ChangePhysicalPortServiceTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 52),
    _ChangePhysicalPortServiceTimingSource_Type()
)
changePhysicalPortServiceTimingSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimingSource.setStatus("current")
_ChangePhysicalPortServiceTimModeOdu_Type = TimMode
_ChangePhysicalPortServiceTimModeOdu_Object = MibTableColumn
changePhysicalPortServiceTimModeOdu = _ChangePhysicalPortServiceTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 53),
    _ChangePhysicalPortServiceTimModeOdu_Type()
)
changePhysicalPortServiceTimModeOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeOdu.setStatus("current")
_ChangePhysicalPortServiceTimModeOtu_Type = TimMode
_ChangePhysicalPortServiceTimModeOtu_Object = MibTableColumn
changePhysicalPortServiceTimModeOtu = _ChangePhysicalPortServiceTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 54),
    _ChangePhysicalPortServiceTimModeOtu_Type()
)
changePhysicalPortServiceTimModeOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeOtu.setStatus("current")
_ChangePhysicalPortServiceTimModeSonetSection_Type = TimMode
_ChangePhysicalPortServiceTimModeSonetSection_Object = MibTableColumn
changePhysicalPortServiceTimModeSonetSection = _ChangePhysicalPortServiceTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 55),
    _ChangePhysicalPortServiceTimModeSonetSection_Type()
)
changePhysicalPortServiceTimModeSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeSonetSection.setStatus("current")
_ChangePhysicalPortServiceTimModeOduTcmA_Type = TimMode
_ChangePhysicalPortServiceTimModeOduTcmA_Object = MibTableColumn
changePhysicalPortServiceTimModeOduTcmA = _ChangePhysicalPortServiceTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 56),
    _ChangePhysicalPortServiceTimModeOduTcmA_Type()
)
changePhysicalPortServiceTimModeOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeOduTcmA.setStatus("current")
_ChangePhysicalPortServiceTimModeOduTcmB_Type = TimMode
_ChangePhysicalPortServiceTimModeOduTcmB_Object = MibTableColumn
changePhysicalPortServiceTimModeOduTcmB = _ChangePhysicalPortServiceTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 57),
    _ChangePhysicalPortServiceTimModeOduTcmB_Type()
)
changePhysicalPortServiceTimModeOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeOduTcmB.setStatus("current")
_ChangePhysicalPortServiceTimModeOduTcmC_Type = TimMode
_ChangePhysicalPortServiceTimModeOduTcmC_Object = MibTableColumn
changePhysicalPortServiceTimModeOduTcmC = _ChangePhysicalPortServiceTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 58),
    _ChangePhysicalPortServiceTimModeOduTcmC_Type()
)
changePhysicalPortServiceTimModeOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTimModeOduTcmC.setStatus("current")
_ChangePhysicalPortServiceTraceFormSonetSection_Type = SonetTraceForm
_ChangePhysicalPortServiceTraceFormSonetSection_Object = MibTableColumn
changePhysicalPortServiceTraceFormSonetSection = _ChangePhysicalPortServiceTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 59),
    _ChangePhysicalPortServiceTraceFormSonetSection_Type()
)
changePhysicalPortServiceTraceFormSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceFormSonetSection.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedSonetSection_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangePhysicalPortServiceTraceExpectedSonetSection_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedSonetSection_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedSonetSection = _ChangePhysicalPortServiceTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 60),
    _ChangePhysicalPortServiceTraceExpectedSonetSection_Type()
)
changePhysicalPortServiceTraceExpectedSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedSonetSection.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSonetSection_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangePhysicalPortServiceTraceTransmitSonetSection_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSonetSection_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSonetSection = _ChangePhysicalPortServiceTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 61),
    _ChangePhysicalPortServiceTraceTransmitSonetSection_Type()
)
changePhysicalPortServiceTraceTransmitSonetSection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSonetSection.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedOtu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceExpectedOtu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedOtu_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedOtu = _ChangePhysicalPortServiceTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 62),
    _ChangePhysicalPortServiceTraceExpectedOtu_Type()
)
changePhysicalPortServiceTraceExpectedOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedOtu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSapiOtu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSapiOtu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSapiOtu = _ChangePhysicalPortServiceTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 63),
    _ChangePhysicalPortServiceTraceTransmitSapiOtu_Type()
)
changePhysicalPortServiceTraceTransmitSapiOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSapiOtu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitDapiOtu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitDapiOtu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitDapiOtu = _ChangePhysicalPortServiceTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 64),
    _ChangePhysicalPortServiceTraceTransmitDapiOtu_Type()
)
changePhysicalPortServiceTraceTransmitDapiOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitDapiOtu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitOpspOtu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangePhysicalPortServiceTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitOpspOtu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitOpspOtu = _ChangePhysicalPortServiceTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 65),
    _ChangePhysicalPortServiceTraceTransmitOpspOtu_Type()
)
changePhysicalPortServiceTraceTransmitOpspOtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitOpspOtu.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedOdu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceExpectedOdu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedOdu_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedOdu = _ChangePhysicalPortServiceTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 66),
    _ChangePhysicalPortServiceTraceExpectedOdu_Type()
)
changePhysicalPortServiceTraceExpectedOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedOdu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSapiOdu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSapiOdu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSapiOdu = _ChangePhysicalPortServiceTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 67),
    _ChangePhysicalPortServiceTraceTransmitSapiOdu_Type()
)
changePhysicalPortServiceTraceTransmitSapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSapiOdu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitDapiOdu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitDapiOdu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitDapiOdu = _ChangePhysicalPortServiceTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 68),
    _ChangePhysicalPortServiceTraceTransmitDapiOdu_Type()
)
changePhysicalPortServiceTraceTransmitDapiOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitDapiOdu.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitOpspOdu_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangePhysicalPortServiceTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitOpspOdu_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitOpspOdu = _ChangePhysicalPortServiceTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 69),
    _ChangePhysicalPortServiceTraceTransmitOpspOdu_Type()
)
changePhysicalPortServiceTraceTransmitOpspOdu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitOpspOdu.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedOduTcmA_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedOduTcmA_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedOduTcmA = _ChangePhysicalPortServiceTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 70),
    _ChangePhysicalPortServiceTraceExpectedOduTcmA_Type()
)
changePhysicalPortServiceTraceExpectedOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedOduTcmA.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSapiOduTcmA_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSapiOduTcmA = _ChangePhysicalPortServiceTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 71),
    _ChangePhysicalPortServiceTraceTransmitSapiOduTcmA_Type()
)
changePhysicalPortServiceTraceTransmitSapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSapiOduTcmA.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitDapiOduTcmA_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitDapiOduTcmA = _ChangePhysicalPortServiceTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 72),
    _ChangePhysicalPortServiceTraceTransmitDapiOduTcmA_Type()
)
changePhysicalPortServiceTraceTransmitDapiOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitDapiOduTcmA.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangePhysicalPortServiceTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitOpspOduTcmA_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitOpspOduTcmA = _ChangePhysicalPortServiceTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 73),
    _ChangePhysicalPortServiceTraceTransmitOpspOduTcmA_Type()
)
changePhysicalPortServiceTraceTransmitOpspOduTcmA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitOpspOduTcmA.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedOduTcmB_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedOduTcmB_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedOduTcmB = _ChangePhysicalPortServiceTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 74),
    _ChangePhysicalPortServiceTraceExpectedOduTcmB_Type()
)
changePhysicalPortServiceTraceExpectedOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedOduTcmB.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSapiOduTcmB_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSapiOduTcmB = _ChangePhysicalPortServiceTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 75),
    _ChangePhysicalPortServiceTraceTransmitSapiOduTcmB_Type()
)
changePhysicalPortServiceTraceTransmitSapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSapiOduTcmB.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitDapiOduTcmB_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitDapiOduTcmB = _ChangePhysicalPortServiceTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 76),
    _ChangePhysicalPortServiceTraceTransmitDapiOduTcmB_Type()
)
changePhysicalPortServiceTraceTransmitDapiOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitDapiOduTcmB.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangePhysicalPortServiceTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitOpspOduTcmB_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitOpspOduTcmB = _ChangePhysicalPortServiceTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 77),
    _ChangePhysicalPortServiceTraceTransmitOpspOduTcmB_Type()
)
changePhysicalPortServiceTraceTransmitOpspOduTcmB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitOpspOduTcmB.setStatus("current")


class _ChangePhysicalPortServiceTraceExpectedOduTcmC_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceExpectedOduTcmC_Object = MibTableColumn
changePhysicalPortServiceTraceExpectedOduTcmC = _ChangePhysicalPortServiceTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 78),
    _ChangePhysicalPortServiceTraceExpectedOduTcmC_Type()
)
changePhysicalPortServiceTraceExpectedOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceExpectedOduTcmC.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitSapiOduTcmC_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitSapiOduTcmC = _ChangePhysicalPortServiceTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 79),
    _ChangePhysicalPortServiceTraceTransmitSapiOduTcmC_Type()
)
changePhysicalPortServiceTraceTransmitSapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitSapiOduTcmC.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangePhysicalPortServiceTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitDapiOduTcmC_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitDapiOduTcmC = _ChangePhysicalPortServiceTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 80),
    _ChangePhysicalPortServiceTraceTransmitDapiOduTcmC_Type()
)
changePhysicalPortServiceTraceTransmitDapiOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitDapiOduTcmC.setStatus("current")


class _ChangePhysicalPortServiceTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type changePhysicalPortServiceTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangePhysicalPortServiceTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_ChangePhysicalPortServiceTraceTransmitOpspOduTcmC_Object = MibTableColumn
changePhysicalPortServiceTraceTransmitOpspOduTcmC = _ChangePhysicalPortServiceTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 81),
    _ChangePhysicalPortServiceTraceTransmitOpspOduTcmC_Type()
)
changePhysicalPortServiceTraceTransmitOpspOduTcmC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTraceTransmitOpspOduTcmC.setStatus("current")
_ChangePhysicalPortServiceTxOffDelay_Type = FspR7EnableDisable
_ChangePhysicalPortServiceTxOffDelay_Object = MibTableColumn
changePhysicalPortServiceTxOffDelay = _ChangePhysicalPortServiceTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 82),
    _ChangePhysicalPortServiceTxOffDelay_Type()
)
changePhysicalPortServiceTxOffDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOffDelay.setStatus("current")
_ChangePhysicalPortServiceVoaMode_Type = FspR7VoaMode
_ChangePhysicalPortServiceVoaMode_Object = MibTableColumn
changePhysicalPortServiceVoaMode = _ChangePhysicalPortServiceVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 83),
    _ChangePhysicalPortServiceVoaMode_Type()
)
changePhysicalPortServiceVoaMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceVoaMode.setStatus("current")


class _ChangePhysicalPortServiceVoaSetpoint_Type(Unsigned32):
    """Custom type changePhysicalPortServiceVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_ChangePhysicalPortServiceVoaSetpoint_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceVoaSetpoint_Object = MibTableColumn
changePhysicalPortServiceVoaSetpoint = _ChangePhysicalPortServiceVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 84),
    _ChangePhysicalPortServiceVoaSetpoint_Type()
)
changePhysicalPortServiceVoaSetpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceVoaSetpoint.setUnits("0.1 dB")
_ChangePhysicalPortServiceTxOffOnTm_Type = FspR7TxOffOnTm
_ChangePhysicalPortServiceTxOffOnTm_Object = MibTableColumn
changePhysicalPortServiceTxOffOnTm = _ChangePhysicalPortServiceTxOffOnTm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 85),
    _ChangePhysicalPortServiceTxOffOnTm_Type()
)
changePhysicalPortServiceTxOffOnTm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOffOnTm.setStatus("current")


class _ChangePhysicalPortServiceTxOffTimer_Type(Unsigned32):
    """Custom type changePhysicalPortServiceTxOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_ChangePhysicalPortServiceTxOffTimer_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceTxOffTimer_Object = MibTableColumn
changePhysicalPortServiceTxOffTimer = _ChangePhysicalPortServiceTxOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 86),
    _ChangePhysicalPortServiceTxOffTimer_Type()
)
changePhysicalPortServiceTxOffTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOffTimer.setUnits("ms")


class _ChangePhysicalPortServiceTxOnTimer_Type(Unsigned32):
    """Custom type changePhysicalPortServiceTxOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_ChangePhysicalPortServiceTxOnTimer_Type.__name__ = "Unsigned32"
_ChangePhysicalPortServiceTxOnTimer_Object = MibTableColumn
changePhysicalPortServiceTxOnTimer = _ChangePhysicalPortServiceTxOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 87),
    _ChangePhysicalPortServiceTxOnTimer_Type()
)
changePhysicalPortServiceTxOnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    changePhysicalPortServiceTxOnTimer.setUnits("ms")
_ChangePhysicalPortServiceMode_Type = FspR7TransmissionMode
_ChangePhysicalPortServiceMode_Object = MibTableColumn
changePhysicalPortServiceMode = _ChangePhysicalPortServiceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 88),
    _ChangePhysicalPortServiceMode_Type()
)
changePhysicalPortServiceMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceMode.setStatus("current")
_ChangePhysicalPortServiceChannelPlan_Type = FspR7ChannelRangeInventory
_ChangePhysicalPortServiceChannelPlan_Object = MibTableColumn
changePhysicalPortServiceChannelPlan = _ChangePhysicalPortServiceChannelPlan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 89),
    _ChangePhysicalPortServiceChannelPlan_Type()
)
changePhysicalPortServiceChannelPlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceChannelPlan.setStatus("current")
_ChangePhysicalPortServiceOptimize_Type = FspR7Optimize
_ChangePhysicalPortServiceOptimize_Object = MibTableColumn
changePhysicalPortServiceOptimize = _ChangePhysicalPortServiceOptimize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 90),
    _ChangePhysicalPortServiceOptimize_Type()
)
changePhysicalPortServiceOptimize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceOptimize.setStatus("current")
_ChangePhysicalPortServiceLinkSetup_Type = FspR7DisableEnable
_ChangePhysicalPortServiceLinkSetup_Object = MibTableColumn
changePhysicalPortServiceLinkSetup = _ChangePhysicalPortServiceLinkSetup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 91),
    _ChangePhysicalPortServiceLinkSetup_Type()
)
changePhysicalPortServiceLinkSetup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceLinkSetup.setStatus("current")
_ChangePhysicalPortServiceChannelSpacing_Type = FspR7ChannelSpacing
_ChangePhysicalPortServiceChannelSpacing_Object = MibTableColumn
changePhysicalPortServiceChannelSpacing = _ChangePhysicalPortServiceChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 1, 1, 92),
    _ChangePhysicalPortServiceChannelSpacing_Type()
)
changePhysicalPortServiceChannelSpacing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    changePhysicalPortServiceChannelSpacing.setStatus("current")
_EndOfChangeService_Type = Integer32
_EndOfChangeService_Object = MibScalar
endOfChangeService = _EndOfChangeService_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 5, 10000),
    _EndOfChangeService_Type()
)
endOfChangeService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfChangeService.setStatus("current")
_Protection_ObjectIdentity = ObjectIdentity
protection = _Protection_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6)
)
_HaTable_Object = MibTable
haTable = _HaTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1)
)
if mibBuilder.loadTexts:
    haTable.setStatus("current")
_HaEntry_Object = MibTableRow
haEntry = _HaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1)
)
haEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityEqptClassName"),
)
if mibBuilder.loadTexts:
    haEntry.setStatus("current")
_HaProtectionIndexAid_Type = SnmpAdminString
_HaProtectionIndexAid_Object = MibTableColumn
haProtectionIndexAid = _HaProtectionIndexAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1, 1),
    _HaProtectionIndexAid_Type()
)
haProtectionIndexAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    haProtectionIndexAid.setStatus("current")
_HaInhSwitching_Type = FspR7YesNo
_HaInhSwitching_Object = MibTableColumn
haInhSwitching = _HaInhSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1, 2),
    _HaInhSwitching_Type()
)
haInhSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    haInhSwitching.setStatus("current")
_HaSwitchToDuplex_Type = FspR7APSCommand
_HaSwitchToDuplex_Object = MibTableColumn
haSwitchToDuplex = _HaSwitchToDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1, 3),
    _HaSwitchToDuplex_Type()
)
haSwitchToDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    haSwitchToDuplex.setStatus("current")
_HaSwitchOverCause_Type = FspR7SwitchOverCause
_HaSwitchOverCause_Object = MibTableColumn
haSwitchOverCause = _HaSwitchOverCause_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1, 4),
    _HaSwitchOverCause_Type()
)
haSwitchOverCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    haSwitchOverCause.setStatus("current")
_HaSoftwareVersion_Type = SnmpAdminString
_HaSoftwareVersion_Object = MibTableColumn
haSoftwareVersion = _HaSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 1, 1, 5),
    _HaSoftwareVersion_Type()
)
haSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    haSoftwareVersion.setStatus("current")
_EndOfHaTable_Type = Integer32
_EndOfHaTable_Object = MibScalar
endOfHaTable = _EndOfHaTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 2),
    _EndOfHaTable_Type()
)
endOfHaTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfHaTable.setStatus("current")
_FfpTable_Object = MibTable
ffpTable = _FfpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3)
)
if mibBuilder.loadTexts:
    ffpTable.setStatus("current")
_FfpEntry_Object = MibTableRow
ffpEntry = _FfpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1)
)
ffpEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "entityFfpShelfNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpSlotNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpPortNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpExtNo"),
    (0, "ADVA-FSPR7-MIB", "entityFfpClassName"),
)
if mibBuilder.loadTexts:
    ffpEntry.setStatus("current")
_FfpRowStatus_Type = RowStatus
_FfpRowStatus_Object = MibTableColumn
ffpRowStatus = _FfpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 1),
    _FfpRowStatus_Type()
)
ffpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpRowStatus.setStatus("current")
_FfpCreationMethod_Type = FfpType
_FfpCreationMethod_Object = MibTableColumn
ffpCreationMethod = _FfpCreationMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 2),
    _FfpCreationMethod_Type()
)
ffpCreationMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpCreationMethod.setStatus("current")
_FfpSDswitching_Type = EnableState
_FfpSDswitching_Object = MibTableColumn
ffpSDswitching = _FfpSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 3),
    _FfpSDswitching_Type()
)
ffpSDswitching.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpSDswitching.setStatus("current")
_FfpHoldOffTime_Type = ApsHoldoffTime
_FfpHoldOffTime_Object = MibTableColumn
ffpHoldOffTime = _FfpHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 4),
    _FfpHoldOffTime_Type()
)
ffpHoldOffTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpHoldOffTime.setStatus("current")
_FfpProtectionMech_Type = ProtectionMech
_FfpProtectionMech_Object = MibTableColumn
ffpProtectionMech = _FfpProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 5),
    _FfpProtectionMech_Type()
)
ffpProtectionMech.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpProtectionMech.setStatus("current")
_FfpWorkingAid_Type = SnmpAdminString
_FfpWorkingAid_Object = MibTableColumn
ffpWorkingAid = _FfpWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 6),
    _FfpWorkingAid_Type()
)
ffpWorkingAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpWorkingAid.setStatus("current")
_FfpProtectionAid_Type = SnmpAdminString
_FfpProtectionAid_Object = MibTableColumn
ffpProtectionAid = _FfpProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 7),
    _FfpProtectionAid_Type()
)
ffpProtectionAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpProtectionAid.setStatus("current")
_FfpSignalDegradeSwitching_Type = EnableState
_FfpSignalDegradeSwitching_Object = MibTableColumn
ffpSignalDegradeSwitching = _FfpSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 8),
    _FfpSignalDegradeSwitching_Type()
)
ffpSignalDegradeSwitching.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpSignalDegradeSwitching.setStatus("current")
_FfpSignalFailureSwitching_Type = EnableState
_FfpSignalFailureSwitching_Object = MibTableColumn
ffpSignalFailureSwitching = _FfpSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 9),
    _FfpSignalFailureSwitching_Type()
)
ffpSignalFailureSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ffpSignalFailureSwitching.setStatus("current")
_FfpFarEndIp_Type = IpAddress
_FfpFarEndIp_Object = MibTableColumn
ffpFarEndIp = _FfpFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 10),
    _FfpFarEndIp_Type()
)
ffpFarEndIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpFarEndIp.setStatus("current")
_FfpPeerAid_Type = SnmpAdminString
_FfpPeerAid_Object = MibTableColumn
ffpPeerAid = _FfpPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 11),
    _FfpPeerAid_Type()
)
ffpPeerAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpPeerAid.setStatus("current")
_FfpApsType_Type = ApsType
_FfpApsType_Object = MibTableColumn
ffpApsType = _FfpApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 12),
    _FfpApsType_Type()
)
ffpApsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpApsType.setStatus("current")
_FfpRevertMode_Type = ApsRevertMode
_FfpRevertMode_Object = MibTableColumn
ffpRevertMode = _FfpRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 13),
    _FfpRevertMode_Type()
)
ffpRevertMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpRevertMode.setStatus("current")


class _FfpWaitToRestore_Type(Unsigned32):
    """Custom type ffpWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
    )


_FfpWaitToRestore_Type.__name__ = "Unsigned32"
_FfpWaitToRestore_Object = MibTableColumn
ffpWaitToRestore = _FfpWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 14),
    _FfpWaitToRestore_Type()
)
ffpWaitToRestore.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    ffpWaitToRestore.setUnits("min")
_FfpDirection_Type = ApsDirection
_FfpDirection_Object = MibTableColumn
ffpDirection = _FfpDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 15),
    _FfpDirection_Type()
)
ffpDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpDirection.setStatus("current")
_FfpProtectionType_Type = FspR7ProtectionType
_FfpProtectionType_Object = MibTableColumn
ffpProtectionType = _FfpProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 16),
    _FfpProtectionType_Type()
)
ffpProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ffpProtectionType.setStatus("current")
_FfpApsChannel_Type = FspR7ApsChannel
_FfpApsChannel_Object = MibTableColumn
ffpApsChannel = _FfpApsChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 17),
    _FfpApsChannel_Type()
)
ffpApsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ffpApsChannel.setStatus("current")
_FfpApsFarEndModule_Type = FspR7ApsFarEndModule
_FfpApsFarEndModule_Object = MibTableColumn
ffpApsFarEndModule = _FfpApsFarEndModule_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 3, 1, 18),
    _FfpApsFarEndModule_Type()
)
ffpApsFarEndModule.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ffpApsFarEndModule.setStatus("current")
_EndOfFfpTable_Type = Integer32
_EndOfFfpTable_Object = MibScalar
endOfFfpTable = _EndOfFfpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 4),
    _EndOfFfpTable_Type()
)
endOfFfpTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFfpTable.setStatus("current")
_EndOfProtection_Type = Integer32
_EndOfProtection_Object = MibScalar
endOfProtection = _EndOfProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 6, 10000),
    _EndOfProtection_Type()
)
endOfProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfProtection.setStatus("current")
_Translation_ObjectIdentity = ObjectIdentity
translation = _Translation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7)
)
_AidMappingTable_Object = MibTable
aidMappingTable = _AidMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 1)
)
if mibBuilder.loadTexts:
    aidMappingTable.setStatus("current")
_AidMappingEntry_Object = MibTableRow
aidMappingEntry = _AidMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 1, 1)
)
aidMappingEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "aidMappingAidString"),
)
if mibBuilder.loadTexts:
    aidMappingEntry.setStatus("current")
_AidMappingAidString_Type = SnmpAdminString
_AidMappingAidString_Object = MibTableColumn
aidMappingAidString = _AidMappingAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 1, 1, 1),
    _AidMappingAidString_Type()
)
aidMappingAidString.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aidMappingAidString.setStatus("current")
_AidMappingId_Type = RowPointer
_AidMappingId_Object = MibTableColumn
aidMappingId = _AidMappingId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 1, 1, 2),
    _AidMappingId_Type()
)
aidMappingId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aidMappingId.setStatus("current")
_AidMappingString_Type = SnmpAdminString
_AidMappingString_Object = MibTableColumn
aidMappingString = _AidMappingString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 1, 1, 3),
    _AidMappingString_Type()
)
aidMappingString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aidMappingString.setStatus("current")
_EndOfAidMappingTable_Type = Integer32
_EndOfAidMappingTable_Object = MibScalar
endOfAidMappingTable = _EndOfAidMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 2),
    _EndOfAidMappingTable_Type()
)
endOfAidMappingTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfAidMappingTable.setStatus("current")
_EndOfTranslation_Type = Integer32
_EndOfTranslation_Object = MibScalar
endOfTranslation = _EndOfTranslation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 7, 10000),
    _EndOfTranslation_Type()
)
endOfTranslation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfTranslation.setStatus("current")
_AdvaSecurity_ObjectIdentity = ObjectIdentity
advaSecurity = _AdvaSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8)
)
_SshHostKeyLength_Type = FspR7SshHostKeyLength
_SshHostKeyLength_Object = MibScalar
sshHostKeyLength = _SshHostKeyLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 1),
    _SshHostKeyLength_Type()
)
sshHostKeyLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshHostKeyLength.setStatus("current")
_NewSshHostKey_Type = FspR7RlsAction
_NewSshHostKey_Object = MibScalar
newSshHostKey = _NewSshHostKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 2),
    _NewSshHostKey_Type()
)
newSshHostKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    newSshHostKey.setStatus("current")
_AccessWarning_Type = FspR7EnableDisable
_AccessWarning_Object = MibScalar
accessWarning = _AccessWarning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 3),
    _AccessWarning_Type()
)
accessWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessWarning.setStatus("current")
_AccessWarningMessage_Type = FspR7SnmpLongString
_AccessWarningMessage_Object = MibScalar
accessWarningMessage = _AccessWarningMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 4),
    _AccessWarningMessage_Type()
)
accessWarningMessage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessWarningMessage.setStatus("current")
_ShowLastLoginSuccess_Type = FspR7EnableDisable
_ShowLastLoginSuccess_Object = MibScalar
showLastLoginSuccess = _ShowLastLoginSuccess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 5),
    _ShowLastLoginSuccess_Type()
)
showLastLoginSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    showLastLoginSuccess.setStatus("current")
_ShowLastLoginFail_Type = FspR7EnableDisable
_ShowLastLoginFail_Object = MibScalar
showLastLoginFail = _ShowLastLoginFail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 6),
    _ShowLastLoginFail_Type()
)
showLastLoginFail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    showLastLoginFail.setStatus("current")
_WriteAccessStatus_Type = FspR7DisableEnable
_WriteAccessStatus_Object = MibScalar
writeAccessStatus = _WriteAccessStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 7),
    _WriteAccessStatus_Type()
)
writeAccessStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    writeAccessStatus.setStatus("current")


class _WriteAccessRequestTimeout_Type(Unsigned32):
    """Custom type writeAccessRequestTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_WriteAccessRequestTimeout_Type.__name__ = "Unsigned32"
_WriteAccessRequestTimeout_Object = MibScalar
writeAccessRequestTimeout = _WriteAccessRequestTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 8),
    _WriteAccessRequestTimeout_Type()
)
writeAccessRequestTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    writeAccessRequestTimeout.setStatus("current")
if mibBuilder.loadTexts:
    writeAccessRequestTimeout.setUnits("s")
_VirtualSessionTable_Object = MibTable
virtualSessionTable = _VirtualSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15)
)
if mibBuilder.loadTexts:
    virtualSessionTable.setStatus("current")
_VirtualSessionEntry_Object = MibTableRow
virtualSessionEntry = _VirtualSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1)
)
virtualSessionEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "virtualSessionId"),
)
if mibBuilder.loadTexts:
    virtualSessionEntry.setStatus("current")
_VirtualSessionId_Type = Unsigned32
_VirtualSessionId_Object = MibTableColumn
virtualSessionId = _VirtualSessionId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 1),
    _VirtualSessionId_Type()
)
virtualSessionId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    virtualSessionId.setStatus("current")
_VirtualSessionStatus_Type = FspR7VSessStatus
_VirtualSessionStatus_Object = MibTableColumn
virtualSessionStatus = _VirtualSessionStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 2),
    _VirtualSessionStatus_Type()
)
virtualSessionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualSessionStatus.setStatus("current")


class _VirtualSessionTimeout_Type(Integer32):
    """Custom type virtualSessionTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 480),
    )


_VirtualSessionTimeout_Type.__name__ = "Integer32"
_VirtualSessionTimeout_Object = MibTableColumn
virtualSessionTimeout = _VirtualSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 3),
    _VirtualSessionTimeout_Type()
)
virtualSessionTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualSessionTimeout.setStatus("current")
_VirtualSessionWriteAccess_Type = FspR7VSessWriteAccess
_VirtualSessionWriteAccess_Object = MibTableColumn
virtualSessionWriteAccess = _VirtualSessionWriteAccess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 4),
    _VirtualSessionWriteAccess_Type()
)
virtualSessionWriteAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualSessionWriteAccess.setStatus("current")
_VirtualSessionUserName_Type = SnmpAdminString
_VirtualSessionUserName_Object = MibTableColumn
virtualSessionUserName = _VirtualSessionUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 5),
    _VirtualSessionUserName_Type()
)
virtualSessionUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualSessionUserName.setStatus("current")
_VirtualSessionIpAddress_Type = IpAddress
_VirtualSessionIpAddress_Object = MibTableColumn
virtualSessionIpAddress = _VirtualSessionIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 6),
    _VirtualSessionIpAddress_Type()
)
virtualSessionIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualSessionIpAddress.setStatus("current")
_VirtualSessionChangeReason_Type = FspR7VSessChangeReason
_VirtualSessionChangeReason_Object = MibTableColumn
virtualSessionChangeReason = _VirtualSessionChangeReason_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 7),
    _VirtualSessionChangeReason_Type()
)
virtualSessionChangeReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualSessionChangeReason.setStatus("current")
_VirtualSessionChangeTime_Type = TimeTicks
_VirtualSessionChangeTime_Object = MibTableColumn
virtualSessionChangeTime = _VirtualSessionChangeTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 15, 1, 8),
    _VirtualSessionChangeTime_Type()
)
virtualSessionChangeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualSessionChangeTime.setStatus("current")
_PacketFiltering_Type = FspR7EnableDisable
_PacketFiltering_Object = MibScalar
packetFiltering = _PacketFiltering_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 16),
    _PacketFiltering_Type()
)
packetFiltering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    packetFiltering.setStatus("current")
_WhitelistFiltering_Type = FspR7EnableDisable
_WhitelistFiltering_Object = MibScalar
whitelistFiltering = _WhitelistFiltering_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 17),
    _WhitelistFiltering_Type()
)
whitelistFiltering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    whitelistFiltering.setStatus("current")
_RestrictToSysIP_Type = FspR7EnableDisable
_RestrictToSysIP_Object = MibScalar
restrictToSysIP = _RestrictToSysIP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 18),
    _RestrictToSysIP_Type()
)
restrictToSysIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    restrictToSysIP.setStatus("current")
_IcmpFiltering_Type = FspR7EnableDisable
_IcmpFiltering_Object = MibScalar
icmpFiltering = _IcmpFiltering_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 19),
    _IcmpFiltering_Type()
)
icmpFiltering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpFiltering.setStatus("current")
_IcmpEchoRequests_Type = FspR7EnableDisable
_IcmpEchoRequests_Object = MibScalar
icmpEchoRequests = _IcmpEchoRequests_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 20),
    _IcmpEchoRequests_Type()
)
icmpEchoRequests.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpEchoRequests.setStatus("current")
_IcmpSourceQuench_Type = FspR7EnableDisable
_IcmpSourceQuench_Object = MibScalar
icmpSourceQuench = _IcmpSourceQuench_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 21),
    _IcmpSourceQuench_Type()
)
icmpSourceQuench.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpSourceQuench.setStatus("current")
_IcmpRedirect_Type = FspR7EnableDisable
_IcmpRedirect_Object = MibScalar
icmpRedirect = _IcmpRedirect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 22),
    _IcmpRedirect_Type()
)
icmpRedirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpRedirect.setStatus("current")
_OcmpTimestampRequest_Type = FspR7EnableDisable
_OcmpTimestampRequest_Object = MibScalar
ocmpTimestampRequest = _OcmpTimestampRequest_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 23),
    _OcmpTimestampRequest_Type()
)
ocmpTimestampRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ocmpTimestampRequest.setStatus("current")
_IcmpAddrMask_Type = FspR7EnableDisable
_IcmpAddrMask_Object = MibScalar
icmpAddrMask = _IcmpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 24),
    _IcmpAddrMask_Type()
)
icmpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpAddrMask.setStatus("current")
_DosProtection_Type = FspR7EnableDisable
_DosProtection_Object = MibScalar
dosProtection = _DosProtection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 25),
    _DosProtection_Type()
)
dosProtection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dosProtection.setStatus("current")
_IsolateInbandChan_Type = FspR7EnableDisable
_IsolateInbandChan_Object = MibScalar
isolateInbandChan = _IsolateInbandChan_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 26),
    _IsolateInbandChan_Type()
)
isolateInbandChan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isolateInbandChan.setStatus("current")
_IpForwarding_Type = FspR7IpForwarding
_IpForwarding_Object = MibScalar
ipForwarding = _IpForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 27),
    _IpForwarding_Type()
)
ipForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipForwarding.setStatus("current")
_WhitelistTable_Object = MibTable
whitelistTable = _WhitelistTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30)
)
if mibBuilder.loadTexts:
    whitelistTable.setStatus("current")
_WhitelistEntry_Object = MibTableRow
whitelistEntry = _WhitelistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1)
)
whitelistEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "whitelistId"),
)
if mibBuilder.loadTexts:
    whitelistEntry.setStatus("current")
_WhitelistId_Type = Unsigned32
_WhitelistId_Object = MibTableColumn
whitelistId = _WhitelistId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1, 1),
    _WhitelistId_Type()
)
whitelistId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    whitelistId.setStatus("current")
_WhitelistRowStatus_Type = RowStatus
_WhitelistRowStatus_Object = MibTableColumn
whitelistRowStatus = _WhitelistRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1, 2),
    _WhitelistRowStatus_Type()
)
whitelistRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    whitelistRowStatus.setStatus("current")
_WhitelistAdmin_Type = FspR7AdminState
_WhitelistAdmin_Object = MibTableColumn
whitelistAdmin = _WhitelistAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1, 3),
    _WhitelistAdmin_Type()
)
whitelistAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    whitelistAdmin.setStatus("current")
_WhitelistIpMask_Type = IpAddress
_WhitelistIpMask_Object = MibTableColumn
whitelistIpMask = _WhitelistIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1, 4),
    _WhitelistIpMask_Type()
)
whitelistIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    whitelistIpMask.setStatus("current")
_WhitelistIpAddr_Type = IpAddress
_WhitelistIpAddr_Object = MibTableColumn
whitelistIpAddr = _WhitelistIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 30, 1, 5),
    _WhitelistIpAddr_Type()
)
whitelistIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    whitelistIpAddr.setStatus("current")
_LockSafety_Type = FspR7EnableDisable
_LockSafety_Object = MibScalar
lockSafety = _LockSafety_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 31),
    _LockSafety_Type()
)
lockSafety.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lockSafety.setStatus("current")


class _UnlockTime_Type(Unsigned32):
    """Custom type unlockTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99999),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_UnlockTime_Type.__name__ = "Unsigned32"
_UnlockTime_Object = MibScalar
unlockTime = _UnlockTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 32),
    _UnlockTime_Type()
)
unlockTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    unlockTime.setStatus("current")
if mibBuilder.loadTexts:
    unlockTime.setUnits("s")
_SslRenewMode_Type = FspR7RenewMode
_SslRenewMode_Object = MibScalar
sslRenewMode = _SslRenewMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 33),
    _SslRenewMode_Type()
)
sslRenewMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sslRenewMode.setStatus("current")
_SslKeyLength_Type = FspR7KeyLength
_SslKeyLength_Object = MibScalar
sslKeyLength = _SslKeyLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 34),
    _SslKeyLength_Type()
)
sslKeyLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sslKeyLength.setStatus("current")
_SslValidityPeriod_Type = FspR7ValidityPeriod
_SslValidityPeriod_Object = MibScalar
sslValidityPeriod = _SslValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 35),
    _SslValidityPeriod_Type()
)
sslValidityPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sslValidityPeriod.setStatus("current")
_SslCertApply_Type = FspR7RlsAction
_SslCertApply_Object = MibScalar
sslCertApply = _SslCertApply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 36),
    _SslCertApply_Type()
)
sslCertApply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sslCertApply.setStatus("current")
_SslCertIp_Type = SnmpAdminString
_SslCertIp_Object = MibScalar
sslCertIp = _SslCertIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 37),
    _SslCertIp_Type()
)
sslCertIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sslCertIp.setStatus("current")
_TrapSource_Type = FspR7AppType
_TrapSource_Object = MibScalar
trapSource = _TrapSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 38),
    _TrapSource_Type()
)
trapSource.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    trapSource.setStatus("current")
_TrapUser_Type = SnmpAdminString
_TrapUser_Object = MibScalar
trapUser = _TrapUser_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 39),
    _TrapUser_Type()
)
trapUser.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    trapUser.setStatus("current")
_RemoveUsers_Type = FspR7RlsAction
_RemoveUsers_Object = MibScalar
removeUsers = _RemoveUsers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 40),
    _RemoveUsers_Type()
)
removeUsers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    removeUsers.setStatus("current")
_AuthTrapUserName_Type = SnmpAdminString
_AuthTrapUserName_Object = MibScalar
authTrapUserName = _AuthTrapUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 41),
    _AuthTrapUserName_Type()
)
authTrapUserName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapUserName.setStatus("current")
_AuthTrapAccountState_Type = FspR7AccStateTrap
_AuthTrapAccountState_Object = MibScalar
authTrapAccountState = _AuthTrapAccountState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 42),
    _AuthTrapAccountState_Type()
)
authTrapAccountState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapAccountState.setStatus("current")
_PrivilegeChangeTable_Object = MibTable
privilegeChangeTable = _PrivilegeChangeTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43)
)
if mibBuilder.loadTexts:
    privilegeChangeTable.setStatus("current")
_PrivilegeChangeEntry_Object = MibTableRow
privilegeChangeEntry = _PrivilegeChangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1)
)
privilegeChangeEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "privilegeChangeId"),
)
if mibBuilder.loadTexts:
    privilegeChangeEntry.setStatus("current")


class _PrivilegeChangeId_Type(Unsigned32):
    """Custom type privilegeChangeId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_PrivilegeChangeId_Type.__name__ = "Unsigned32"
_PrivilegeChangeId_Object = MibTableColumn
privilegeChangeId = _PrivilegeChangeId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 1),
    _PrivilegeChangeId_Type()
)
privilegeChangeId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    privilegeChangeId.setStatus("current")
_PrivilegeChangeUserName_Type = SnmpAdminString
_PrivilegeChangeUserName_Object = MibTableColumn
privilegeChangeUserName = _PrivilegeChangeUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 2),
    _PrivilegeChangeUserName_Type()
)
privilegeChangeUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeUserName.setStatus("current")
_PrivilegeChangeIpAddress_Type = IpAddress
_PrivilegeChangeIpAddress_Object = MibTableColumn
privilegeChangeIpAddress = _PrivilegeChangeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 3),
    _PrivilegeChangeIpAddress_Type()
)
privilegeChangeIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeIpAddress.setStatus("current")
_PrivilegeChangeInterface_Type = FspR7UserInterface
_PrivilegeChangeInterface_Object = MibTableColumn
privilegeChangeInterface = _PrivilegeChangeInterface_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 4),
    _PrivilegeChangeInterface_Type()
)
privilegeChangeInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeInterface.setStatus("current")
_PrivilegeChangeCurrentPrivilege_Type = FspR7PrivLevel
_PrivilegeChangeCurrentPrivilege_Object = MibTableColumn
privilegeChangeCurrentPrivilege = _PrivilegeChangeCurrentPrivilege_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 5),
    _PrivilegeChangeCurrentPrivilege_Type()
)
privilegeChangeCurrentPrivilege.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeCurrentPrivilege.setStatus("current")
_PrivilegeChangeRequestedPrivilege_Type = FspR7PrivLevel
_PrivilegeChangeRequestedPrivilege_Object = MibTableColumn
privilegeChangeRequestedPrivilege = _PrivilegeChangeRequestedPrivilege_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 6),
    _PrivilegeChangeRequestedPrivilege_Type()
)
privilegeChangeRequestedPrivilege.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeRequestedPrivilege.setStatus("current")


class _PrivilegeChangeDuration_Type(Unsigned32):
    """Custom type privilegeChangeDuration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 480),
    )


_PrivilegeChangeDuration_Type.__name__ = "Unsigned32"
_PrivilegeChangeDuration_Object = MibTableColumn
privilegeChangeDuration = _PrivilegeChangeDuration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 7),
    _PrivilegeChangeDuration_Type()
)
privilegeChangeDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeDuration.setStatus("current")
if mibBuilder.loadTexts:
    privilegeChangeDuration.setUnits("min")
_PrivilegeChangeAction_Type = FspR7RequestAction
_PrivilegeChangeAction_Object = MibTableColumn
privilegeChangeAction = _PrivilegeChangeAction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 8),
    _PrivilegeChangeAction_Type()
)
privilegeChangeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    privilegeChangeAction.setStatus("current")
_PrivilegeChangeState_Type = FspR7RequestState
_PrivilegeChangeState_Object = MibTableColumn
privilegeChangeState = _PrivilegeChangeState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 9),
    _PrivilegeChangeState_Type()
)
privilegeChangeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeState.setStatus("current")
_PrivilegeChangeRemainingTime_Type = Unsigned32
_PrivilegeChangeRemainingTime_Object = MibTableColumn
privilegeChangeRemainingTime = _PrivilegeChangeRemainingTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 10),
    _PrivilegeChangeRemainingTime_Type()
)
privilegeChangeRemainingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeRemainingTime.setStatus("current")
if mibBuilder.loadTexts:
    privilegeChangeRemainingTime.setUnits("s")
_PrivilegeChangeRemoteName_Type = SnmpAdminString
_PrivilegeChangeRemoteName_Object = MibTableColumn
privilegeChangeRemoteName = _PrivilegeChangeRemoteName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 43, 1, 11),
    _PrivilegeChangeRemoteName_Type()
)
privilegeChangeRemoteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    privilegeChangeRemoteName.setStatus("current")
_AuthTrapSrcIp_Type = SnmpAdminString
_AuthTrapSrcIp_Object = MibScalar
authTrapSrcIp = _AuthTrapSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 45),
    _AuthTrapSrcIp_Type()
)
authTrapSrcIp.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapSrcIp.setStatus("current")
_AuthTrapStatus_Type = FspR7AccessStatus
_AuthTrapStatus_Object = MibScalar
authTrapStatus = _AuthTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 46),
    _AuthTrapStatus_Type()
)
authTrapStatus.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapStatus.setStatus("current")
_AuthTrapSessionId_Type = SnmpAdminString
_AuthTrapSessionId_Object = MibScalar
authTrapSessionId = _AuthTrapSessionId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 47),
    _AuthTrapSessionId_Type()
)
authTrapSessionId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapSessionId.setStatus("current")
_AuthTrapProtocol_Type = FspR7AccessProtocol
_AuthTrapProtocol_Object = MibScalar
authTrapProtocol = _AuthTrapProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 48),
    _AuthTrapProtocol_Type()
)
authTrapProtocol.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapProtocol.setStatus("current")
_AuthTrapPort_Type = Unsigned32
_AuthTrapPort_Object = MibScalar
authTrapPort = _AuthTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 49),
    _AuthTrapPort_Type()
)
authTrapPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapPort.setStatus("current")
_AuthTrapAccess_Type = SnmpAdminString
_AuthTrapAccess_Object = MibScalar
authTrapAccess = _AuthTrapAccess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 50),
    _AuthTrapAccess_Type()
)
authTrapAccess.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapAccess.setStatus("current")
_AuthTrapSuccessfulAuthCount_Type = Unsigned32
_AuthTrapSuccessfulAuthCount_Object = MibScalar
authTrapSuccessfulAuthCount = _AuthTrapSuccessfulAuthCount_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 51),
    _AuthTrapSuccessfulAuthCount_Type()
)
authTrapSuccessfulAuthCount.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapSuccessfulAuthCount.setStatus("current")
_AuthTrapUnsuccessfulAuthCount_Type = Unsigned32
_AuthTrapUnsuccessfulAuthCount_Object = MibScalar
authTrapUnsuccessfulAuthCount = _AuthTrapUnsuccessfulAuthCount_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 52),
    _AuthTrapUnsuccessfulAuthCount_Type()
)
authTrapUnsuccessfulAuthCount.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    authTrapUnsuccessfulAuthCount.setStatus("current")
_UserManagementTable_Object = MibTable
userManagementTable = _UserManagementTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53)
)
if mibBuilder.loadTexts:
    userManagementTable.setStatus("current")
_UserManagementEntry_Object = MibTableRow
userManagementEntry = _UserManagementEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1)
)
userManagementEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "userManagementUsername"),
)
if mibBuilder.loadTexts:
    userManagementEntry.setStatus("current")
_UserManagementRowStatus_Type = RowStatus
_UserManagementRowStatus_Object = MibTableColumn
userManagementRowStatus = _UserManagementRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 1),
    _UserManagementRowStatus_Type()
)
userManagementRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementRowStatus.setStatus("current")
_UserManagementUsername_Type = SnmpAdminString
_UserManagementUsername_Object = MibTableColumn
userManagementUsername = _UserManagementUsername_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 2),
    _UserManagementUsername_Type()
)
userManagementUsername.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementUsername.setStatus("current")
_UserManagementPrivilegeLevel_Type = FspR7SnmpPrivLevel
_UserManagementPrivilegeLevel_Object = MibTableColumn
userManagementPrivilegeLevel = _UserManagementPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 3),
    _UserManagementPrivilegeLevel_Type()
)
userManagementPrivilegeLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPrivilegeLevel.setStatus("current")
_UserManagementSecurityLevel_Type = FspR7SnmpSecuLevel
_UserManagementSecurityLevel_Object = MibTableColumn
userManagementSecurityLevel = _UserManagementSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 4),
    _UserManagementSecurityLevel_Type()
)
userManagementSecurityLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementSecurityLevel.setStatus("current")
_UserManagementAuthPrivKey_Type = SnmpAdminString
_UserManagementAuthPrivKey_Object = MibTableColumn
userManagementAuthPrivKey = _UserManagementAuthPrivKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 5),
    _UserManagementAuthPrivKey_Type()
)
userManagementAuthPrivKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAuthPrivKey.setStatus("current")
_UserManagementAuthPrivKeyOld_Type = SnmpAdminString
_UserManagementAuthPrivKeyOld_Object = MibTableColumn
userManagementAuthPrivKeyOld = _UserManagementAuthPrivKeyOld_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 6),
    _UserManagementAuthPrivKeyOld_Type()
)
userManagementAuthPrivKeyOld.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAuthPrivKeyOld.setStatus("current")
_UserManagementTl1TimeoutAvailable_Type = FspR7YesNo
_UserManagementTl1TimeoutAvailable_Object = MibTableColumn
userManagementTl1TimeoutAvailable = _UserManagementTl1TimeoutAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 7),
    _UserManagementTl1TimeoutAvailable_Type()
)
userManagementTl1TimeoutAvailable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementTl1TimeoutAvailable.setStatus("current")


class _UserManagementTl1TimeoutValue_Type(Integer32):
    """Custom type userManagementTl1TimeoutValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_UserManagementTl1TimeoutValue_Type.__name__ = "Integer32"
_UserManagementTl1TimeoutValue_Object = MibTableColumn
userManagementTl1TimeoutValue = _UserManagementTl1TimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 8),
    _UserManagementTl1TimeoutValue_Type()
)
userManagementTl1TimeoutValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementTl1TimeoutValue.setStatus("current")


class _UserManagementSnmpTimeoutValue_Type(Unsigned32):
    """Custom type userManagementSnmpTimeoutValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 3600),
    )


_UserManagementSnmpTimeoutValue_Type.__name__ = "Unsigned32"
_UserManagementSnmpTimeoutValue_Object = MibTableColumn
userManagementSnmpTimeoutValue = _UserManagementSnmpTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 9),
    _UserManagementSnmpTimeoutValue_Type()
)
userManagementSnmpTimeoutValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementSnmpTimeoutValue.setStatus("current")
if mibBuilder.loadTexts:
    userManagementSnmpTimeoutValue.setUnits("s")
_UserManagementUdpSessionStatus_Type = FspR7SessionStatus
_UserManagementUdpSessionStatus_Object = MibTableColumn
userManagementUdpSessionStatus = _UserManagementUdpSessionStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 10),
    _UserManagementUdpSessionStatus_Type()
)
userManagementUdpSessionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementUdpSessionStatus.setStatus("current")
_UserManagementAccountFlag_Type = FspR7AccountFlag
_UserManagementAccountFlag_Object = MibTableColumn
userManagementAccountFlag = _UserManagementAccountFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 11),
    _UserManagementAccountFlag_Type()
)
userManagementAccountFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAccountFlag.setStatus("current")
_UserManagementPasswordMinAge_Type = Integer32
_UserManagementPasswordMinAge_Object = MibTableColumn
userManagementPasswordMinAge = _UserManagementPasswordMinAge_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 12),
    _UserManagementPasswordMinAge_Type()
)
userManagementPasswordMinAge.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPasswordMinAge.setStatus("current")
_UserManagementPasswordMaxAge_Type = Integer32
_UserManagementPasswordMaxAge_Object = MibTableColumn
userManagementPasswordMaxAge = _UserManagementPasswordMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 13),
    _UserManagementPasswordMaxAge_Type()
)
userManagementPasswordMaxAge.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPasswordMaxAge.setStatus("current")
_UserManagementPasswordExpirationPeriod_Type = Integer32
_UserManagementPasswordExpirationPeriod_Object = MibTableColumn
userManagementPasswordExpirationPeriod = _UserManagementPasswordExpirationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 14),
    _UserManagementPasswordExpirationPeriod_Type()
)
userManagementPasswordExpirationPeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPasswordExpirationPeriod.setStatus("current")
_UserManagementAccountState_Type = FspR7AccState
_UserManagementAccountState_Object = MibTableColumn
userManagementAccountState = _UserManagementAccountState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 15),
    _UserManagementAccountState_Type()
)
userManagementAccountState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAccountState.setStatus("current")
_UserManagementPasswordExpirationDate_Type = SnmpAdminString
_UserManagementPasswordExpirationDate_Object = MibTableColumn
userManagementPasswordExpirationDate = _UserManagementPasswordExpirationDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 16),
    _UserManagementPasswordExpirationDate_Type()
)
userManagementPasswordExpirationDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementPasswordExpirationDate.setStatus("current")
_UserManagementPasswordLastChangeDate_Type = SnmpAdminString
_UserManagementPasswordLastChangeDate_Object = MibTableColumn
userManagementPasswordLastChangeDate = _UserManagementPasswordLastChangeDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 17),
    _UserManagementPasswordLastChangeDate_Type()
)
userManagementPasswordLastChangeDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementPasswordLastChangeDate.setStatus("current")


class _UserManagementFailedLoginAttempts_Type(Integer32):
    """Custom type userManagementFailedLoginAttempts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_UserManagementFailedLoginAttempts_Type.__name__ = "Integer32"
_UserManagementFailedLoginAttempts_Object = MibTableColumn
userManagementFailedLoginAttempts = _UserManagementFailedLoginAttempts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 18),
    _UserManagementFailedLoginAttempts_Type()
)
userManagementFailedLoginAttempts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementFailedLoginAttempts.setStatus("current")
_UserManagementLastLoginFailInfo_Type = SnmpAdminString
_UserManagementLastLoginFailInfo_Object = MibTableColumn
userManagementLastLoginFailInfo = _UserManagementLastLoginFailInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 19),
    _UserManagementLastLoginFailInfo_Type()
)
userManagementLastLoginFailInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementLastLoginFailInfo.setStatus("current")
_UserManagementLastLoginSuccessInfo_Type = SnmpAdminString
_UserManagementLastLoginSuccessInfo_Object = MibTableColumn
userManagementLastLoginSuccessInfo = _UserManagementLastLoginSuccessInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 20),
    _UserManagementLastLoginSuccessInfo_Type()
)
userManagementLastLoginSuccessInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementLastLoginSuccessInfo.setStatus("current")


class _UserManagementInactivityPeriod_Type(Integer32):
    """Custom type userManagementInactivityPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_UserManagementInactivityPeriod_Type.__name__ = "Integer32"
_UserManagementInactivityPeriod_Object = MibTableColumn
userManagementInactivityPeriod = _UserManagementInactivityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 21),
    _UserManagementInactivityPeriod_Type()
)
userManagementInactivityPeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementInactivityPeriod.setStatus("current")
if mibBuilder.loadTexts:
    userManagementInactivityPeriod.setUnits("day")
_UserManagementAccessStartTime_Type = FspR7TimeShort
_UserManagementAccessStartTime_Object = MibTableColumn
userManagementAccessStartTime = _UserManagementAccessStartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 22),
    _UserManagementAccessStartTime_Type()
)
userManagementAccessStartTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAccessStartTime.setStatus("current")
_UserManagementAccessEndTime_Type = FspR7TimeShort
_UserManagementAccessEndTime_Object = MibTableColumn
userManagementAccessEndTime = _UserManagementAccessEndTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 23),
    _UserManagementAccessEndTime_Type()
)
userManagementAccessEndTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAccessEndTime.setStatus("current")
_UserManagementAccessDays_Type = SnmpAdminString
_UserManagementAccessDays_Object = MibTableColumn
userManagementAccessDays = _UserManagementAccessDays_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 24),
    _UserManagementAccessDays_Type()
)
userManagementAccessDays.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementAccessDays.setStatus("current")
_UserManagementExpirationDate_Type = FspR7Date
_UserManagementExpirationDate_Object = MibTableColumn
userManagementExpirationDate = _UserManagementExpirationDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 25),
    _UserManagementExpirationDate_Type()
)
userManagementExpirationDate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementExpirationDate.setStatus("current")
_UserManagementSso2fa_Type = FspR7DisableEnable
_UserManagementSso2fa_Object = MibTableColumn
userManagementSso2fa = _UserManagementSso2fa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 26),
    _UserManagementSso2fa_Type()
)
userManagementSso2fa.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementSso2fa.setStatus("current")
_UserManagementPasswordHashType_Type = FspR7PasswordHashType
_UserManagementPasswordHashType_Object = MibTableColumn
userManagementPasswordHashType = _UserManagementPasswordHashType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 27),
    _UserManagementPasswordHashType_Type()
)
userManagementPasswordHashType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userManagementPasswordHashType.setStatus("current")
_UserManagementPrivacyKeyType_Type = FspR7PrivacyKeyType
_UserManagementPrivacyKeyType_Object = MibTableColumn
userManagementPrivacyKeyType = _UserManagementPrivacyKeyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 28),
    _UserManagementPrivacyKeyType_Type()
)
userManagementPrivacyKeyType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPrivacyKeyType.setStatus("current")
_UserManagementPrivacyKey_Type = SnmpAdminString
_UserManagementPrivacyKey_Object = MibTableColumn
userManagementPrivacyKey = _UserManagementPrivacyKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 53, 1, 29),
    _UserManagementPrivacyKey_Type()
)
userManagementPrivacyKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userManagementPrivacyKey.setStatus("current")
_ActiveUsersTable_Object = MibTable
activeUsersTable = _ActiveUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 54)
)
if mibBuilder.loadTexts:
    activeUsersTable.setStatus("current")
_ActiveUsersEntry_Object = MibTableRow
activeUsersEntry = _ActiveUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 54, 1)
)
activeUsersEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "activeUsersSessionGroupName"),
)
if mibBuilder.loadTexts:
    activeUsersEntry.setStatus("current")
_ActiveUsersSessionGroupName_Type = SnmpAdminString
_ActiveUsersSessionGroupName_Object = MibTableColumn
activeUsersSessionGroupName = _ActiveUsersSessionGroupName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 54, 1, 1),
    _ActiveUsersSessionGroupName_Type()
)
activeUsersSessionGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeUsersSessionGroupName.setStatus("current")
_ActiveUsersInterfaces_Type = FspR7AccessProtocolCaps
_ActiveUsersInterfaces_Object = MibTableColumn
activeUsersInterfaces = _ActiveUsersInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 54, 1, 2),
    _ActiveUsersInterfaces_Type()
)
activeUsersInterfaces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeUsersInterfaces.setStatus("current")
_ActiveUsersTerminate_Type = FspR7TerminateSessions
_ActiveUsersTerminate_Object = MibTableColumn
activeUsersTerminate = _ActiveUsersTerminate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 54, 1, 3),
    _ActiveUsersTerminate_Type()
)
activeUsersTerminate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeUsersTerminate.setStatus("current")
_NcuPortC2_Type = FspR7AccessNcuC2
_NcuPortC2_Object = MibScalar
ncuPortC2 = _NcuPortC2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 55),
    _NcuPortC2_Type()
)
ncuPortC2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ncuPortC2.setStatus("current")
_RpFilter_Type = FspR7RPFilter
_RpFilter_Object = MibScalar
rpFilter = _RpFilter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 56),
    _RpFilter_Type()
)
rpFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rpFilter.setStatus("current")
_Sso2fa_Type = FspR7DisableEnable
_Sso2fa_Object = MibScalar
sso2fa = _Sso2fa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 57),
    _Sso2fa_Type()
)
sso2fa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sso2fa.setStatus("current")
_RemoteAuth_Type = FspR7RemoteAuth
_RemoteAuth_Object = MibScalar
remoteAuth = _RemoteAuth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 60),
    _RemoteAuth_Type()
)
remoteAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteAuth.setStatus("current")
_RemoteAuthProtocol_Type = FspR7RemoteAuthProtocol
_RemoteAuthProtocol_Object = MibScalar
remoteAuthProtocol = _RemoteAuthProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 61),
    _RemoteAuthProtocol_Type()
)
remoteAuthProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteAuthProtocol.setStatus("current")
_TlsSupport_Type = FspR7TLSSupport
_TlsSupport_Object = MibScalar
tlsSupport = _TlsSupport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 8, 62),
    _TlsSupport_Type()
)
tlsSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tlsSupport.setStatus("current")
_IpSettings_ObjectIdentity = ObjectIdentity
ipSettings = _IpSettings_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9)
)
_KnownHostIPv6Table_Object = MibTable
knownHostIPv6Table = _KnownHostIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3)
)
if mibBuilder.loadTexts:
    knownHostIPv6Table.setStatus("current")
_KnownHostIPv6Entry_Object = MibTableRow
knownHostIPv6Entry = _KnownHostIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3, 1)
)
knownHostIPv6Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "knownHostIPv6IP"),
    (0, "ADVA-FSPR7-MIB", "knownHostIPv6KeyEncryptAlgorithm"),
)
if mibBuilder.loadTexts:
    knownHostIPv6Entry.setStatus("current")
_KnownHostIPv6IP_Type = FspR7Ipv6Address
_KnownHostIPv6IP_Object = MibTableColumn
knownHostIPv6IP = _KnownHostIPv6IP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3, 1, 1),
    _KnownHostIPv6IP_Type()
)
knownHostIPv6IP.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    knownHostIPv6IP.setStatus("current")
_KnownHostIPv6KeyEncryptAlgorithm_Type = FspR7SshHostKeyEncryptAlgorithm
_KnownHostIPv6KeyEncryptAlgorithm_Object = MibTableColumn
knownHostIPv6KeyEncryptAlgorithm = _KnownHostIPv6KeyEncryptAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3, 1, 2),
    _KnownHostIPv6KeyEncryptAlgorithm_Type()
)
knownHostIPv6KeyEncryptAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    knownHostIPv6KeyEncryptAlgorithm.setStatus("current")
_KnownHostIPv6RowStatus_Type = RowStatus
_KnownHostIPv6RowStatus_Object = MibTableColumn
knownHostIPv6RowStatus = _KnownHostIPv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3, 1, 3),
    _KnownHostIPv6RowStatus_Type()
)
knownHostIPv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    knownHostIPv6RowStatus.setStatus("current")
_KnownHostIPv6FingerPrint_Type = FspR7SnmpHexString
_KnownHostIPv6FingerPrint_Object = MibTableColumn
knownHostIPv6FingerPrint = _KnownHostIPv6FingerPrint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 3, 1, 4),
    _KnownHostIPv6FingerPrint_Type()
)
knownHostIPv6FingerPrint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    knownHostIPv6FingerPrint.setStatus("current")
_Ipv6ActRoutesTable_Object = MibTable
ipv6ActRoutesTable = _Ipv6ActRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14)
)
if mibBuilder.loadTexts:
    ipv6ActRoutesTable.setStatus("current")
_Ipv6ActRoutesEntry_Object = MibTableRow
ipv6ActRoutesEntry = _Ipv6ActRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1)
)
ipv6ActRoutesEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesDestination"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesPrefix"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesNextHop"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesShelfNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesSlotNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesPortNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesExtNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6ActRoutesClassName"),
)
if mibBuilder.loadTexts:
    ipv6ActRoutesEntry.setStatus("current")
_Ipv6ActRoutesDestination_Type = FspR7Ipv6Address
_Ipv6ActRoutesDestination_Object = MibTableColumn
ipv6ActRoutesDestination = _Ipv6ActRoutesDestination_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 1),
    _Ipv6ActRoutesDestination_Type()
)
ipv6ActRoutesDestination.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesDestination.setStatus("current")


class _Ipv6ActRoutesPrefix_Type(Unsigned32):
    """Custom type ipv6ActRoutesPrefix based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6ActRoutesPrefix_Type.__name__ = "Unsigned32"
_Ipv6ActRoutesPrefix_Object = MibTableColumn
ipv6ActRoutesPrefix = _Ipv6ActRoutesPrefix_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 2),
    _Ipv6ActRoutesPrefix_Type()
)
ipv6ActRoutesPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesPrefix.setStatus("current")
_Ipv6ActRoutesNextHop_Type = FspR7Ipv6Address
_Ipv6ActRoutesNextHop_Object = MibTableColumn
ipv6ActRoutesNextHop = _Ipv6ActRoutesNextHop_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 3),
    _Ipv6ActRoutesNextHop_Type()
)
ipv6ActRoutesNextHop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesNextHop.setStatus("current")
_Ipv6ActRoutesShelfNo_Type = Unsigned32
_Ipv6ActRoutesShelfNo_Object = MibTableColumn
ipv6ActRoutesShelfNo = _Ipv6ActRoutesShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 4),
    _Ipv6ActRoutesShelfNo_Type()
)
ipv6ActRoutesShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesShelfNo.setStatus("current")
_Ipv6ActRoutesSlotNo_Type = Unsigned32
_Ipv6ActRoutesSlotNo_Object = MibTableColumn
ipv6ActRoutesSlotNo = _Ipv6ActRoutesSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 5),
    _Ipv6ActRoutesSlotNo_Type()
)
ipv6ActRoutesSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesSlotNo.setStatus("current")
_Ipv6ActRoutesPortNo_Type = Unsigned32
_Ipv6ActRoutesPortNo_Object = MibTableColumn
ipv6ActRoutesPortNo = _Ipv6ActRoutesPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 6),
    _Ipv6ActRoutesPortNo_Type()
)
ipv6ActRoutesPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesPortNo.setStatus("current")
_Ipv6ActRoutesExtNo_Type = Unsigned32
_Ipv6ActRoutesExtNo_Object = MibTableColumn
ipv6ActRoutesExtNo = _Ipv6ActRoutesExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 7),
    _Ipv6ActRoutesExtNo_Type()
)
ipv6ActRoutesExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesExtNo.setStatus("current")
_Ipv6ActRoutesClassName_Type = EntityClassName
_Ipv6ActRoutesClassName_Object = MibTableColumn
ipv6ActRoutesClassName = _Ipv6ActRoutesClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 8),
    _Ipv6ActRoutesClassName_Type()
)
ipv6ActRoutesClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6ActRoutesClassName.setStatus("current")
_Ipv6ActRoutesRowStatus_Type = RowStatus
_Ipv6ActRoutesRowStatus_Object = MibTableColumn
ipv6ActRoutesRowStatus = _Ipv6ActRoutesRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 9),
    _Ipv6ActRoutesRowStatus_Type()
)
ipv6ActRoutesRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6ActRoutesRowStatus.setStatus("current")
_Ipv6ActRoutesType_Type = FspR7Protocol
_Ipv6ActRoutesType_Object = MibTableColumn
ipv6ActRoutesType = _Ipv6ActRoutesType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 10),
    _Ipv6ActRoutesType_Type()
)
ipv6ActRoutesType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6ActRoutesType.setStatus("current")


class _Ipv6ActRoutesMetric_Type(Unsigned32):
    """Custom type ipv6ActRoutesMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Ipv6ActRoutesMetric_Type.__name__ = "Unsigned32"
_Ipv6ActRoutesMetric_Object = MibTableColumn
ipv6ActRoutesMetric = _Ipv6ActRoutesMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 11),
    _Ipv6ActRoutesMetric_Type()
)
ipv6ActRoutesMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6ActRoutesMetric.setStatus("current")
_Ipv6ActRoutesDestIp_Type = SnmpAdminString
_Ipv6ActRoutesDestIp_Object = MibTableColumn
ipv6ActRoutesDestIp = _Ipv6ActRoutesDestIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 12),
    _Ipv6ActRoutesDestIp_Type()
)
ipv6ActRoutesDestIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6ActRoutesDestIp.setStatus("current")


class _Ipv6ActRoutesPrefixLen_Type(Unsigned32):
    """Custom type ipv6ActRoutesPrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6ActRoutesPrefixLen_Type.__name__ = "Unsigned32"
_Ipv6ActRoutesPrefixLen_Object = MibTableColumn
ipv6ActRoutesPrefixLen = _Ipv6ActRoutesPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 13),
    _Ipv6ActRoutesPrefixLen_Type()
)
ipv6ActRoutesPrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6ActRoutesPrefixLen.setStatus("current")
_Ipv6ActRoutesNextHopIp_Type = SnmpAdminString
_Ipv6ActRoutesNextHopIp_Object = MibTableColumn
ipv6ActRoutesNextHopIp = _Ipv6ActRoutesNextHopIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 14),
    _Ipv6ActRoutesNextHopIp_Type()
)
ipv6ActRoutesNextHopIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6ActRoutesNextHopIp.setStatus("current")
_Ipv6ActRoutesPort_Type = SnmpAdminString
_Ipv6ActRoutesPort_Object = MibTableColumn
ipv6ActRoutesPort = _Ipv6ActRoutesPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 14, 1, 15),
    _Ipv6ActRoutesPort_Type()
)
ipv6ActRoutesPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6ActRoutesPort.setStatus("current")
_Ipv6InActRoutesTable_Object = MibTable
ipv6InActRoutesTable = _Ipv6InActRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16)
)
if mibBuilder.loadTexts:
    ipv6InActRoutesTable.setStatus("current")
_Ipv6InActRoutesEntry_Object = MibTableRow
ipv6InActRoutesEntry = _Ipv6InActRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1)
)
ipv6InActRoutesEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesDestination"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesPrefix"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesNextHop"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesShelfNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesSlotNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesPortNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesExtNo"),
    (0, "ADVA-FSPR7-MIB", "ipv6InActRoutesClassName"),
)
if mibBuilder.loadTexts:
    ipv6InActRoutesEntry.setStatus("current")
_Ipv6InActRoutesDestination_Type = FspR7Ipv6Address
_Ipv6InActRoutesDestination_Object = MibTableColumn
ipv6InActRoutesDestination = _Ipv6InActRoutesDestination_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 1),
    _Ipv6InActRoutesDestination_Type()
)
ipv6InActRoutesDestination.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesDestination.setStatus("current")


class _Ipv6InActRoutesPrefix_Type(Unsigned32):
    """Custom type ipv6InActRoutesPrefix based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6InActRoutesPrefix_Type.__name__ = "Unsigned32"
_Ipv6InActRoutesPrefix_Object = MibTableColumn
ipv6InActRoutesPrefix = _Ipv6InActRoutesPrefix_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 2),
    _Ipv6InActRoutesPrefix_Type()
)
ipv6InActRoutesPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesPrefix.setStatus("current")
_Ipv6InActRoutesNextHop_Type = FspR7Ipv6Address
_Ipv6InActRoutesNextHop_Object = MibTableColumn
ipv6InActRoutesNextHop = _Ipv6InActRoutesNextHop_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 3),
    _Ipv6InActRoutesNextHop_Type()
)
ipv6InActRoutesNextHop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesNextHop.setStatus("current")
_Ipv6InActRoutesShelfNo_Type = Unsigned32
_Ipv6InActRoutesShelfNo_Object = MibTableColumn
ipv6InActRoutesShelfNo = _Ipv6InActRoutesShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 4),
    _Ipv6InActRoutesShelfNo_Type()
)
ipv6InActRoutesShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesShelfNo.setStatus("current")
_Ipv6InActRoutesSlotNo_Type = Unsigned32
_Ipv6InActRoutesSlotNo_Object = MibTableColumn
ipv6InActRoutesSlotNo = _Ipv6InActRoutesSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 5),
    _Ipv6InActRoutesSlotNo_Type()
)
ipv6InActRoutesSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesSlotNo.setStatus("current")
_Ipv6InActRoutesPortNo_Type = Unsigned32
_Ipv6InActRoutesPortNo_Object = MibTableColumn
ipv6InActRoutesPortNo = _Ipv6InActRoutesPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 6),
    _Ipv6InActRoutesPortNo_Type()
)
ipv6InActRoutesPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesPortNo.setStatus("current")
_Ipv6InActRoutesExtNo_Type = Unsigned32
_Ipv6InActRoutesExtNo_Object = MibTableColumn
ipv6InActRoutesExtNo = _Ipv6InActRoutesExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 7),
    _Ipv6InActRoutesExtNo_Type()
)
ipv6InActRoutesExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesExtNo.setStatus("current")
_Ipv6InActRoutesClassName_Type = EntityClassName
_Ipv6InActRoutesClassName_Object = MibTableColumn
ipv6InActRoutesClassName = _Ipv6InActRoutesClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 8),
    _Ipv6InActRoutesClassName_Type()
)
ipv6InActRoutesClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6InActRoutesClassName.setStatus("current")
_Ipv6InActRoutesRowStatus_Type = RowStatus
_Ipv6InActRoutesRowStatus_Object = MibTableColumn
ipv6InActRoutesRowStatus = _Ipv6InActRoutesRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 9),
    _Ipv6InActRoutesRowStatus_Type()
)
ipv6InActRoutesRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6InActRoutesRowStatus.setStatus("current")
_Ipv6InActRoutesType_Type = FspR7Protocol
_Ipv6InActRoutesType_Object = MibTableColumn
ipv6InActRoutesType = _Ipv6InActRoutesType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 10),
    _Ipv6InActRoutesType_Type()
)
ipv6InActRoutesType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6InActRoutesType.setStatus("current")


class _Ipv6InActRoutesMetric_Type(Unsigned32):
    """Custom type ipv6InActRoutesMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Ipv6InActRoutesMetric_Type.__name__ = "Unsigned32"
_Ipv6InActRoutesMetric_Object = MibTableColumn
ipv6InActRoutesMetric = _Ipv6InActRoutesMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 11),
    _Ipv6InActRoutesMetric_Type()
)
ipv6InActRoutesMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipv6InActRoutesMetric.setStatus("current")
_Ipv6InActRoutesDestIp_Type = SnmpAdminString
_Ipv6InActRoutesDestIp_Object = MibTableColumn
ipv6InActRoutesDestIp = _Ipv6InActRoutesDestIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 12),
    _Ipv6InActRoutesDestIp_Type()
)
ipv6InActRoutesDestIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6InActRoutesDestIp.setStatus("current")


class _Ipv6InActRoutesPrefixLen_Type(Unsigned32):
    """Custom type ipv6InActRoutesPrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6InActRoutesPrefixLen_Type.__name__ = "Unsigned32"
_Ipv6InActRoutesPrefixLen_Object = MibTableColumn
ipv6InActRoutesPrefixLen = _Ipv6InActRoutesPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 13),
    _Ipv6InActRoutesPrefixLen_Type()
)
ipv6InActRoutesPrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6InActRoutesPrefixLen.setStatus("current")
_Ipv6InActRoutesNextHopIp_Type = SnmpAdminString
_Ipv6InActRoutesNextHopIp_Object = MibTableColumn
ipv6InActRoutesNextHopIp = _Ipv6InActRoutesNextHopIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 14),
    _Ipv6InActRoutesNextHopIp_Type()
)
ipv6InActRoutesNextHopIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6InActRoutesNextHopIp.setStatus("current")
_Ipv6InActRoutesPort_Type = SnmpAdminString
_Ipv6InActRoutesPort_Object = MibTableColumn
ipv6InActRoutesPort = _Ipv6InActRoutesPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 16, 1, 15),
    _Ipv6InActRoutesPort_Type()
)
ipv6InActRoutesPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6InActRoutesPort.setStatus("current")
_SyslogIPv4Table_Object = MibTable
syslogIPv4Table = _SyslogIPv4Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30)
)
if mibBuilder.loadTexts:
    syslogIPv4Table.setStatus("current")
_SyslogIPv4Entry_Object = MibTableRow
syslogIPv4Entry = _SyslogIPv4Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1)
)
syslogIPv4Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "syslogIPv4Ip"),
)
if mibBuilder.loadTexts:
    syslogIPv4Entry.setStatus("current")
_SyslogIPv4Ip_Type = IpAddress
_SyslogIPv4Ip_Object = MibTableColumn
syslogIPv4Ip = _SyslogIPv4Ip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 1),
    _SyslogIPv4Ip_Type()
)
syslogIPv4Ip.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    syslogIPv4Ip.setStatus("current")
_SyslogIPv4RowStatus_Type = RowStatus
_SyslogIPv4RowStatus_Object = MibTableColumn
syslogIPv4RowStatus = _SyslogIPv4RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 2),
    _SyslogIPv4RowStatus_Type()
)
syslogIPv4RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv4RowStatus.setStatus("current")
_SyslogIPv4Reporting_Type = FspR7EnableDisable
_SyslogIPv4Reporting_Object = MibTableColumn
syslogIPv4Reporting = _SyslogIPv4Reporting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 3),
    _SyslogIPv4Reporting_Type()
)
syslogIPv4Reporting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv4Reporting.setStatus("current")
_SyslogIPv4DbchgReports_Type = FspR7EnableDisable
_SyslogIPv4DbchgReports_Object = MibTableColumn
syslogIPv4DbchgReports = _SyslogIPv4DbchgReports_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 4),
    _SyslogIPv4DbchgReports_Type()
)
syslogIPv4DbchgReports.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv4DbchgReports.setStatus("current")
_SyslogIPv4SecurityReports_Type = FspR7EnableDisable
_SyslogIPv4SecurityReports_Object = MibTableColumn
syslogIPv4SecurityReports = _SyslogIPv4SecurityReports_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 5),
    _SyslogIPv4SecurityReports_Type()
)
syslogIPv4SecurityReports.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv4SecurityReports.setStatus("current")
_SyslogIPv4IpAddr_Type = IpAddress
_SyslogIPv4IpAddr_Object = MibTableColumn
syslogIPv4IpAddr = _SyslogIPv4IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 6),
    _SyslogIPv4IpAddr_Type()
)
syslogIPv4IpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogIPv4IpAddr.setStatus("current")
_SyslogIPv4SourceIp_Type = SourceIpAddress
_SyslogIPv4SourceIp_Object = MibTableColumn
syslogIPv4SourceIp = _SyslogIPv4SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 30, 1, 7),
    _SyslogIPv4SourceIp_Type()
)
syslogIPv4SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv4SourceIp.setStatus("current")
_SyslogIPv6Table_Object = MibTable
syslogIPv6Table = _SyslogIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32)
)
if mibBuilder.loadTexts:
    syslogIPv6Table.setStatus("current")
_SyslogIPv6Entry_Object = MibTableRow
syslogIPv6Entry = _SyslogIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1)
)
syslogIPv6Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "syslogIPv6Ip"),
)
if mibBuilder.loadTexts:
    syslogIPv6Entry.setStatus("current")
_SyslogIPv6Ip_Type = FspR7Ipv6Address
_SyslogIPv6Ip_Object = MibTableColumn
syslogIPv6Ip = _SyslogIPv6Ip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 1),
    _SyslogIPv6Ip_Type()
)
syslogIPv6Ip.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    syslogIPv6Ip.setStatus("current")
_SyslogIPv6RowStatus_Type = RowStatus
_SyslogIPv6RowStatus_Object = MibTableColumn
syslogIPv6RowStatus = _SyslogIPv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 2),
    _SyslogIPv6RowStatus_Type()
)
syslogIPv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv6RowStatus.setStatus("current")
_SyslogIPv6Reporting_Type = FspR7EnableDisable
_SyslogIPv6Reporting_Object = MibTableColumn
syslogIPv6Reporting = _SyslogIPv6Reporting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 3),
    _SyslogIPv6Reporting_Type()
)
syslogIPv6Reporting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv6Reporting.setStatus("current")
_SyslogIPv6DbchgReports_Type = FspR7EnableDisable
_SyslogIPv6DbchgReports_Object = MibTableColumn
syslogIPv6DbchgReports = _SyslogIPv6DbchgReports_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 4),
    _SyslogIPv6DbchgReports_Type()
)
syslogIPv6DbchgReports.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv6DbchgReports.setStatus("current")
_SyslogIPv6SecurityReports_Type = FspR7EnableDisable
_SyslogIPv6SecurityReports_Object = MibTableColumn
syslogIPv6SecurityReports = _SyslogIPv6SecurityReports_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 5),
    _SyslogIPv6SecurityReports_Type()
)
syslogIPv6SecurityReports.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv6SecurityReports.setStatus("current")
_SyslogIPv6IpAddr_Type = SnmpAdminString
_SyslogIPv6IpAddr_Object = MibTableColumn
syslogIPv6IpAddr = _SyslogIPv6IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 6),
    _SyslogIPv6IpAddr_Type()
)
syslogIPv6IpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogIPv6IpAddr.setStatus("current")
_SyslogIPv6SourceIp_Type = SourceIpAddress
_SyslogIPv6SourceIp_Object = MibTableColumn
syslogIPv6SourceIp = _SyslogIPv6SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 9, 32, 1, 7),
    _SyslogIPv6SourceIp_Type()
)
syslogIPv6SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogIPv6SourceIp.setStatus("current")
_DateAndTime_ObjectIdentity = ObjectIdentity
dateAndTime = _DateAndTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10)
)
_NtpIPv4Table_Object = MibTable
ntpIPv4Table = _NtpIPv4Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20)
)
if mibBuilder.loadTexts:
    ntpIPv4Table.setStatus("current")
_NtpIPv4Entry_Object = MibTableRow
ntpIPv4Entry = _NtpIPv4Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1)
)
ntpIPv4Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv4Ip"),
)
if mibBuilder.loadTexts:
    ntpIPv4Entry.setStatus("current")
_NtpIPv4Ip_Type = IpAddress
_NtpIPv4Ip_Object = MibTableColumn
ntpIPv4Ip = _NtpIPv4Ip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 1),
    _NtpIPv4Ip_Type()
)
ntpIPv4Ip.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    ntpIPv4Ip.setStatus("current")
_NtpIPv4RowStatus_Type = RowStatus
_NtpIPv4RowStatus_Object = MibTableColumn
ntpIPv4RowStatus = _NtpIPv4RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 2),
    _NtpIPv4RowStatus_Type()
)
ntpIPv4RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv4RowStatus.setStatus("current")
_NtpIPv4SourceIp_Type = SourceIpAddress
_NtpIPv4SourceIp_Object = MibTableColumn
ntpIPv4SourceIp = _NtpIPv4SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 3),
    _NtpIPv4SourceIp_Type()
)
ntpIPv4SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv4SourceIp.setStatus("current")
_NtpIPv4Test_Type = FspR7RlsAction
_NtpIPv4Test_Object = MibTableColumn
ntpIPv4Test = _NtpIPv4Test_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 4),
    _NtpIPv4Test_Type()
)
ntpIPv4Test.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpIPv4Test.setStatus("current")
_NtpIPv4TestStatus_Type = FspR7NtpTestStatus
_NtpIPv4TestStatus_Object = MibTableColumn
ntpIPv4TestStatus = _NtpIPv4TestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 5),
    _NtpIPv4TestStatus_Type()
)
ntpIPv4TestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv4TestStatus.setStatus("current")
_NtpIPv4SyncStatus_Type = FspR7NtpSyncStatus
_NtpIPv4SyncStatus_Object = MibTableColumn
ntpIPv4SyncStatus = _NtpIPv4SyncStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 6),
    _NtpIPv4SyncStatus_Type()
)
ntpIPv4SyncStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv4SyncStatus.setStatus("current")
_NtpIPv4Admin_Type = FspR7AdminState
_NtpIPv4Admin_Object = MibTableColumn
ntpIPv4Admin = _NtpIPv4Admin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 7),
    _NtpIPv4Admin_Type()
)
ntpIPv4Admin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv4Admin.setStatus("current")
_NtpIPv4OperState_Type = FspR7OperState
_NtpIPv4OperState_Object = MibTableColumn
ntpIPv4OperState = _NtpIPv4OperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 8),
    _NtpIPv4OperState_Type()
)
ntpIPv4OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv4OperState.setStatus("current")
_NtpIPv4IpAddr_Type = IpAddress
_NtpIPv4IpAddr_Object = MibTableColumn
ntpIPv4IpAddr = _NtpIPv4IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 20, 1, 9),
    _NtpIPv4IpAddr_Type()
)
ntpIPv4IpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv4IpAddr.setStatus("current")
_NtpIPv6Table_Object = MibTable
ntpIPv6Table = _NtpIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22)
)
if mibBuilder.loadTexts:
    ntpIPv6Table.setStatus("current")
_NtpIPv6Entry_Object = MibTableRow
ntpIPv6Entry = _NtpIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1)
)
ntpIPv6Entry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "ntpIPv6Ip"),
)
if mibBuilder.loadTexts:
    ntpIPv6Entry.setStatus("current")
_NtpIPv6Ip_Type = FspR7Ipv6Address
_NtpIPv6Ip_Object = MibTableColumn
ntpIPv6Ip = _NtpIPv6Ip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 1),
    _NtpIPv6Ip_Type()
)
ntpIPv6Ip.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    ntpIPv6Ip.setStatus("current")
_NtpIPv6RowStatus_Type = RowStatus
_NtpIPv6RowStatus_Object = MibTableColumn
ntpIPv6RowStatus = _NtpIPv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 2),
    _NtpIPv6RowStatus_Type()
)
ntpIPv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv6RowStatus.setStatus("current")
_NtpIPv6SourceIp_Type = SourceIpAddress
_NtpIPv6SourceIp_Object = MibTableColumn
ntpIPv6SourceIp = _NtpIPv6SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 3),
    _NtpIPv6SourceIp_Type()
)
ntpIPv6SourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv6SourceIp.setStatus("current")
_NtpIPv6Test_Type = FspR7RlsAction
_NtpIPv6Test_Object = MibTableColumn
ntpIPv6Test = _NtpIPv6Test_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 4),
    _NtpIPv6Test_Type()
)
ntpIPv6Test.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpIPv6Test.setStatus("current")
_NtpIPv6TestStatus_Type = FspR7NtpTestStatus
_NtpIPv6TestStatus_Object = MibTableColumn
ntpIPv6TestStatus = _NtpIPv6TestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 5),
    _NtpIPv6TestStatus_Type()
)
ntpIPv6TestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv6TestStatus.setStatus("current")
_NtpIPv6SyncStatus_Type = FspR7NtpSyncStatus
_NtpIPv6SyncStatus_Object = MibTableColumn
ntpIPv6SyncStatus = _NtpIPv6SyncStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 6),
    _NtpIPv6SyncStatus_Type()
)
ntpIPv6SyncStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv6SyncStatus.setStatus("current")
_NtpIPv6Admin_Type = FspR7AdminState
_NtpIPv6Admin_Object = MibTableColumn
ntpIPv6Admin = _NtpIPv6Admin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 7),
    _NtpIPv6Admin_Type()
)
ntpIPv6Admin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpIPv6Admin.setStatus("current")
_NtpIPv6OperState_Type = FspR7OperState
_NtpIPv6OperState_Object = MibTableColumn
ntpIPv6OperState = _NtpIPv6OperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 8),
    _NtpIPv6OperState_Type()
)
ntpIPv6OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv6OperState.setStatus("current")
_NtpIPv6IpAddr_Type = SnmpAdminString
_NtpIPv6IpAddr_Object = MibTableColumn
ntpIPv6IpAddr = _NtpIPv6IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10, 22, 1, 9),
    _NtpIPv6IpAddr_Type()
)
ntpIPv6IpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIPv6IpAddr.setStatus("current")
_SnmpSettings_ObjectIdentity = ObjectIdentity
snmpSettings = _SnmpSettings_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11)
)
_UnusedTrapSinkId_Type = Unsigned32
_UnusedTrapSinkId_Object = MibScalar
unusedTrapSinkId = _UnusedTrapSinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 29),
    _UnusedTrapSinkId_Type()
)
unusedTrapSinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedTrapSinkId.setStatus("current")
_TrapSinkTable_Object = MibTable
trapSinkTable = _TrapSinkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30)
)
if mibBuilder.loadTexts:
    trapSinkTable.setStatus("current")
_TrapSinkEntry_Object = MibTableRow
trapSinkEntry = _TrapSinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1)
)
trapSinkEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "trapSinkId"),
)
if mibBuilder.loadTexts:
    trapSinkEntry.setStatus("current")
_TrapSinkId_Type = Unsigned32
_TrapSinkId_Object = MibTableColumn
trapSinkId = _TrapSinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 1),
    _TrapSinkId_Type()
)
trapSinkId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    trapSinkId.setStatus("current")
_TrapSinkRowStatus_Type = RowStatus
_TrapSinkRowStatus_Object = MibTableColumn
trapSinkRowStatus = _TrapSinkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 2),
    _TrapSinkRowStatus_Type()
)
trapSinkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkRowStatus.setStatus("current")
_TrapSinkVersion_Type = FspR7SnmpVersion
_TrapSinkVersion_Object = MibTableColumn
trapSinkVersion = _TrapSinkVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 3),
    _TrapSinkVersion_Type()
)
trapSinkVersion.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkVersion.setStatus("current")
_TrapSinkIpMode_Type = FspR7IpMode
_TrapSinkIpMode_Object = MibTableColumn
trapSinkIpMode = _TrapSinkIpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 4),
    _TrapSinkIpMode_Type()
)
trapSinkIpMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkIpMode.setStatus("current")
_TrapSinkIPv4_Type = IpAddress
_TrapSinkIPv4_Object = MibTableColumn
trapSinkIPv4 = _TrapSinkIPv4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 5),
    _TrapSinkIPv4_Type()
)
trapSinkIPv4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkIPv4.setStatus("current")
_TrapSinkIPv6_Type = SnmpAdminString
_TrapSinkIPv6_Object = MibTableColumn
trapSinkIPv6 = _TrapSinkIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 6),
    _TrapSinkIPv6_Type()
)
trapSinkIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkIPv6.setStatus("current")


class _TrapSinkPort_Type(Unsigned32):
    """Custom type trapSinkPort based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TrapSinkPort_Type.__name__ = "Unsigned32"
_TrapSinkPort_Object = MibTableColumn
trapSinkPort = _TrapSinkPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 7),
    _TrapSinkPort_Type()
)
trapSinkPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkPort.setStatus("current")
_TrapSinkCommunity_Type = SnmpAdminString
_TrapSinkCommunity_Object = MibTableColumn
trapSinkCommunity = _TrapSinkCommunity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 8),
    _TrapSinkCommunity_Type()
)
trapSinkCommunity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkCommunity.setStatus("current")
_TrapSinkUserName_Type = SnmpAdminString
_TrapSinkUserName_Object = MibTableColumn
trapSinkUserName = _TrapSinkUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 9),
    _TrapSinkUserName_Type()
)
trapSinkUserName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkUserName.setStatus("current")
_TrapSinkDuration_Type = FspR7TrapsinkLifetime
_TrapSinkDuration_Object = MibTableColumn
trapSinkDuration = _TrapSinkDuration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 10),
    _TrapSinkDuration_Type()
)
trapSinkDuration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkDuration.setStatus("current")
_TrapSinkIpSubnet_Type = SourceIpAddress
_TrapSinkIpSubnet_Object = MibTableColumn
trapSinkIpSubnet = _TrapSinkIpSubnet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 30, 1, 11),
    _TrapSinkIpSubnet_Type()
)
trapSinkIpSubnet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trapSinkIpSubnet.setStatus("current")
_UnusedCommunityId_Type = Unsigned32
_UnusedCommunityId_Object = MibScalar
unusedCommunityId = _UnusedCommunityId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 39),
    _UnusedCommunityId_Type()
)
unusedCommunityId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedCommunityId.setStatus("current")
_CommunityTable_Object = MibTable
communityTable = _CommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40)
)
if mibBuilder.loadTexts:
    communityTable.setStatus("current")
_CommunityEntry_Object = MibTableRow
communityEntry = _CommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1)
)
communityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "communityId"),
)
if mibBuilder.loadTexts:
    communityEntry.setStatus("current")
_CommunityId_Type = Unsigned32
_CommunityId_Object = MibTableColumn
communityId = _CommunityId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 1),
    _CommunityId_Type()
)
communityId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    communityId.setStatus("current")
_CommunityRowStatus_Type = RowStatus
_CommunityRowStatus_Object = MibTableColumn
communityRowStatus = _CommunityRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 2),
    _CommunityRowStatus_Type()
)
communityRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityRowStatus.setStatus("current")
_CommunityIpMode_Type = FspR7IpMode
_CommunityIpMode_Object = MibTableColumn
communityIpMode = _CommunityIpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 3),
    _CommunityIpMode_Type()
)
communityIpMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityIpMode.setStatus("current")
_CommunityIPv4_Type = IpAddress
_CommunityIPv4_Object = MibTableColumn
communityIPv4 = _CommunityIPv4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 4),
    _CommunityIPv4_Type()
)
communityIPv4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityIPv4.setStatus("current")
_CommunityIpMask_Type = IpAddress
_CommunityIpMask_Object = MibTableColumn
communityIpMask = _CommunityIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 5),
    _CommunityIpMask_Type()
)
communityIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityIpMask.setStatus("current")
_CommunityIPv6_Type = SnmpAdminString
_CommunityIPv6_Object = MibTableColumn
communityIPv6 = _CommunityIPv6_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 6),
    _CommunityIPv6_Type()
)
communityIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityIPv6.setStatus("current")


class _CommunityIPv6PrefixLen_Type(Unsigned32):
    """Custom type communityIPv6PrefixLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_CommunityIPv6PrefixLen_Type.__name__ = "Unsigned32"
_CommunityIPv6PrefixLen_Object = MibTableColumn
communityIPv6PrefixLen = _CommunityIPv6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 7),
    _CommunityIPv6PrefixLen_Type()
)
communityIPv6PrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityIPv6PrefixLen.setStatus("current")
_CommunityName_Type = SnmpAdminString
_CommunityName_Object = MibTableColumn
communityName = _CommunityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 8),
    _CommunityName_Type()
)
communityName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityName.setStatus("current")
_CommunityAccess_Type = FspR7Access
_CommunityAccess_Object = MibTableColumn
communityAccess = _CommunityAccess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 11, 40, 1, 9),
    _CommunityAccess_Type()
)
communityAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    communityAccess.setStatus("current")
_Tools_ObjectIdentity = ObjectIdentity
tools = _Tools_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12)
)
_NeCommand_Type = FspR7Command
_NeCommand_Object = MibScalar
neCommand = _NeCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 1),
    _NeCommand_Type()
)
neCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommand.setStatus("current")
_NeCommandState_Type = FspR7CommandState
_NeCommandState_Object = MibScalar
neCommandState = _NeCommandState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 2),
    _NeCommandState_Type()
)
neCommandState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neCommandState.setStatus("current")
_NeCommandBusy_Type = FspR7CommandBusy
_NeCommandBusy_Object = MibScalar
neCommandBusy = _NeCommandBusy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 3),
    _NeCommandBusy_Type()
)
neCommandBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neCommandBusy.setStatus("current")
_NeCommandIp_Type = SnmpAdminString
_NeCommandIp_Object = MibScalar
neCommandIp = _NeCommandIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 6),
    _NeCommandIp_Type()
)
neCommandIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandIp.setStatus("current")
_NeCommandLogin_Type = SnmpAdminString
_NeCommandLogin_Object = MibScalar
neCommandLogin = _NeCommandLogin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 7),
    _NeCommandLogin_Type()
)
neCommandLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandLogin.setStatus("current")
_NeCommandPass_Type = SnmpAdminString
_NeCommandPass_Object = MibScalar
neCommandPass = _NeCommandPass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 8),
    _NeCommandPass_Type()
)
neCommandPass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandPass.setStatus("current")
_NeCommandPath_Type = SnmpAdminString
_NeCommandPath_Object = MibScalar
neCommandPath = _NeCommandPath_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 9),
    _NeCommandPath_Type()
)
neCommandPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandPath.setStatus("current")
_NeCommandFile_Type = SnmpAdminString
_NeCommandFile_Object = MibScalar
neCommandFile = _NeCommandFile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 10),
    _NeCommandFile_Type()
)
neCommandFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandFile.setStatus("current")
_NeCommandProtocol_Type = FspR7TransferProtocol
_NeCommandProtocol_Object = MibScalar
neCommandProtocol = _NeCommandProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 11),
    _NeCommandProtocol_Type()
)
neCommandProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandProtocol.setStatus("current")
_NeCommandSourceIp_Type = SourceIpAddress
_NeCommandSourceIp_Object = MibScalar
neCommandSourceIp = _NeCommandSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 12),
    _NeCommandSourceIp_Type()
)
neCommandSourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCommandSourceIp.setStatus("current")
_NeSdpType_Type = FspR7SdpType
_NeSdpType_Object = MibScalar
neSdpType = _NeSdpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 13),
    _NeSdpType_Type()
)
neSdpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSdpType.setStatus("current")
_NeDbOnActivate_Type = RestoreActivation
_NeDbOnActivate_Object = MibScalar
neDbOnActivate = _NeDbOnActivate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 14),
    _NeDbOnActivate_Type()
)
neDbOnActivate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neDbOnActivate.setStatus("current")
_NeAutoDhcp_Type = FspR7EnableDisable
_NeAutoDhcp_Object = MibScalar
neAutoDhcp = _NeAutoDhcp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 15),
    _NeAutoDhcp_Type()
)
neAutoDhcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAutoDhcp.setStatus("current")
_ErrorMessage_Type = SnmpAdminString
_ErrorMessage_Object = MibScalar
errorMessage = _ErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 16),
    _ErrorMessage_Type()
)
errorMessage.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    errorMessage.setStatus("current")
_Files_ObjectIdentity = ObjectIdentity
files = _Files_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90)
)
_FileDataTable_Object = MibTable
fileDataTable = _FileDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1)
)
if mibBuilder.loadTexts:
    fileDataTable.setStatus("current")
_FileDataEntry_Object = MibTableRow
fileDataEntry = _FileDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1)
)
fileDataEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "fileDataArea"),
    (0, "ADVA-FSPR7-MIB", "fileDataId"),
)
if mibBuilder.loadTexts:
    fileDataEntry.setStatus("current")
_FileDataId_Type = Unsigned32
_FileDataId_Object = MibTableColumn
fileDataId = _FileDataId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 1),
    _FileDataId_Type()
)
fileDataId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    fileDataId.setStatus("current")
_FileDataArea_Type = FileArea
_FileDataArea_Object = MibTableColumn
fileDataArea = _FileDataArea_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 2),
    _FileDataArea_Type()
)
fileDataArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataArea.setStatus("current")
_FileDataType_Type = FileType
_FileDataType_Object = MibTableColumn
fileDataType = _FileDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 3),
    _FileDataType_Type()
)
fileDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataType.setStatus("current")
_FileDataSize_Type = Unsigned32
_FileDataSize_Object = MibTableColumn
fileDataSize = _FileDataSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 4),
    _FileDataSize_Type()
)
fileDataSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataSize.setStatus("current")
if mibBuilder.loadTexts:
    fileDataSize.setUnits("Byte")
_FileDataCreationTime_Type = DateAndTime
_FileDataCreationTime_Object = MibTableColumn
fileDataCreationTime = _FileDataCreationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 5),
    _FileDataCreationTime_Type()
)
fileDataCreationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataCreationTime.setStatus("current")
_FileDataVersion_Type = SnmpAdminString
_FileDataVersion_Object = MibTableColumn
fileDataVersion = _FileDataVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 6),
    _FileDataVersion_Type()
)
fileDataVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataVersion.setStatus("current")
_FileDataGrade_Type = Grade
_FileDataGrade_Object = MibTableColumn
fileDataGrade = _FileDataGrade_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 7),
    _FileDataGrade_Type()
)
fileDataGrade.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataGrade.setStatus("current")
_FileDataComment_Type = SnmpAdminString
_FileDataComment_Object = MibTableColumn
fileDataComment = _FileDataComment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 8),
    _FileDataComment_Type()
)
fileDataComment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileDataComment.setStatus("current")
_FileDataFileName_Type = SnmpAdminString
_FileDataFileName_Object = MibTableColumn
fileDataFileName = _FileDataFileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 9),
    _FileDataFileName_Type()
)
fileDataFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataFileName.setStatus("current")
_FileDataPgmType_Type = PgmType
_FileDataPgmType_Object = MibTableColumn
fileDataPgmType = _FileDataPgmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 10),
    _FileDataPgmType_Type()
)
fileDataPgmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataPgmType.setStatus("current")
_FileDataMpName_Type = SnmpAdminString
_FileDataMpName_Object = MibTableColumn
fileDataMpName = _FileDataMpName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 11),
    _FileDataMpName_Type()
)
fileDataMpName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileDataMpName.setStatus("current")
_FileDataRevision_Type = Integer32
_FileDataRevision_Object = MibTableColumn
fileDataRevision = _FileDataRevision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 12),
    _FileDataRevision_Type()
)
fileDataRevision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileDataRevision.setStatus("current")
_FileDataMpTag_Type = FspR7MpTag
_FileDataMpTag_Object = MibTableColumn
fileDataMpTag = _FileDataMpTag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 13),
    _FileDataMpTag_Type()
)
fileDataMpTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataMpTag.setStatus("current")
_FileDataMpState_Type = FspR7MpState
_FileDataMpState_Object = MibTableColumn
fileDataMpState = _FileDataMpState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 12, 90, 1, 1, 14),
    _FileDataMpState_Type()
)
fileDataMpState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileDataMpState.setStatus("current")
_HdShelves_ObjectIdentity = ObjectIdentity
hdShelves = _HdShelves_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13)
)
_ContainerHdSystemTable_Object = MibTable
containerHdSystemTable = _ContainerHdSystemTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20)
)
if mibBuilder.loadTexts:
    containerHdSystemTable.setStatus("current")
_ContainerHdSystemEntry_Object = MibTableRow
containerHdSystemEntry = _ContainerHdSystemEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20, 1)
)
containerHdSystemEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerHdSystemId"),
)
if mibBuilder.loadTexts:
    containerHdSystemEntry.setStatus("current")
_ContainerHdSystemId_Type = Unsigned32
_ContainerHdSystemId_Object = MibTableColumn
containerHdSystemId = _ContainerHdSystemId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20, 1, 1),
    _ContainerHdSystemId_Type()
)
containerHdSystemId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    containerHdSystemId.setStatus("current")
_ContainerHdSystemAidString_Type = SnmpAdminString
_ContainerHdSystemAidString_Object = MibTableColumn
containerHdSystemAidString = _ContainerHdSystemAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20, 1, 2),
    _ContainerHdSystemAidString_Type()
)
containerHdSystemAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerHdSystemAidString.setStatus("current")
_ContainerHdSystemClass_Type = EntityClass
_ContainerHdSystemClass_Object = MibTableColumn
containerHdSystemClass = _ContainerHdSystemClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20, 1, 3),
    _ContainerHdSystemClass_Type()
)
containerHdSystemClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerHdSystemClass.setStatus("current")
_ContainerHdSystemParentId_Type = RowPointer
_ContainerHdSystemParentId_Object = MibTableColumn
containerHdSystemParentId = _ContainerHdSystemParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 20, 1, 4),
    _ContainerHdSystemParentId_Type()
)
containerHdSystemParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerHdSystemParentId.setStatus("current")
_HdSystemTable_Object = MibTable
hdSystemTable = _HdSystemTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21)
)
if mibBuilder.loadTexts:
    hdSystemTable.setStatus("current")
_HdSystemEntry_Object = MibTableRow
hdSystemEntry = _HdSystemEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1)
)
hdSystemEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "hdSystemId"),
)
if mibBuilder.loadTexts:
    hdSystemEntry.setStatus("current")
_HdSystemId_Type = Unsigned32
_HdSystemId_Object = MibTableColumn
hdSystemId = _HdSystemId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 1),
    _HdSystemId_Type()
)
hdSystemId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    hdSystemId.setStatus("current")
_HdSystemAidString_Type = SnmpAdminString
_HdSystemAidString_Object = MibTableColumn
hdSystemAidString = _HdSystemAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 2),
    _HdSystemAidString_Type()
)
hdSystemAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdSystemAidString.setStatus("current")
_HdSystemRowStatus_Type = RowStatus
_HdSystemRowStatus_Object = MibTableColumn
hdSystemRowStatus = _HdSystemRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 3),
    _HdSystemRowStatus_Type()
)
hdSystemRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hdSystemRowStatus.setStatus("current")
_HdSystemDcnAid_Type = SnmpAdminString
_HdSystemDcnAid_Object = MibTableColumn
hdSystemDcnAid = _HdSystemDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 4),
    _HdSystemDcnAid_Type()
)
hdSystemDcnAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hdSystemDcnAid.setStatus("current")
_HdSystemAdopt_Type = FspR7EnableDisable
_HdSystemAdopt_Object = MibTableColumn
hdSystemAdopt = _HdSystemAdopt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 5),
    _HdSystemAdopt_Type()
)
hdSystemAdopt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hdSystemAdopt.setStatus("deprecated")
_HdSystemAdmin_Type = FspR7AdminState
_HdSystemAdmin_Object = MibTableColumn
hdSystemAdmin = _HdSystemAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 6),
    _HdSystemAdmin_Type()
)
hdSystemAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hdSystemAdmin.setStatus("current")
_HdSystemOperState_Type = FspR7OperState
_HdSystemOperState_Object = MibTableColumn
hdSystemOperState = _HdSystemOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 7),
    _HdSystemOperState_Type()
)
hdSystemOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdSystemOperState.setStatus("current")
_HdSystemSerialNumbers_Type = FspR7SnmpLongString
_HdSystemSerialNumbers_Object = MibTableColumn
hdSystemSerialNumbers = _HdSystemSerialNumbers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 8),
    _HdSystemSerialNumbers_Type()
)
hdSystemSerialNumbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdSystemSerialNumbers.setStatus("current")
_HdSystemClass_Type = EntityClass
_HdSystemClass_Object = MibTableColumn
hdSystemClass = _HdSystemClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 9),
    _HdSystemClass_Type()
)
hdSystemClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdSystemClass.setStatus("current")
_HdSystemParentId_Type = RowPointer
_HdSystemParentId_Object = MibTableColumn
hdSystemParentId = _HdSystemParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 10),
    _HdSystemParentId_Type()
)
hdSystemParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdSystemParentId.setStatus("current")
_HdSystemNendLogicalIpAddr_Type = IpAddress
_HdSystemNendLogicalIpAddr_Object = MibTableColumn
hdSystemNendLogicalIpAddr = _HdSystemNendLogicalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 21, 1, 11),
    _HdSystemNendLogicalIpAddr_Type()
)
hdSystemNendLogicalIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hdSystemNendLogicalIpAddr.setStatus("current")
_ContainerShelfmapTable_Object = MibTable
containerShelfmapTable = _ContainerShelfmapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40)
)
if mibBuilder.loadTexts:
    containerShelfmapTable.setStatus("current")
_ContainerShelfmapEntry_Object = MibTableRow
containerShelfmapEntry = _ContainerShelfmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1)
)
containerShelfmapEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "containerShelfmapId"),
)
if mibBuilder.loadTexts:
    containerShelfmapEntry.setStatus("current")
_ContainerShelfmapId_Type = Unsigned32
_ContainerShelfmapId_Object = MibTableColumn
containerShelfmapId = _ContainerShelfmapId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 1),
    _ContainerShelfmapId_Type()
)
containerShelfmapId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    containerShelfmapId.setStatus("current")
_ContainerShelfmapAidString_Type = SnmpAdminString
_ContainerShelfmapAidString_Object = MibTableColumn
containerShelfmapAidString = _ContainerShelfmapAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 2),
    _ContainerShelfmapAidString_Type()
)
containerShelfmapAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapAidString.setStatus("current")
_ContainerShelfmapSerialNumInv_Type = SnmpAdminString
_ContainerShelfmapSerialNumInv_Object = MibTableColumn
containerShelfmapSerialNumInv = _ContainerShelfmapSerialNumInv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 3),
    _ContainerShelfmapSerialNumInv_Type()
)
containerShelfmapSerialNumInv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapSerialNumInv.setStatus("current")
_ContainerShelfmapTypeInv_Type = FspR7EquipmentType
_ContainerShelfmapTypeInv_Object = MibTableColumn
containerShelfmapTypeInv = _ContainerShelfmapTypeInv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 4),
    _ContainerShelfmapTypeInv_Type()
)
containerShelfmapTypeInv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapTypeInv.setStatus("current")
_ContainerShelfmapEquipmentState_Type = EquipmentState
_ContainerShelfmapEquipmentState_Object = MibTableColumn
containerShelfmapEquipmentState = _ContainerShelfmapEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 5),
    _ContainerShelfmapEquipmentState_Type()
)
containerShelfmapEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapEquipmentState.setStatus("current")
_ContainerShelfmapClass_Type = EntityClass
_ContainerShelfmapClass_Object = MibTableColumn
containerShelfmapClass = _ContainerShelfmapClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 6),
    _ContainerShelfmapClass_Type()
)
containerShelfmapClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapClass.setStatus("current")
_ContainerShelfmapParentId_Type = RowPointer
_ContainerShelfmapParentId_Object = MibTableColumn
containerShelfmapParentId = _ContainerShelfmapParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 40, 1, 7),
    _ContainerShelfmapParentId_Type()
)
containerShelfmapParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    containerShelfmapParentId.setStatus("current")
_ShelfmapTable_Object = MibTable
shelfmapTable = _ShelfmapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41)
)
if mibBuilder.loadTexts:
    shelfmapTable.setStatus("current")
_ShelfmapEntry_Object = MibTableRow
shelfmapEntry = _ShelfmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1)
)
shelfmapEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "shelfmapId"),
)
if mibBuilder.loadTexts:
    shelfmapEntry.setStatus("current")
_ShelfmapId_Type = Unsigned32
_ShelfmapId_Object = MibTableColumn
shelfmapId = _ShelfmapId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 1),
    _ShelfmapId_Type()
)
shelfmapId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    shelfmapId.setStatus("current")
_ShelfmapAidString_Type = SnmpAdminString
_ShelfmapAidString_Object = MibTableColumn
shelfmapAidString = _ShelfmapAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 2),
    _ShelfmapAidString_Type()
)
shelfmapAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapAidString.setStatus("current")
_ShelfmapRowStatus_Type = RowStatus
_ShelfmapRowStatus_Object = MibTableColumn
shelfmapRowStatus = _ShelfmapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 3),
    _ShelfmapRowStatus_Type()
)
shelfmapRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfmapRowStatus.setStatus("current")
_ShelfmapIpAddr_Type = IpAddress
_ShelfmapIpAddr_Object = MibTableColumn
shelfmapIpAddr = _ShelfmapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 4),
    _ShelfmapIpAddr_Type()
)
shelfmapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapIpAddr.setStatus("current")
_ShelfmapEqptIdentifier_Type = SnmpAdminString
_ShelfmapEqptIdentifier_Object = MibTableColumn
shelfmapEqptIdentifier = _ShelfmapEqptIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 5),
    _ShelfmapEqptIdentifier_Type()
)
shelfmapEqptIdentifier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfmapEqptIdentifier.setStatus("current")
_ShelfmapSerialNum_Type = SnmpAdminString
_ShelfmapSerialNum_Object = MibTableColumn
shelfmapSerialNum = _ShelfmapSerialNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 6),
    _ShelfmapSerialNum_Type()
)
shelfmapSerialNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfmapSerialNum.setStatus("current")
_ShelfmapSerialNumInv_Type = SnmpAdminString
_ShelfmapSerialNumInv_Object = MibTableColumn
shelfmapSerialNumInv = _ShelfmapSerialNumInv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 7),
    _ShelfmapSerialNumInv_Type()
)
shelfmapSerialNumInv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapSerialNumInv.setStatus("current")
_ShelfmapTypeInv_Type = FspR7EquipmentType
_ShelfmapTypeInv_Object = MibTableColumn
shelfmapTypeInv = _ShelfmapTypeInv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 8),
    _ShelfmapTypeInv_Type()
)
shelfmapTypeInv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapTypeInv.setStatus("current")
_ShelfmapEquipmentState_Type = EquipmentState
_ShelfmapEquipmentState_Object = MibTableColumn
shelfmapEquipmentState = _ShelfmapEquipmentState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 9),
    _ShelfmapEquipmentState_Type()
)
shelfmapEquipmentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapEquipmentState.setStatus("current")
_ShelfmapAdmin_Type = FspR7AdminState
_ShelfmapAdmin_Object = MibTableColumn
shelfmapAdmin = _ShelfmapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 10),
    _ShelfmapAdmin_Type()
)
shelfmapAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    shelfmapAdmin.setStatus("current")
_ShelfmapOperState_Type = FspR7OperState
_ShelfmapOperState_Object = MibTableColumn
shelfmapOperState = _ShelfmapOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 11),
    _ShelfmapOperState_Type()
)
shelfmapOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapOperState.setStatus("current")
_ShelfmapClass_Type = EntityClass
_ShelfmapClass_Object = MibTableColumn
shelfmapClass = _ShelfmapClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 12),
    _ShelfmapClass_Type()
)
shelfmapClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapClass.setStatus("current")
_ShelfmapParentId_Type = RowPointer
_ShelfmapParentId_Object = MibTableColumn
shelfmapParentId = _ShelfmapParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 41, 1, 13),
    _ShelfmapParentId_Type()
)
shelfmapParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfmapParentId.setStatus("current")
_AlarmHdSystemTable_Object = MibTable
alarmHdSystemTable = _AlarmHdSystemTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100)
)
if mibBuilder.loadTexts:
    alarmHdSystemTable.setStatus("current")
_AlarmHdSystemEntry_Object = MibTableRow
alarmHdSystemEntry = _AlarmHdSystemEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1)
)
alarmHdSystemEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "alarmHdSystemId"),
    (0, "ADVA-FSPR7-MIB", "alarmHdSystemType"),
)
if mibBuilder.loadTexts:
    alarmHdSystemEntry.setStatus("current")
_AlarmHdSystemId_Type = Unsigned32
_AlarmHdSystemId_Object = MibTableColumn
alarmHdSystemId = _AlarmHdSystemId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1, 1),
    _AlarmHdSystemId_Type()
)
alarmHdSystemId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    alarmHdSystemId.setStatus("current")
_AlarmHdSystemType_Type = FspR7AlarmListType
_AlarmHdSystemType_Object = MibTableColumn
alarmHdSystemType = _AlarmHdSystemType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1, 2),
    _AlarmHdSystemType_Type()
)
alarmHdSystemType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmHdSystemType.setStatus("current")
_AlarmHdSystemSeverity_Type = TrapAlarmSeverity
_AlarmHdSystemSeverity_Object = MibTableColumn
alarmHdSystemSeverity = _AlarmHdSystemSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1, 3),
    _AlarmHdSystemSeverity_Type()
)
alarmHdSystemSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHdSystemSeverity.setStatus("current")
_AlarmHdSystemAffect_Type = ServiceImpairment
_AlarmHdSystemAffect_Object = MibTableColumn
alarmHdSystemAffect = _AlarmHdSystemAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1, 4),
    _AlarmHdSystemAffect_Type()
)
alarmHdSystemAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHdSystemAffect.setStatus("current")
_AlarmHdSystemTimeStamp_Type = DateAndTime
_AlarmHdSystemTimeStamp_Object = MibTableColumn
alarmHdSystemTimeStamp = _AlarmHdSystemTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 100, 1, 5),
    _AlarmHdSystemTimeStamp_Type()
)
alarmHdSystemTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHdSystemTimeStamp.setStatus("current")
_AlarmSeverityHdSystemTable_Object = MibTable
alarmSeverityHdSystemTable = _AlarmSeverityHdSystemTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 101)
)
if mibBuilder.loadTexts:
    alarmSeverityHdSystemTable.setStatus("current")
_AlarmSeverityHdSystemEntry_Object = MibTableRow
alarmSeverityHdSystemEntry = _AlarmSeverityHdSystemEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 101, 1)
)
alarmSeverityHdSystemEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "alarmSeverityHdSystemId"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityHdSystemType"),
)
if mibBuilder.loadTexts:
    alarmSeverityHdSystemEntry.setStatus("current")
_AlarmSeverityHdSystemId_Type = Unsigned32
_AlarmSeverityHdSystemId_Object = MibTableColumn
alarmSeverityHdSystemId = _AlarmSeverityHdSystemId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 101, 1, 1),
    _AlarmSeverityHdSystemId_Type()
)
alarmSeverityHdSystemId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    alarmSeverityHdSystemId.setStatus("current")
_AlarmSeverityHdSystemType_Type = FspR7AlarmListType
_AlarmSeverityHdSystemType_Object = MibTableColumn
alarmSeverityHdSystemType = _AlarmSeverityHdSystemType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 101, 1, 2),
    _AlarmSeverityHdSystemType_Type()
)
alarmSeverityHdSystemType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityHdSystemType.setStatus("current")
_AlarmSeverityHdSystemValue_Type = TrapAlarmSeverity
_AlarmSeverityHdSystemValue_Object = MibTableColumn
alarmSeverityHdSystemValue = _AlarmSeverityHdSystemValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 101, 1, 3),
    _AlarmSeverityHdSystemValue_Type()
)
alarmSeverityHdSystemValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmSeverityHdSystemValue.setStatus("current")
_AlarmShelfmapTable_Object = MibTable
alarmShelfmapTable = _AlarmShelfmapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102)
)
if mibBuilder.loadTexts:
    alarmShelfmapTable.setStatus("current")
_AlarmShelfmapEntry_Object = MibTableRow
alarmShelfmapEntry = _AlarmShelfmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1)
)
alarmShelfmapEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "alarmShelfmapId"),
    (0, "ADVA-FSPR7-MIB", "alarmShelfmapType"),
)
if mibBuilder.loadTexts:
    alarmShelfmapEntry.setStatus("current")
_AlarmShelfmapId_Type = Unsigned32
_AlarmShelfmapId_Object = MibTableColumn
alarmShelfmapId = _AlarmShelfmapId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1, 1),
    _AlarmShelfmapId_Type()
)
alarmShelfmapId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    alarmShelfmapId.setStatus("current")
_AlarmShelfmapType_Type = FspR7AlarmListType
_AlarmShelfmapType_Object = MibTableColumn
alarmShelfmapType = _AlarmShelfmapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1, 2),
    _AlarmShelfmapType_Type()
)
alarmShelfmapType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmShelfmapType.setStatus("current")
_AlarmShelfmapSeverity_Type = TrapAlarmSeverity
_AlarmShelfmapSeverity_Object = MibTableColumn
alarmShelfmapSeverity = _AlarmShelfmapSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1, 3),
    _AlarmShelfmapSeverity_Type()
)
alarmShelfmapSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfmapSeverity.setStatus("current")
_AlarmShelfmapAffect_Type = ServiceImpairment
_AlarmShelfmapAffect_Object = MibTableColumn
alarmShelfmapAffect = _AlarmShelfmapAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1, 4),
    _AlarmShelfmapAffect_Type()
)
alarmShelfmapAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfmapAffect.setStatus("current")
_AlarmShelfmapTimeStamp_Type = DateAndTime
_AlarmShelfmapTimeStamp_Object = MibTableColumn
alarmShelfmapTimeStamp = _AlarmShelfmapTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 102, 1, 5),
    _AlarmShelfmapTimeStamp_Type()
)
alarmShelfmapTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmShelfmapTimeStamp.setStatus("current")
_AlarmSeverityShelfmapTable_Object = MibTable
alarmSeverityShelfmapTable = _AlarmSeverityShelfmapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 103)
)
if mibBuilder.loadTexts:
    alarmSeverityShelfmapTable.setStatus("current")
_AlarmSeverityShelfmapEntry_Object = MibTableRow
alarmSeverityShelfmapEntry = _AlarmSeverityShelfmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 103, 1)
)
alarmSeverityShelfmapEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "alarmSeverityShelfmapId"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityShelfmapType"),
)
if mibBuilder.loadTexts:
    alarmSeverityShelfmapEntry.setStatus("current")
_AlarmSeverityShelfmapId_Type = Unsigned32
_AlarmSeverityShelfmapId_Object = MibTableColumn
alarmSeverityShelfmapId = _AlarmSeverityShelfmapId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 103, 1, 1),
    _AlarmSeverityShelfmapId_Type()
)
alarmSeverityShelfmapId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    alarmSeverityShelfmapId.setStatus("current")
_AlarmSeverityShelfmapType_Type = FspR7AlarmListType
_AlarmSeverityShelfmapType_Object = MibTableColumn
alarmSeverityShelfmapType = _AlarmSeverityShelfmapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 103, 1, 2),
    _AlarmSeverityShelfmapType_Type()
)
alarmSeverityShelfmapType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityShelfmapType.setStatus("current")
_AlarmSeverityShelfmapValue_Type = TrapAlarmSeverity
_AlarmSeverityShelfmapValue_Object = MibTableColumn
alarmSeverityShelfmapValue = _AlarmSeverityShelfmapValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 103, 1, 3),
    _AlarmSeverityShelfmapValue_Type()
)
alarmSeverityShelfmapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmSeverityShelfmapValue.setStatus("current")
_Licenses_ObjectIdentity = ObjectIdentity
licenses = _Licenses_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200)
)
_LicenseManagerTable_Object = MibTable
licenseManagerTable = _LicenseManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1)
)
if mibBuilder.loadTexts:
    licenseManagerTable.setStatus("current")
_LicenseManagerEntry_Object = MibTableRow
licenseManagerEntry = _LicenseManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1)
)
licenseManagerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseManagerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerPortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerClassName"),
)
if mibBuilder.loadTexts:
    licenseManagerEntry.setStatus("current")
_LicenseManagerShelfNo_Type = Unsigned32
_LicenseManagerShelfNo_Object = MibTableColumn
licenseManagerShelfNo = _LicenseManagerShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 1),
    _LicenseManagerShelfNo_Type()
)
licenseManagerShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseManagerShelfNo.setStatus("current")
_LicenseManagerSlotNo_Type = Unsigned32
_LicenseManagerSlotNo_Object = MibTableColumn
licenseManagerSlotNo = _LicenseManagerSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 2),
    _LicenseManagerSlotNo_Type()
)
licenseManagerSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseManagerSlotNo.setStatus("current")
_LicenseManagerPortNo_Type = Unsigned32
_LicenseManagerPortNo_Object = MibTableColumn
licenseManagerPortNo = _LicenseManagerPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 3),
    _LicenseManagerPortNo_Type()
)
licenseManagerPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseManagerPortNo.setStatus("current")
_LicenseManagerExtNo_Type = Unsigned32
_LicenseManagerExtNo_Object = MibTableColumn
licenseManagerExtNo = _LicenseManagerExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 4),
    _LicenseManagerExtNo_Type()
)
licenseManagerExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseManagerExtNo.setStatus("current")
_LicenseManagerClassName_Type = EntityClassName
_LicenseManagerClassName_Object = MibTableColumn
licenseManagerClassName = _LicenseManagerClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 5),
    _LicenseManagerClassName_Type()
)
licenseManagerClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseManagerClassName.setStatus("current")
_LicenseManagerAidString_Type = SnmpAdminString
_LicenseManagerAidString_Object = MibTableColumn
licenseManagerAidString = _LicenseManagerAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 6),
    _LicenseManagerAidString_Type()
)
licenseManagerAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerAidString.setStatus("current")
_LicenseManagerClass_Type = EntityClass
_LicenseManagerClass_Object = MibTableColumn
licenseManagerClass = _LicenseManagerClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 7),
    _LicenseManagerClass_Type()
)
licenseManagerClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerClass.setStatus("current")
_LicenseManagerRowStatus_Type = RowStatus
_LicenseManagerRowStatus_Object = MibTableColumn
licenseManagerRowStatus = _LicenseManagerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 8),
    _LicenseManagerRowStatus_Type()
)
licenseManagerRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerRowStatus.setStatus("current")
_LicenseManagerLicenseManagement_Type = FspR7LicenseManagement
_LicenseManagerLicenseManagement_Object = MibTableColumn
licenseManagerLicenseManagement = _LicenseManagerLicenseManagement_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 9),
    _LicenseManagerLicenseManagement_Type()
)
licenseManagerLicenseManagement.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    licenseManagerLicenseManagement.setStatus("current")
_LicenseManagerLicenseServer_Type = SnmpAdminString
_LicenseManagerLicenseServer_Object = MibTableColumn
licenseManagerLicenseServer = _LicenseManagerLicenseServer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 10),
    _LicenseManagerLicenseServer_Type()
)
licenseManagerLicenseServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    licenseManagerLicenseServer.setStatus("current")
_LicenseManagerLicenseServerStatus_Type = FspR7LicenseServerStatus
_LicenseManagerLicenseServerStatus_Object = MibTableColumn
licenseManagerLicenseServerStatus = _LicenseManagerLicenseServerStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 11),
    _LicenseManagerLicenseServerStatus_Type()
)
licenseManagerLicenseServerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerLicenseServerStatus.setStatus("current")
_LicenseManagerLicenseFilesInstall_Type = FspR7LicenseFilesInstall
_LicenseManagerLicenseFilesInstall_Object = MibTableColumn
licenseManagerLicenseFilesInstall = _LicenseManagerLicenseFilesInstall_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 12),
    _LicenseManagerLicenseFilesInstall_Type()
)
licenseManagerLicenseFilesInstall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    licenseManagerLicenseFilesInstall.setStatus("current")
_LicenseManagerAdmin_Type = FspR7AdminState
_LicenseManagerAdmin_Object = MibTableColumn
licenseManagerAdmin = _LicenseManagerAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 13),
    _LicenseManagerAdmin_Type()
)
licenseManagerAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerAdmin.setStatus("current")
_LicenseManagerSecondaryStates_Type = FspR7EntitySecondaryStates
_LicenseManagerSecondaryStates_Object = MibTableColumn
licenseManagerSecondaryStates = _LicenseManagerSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 14),
    _LicenseManagerSecondaryStates_Type()
)
licenseManagerSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerSecondaryStates.setStatus("current")
_LicenseManagerOperState_Type = FspR7OperState
_LicenseManagerOperState_Object = MibTableColumn
licenseManagerOperState = _LicenseManagerOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 15),
    _LicenseManagerOperState_Type()
)
licenseManagerOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerOperState.setStatus("current")
_LicenseManagerParentId_Type = RowPointer
_LicenseManagerParentId_Object = MibTableColumn
licenseManagerParentId = _LicenseManagerParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 1, 1, 16),
    _LicenseManagerParentId_Type()
)
licenseManagerParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseManagerParentId.setStatus("current")
_LicenseTable_Object = MibTable
licenseTable = _LicenseTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2)
)
if mibBuilder.loadTexts:
    licenseTable.setStatus("current")
_LicenseEntry_Object = MibTableRow
licenseEntry = _LicenseEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1)
)
licenseEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licensePortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseClassName"),
)
if mibBuilder.loadTexts:
    licenseEntry.setStatus("current")
_LicenseShelfNo_Type = Unsigned32
_LicenseShelfNo_Object = MibTableColumn
licenseShelfNo = _LicenseShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 1),
    _LicenseShelfNo_Type()
)
licenseShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseShelfNo.setStatus("current")
_LicenseSlotNo_Type = Unsigned32
_LicenseSlotNo_Object = MibTableColumn
licenseSlotNo = _LicenseSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 2),
    _LicenseSlotNo_Type()
)
licenseSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseSlotNo.setStatus("current")
_LicensePortNo_Type = Unsigned32
_LicensePortNo_Object = MibTableColumn
licensePortNo = _LicensePortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 3),
    _LicensePortNo_Type()
)
licensePortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licensePortNo.setStatus("current")
_LicenseExtNo_Type = Unsigned32
_LicenseExtNo_Object = MibTableColumn
licenseExtNo = _LicenseExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 4),
    _LicenseExtNo_Type()
)
licenseExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseExtNo.setStatus("current")
_LicenseClassName_Type = EntityClassName
_LicenseClassName_Object = MibTableColumn
licenseClassName = _LicenseClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 5),
    _LicenseClassName_Type()
)
licenseClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseClassName.setStatus("current")
_LicenseAidString_Type = SnmpAdminString
_LicenseAidString_Object = MibTableColumn
licenseAidString = _LicenseAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 6),
    _LicenseAidString_Type()
)
licenseAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseAidString.setStatus("current")
_LicenseClass_Type = EntityClass
_LicenseClass_Object = MibTableColumn
licenseClass = _LicenseClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 7),
    _LicenseClass_Type()
)
licenseClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseClass.setStatus("current")
_LicenseRowStatus_Type = RowStatus
_LicenseRowStatus_Object = MibTableColumn
licenseRowStatus = _LicenseRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 8),
    _LicenseRowStatus_Type()
)
licenseRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseRowStatus.setStatus("current")
_LicenseLicenseName_Type = SnmpAdminString
_LicenseLicenseName_Object = MibTableColumn
licenseLicenseName = _LicenseLicenseName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 9),
    _LicenseLicenseName_Type()
)
licenseLicenseName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseLicenseName.setStatus("current")
_LicenseLicenseType_Type = FspR7LicenseType
_LicenseLicenseType_Object = MibTableColumn
licenseLicenseType = _LicenseLicenseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 10),
    _LicenseLicenseType_Type()
)
licenseLicenseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseLicenseType.setStatus("current")
_LicenseLicenseCountAvailable_Type = Unsigned32
_LicenseLicenseCountAvailable_Object = MibTableColumn
licenseLicenseCountAvailable = _LicenseLicenseCountAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 11),
    _LicenseLicenseCountAvailable_Type()
)
licenseLicenseCountAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseLicenseCountAvailable.setStatus("current")
_LicenseLicenseCountUsed_Type = Unsigned32
_LicenseLicenseCountUsed_Object = MibTableColumn
licenseLicenseCountUsed = _LicenseLicenseCountUsed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 12),
    _LicenseLicenseCountUsed_Type()
)
licenseLicenseCountUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseLicenseCountUsed.setStatus("current")
_LicenseLicenseCountGranted_Type = Unsigned32
_LicenseLicenseCountGranted_Object = MibTableColumn
licenseLicenseCountGranted = _LicenseLicenseCountGranted_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 13),
    _LicenseLicenseCountGranted_Type()
)
licenseLicenseCountGranted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseLicenseCountGranted.setStatus("current")
_LicenseAdmin_Type = FspR7AdminState
_LicenseAdmin_Object = MibTableColumn
licenseAdmin = _LicenseAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 14),
    _LicenseAdmin_Type()
)
licenseAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseAdmin.setStatus("current")
_LicenseSecondaryStates_Type = FspR7EntitySecondaryStates
_LicenseSecondaryStates_Object = MibTableColumn
licenseSecondaryStates = _LicenseSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 15),
    _LicenseSecondaryStates_Type()
)
licenseSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseSecondaryStates.setStatus("current")
_LicenseOperState_Type = FspR7OperState
_LicenseOperState_Object = MibTableColumn
licenseOperState = _LicenseOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 16),
    _LicenseOperState_Type()
)
licenseOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseOperState.setStatus("current")
_LicenseParentId_Type = RowPointer
_LicenseParentId_Object = MibTableColumn
licenseParentId = _LicenseParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 2, 1, 17),
    _LicenseParentId_Type()
)
licenseParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseParentId.setStatus("current")
_AlarmLicenseManagerTable_Object = MibTable
alarmLicenseManagerTable = _AlarmLicenseManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100)
)
if mibBuilder.loadTexts:
    alarmLicenseManagerTable.setStatus("current")
_AlarmLicenseManagerEntry_Object = MibTableRow
alarmLicenseManagerEntry = _AlarmLicenseManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100, 1)
)
alarmLicenseManagerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseManagerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerPortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmLicenseManagerType"),
)
if mibBuilder.loadTexts:
    alarmLicenseManagerEntry.setStatus("current")
_AlarmLicenseManagerType_Type = FspR7AlarmListType
_AlarmLicenseManagerType_Object = MibTableColumn
alarmLicenseManagerType = _AlarmLicenseManagerType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100, 1, 1),
    _AlarmLicenseManagerType_Type()
)
alarmLicenseManagerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmLicenseManagerType.setStatus("current")
_AlarmLicenseManagerSeverity_Type = TrapAlarmSeverity
_AlarmLicenseManagerSeverity_Object = MibTableColumn
alarmLicenseManagerSeverity = _AlarmLicenseManagerSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100, 1, 2),
    _AlarmLicenseManagerSeverity_Type()
)
alarmLicenseManagerSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseManagerSeverity.setStatus("current")
_AlarmLicenseManagerAffect_Type = ServiceImpairment
_AlarmLicenseManagerAffect_Object = MibTableColumn
alarmLicenseManagerAffect = _AlarmLicenseManagerAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100, 1, 3),
    _AlarmLicenseManagerAffect_Type()
)
alarmLicenseManagerAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseManagerAffect.setStatus("current")
_AlarmLicenseManagerTimeStamp_Type = DateAndTime
_AlarmLicenseManagerTimeStamp_Object = MibTableColumn
alarmLicenseManagerTimeStamp = _AlarmLicenseManagerTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 100, 1, 4),
    _AlarmLicenseManagerTimeStamp_Type()
)
alarmLicenseManagerTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseManagerTimeStamp.setStatus("current")
_AlarmSeverityLicenseManagerTable_Object = MibTable
alarmSeverityLicenseManagerTable = _AlarmSeverityLicenseManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 101)
)
if mibBuilder.loadTexts:
    alarmSeverityLicenseManagerTable.setStatus("current")
_AlarmSeverityLicenseManagerEntry_Object = MibTableRow
alarmSeverityLicenseManagerEntry = _AlarmSeverityLicenseManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 101, 1)
)
alarmSeverityLicenseManagerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseManagerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerPortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseManagerClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityLicenseManagerType"),
)
if mibBuilder.loadTexts:
    alarmSeverityLicenseManagerEntry.setStatus("current")
_AlarmSeverityLicenseManagerType_Type = FspR7AlarmListType
_AlarmSeverityLicenseManagerType_Object = MibTableColumn
alarmSeverityLicenseManagerType = _AlarmSeverityLicenseManagerType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 101, 1, 1),
    _AlarmSeverityLicenseManagerType_Type()
)
alarmSeverityLicenseManagerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityLicenseManagerType.setStatus("current")
_AlarmSeverityLicenseManagerValue_Type = TrapAlarmSeverity
_AlarmSeverityLicenseManagerValue_Object = MibTableColumn
alarmSeverityLicenseManagerValue = _AlarmSeverityLicenseManagerValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 101, 1, 2),
    _AlarmSeverityLicenseManagerValue_Type()
)
alarmSeverityLicenseManagerValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityLicenseManagerValue.setStatus("current")
_AlarmLicenseTable_Object = MibTable
alarmLicenseTable = _AlarmLicenseTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102)
)
if mibBuilder.loadTexts:
    alarmLicenseTable.setStatus("current")
_AlarmLicenseEntry_Object = MibTableRow
alarmLicenseEntry = _AlarmLicenseEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102, 1)
)
alarmLicenseEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licensePortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmLicenseType"),
)
if mibBuilder.loadTexts:
    alarmLicenseEntry.setStatus("current")
_AlarmLicenseType_Type = FspR7AlarmListType
_AlarmLicenseType_Object = MibTableColumn
alarmLicenseType = _AlarmLicenseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102, 1, 1),
    _AlarmLicenseType_Type()
)
alarmLicenseType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmLicenseType.setStatus("current")
_AlarmLicenseSeverity_Type = TrapAlarmSeverity
_AlarmLicenseSeverity_Object = MibTableColumn
alarmLicenseSeverity = _AlarmLicenseSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102, 1, 2),
    _AlarmLicenseSeverity_Type()
)
alarmLicenseSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseSeverity.setStatus("current")
_AlarmLicenseAffect_Type = ServiceImpairment
_AlarmLicenseAffect_Object = MibTableColumn
alarmLicenseAffect = _AlarmLicenseAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102, 1, 3),
    _AlarmLicenseAffect_Type()
)
alarmLicenseAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseAffect.setStatus("current")
_AlarmLicenseTimeStamp_Type = DateAndTime
_AlarmLicenseTimeStamp_Object = MibTableColumn
alarmLicenseTimeStamp = _AlarmLicenseTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 102, 1, 4),
    _AlarmLicenseTimeStamp_Type()
)
alarmLicenseTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLicenseTimeStamp.setStatus("current")
_AlarmSeverityLicenseTable_Object = MibTable
alarmSeverityLicenseTable = _AlarmSeverityLicenseTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 103)
)
if mibBuilder.loadTexts:
    alarmSeverityLicenseTable.setStatus("current")
_AlarmSeverityLicenseEntry_Object = MibTableRow
alarmSeverityLicenseEntry = _AlarmSeverityLicenseEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 103, 1)
)
alarmSeverityLicenseEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "licenseShelfNo"),
    (0, "ADVA-FSPR7-MIB", "licenseSlotNo"),
    (0, "ADVA-FSPR7-MIB", "licensePortNo"),
    (0, "ADVA-FSPR7-MIB", "licenseExtNo"),
    (0, "ADVA-FSPR7-MIB", "licenseClassName"),
    (0, "ADVA-FSPR7-MIB", "alarmSeverityLicenseType"),
)
if mibBuilder.loadTexts:
    alarmSeverityLicenseEntry.setStatus("current")
_AlarmSeverityLicenseType_Type = FspR7AlarmListType
_AlarmSeverityLicenseType_Object = MibTableColumn
alarmSeverityLicenseType = _AlarmSeverityLicenseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 103, 1, 1),
    _AlarmSeverityLicenseType_Type()
)
alarmSeverityLicenseType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmSeverityLicenseType.setStatus("current")
_AlarmSeverityLicenseValue_Type = TrapAlarmSeverity
_AlarmSeverityLicenseValue_Object = MibTableColumn
alarmSeverityLicenseValue = _AlarmSeverityLicenseValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 103, 1, 2),
    _AlarmSeverityLicenseValue_Type()
)
alarmSeverityLicenseValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityLicenseValue.setStatus("current")
_EndOfLicensesMgmt_Type = Integer32
_EndOfLicensesMgmt_Object = MibScalar
endOfLicensesMgmt = _EndOfLicensesMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 200, 10000),
    _EndOfLicensesMgmt_Type()
)
endOfLicensesMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfLicensesMgmt.setStatus("current")
_EndOfHdShelvesMgmt_Type = Integer32
_EndOfHdShelvesMgmt_Object = MibScalar
endOfHdShelvesMgmt = _EndOfHdShelvesMgmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 13, 10000),
    _EndOfHdShelvesMgmt_Type()
)
endOfHdShelvesMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfHdShelvesMgmt.setStatus("current")
_EndOfFeatureSpecific_Type = Integer32
_EndOfFeatureSpecific_Object = MibScalar
endOfFeatureSpecific = _EndOfFeatureSpecific_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 7, 10000),
    _EndOfFeatureSpecific_Type()
)
endOfFeatureSpecific.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfFeatureSpecific.setStatus("current")
_Relationship_ObjectIdentity = ObjectIdentity
relationship = _Relationship_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8)
)
_UpwardEqptTable_Object = MibTable
upwardEqptTable = _UpwardEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1)
)
if mibBuilder.loadTexts:
    upwardEqptTable.setStatus("current")
_UpwardEqptEntry_Object = MibTableRow
upwardEqptEntry = _UpwardEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1)
)
upwardEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEqptClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardEqptIndex"),
)
if mibBuilder.loadTexts:
    upwardEqptEntry.setStatus("current")
_UpwardEqptShelfNo_Type = Unsigned32
_UpwardEqptShelfNo_Object = MibTableColumn
upwardEqptShelfNo = _UpwardEqptShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 1),
    _UpwardEqptShelfNo_Type()
)
upwardEqptShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptShelfNo.setStatus("current")
_UpwardEqptSlotNo_Type = Unsigned32
_UpwardEqptSlotNo_Object = MibTableColumn
upwardEqptSlotNo = _UpwardEqptSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 2),
    _UpwardEqptSlotNo_Type()
)
upwardEqptSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptSlotNo.setStatus("current")
_UpwardEqptPortNo_Type = Unsigned32
_UpwardEqptPortNo_Object = MibTableColumn
upwardEqptPortNo = _UpwardEqptPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 3),
    _UpwardEqptPortNo_Type()
)
upwardEqptPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptPortNo.setStatus("current")
_UpwardEqptExtNo_Type = Unsigned32
_UpwardEqptExtNo_Object = MibTableColumn
upwardEqptExtNo = _UpwardEqptExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 4),
    _UpwardEqptExtNo_Type()
)
upwardEqptExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptExtNo.setStatus("current")
_UpwardEqptClassName_Type = EntityClassName
_UpwardEqptClassName_Object = MibTableColumn
upwardEqptClassName = _UpwardEqptClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 5),
    _UpwardEqptClassName_Type()
)
upwardEqptClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptClassName.setStatus("current")
_UpwardEqptIndex_Type = Unsigned32
_UpwardEqptIndex_Object = MibTableColumn
upwardEqptIndex = _UpwardEqptIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 6),
    _UpwardEqptIndex_Type()
)
upwardEqptIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEqptIndex.setStatus("current")
_UpwardEqptParentId_Type = RowPointer
_UpwardEqptParentId_Object = MibTableColumn
upwardEqptParentId = _UpwardEqptParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 1, 1, 7),
    _UpwardEqptParentId_Type()
)
upwardEqptParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardEqptParentId.setStatus("current")
_EndOfUpwardEqptTable_Type = Integer32
_EndOfUpwardEqptTable_Object = MibScalar
endOfUpwardEqptTable = _EndOfUpwardEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 2),
    _EndOfUpwardEqptTable_Type()
)
endOfUpwardEqptTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardEqptTable.setStatus("current")
_DownwardEqptTable_Object = MibTable
downwardEqptTable = _DownwardEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3)
)
if mibBuilder.loadTexts:
    downwardEqptTable.setStatus("current")
_DownwardEqptEntry_Object = MibTableRow
downwardEqptEntry = _DownwardEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1)
)
downwardEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardEqptShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEqptSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEqptPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEqptExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEqptClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardEqptIndex"),
)
if mibBuilder.loadTexts:
    downwardEqptEntry.setStatus("current")
_DownwardEqptShelfNo_Type = Unsigned32
_DownwardEqptShelfNo_Object = MibTableColumn
downwardEqptShelfNo = _DownwardEqptShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 1),
    _DownwardEqptShelfNo_Type()
)
downwardEqptShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptShelfNo.setStatus("current")
_DownwardEqptSlotNo_Type = Unsigned32
_DownwardEqptSlotNo_Object = MibTableColumn
downwardEqptSlotNo = _DownwardEqptSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 2),
    _DownwardEqptSlotNo_Type()
)
downwardEqptSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptSlotNo.setStatus("current")
_DownwardEqptPortNo_Type = Unsigned32
_DownwardEqptPortNo_Object = MibTableColumn
downwardEqptPortNo = _DownwardEqptPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 3),
    _DownwardEqptPortNo_Type()
)
downwardEqptPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptPortNo.setStatus("current")
_DownwardEqptExtNo_Type = Unsigned32
_DownwardEqptExtNo_Object = MibTableColumn
downwardEqptExtNo = _DownwardEqptExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 4),
    _DownwardEqptExtNo_Type()
)
downwardEqptExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptExtNo.setStatus("current")
_DownwardEqptClassName_Type = EntityClassName
_DownwardEqptClassName_Object = MibTableColumn
downwardEqptClassName = _DownwardEqptClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 5),
    _DownwardEqptClassName_Type()
)
downwardEqptClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptClassName.setStatus("current")
_DownwardEqptIndex_Type = Unsigned32
_DownwardEqptIndex_Object = MibTableColumn
downwardEqptIndex = _DownwardEqptIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 6),
    _DownwardEqptIndex_Type()
)
downwardEqptIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEqptIndex.setStatus("current")
_DownwardEqptChildId_Type = RowPointer
_DownwardEqptChildId_Object = MibTableColumn
downwardEqptChildId = _DownwardEqptChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 3, 1, 7),
    _DownwardEqptChildId_Type()
)
downwardEqptChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardEqptChildId.setStatus("current")
_EndOfDownwardEqptTable_Type = Integer32
_EndOfDownwardEqptTable_Object = MibScalar
endOfDownwardEqptTable = _EndOfDownwardEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 4),
    _EndOfDownwardEqptTable_Type()
)
endOfDownwardEqptTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardEqptTable.setStatus("current")
_UpwardDcnTable_Object = MibTable
upwardDcnTable = _UpwardDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5)
)
if mibBuilder.loadTexts:
    upwardDcnTable.setStatus("current")
_UpwardDcnEntry_Object = MibTableRow
upwardDcnEntry = _UpwardDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1)
)
upwardDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardDcnClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardDcnIndex"),
)
if mibBuilder.loadTexts:
    upwardDcnEntry.setStatus("current")
_UpwardDcnShelfNo_Type = Unsigned32
_UpwardDcnShelfNo_Object = MibTableColumn
upwardDcnShelfNo = _UpwardDcnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 1),
    _UpwardDcnShelfNo_Type()
)
upwardDcnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnShelfNo.setStatus("current")
_UpwardDcnSlotNo_Type = Unsigned32
_UpwardDcnSlotNo_Object = MibTableColumn
upwardDcnSlotNo = _UpwardDcnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 2),
    _UpwardDcnSlotNo_Type()
)
upwardDcnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnSlotNo.setStatus("current")
_UpwardDcnPortNo_Type = Unsigned32
_UpwardDcnPortNo_Object = MibTableColumn
upwardDcnPortNo = _UpwardDcnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 3),
    _UpwardDcnPortNo_Type()
)
upwardDcnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnPortNo.setStatus("current")
_UpwardDcnExtNo_Type = Unsigned32
_UpwardDcnExtNo_Object = MibTableColumn
upwardDcnExtNo = _UpwardDcnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 4),
    _UpwardDcnExtNo_Type()
)
upwardDcnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnExtNo.setStatus("current")
_UpwardDcnClassName_Type = EntityClassName
_UpwardDcnClassName_Object = MibTableColumn
upwardDcnClassName = _UpwardDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 5),
    _UpwardDcnClassName_Type()
)
upwardDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnClassName.setStatus("current")
_UpwardDcnIndex_Type = Unsigned32
_UpwardDcnIndex_Object = MibTableColumn
upwardDcnIndex = _UpwardDcnIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 6),
    _UpwardDcnIndex_Type()
)
upwardDcnIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardDcnIndex.setStatus("current")
_UpwardDcnParentId_Type = RowPointer
_UpwardDcnParentId_Object = MibTableColumn
upwardDcnParentId = _UpwardDcnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 5, 1, 7),
    _UpwardDcnParentId_Type()
)
upwardDcnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardDcnParentId.setStatus("current")
_EndOfUpwardDcnTable_Type = Integer32
_EndOfUpwardDcnTable_Object = MibScalar
endOfUpwardDcnTable = _EndOfUpwardDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 6),
    _EndOfUpwardDcnTable_Type()
)
endOfUpwardDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardDcnTable.setStatus("current")
_DownwardDcnTable_Object = MibTable
downwardDcnTable = _DownwardDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7)
)
if mibBuilder.loadTexts:
    downwardDcnTable.setStatus("current")
_DownwardDcnEntry_Object = MibTableRow
downwardDcnEntry = _DownwardDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1)
)
downwardDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardDcnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardDcnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardDcnPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardDcnExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardDcnClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardDcnIndex"),
)
if mibBuilder.loadTexts:
    downwardDcnEntry.setStatus("current")
_DownwardDcnShelfNo_Type = Unsigned32
_DownwardDcnShelfNo_Object = MibTableColumn
downwardDcnShelfNo = _DownwardDcnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 1),
    _DownwardDcnShelfNo_Type()
)
downwardDcnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnShelfNo.setStatus("current")
_DownwardDcnSlotNo_Type = Unsigned32
_DownwardDcnSlotNo_Object = MibTableColumn
downwardDcnSlotNo = _DownwardDcnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 2),
    _DownwardDcnSlotNo_Type()
)
downwardDcnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnSlotNo.setStatus("current")
_DownwardDcnPortNo_Type = Unsigned32
_DownwardDcnPortNo_Object = MibTableColumn
downwardDcnPortNo = _DownwardDcnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 3),
    _DownwardDcnPortNo_Type()
)
downwardDcnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnPortNo.setStatus("current")
_DownwardDcnExtNo_Type = Unsigned32
_DownwardDcnExtNo_Object = MibTableColumn
downwardDcnExtNo = _DownwardDcnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 4),
    _DownwardDcnExtNo_Type()
)
downwardDcnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnExtNo.setStatus("current")
_DownwardDcnClassName_Type = EntityClassName
_DownwardDcnClassName_Object = MibTableColumn
downwardDcnClassName = _DownwardDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 5),
    _DownwardDcnClassName_Type()
)
downwardDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnClassName.setStatus("current")
_DownwardDcnIndex_Type = Unsigned32
_DownwardDcnIndex_Object = MibTableColumn
downwardDcnIndex = _DownwardDcnIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 6),
    _DownwardDcnIndex_Type()
)
downwardDcnIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardDcnIndex.setStatus("current")
_DownwardDcnChildId_Type = RowPointer
_DownwardDcnChildId_Object = MibTableColumn
downwardDcnChildId = _DownwardDcnChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 7, 1, 7),
    _DownwardDcnChildId_Type()
)
downwardDcnChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardDcnChildId.setStatus("current")
_EndOfDownwardDcnTable_Type = Integer32
_EndOfDownwardDcnTable_Object = MibScalar
endOfDownwardDcnTable = _EndOfDownwardDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 8),
    _EndOfDownwardDcnTable_Type()
)
endOfDownwardDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardDcnTable.setStatus("current")
_UpwardEnvTable_Object = MibTable
upwardEnvTable = _UpwardEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9)
)
if mibBuilder.loadTexts:
    upwardEnvTable.setStatus("current")
_UpwardEnvEntry_Object = MibTableRow
upwardEnvEntry = _UpwardEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1)
)
upwardEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardEnvClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardEnvIndex"),
)
if mibBuilder.loadTexts:
    upwardEnvEntry.setStatus("current")
_UpwardEnvShelfNo_Type = Unsigned32
_UpwardEnvShelfNo_Object = MibTableColumn
upwardEnvShelfNo = _UpwardEnvShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 1),
    _UpwardEnvShelfNo_Type()
)
upwardEnvShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvShelfNo.setStatus("current")
_UpwardEnvSlotNo_Type = Unsigned32
_UpwardEnvSlotNo_Object = MibTableColumn
upwardEnvSlotNo = _UpwardEnvSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 2),
    _UpwardEnvSlotNo_Type()
)
upwardEnvSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvSlotNo.setStatus("current")
_UpwardEnvPortNo_Type = Unsigned32
_UpwardEnvPortNo_Object = MibTableColumn
upwardEnvPortNo = _UpwardEnvPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 3),
    _UpwardEnvPortNo_Type()
)
upwardEnvPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvPortNo.setStatus("current")
_UpwardEnvExtNo_Type = Unsigned32
_UpwardEnvExtNo_Object = MibTableColumn
upwardEnvExtNo = _UpwardEnvExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 4),
    _UpwardEnvExtNo_Type()
)
upwardEnvExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvExtNo.setStatus("current")
_UpwardEnvClassName_Type = EntityClassName
_UpwardEnvClassName_Object = MibTableColumn
upwardEnvClassName = _UpwardEnvClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 5),
    _UpwardEnvClassName_Type()
)
upwardEnvClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvClassName.setStatus("current")
_UpwardEnvIndex_Type = Unsigned32
_UpwardEnvIndex_Object = MibTableColumn
upwardEnvIndex = _UpwardEnvIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 6),
    _UpwardEnvIndex_Type()
)
upwardEnvIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardEnvIndex.setStatus("current")
_UpwardEnvParentId_Type = RowPointer
_UpwardEnvParentId_Object = MibTableColumn
upwardEnvParentId = _UpwardEnvParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 9, 1, 7),
    _UpwardEnvParentId_Type()
)
upwardEnvParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardEnvParentId.setStatus("current")
_EndOfUpwardEnvTable_Type = Integer32
_EndOfUpwardEnvTable_Object = MibScalar
endOfUpwardEnvTable = _EndOfUpwardEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 10),
    _EndOfUpwardEnvTable_Type()
)
endOfUpwardEnvTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardEnvTable.setStatus("current")
_DownwardEnvTable_Object = MibTable
downwardEnvTable = _DownwardEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11)
)
if mibBuilder.loadTexts:
    downwardEnvTable.setStatus("current")
_DownwardEnvEntry_Object = MibTableRow
downwardEnvEntry = _DownwardEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1)
)
downwardEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardEnvShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEnvSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEnvPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEnvExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardEnvClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardEnvIndex"),
)
if mibBuilder.loadTexts:
    downwardEnvEntry.setStatus("current")
_DownwardEnvShelfNo_Type = Unsigned32
_DownwardEnvShelfNo_Object = MibTableColumn
downwardEnvShelfNo = _DownwardEnvShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 1),
    _DownwardEnvShelfNo_Type()
)
downwardEnvShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvShelfNo.setStatus("current")
_DownwardEnvSlotNo_Type = Unsigned32
_DownwardEnvSlotNo_Object = MibTableColumn
downwardEnvSlotNo = _DownwardEnvSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 2),
    _DownwardEnvSlotNo_Type()
)
downwardEnvSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvSlotNo.setStatus("current")
_DownwardEnvPortNo_Type = Unsigned32
_DownwardEnvPortNo_Object = MibTableColumn
downwardEnvPortNo = _DownwardEnvPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 3),
    _DownwardEnvPortNo_Type()
)
downwardEnvPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvPortNo.setStatus("current")
_DownwardEnvExtNo_Type = Unsigned32
_DownwardEnvExtNo_Object = MibTableColumn
downwardEnvExtNo = _DownwardEnvExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 4),
    _DownwardEnvExtNo_Type()
)
downwardEnvExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvExtNo.setStatus("current")
_DownwardEnvClassName_Type = EntityClassName
_DownwardEnvClassName_Object = MibTableColumn
downwardEnvClassName = _DownwardEnvClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 5),
    _DownwardEnvClassName_Type()
)
downwardEnvClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvClassName.setStatus("current")
_DownwardEnvIndex_Type = Unsigned32
_DownwardEnvIndex_Object = MibTableColumn
downwardEnvIndex = _DownwardEnvIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 6),
    _DownwardEnvIndex_Type()
)
downwardEnvIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardEnvIndex.setStatus("current")
_DownwardEnvChildId_Type = RowPointer
_DownwardEnvChildId_Object = MibTableColumn
downwardEnvChildId = _DownwardEnvChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 11, 1, 7),
    _DownwardEnvChildId_Type()
)
downwardEnvChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardEnvChildId.setStatus("current")
_EndOfDownwardEnvTable_Type = Integer32
_EndOfDownwardEnvTable_Object = MibScalar
endOfDownwardEnvTable = _EndOfDownwardEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 12),
    _EndOfDownwardEnvTable_Type()
)
endOfDownwardEnvTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardEnvTable.setStatus("current")
_UpwardFacilityTable_Object = MibTable
upwardFacilityTable = _UpwardFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13)
)
if mibBuilder.loadTexts:
    upwardFacilityTable.setStatus("current")
_UpwardFacilityEntry_Object = MibTableRow
upwardFacilityEntry = _UpwardFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1)
)
upwardFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardFacilityIndex"),
)
if mibBuilder.loadTexts:
    upwardFacilityEntry.setStatus("current")
_UpwardFacilityShelfNo_Type = Unsigned32
_UpwardFacilityShelfNo_Object = MibTableColumn
upwardFacilityShelfNo = _UpwardFacilityShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 1),
    _UpwardFacilityShelfNo_Type()
)
upwardFacilityShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilityShelfNo.setStatus("current")
_UpwardFacilitySlotNo_Type = Unsigned32
_UpwardFacilitySlotNo_Object = MibTableColumn
upwardFacilitySlotNo = _UpwardFacilitySlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 2),
    _UpwardFacilitySlotNo_Type()
)
upwardFacilitySlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilitySlotNo.setStatus("current")
_UpwardFacilityPortNo_Type = Unsigned32
_UpwardFacilityPortNo_Object = MibTableColumn
upwardFacilityPortNo = _UpwardFacilityPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 3),
    _UpwardFacilityPortNo_Type()
)
upwardFacilityPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilityPortNo.setStatus("current")
_UpwardFacilityExtNo_Type = Unsigned32
_UpwardFacilityExtNo_Object = MibTableColumn
upwardFacilityExtNo = _UpwardFacilityExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 4),
    _UpwardFacilityExtNo_Type()
)
upwardFacilityExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilityExtNo.setStatus("current")
_UpwardFacilityClassName_Type = EntityClassName
_UpwardFacilityClassName_Object = MibTableColumn
upwardFacilityClassName = _UpwardFacilityClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 5),
    _UpwardFacilityClassName_Type()
)
upwardFacilityClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilityClassName.setStatus("current")
_UpwardFacilityIndex_Type = Unsigned32
_UpwardFacilityIndex_Object = MibTableColumn
upwardFacilityIndex = _UpwardFacilityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 6),
    _UpwardFacilityIndex_Type()
)
upwardFacilityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardFacilityIndex.setStatus("current")
_UpwardFacilityParentId_Type = RowPointer
_UpwardFacilityParentId_Object = MibTableColumn
upwardFacilityParentId = _UpwardFacilityParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 13, 1, 7),
    _UpwardFacilityParentId_Type()
)
upwardFacilityParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardFacilityParentId.setStatus("current")
_DownwardFacilityTable_Object = MibTable
downwardFacilityTable = _DownwardFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14)
)
if mibBuilder.loadTexts:
    downwardFacilityTable.setStatus("current")
_DownwardFacilityEntry_Object = MibTableRow
downwardFacilityEntry = _DownwardFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1)
)
downwardFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardFacilityShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardFacilitySlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardFacilityPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardFacilityExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardFacilityClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardFacilityIndex"),
)
if mibBuilder.loadTexts:
    downwardFacilityEntry.setStatus("current")
_DownwardFacilityShelfNo_Type = Unsigned32
_DownwardFacilityShelfNo_Object = MibTableColumn
downwardFacilityShelfNo = _DownwardFacilityShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 1),
    _DownwardFacilityShelfNo_Type()
)
downwardFacilityShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilityShelfNo.setStatus("current")
_DownwardFacilitySlotNo_Type = Unsigned32
_DownwardFacilitySlotNo_Object = MibTableColumn
downwardFacilitySlotNo = _DownwardFacilitySlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 2),
    _DownwardFacilitySlotNo_Type()
)
downwardFacilitySlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilitySlotNo.setStatus("current")
_DownwardFacilityPortNo_Type = Unsigned32
_DownwardFacilityPortNo_Object = MibTableColumn
downwardFacilityPortNo = _DownwardFacilityPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 3),
    _DownwardFacilityPortNo_Type()
)
downwardFacilityPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilityPortNo.setStatus("current")
_DownwardFacilityExtNo_Type = Unsigned32
_DownwardFacilityExtNo_Object = MibTableColumn
downwardFacilityExtNo = _DownwardFacilityExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 4),
    _DownwardFacilityExtNo_Type()
)
downwardFacilityExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilityExtNo.setStatus("current")
_DownwardFacilityClassName_Type = EntityClassName
_DownwardFacilityClassName_Object = MibTableColumn
downwardFacilityClassName = _DownwardFacilityClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 5),
    _DownwardFacilityClassName_Type()
)
downwardFacilityClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilityClassName.setStatus("current")
_DownwardFacilityIndex_Type = Unsigned32
_DownwardFacilityIndex_Object = MibTableColumn
downwardFacilityIndex = _DownwardFacilityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 6),
    _DownwardFacilityIndex_Type()
)
downwardFacilityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardFacilityIndex.setStatus("current")
_DownwardFacilityChildId_Type = RowPointer
_DownwardFacilityChildId_Object = MibTableColumn
downwardFacilityChildId = _DownwardFacilityChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 14, 1, 7),
    _DownwardFacilityChildId_Type()
)
downwardFacilityChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardFacilityChildId.setStatus("current")
_EndOfDownwardFacilityTable_Type = Integer32
_EndOfDownwardFacilityTable_Object = MibScalar
endOfDownwardFacilityTable = _EndOfDownwardFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 15),
    _EndOfDownwardFacilityTable_Type()
)
endOfDownwardFacilityTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardFacilityTable.setStatus("current")
_UpwardOptLineTable_Object = MibTable
upwardOptLineTable = _UpwardOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16)
)
if mibBuilder.loadTexts:
    upwardOptLineTable.setStatus("current")
_UpwardOptLineEntry_Object = MibTableRow
upwardOptLineEntry = _UpwardOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1)
)
upwardOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardOptLineShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOptLineSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOptLinePortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOptLineExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOptLineClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardOptLineIndex"),
)
if mibBuilder.loadTexts:
    upwardOptLineEntry.setStatus("current")
_UpwardOptLineShelfNo_Type = Unsigned32
_UpwardOptLineShelfNo_Object = MibTableColumn
upwardOptLineShelfNo = _UpwardOptLineShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 1),
    _UpwardOptLineShelfNo_Type()
)
upwardOptLineShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLineShelfNo.setStatus("current")
_UpwardOptLineSlotNo_Type = Unsigned32
_UpwardOptLineSlotNo_Object = MibTableColumn
upwardOptLineSlotNo = _UpwardOptLineSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 2),
    _UpwardOptLineSlotNo_Type()
)
upwardOptLineSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLineSlotNo.setStatus("current")
_UpwardOptLinePortNo_Type = Unsigned32
_UpwardOptLinePortNo_Object = MibTableColumn
upwardOptLinePortNo = _UpwardOptLinePortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 3),
    _UpwardOptLinePortNo_Type()
)
upwardOptLinePortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLinePortNo.setStatus("current")
_UpwardOptLineExtNo_Type = Unsigned32
_UpwardOptLineExtNo_Object = MibTableColumn
upwardOptLineExtNo = _UpwardOptLineExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 4),
    _UpwardOptLineExtNo_Type()
)
upwardOptLineExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLineExtNo.setStatus("current")
_UpwardOptLineClassName_Type = EntityClassName
_UpwardOptLineClassName_Object = MibTableColumn
upwardOptLineClassName = _UpwardOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 5),
    _UpwardOptLineClassName_Type()
)
upwardOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLineClassName.setStatus("current")
_UpwardOptLineIndex_Type = Unsigned32
_UpwardOptLineIndex_Object = MibTableColumn
upwardOptLineIndex = _UpwardOptLineIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 6),
    _UpwardOptLineIndex_Type()
)
upwardOptLineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOptLineIndex.setStatus("current")
_UpwardOptLineParentId_Type = RowPointer
_UpwardOptLineParentId_Object = MibTableColumn
upwardOptLineParentId = _UpwardOptLineParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 16, 1, 7),
    _UpwardOptLineParentId_Type()
)
upwardOptLineParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardOptLineParentId.setStatus("current")
_EndOfUpwardOptLineTable_Type = Integer32
_EndOfUpwardOptLineTable_Object = MibScalar
endOfUpwardOptLineTable = _EndOfUpwardOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 17),
    _EndOfUpwardOptLineTable_Type()
)
endOfUpwardOptLineTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardOptLineTable.setStatus("current")
_DownwardOptLineTable_Object = MibTable
downwardOptLineTable = _DownwardOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18)
)
if mibBuilder.loadTexts:
    downwardOptLineTable.setStatus("current")
_DownwardOptLineEntry_Object = MibTableRow
downwardOptLineEntry = _DownwardOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1)
)
downwardOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardOptLineShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOptLineSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOptLinePortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOptLineExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOptLineClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardOptLineIndex"),
)
if mibBuilder.loadTexts:
    downwardOptLineEntry.setStatus("current")
_DownwardOptLineShelfNo_Type = Unsigned32
_DownwardOptLineShelfNo_Object = MibTableColumn
downwardOptLineShelfNo = _DownwardOptLineShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 1),
    _DownwardOptLineShelfNo_Type()
)
downwardOptLineShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLineShelfNo.setStatus("current")
_DownwardOptLineSlotNo_Type = Unsigned32
_DownwardOptLineSlotNo_Object = MibTableColumn
downwardOptLineSlotNo = _DownwardOptLineSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 2),
    _DownwardOptLineSlotNo_Type()
)
downwardOptLineSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLineSlotNo.setStatus("current")
_DownwardOptLinePortNo_Type = Unsigned32
_DownwardOptLinePortNo_Object = MibTableColumn
downwardOptLinePortNo = _DownwardOptLinePortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 3),
    _DownwardOptLinePortNo_Type()
)
downwardOptLinePortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLinePortNo.setStatus("current")
_DownwardOptLineExtNo_Type = Unsigned32
_DownwardOptLineExtNo_Object = MibTableColumn
downwardOptLineExtNo = _DownwardOptLineExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 4),
    _DownwardOptLineExtNo_Type()
)
downwardOptLineExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLineExtNo.setStatus("current")
_DownwardOptLineClassName_Type = EntityClassName
_DownwardOptLineClassName_Object = MibTableColumn
downwardOptLineClassName = _DownwardOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 5),
    _DownwardOptLineClassName_Type()
)
downwardOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLineClassName.setStatus("current")
_DownwardOptLineIndex_Type = Unsigned32
_DownwardOptLineIndex_Object = MibTableColumn
downwardOptLineIndex = _DownwardOptLineIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 6),
    _DownwardOptLineIndex_Type()
)
downwardOptLineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOptLineIndex.setStatus("current")
_DownwardOptLineChildId_Type = RowPointer
_DownwardOptLineChildId_Object = MibTableColumn
downwardOptLineChildId = _DownwardOptLineChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 18, 1, 7),
    _DownwardOptLineChildId_Type()
)
downwardOptLineChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardOptLineChildId.setStatus("current")
_UpwardTerminPointTable_Object = MibTable
upwardTerminPointTable = _UpwardTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19)
)
if mibBuilder.loadTexts:
    upwardTerminPointTable.setStatus("current")
_UpwardTerminPointEntry_Object = MibTableRow
upwardTerminPointEntry = _UpwardTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1)
)
upwardTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardTerminPointIndex"),
)
if mibBuilder.loadTexts:
    upwardTerminPointEntry.setStatus("current")
_UpwardTerminPointIndexNo1_Type = Unsigned32
_UpwardTerminPointIndexNo1_Object = MibTableColumn
upwardTerminPointIndexNo1 = _UpwardTerminPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 1),
    _UpwardTerminPointIndexNo1_Type()
)
upwardTerminPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointIndexNo1.setStatus("current")
_UpwardTerminPointIndexNo2_Type = Unsigned32
_UpwardTerminPointIndexNo2_Object = MibTableColumn
upwardTerminPointIndexNo2 = _UpwardTerminPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 2),
    _UpwardTerminPointIndexNo2_Type()
)
upwardTerminPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointIndexNo2.setStatus("current")
_UpwardTerminPointIndexNo3_Type = Unsigned32
_UpwardTerminPointIndexNo3_Object = MibTableColumn
upwardTerminPointIndexNo3 = _UpwardTerminPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 3),
    _UpwardTerminPointIndexNo3_Type()
)
upwardTerminPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointIndexNo3.setStatus("current")
_UpwardTerminPointIndexNo4_Type = Unsigned32
_UpwardTerminPointIndexNo4_Object = MibTableColumn
upwardTerminPointIndexNo4 = _UpwardTerminPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 4),
    _UpwardTerminPointIndexNo4_Type()
)
upwardTerminPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointIndexNo4.setStatus("current")
_UpwardTerminPointClassName_Type = EntityClassName
_UpwardTerminPointClassName_Object = MibTableColumn
upwardTerminPointClassName = _UpwardTerminPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 5),
    _UpwardTerminPointClassName_Type()
)
upwardTerminPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointClassName.setStatus("current")
_UpwardTerminPointIndex_Type = Unsigned32
_UpwardTerminPointIndex_Object = MibTableColumn
upwardTerminPointIndex = _UpwardTerminPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 6),
    _UpwardTerminPointIndex_Type()
)
upwardTerminPointIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardTerminPointIndex.setStatus("current")
_UpwardTerminPointParentId_Type = RowPointer
_UpwardTerminPointParentId_Object = MibTableColumn
upwardTerminPointParentId = _UpwardTerminPointParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 19, 1, 7),
    _UpwardTerminPointParentId_Type()
)
upwardTerminPointParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardTerminPointParentId.setStatus("current")
_DownwardTerminPointTable_Object = MibTable
downwardTerminPointTable = _DownwardTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20)
)
if mibBuilder.loadTexts:
    downwardTerminPointTable.setStatus("current")
_DownwardTerminPointEntry_Object = MibTableRow
downwardTerminPointEntry = _DownwardTerminPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1)
)
downwardTerminPointEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardTerminPointIndex"),
)
if mibBuilder.loadTexts:
    downwardTerminPointEntry.setStatus("current")
_DownwardTerminPointIndexNo1_Type = Unsigned32
_DownwardTerminPointIndexNo1_Object = MibTableColumn
downwardTerminPointIndexNo1 = _DownwardTerminPointIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 1),
    _DownwardTerminPointIndexNo1_Type()
)
downwardTerminPointIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointIndexNo1.setStatus("current")
_DownwardTerminPointIndexNo2_Type = Unsigned32
_DownwardTerminPointIndexNo2_Object = MibTableColumn
downwardTerminPointIndexNo2 = _DownwardTerminPointIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 2),
    _DownwardTerminPointIndexNo2_Type()
)
downwardTerminPointIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointIndexNo2.setStatus("current")
_DownwardTerminPointIndexNo3_Type = Unsigned32
_DownwardTerminPointIndexNo3_Object = MibTableColumn
downwardTerminPointIndexNo3 = _DownwardTerminPointIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 3),
    _DownwardTerminPointIndexNo3_Type()
)
downwardTerminPointIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointIndexNo3.setStatus("current")
_DownwardTerminPointIndexNo4_Type = Unsigned32
_DownwardTerminPointIndexNo4_Object = MibTableColumn
downwardTerminPointIndexNo4 = _DownwardTerminPointIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 4),
    _DownwardTerminPointIndexNo4_Type()
)
downwardTerminPointIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointIndexNo4.setStatus("current")
_DownwardTerminPointClassName_Type = EntityClassName
_DownwardTerminPointClassName_Object = MibTableColumn
downwardTerminPointClassName = _DownwardTerminPointClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 5),
    _DownwardTerminPointClassName_Type()
)
downwardTerminPointClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointClassName.setStatus("current")
_DownwardTerminPointIndex_Type = Unsigned32
_DownwardTerminPointIndex_Object = MibTableColumn
downwardTerminPointIndex = _DownwardTerminPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 6),
    _DownwardTerminPointIndex_Type()
)
downwardTerminPointIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardTerminPointIndex.setStatus("current")
_DownwardTerminPointChildId_Type = RowPointer
_DownwardTerminPointChildId_Object = MibTableColumn
downwardTerminPointChildId = _DownwardTerminPointChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 20, 1, 7),
    _DownwardTerminPointChildId_Type()
)
downwardTerminPointChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardTerminPointChildId.setStatus("current")
_EndOfDownwardTerminPointTable_Type = Integer32
_EndOfDownwardTerminPointTable_Object = MibScalar
endOfDownwardTerminPointTable = _EndOfDownwardTerminPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 21),
    _EndOfDownwardTerminPointTable_Type()
)
endOfDownwardTerminPointTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardTerminPointTable.setStatus("current")
_UpwardExternalPortTable_Object = MibTable
upwardExternalPortTable = _UpwardExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23)
)
if mibBuilder.loadTexts:
    upwardExternalPortTable.setStatus("current")
_UpwardExternalPortEntry_Object = MibTableRow
upwardExternalPortEntry = _UpwardExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1)
)
upwardExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardExternalPortIndex"),
)
if mibBuilder.loadTexts:
    upwardExternalPortEntry.setStatus("current")
_UpwardExternalPortShelfNo_Type = Unsigned32
_UpwardExternalPortShelfNo_Object = MibTableColumn
upwardExternalPortShelfNo = _UpwardExternalPortShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 1),
    _UpwardExternalPortShelfNo_Type()
)
upwardExternalPortShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortShelfNo.setStatus("current")
_UpwardExternalPortSlotNo_Type = Unsigned32
_UpwardExternalPortSlotNo_Object = MibTableColumn
upwardExternalPortSlotNo = _UpwardExternalPortSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 2),
    _UpwardExternalPortSlotNo_Type()
)
upwardExternalPortSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortSlotNo.setStatus("current")
_UpwardExternalPortPortNo_Type = Unsigned32
_UpwardExternalPortPortNo_Object = MibTableColumn
upwardExternalPortPortNo = _UpwardExternalPortPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 3),
    _UpwardExternalPortPortNo_Type()
)
upwardExternalPortPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortPortNo.setStatus("current")
_UpwardExternalPortExtNo_Type = Unsigned32
_UpwardExternalPortExtNo_Object = MibTableColumn
upwardExternalPortExtNo = _UpwardExternalPortExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 4),
    _UpwardExternalPortExtNo_Type()
)
upwardExternalPortExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortExtNo.setStatus("current")
_UpwardExternalPortClassName_Type = EntityClassName
_UpwardExternalPortClassName_Object = MibTableColumn
upwardExternalPortClassName = _UpwardExternalPortClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 5),
    _UpwardExternalPortClassName_Type()
)
upwardExternalPortClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortClassName.setStatus("current")
_UpwardExternalPortIndex_Type = Unsigned32
_UpwardExternalPortIndex_Object = MibTableColumn
upwardExternalPortIndex = _UpwardExternalPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 6),
    _UpwardExternalPortIndex_Type()
)
upwardExternalPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardExternalPortIndex.setStatus("current")
_UpwardExternalPortParentId_Type = RowPointer
_UpwardExternalPortParentId_Object = MibTableColumn
upwardExternalPortParentId = _UpwardExternalPortParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 23, 1, 7),
    _UpwardExternalPortParentId_Type()
)
upwardExternalPortParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardExternalPortParentId.setStatus("current")
_DownwardExternalPortTable_Object = MibTable
downwardExternalPortTable = _DownwardExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24)
)
if mibBuilder.loadTexts:
    downwardExternalPortTable.setStatus("current")
_DownwardExternalPortEntry_Object = MibTableRow
downwardExternalPortEntry = _DownwardExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1)
)
downwardExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardExternalPortIndex"),
)
if mibBuilder.loadTexts:
    downwardExternalPortEntry.setStatus("current")
_DownwardExternalPortShelfNo_Type = Unsigned32
_DownwardExternalPortShelfNo_Object = MibTableColumn
downwardExternalPortShelfNo = _DownwardExternalPortShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 1),
    _DownwardExternalPortShelfNo_Type()
)
downwardExternalPortShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortShelfNo.setStatus("current")
_DownwardExternalPortSlotNo_Type = Unsigned32
_DownwardExternalPortSlotNo_Object = MibTableColumn
downwardExternalPortSlotNo = _DownwardExternalPortSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 2),
    _DownwardExternalPortSlotNo_Type()
)
downwardExternalPortSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortSlotNo.setStatus("current")
_DownwardExternalPortPortNo_Type = Unsigned32
_DownwardExternalPortPortNo_Object = MibTableColumn
downwardExternalPortPortNo = _DownwardExternalPortPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 3),
    _DownwardExternalPortPortNo_Type()
)
downwardExternalPortPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortPortNo.setStatus("current")
_DownwardExternalPortExtNo_Type = Unsigned32
_DownwardExternalPortExtNo_Object = MibTableColumn
downwardExternalPortExtNo = _DownwardExternalPortExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 4),
    _DownwardExternalPortExtNo_Type()
)
downwardExternalPortExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortExtNo.setStatus("current")
_DownwardExternalPortClassName_Type = EntityClassName
_DownwardExternalPortClassName_Object = MibTableColumn
downwardExternalPortClassName = _DownwardExternalPortClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 5),
    _DownwardExternalPortClassName_Type()
)
downwardExternalPortClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortClassName.setStatus("current")
_DownwardExternalPortIndex_Type = Unsigned32
_DownwardExternalPortIndex_Object = MibTableColumn
downwardExternalPortIndex = _DownwardExternalPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 6),
    _DownwardExternalPortIndex_Type()
)
downwardExternalPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardExternalPortIndex.setStatus("current")
_DownwardExternalPortChildId_Type = RowPointer
_DownwardExternalPortChildId_Object = MibTableColumn
downwardExternalPortChildId = _DownwardExternalPortChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 24, 1, 7),
    _DownwardExternalPortChildId_Type()
)
downwardExternalPortChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardExternalPortChildId.setStatus("current")
_EndOfDownwardExternalPortTable_Type = Integer32
_EndOfDownwardExternalPortTable_Object = MibScalar
endOfDownwardExternalPortTable = _EndOfDownwardExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 25),
    _EndOfDownwardExternalPortTable_Type()
)
endOfDownwardExternalPortTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardExternalPortTable.setStatus("current")
_UpwardContainerTable_Object = MibTable
upwardContainerTable = _UpwardContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27)
)
if mibBuilder.loadTexts:
    upwardContainerTable.setStatus("current")
_UpwardContainerEntry_Object = MibTableRow
upwardContainerEntry = _UpwardContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1)
)
upwardContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardContainerClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardContainerIndex"),
)
if mibBuilder.loadTexts:
    upwardContainerEntry.setStatus("current")
_UpwardContainerShelfNo_Type = Unsigned32
_UpwardContainerShelfNo_Object = MibTableColumn
upwardContainerShelfNo = _UpwardContainerShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 1),
    _UpwardContainerShelfNo_Type()
)
upwardContainerShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerShelfNo.setStatus("current")
_UpwardContainerSlotNo_Type = Unsigned32
_UpwardContainerSlotNo_Object = MibTableColumn
upwardContainerSlotNo = _UpwardContainerSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 2),
    _UpwardContainerSlotNo_Type()
)
upwardContainerSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerSlotNo.setStatus("current")
_UpwardContainerPortNo_Type = Unsigned32
_UpwardContainerPortNo_Object = MibTableColumn
upwardContainerPortNo = _UpwardContainerPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 3),
    _UpwardContainerPortNo_Type()
)
upwardContainerPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerPortNo.setStatus("current")
_UpwardContainerExtNo_Type = Unsigned32
_UpwardContainerExtNo_Object = MibTableColumn
upwardContainerExtNo = _UpwardContainerExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 4),
    _UpwardContainerExtNo_Type()
)
upwardContainerExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerExtNo.setStatus("current")
_UpwardContainerClassName_Type = EntityClassName
_UpwardContainerClassName_Object = MibTableColumn
upwardContainerClassName = _UpwardContainerClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 5),
    _UpwardContainerClassName_Type()
)
upwardContainerClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerClassName.setStatus("current")
_UpwardContainerIndex_Type = Unsigned32
_UpwardContainerIndex_Object = MibTableColumn
upwardContainerIndex = _UpwardContainerIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 6),
    _UpwardContainerIndex_Type()
)
upwardContainerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardContainerIndex.setStatus("current")
_UpwardContainerParentId_Type = RowPointer
_UpwardContainerParentId_Object = MibTableColumn
upwardContainerParentId = _UpwardContainerParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 27, 1, 7),
    _UpwardContainerParentId_Type()
)
upwardContainerParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardContainerParentId.setStatus("current")
_EndOfUpwardContainerTable_Type = Integer32
_EndOfUpwardContainerTable_Object = MibScalar
endOfUpwardContainerTable = _EndOfUpwardContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 28),
    _EndOfUpwardContainerTable_Type()
)
endOfUpwardContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardContainerTable.setStatus("current")
_DownwardContainerTable_Object = MibTable
downwardContainerTable = _DownwardContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29)
)
if mibBuilder.loadTexts:
    downwardContainerTable.setStatus("current")
_DownwardContainerEntry_Object = MibTableRow
downwardContainerEntry = _DownwardContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1)
)
downwardContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardContainerShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardContainerSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardContainerPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardContainerExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardContainerClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardContainerIndex"),
)
if mibBuilder.loadTexts:
    downwardContainerEntry.setStatus("current")
_DownwardContainerShelfNo_Type = Unsigned32
_DownwardContainerShelfNo_Object = MibTableColumn
downwardContainerShelfNo = _DownwardContainerShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 1),
    _DownwardContainerShelfNo_Type()
)
downwardContainerShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerShelfNo.setStatus("current")
_DownwardContainerSlotNo_Type = Unsigned32
_DownwardContainerSlotNo_Object = MibTableColumn
downwardContainerSlotNo = _DownwardContainerSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 2),
    _DownwardContainerSlotNo_Type()
)
downwardContainerSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerSlotNo.setStatus("current")
_DownwardContainerPortNo_Type = Unsigned32
_DownwardContainerPortNo_Object = MibTableColumn
downwardContainerPortNo = _DownwardContainerPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 3),
    _DownwardContainerPortNo_Type()
)
downwardContainerPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerPortNo.setStatus("current")
_DownwardContainerExtNo_Type = Unsigned32
_DownwardContainerExtNo_Object = MibTableColumn
downwardContainerExtNo = _DownwardContainerExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 4),
    _DownwardContainerExtNo_Type()
)
downwardContainerExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerExtNo.setStatus("current")
_DownwardContainerClassName_Type = EntityClassName
_DownwardContainerClassName_Object = MibTableColumn
downwardContainerClassName = _DownwardContainerClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 5),
    _DownwardContainerClassName_Type()
)
downwardContainerClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerClassName.setStatus("current")
_DownwardContainerIndex_Type = Unsigned32
_DownwardContainerIndex_Object = MibTableColumn
downwardContainerIndex = _DownwardContainerIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 6),
    _DownwardContainerIndex_Type()
)
downwardContainerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardContainerIndex.setStatus("current")
_DownwardContainerChildId_Type = RowPointer
_DownwardContainerChildId_Object = MibTableColumn
downwardContainerChildId = _DownwardContainerChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 29, 1, 7),
    _DownwardContainerChildId_Type()
)
downwardContainerChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardContainerChildId.setStatus("current")
_EndOfDownwardContainerTable_Type = Integer32
_EndOfDownwardContainerTable_Object = MibScalar
endOfDownwardContainerTable = _EndOfDownwardContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 30),
    _EndOfDownwardContainerTable_Type()
)
endOfDownwardContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardContainerTable.setStatus("current")
_UpwardOpticalMuxTable_Object = MibTable
upwardOpticalMuxTable = _UpwardOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31)
)
if mibBuilder.loadTexts:
    upwardOpticalMuxTable.setStatus("current")
_UpwardOpticalMuxEntry_Object = MibTableRow
upwardOpticalMuxEntry = _UpwardOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1)
)
upwardOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardOpticalMuxIndex"),
)
if mibBuilder.loadTexts:
    upwardOpticalMuxEntry.setStatus("current")
_UpwardOpticalMuxShelfNo_Type = Unsigned32
_UpwardOpticalMuxShelfNo_Object = MibTableColumn
upwardOpticalMuxShelfNo = _UpwardOpticalMuxShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 1),
    _UpwardOpticalMuxShelfNo_Type()
)
upwardOpticalMuxShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxShelfNo.setStatus("current")
_UpwardOpticalMuxSlotNo_Type = Unsigned32
_UpwardOpticalMuxSlotNo_Object = MibTableColumn
upwardOpticalMuxSlotNo = _UpwardOpticalMuxSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 2),
    _UpwardOpticalMuxSlotNo_Type()
)
upwardOpticalMuxSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxSlotNo.setStatus("current")
_UpwardOpticalMuxPortNo_Type = Unsigned32
_UpwardOpticalMuxPortNo_Object = MibTableColumn
upwardOpticalMuxPortNo = _UpwardOpticalMuxPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 3),
    _UpwardOpticalMuxPortNo_Type()
)
upwardOpticalMuxPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxPortNo.setStatus("current")
_UpwardOpticalMuxExtNo_Type = Unsigned32
_UpwardOpticalMuxExtNo_Object = MibTableColumn
upwardOpticalMuxExtNo = _UpwardOpticalMuxExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 4),
    _UpwardOpticalMuxExtNo_Type()
)
upwardOpticalMuxExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxExtNo.setStatus("current")
_UpwardOpticalMuxClassName_Type = EntityClassName
_UpwardOpticalMuxClassName_Object = MibTableColumn
upwardOpticalMuxClassName = _UpwardOpticalMuxClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 5),
    _UpwardOpticalMuxClassName_Type()
)
upwardOpticalMuxClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxClassName.setStatus("current")
_UpwardOpticalMuxIndex_Type = Unsigned32
_UpwardOpticalMuxIndex_Object = MibTableColumn
upwardOpticalMuxIndex = _UpwardOpticalMuxIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 6),
    _UpwardOpticalMuxIndex_Type()
)
upwardOpticalMuxIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardOpticalMuxIndex.setStatus("current")
_UpwardOpticalMuxParentId_Type = RowPointer
_UpwardOpticalMuxParentId_Object = MibTableColumn
upwardOpticalMuxParentId = _UpwardOpticalMuxParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 31, 1, 7),
    _UpwardOpticalMuxParentId_Type()
)
upwardOpticalMuxParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardOpticalMuxParentId.setStatus("current")
_EndOfUpwardOpticalMuxTable_Type = Integer32
_EndOfUpwardOpticalMuxTable_Object = MibScalar
endOfUpwardOpticalMuxTable = _EndOfUpwardOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 32),
    _EndOfUpwardOpticalMuxTable_Type()
)
endOfUpwardOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardOpticalMuxTable.setStatus("current")
_DownwardOpticalMuxTable_Object = MibTable
downwardOpticalMuxTable = _DownwardOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33)
)
if mibBuilder.loadTexts:
    downwardOpticalMuxTable.setStatus("current")
_DownwardOpticalMuxEntry_Object = MibTableRow
downwardOpticalMuxEntry = _DownwardOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1)
)
downwardOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardOpticalMuxIndex"),
)
if mibBuilder.loadTexts:
    downwardOpticalMuxEntry.setStatus("current")
_DownwardOpticalMuxShelfNo_Type = Unsigned32
_DownwardOpticalMuxShelfNo_Object = MibTableColumn
downwardOpticalMuxShelfNo = _DownwardOpticalMuxShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 1),
    _DownwardOpticalMuxShelfNo_Type()
)
downwardOpticalMuxShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxShelfNo.setStatus("current")
_DownwardOpticalMuxSlotNo_Type = Unsigned32
_DownwardOpticalMuxSlotNo_Object = MibTableColumn
downwardOpticalMuxSlotNo = _DownwardOpticalMuxSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 2),
    _DownwardOpticalMuxSlotNo_Type()
)
downwardOpticalMuxSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxSlotNo.setStatus("current")
_DownwardOpticalMuxPortNo_Type = Unsigned32
_DownwardOpticalMuxPortNo_Object = MibTableColumn
downwardOpticalMuxPortNo = _DownwardOpticalMuxPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 3),
    _DownwardOpticalMuxPortNo_Type()
)
downwardOpticalMuxPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxPortNo.setStatus("current")
_DownwardOpticalMuxExtNo_Type = Unsigned32
_DownwardOpticalMuxExtNo_Object = MibTableColumn
downwardOpticalMuxExtNo = _DownwardOpticalMuxExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 4),
    _DownwardOpticalMuxExtNo_Type()
)
downwardOpticalMuxExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxExtNo.setStatus("current")
_DownwardOpticalMuxClassName_Type = EntityClassName
_DownwardOpticalMuxClassName_Object = MibTableColumn
downwardOpticalMuxClassName = _DownwardOpticalMuxClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 5),
    _DownwardOpticalMuxClassName_Type()
)
downwardOpticalMuxClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxClassName.setStatus("current")
_DownwardOpticalMuxIndex_Type = Unsigned32
_DownwardOpticalMuxIndex_Object = MibTableColumn
downwardOpticalMuxIndex = _DownwardOpticalMuxIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 6),
    _DownwardOpticalMuxIndex_Type()
)
downwardOpticalMuxIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardOpticalMuxIndex.setStatus("current")
_DownwardOpticalMuxChildId_Type = RowPointer
_DownwardOpticalMuxChildId_Object = MibTableColumn
downwardOpticalMuxChildId = _DownwardOpticalMuxChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 33, 1, 7),
    _DownwardOpticalMuxChildId_Type()
)
downwardOpticalMuxChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardOpticalMuxChildId.setStatus("current")
_EndOfDownwardOpticalMuxTable_Type = Integer32
_EndOfDownwardOpticalMuxTable_Object = MibScalar
endOfDownwardOpticalMuxTable = _EndOfDownwardOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 34),
    _EndOfDownwardOpticalMuxTable_Type()
)
endOfDownwardOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardOpticalMuxTable.setStatus("current")
_UpwardShelfConnTable_Object = MibTable
upwardShelfConnTable = _UpwardShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35)
)
if mibBuilder.loadTexts:
    upwardShelfConnTable.setStatus("current")
_UpwardShelfConnEntry_Object = MibTableRow
upwardShelfConnEntry = _UpwardShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1)
)
upwardShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnClassName"),
    (0, "ADVA-FSPR7-MIB", "upwardShelfConnIndex"),
)
if mibBuilder.loadTexts:
    upwardShelfConnEntry.setStatus("current")
_UpwardShelfConnShelfNo_Type = Unsigned32
_UpwardShelfConnShelfNo_Object = MibTableColumn
upwardShelfConnShelfNo = _UpwardShelfConnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 1),
    _UpwardShelfConnShelfNo_Type()
)
upwardShelfConnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnShelfNo.setStatus("current")
_UpwardShelfConnSlotNo_Type = Unsigned32
_UpwardShelfConnSlotNo_Object = MibTableColumn
upwardShelfConnSlotNo = _UpwardShelfConnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 2),
    _UpwardShelfConnSlotNo_Type()
)
upwardShelfConnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnSlotNo.setStatus("current")
_UpwardShelfConnPortNo_Type = Unsigned32
_UpwardShelfConnPortNo_Object = MibTableColumn
upwardShelfConnPortNo = _UpwardShelfConnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 3),
    _UpwardShelfConnPortNo_Type()
)
upwardShelfConnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnPortNo.setStatus("current")
_UpwardShelfConnExtNo_Type = Unsigned32
_UpwardShelfConnExtNo_Object = MibTableColumn
upwardShelfConnExtNo = _UpwardShelfConnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 4),
    _UpwardShelfConnExtNo_Type()
)
upwardShelfConnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnExtNo.setStatus("current")
_UpwardShelfConnClassName_Type = EntityClassName
_UpwardShelfConnClassName_Object = MibTableColumn
upwardShelfConnClassName = _UpwardShelfConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 5),
    _UpwardShelfConnClassName_Type()
)
upwardShelfConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnClassName.setStatus("current")
_UpwardShelfConnIndex_Type = Unsigned32
_UpwardShelfConnIndex_Object = MibTableColumn
upwardShelfConnIndex = _UpwardShelfConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 6),
    _UpwardShelfConnIndex_Type()
)
upwardShelfConnIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    upwardShelfConnIndex.setStatus("current")
_UpwardShelfConnParentId_Type = RowPointer
_UpwardShelfConnParentId_Object = MibTableColumn
upwardShelfConnParentId = _UpwardShelfConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 35, 1, 7),
    _UpwardShelfConnParentId_Type()
)
upwardShelfConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upwardShelfConnParentId.setStatus("current")
_EndOfUpwardShelfConnTable_Type = Integer32
_EndOfUpwardShelfConnTable_Object = MibScalar
endOfUpwardShelfConnTable = _EndOfUpwardShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 36),
    _EndOfUpwardShelfConnTable_Type()
)
endOfUpwardShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfUpwardShelfConnTable.setStatus("current")
_DownwardShelfConnTable_Object = MibTable
downwardShelfConnTable = _DownwardShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37)
)
if mibBuilder.loadTexts:
    downwardShelfConnTable.setStatus("current")
_DownwardShelfConnEntry_Object = MibTableRow
downwardShelfConnEntry = _DownwardShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1)
)
downwardShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnShelfNo"),
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnSlotNo"),
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnPortNo"),
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnExtNo"),
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnClassName"),
    (0, "ADVA-FSPR7-MIB", "downwardShelfConnIndex"),
)
if mibBuilder.loadTexts:
    downwardShelfConnEntry.setStatus("current")
_DownwardShelfConnShelfNo_Type = Unsigned32
_DownwardShelfConnShelfNo_Object = MibTableColumn
downwardShelfConnShelfNo = _DownwardShelfConnShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 1),
    _DownwardShelfConnShelfNo_Type()
)
downwardShelfConnShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnShelfNo.setStatus("current")
_DownwardShelfConnSlotNo_Type = Unsigned32
_DownwardShelfConnSlotNo_Object = MibTableColumn
downwardShelfConnSlotNo = _DownwardShelfConnSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 2),
    _DownwardShelfConnSlotNo_Type()
)
downwardShelfConnSlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnSlotNo.setStatus("current")
_DownwardShelfConnPortNo_Type = Unsigned32
_DownwardShelfConnPortNo_Object = MibTableColumn
downwardShelfConnPortNo = _DownwardShelfConnPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 3),
    _DownwardShelfConnPortNo_Type()
)
downwardShelfConnPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnPortNo.setStatus("current")
_DownwardShelfConnExtNo_Type = Unsigned32
_DownwardShelfConnExtNo_Object = MibTableColumn
downwardShelfConnExtNo = _DownwardShelfConnExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 4),
    _DownwardShelfConnExtNo_Type()
)
downwardShelfConnExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnExtNo.setStatus("current")
_DownwardShelfConnClassName_Type = EntityClassName
_DownwardShelfConnClassName_Object = MibTableColumn
downwardShelfConnClassName = _DownwardShelfConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 5),
    _DownwardShelfConnClassName_Type()
)
downwardShelfConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnClassName.setStatus("current")
_DownwardShelfConnIndex_Type = Unsigned32
_DownwardShelfConnIndex_Object = MibTableColumn
downwardShelfConnIndex = _DownwardShelfConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 6),
    _DownwardShelfConnIndex_Type()
)
downwardShelfConnIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    downwardShelfConnIndex.setStatus("current")
_DownwardShelfConnChildId_Type = RowPointer
_DownwardShelfConnChildId_Object = MibTableColumn
downwardShelfConnChildId = _DownwardShelfConnChildId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 37, 1, 7),
    _DownwardShelfConnChildId_Type()
)
downwardShelfConnChildId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downwardShelfConnChildId.setStatus("current")
_EndOfDownwardShelfConnTable_Type = Integer32
_EndOfDownwardShelfConnTable_Object = MibScalar
endOfDownwardShelfConnTable = _EndOfDownwardShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 38),
    _EndOfDownwardShelfConnTable_Type()
)
endOfDownwardShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDownwardShelfConnTable.setStatus("current")
_DependentTable_Object = MibTable
dependentTable = _DependentTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100)
)
if mibBuilder.loadTexts:
    dependentTable.setStatus("current")
_DependentEntry_Object = MibTableRow
dependentEntry = _DependentEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1)
)
dependentEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "dependentIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "dependentIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "dependentIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "dependentIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "dependentClassName"),
    (0, "ADVA-FSPR7-MIB", "dependentIndex"),
)
if mibBuilder.loadTexts:
    dependentEntry.setStatus("current")
_DependentIndexNo1_Type = Unsigned32
_DependentIndexNo1_Object = MibTableColumn
dependentIndexNo1 = _DependentIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 1),
    _DependentIndexNo1_Type()
)
dependentIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentIndexNo1.setStatus("current")
_DependentIndexNo2_Type = Unsigned32
_DependentIndexNo2_Object = MibTableColumn
dependentIndexNo2 = _DependentIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 2),
    _DependentIndexNo2_Type()
)
dependentIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentIndexNo2.setStatus("current")
_DependentIndexNo3_Type = Unsigned32
_DependentIndexNo3_Object = MibTableColumn
dependentIndexNo3 = _DependentIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 3),
    _DependentIndexNo3_Type()
)
dependentIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentIndexNo3.setStatus("current")
_DependentIndexNo4_Type = Unsigned32
_DependentIndexNo4_Object = MibTableColumn
dependentIndexNo4 = _DependentIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 4),
    _DependentIndexNo4_Type()
)
dependentIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentIndexNo4.setStatus("current")
_DependentClassName_Type = EntityClassName
_DependentClassName_Object = MibTableColumn
dependentClassName = _DependentClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 5),
    _DependentClassName_Type()
)
dependentClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentClassName.setStatus("current")
_DependentIndex_Type = Unsigned32
_DependentIndex_Object = MibTableColumn
dependentIndex = _DependentIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 6),
    _DependentIndex_Type()
)
dependentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependentIndex.setStatus("current")
_DependentAid_Type = SnmpAdminString
_DependentAid_Object = MibTableColumn
dependentAid = _DependentAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 7),
    _DependentAid_Type()
)
dependentAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dependentAid.setStatus("current")
_DependentId_Type = RowPointer
_DependentId_Object = MibTableColumn
dependentId = _DependentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 100, 1, 8),
    _DependentId_Type()
)
dependentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dependentId.setStatus("current")
_EndOfDependentTable_Type = Integer32
_EndOfDependentTable_Object = MibScalar
endOfDependentTable = _EndOfDependentTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 101),
    _EndOfDependentTable_Type()
)
endOfDependentTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfDependentTable.setStatus("current")
_EndOfRelationship_Type = Integer32
_EndOfRelationship_Object = MibScalar
endOfRelationship = _EndOfRelationship_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 8, 10000),
    _EndOfRelationship_Type()
)
endOfRelationship.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfRelationship.setStatus("current")
_NotAssignables_ObjectIdentity = ObjectIdentity
notAssignables = _NotAssignables_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9)
)
_NotAssignableEqptTable_Object = MibTable
notAssignableEqptTable = _NotAssignableEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2)
)
if mibBuilder.loadTexts:
    notAssignableEqptTable.setStatus("current")
_NotAssignableEqptEntry_Object = MibTableRow
notAssignableEqptEntry = _NotAssignableEqptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1)
)
notAssignableEqptEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableEqptIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEqptIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEqptIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEqptIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEqptClassName"),
)
if mibBuilder.loadTexts:
    notAssignableEqptEntry.setStatus("current")
_NotAssignableEqptIndexNo1_Type = Unsigned32
_NotAssignableEqptIndexNo1_Object = MibTableColumn
notAssignableEqptIndexNo1 = _NotAssignableEqptIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 1),
    _NotAssignableEqptIndexNo1_Type()
)
notAssignableEqptIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEqptIndexNo1.setStatus("current")
_NotAssignableEqptIndexNo2_Type = Unsigned32
_NotAssignableEqptIndexNo2_Object = MibTableColumn
notAssignableEqptIndexNo2 = _NotAssignableEqptIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 2),
    _NotAssignableEqptIndexNo2_Type()
)
notAssignableEqptIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEqptIndexNo2.setStatus("current")
_NotAssignableEqptIndexNo3_Type = Unsigned32
_NotAssignableEqptIndexNo3_Object = MibTableColumn
notAssignableEqptIndexNo3 = _NotAssignableEqptIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 3),
    _NotAssignableEqptIndexNo3_Type()
)
notAssignableEqptIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEqptIndexNo3.setStatus("current")
_NotAssignableEqptIndexNo4_Type = Unsigned32
_NotAssignableEqptIndexNo4_Object = MibTableColumn
notAssignableEqptIndexNo4 = _NotAssignableEqptIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 4),
    _NotAssignableEqptIndexNo4_Type()
)
notAssignableEqptIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEqptIndexNo4.setStatus("current")
_NotAssignableEqptClassName_Type = EntityClassName
_NotAssignableEqptClassName_Object = MibTableColumn
notAssignableEqptClassName = _NotAssignableEqptClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 5),
    _NotAssignableEqptClassName_Type()
)
notAssignableEqptClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEqptClassName.setStatus("current")
_NotAssignableEqptAidString_Type = SnmpAdminString
_NotAssignableEqptAidString_Object = MibTableColumn
notAssignableEqptAidString = _NotAssignableEqptAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 6),
    _NotAssignableEqptAidString_Type()
)
notAssignableEqptAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEqptAidString.setStatus("current")
_NotAssignableEqptParentId_Type = RowPointer
_NotAssignableEqptParentId_Object = MibTableColumn
notAssignableEqptParentId = _NotAssignableEqptParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 7),
    _NotAssignableEqptParentId_Type()
)
notAssignableEqptParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEqptParentId.setStatus("current")
_NotAssignableEqptClass_Type = EntityClass
_NotAssignableEqptClass_Object = MibTableColumn
notAssignableEqptClass = _NotAssignableEqptClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 2, 1, 8),
    _NotAssignableEqptClass_Type()
)
notAssignableEqptClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEqptClass.setStatus("current")
_EndOfNotAssignableEqptTable_Type = Integer32
_EndOfNotAssignableEqptTable_Object = MibScalar
endOfNotAssignableEqptTable = _EndOfNotAssignableEqptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 3),
    _EndOfNotAssignableEqptTable_Type()
)
endOfNotAssignableEqptTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableEqptTable.setStatus("current")
_NotAssignableDcnTable_Object = MibTable
notAssignableDcnTable = _NotAssignableDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4)
)
if mibBuilder.loadTexts:
    notAssignableDcnTable.setStatus("current")
_NotAssignableDcnEntry_Object = MibTableRow
notAssignableDcnEntry = _NotAssignableDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1)
)
notAssignableDcnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableDcnIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableDcnIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableDcnIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableDcnIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableDcnClassName"),
)
if mibBuilder.loadTexts:
    notAssignableDcnEntry.setStatus("current")
_NotAssignableDcnIndexNo1_Type = Unsigned32
_NotAssignableDcnIndexNo1_Object = MibTableColumn
notAssignableDcnIndexNo1 = _NotAssignableDcnIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 1),
    _NotAssignableDcnIndexNo1_Type()
)
notAssignableDcnIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableDcnIndexNo1.setStatus("current")
_NotAssignableDcnIndexNo2_Type = Unsigned32
_NotAssignableDcnIndexNo2_Object = MibTableColumn
notAssignableDcnIndexNo2 = _NotAssignableDcnIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 2),
    _NotAssignableDcnIndexNo2_Type()
)
notAssignableDcnIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableDcnIndexNo2.setStatus("current")
_NotAssignableDcnIndexNo3_Type = Unsigned32
_NotAssignableDcnIndexNo3_Object = MibTableColumn
notAssignableDcnIndexNo3 = _NotAssignableDcnIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 3),
    _NotAssignableDcnIndexNo3_Type()
)
notAssignableDcnIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableDcnIndexNo3.setStatus("current")
_NotAssignableDcnIndexNo4_Type = Unsigned32
_NotAssignableDcnIndexNo4_Object = MibTableColumn
notAssignableDcnIndexNo4 = _NotAssignableDcnIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 4),
    _NotAssignableDcnIndexNo4_Type()
)
notAssignableDcnIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableDcnIndexNo4.setStatus("current")
_NotAssignableDcnClassName_Type = EntityClassName
_NotAssignableDcnClassName_Object = MibTableColumn
notAssignableDcnClassName = _NotAssignableDcnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 5),
    _NotAssignableDcnClassName_Type()
)
notAssignableDcnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableDcnClassName.setStatus("current")
_NotAssignableDcnAidString_Type = SnmpAdminString
_NotAssignableDcnAidString_Object = MibTableColumn
notAssignableDcnAidString = _NotAssignableDcnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 6),
    _NotAssignableDcnAidString_Type()
)
notAssignableDcnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableDcnAidString.setStatus("current")
_NotAssignableDcnParentId_Type = RowPointer
_NotAssignableDcnParentId_Object = MibTableColumn
notAssignableDcnParentId = _NotAssignableDcnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 7),
    _NotAssignableDcnParentId_Type()
)
notAssignableDcnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableDcnParentId.setStatus("current")
_NotAssignableDcnClass_Type = EntityClass
_NotAssignableDcnClass_Object = MibTableColumn
notAssignableDcnClass = _NotAssignableDcnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 4, 1, 8),
    _NotAssignableDcnClass_Type()
)
notAssignableDcnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableDcnClass.setStatus("current")
_EndOfNotAssignableDcnTable_Type = Integer32
_EndOfNotAssignableDcnTable_Object = MibScalar
endOfNotAssignableDcnTable = _EndOfNotAssignableDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 5),
    _EndOfNotAssignableDcnTable_Type()
)
endOfNotAssignableDcnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableDcnTable.setStatus("current")
_NotAssignableFacilityTable_Object = MibTable
notAssignableFacilityTable = _NotAssignableFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7)
)
if mibBuilder.loadTexts:
    notAssignableFacilityTable.setStatus("current")
_NotAssignableFacilityEntry_Object = MibTableRow
notAssignableFacilityEntry = _NotAssignableFacilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1)
)
notAssignableFacilityEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableFacilityIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableFacilityIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableFacilityIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableFacilityIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableFacilityClassName"),
)
if mibBuilder.loadTexts:
    notAssignableFacilityEntry.setStatus("current")
_NotAssignableFacilityIndexNo1_Type = Unsigned32
_NotAssignableFacilityIndexNo1_Object = MibTableColumn
notAssignableFacilityIndexNo1 = _NotAssignableFacilityIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 1),
    _NotAssignableFacilityIndexNo1_Type()
)
notAssignableFacilityIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableFacilityIndexNo1.setStatus("current")
_NotAssignableFacilityIndexNo2_Type = Unsigned32
_NotAssignableFacilityIndexNo2_Object = MibTableColumn
notAssignableFacilityIndexNo2 = _NotAssignableFacilityIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 2),
    _NotAssignableFacilityIndexNo2_Type()
)
notAssignableFacilityIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableFacilityIndexNo2.setStatus("current")
_NotAssignableFacilityIndexNo3_Type = Unsigned32
_NotAssignableFacilityIndexNo3_Object = MibTableColumn
notAssignableFacilityIndexNo3 = _NotAssignableFacilityIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 3),
    _NotAssignableFacilityIndexNo3_Type()
)
notAssignableFacilityIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableFacilityIndexNo3.setStatus("current")
_NotAssignableFacilityIndexNo4_Type = Unsigned32
_NotAssignableFacilityIndexNo4_Object = MibTableColumn
notAssignableFacilityIndexNo4 = _NotAssignableFacilityIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 4),
    _NotAssignableFacilityIndexNo4_Type()
)
notAssignableFacilityIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableFacilityIndexNo4.setStatus("current")
_NotAssignableFacilityClassName_Type = EntityClassName
_NotAssignableFacilityClassName_Object = MibTableColumn
notAssignableFacilityClassName = _NotAssignableFacilityClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 5),
    _NotAssignableFacilityClassName_Type()
)
notAssignableFacilityClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableFacilityClassName.setStatus("current")
_NotAssignableFacilityAidString_Type = SnmpAdminString
_NotAssignableFacilityAidString_Object = MibTableColumn
notAssignableFacilityAidString = _NotAssignableFacilityAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 6),
    _NotAssignableFacilityAidString_Type()
)
notAssignableFacilityAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableFacilityAidString.setStatus("current")
_NotAssignableFacilityParentId_Type = RowPointer
_NotAssignableFacilityParentId_Object = MibTableColumn
notAssignableFacilityParentId = _NotAssignableFacilityParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 7),
    _NotAssignableFacilityParentId_Type()
)
notAssignableFacilityParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableFacilityParentId.setStatus("current")
_NotAssignableFacilityClass_Type = EntityClass
_NotAssignableFacilityClass_Object = MibTableColumn
notAssignableFacilityClass = _NotAssignableFacilityClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 7, 1, 8),
    _NotAssignableFacilityClass_Type()
)
notAssignableFacilityClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableFacilityClass.setStatus("current")
_EndOfNotAssignableFacilityTable_Type = Integer32
_EndOfNotAssignableFacilityTable_Object = MibScalar
endOfNotAssignableFacilityTable = _EndOfNotAssignableFacilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 8),
    _EndOfNotAssignableFacilityTable_Type()
)
endOfNotAssignableFacilityTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableFacilityTable.setStatus("current")
_NotAssignableOptLineTable_Object = MibTable
notAssignableOptLineTable = _NotAssignableOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9)
)
if mibBuilder.loadTexts:
    notAssignableOptLineTable.setStatus("current")
_NotAssignableOptLineEntry_Object = MibTableRow
notAssignableOptLineEntry = _NotAssignableOptLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1)
)
notAssignableOptLineEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableOptLineIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOptLineIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOptLineIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOptLineIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOptLineClassName"),
)
if mibBuilder.loadTexts:
    notAssignableOptLineEntry.setStatus("current")
_NotAssignableOptLineIndexNo1_Type = Unsigned32
_NotAssignableOptLineIndexNo1_Object = MibTableColumn
notAssignableOptLineIndexNo1 = _NotAssignableOptLineIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 1),
    _NotAssignableOptLineIndexNo1_Type()
)
notAssignableOptLineIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOptLineIndexNo1.setStatus("current")
_NotAssignableOptLineIndexNo2_Type = Unsigned32
_NotAssignableOptLineIndexNo2_Object = MibTableColumn
notAssignableOptLineIndexNo2 = _NotAssignableOptLineIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 2),
    _NotAssignableOptLineIndexNo2_Type()
)
notAssignableOptLineIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOptLineIndexNo2.setStatus("current")
_NotAssignableOptLineIndexNo3_Type = Unsigned32
_NotAssignableOptLineIndexNo3_Object = MibTableColumn
notAssignableOptLineIndexNo3 = _NotAssignableOptLineIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 3),
    _NotAssignableOptLineIndexNo3_Type()
)
notAssignableOptLineIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOptLineIndexNo3.setStatus("current")
_NotAssignableOptLineIndexNo4_Type = Unsigned32
_NotAssignableOptLineIndexNo4_Object = MibTableColumn
notAssignableOptLineIndexNo4 = _NotAssignableOptLineIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 4),
    _NotAssignableOptLineIndexNo4_Type()
)
notAssignableOptLineIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOptLineIndexNo4.setStatus("current")
_NotAssignableOptLineClassName_Type = EntityClassName
_NotAssignableOptLineClassName_Object = MibTableColumn
notAssignableOptLineClassName = _NotAssignableOptLineClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 5),
    _NotAssignableOptLineClassName_Type()
)
notAssignableOptLineClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOptLineClassName.setStatus("current")
_NotAssignableOptLineAidString_Type = SnmpAdminString
_NotAssignableOptLineAidString_Object = MibTableColumn
notAssignableOptLineAidString = _NotAssignableOptLineAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 6),
    _NotAssignableOptLineAidString_Type()
)
notAssignableOptLineAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOptLineAidString.setStatus("current")
_NotAssignableOptLineParentId_Type = RowPointer
_NotAssignableOptLineParentId_Object = MibTableColumn
notAssignableOptLineParentId = _NotAssignableOptLineParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 7),
    _NotAssignableOptLineParentId_Type()
)
notAssignableOptLineParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOptLineParentId.setStatus("current")
_NotAssignableOptLineClass_Type = EntityClass
_NotAssignableOptLineClass_Object = MibTableColumn
notAssignableOptLineClass = _NotAssignableOptLineClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 9, 1, 8),
    _NotAssignableOptLineClass_Type()
)
notAssignableOptLineClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOptLineClass.setStatus("current")
_EndOfNotAssignableOptLineTable_Type = Integer32
_EndOfNotAssignableOptLineTable_Object = MibScalar
endOfNotAssignableOptLineTable = _EndOfNotAssignableOptLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 10),
    _EndOfNotAssignableOptLineTable_Type()
)
endOfNotAssignableOptLineTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableOptLineTable.setStatus("current")
_NotAssignableEnvTable_Object = MibTable
notAssignableEnvTable = _NotAssignableEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11)
)
if mibBuilder.loadTexts:
    notAssignableEnvTable.setStatus("current")
_NotAssignableEnvEntry_Object = MibTableRow
notAssignableEnvEntry = _NotAssignableEnvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1)
)
notAssignableEnvEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableEnvIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEnvIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEnvIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEnvIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableEnvClassName"),
)
if mibBuilder.loadTexts:
    notAssignableEnvEntry.setStatus("current")
_NotAssignableEnvIndexNo1_Type = Unsigned32
_NotAssignableEnvIndexNo1_Object = MibTableColumn
notAssignableEnvIndexNo1 = _NotAssignableEnvIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 1),
    _NotAssignableEnvIndexNo1_Type()
)
notAssignableEnvIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEnvIndexNo1.setStatus("current")
_NotAssignableEnvIndexNo2_Type = Unsigned32
_NotAssignableEnvIndexNo2_Object = MibTableColumn
notAssignableEnvIndexNo2 = _NotAssignableEnvIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 2),
    _NotAssignableEnvIndexNo2_Type()
)
notAssignableEnvIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEnvIndexNo2.setStatus("current")
_NotAssignableEnvIndexNo3_Type = Unsigned32
_NotAssignableEnvIndexNo3_Object = MibTableColumn
notAssignableEnvIndexNo3 = _NotAssignableEnvIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 3),
    _NotAssignableEnvIndexNo3_Type()
)
notAssignableEnvIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEnvIndexNo3.setStatus("current")
_NotAssignableEnvIndexNo4_Type = Unsigned32
_NotAssignableEnvIndexNo4_Object = MibTableColumn
notAssignableEnvIndexNo4 = _NotAssignableEnvIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 4),
    _NotAssignableEnvIndexNo4_Type()
)
notAssignableEnvIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEnvIndexNo4.setStatus("current")
_NotAssignableEnvClassName_Type = EntityClassName
_NotAssignableEnvClassName_Object = MibTableColumn
notAssignableEnvClassName = _NotAssignableEnvClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 5),
    _NotAssignableEnvClassName_Type()
)
notAssignableEnvClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableEnvClassName.setStatus("current")
_NotAssignableEnvAidString_Type = SnmpAdminString
_NotAssignableEnvAidString_Object = MibTableColumn
notAssignableEnvAidString = _NotAssignableEnvAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 6),
    _NotAssignableEnvAidString_Type()
)
notAssignableEnvAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEnvAidString.setStatus("current")
_NotAssignableEnvParentId_Type = RowPointer
_NotAssignableEnvParentId_Object = MibTableColumn
notAssignableEnvParentId = _NotAssignableEnvParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 7),
    _NotAssignableEnvParentId_Type()
)
notAssignableEnvParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEnvParentId.setStatus("current")
_NotAssignableEnvClass_Type = EntityClass
_NotAssignableEnvClass_Object = MibTableColumn
notAssignableEnvClass = _NotAssignableEnvClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 11, 1, 8),
    _NotAssignableEnvClass_Type()
)
notAssignableEnvClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableEnvClass.setStatus("current")
_EndOfNotAssignableEnvTable_Type = Integer32
_EndOfNotAssignableEnvTable_Object = MibScalar
endOfNotAssignableEnvTable = _EndOfNotAssignableEnvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 12),
    _EndOfNotAssignableEnvTable_Type()
)
endOfNotAssignableEnvTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableEnvTable.setStatus("current")
_NotAssignableExternalPortTable_Object = MibTable
notAssignableExternalPortTable = _NotAssignableExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13)
)
if mibBuilder.loadTexts:
    notAssignableExternalPortTable.setStatus("current")
_NotAssignableExternalPortEntry_Object = MibTableRow
notAssignableExternalPortEntry = _NotAssignableExternalPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1)
)
notAssignableExternalPortEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableExternalPortIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableExternalPortIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableExternalPortIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableExternalPortIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableExternalPortClassName"),
)
if mibBuilder.loadTexts:
    notAssignableExternalPortEntry.setStatus("current")
_NotAssignableExternalPortIndexNo1_Type = Unsigned32
_NotAssignableExternalPortIndexNo1_Object = MibTableColumn
notAssignableExternalPortIndexNo1 = _NotAssignableExternalPortIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 1),
    _NotAssignableExternalPortIndexNo1_Type()
)
notAssignableExternalPortIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableExternalPortIndexNo1.setStatus("current")
_NotAssignableExternalPortIndexNo2_Type = Unsigned32
_NotAssignableExternalPortIndexNo2_Object = MibTableColumn
notAssignableExternalPortIndexNo2 = _NotAssignableExternalPortIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 2),
    _NotAssignableExternalPortIndexNo2_Type()
)
notAssignableExternalPortIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableExternalPortIndexNo2.setStatus("current")
_NotAssignableExternalPortIndexNo3_Type = Unsigned32
_NotAssignableExternalPortIndexNo3_Object = MibTableColumn
notAssignableExternalPortIndexNo3 = _NotAssignableExternalPortIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 3),
    _NotAssignableExternalPortIndexNo3_Type()
)
notAssignableExternalPortIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableExternalPortIndexNo3.setStatus("current")
_NotAssignableExternalPortIndexNo4_Type = Unsigned32
_NotAssignableExternalPortIndexNo4_Object = MibTableColumn
notAssignableExternalPortIndexNo4 = _NotAssignableExternalPortIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 4),
    _NotAssignableExternalPortIndexNo4_Type()
)
notAssignableExternalPortIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableExternalPortIndexNo4.setStatus("current")
_NotAssignableExternalPortClassName_Type = EntityClassName
_NotAssignableExternalPortClassName_Object = MibTableColumn
notAssignableExternalPortClassName = _NotAssignableExternalPortClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 5),
    _NotAssignableExternalPortClassName_Type()
)
notAssignableExternalPortClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableExternalPortClassName.setStatus("current")
_NotAssignableExternalPortAidString_Type = SnmpAdminString
_NotAssignableExternalPortAidString_Object = MibTableColumn
notAssignableExternalPortAidString = _NotAssignableExternalPortAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 6),
    _NotAssignableExternalPortAidString_Type()
)
notAssignableExternalPortAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableExternalPortAidString.setStatus("current")
_NotAssignableExternalPortParentId_Type = RowPointer
_NotAssignableExternalPortParentId_Object = MibTableColumn
notAssignableExternalPortParentId = _NotAssignableExternalPortParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 7),
    _NotAssignableExternalPortParentId_Type()
)
notAssignableExternalPortParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableExternalPortParentId.setStatus("current")
_NotAssignableExternalPortClass_Type = EntityClass
_NotAssignableExternalPortClass_Object = MibTableColumn
notAssignableExternalPortClass = _NotAssignableExternalPortClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 13, 1, 8),
    _NotAssignableExternalPortClass_Type()
)
notAssignableExternalPortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableExternalPortClass.setStatus("current")
_EndOfNotAssignableExternalPortTable_Type = Integer32
_EndOfNotAssignableExternalPortTable_Object = MibScalar
endOfNotAssignableExternalPortTable = _EndOfNotAssignableExternalPortTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 14),
    _EndOfNotAssignableExternalPortTable_Type()
)
endOfNotAssignableExternalPortTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableExternalPortTable.setStatus("current")
_NotAssignableContainerTable_Object = MibTable
notAssignableContainerTable = _NotAssignableContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15)
)
if mibBuilder.loadTexts:
    notAssignableContainerTable.setStatus("current")
_NotAssignableContainerEntry_Object = MibTableRow
notAssignableContainerEntry = _NotAssignableContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1)
)
notAssignableContainerEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableContainerIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableContainerIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableContainerIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableContainerIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableContainerClassName"),
)
if mibBuilder.loadTexts:
    notAssignableContainerEntry.setStatus("current")
_NotAssignableContainerIndexNo1_Type = Unsigned32
_NotAssignableContainerIndexNo1_Object = MibTableColumn
notAssignableContainerIndexNo1 = _NotAssignableContainerIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 1),
    _NotAssignableContainerIndexNo1_Type()
)
notAssignableContainerIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableContainerIndexNo1.setStatus("current")
_NotAssignableContainerIndexNo2_Type = Unsigned32
_NotAssignableContainerIndexNo2_Object = MibTableColumn
notAssignableContainerIndexNo2 = _NotAssignableContainerIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 2),
    _NotAssignableContainerIndexNo2_Type()
)
notAssignableContainerIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableContainerIndexNo2.setStatus("current")
_NotAssignableContainerIndexNo3_Type = Unsigned32
_NotAssignableContainerIndexNo3_Object = MibTableColumn
notAssignableContainerIndexNo3 = _NotAssignableContainerIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 3),
    _NotAssignableContainerIndexNo3_Type()
)
notAssignableContainerIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableContainerIndexNo3.setStatus("current")
_NotAssignableContainerIndexNo4_Type = Unsigned32
_NotAssignableContainerIndexNo4_Object = MibTableColumn
notAssignableContainerIndexNo4 = _NotAssignableContainerIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 4),
    _NotAssignableContainerIndexNo4_Type()
)
notAssignableContainerIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableContainerIndexNo4.setStatus("current")
_NotAssignableContainerClassName_Type = EntityClassName
_NotAssignableContainerClassName_Object = MibTableColumn
notAssignableContainerClassName = _NotAssignableContainerClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 5),
    _NotAssignableContainerClassName_Type()
)
notAssignableContainerClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableContainerClassName.setStatus("current")
_NotAssignableContainerAidString_Type = SnmpAdminString
_NotAssignableContainerAidString_Object = MibTableColumn
notAssignableContainerAidString = _NotAssignableContainerAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 6),
    _NotAssignableContainerAidString_Type()
)
notAssignableContainerAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableContainerAidString.setStatus("current")
_NotAssignableContainerParentId_Type = RowPointer
_NotAssignableContainerParentId_Object = MibTableColumn
notAssignableContainerParentId = _NotAssignableContainerParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 7),
    _NotAssignableContainerParentId_Type()
)
notAssignableContainerParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableContainerParentId.setStatus("current")
_NotAssignableContainerClass_Type = EntityClass
_NotAssignableContainerClass_Object = MibTableColumn
notAssignableContainerClass = _NotAssignableContainerClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 15, 1, 8),
    _NotAssignableContainerClass_Type()
)
notAssignableContainerClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableContainerClass.setStatus("current")
_EndOfNotAssignableContainerTable_Type = Integer32
_EndOfNotAssignableContainerTable_Object = MibScalar
endOfNotAssignableContainerTable = _EndOfNotAssignableContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 16),
    _EndOfNotAssignableContainerTable_Type()
)
endOfNotAssignableContainerTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableContainerTable.setStatus("current")
_NotAssignableOpticalMuxTable_Object = MibTable
notAssignableOpticalMuxTable = _NotAssignableOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17)
)
if mibBuilder.loadTexts:
    notAssignableOpticalMuxTable.setStatus("current")
_NotAssignableOpticalMuxEntry_Object = MibTableRow
notAssignableOpticalMuxEntry = _NotAssignableOpticalMuxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1)
)
notAssignableOpticalMuxEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableOpticalMuxIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOpticalMuxIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOpticalMuxIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOpticalMuxIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableOpticalMuxClassName"),
)
if mibBuilder.loadTexts:
    notAssignableOpticalMuxEntry.setStatus("current")
_NotAssignableOpticalMuxIndexNo1_Type = Unsigned32
_NotAssignableOpticalMuxIndexNo1_Object = MibTableColumn
notAssignableOpticalMuxIndexNo1 = _NotAssignableOpticalMuxIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 1),
    _NotAssignableOpticalMuxIndexNo1_Type()
)
notAssignableOpticalMuxIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxIndexNo1.setStatus("current")
_NotAssignableOpticalMuxIndexNo2_Type = Unsigned32
_NotAssignableOpticalMuxIndexNo2_Object = MibTableColumn
notAssignableOpticalMuxIndexNo2 = _NotAssignableOpticalMuxIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 2),
    _NotAssignableOpticalMuxIndexNo2_Type()
)
notAssignableOpticalMuxIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxIndexNo2.setStatus("current")
_NotAssignableOpticalMuxIndexNo3_Type = Unsigned32
_NotAssignableOpticalMuxIndexNo3_Object = MibTableColumn
notAssignableOpticalMuxIndexNo3 = _NotAssignableOpticalMuxIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 3),
    _NotAssignableOpticalMuxIndexNo3_Type()
)
notAssignableOpticalMuxIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxIndexNo3.setStatus("current")
_NotAssignableOpticalMuxIndexNo4_Type = Unsigned32
_NotAssignableOpticalMuxIndexNo4_Object = MibTableColumn
notAssignableOpticalMuxIndexNo4 = _NotAssignableOpticalMuxIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 4),
    _NotAssignableOpticalMuxIndexNo4_Type()
)
notAssignableOpticalMuxIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxIndexNo4.setStatus("current")
_NotAssignableOpticalMuxClassName_Type = EntityClassName
_NotAssignableOpticalMuxClassName_Object = MibTableColumn
notAssignableOpticalMuxClassName = _NotAssignableOpticalMuxClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 5),
    _NotAssignableOpticalMuxClassName_Type()
)
notAssignableOpticalMuxClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxClassName.setStatus("current")
_NotAssignableOpticalMuxAidString_Type = SnmpAdminString
_NotAssignableOpticalMuxAidString_Object = MibTableColumn
notAssignableOpticalMuxAidString = _NotAssignableOpticalMuxAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 6),
    _NotAssignableOpticalMuxAidString_Type()
)
notAssignableOpticalMuxAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxAidString.setStatus("current")
_NotAssignableOpticalMuxParentId_Type = RowPointer
_NotAssignableOpticalMuxParentId_Object = MibTableColumn
notAssignableOpticalMuxParentId = _NotAssignableOpticalMuxParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 7),
    _NotAssignableOpticalMuxParentId_Type()
)
notAssignableOpticalMuxParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxParentId.setStatus("current")
_NotAssignableOpticalMuxClass_Type = EntityClass
_NotAssignableOpticalMuxClass_Object = MibTableColumn
notAssignableOpticalMuxClass = _NotAssignableOpticalMuxClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 17, 1, 8),
    _NotAssignableOpticalMuxClass_Type()
)
notAssignableOpticalMuxClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableOpticalMuxClass.setStatus("current")
_EndOfNotAssignableOpticalMuxTable_Type = Integer32
_EndOfNotAssignableOpticalMuxTable_Object = MibScalar
endOfNotAssignableOpticalMuxTable = _EndOfNotAssignableOpticalMuxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 18),
    _EndOfNotAssignableOpticalMuxTable_Type()
)
endOfNotAssignableOpticalMuxTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableOpticalMuxTable.setStatus("current")
_NotAssignableShelfConnTable_Object = MibTable
notAssignableShelfConnTable = _NotAssignableShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20)
)
if mibBuilder.loadTexts:
    notAssignableShelfConnTable.setStatus("current")
_NotAssignableShelfConnEntry_Object = MibTableRow
notAssignableShelfConnEntry = _NotAssignableShelfConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1)
)
notAssignableShelfConnEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "notAssignableShelfConnIndexNo1"),
    (0, "ADVA-FSPR7-MIB", "notAssignableShelfConnIndexNo2"),
    (0, "ADVA-FSPR7-MIB", "notAssignableShelfConnIndexNo3"),
    (0, "ADVA-FSPR7-MIB", "notAssignableShelfConnIndexNo4"),
    (0, "ADVA-FSPR7-MIB", "notAssignableShelfConnClassName"),
)
if mibBuilder.loadTexts:
    notAssignableShelfConnEntry.setStatus("current")
_NotAssignableShelfConnIndexNo1_Type = Unsigned32
_NotAssignableShelfConnIndexNo1_Object = MibTableColumn
notAssignableShelfConnIndexNo1 = _NotAssignableShelfConnIndexNo1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 1),
    _NotAssignableShelfConnIndexNo1_Type()
)
notAssignableShelfConnIndexNo1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableShelfConnIndexNo1.setStatus("current")
_NotAssignableShelfConnIndexNo2_Type = Unsigned32
_NotAssignableShelfConnIndexNo2_Object = MibTableColumn
notAssignableShelfConnIndexNo2 = _NotAssignableShelfConnIndexNo2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 2),
    _NotAssignableShelfConnIndexNo2_Type()
)
notAssignableShelfConnIndexNo2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableShelfConnIndexNo2.setStatus("current")
_NotAssignableShelfConnIndexNo3_Type = Unsigned32
_NotAssignableShelfConnIndexNo3_Object = MibTableColumn
notAssignableShelfConnIndexNo3 = _NotAssignableShelfConnIndexNo3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 3),
    _NotAssignableShelfConnIndexNo3_Type()
)
notAssignableShelfConnIndexNo3.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableShelfConnIndexNo3.setStatus("current")
_NotAssignableShelfConnIndexNo4_Type = Unsigned32
_NotAssignableShelfConnIndexNo4_Object = MibTableColumn
notAssignableShelfConnIndexNo4 = _NotAssignableShelfConnIndexNo4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 4),
    _NotAssignableShelfConnIndexNo4_Type()
)
notAssignableShelfConnIndexNo4.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableShelfConnIndexNo4.setStatus("current")
_NotAssignableShelfConnClassName_Type = EntityClassName
_NotAssignableShelfConnClassName_Object = MibTableColumn
notAssignableShelfConnClassName = _NotAssignableShelfConnClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 5),
    _NotAssignableShelfConnClassName_Type()
)
notAssignableShelfConnClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    notAssignableShelfConnClassName.setStatus("current")
_NotAssignableShelfConnAidString_Type = SnmpAdminString
_NotAssignableShelfConnAidString_Object = MibTableColumn
notAssignableShelfConnAidString = _NotAssignableShelfConnAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 6),
    _NotAssignableShelfConnAidString_Type()
)
notAssignableShelfConnAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableShelfConnAidString.setStatus("current")
_NotAssignableShelfConnParentId_Type = RowPointer
_NotAssignableShelfConnParentId_Object = MibTableColumn
notAssignableShelfConnParentId = _NotAssignableShelfConnParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 7),
    _NotAssignableShelfConnParentId_Type()
)
notAssignableShelfConnParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableShelfConnParentId.setStatus("current")
_NotAssignableShelfConnClass_Type = EntityClass
_NotAssignableShelfConnClass_Object = MibTableColumn
notAssignableShelfConnClass = _NotAssignableShelfConnClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 20, 1, 8),
    _NotAssignableShelfConnClass_Type()
)
notAssignableShelfConnClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    notAssignableShelfConnClass.setStatus("current")
_EndOfNotAssignableShelfConnTable_Type = Integer32
_EndOfNotAssignableShelfConnTable_Object = MibScalar
endOfNotAssignableShelfConnTable = _EndOfNotAssignableShelfConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 21),
    _EndOfNotAssignableShelfConnTable_Type()
)
endOfNotAssignableShelfConnTable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignableShelfConnTable.setStatus("current")
_EndOfNotAssignables_Type = Integer32
_EndOfNotAssignables_Object = MibScalar
endOfNotAssignables = _EndOfNotAssignables_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 9, 10000),
    _EndOfNotAssignables_Type()
)
endOfNotAssignables.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    endOfNotAssignables.setStatus("current")
_Inventory_ObjectIdentity = ObjectIdentity
inventory = _Inventory_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10)
)
_AdvaInventoryTable_Object = MibTable
advaInventoryTable = _AdvaInventoryTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1)
)
if mibBuilder.loadTexts:
    advaInventoryTable.setStatus("current")
_AdvaInventoryEntry_Object = MibTableRow
advaInventoryEntry = _AdvaInventoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1)
)
advaInventoryEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "advaInventoryShelfNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventorySlotNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryPortNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryExtNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryClassName"),
)
if mibBuilder.loadTexts:
    advaInventoryEntry.setStatus("current")
_AdvaInventoryShelfNo_Type = Unsigned32
_AdvaInventoryShelfNo_Object = MibTableColumn
advaInventoryShelfNo = _AdvaInventoryShelfNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 1),
    _AdvaInventoryShelfNo_Type()
)
advaInventoryShelfNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    advaInventoryShelfNo.setStatus("current")
_AdvaInventorySlotNo_Type = Unsigned32
_AdvaInventorySlotNo_Object = MibTableColumn
advaInventorySlotNo = _AdvaInventorySlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 2),
    _AdvaInventorySlotNo_Type()
)
advaInventorySlotNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    advaInventorySlotNo.setStatus("current")
_AdvaInventoryPortNo_Type = Unsigned32
_AdvaInventoryPortNo_Object = MibTableColumn
advaInventoryPortNo = _AdvaInventoryPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 3),
    _AdvaInventoryPortNo_Type()
)
advaInventoryPortNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    advaInventoryPortNo.setStatus("current")
_AdvaInventoryExtNo_Type = Unsigned32
_AdvaInventoryExtNo_Object = MibTableColumn
advaInventoryExtNo = _AdvaInventoryExtNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 4),
    _AdvaInventoryExtNo_Type()
)
advaInventoryExtNo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    advaInventoryExtNo.setStatus("current")
_AdvaInventoryClassName_Type = EntityClassName
_AdvaInventoryClassName_Object = MibTableColumn
advaInventoryClassName = _AdvaInventoryClassName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 5),
    _AdvaInventoryClassName_Type()
)
advaInventoryClassName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    advaInventoryClassName.setStatus("current")
_AdvaInventoryAidString_Type = SnmpAdminString
_AdvaInventoryAidString_Object = MibTableColumn
advaInventoryAidString = _AdvaInventoryAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 6),
    _AdvaInventoryAidString_Type()
)
advaInventoryAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryAidString.setStatus("current")
_AdvaInventoryUnitName_Type = SnmpAdminString
_AdvaInventoryUnitName_Object = MibTableColumn
advaInventoryUnitName = _AdvaInventoryUnitName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 7),
    _AdvaInventoryUnitName_Type()
)
advaInventoryUnitName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryUnitName.setStatus("current")
_AdvaInventoryFirmwarePackageRev_Type = SnmpAdminString
_AdvaInventoryFirmwarePackageRev_Object = MibTableColumn
advaInventoryFirmwarePackageRev = _AdvaInventoryFirmwarePackageRev_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 8),
    _AdvaInventoryFirmwarePackageRev_Type()
)
advaInventoryFirmwarePackageRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryFirmwarePackageRev.setStatus("current")
_AdvaInventoryHardwareRev_Type = SnmpAdminString
_AdvaInventoryHardwareRev_Object = MibTableColumn
advaInventoryHardwareRev = _AdvaInventoryHardwareRev_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 9),
    _AdvaInventoryHardwareRev_Type()
)
advaInventoryHardwareRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryHardwareRev.setStatus("current")
_AdvaInventorySoftwareRev_Type = SnmpAdminString
_AdvaInventorySoftwareRev_Object = MibTableColumn
advaInventorySoftwareRev = _AdvaInventorySoftwareRev_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 10),
    _AdvaInventorySoftwareRev_Type()
)
advaInventorySoftwareRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventorySoftwareRev.setStatus("current")
_AdvaInventoryFpgaRev_Type = SnmpAdminString
_AdvaInventoryFpgaRev_Object = MibTableColumn
advaInventoryFpgaRev = _AdvaInventoryFpgaRev_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 11),
    _AdvaInventoryFpgaRev_Type()
)
advaInventoryFpgaRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryFpgaRev.setStatus("current")
_AdvaInventorySerialNum_Type = SnmpAdminString
_AdvaInventorySerialNum_Object = MibTableColumn
advaInventorySerialNum = _AdvaInventorySerialNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 12),
    _AdvaInventorySerialNum_Type()
)
advaInventorySerialNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventorySerialNum.setStatus("current")
_AdvaInventoryPartnumber_Type = SnmpAdminString
_AdvaInventoryPartnumber_Object = MibTableColumn
advaInventoryPartnumber = _AdvaInventoryPartnumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 13),
    _AdvaInventoryPartnumber_Type()
)
advaInventoryPartnumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryPartnumber.setStatus("current")
_AdvaInventoryCleiCode_Type = SnmpAdminString
_AdvaInventoryCleiCode_Object = MibTableColumn
advaInventoryCleiCode = _AdvaInventoryCleiCode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 14),
    _AdvaInventoryCleiCode_Type()
)
advaInventoryCleiCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryCleiCode.setStatus("current")
_AdvaInventoryVendorId_Type = SnmpAdminString
_AdvaInventoryVendorId_Object = MibTableColumn
advaInventoryVendorId = _AdvaInventoryVendorId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 15),
    _AdvaInventoryVendorId_Type()
)
advaInventoryVendorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryVendorId.setStatus("current")
_AdvaInventoryType_Type = EntityType
_AdvaInventoryType_Object = MibTableColumn
advaInventoryType = _AdvaInventoryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 16),
    _AdvaInventoryType_Type()
)
advaInventoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryType.setStatus("current")
_AdvaInventoryUniversalSerialIdent_Type = SnmpAdminString
_AdvaInventoryUniversalSerialIdent_Object = MibTableColumn
advaInventoryUniversalSerialIdent = _AdvaInventoryUniversalSerialIdent_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 17),
    _AdvaInventoryUniversalSerialIdent_Type()
)
advaInventoryUniversalSerialIdent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryUniversalSerialIdent.setStatus("current")
_AdvaInventoryGradeInventory_Type = Grade
_AdvaInventoryGradeInventory_Object = MibTableColumn
advaInventoryGradeInventory = _AdvaInventoryGradeInventory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 18),
    _AdvaInventoryGradeInventory_Type()
)
advaInventoryGradeInventory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryGradeInventory.setStatus("current")
_AdvaInventoryClass_Type = EntityClass
_AdvaInventoryClass_Object = MibTableColumn
advaInventoryClass = _AdvaInventoryClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 19),
    _AdvaInventoryClass_Type()
)
advaInventoryClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryClass.setStatus("current")
_AdvaInventoryInventoryDescription_Type = SnmpAdminString
_AdvaInventoryInventoryDescription_Object = MibTableColumn
advaInventoryInventoryDescription = _AdvaInventoryInventoryDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 20),
    _AdvaInventoryInventoryDescription_Type()
)
advaInventoryInventoryDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryInventoryDescription.setStatus("current")
_AdvaInventoryCapabilityLevel_Type = FspR7CapInventory
_AdvaInventoryCapabilityLevel_Object = MibTableColumn
advaInventoryCapabilityLevel = _AdvaInventoryCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 21),
    _AdvaInventoryCapabilityLevel_Type()
)
advaInventoryCapabilityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryCapabilityLevel.setStatus("current")
_AdvaInventoryCfSerialNum_Type = SnmpAdminString
_AdvaInventoryCfSerialNum_Object = MibTableColumn
advaInventoryCfSerialNum = _AdvaInventoryCfSerialNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 22),
    _AdvaInventoryCfSerialNum_Type()
)
advaInventoryCfSerialNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryCfSerialNum.setStatus("current")
_AdvaInventoryCfModel_Type = SnmpAdminString
_AdvaInventoryCfModel_Object = MibTableColumn
advaInventoryCfModel = _AdvaInventoryCfModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 1, 1, 23),
    _AdvaInventoryCfModel_Type()
)
advaInventoryCfModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advaInventoryCfModel.setStatus("current")
_UnassignedInventoryTable_Object = MibTable
unassignedInventoryTable = _UnassignedInventoryTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2)
)
if mibBuilder.loadTexts:
    unassignedInventoryTable.setStatus("current")
_UnassignedInventoryEntry_Object = MibTableRow
unassignedInventoryEntry = _UnassignedInventoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1)
)
unassignedInventoryEntry.setIndexNames(
    (0, "ADVA-FSPR7-MIB", "advaInventoryShelfNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventorySlotNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryPortNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryExtNo"),
    (0, "ADVA-FSPR7-MIB", "advaInventoryClassName"),
)
if mibBuilder.loadTexts:
    unassignedInventoryEntry.setStatus("current")
_UnassignedInventoryAidString_Type = SnmpAdminString
_UnassignedInventoryAidString_Object = MibTableColumn
unassignedInventoryAidString = _UnassignedInventoryAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 1),
    _UnassignedInventoryAidString_Type()
)
unassignedInventoryAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryAidString.setStatus("current")
_UnassignedInventoryType_Type = EntityType
_UnassignedInventoryType_Object = MibTableColumn
unassignedInventoryType = _UnassignedInventoryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 2),
    _UnassignedInventoryType_Type()
)
unassignedInventoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryType.setStatus("current")
_UnassignedInventoryParentId_Type = RowPointer
_UnassignedInventoryParentId_Object = MibTableColumn
unassignedInventoryParentId = _UnassignedInventoryParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 3),
    _UnassignedInventoryParentId_Type()
)
unassignedInventoryParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryParentId.setStatus("current")
_UnassignedInventoryClass_Type = EntityClass
_UnassignedInventoryClass_Object = MibTableColumn
unassignedInventoryClass = _UnassignedInventoryClass_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 4),
    _UnassignedInventoryClass_Type()
)
unassignedInventoryClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryClass.setStatus("current")
_UnassignedInventoryAssignState_Type = FspR7EquipmentAssignState
_UnassignedInventoryAssignState_Object = MibTableColumn
unassignedInventoryAssignState = _UnassignedInventoryAssignState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 5),
    _UnassignedInventoryAssignState_Type()
)
unassignedInventoryAssignState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryAssignState.setStatus("current")
_UnassignedInventoryOneIndex_Type = Unsigned32
_UnassignedInventoryOneIndex_Object = MibTableColumn
unassignedInventoryOneIndex = _UnassignedInventoryOneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 6),
    _UnassignedInventoryOneIndex_Type()
)
unassignedInventoryOneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryOneIndex.setStatus("current")
_UnassignedInventoryTableId_Type = RowPointer
_UnassignedInventoryTableId_Object = MibTableColumn
unassignedInventoryTableId = _UnassignedInventoryTableId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 7),
    _UnassignedInventoryTableId_Type()
)
unassignedInventoryTableId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryTableId.setStatus("current")
_UnassignedInventoryMtosiParentId_Type = RowPointer
_UnassignedInventoryMtosiParentId_Object = MibTableColumn
unassignedInventoryMtosiParentId = _UnassignedInventoryMtosiParentId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 10, 2, 1, 8),
    _UnassignedInventoryMtosiParentId_Type()
)
unassignedInventoryMtosiParentId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unassignedInventoryMtosiParentId.setStatus("current")

# Managed Objects groups


# Notification objects

fspR7CreationTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 1)
)
if mibBuilder.loadTexts:
    fspR7CreationTrap.setStatus(
        "current"
    )

fspR7DeletionTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 2)
)
if mibBuilder.loadTexts:
    fspR7DeletionTrap.setStatus(
        "current"
    )

fspR7StateChangeTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 3)
)
if mibBuilder.loadTexts:
    fspR7StateChangeTrap.setStatus(
        "current"
    )

fspR7ObjectChangeTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 4)
)
if mibBuilder.loadTexts:
    fspR7ObjectChangeTrap.setStatus(
        "current"
    )

alarmTerminalLoopback = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 5)
)
if mibBuilder.loadTexts:
    alarmTerminalLoopback.setStatus(
        "current"
    )

alarmOosDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 6)
)
if mibBuilder.loadTexts:
    alarmOosDisabled.setStatus(
        "current"
    )

alarmOosManagement = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 7)
)
if mibBuilder.loadTexts:
    alarmOosManagement.setStatus(
        "current"
    )

alarmOosMaintenance = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 8)
)
if mibBuilder.loadTexts:
    alarmOosMaintenance.setStatus(
        "current"
    )

alarmOosAins = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 9)
)
if mibBuilder.loadTexts:
    alarmOosAins.setStatus(
        "current"
    )

alarmRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10)
)
if mibBuilder.loadTexts:
    alarmRemoved.setStatus(
        "current"
    )

alarmLossOfSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 11)
)
if mibBuilder.loadTexts:
    alarmLossOfSignal.setStatus(
        "current"
    )

alarmOptInputPwrReceivedTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 12)
)
if mibBuilder.loadTexts:
    alarmOptInputPwrReceivedTooLow.setStatus(
        "current"
    )

alarmOptInputPwrReceivedTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 13)
)
if mibBuilder.loadTexts:
    alarmOptInputPwrReceivedTooHigh.setStatus(
        "current"
    )

alarmLaserTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 14)
)
if mibBuilder.loadTexts:
    alarmLaserTemperatureTooHigh.setStatus(
        "current"
    )

alarmLaserTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 15)
)
if mibBuilder.loadTexts:
    alarmLaserTemperatureTooLow.setStatus(
        "current"
    )

alarmOptOutputPowerTransTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 16)
)
if mibBuilder.loadTexts:
    alarmOptOutputPowerTransTooLow.setStatus(
        "current"
    )

alarmOptOutputPowerTransTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 17)
)
if mibBuilder.loadTexts:
    alarmOptOutputPowerTransTooHigh.setStatus(
        "current"
    )

alarmAutoShutdownToHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 18)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownToHighTemp.setStatus(
        "current"
    )

alarmAutoShutdownToHighTxPwr = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 19)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownToHighTxPwr.setStatus(
        "current"
    )

alarmLaserEndOfLife = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 20)
)
if mibBuilder.loadTexts:
    alarmLaserEndOfLife.setStatus(
        "current"
    )

alarmServerSignalFailureVf = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 21)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureVf.setStatus(
        "current"
    )

alarmEqualizationProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 22)
)
if mibBuilder.loadTexts:
    alarmEqualizationProgress.setStatus(
        "current"
    )

alarmUPortFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 23)
)
if mibBuilder.loadTexts:
    alarmUPortFailure.setStatus(
        "current"
    )

alarmAutoShutdownBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 24)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownBlock.setStatus(
        "current"
    )

alarmAutoPowerShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 25)
)
if mibBuilder.loadTexts:
    alarmAutoPowerShutdown.setStatus(
        "current"
    )

alarmConfOutPowerTransTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 26)
)
if mibBuilder.loadTexts:
    alarmConfOutPowerTransTooHigh.setStatus(
        "current"
    )

alarmConfOutPowerTransTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 27)
)
if mibBuilder.loadTexts:
    alarmConfOutPowerTransTooLow.setStatus(
        "current"
    )

alarmOptSignalFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 28)
)
if mibBuilder.loadTexts:
    alarmOptSignalFailure.setStatus(
        "current"
    )

alarmDsbdChannelPowerTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 29)
)
if mibBuilder.loadTexts:
    alarmDsbdChannelPowerTooHigh.setStatus(
        "current"
    )

alarmLossOfSignalCPort = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 30)
)
if mibBuilder.loadTexts:
    alarmLossOfSignalCPort.setStatus(
        "current"
    )

alarmLossOfSignalNPort = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 31)
)
if mibBuilder.loadTexts:
    alarmLossOfSignalNPort.setStatus(
        "current"
    )

alarmOutputPowerFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 32)
)
if mibBuilder.loadTexts:
    alarmOutputPowerFault.setStatus(
        "current"
    )

alarmEqlzAdjust = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 33)
)
if mibBuilder.loadTexts:
    alarmEqlzAdjust.setStatus(
        "current"
    )

alarmAmpFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 34)
)
if mibBuilder.loadTexts:
    alarmAmpFailure.setStatus(
        "current"
    )

alarmEqptProvMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 35)
)
if mibBuilder.loadTexts:
    alarmEqptProvMismatch.setStatus(
        "current"
    )

alarmBackreflectionTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 36)
)
if mibBuilder.loadTexts:
    alarmBackreflectionTooHigh.setStatus(
        "current"
    )

transientEqlzStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 37)
)
if mibBuilder.loadTexts:
    transientEqlzStart.setStatus(
        "current"
    )

transientEqlzFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 38)
)
if mibBuilder.loadTexts:
    transientEqlzFailed.setStatus(
        "current"
    )

transientEqlzCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 39)
)
if mibBuilder.loadTexts:
    transientEqlzCompleted.setStatus(
        "current"
    )

transientEqlzRequestDenied = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 40)
)
if mibBuilder.loadTexts:
    transientEqlzRequestDenied.setStatus(
        "current"
    )

transientEqlzNotRequired = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 41)
)
if mibBuilder.loadTexts:
    transientEqlzNotRequired.setStatus(
        "current"
    )

transientEqlzProcessPassed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 42)
)
if mibBuilder.loadTexts:
    transientEqlzProcessPassed.setStatus(
        "current"
    )

transientEqlzProcessWait = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 43)
)
if mibBuilder.loadTexts:
    transientEqlzProcessWait.setStatus(
        "current"
    )

transientPmSnapshotStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 44)
)
if mibBuilder.loadTexts:
    transientPmSnapshotStarted.setStatus(
        "current"
    )

transientEqlzAuto = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 45)
)
if mibBuilder.loadTexts:
    transientEqlzAuto.setStatus(
        "current"
    )

transientEqlzRamanAdjust = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 46)
)
if mibBuilder.loadTexts:
    transientEqlzRamanAdjust.setStatus(
        "current"
    )

alarmFiberConnLos = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 48)
)
if mibBuilder.loadTexts:
    alarmFiberConnLos.setStatus(
        "current"
    )

alarmFiberConnOptFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 49)
)
if mibBuilder.loadTexts:
    alarmFiberConnOptFault.setStatus(
        "current"
    )

alarmFiberConnInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 50)
)
if mibBuilder.loadTexts:
    alarmFiberConnInvalid.setStatus(
        "current"
    )

alarmFiberConnMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 51)
)
if mibBuilder.loadTexts:
    alarmFiberConnMismatch.setStatus(
        "current"
    )

alarmFiberConnCommError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 52)
)
if mibBuilder.loadTexts:
    alarmFiberConnCommError.setStatus(
        "current"
    )

alarmFiberConnProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 53)
)
if mibBuilder.loadTexts:
    alarmFiberConnProtocolFailure.setStatus(
        "current"
    )

alarmFiberConnDataFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 54)
)
if mibBuilder.loadTexts:
    alarmFiberConnDataFailure.setStatus(
        "current"
    )

alarmFiberAttenuationHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 55)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationHigh.setStatus(
        "current"
    )

transientFiberConnStatChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 56)
)
if mibBuilder.loadTexts:
    transientFiberConnStatChange.setStatus(
        "current"
    )

alarmLaserBiasCurrAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 57)
)
if mibBuilder.loadTexts:
    alarmLaserBiasCurrAbnormal.setStatus(
        "current"
    )

alarmFiberConnInvalidTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 58)
)
if mibBuilder.loadTexts:
    alarmFiberConnInvalidTx.setStatus(
        "current"
    )

alarmFiberConnMismatchTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 59)
)
if mibBuilder.loadTexts:
    alarmFiberConnMismatchTx.setStatus(
        "current"
    )

alarmFiberAttenuationHighTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 60)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationHighTx.setStatus(
        "current"
    )

alarmLaserFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 61)
)
if mibBuilder.loadTexts:
    alarmLaserFailure.setStatus(
        "current"
    )

alarmLossOfReceiverClockRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 62)
)
if mibBuilder.loadTexts:
    alarmLossOfReceiverClockRecovery.setStatus(
        "current"
    )

alarmFiberAttenuationCond = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 63)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationCond.setStatus(
        "current"
    )

alarmChannelMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 64)
)
if mibBuilder.loadTexts:
    alarmChannelMismatch.setStatus(
        "current"
    )

alarmAlarmIndicationSignalLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 65)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalLine.setStatus(
        "current"
    )

alarmAlarmIndicationSignalLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 66)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalLowerOrderPath.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 67)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOdu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 68)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOpu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 69)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOtu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 70)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalHigherOrderPath.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 71)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmA.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 72)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmB.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 73)
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmC.setStatus(
        "current"
    )

alarmVirtualChannelAis = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 74)
)
if mibBuilder.loadTexts:
    alarmVirtualChannelAis.setStatus(
        "current"
    )

alarmAmplifierAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 75)
)
if mibBuilder.loadTexts:
    alarmAmplifierAbnormal.setStatus(
        "current"
    )

alarmAutomaticPowerReduction = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 76)
)
if mibBuilder.loadTexts:
    alarmAutomaticPowerReduction.setStatus(
        "current"
    )

alarmAutomaticPowerReductionForEyeSafety = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 77)
)
if mibBuilder.loadTexts:
    alarmAutomaticPowerReductionForEyeSafety.setStatus(
        "current"
    )

transientAlpSettingFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 78)
)
if mibBuilder.loadTexts:
    transientAlpSettingFinished.setStatus(
        "current"
    )

transientAlpSettingStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 79)
)
if mibBuilder.loadTexts:
    transientAlpSettingStarted.setStatus(
        "current"
    )

alarmApsConfigMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 80)
)
if mibBuilder.loadTexts:
    alarmApsConfigMismatch.setStatus(
        "current"
    )

alarmApsProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 81)
)
if mibBuilder.loadTexts:
    alarmApsProtocolFailure.setStatus(
        "current"
    )

alarmAseLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 82)
)
if mibBuilder.loadTexts:
    alarmAseLow.setStatus(
        "current"
    )

alarmAseTableGenFailLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 83)
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailLow.setStatus(
        "current"
    )

alarmAseTableGenFailHighBackreflection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 84)
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailHighBackreflection.setStatus(
        "current"
    )

alarmAseTableGenFailOscMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 85)
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailOscMissing.setStatus(
        "current"
    )

alarmAseTableGenFailPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 86)
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailPilot.setStatus(
        "current"
    )

alarmAseTableGenFailSignalinput = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 87)
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailSignalinput.setStatus(
        "current"
    )

alarmAseTableNotAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 88)
)
if mibBuilder.loadTexts:
    alarmAseTableNotAvailable.setStatus(
        "current"
    )

alarmAseTableGenProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 89)
)
if mibBuilder.loadTexts:
    alarmAseTableGenProgress.setStatus(
        "current"
    )

alarmEncryptionPortAuthPasswdMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 90)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortAuthPasswdMissing.setStatus(
        "current"
    )

transientCryptoAuthPasswdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 91)
)
if mibBuilder.loadTexts:
    transientCryptoAuthPasswdChanged.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 92)
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOdu.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 93)
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOtu.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 94)
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmA.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 95)
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmB.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 96)
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmC.setStatus(
        "current"
    )

alarmTopologyDataCalculationInProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 97)
)
if mibBuilder.loadTexts:
    alarmTopologyDataCalculationInProgress.setStatus(
        "current"
    )

transientDispersionCompFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 98)
)
if mibBuilder.loadTexts:
    transientDispersionCompFailed.setStatus(
        "current"
    )

alarmDispertionTunningCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 99)
)
if mibBuilder.loadTexts:
    alarmDispertionTunningCondition.setStatus(
        "current"
    )

alarmLossOfCharSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 100)
)
if mibBuilder.loadTexts:
    alarmLossOfCharSync.setStatus(
        "current"
    )

alarmLossOfCharSyncFromFarEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 101)
)
if mibBuilder.loadTexts:
    alarmLossOfCharSyncFromFarEnd.setStatus(
        "current"
    )

transientCryptoAuthPasswdInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 102)
)
if mibBuilder.loadTexts:
    transientCryptoAuthPasswdInvalid.setStatus(
        "current"
    )

alarmEncryptionPortEncryptionSwitchOffEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 103)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortEncryptionSwitchOffEnabled.setStatus(
        "current"
    )

alarmEncryptionModuleCryPasswdMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 104)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleCryPasswdMissing.setStatus(
        "current"
    )

transientCryptoPasswdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 105)
)
if mibBuilder.loadTexts:
    transientCryptoPasswdChanged.setStatus(
        "current"
    )

transientCryptoRtf = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 106)
)
if mibBuilder.loadTexts:
    transientCryptoRtf.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 107)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestStarted.setStatus(
        "current"
    )

alarmEncryptionPortEncryptionSwitchedOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 108)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortEncryptionSwitchedOff.setStatus(
        "current"
    )

alarmOpuClientSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 109)
)
if mibBuilder.loadTexts:
    alarmOpuClientSignalFail.setStatus(
        "current"
    )

alarmDatabaseMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 110)
)
if mibBuilder.loadTexts:
    alarmDatabaseMismatch.setStatus(
        "current"
    )

alarmDatabaseFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 111)
)
if mibBuilder.loadTexts:
    alarmDatabaseFailure.setStatus(
        "current"
    )

alarmDatabaseNcuMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 112)
)
if mibBuilder.loadTexts:
    alarmDatabaseNcuMismatch.setStatus(
        "current"
    )

alarmDbReplicationIncompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 113)
)
if mibBuilder.loadTexts:
    alarmDbReplicationIncompleted.setStatus(
        "current"
    )

alarmDatabaseVersionMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 114)
)
if mibBuilder.loadTexts:
    alarmDatabaseVersionMismatch.setStatus(
        "current"
    )

alarmXfpDecisionThresSetFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 115)
)
if mibBuilder.loadTexts:
    alarmXfpDecisionThresSetFailed.setStatus(
        "current"
    )

alarmDuplexLinkFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 116)
)
if mibBuilder.loadTexts:
    alarmDuplexLinkFailure.setStatus(
        "current"
    )

transientFarEndDyingGasp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 117)
)
if mibBuilder.loadTexts:
    transientFarEndDyingGasp.setStatus(
        "current"
    )

alarmSingleFanFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 118)
)
if mibBuilder.loadTexts:
    alarmSingleFanFailure.setStatus(
        "current"
    )

alarmMultipleFanFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 119)
)
if mibBuilder.loadTexts:
    alarmMultipleFanFailure.setStatus(
        "current"
    )

alarmLossOfSignalTransmitter = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 120)
)
if mibBuilder.loadTexts:
    alarmLossOfSignalTransmitter.setStatus(
        "current"
    )

transientFarEndChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 121)
)
if mibBuilder.loadTexts:
    transientFarEndChanged.setStatus(
        "current"
    )

alarmFarEndIpAddressUnknown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 122)
)
if mibBuilder.loadTexts:
    alarmFarEndIpAddressUnknown.setStatus(
        "current"
    )

alarmFarEndCommFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 123)
)
if mibBuilder.loadTexts:
    alarmFarEndCommFailure.setStatus(
        "current"
    )

transientTopologyDataInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 124)
)
if mibBuilder.loadTexts:
    transientTopologyDataInvalid.setStatus(
        "current"
    )

alarmBackupForcedToHalt = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 125)
)
if mibBuilder.loadTexts:
    alarmBackupForcedToHalt.setStatus(
        "current"
    )

transientForcedReboot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 126)
)
if mibBuilder.loadTexts:
    transientForcedReboot.setStatus(
        "current"
    )

alarmFacilityForcedOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 127)
)
if mibBuilder.loadTexts:
    alarmFacilityForcedOn.setStatus(
        "current"
    )

alarmFwdAseTableFailPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 128)
)
if mibBuilder.loadTexts:
    alarmFwdAseTableFailPilot.setStatus(
        "current"
    )

alarmFwdAseTableOnPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 129)
)
if mibBuilder.loadTexts:
    alarmFwdAseTableOnPilot.setStatus(
        "current"
    )

transientCryptoFwpUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 130)
)
if mibBuilder.loadTexts:
    transientCryptoFwpUpdate.setStatus(
        "current"
    )

alarmEncryptionModuleFwpUpdateEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 131)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleFwpUpdateEnabled.setStatus(
        "current"
    )

alarmFwpMismatchDownloadNotServiceAffecting = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 132)
)
if mibBuilder.loadTexts:
    alarmFwpMismatchDownloadNotServiceAffecting.setStatus(
        "current"
    )

alarmFwpMismatchDownloadServiceAffecting = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 133)
)
if mibBuilder.loadTexts:
    alarmFwpMismatchDownloadServiceAffecting.setStatus(
        "current"
    )

transientCryptoFwpRevChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 134)
)
if mibBuilder.loadTexts:
    transientCryptoFwpRevChanged.setStatus(
        "current"
    )

alarmGainTiltNotSettable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 135)
)
if mibBuilder.loadTexts:
    alarmGainTiltNotSettable.setStatus(
        "current"
    )

alarmHighBer = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 136)
)
if mibBuilder.loadTexts:
    alarmHighBer.setStatus(
        "current"
    )

alarmReceiverOverloadProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 137)
)
if mibBuilder.loadTexts:
    alarmReceiverOverloadProtection.setStatus(
        "current"
    )

alarmHwInitializing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 138)
)
if mibBuilder.loadTexts:
    alarmHwInitializing.setStatus(
        "current"
    )

alarmHwOprReachedHT = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 139)
)
if mibBuilder.loadTexts:
    alarmHwOprReachedHT.setStatus(
        "current"
    )

alarmHwDegrade = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 140)
)
if mibBuilder.loadTexts:
    alarmHwDegrade.setStatus(
        "current"
    )

alarmHwFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 141)
)
if mibBuilder.loadTexts:
    alarmHwFailure.setStatus(
        "current"
    )

alarmSwitchtoProtectionInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 142)
)
if mibBuilder.loadTexts:
    alarmSwitchtoProtectionInhibited.setStatus(
        "current"
    )

alarmSwitchtoWorkingInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 143)
)
if mibBuilder.loadTexts:
    alarmSwitchtoWorkingInhibited.setStatus(
        "current"
    )

transientIntrusionRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 144)
)
if mibBuilder.loadTexts:
    transientIntrusionRx.setStatus(
        "current"
    )

transientIntrusionTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 145)
)
if mibBuilder.loadTexts:
    transientIntrusionTx.setStatus(
        "current"
    )

transientEncryptionPortSingleKeyExchgFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 146)
)
if mibBuilder.loadTexts:
    transientEncryptionPortSingleKeyExchgFailed.setStatus(
        "current"
    )

transientCryptoKeyExchgFailCondClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 147)
)
if mibBuilder.loadTexts:
    transientCryptoKeyExchgFailCondClr.setStatus(
        "current"
    )

alarmEncryptionPortKeyInitExchgMissed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 148)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortKeyInitExchgMissed.setStatus(
        "current"
    )

alarmEncryptionPortMaxKeyExchgFailuresReachedIs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 149)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortMaxKeyExchgFailuresReachedIs.setStatus(
        "current"
    )

alarmEncryptionPortMaxKeyExchgFailuresReachedOos = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 150)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortMaxKeyExchgFailuresReachedOos.setStatus(
        "current"
    )

alarmEncryptionPortKeyExchangedForced = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 151)
)
if mibBuilder.loadTexts:
    alarmEncryptionPortKeyExchangedForced.setStatus(
        "current"
    )

alarmLaserOnDelay = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 152)
)
if mibBuilder.loadTexts:
    alarmLaserOnDelay.setStatus(
        "current"
    )

alarmLockedDefectOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 153)
)
if mibBuilder.loadTexts:
    alarmLockedDefectOdu.setStatus(
        "current"
    )

alarmLockedDefectOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 154)
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmA.setStatus(
        "current"
    )

alarmLockedDefectOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 155)
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmB.setStatus(
        "current"
    )

alarmLockedDefectOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 156)
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmC.setStatus(
        "current"
    )

alarmLinkControlProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 157)
)
if mibBuilder.loadTexts:
    alarmLinkControlProtocolFailure.setStatus(
        "current"
    )

alarmLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 158)
)
if mibBuilder.loadTexts:
    alarmLinkDown.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 159)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisLine.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 160)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisOdu.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 161)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisOpu.setStatus(
        "current"
    )

alarmClientFailForwarding = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 162)
)
if mibBuilder.loadTexts:
    alarmClientFailForwarding.setStatus(
        "current"
    )

alarmAutoShutdownAls = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 163)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownAls.setStatus(
        "current"
    )

alarmAutoAmpShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 164)
)
if mibBuilder.loadTexts:
    alarmAutoAmpShutdown.setStatus(
        "current"
    )

alarmAutoShutdownAmpAps = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 165)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownAmpAps.setStatus(
        "current"
    )

alarmAseTableBuild = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 166)
)
if mibBuilder.loadTexts:
    alarmAseTableBuild.setStatus(
        "current"
    )

alarmAutoShutdownOpuClientSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 167)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownOpuClientSignalFail.setStatus(
        "current"
    )

alarmAutoShutdownSendingEPC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 168)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingEPC.setStatus(
        "current"
    )

alarmAutoShutdownSendingLckOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 169)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingLckOdu.setStatus(
        "current"
    )

alarmAutoShutdownSendingOciOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 170)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingOciOdu.setStatus(
        "current"
    )

alarmAutoShutdownLaserOffDueToErrFwd = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 171)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownLaserOffDueToErrFwd.setStatus(
        "current"
    )

alarmAutoShutdownTxRxLasersDueToHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 172)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownTxRxLasersDueToHighTemp.setStatus(
        "current"
    )

alarmLocalFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 173)
)
if mibBuilder.loadTexts:
    alarmLocalFault.setStatus(
        "current"
    )

alarmLocalOscLevelAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 174)
)
if mibBuilder.loadTexts:
    alarmLocalOscLevelAbnormal.setStatus(
        "current"
    )

alarmLossOfGfpFrame = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 175)
)
if mibBuilder.loadTexts:
    alarmLossOfGfpFrame.setStatus(
        "current"
    )

alarmLossOfFrameMux = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 176)
)
if mibBuilder.loadTexts:
    alarmLossOfFrameMux.setStatus(
        "current"
    )

alarmLossOfFrameOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 177)
)
if mibBuilder.loadTexts:
    alarmLossOfFrameOtu.setStatus(
        "current"
    )

alarmLossOfFrame = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 178)
)
if mibBuilder.loadTexts:
    alarmLossOfFrame.setStatus(
        "current"
    )

alarmLossOfFrameLossOfMultiFrameOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 179)
)
if mibBuilder.loadTexts:
    alarmLossOfFrameLossOfMultiFrameOdu.setStatus(
        "current"
    )

alarmLossOfLane = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 180)
)
if mibBuilder.loadTexts:
    alarmLossOfLane.setStatus(
        "current"
    )

alarmLossofMultiframeLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 181)
)
if mibBuilder.loadTexts:
    alarmLossofMultiframeLowerOrderPath.setStatus(
        "current"
    )

alarmLossOfMultiFrameOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 182)
)
if mibBuilder.loadTexts:
    alarmLossOfMultiFrameOtu.setStatus(
        "current"
    )

alarmLossofMultiframeHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 183)
)
if mibBuilder.loadTexts:
    alarmLossofMultiframeHigherOrderPath.setStatus(
        "current"
    )

alarmLossOfPointerLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 184)
)
if mibBuilder.loadTexts:
    alarmLossOfPointerLowerOrderPath.setStatus(
        "current"
    )

alarmLossOfPointerHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 185)
)
if mibBuilder.loadTexts:
    alarmLossOfPointerHigherOrderPath.setStatus(
        "current"
    )

alarmLosAttProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 186)
)
if mibBuilder.loadTexts:
    alarmLosAttProgress.setStatus(
        "current"
    )

alarmLossOsc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 187)
)
if mibBuilder.loadTexts:
    alarmLossOsc.setStatus(
        "current"
    )

alarmGfpLossOfClientSig = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 188)
)
if mibBuilder.loadTexts:
    alarmGfpLossOfClientSig.setStatus(
        "current"
    )

alarmLoopbackError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 189)
)
if mibBuilder.loadTexts:
    alarmLoopbackError.setStatus(
        "current"
    )

alarmFacilityLoopback = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 190)
)
if mibBuilder.loadTexts:
    alarmFacilityLoopback.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 191)
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmA.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 192)
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmB.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 193)
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmC.setStatus(
        "current"
    )

alarmMansw = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 194)
)
if mibBuilder.loadTexts:
    alarmMansw.setStatus(
        "current"
    )

transientManualWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 195)
)
if mibBuilder.loadTexts:
    transientManualWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientManualWorkingSwitchedtoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 196)
)
if mibBuilder.loadTexts:
    transientManualWorkingSwitchedtoProtection.setStatus(
        "current"
    )

alarmEquipmentNotAccepted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 197)
)
if mibBuilder.loadTexts:
    alarmEquipmentNotAccepted.setStatus(
        "current"
    )

alarmEquipmentNotApproved = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 198)
)
if mibBuilder.loadTexts:
    alarmEquipmentNotApproved.setStatus(
        "current"
    )

alarmCapabilityLevelMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 199)
)
if mibBuilder.loadTexts:
    alarmCapabilityLevelMismatch.setStatus(
        "current"
    )

alarmEquipmentMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 200)
)
if mibBuilder.loadTexts:
    alarmEquipmentMismatch.setStatus(
        "current"
    )

alarmEquipmentNotSupportedByPhysicalLayer = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 201)
)
if mibBuilder.loadTexts:
    alarmEquipmentNotSupportedByPhysicalLayer.setStatus(
        "current"
    )

alarmMeaSwRevision = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 202)
)
if mibBuilder.loadTexts:
    alarmMeaSwRevision.setStatus(
        "current"
    )

alarmMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 203)
)
if mibBuilder.loadTexts:
    alarmMismatch.setStatus(
        "current"
    )

alarmMidstageFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 204)
)
if mibBuilder.loadTexts:
    alarmMidstageFault.setStatus(
        "current"
    )

alarmMultiplexStructureIdentifierMismatchOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 205)
)
if mibBuilder.loadTexts:
    alarmMultiplexStructureIdentifierMismatchOPU.setStatus(
        "current"
    )

alarmBackupNotResponding = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 206)
)
if mibBuilder.loadTexts:
    alarmBackupNotResponding.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 207)
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOdu.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 208)
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmA.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 209)
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmB.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 210)
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmC.setStatus(
        "current"
    )

alarmOduTribMsiMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 211)
)
if mibBuilder.loadTexts:
    alarmOduTribMsiMismatch.setStatus(
        "current"
    )

alarmTransmitterDisabledOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 212)
)
if mibBuilder.loadTexts:
    alarmTransmitterDisabledOff.setStatus(
        "current"
    )

alarmReceiverDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 213)
)
if mibBuilder.loadTexts:
    alarmReceiverDisabled.setStatus(
        "current"
    )

alarmOpmAbnormalCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 214)
)
if mibBuilder.loadTexts:
    alarmOpmAbnormalCondition.setStatus(
        "current"
    )

alarmFaultOnOpm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 215)
)
if mibBuilder.loadTexts:
    alarmFaultOnOpm.setStatus(
        "current"
    )

alarmThresOptPowerCtrlFailureHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 216)
)
if mibBuilder.loadTexts:
    alarmThresOptPowerCtrlFailureHigh.setStatus(
        "current"
    )

alarmThresOptPowerCtrlFailureLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 217)
)
if mibBuilder.loadTexts:
    alarmThresOptPowerCtrlFailureLow.setStatus(
        "current"
    )

alarmTxPowerLimited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 218)
)
if mibBuilder.loadTexts:
    alarmTxPowerLimited.setStatus(
        "current"
    )

alarmOscOpticalPowerControlFailHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 219)
)
if mibBuilder.loadTexts:
    alarmOscOpticalPowerControlFailHigh.setStatus(
        "current"
    )

alarmOscOpticalPowerControlFailLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 220)
)
if mibBuilder.loadTexts:
    alarmOscOpticalPowerControlFailLow.setStatus(
        "current"
    )

alarmOTDRMeasuringinProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 221)
)
if mibBuilder.loadTexts:
    alarmOTDRMeasuringinProgress.setStatus(
        "current"
    )

alarmEncryptionModuleCryPasswdError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 222)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleCryPasswdError.setStatus(
        "current"
    )

alarmPeerLink = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 223)
)
if mibBuilder.loadTexts:
    alarmPeerLink.setStatus(
        "current"
    )

alarmPilotReceiveLevelHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 224)
)
if mibBuilder.loadTexts:
    alarmPilotReceiveLevelHigh.setStatus(
        "current"
    )

alarmLossOfPilotSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 225)
)
if mibBuilder.loadTexts:
    alarmLossOfPilotSignal.setStatus(
        "current"
    )

alarmPayloadMismatchGfp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 226)
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchGfp.setStatus(
        "current"
    )

alarmPayloadMismatchLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 227)
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchLowerOrderPath.setStatus(
        "current"
    )

alarmPayloadMismatchOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 228)
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchOPU.setStatus(
        "current"
    )

alarmPayloadMismatchHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 229)
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchHigherOrderPath.setStatus(
        "current"
    )

alarmProvPayloadMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 230)
)
if mibBuilder.loadTexts:
    alarmProvPayloadMismatch.setStatus(
        "current"
    )

alarmPrbsLossOfSeqSynch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 231)
)
if mibBuilder.loadTexts:
    alarmPrbsLossOfSeqSynch.setStatus(
        "current"
    )

alarmPrbsRcvActivated = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 232)
)
if mibBuilder.loadTexts:
    alarmPrbsRcvActivated.setStatus(
        "current"
    )

alarmPrbsTrmtActivated = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 233)
)
if mibBuilder.loadTexts:
    alarmPrbsTrmtActivated.setStatus(
        "current"
    )

alarmProtectionNotAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 234)
)
if mibBuilder.loadTexts:
    alarmProtectionNotAvailable.setStatus(
        "current"
    )

alarmPowerSupplyUnitFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 235)
)
if mibBuilder.loadTexts:
    alarmPowerSupplyUnitFailure.setStatus(
        "current"
    )

alarmMaxPowerConsProvModulesToHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 236)
)
if mibBuilder.loadTexts:
    alarmMaxPowerConsProvModulesToHigh.setStatus(
        "current"
    )

alarmMaxPowerConsEquipModulesToHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 237)
)
if mibBuilder.loadTexts:
    alarmMaxPowerConsEquipModulesToHigh.setStatus(
        "current"
    )

alarmPowerMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 238)
)
if mibBuilder.loadTexts:
    alarmPowerMissing.setStatus(
        "current"
    )

alarmRemoteDefectIndicationLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 239)
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationLine.setStatus(
        "current"
    )

alarmRemoteDefectIndicationLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 240)
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationLowerOrderPath.setStatus(
        "current"
    )

alarmRemoteDefectIndicationHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 241)
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationHigherOrderPath.setStatus(
        "current"
    )

transientPmSnapshotEnded = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 242)
)
if mibBuilder.loadTexts:
    transientPmSnapshotEnded.setStatus(
        "current"
    )

alarmDcnCommunicationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 243)
)
if mibBuilder.loadTexts:
    alarmDcnCommunicationFail.setStatus(
        "current"
    )

alarmNtpForSchedEqlzRequired = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 244)
)
if mibBuilder.loadTexts:
    alarmNtpForSchedEqlzRequired.setStatus(
        "current"
    )

alarmSignalDegradeOlm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 245)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOlm.setStatus(
        "current"
    )

alarmSignalDegradeLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 246)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeLine.setStatus(
        "current"
    )

alarmSignalDegradationonLinkVector = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 247)
)
if mibBuilder.loadTexts:
    alarmSignalDegradationonLinkVector.setStatus(
        "current"
    )

alarmSignalDegradeOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 248)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOdu.setStatus(
        "current"
    )

alarmSignalDegradeOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 249)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOtu.setStatus(
        "current"
    )

alarmPcsSignalDegrade = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 250)
)
if mibBuilder.loadTexts:
    alarmPcsSignalDegrade.setStatus(
        "current"
    )

alarmSignalDegradeScn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 251)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeScn.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 252)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmA.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 253)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmB.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 254)
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmC.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 255)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestFail.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestFailCritical = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 256)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestFailCritical.setStatus(
        "current"
    )

alarmSignalFailureOnLink = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 257)
)
if mibBuilder.loadTexts:
    alarmSignalFailureOnLink.setStatus(
        "current"
    )

alarmSignalFailureonLinkVector = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 258)
)
if mibBuilder.loadTexts:
    alarmSignalFailureonLinkVector.setStatus(
        "current"
    )

alarmSignalFailureOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 259)
)
if mibBuilder.loadTexts:
    alarmSignalFailureOPU.setStatus(
        "current"
    )

alarmClientOutage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 260)
)
if mibBuilder.loadTexts:
    alarmClientOutage.setStatus(
        "current"
    )

alarmFacilityDataRateNotSupported = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 261)
)
if mibBuilder.loadTexts:
    alarmFacilityDataRateNotSupported.setStatus(
        "current"
    )

transientCryptoSessKeyLifetimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 262)
)
if mibBuilder.loadTexts:
    transientCryptoSessKeyLifetimeChanged.setStatus(
        "current"
    )

alarmLossofSequenceLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 263)
)
if mibBuilder.loadTexts:
    alarmLossofSequenceLowerOrderPath.setStatus(
        "current"
    )

alarmLossofSequenceHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 264)
)
if mibBuilder.loadTexts:
    alarmLossofSequenceHigherOrderPath.setStatus(
        "current"
    )

alarmServerSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 265)
)
if mibBuilder.loadTexts:
    alarmServerSignalFail.setStatus(
        "current"
    )

alarmServerSignalFailureGfp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 266)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureGfp.setStatus(
        "current"
    )

alarmServerSignalFailureODU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 267)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureODU.setStatus(
        "current"
    )

alarmServerSignalFailurePath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 268)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailurePath.setStatus(
        "current"
    )

alarmServerSignalFailureSectionRS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 269)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureSectionRS.setStatus(
        "current"
    )

transientProtSwToDuplexCompl = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 270)
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexCompl.setStatus(
        "current"
    )

transientProtSwToDuplexFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 271)
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexFail.setStatus(
        "current"
    )

alarmSwitchToDuplexInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 272)
)
if mibBuilder.loadTexts:
    alarmSwitchToDuplexInhibited.setStatus(
        "current"
    )

transientProtSwToDuplexStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 273)
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexStart.setStatus(
        "current"
    )

alarmSwitchFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 274)
)
if mibBuilder.loadTexts:
    alarmSwitchFailed.setStatus(
        "current"
    )

transientSwResetReload = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 275)
)
if mibBuilder.loadTexts:
    transientSwResetReload.setStatus(
        "current"
    )

alarmCurrentTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 276)
)
if mibBuilder.loadTexts:
    alarmCurrentTooHigh.setStatus(
        "current"
    )

alarmAttOnReceiverFiberHigherThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 277)
)
if mibBuilder.loadTexts:
    alarmAttOnReceiverFiberHigherThanMonitor.setStatus(
        "current"
    )

alarmAttOnReceiverFiberLowerThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 278)
)
if mibBuilder.loadTexts:
    alarmAttOnReceiverFiberLowerThanMonitor.setStatus(
        "current"
    )

alarmAttOnTransmitterFiberHigherThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 279)
)
if mibBuilder.loadTexts:
    alarmAttOnTransmitterFiberHigherThanMonitor.setStatus(
        "current"
    )

alarmAttOnTransmitterFiberLowerThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 280)
)
if mibBuilder.loadTexts:
    alarmAttOnTransmitterFiberLowerThanMonitor.setStatus(
        "current"
    )

alarmThres15MinExceededOduBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 281)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduBbe.setStatus(
        "current"
    )

transientThres1DayExceededOduBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 282)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOtuBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 283)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuBbe.setStatus(
        "current"
    )

transientThres1DayExceededOtuBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 284)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmABbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 285)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmABbe.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmABbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 286)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmABbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 287)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBBbe.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 288)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 289)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCBbe.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 290)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCBbe.setStatus(
        "current"
    )

alarmThres15MinExceededFecBERCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 291)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecBERCE.setStatus(
        "current"
    )

transientThres1DayExceededFecBERCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 292)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecBERCE.setStatus(
        "current"
    )

alarmBrPwrRxTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 293)
)
if mibBuilder.loadTexts:
    alarmBrPwrRxTooHigh.setStatus(
        "current"
    )

alarmChromaticDispersionTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 294)
)
if mibBuilder.loadTexts:
    alarmChromaticDispersionTooHigh.setStatus(
        "current"
    )

alarmChromaticDispersionTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 295)
)
if mibBuilder.loadTexts:
    alarmChromaticDispersionTooLow.setStatus(
        "current"
    )

alarmDispersionCompensationTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 296)
)
if mibBuilder.loadTexts:
    alarmDispersionCompensationTooHigh.setStatus(
        "current"
    )

alarmDispersionCompensationTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 297)
)
if mibBuilder.loadTexts:
    alarmDispersionCompensationTooLow.setStatus(
        "current"
    )

alarmThres15MinExceededFecCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 298)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecCE.setStatus(
        "current"
    )

transientThres1DayExceededFecCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 299)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecCE.setStatus(
        "current"
    )

alarmCarrierFreqOffsetTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 300)
)
if mibBuilder.loadTexts:
    alarmCarrierFreqOffsetTooHigh.setStatus(
        "current"
    )

alarmCarrierFreqOffsetTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 301)
)
if mibBuilder.loadTexts:
    alarmCarrierFreqOffsetTooLow.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 302)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineCV.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 303)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineCV.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 304)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvCV.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 305)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvCV.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 306)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectCV.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 307)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectCV.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 308)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvDE.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 309)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvDE.setStatus(
        "current"
    )

alarmDifferentialGroupDelayTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 310)
)
if mibBuilder.loadTexts:
    alarmDifferentialGroupDelayTooHigh.setStatus(
        "current"
    )

alarmThres15MinExceededFecES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 311)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecES.setStatus(
        "current"
    )

transientThres1DayExceededFecES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 312)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 313)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineES.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 314)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineES.setStatus(
        "current"
    )

alarmThres15MinExceededOduES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 315)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduES.setStatus(
        "current"
    )

transientThres1DayExceededOduES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 316)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduES.setStatus(
        "current"
    )

alarmThres15MinExceededOtuES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 317)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuES.setStatus(
        "current"
    )

transientThres1DayExceededOtuES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 318)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuES.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 319)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvES.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 320)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 321)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectES.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 322)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmAES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 323)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmAES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmAES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 324)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmAES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 325)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 326)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 327)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 328)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCES.setStatus(
        "current"
    )

alarmLatencyTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 329)
)
if mibBuilder.loadTexts:
    alarmLatencyTooHigh.setStatus(
        "current"
    )

alarmLatencyTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 330)
)
if mibBuilder.loadTexts:
    alarmLatencyTooLow.setStatus(
        "current"
    )

alarmLaserBiasCurrentNormalizedtooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 331)
)
if mibBuilder.loadTexts:
    alarmLaserBiasCurrentNormalizedtooHigh.setStatus(
        "current"
    )

alarmLocalOscTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 332)
)
if mibBuilder.loadTexts:
    alarmLocalOscTemperatureTooHigh.setStatus(
        "current"
    )

alarmLocalOscTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 333)
)
if mibBuilder.loadTexts:
    alarmLocalOscTemperatureTooLow.setStatus(
        "current"
    )

alarmPumpLaser1TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 334)
)
if mibBuilder.loadTexts:
    alarmPumpLaser1TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser1TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 335)
)
if mibBuilder.loadTexts:
    alarmPumpLaser1TempTooLow.setStatus(
        "current"
    )

alarmPumpLaser2TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 336)
)
if mibBuilder.loadTexts:
    alarmPumpLaser2TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser2TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 337)
)
if mibBuilder.loadTexts:
    alarmPumpLaser2TempTooLow.setStatus(
        "current"
    )

alarmPumpLaser3TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 338)
)
if mibBuilder.loadTexts:
    alarmPumpLaser3TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser3TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 339)
)
if mibBuilder.loadTexts:
    alarmPumpLaser3TempTooLow.setStatus(
        "current"
    )

alarmPumpLaser4TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 340)
)
if mibBuilder.loadTexts:
    alarmPumpLaser4TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser4TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 341)
)
if mibBuilder.loadTexts:
    alarmPumpLaser4TempTooLow.setStatus(
        "current"
    )

alarmOscPwrTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 342)
)
if mibBuilder.loadTexts:
    alarmOscPwrTooHigh.setStatus(
        "current"
    )

alarmOscPwrTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 343)
)
if mibBuilder.loadTexts:
    alarmOscPwrTooLow.setStatus(
        "current"
    )

alarmRamanPumpPwrTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 344)
)
if mibBuilder.loadTexts:
    alarmRamanPumpPwrTooHigh.setStatus(
        "current"
    )

alarmRamanPumpPwrTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 345)
)
if mibBuilder.loadTexts:
    alarmRamanPumpPwrTooLow.setStatus(
        "current"
    )

alarmRoundTripDelayTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 346)
)
if mibBuilder.loadTexts:
    alarmRoundTripDelayTooHigh.setStatus(
        "current"
    )

alarmRoundTripDelayTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 347)
)
if mibBuilder.loadTexts:
    alarmRoundTripDelayTooLow.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectSEFS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 348)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectSEFS.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectSEFS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 349)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectSEFS.setStatus(
        "current"
    )

alarmThres15MinExceededFecSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 350)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecSES.setStatus(
        "current"
    )

transientThres1DayExceededFecSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 351)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecSES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 352)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineSES.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 353)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 354)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduSES.setStatus(
        "current"
    )

transientThres1DayExceededOduSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 355)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduSES.setStatus(
        "current"
    )

alarmThres15MinExceededOtuSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 356)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuSES.setStatus(
        "current"
    )

transientThres1DayExceededOtuSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 357)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuSES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 358)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectSES.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 359)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmASES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 360)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmASES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmASES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 361)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmASES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 362)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBSES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 363)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 364)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCSES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 365)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCSES.setStatus(
        "current"
    )

alarmLogicalLanesSkewTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 366)
)
if mibBuilder.loadTexts:
    alarmLogicalLanesSkewTooHigh.setStatus(
        "current"
    )

alarmSignalToNoiseRatioTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 367)
)
if mibBuilder.loadTexts:
    alarmSignalToNoiseRatioTooLow.setStatus(
        "current"
    )

alarmSubModuleTempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 368)
)
if mibBuilder.loadTexts:
    alarmSubModuleTempTooHigh.setStatus(
        "current"
    )

alarmTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 369)
)
if mibBuilder.loadTexts:
    alarmTemperatureTooHigh.setStatus(
        "current"
    )

alarmTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 370)
)
if mibBuilder.loadTexts:
    alarmTemperatureTooLow.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 371)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineUAS.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 372)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 373)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 374)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOtuUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 375)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuUAS.setStatus(
        "current"
    )

transientThres1DayExceededOtuUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 376)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmAUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 377)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmAUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmAUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 378)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmAUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 379)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 380)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 381)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 382)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCUAS.setStatus(
        "current"
    )

alarmThres15MinExceededFecUBE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 383)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecUBE.setStatus(
        "current"
    )

transientThres1DayExceededFecUBE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 384)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecUBE.setStatus(
        "current"
    )

alarmEncryptionModuleTamperDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 385)
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleTamperDetected.setStatus(
        "current"
    )

alarmThermoElectricCoolerEndOfLife = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 386)
)
if mibBuilder.loadTexts:
    alarmThermoElectricCoolerEndOfLife.setStatus(
        "current"
    )

alarmInputTIF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 387)
)
if mibBuilder.loadTexts:
    alarmInputTIF.setStatus(
        "current"
    )

transientHardwareResetInputTIF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 388)
)
if mibBuilder.loadTexts:
    transientHardwareResetInputTIF.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 389)
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOdu.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 390)
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOtu.setStatus(
        "current"
    )

alarmSectionTraceMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 391)
)
if mibBuilder.loadTexts:
    alarmSectionTraceMismatch.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 392)
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmA.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 393)
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmB.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 394)
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmC.setStatus(
        "current"
    )

alarmTurnupFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 395)
)
if mibBuilder.loadTexts:
    alarmTurnupFailed.setStatus(
        "current"
    )

alarmTurnupCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 396)
)
if mibBuilder.loadTexts:
    alarmTurnupCondition.setStatus(
        "current"
    )

alarmUnequippedLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 397)
)
if mibBuilder.loadTexts:
    alarmUnequippedLowerOrderPath.setStatus(
        "current"
    )

alarmUnequippedHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 398)
)
if mibBuilder.loadTexts:
    alarmUnequippedHigherOrderPath.setStatus(
        "current"
    )

alarmVoaControlFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 399)
)
if mibBuilder.loadTexts:
    alarmVoaControlFail.setStatus(
        "current"
    )

alarmVoltageOutOfRange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 400)
)
if mibBuilder.loadTexts:
    alarmVoltageOutOfRange.setStatus(
        "current"
    )

alarmInputVoltageFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 401)
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailure.setStatus(
        "current"
    )

alarmInputVoltageFailurePort1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 402)
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailurePort1.setStatus(
        "current"
    )

alarmInputVoltageFailurePort2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 403)
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailurePort2.setStatus(
        "current"
    )

transientWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 404)
)
if mibBuilder.loadTexts:
    transientWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientWorkingSwitchedtoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 405)
)
if mibBuilder.loadTexts:
    transientWorkingSwitchedtoProtection.setStatus(
        "current"
    )

alarmWtrTimerRunning = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 406)
)
if mibBuilder.loadTexts:
    alarmWtrTimerRunning.setStatus(
        "current"
    )

alarmLossOfLaneOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 407)
)
if mibBuilder.loadTexts:
    alarmLossOfLaneOtu.setStatus(
        "current"
    )

alarmLossOfTestSeqSynchOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 408)
)
if mibBuilder.loadTexts:
    alarmLossOfTestSeqSynchOpu.setStatus(
        "current"
    )

alarmLossOfMfiOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 409)
)
if mibBuilder.loadTexts:
    alarmLossOfMfiOpu.setStatus(
        "current"
    )

alarmOosDisabledLckOduTrmt = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 410)
)
if mibBuilder.loadTexts:
    alarmOosDisabledLckOduTrmt.setStatus(
        "current"
    )

alarmConfigurationMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 411)
)
if mibBuilder.loadTexts:
    alarmConfigurationMismatch.setStatus(
        "current"
    )

alarmOduAutoShutdownRxAIS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 412)
)
if mibBuilder.loadTexts:
    alarmOduAutoShutdownRxAIS.setStatus(
        "current"
    )

alarmOduAutoShutdownTxAIS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 413)
)
if mibBuilder.loadTexts:
    alarmOduAutoShutdownTxAIS.setStatus(
        "current"
    )

alarmOosDisabledLckOduRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 414)
)
if mibBuilder.loadTexts:
    alarmOosDisabledLckOduRx.setStatus(
        "current"
    )

transientBootUpFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 415)
)
if mibBuilder.loadTexts:
    transientBootUpFailed.setStatus(
        "current"
    )

transientBootUpCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 416)
)
if mibBuilder.loadTexts:
    transientBootUpCompleted.setStatus(
        "current"
    )

transientBootUpStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 417)
)
if mibBuilder.loadTexts:
    transientBootUpStarted.setStatus(
        "current"
    )

transientInstallFwpCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 418)
)
if mibBuilder.loadTexts:
    transientInstallFwpCompleted.setStatus(
        "current"
    )

transientBootUpRejected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 419)
)
if mibBuilder.loadTexts:
    transientBootUpRejected.setStatus(
        "current"
    )

alarmThres15MinExceededBbePcs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 420)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededBbePcs.setStatus(
        "current"
    )

transientThres15DayExceededBbePcs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 421)
)
if mibBuilder.loadTexts:
    transientThres15DayExceededBbePcs.setStatus(
        "current"
    )

alarmAutoShutdownGAis = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 422)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownGAis.setStatus(
        "current"
    )

alarmEquipmentMismatchAllow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 423)
)
if mibBuilder.loadTexts:
    alarmEquipmentMismatchAllow.setStatus(
        "current"
    )

alarmWarmUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 424)
)
if mibBuilder.loadTexts:
    alarmWarmUp.setStatus(
        "current"
    )

transientFwpInstallStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 425)
)
if mibBuilder.loadTexts:
    transientFwpInstallStarted.setStatus(
        "current"
    )

transientFwpInstallFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 426)
)
if mibBuilder.loadTexts:
    transientFwpInstallFailed.setStatus(
        "current"
    )

transientFwpInstallCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 427)
)
if mibBuilder.loadTexts:
    transientFwpInstallCompleted.setStatus(
        "current"
    )

transientFwpSwitchStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 428)
)
if mibBuilder.loadTexts:
    transientFwpSwitchStarted.setStatus(
        "current"
    )

transientFwpSwitchFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 429)
)
if mibBuilder.loadTexts:
    transientFwpSwitchFailed.setStatus(
        "current"
    )

transientFwpSwitchCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 430)
)
if mibBuilder.loadTexts:
    transientFwpSwitchCompleted.setStatus(
        "current"
    )

transientFwpSwitchRejected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 431)
)
if mibBuilder.loadTexts:
    transientFwpSwitchRejected.setStatus(
        "current"
    )

alarmNetworkPathRestricted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 432)
)
if mibBuilder.loadTexts:
    alarmNetworkPathRestricted.setStatus(
        "current"
    )

transientPathCleanupComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 433)
)
if mibBuilder.loadTexts:
    transientPathCleanupComplete.setStatus(
        "current"
    )

alarmVfClientSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 434)
)
if mibBuilder.loadTexts:
    alarmVfClientSignalFail.setStatus(
        "current"
    )

alarmAutoShutdownVfCSF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 435)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownVfCSF.setStatus(
        "current"
    )

transientNtpSrvTestSuccessed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 436)
)
if mibBuilder.loadTexts:
    transientNtpSrvTestSuccessed.setStatus(
        "current"
    )

transientNtpSrvTestFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 437)
)
if mibBuilder.loadTexts:
    transientNtpSrvTestFailed.setStatus(
        "current"
    )

transientNtpSrvSyncChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 438)
)
if mibBuilder.loadTexts:
    transientNtpSrvSyncChanged.setStatus(
        "current"
    )

alarmLinkFailToPartner1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 439)
)
if mibBuilder.loadTexts:
    alarmLinkFailToPartner1.setStatus(
        "current"
    )

alarmLinkFailToPartner2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 440)
)
if mibBuilder.loadTexts:
    alarmLinkFailToPartner2.setStatus(
        "current"
    )

alarmLinkFailToPartner3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 441)
)
if mibBuilder.loadTexts:
    alarmLinkFailToPartner3.setStatus(
        "current"
    )

alarmLinkFailToPartner4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 442)
)
if mibBuilder.loadTexts:
    alarmLinkFailToPartner4.setStatus(
        "current"
    )

alarmPartnerUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 443)
)
if mibBuilder.loadTexts:
    alarmPartnerUnavailable.setStatus(
        "current"
    )

transientCommunicationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 444)
)
if mibBuilder.loadTexts:
    transientCommunicationFail.setStatus(
        "current"
    )

alarmPartner1Deleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 445)
)
if mibBuilder.loadTexts:
    alarmPartner1Deleted.setStatus(
        "current"
    )

alarmPartner2Deleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 446)
)
if mibBuilder.loadTexts:
    alarmPartner2Deleted.setStatus(
        "current"
    )

alarmPartner3Deleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 447)
)
if mibBuilder.loadTexts:
    alarmPartner3Deleted.setStatus(
        "current"
    )

alarmPartner4Deleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 448)
)
if mibBuilder.loadTexts:
    alarmPartner4Deleted.setStatus(
        "current"
    )

transientEqlzReport = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 449)
)
if mibBuilder.loadTexts:
    transientEqlzReport.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvSE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 450)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvSE.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvSE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 451)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvSE.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvCVDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 452)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvCVDE.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvCVDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 453)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvCVDE.setStatus(
        "current"
    )

transientForcedWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 454)
)
if mibBuilder.loadTexts:
    transientForcedWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientForcedWorkingSwitchedBacktoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 455)
)
if mibBuilder.loadTexts:
    transientForcedWorkingSwitchedBacktoProtection.setStatus(
        "current"
    )

alarmAutoShutdownSendingOciOduTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 456)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingOciOduTx.setStatus(
        "current"
    )

alarmAcpLinkLoss = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 457)
)
if mibBuilder.loadTexts:
    alarmAcpLinkLoss.setStatus(
        "current"
    )

alarmAcpChannelUnAvail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 458)
)
if mibBuilder.loadTexts:
    alarmAcpChannelUnAvail.setStatus(
        "current"
    )

alarmAcpPartnerUnassigned = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 459)
)
if mibBuilder.loadTexts:
    alarmAcpPartnerUnassigned.setStatus(
        "current"
    )

alarmAcpPartnerDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 460)
)
if mibBuilder.loadTexts:
    alarmAcpPartnerDeleted.setStatus(
        "current"
    )

alarmThres15MinExceededCrcErrorsRcv = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 461)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededCrcErrorsRcv.setStatus(
        "current"
    )

transientThres1DayExceededCrcErrorsRcv = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 462)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededCrcErrorsRcv.setStatus(
        "current"
    )

alarmThres15MinExceededCrcFramesEgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 463)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededCrcFramesEgress.setStatus(
        "current"
    )

transientThres1DayExceededCrcFramesEgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 464)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededCrcFramesEgress.setStatus(
        "current"
    )

alarmAutoServiceMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 465)
)
if mibBuilder.loadTexts:
    alarmAutoServiceMismatch.setStatus(
        "current"
    )

alarmBatteryNoCharge = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 466)
)
if mibBuilder.loadTexts:
    alarmBatteryNoCharge.setStatus(
        "current"
    )

transientFwpHashPass = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 467)
)
if mibBuilder.loadTexts:
    transientFwpHashPass.setStatus(
        "current"
    )

transientFwpHashFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 468)
)
if mibBuilder.loadTexts:
    transientFwpHashFail.setStatus(
        "current"
    )

alarmTagReceiveFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 469)
)
if mibBuilder.loadTexts:
    alarmTagReceiveFail.setStatus(
        "current"
    )

alarmTagReceiveFailMaxReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 470)
)
if mibBuilder.loadTexts:
    alarmTagReceiveFailMaxReached.setStatus(
        "current"
    )

transientTagCounterReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 471)
)
if mibBuilder.loadTexts:
    transientTagCounterReset.setStatus(
        "current"
    )

transientTagCounterResetFw = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 472)
)
if mibBuilder.loadTexts:
    transientTagCounterResetFw.setStatus(
        "current"
    )

alarmInternalEncryptionFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 473)
)
if mibBuilder.loadTexts:
    alarmInternalEncryptionFail.setStatus(
        "current"
    )

transientCryptoTagFailureLimitChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 474)
)
if mibBuilder.loadTexts:
    transientCryptoTagFailureLimitChanged.setStatus(
        "current"
    )

transientCryptoTagFailurePeriodChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 475)
)
if mibBuilder.loadTexts:
    transientCryptoTagFailurePeriodChanged.setStatus(
        "current"
    )

alarmInsufficientPower = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 476)
)
if mibBuilder.loadTexts:
    alarmInsufficientPower.setStatus(
        "current"
    )

alarmPowerConsumptionHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 477)
)
if mibBuilder.loadTexts:
    alarmPowerConsumptionHigh.setStatus(
        "current"
    )

alarmLossOfOverhead = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 478)
)
if mibBuilder.loadTexts:
    alarmLossOfOverhead.setStatus(
        "current"
    )

alarmLossOfInputSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 479)
)
if mibBuilder.loadTexts:
    alarmLossOfInputSignal.setStatus(
        "current"
    )

alarmOtuServerSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 480)
)
if mibBuilder.loadTexts:
    alarmOtuServerSignalFail.setStatus(
        "current"
    )

alarmLossOfPRBSonaLane = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 481)
)
if mibBuilder.loadTexts:
    alarmLossOfPRBSonaLane.setStatus(
        "current"
    )

alarmLossOfAlignment = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 482)
)
if mibBuilder.loadTexts:
    alarmLossOfAlignment.setStatus(
        "current"
    )

alarmLocalFaultRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 483)
)
if mibBuilder.loadTexts:
    alarmLocalFaultRx.setStatus(
        "current"
    )

alarmLocalFaultTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 484)
)
if mibBuilder.loadTexts:
    alarmLocalFaultTx.setStatus(
        "current"
    )

alarmServerSignalFailRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 485)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailRx.setStatus(
        "current"
    )

alarmServerSignalFailTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 486)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailTx.setStatus(
        "current"
    )

alarmLossOfBlockLock = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 487)
)
if mibBuilder.loadTexts:
    alarmLossOfBlockLock.setStatus(
        "current"
    )

alarmInputVoltageLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 488)
)
if mibBuilder.loadTexts:
    alarmInputVoltageLow.setStatus(
        "current"
    )

alarmOutputVoltageFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 489)
)
if mibBuilder.loadTexts:
    alarmOutputVoltageFailure.setStatus(
        "current"
    )

alarmOutputPowerHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 490)
)
if mibBuilder.loadTexts:
    alarmOutputPowerHigh.setStatus(
        "current"
    )

alarmCommunicationLoss = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 491)
)
if mibBuilder.loadTexts:
    alarmCommunicationLoss.setStatus(
        "current"
    )

alarmIncompatibleVersion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 492)
)
if mibBuilder.loadTexts:
    alarmIncompatibleVersion.setStatus(
        "current"
    )

alarmAirDustFilterClogged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 493)
)
if mibBuilder.loadTexts:
    alarmAirDustFilterClogged.setStatus(
        "current"
    )

alarmPsmRedundancyMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 494)
)
if mibBuilder.loadTexts:
    alarmPsmRedundancyMismatch.setStatus(
        "current"
    )

alarmLossOfModemSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 495)
)
if mibBuilder.loadTexts:
    alarmLossOfModemSync.setStatus(
        "current"
    )

alarmServerSignalFailPayload = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 496)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailPayload.setStatus(
        "current"
    )

alarmOutputCurrentDrawHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 497)
)
if mibBuilder.loadTexts:
    alarmOutputCurrentDrawHigh.setStatus(
        "current"
    )

alarmRAndCPortOutage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 498)
)
if mibBuilder.loadTexts:
    alarmRAndCPortOutage.setStatus(
        "current"
    )

alarmRPortOutage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 499)
)
if mibBuilder.loadTexts:
    alarmRPortOutage.setStatus(
        "current"
    )

alarmPPortOutage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 500)
)
if mibBuilder.loadTexts:
    alarmPPortOutage.setStatus(
        "current"
    )

alarmHwOptReachedHT = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 501)
)
if mibBuilder.loadTexts:
    alarmHwOptReachedHT.setStatus(
        "current"
    )

alarmExcessLLDPNeighborsRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 502)
)
if mibBuilder.loadTexts:
    alarmExcessLLDPNeighborsRx.setStatus(
        "current"
    )

alarmExcessLLDPNeighborsTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 503)
)
if mibBuilder.loadTexts:
    alarmExcessLLDPNeighborsTx.setStatus(
        "current"
    )

alarmConfigurationFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 504)
)
if mibBuilder.loadTexts:
    alarmConfigurationFault.setStatus(
        "current"
    )

alarmChannelMismatchRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 505)
)
if mibBuilder.loadTexts:
    alarmChannelMismatchRx.setStatus(
        "current"
    )

alarmLossOfCoupling = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 506)
)
if mibBuilder.loadTexts:
    alarmLossOfCoupling.setStatus(
        "current"
    )

alarmHardwareUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 507)
)
if mibBuilder.loadTexts:
    alarmHardwareUnavailable.setStatus(
        "current"
    )

transientCryBootStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 508)
)
if mibBuilder.loadTexts:
    transientCryBootStarted.setStatus(
        "current"
    )

transientCryAuthKeyMade = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 509)
)
if mibBuilder.loadTexts:
    transientCryAuthKeyMade.setStatus(
        "current"
    )

transientCryAuthKeyReceived = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 510)
)
if mibBuilder.loadTexts:
    transientCryAuthKeyReceived.setStatus(
        "current"
    )

alarmCryAuthKeyMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 511)
)
if mibBuilder.loadTexts:
    alarmCryAuthKeyMissing.setStatus(
        "current"
    )

alarmCryDataInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 512)
)
if mibBuilder.loadTexts:
    alarmCryDataInvalid.setStatus(
        "current"
    )

alarmLossOfSignalDcPort = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 513)
)
if mibBuilder.loadTexts:
    alarmLossOfSignalDcPort.setStatus(
        "current"
    )

alarmAmpDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 514)
)
if mibBuilder.loadTexts:
    alarmAmpDisabled.setStatus(
        "current"
    )

transientEncryptionModuleSelfTestPass = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 515)
)
if mibBuilder.loadTexts:
    transientEncryptionModuleSelfTestPass.setStatus(
        "current"
    )

alarmLicenseMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 516)
)
if mibBuilder.loadTexts:
    alarmLicenseMissing.setStatus(
        "current"
    )

alarmHwConfigFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 517)
)
if mibBuilder.loadTexts:
    alarmHwConfigFault.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 518)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectBbe.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 519)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectBbe.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 520)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineBbe.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 521)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineBbe.setStatus(
        "current"
    )

alarmServerSignalFailLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 522)
)
if mibBuilder.loadTexts:
    alarmServerSignalFailLine.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectOofs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 523)
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectOofs.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectOofs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 524)
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectOofs.setStatus(
        "current"
    )

alarmNoLicenseFile = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 525)
)
if mibBuilder.loadTexts:
    alarmNoLicenseFile.setStatus(
        "current"
    )

alarmLicenseServerDisconnected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 526)
)
if mibBuilder.loadTexts:
    alarmLicenseServerDisconnected.setStatus(
        "current"
    )

alarmLicenseServerNotConfigured = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 527)
)
if mibBuilder.loadTexts:
    alarmLicenseServerNotConfigured.setStatus(
        "current"
    )

alarmLicenseInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 528)
)
if mibBuilder.loadTexts:
    alarmLicenseInvalid.setStatus(
        "current"
    )

alarmLicenseOverdraft = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 529)
)
if mibBuilder.loadTexts:
    alarmLicenseOverdraft.setStatus(
        "current"
    )

alarmLicenseMissingMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 530)
)
if mibBuilder.loadTexts:
    alarmLicenseMissingMismatch.setStatus(
        "current"
    )

alarmQualityFactorTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 531)
)
if mibBuilder.loadTexts:
    alarmQualityFactorTooLow.setStatus(
        "current"
    )

transientCryBootCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 532)
)
if mibBuilder.loadTexts:
    transientCryBootCompleted.setStatus(
        "current"
    )

transientCryBootFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 533)
)
if mibBuilder.loadTexts:
    transientCryBootFailed.setStatus(
        "current"
    )

transientCrySwitchStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 534)
)
if mibBuilder.loadTexts:
    transientCrySwitchStarted.setStatus(
        "current"
    )

transientCrySwitchCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 535)
)
if mibBuilder.loadTexts:
    transientCrySwitchCompleted.setStatus(
        "current"
    )

transientCrySwitchFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 536)
)
if mibBuilder.loadTexts:
    transientCrySwitchFailed.setStatus(
        "current"
    )

alarmReplaceAirFilter = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 537)
)
if mibBuilder.loadTexts:
    alarmReplaceAirFilter.setStatus(
        "current"
    )

alarmAutoShutdownSendingIdle = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 538)
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingIdle.setStatus(
        "current"
    )

transientMpReleased = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 539)
)
transientMpReleased.setObjects(
      *(("ADVA-FSPR7-MIB", "entitySysAidString"),
        ("ADVA-FSPR7-MIB", "fileDataMpName"),
        ("ADVA-FSPR7-MIB", "fileDataComment"),
        ("ADVA-FSPR7-MIB", "fileDataMpTag"),
        ("ADVA-FSPR7-MIB", "fileDataRevision"),
        ("ADVA-FSPR7-MIB", "fileDataVersion"),
        ("ADVA-FSPR7-MIB", "fileDataCreationTime"))
)
if mibBuilder.loadTexts:
    transientMpReleased.setStatus(
        "current"
    )

transientMpLocked = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 540)
)
transientMpLocked.setObjects(
      *(("ADVA-FSPR7-MIB", "entitySysAidString"),
        ("ADVA-FSPR7-MIB", "fileDataMpName"),
        ("ADVA-FSPR7-MIB", "fileDataComment"),
        ("ADVA-FSPR7-MIB", "fileDataMpTag"),
        ("ADVA-FSPR7-MIB", "fileDataRevision"),
        ("ADVA-FSPR7-MIB", "fileDataVersion"),
        ("ADVA-FSPR7-MIB", "fileDataCreationTime"))
)
if mibBuilder.loadTexts:
    transientMpLocked.setStatus(
        "current"
    )

alarmMpFileMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 541)
)
if mibBuilder.loadTexts:
    alarmMpFileMissing.setStatus(
        "current"
    )

transientMpDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 542)
)
if mibBuilder.loadTexts:
    transientMpDeleted.setStatus(
        "current"
    )

transientMpCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 543)
)
transientMpCreated.setObjects(
      *(("ADVA-FSPR7-MIB", "entitySysAidString"),
        ("ADVA-FSPR7-MIB", "fileDataMpName"),
        ("ADVA-FSPR7-MIB", "fileDataComment"),
        ("ADVA-FSPR7-MIB", "fileDataMpTag"),
        ("ADVA-FSPR7-MIB", "fileDataRevision"),
        ("ADVA-FSPR7-MIB", "fileDataVersion"),
        ("ADVA-FSPR7-MIB", "fileDataCreationTime"))
)
if mibBuilder.loadTexts:
    transientMpCreated.setStatus(
        "current"
    )

transientMpParameterSetFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 544)
)
transientMpParameterSetFail.setObjects(
      *(("ADVA-FSPR7-MIB", "entitySysAidString"),
        ("ADVA-FSPR7-MIB", "errorMessage"))
)
if mibBuilder.loadTexts:
    transientMpParameterSetFail.setStatus(
        "current"
    )

transientMpImported = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 545)
)
transientMpImported.setObjects(
      *(("ADVA-FSPR7-MIB", "entitySysAidString"),
        ("ADVA-FSPR7-MIB", "fileDataMpName"),
        ("ADVA-FSPR7-MIB", "fileDataComment"),
        ("ADVA-FSPR7-MIB", "fileDataMpTag"),
        ("ADVA-FSPR7-MIB", "fileDataRevision"),
        ("ADVA-FSPR7-MIB", "fileDataVersion"),
        ("ADVA-FSPR7-MIB", "fileDataCreationTime"))
)
if mibBuilder.loadTexts:
    transientMpImported.setStatus(
        "current"
    )

alarmDelayMeasurementProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 546)
)
if mibBuilder.loadTexts:
    alarmDelayMeasurementProgress.setStatus(
        "current"
    )

transientDelayMeasurementCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 547)
)
if mibBuilder.loadTexts:
    transientDelayMeasurementCompleted.setStatus(
        "current"
    )

transientDelayMeasurementFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 548)
)
if mibBuilder.loadTexts:
    transientDelayMeasurementFailed.setStatus(
        "current"
    )

fspR7EquipmentInsertedTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10001)
)
if mibBuilder.loadTexts:
    fspR7EquipmentInsertedTrap.setStatus(
        "current"
    )

fspR7EquipmentRemovedTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10002)
)
if mibBuilder.loadTexts:
    fspR7EquipmentRemovedTrap.setStatus(
        "current"
    )

fspR7WriteAccessRequest = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10010)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessRequest.setStatus(
        "current"
    )

fspR7WriteAccessGranted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10011)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessGranted.setStatus(
        "current"
    )

fspR7WriteAccessRevoked = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10012)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessRevoked.setStatus(
        "current"
    )

fspR7WriteAccessDenied = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10013)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessDenied.setStatus(
        "current"
    )

fspR7WriteAccessTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10014)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessTimeout.setStatus(
        "current"
    )

fspR7WriteAccessRequestTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10015)
)
if mibBuilder.loadTexts:
    fspR7WriteAccessRequestTimeout.setStatus(
        "current"
    )

fspR7TrapSinkCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10020)
)
fspR7TrapSinkCreation.setObjects(
      *(("ADVA-FSPR7-MIB", "trapSinkIPv4"),
        ("ADVA-FSPR7-MIB", "trapSinkIPv6"))
)
if mibBuilder.loadTexts:
    fspR7TrapSinkCreation.setStatus(
        "current"
    )

fspR7TrapSinkDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10021)
)
fspR7TrapSinkDeletion.setObjects(
      *(("ADVA-FSPR7-MIB", "trapSinkIPv4"),
        ("ADVA-FSPR7-MIB", "trapSinkIPv6"))
)
if mibBuilder.loadTexts:
    fspR7TrapSinkDeletion.setStatus(
        "current"
    )

fspR7TrapSinkChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10022)
)
fspR7TrapSinkChange.setObjects(
      *(("ADVA-FSPR7-MIB", "trapSinkIPv4"),
        ("ADVA-FSPR7-MIB", "trapSinkIPv6"),
        ("ADVA-FSPR7-MIB", "trapSinkCommunity"),
        ("ADVA-FSPR7-MIB", "trapSinkUserName"))
)
if mibBuilder.loadTexts:
    fspR7TrapSinkChange.setStatus(
        "current"
    )

fspR7AccountStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10023)
)
fspR7AccountStateChange.setObjects(
      *(("ADVA-FSPR7-MIB", "authTrapUserName"),
        ("ADVA-FSPR7-MIB", "authTrapAccountState"))
)
if mibBuilder.loadTexts:
    fspR7AccountStateChange.setStatus(
        "current"
    )

fspR7CommunityCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10024)
)
fspR7CommunityCreation.setObjects(
    ("ADVA-FSPR7-MIB", "communityName")
)
if mibBuilder.loadTexts:
    fspR7CommunityCreation.setStatus(
        "current"
    )

fspR7CommunityDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10025)
)
fspR7CommunityDeletion.setObjects(
    ("ADVA-FSPR7-MIB", "communityName")
)
if mibBuilder.loadTexts:
    fspR7CommunityDeletion.setStatus(
        "current"
    )

fspR7PrivilegeChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10026)
)
fspR7PrivilegeChange.setObjects(
      *(("ADVA-FSPR7-MIB", "privilegeChangeState"),
        ("ADVA-FSPR7-MIB", "privilegeChangeUserName"),
        ("ADVA-FSPR7-MIB", "privilegeChangeIpAddress"),
        ("ADVA-FSPR7-MIB", "privilegeChangeInterface"),
        ("ADVA-FSPR7-MIB", "privilegeChangeCurrentPrivilege"),
        ("ADVA-FSPR7-MIB", "privilegeChangeRequestedPrivilege"),
        ("ADVA-FSPR7-MIB", "privilegeChangeDuration"))
)
if mibBuilder.loadTexts:
    fspR7PrivilegeChange.setStatus(
        "current"
    )

fspR7AuthenticationNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10027)
)
fspR7AuthenticationNotification.setObjects(
      *(("ADVA-FSPR7-MIB", "authTrapSrcIp"),
        ("ADVA-FSPR7-MIB", "authTrapStatus"),
        ("ADVA-FSPR7-MIB", "authTrapSessionId"),
        ("ADVA-FSPR7-MIB", "authTrapProtocol"),
        ("ADVA-FSPR7-MIB", "authTrapPort"),
        ("ADVA-FSPR7-MIB", "authTrapUserName"),
        ("ADVA-FSPR7-MIB", "authTrapAccess"))
)
if mibBuilder.loadTexts:
    fspR7AuthenticationNotification.setStatus(
        "current"
    )

fspR7AuthenticationNotificationSummary = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 7, 5, 0, 10028)
)
fspR7AuthenticationNotificationSummary.setObjects(
      *(("ADVA-FSPR7-MIB", "authTrapProtocol"),
        ("ADVA-FSPR7-MIB", "authTrapSuccessfulAuthCount"),
        ("ADVA-FSPR7-MIB", "authTrapUnsuccessfulAuthCount"))
)
if mibBuilder.loadTexts:
    fspR7AuthenticationNotificationSummary.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "ADVA-FSPR7-MIB",
    **{"advaFspR7": advaFspR7,
       "containers": containers,
       "containerShelfTable": containerShelfTable,
       "containerShelfEntry": containerShelfEntry,
       "containerShelfShelfNo": containerShelfShelfNo,
       "containerShelfSlotNo": containerShelfSlotNo,
       "containerShelfPortNo": containerShelfPortNo,
       "containerShelfExtNo": containerShelfExtNo,
       "containerShelfClassName": containerShelfClassName,
       "containerShelfAidString": containerShelfAidString,
       "containerShelfClass": containerShelfClass,
       "containerShelfTableId": containerShelfTableId,
       "containerShelfEquipmentState": containerShelfEquipmentState,
       "containerShelfParentId": containerShelfParentId,
       "containerFanTable": containerFanTable,
       "containerFanEntry": containerFanEntry,
       "containerFanShelfNo": containerFanShelfNo,
       "containerFanSlotNo": containerFanSlotNo,
       "containerFanPortNo": containerFanPortNo,
       "containerFanExtNo": containerFanExtNo,
       "containerFanClassName": containerFanClassName,
       "containerFanAidString": containerFanAidString,
       "containerFanClass": containerFanClass,
       "containerFanTableId": containerFanTableId,
       "containerFanEquipmentState": containerFanEquipmentState,
       "containerFanParentId": containerFanParentId,
       "containerPlugTable": containerPlugTable,
       "containerPlugEntry": containerPlugEntry,
       "containerPlugShelfNo": containerPlugShelfNo,
       "containerPlugSlotNo": containerPlugSlotNo,
       "containerPlugPortNo": containerPlugPortNo,
       "containerPlugExtNo": containerPlugExtNo,
       "containerPlugClassName": containerPlugClassName,
       "containerPlugAidString": containerPlugAidString,
       "containerPlugClass": containerPlugClass,
       "containerPlugTableId": containerPlugTableId,
       "containerPlugEquipmentState": containerPlugEquipmentState,
       "containerPlugParentId": containerPlugParentId,
       "containerModTable": containerModTable,
       "containerModEntry": containerModEntry,
       "containerModShelfNo": containerModShelfNo,
       "containerModSlotNo": containerModSlotNo,
       "containerModPortNo": containerModPortNo,
       "containerModExtNo": containerModExtNo,
       "containerModClassName": containerModClassName,
       "containerModAidString": containerModAidString,
       "containerModClass": containerModClass,
       "containerModTableId": containerModTableId,
       "containerModEquipmentState": containerModEquipmentState,
       "containerModParentId": containerModParentId,
       "containerVchTable": containerVchTable,
       "containerVchEntry": containerVchEntry,
       "containerVchShelfNo": containerVchShelfNo,
       "containerVchSlotNo": containerVchSlotNo,
       "containerVchPortNo": containerVchPortNo,
       "containerVchExtNo": containerVchExtNo,
       "containerVchClassName": containerVchClassName,
       "containerVchAidString": containerVchAidString,
       "containerVchClass": containerVchClass,
       "containerVchTableId": containerVchTableId,
       "containerVchParentId": containerVchParentId,
       "containerCrossConnTable": containerCrossConnTable,
       "containerCrossConnEntry": containerCrossConnEntry,
       "containerCrossConnFromShelfNo": containerCrossConnFromShelfNo,
       "containerCrossConnFromSlotNo": containerCrossConnFromSlotNo,
       "containerCrossConnFromPortNo": containerCrossConnFromPortNo,
       "containerCrossConnFromExtNo": containerCrossConnFromExtNo,
       "containerCrossConnFromClassName": containerCrossConnFromClassName,
       "containerCrossConnToShelfNo": containerCrossConnToShelfNo,
       "containerCrossConnToSlotNo": containerCrossConnToSlotNo,
       "containerCrossConnToPortNo": containerCrossConnToPortNo,
       "containerCrossConnToExtNo": containerCrossConnToExtNo,
       "containerCrossConnToClassName": containerCrossConnToClassName,
       "containerCrossConnClassName": containerCrossConnClassName,
       "containerCrossConnAidString": containerCrossConnAidString,
       "containerCrossConnFromId": containerCrossConnFromId,
       "containerCrossConnToId": containerCrossConnToId,
       "containerCrossConnClass": containerCrossConnClass,
       "containerCrossConnTableId": containerCrossConnTableId,
       "containerCrossConnParentId": containerCrossConnParentId,
       "containerCrossConnFromPointTable": containerCrossConnFromPointTable,
       "containerCrossConnFromPointEntry": containerCrossConnFromPointEntry,
       "containerCrossConnFromPointShelfNo": containerCrossConnFromPointShelfNo,
       "containerCrossConnFromPointSlotNo": containerCrossConnFromPointSlotNo,
       "containerCrossConnFromPointPortNo": containerCrossConnFromPointPortNo,
       "containerCrossConnFromPointExtNo": containerCrossConnFromPointExtNo,
       "containerCrossConnFromPointClassName": containerCrossConnFromPointClassName,
       "containerCrossConnFromPointAidString": containerCrossConnFromPointAidString,
       "containerCrossConnFromPointFromId": containerCrossConnFromPointFromId,
       "containerCrossConnFromPointClass": containerCrossConnFromPointClass,
       "containerCrossConnFromPointTableId": containerCrossConnFromPointTableId,
       "containerCrossConnFromPointParentId": containerCrossConnFromPointParentId,
       "containerTerminPointTable": containerTerminPointTable,
       "containerTerminPointEntry": containerTerminPointEntry,
       "containerTerminPointIndexNo1": containerTerminPointIndexNo1,
       "containerTerminPointIndexNo2": containerTerminPointIndexNo2,
       "containerTerminPointIndexNo3": containerTerminPointIndexNo3,
       "containerTerminPointIndexNo4": containerTerminPointIndexNo4,
       "containerTerminPointClassName": containerTerminPointClassName,
       "containerTerminPointAidString": containerTerminPointAidString,
       "containerTerminPointClass": containerTerminPointClass,
       "containerTerminPointTableId": containerTerminPointTableId,
       "containerTerminPointParentId": containerTerminPointParentId,
       "containerConnectStdTable": containerConnectStdTable,
       "containerConnectStdEntry": containerConnectStdEntry,
       "containerConnectStdNotation": containerConnectStdNotation,
       "containerConnectStdFromIndexNo1": containerConnectStdFromIndexNo1,
       "containerConnectStdFromIndexNo2": containerConnectStdFromIndexNo2,
       "containerConnectStdFromIndexNo3": containerConnectStdFromIndexNo3,
       "containerConnectStdFromIndexNo4": containerConnectStdFromIndexNo4,
       "containerConnectStdFromClassName": containerConnectStdFromClassName,
       "containerConnectStdToIndexNo1": containerConnectStdToIndexNo1,
       "containerConnectStdToIndexNo2": containerConnectStdToIndexNo2,
       "containerConnectStdToIndexNo3": containerConnectStdToIndexNo3,
       "containerConnectStdToIndexNo4": containerConnectStdToIndexNo4,
       "containerConnectStdToClassName": containerConnectStdToClassName,
       "containerConnectStdClassName": containerConnectStdClassName,
       "containerConnectStdAidString": containerConnectStdAidString,
       "containerConnectStdFromId": containerConnectStdFromId,
       "containerConnectStdToId": containerConnectStdToId,
       "containerConnectStdClass": containerConnectStdClass,
       "containerConnectStdTableId": containerConnectStdTableId,
       "containerConnectStdParentId": containerConnectStdParentId,
       "containerConnectNonStdTable": containerConnectNonStdTable,
       "containerConnectNonStdEntry": containerConnectNonStdEntry,
       "containerConnectNonStdNotation": containerConnectNonStdNotation,
       "containerConnectNonStdFromIndexNo1": containerConnectNonStdFromIndexNo1,
       "containerConnectNonStdFromIndexNo2": containerConnectNonStdFromIndexNo2,
       "containerConnectNonStdFromIndexNo3": containerConnectNonStdFromIndexNo3,
       "containerConnectNonStdFromIndexNo4": containerConnectNonStdFromIndexNo4,
       "containerConnectNonStdFromClassName": containerConnectNonStdFromClassName,
       "containerConnectNonStdToIndexNo1": containerConnectNonStdToIndexNo1,
       "containerConnectNonStdToIndexNo2": containerConnectNonStdToIndexNo2,
       "containerConnectNonStdToIndexNo3": containerConnectNonStdToIndexNo3,
       "containerConnectNonStdToIndexNo4": containerConnectNonStdToIndexNo4,
       "containerConnectNonStdToClassName": containerConnectNonStdToClassName,
       "containerConnectNonStdClassName": containerConnectNonStdClassName,
       "containerConnectNonStdAidString": containerConnectNonStdAidString,
       "containerConnectNonStdFromId": containerConnectNonStdFromId,
       "containerConnectNonStdToId": containerConnectNonStdToId,
       "containerConnectNonStdClass": containerConnectNonStdClass,
       "containerConnectNonStdTableId": containerConnectNonStdTableId,
       "containerConnectNonStdParentId": containerConnectNonStdParentId,
       "containerExternalPortTable": containerExternalPortTable,
       "containerExternalPortEntry": containerExternalPortEntry,
       "containerExternalPortShelfNo": containerExternalPortShelfNo,
       "containerExternalPortSlotNo": containerExternalPortSlotNo,
       "containerExternalPortPortNo": containerExternalPortPortNo,
       "containerExternalPortExtNo": containerExternalPortExtNo,
       "containerExternalPortClassName": containerExternalPortClassName,
       "containerExternalPortAidString": containerExternalPortAidString,
       "containerExternalPortClass": containerExternalPortClass,
       "containerExternalPortTableId": containerExternalPortTableId,
       "containerExternalPortParentId": containerExternalPortParentId,
       "containerCrsOptLineTable": containerCrsOptLineTable,
       "containerCrsOptLineEntry": containerCrsOptLineEntry,
       "containerCrsOptLineFromIndexNo1": containerCrsOptLineFromIndexNo1,
       "containerCrsOptLineFromIndexNo2": containerCrsOptLineFromIndexNo2,
       "containerCrsOptLineFromIndexNo3": containerCrsOptLineFromIndexNo3,
       "containerCrsOptLineFromIndexNo4": containerCrsOptLineFromIndexNo4,
       "containerCrsOptLineFromClassName": containerCrsOptLineFromClassName,
       "containerCrsOptLineToIndexNo1": containerCrsOptLineToIndexNo1,
       "containerCrsOptLineToIndexNo2": containerCrsOptLineToIndexNo2,
       "containerCrsOptLineToIndexNo3": containerCrsOptLineToIndexNo3,
       "containerCrsOptLineToIndexNo4": containerCrsOptLineToIndexNo4,
       "containerCrsOptLineToClassName": containerCrsOptLineToClassName,
       "containerCrsOptLineClassName": containerCrsOptLineClassName,
       "containerCrsOptLineAidString": containerCrsOptLineAidString,
       "containerCrsOptLineFromId": containerCrsOptLineFromId,
       "containerCrsOptLineToId": containerCrsOptLineToId,
       "containerCrsOptLineClass": containerCrsOptLineClass,
       "containerCrsOptLineTableId": containerCrsOptLineTableId,
       "containerCrsOptLineParentId": containerCrsOptLineParentId,
       "containerCrsOptLineFromPointTable": containerCrsOptLineFromPointTable,
       "containerCrsOptLineFromPointEntry": containerCrsOptLineFromPointEntry,
       "containerCrsOptLineFromPointIndexNo1": containerCrsOptLineFromPointIndexNo1,
       "containerCrsOptLineFromPointIndexNo2": containerCrsOptLineFromPointIndexNo2,
       "containerCrsOptLineFromPointIndexNo3": containerCrsOptLineFromPointIndexNo3,
       "containerCrsOptLineFromPointIndexNo4": containerCrsOptLineFromPointIndexNo4,
       "containerCrsOptLineFromPointClassName": containerCrsOptLineFromPointClassName,
       "containerCrsOptLineFromPointAidString": containerCrsOptLineFromPointAidString,
       "containerCrsOptLineFromPointFromId": containerCrsOptLineFromPointFromId,
       "containerCrsOptLineFromPointClass": containerCrsOptLineFromPointClass,
       "containerCrsOptLineFromPointTableId": containerCrsOptLineFromPointTableId,
       "containerCrsOptLineFromPointParentId": containerCrsOptLineFromPointParentId,
       "containerExternalOmTable": containerExternalOmTable,
       "containerExternalOmEntry": containerExternalOmEntry,
       "containerExternalOmShelfNo": containerExternalOmShelfNo,
       "containerExternalOmSlotNo": containerExternalOmSlotNo,
       "containerExternalOmPortNo": containerExternalOmPortNo,
       "containerExternalOmExtNo": containerExternalOmExtNo,
       "containerExternalOmClassName": containerExternalOmClassName,
       "containerExternalOmAidString": containerExternalOmAidString,
       "containerExternalOmClass": containerExternalOmClass,
       "containerExternalOmTableId": containerExternalOmTableId,
       "containerExternalOmParentId": containerExternalOmParentId,
       "containerExternalVchTable": containerExternalVchTable,
       "containerExternalVchEntry": containerExternalVchEntry,
       "containerExternalVchShelfNo": containerExternalVchShelfNo,
       "containerExternalVchSlotNo": containerExternalVchSlotNo,
       "containerExternalVchPortNo": containerExternalVchPortNo,
       "containerExternalVchExtNo": containerExternalVchExtNo,
       "containerExternalVchClassName": containerExternalVchClassName,
       "containerExternalVchAidString": containerExternalVchAidString,
       "containerExternalVchClass": containerExternalVchClass,
       "containerExternalVchTableId": containerExternalVchTableId,
       "containerExternalVchParentId": containerExternalVchParentId,
       "containerChTable": containerChTable,
       "containerChEntry": containerChEntry,
       "containerChShelfNo": containerChShelfNo,
       "containerChSlotNo": containerChSlotNo,
       "containerChPortNo": containerChPortNo,
       "containerChExtNo": containerChExtNo,
       "containerChClassName": containerChClassName,
       "containerChAidString": containerChAidString,
       "containerChClass": containerChClass,
       "containerChTableId": containerChTableId,
       "containerChParentId": containerChParentId,
       "containerEthTable": containerEthTable,
       "containerEthEntry": containerEthEntry,
       "containerEthShelfNo": containerEthShelfNo,
       "containerEthSlotNo": containerEthSlotNo,
       "containerEthPortNo": containerEthPortNo,
       "containerEthExtNo": containerEthExtNo,
       "containerEthClassName": containerEthClassName,
       "containerEthAidString": containerEthAidString,
       "containerEthClass": containerEthClass,
       "containerEthTableId": containerEthTableId,
       "containerEthParentId": containerEthParentId,
       "containerVethTable": containerVethTable,
       "containerVethEntry": containerVethEntry,
       "containerVethShelfNo": containerVethShelfNo,
       "containerVethSlotNo": containerVethSlotNo,
       "containerVethPortNo": containerVethPortNo,
       "containerVethExtNo": containerVethExtNo,
       "containerVethClassName": containerVethClassName,
       "containerVethAidString": containerVethAidString,
       "containerVethClass": containerVethClass,
       "containerVethTableId": containerVethTableId,
       "containerVethParentId": containerVethParentId,
       "containerOtlgTable": containerOtlgTable,
       "containerOtlgEntry": containerOtlgEntry,
       "containerOtlgShelfNo": containerOtlgShelfNo,
       "containerOtlgSlotNo": containerOtlgSlotNo,
       "containerOtlgPortNo": containerOtlgPortNo,
       "containerOtlgExtNo": containerOtlgExtNo,
       "containerOtlgClassName": containerOtlgClassName,
       "containerOtlgAidString": containerOtlgAidString,
       "containerOtlgClass": containerOtlgClass,
       "containerOtlgTableId": containerOtlgTableId,
       "containerOtlgParentId": containerOtlgParentId,
       "containerPchTable": containerPchTable,
       "containerPchEntry": containerPchEntry,
       "containerPchShelfNo": containerPchShelfNo,
       "containerPchSlotNo": containerPchSlotNo,
       "containerPchPortNo": containerPchPortNo,
       "containerPchExtNo": containerPchExtNo,
       "containerPchClassName": containerPchClassName,
       "containerPchAidString": containerPchAidString,
       "containerPchClass": containerPchClass,
       "containerPchTableId": containerPchTableId,
       "containerPchParentId": containerPchParentId,
       "containerVschTable": containerVschTable,
       "containerVschEntry": containerVschEntry,
       "containerVschShelfNo": containerVschShelfNo,
       "containerVschSlotNo": containerVschSlotNo,
       "containerVschPortNo": containerVschPortNo,
       "containerVschExtNo": containerVschExtNo,
       "containerVschClassName": containerVschClassName,
       "containerVschAidString": containerVschAidString,
       "containerVschClass": containerVschClass,
       "containerVschTableId": containerVschTableId,
       "containerVschParentId": containerVschParentId,
       "containerVch1Table": containerVch1Table,
       "containerVch1Entry": containerVch1Entry,
       "containerVch1ShelfNo": containerVch1ShelfNo,
       "containerVch1SlotNo": containerVch1SlotNo,
       "containerVch1PortNo": containerVch1PortNo,
       "containerVch1ExtNo": containerVch1ExtNo,
       "containerVch1ClassName": containerVch1ClassName,
       "containerVch1AidString": containerVch1AidString,
       "containerVch1Class": containerVch1Class,
       "containerVch1TableId": containerVch1TableId,
       "containerVch1ParentId": containerVch1ParentId,
       "containerOmTable": containerOmTable,
       "containerOmEntry": containerOmEntry,
       "containerOmShelfNo": containerOmShelfNo,
       "containerOmSlotNo": containerOmSlotNo,
       "containerOmPortNo": containerOmPortNo,
       "containerOmExtNo": containerOmExtNo,
       "containerOmClassName": containerOmClassName,
       "containerOmAidString": containerOmAidString,
       "containerOmClass": containerOmClass,
       "containerOmTableId": containerOmTableId,
       "containerOmParentId": containerOmParentId,
       "containerVomTable": containerVomTable,
       "containerVomEntry": containerVomEntry,
       "containerVomShelfNo": containerVomShelfNo,
       "containerVomSlotNo": containerVomSlotNo,
       "containerVomPortNo": containerVomPortNo,
       "containerVomExtNo": containerVomExtNo,
       "containerVomClassName": containerVomClassName,
       "containerVomAidString": containerVomAidString,
       "containerVomClass": containerVomClass,
       "containerVomTableId": containerVomTableId,
       "containerVomParentId": containerVomParentId,
       "containerShelfConnTable": containerShelfConnTable,
       "containerShelfConnEntry": containerShelfConnEntry,
       "containerShelfConnShelfNo": containerShelfConnShelfNo,
       "containerShelfConnSlotNo": containerShelfConnSlotNo,
       "containerShelfConnPortNo": containerShelfConnPortNo,
       "containerShelfConnExtNo": containerShelfConnExtNo,
       "containerShelfConnClassName": containerShelfConnClassName,
       "containerShelfConnAidString": containerShelfConnAidString,
       "containerShelfConnClass": containerShelfConnClass,
       "containerShelfConnTableId": containerShelfConnTableId,
       "containerShelfConnParentId": containerShelfConnParentId,
       "containerFfpTable": containerFfpTable,
       "containerFfpEntry": containerFfpEntry,
       "containerFfpShelfNo": containerFfpShelfNo,
       "containerFfpSlotNo": containerFfpSlotNo,
       "containerFfpPortNo": containerFfpPortNo,
       "containerFfpExtNo": containerFfpExtNo,
       "containerFfpClassName": containerFfpClassName,
       "containerFfpAidString": containerFfpAidString,
       "containerFfpClass": containerFfpClass,
       "containerFfpTableId": containerFfpTableId,
       "containerFfpParentId": containerFfpParentId,
       "containerEccTable": containerEccTable,
       "containerEccEntry": containerEccEntry,
       "containerEccShelfNo": containerEccShelfNo,
       "containerEccSlotNo": containerEccSlotNo,
       "containerEccPortNo": containerEccPortNo,
       "containerEccExtNo": containerEccExtNo,
       "containerEccClassName": containerEccClassName,
       "containerEccAidString": containerEccAidString,
       "containerEccClass": containerEccClass,
       "containerEccTableId": containerEccTableId,
       "containerEccParentId": containerEccParentId,
       "containerLinkTable": containerLinkTable,
       "containerLinkEntry": containerLinkEntry,
       "containerLinkShelfNo": containerLinkShelfNo,
       "containerLinkSlotNo": containerLinkSlotNo,
       "containerLinkPortNo": containerLinkPortNo,
       "containerLinkExtNo": containerLinkExtNo,
       "containerLinkClassName": containerLinkClassName,
       "containerLinkAidString": containerLinkAidString,
       "containerLinkClass": containerLinkClass,
       "containerLinkTableId": containerLinkTableId,
       "containerLinkParentId": containerLinkParentId,
       "containerScTable": containerScTable,
       "containerScEntry": containerScEntry,
       "containerScShelfNo": containerScShelfNo,
       "containerScSlotNo": containerScSlotNo,
       "containerScPortNo": containerScPortNo,
       "containerScExtNo": containerScExtNo,
       "containerScClassName": containerScClassName,
       "containerScAidString": containerScAidString,
       "containerScClass": containerScClass,
       "containerScTableId": containerScTableId,
       "containerScParentId": containerScParentId,
       "containerLanTable": containerLanTable,
       "containerLanEntry": containerLanEntry,
       "containerLanShelfNo": containerLanShelfNo,
       "containerLanSlotNo": containerLanSlotNo,
       "containerLanPortNo": containerLanPortNo,
       "containerLanExtNo": containerLanExtNo,
       "containerLanClassName": containerLanClassName,
       "containerLanAidString": containerLanAidString,
       "containerLanClass": containerLanClass,
       "containerLanTableId": containerLanTableId,
       "containerLanParentId": containerLanParentId,
       "containerEnvTable": containerEnvTable,
       "containerEnvEntry": containerEnvEntry,
       "containerEnvShelfNo": containerEnvShelfNo,
       "containerEnvSlotNo": containerEnvSlotNo,
       "containerEnvPortNo": containerEnvPortNo,
       "containerEnvExtNo": containerEnvExtNo,
       "containerEnvClassName": containerEnvClassName,
       "containerEnvAidString": containerEnvAidString,
       "containerEnvClass": containerEnvClass,
       "containerEnvTableId": containerEnvTableId,
       "containerEnvParentId": containerEnvParentId,
       "containerWchTable": containerWchTable,
       "containerWchEntry": containerWchEntry,
       "containerWchIndexNo1": containerWchIndexNo1,
       "containerWchIndexNo2": containerWchIndexNo2,
       "containerWchIndexNo3": containerWchIndexNo3,
       "containerWchIndexNo4": containerWchIndexNo4,
       "containerWchClassName": containerWchClassName,
       "containerWchAidString": containerWchAidString,
       "containerWchClass": containerWchClass,
       "containerWchTableId": containerWchTableId,
       "containerWchParentId": containerWchParentId,
       "containerOlTable": containerOlTable,
       "containerOlEntry": containerOlEntry,
       "containerOlIndexNo1": containerOlIndexNo1,
       "containerOlIndexNo2": containerOlIndexNo2,
       "containerOlIndexNo3": containerOlIndexNo3,
       "containerOlIndexNo4": containerOlIndexNo4,
       "containerOlClassName": containerOlClassName,
       "containerOlAidString": containerOlAidString,
       "containerOlClass": containerOlClass,
       "containerOlTableId": containerOlTableId,
       "containerOlParentId": containerOlParentId,
       "containerOwlgTable": containerOwlgTable,
       "containerOwlgEntry": containerOwlgEntry,
       "containerOwlgIndexNo1": containerOwlgIndexNo1,
       "containerOwlgIndexNo2": containerOwlgIndexNo2,
       "containerOwlgIndexNo3": containerOwlgIndexNo3,
       "containerOwlgIndexNo4": containerOwlgIndexNo4,
       "containerOwlgClassName": containerOwlgClassName,
       "containerOwlgAidString": containerOwlgAidString,
       "containerOwlgClass": containerOwlgClass,
       "containerOwlgTableId": containerOwlgTableId,
       "containerOwlgParentId": containerOwlgParentId,
       "containerCrossDcnTable": containerCrossDcnTable,
       "containerCrossDcnEntry": containerCrossDcnEntry,
       "containerCrossDcnShelfNo": containerCrossDcnShelfNo,
       "containerCrossDcnSlotNo": containerCrossDcnSlotNo,
       "containerCrossDcnPortNo": containerCrossDcnPortNo,
       "containerCrossDcnExtNo": containerCrossDcnExtNo,
       "containerCrossDcnClassName": containerCrossDcnClassName,
       "containerCrossDcnAidString": containerCrossDcnAidString,
       "containerCrossDcnClass": containerCrossDcnClass,
       "containerCrossDcnTableId": containerCrossDcnTableId,
       "containerCrossDcnParentId": containerCrossDcnParentId,
       "nextUnusedPc": nextUnusedPc,
       "nextUnusedFc": nextUnusedFc,
       "endOfContainers": endOfContainers,
       "entities": entities,
       "entitySysTable": entitySysTable,
       "entitySysEntry": entitySysEntry,
       "entitySysShelfNo": entitySysShelfNo,
       "entitySysSlotNo": entitySysSlotNo,
       "entitySysPortNo": entitySysPortNo,
       "entitySysExtNo": entitySysExtNo,
       "entitySysClassName": entitySysClassName,
       "entitySysAidString": entitySysAidString,
       "entitySysType": entitySysType,
       "entitySysTableId": entitySysTableId,
       "entitySysParentId": entitySysParentId,
       "entitySysClass": entitySysClass,
       "entitySysOneIndex": entitySysOneIndex,
       "entitySysEquipmentState": entitySysEquipmentState,
       "entityEqptTable": entityEqptTable,
       "entityEqptEntry": entityEqptEntry,
       "entityEqptShelfNo": entityEqptShelfNo,
       "entityEqptSlotNo": entityEqptSlotNo,
       "entityEqptPortNo": entityEqptPortNo,
       "entityEqptExtNo": entityEqptExtNo,
       "entityEqptClassName": entityEqptClassName,
       "entityEqptAidString": entityEqptAidString,
       "entityEqptType": entityEqptType,
       "entityEqptTableId": entityEqptTableId,
       "entityEqptParentId": entityEqptParentId,
       "entityEqptClass": entityEqptClass,
       "entityEqptOneIndex": entityEqptOneIndex,
       "entityEqptEquipmentState": entityEqptEquipmentState,
       "entityEqptMtosiParentId": entityEqptMtosiParentId,
       "entityDcnTable": entityDcnTable,
       "entityDcnEntry": entityDcnEntry,
       "entityDcnShelfNo": entityDcnShelfNo,
       "entityDcnSlotNo": entityDcnSlotNo,
       "entityDcnPortNo": entityDcnPortNo,
       "entityDcnExtNo": entityDcnExtNo,
       "entityDcnClassName": entityDcnClassName,
       "entityDcnAidString": entityDcnAidString,
       "entityDcnType": entityDcnType,
       "entityDcnTableId": entityDcnTableId,
       "entityDcnParentId": entityDcnParentId,
       "entityDcnClass": entityDcnClass,
       "entityDcnOneIndex": entityDcnOneIndex,
       "entityOptLineTable": entityOptLineTable,
       "entityOptLineEntry": entityOptLineEntry,
       "entityOptLineIndexNo1": entityOptLineIndexNo1,
       "entityOptLineIndexNo2": entityOptLineIndexNo2,
       "entityOptLineIndexNo3": entityOptLineIndexNo3,
       "entityOptLineIndexNo4": entityOptLineIndexNo4,
       "entityOptLineClassName": entityOptLineClassName,
       "entityOptLineAidString": entityOptLineAidString,
       "entityOptLineType": entityOptLineType,
       "entityOptLineTableId": entityOptLineTableId,
       "entityOptLineParentId": entityOptLineParentId,
       "entityOptLineOneIndex": entityOptLineOneIndex,
       "entityOptLineClass": entityOptLineClass,
       "entityEnvTable": entityEnvTable,
       "entityEnvEntry": entityEnvEntry,
       "entityEnvShelfNo": entityEnvShelfNo,
       "entityEnvSlotNo": entityEnvSlotNo,
       "entityEnvPortNo": entityEnvPortNo,
       "entityEnvExtNo": entityEnvExtNo,
       "entityEnvClassName": entityEnvClassName,
       "entityEnvAidString": entityEnvAidString,
       "entityEnvType": entityEnvType,
       "entityEnvTableId": entityEnvTableId,
       "entityEnvParentId": entityEnvParentId,
       "entityEnvClass": entityEnvClass,
       "entityEnvOneIndex": entityEnvOneIndex,
       "entityFacilityTable": entityFacilityTable,
       "entityFacilityEntry": entityFacilityEntry,
       "entityFacilityShelfNo": entityFacilityShelfNo,
       "entityFacilitySlotNo": entityFacilitySlotNo,
       "entityFacilityPortNo": entityFacilityPortNo,
       "entityFacilityExtNo": entityFacilityExtNo,
       "entityFacilityClassName": entityFacilityClassName,
       "entityFacilityAidString": entityFacilityAidString,
       "entityFacilityType": entityFacilityType,
       "entityFacilityTableId": entityFacilityTableId,
       "entityFacilityParentId": entityFacilityParentId,
       "entityFacilityClass": entityFacilityClass,
       "entityFacilityOneIndex": entityFacilityOneIndex,
       "entityCrossConnTable": entityCrossConnTable,
       "entityCrossConnEntry": entityCrossConnEntry,
       "entityCrossConnFromShelfNo": entityCrossConnFromShelfNo,
       "entityCrossConnFromSlotNo": entityCrossConnFromSlotNo,
       "entityCrossConnFromPortNo": entityCrossConnFromPortNo,
       "entityCrossConnFromExtNo": entityCrossConnFromExtNo,
       "entityCrossConnFromClassName": entityCrossConnFromClassName,
       "entityCrossConnToShelfNo": entityCrossConnToShelfNo,
       "entityCrossConnToSlotNo": entityCrossConnToSlotNo,
       "entityCrossConnToPortNo": entityCrossConnToPortNo,
       "entityCrossConnToExtNo": entityCrossConnToExtNo,
       "entityCrossConnToClassName": entityCrossConnToClassName,
       "entityCrossConnClassName": entityCrossConnClassName,
       "entityCrossConnAidString": entityCrossConnAidString,
       "entityCrossConnType": entityCrossConnType,
       "entityCrossConnTableId": entityCrossConnTableId,
       "entityCrossConnParentId": entityCrossConnParentId,
       "entityCrossConnFromId": entityCrossConnFromId,
       "entityCrossConnToId": entityCrossConnToId,
       "entityCrossConnClass": entityCrossConnClass,
       "entityTerminPointTable": entityTerminPointTable,
       "entityTerminPointEntry": entityTerminPointEntry,
       "entityTerminPointIndexNo1": entityTerminPointIndexNo1,
       "entityTerminPointIndexNo2": entityTerminPointIndexNo2,
       "entityTerminPointIndexNo3": entityTerminPointIndexNo3,
       "entityTerminPointIndexNo4": entityTerminPointIndexNo4,
       "entityTerminPointClassName": entityTerminPointClassName,
       "entityTerminPointAidString": entityTerminPointAidString,
       "entityTerminPointType": entityTerminPointType,
       "entityTerminPointAssignState": entityTerminPointAssignState,
       "entityTerminPointTableId": entityTerminPointTableId,
       "entityTerminPointParentId": entityTerminPointParentId,
       "entityTerminPointOneIndex": entityTerminPointOneIndex,
       "entityTerminPointReferencedTo": entityTerminPointReferencedTo,
       "entityTerminPointClass": entityTerminPointClass,
       "entityTerminPointPortClass": entityTerminPointPortClass,
       "entityConnectionTable": entityConnectionTable,
       "entityConnectionEntry": entityConnectionEntry,
       "entityConnectionClassName": entityConnectionClassName,
       "entityConnectionAidString": entityConnectionAidString,
       "entityConnectionType": entityConnectionType,
       "entityConnectionTableId": entityConnectionTableId,
       "entityConnectionParentId": entityConnectionParentId,
       "entityConnectionFromId": entityConnectionFromId,
       "entityConnectionToId": entityConnectionToId,
       "entityConnectionClass": entityConnectionClass,
       "entityExternalPortTable": entityExternalPortTable,
       "entityExternalPortEntry": entityExternalPortEntry,
       "entityExternalPortShelfNo": entityExternalPortShelfNo,
       "entityExternalPortSlotNo": entityExternalPortSlotNo,
       "entityExternalPortPortNo": entityExternalPortPortNo,
       "entityExternalPortExtNo": entityExternalPortExtNo,
       "entityExternalPortClassName": entityExternalPortClassName,
       "entityExternalPortAidString": entityExternalPortAidString,
       "entityExternalPortType": entityExternalPortType,
       "entityExternalPortTableId": entityExternalPortTableId,
       "entityExternalPortParentId": entityExternalPortParentId,
       "entityExternalPortClass": entityExternalPortClass,
       "entityExternalPortOneIndex": entityExternalPortOneIndex,
       "entityCrsOptLineTable": entityCrsOptLineTable,
       "entityCrsOptLineEntry": entityCrsOptLineEntry,
       "entityCrsOptLineFromIndexNo1": entityCrsOptLineFromIndexNo1,
       "entityCrsOptLineFromIndexNo2": entityCrsOptLineFromIndexNo2,
       "entityCrsOptLineFromIndexNo3": entityCrsOptLineFromIndexNo3,
       "entityCrsOptLineFromIndexNo4": entityCrsOptLineFromIndexNo4,
       "entityCrsOptLineFromClassName": entityCrsOptLineFromClassName,
       "entityCrsOptLineToIndexNo1": entityCrsOptLineToIndexNo1,
       "entityCrsOptLineToIndexNo2": entityCrsOptLineToIndexNo2,
       "entityCrsOptLineToIndexNo3": entityCrsOptLineToIndexNo3,
       "entityCrsOptLineToIndexNo4": entityCrsOptLineToIndexNo4,
       "entityCrsOptLineToClassName": entityCrsOptLineToClassName,
       "entityCrsOptLineClassName": entityCrsOptLineClassName,
       "entityCrsOptLineAidString": entityCrsOptLineAidString,
       "entityCrsOptLineType": entityCrsOptLineType,
       "entityCrsOptLineTableId": entityCrsOptLineTableId,
       "entityCrsOptLineParentId": entityCrsOptLineParentId,
       "entityCrsOptLineFromId": entityCrsOptLineFromId,
       "entityCrsOptLineToId": entityCrsOptLineToId,
       "entityCrsOptLineClass": entityCrsOptLineClass,
       "entityContainerTable": entityContainerTable,
       "entityContainerEntry": entityContainerEntry,
       "entityContainerShelfNo": entityContainerShelfNo,
       "entityContainerSlotNo": entityContainerSlotNo,
       "entityContainerPortNo": entityContainerPortNo,
       "entityContainerExtNo": entityContainerExtNo,
       "entityContainerClassName": entityContainerClassName,
       "entityContainerAidString": entityContainerAidString,
       "entityContainerType": entityContainerType,
       "entityContainerTableId": entityContainerTableId,
       "entityContainerParentId": entityContainerParentId,
       "entityContainerClass": entityContainerClass,
       "entityContainerOneIndex": entityContainerOneIndex,
       "entityOpticalMuxTable": entityOpticalMuxTable,
       "entityOpticalMuxEntry": entityOpticalMuxEntry,
       "entityOpticalMuxShelfNo": entityOpticalMuxShelfNo,
       "entityOpticalMuxSlotNo": entityOpticalMuxSlotNo,
       "entityOpticalMuxPortNo": entityOpticalMuxPortNo,
       "entityOpticalMuxExtNo": entityOpticalMuxExtNo,
       "entityOpticalMuxClassName": entityOpticalMuxClassName,
       "entityOpticalMuxAidString": entityOpticalMuxAidString,
       "entityOpticalMuxType": entityOpticalMuxType,
       "entityOpticalMuxTableId": entityOpticalMuxTableId,
       "entityOpticalMuxParentId": entityOpticalMuxParentId,
       "entityOpticalMuxClass": entityOpticalMuxClass,
       "entityOpticalMuxOneIndex": entityOpticalMuxOneIndex,
       "entityShelfConnTable": entityShelfConnTable,
       "entityShelfConnEntry": entityShelfConnEntry,
       "entityShelfConnShelfNo": entityShelfConnShelfNo,
       "entityShelfConnSlotNo": entityShelfConnSlotNo,
       "entityShelfConnPortNo": entityShelfConnPortNo,
       "entityShelfConnExtNo": entityShelfConnExtNo,
       "entityShelfConnClassName": entityShelfConnClassName,
       "entityShelfConnAidString": entityShelfConnAidString,
       "entityShelfConnType": entityShelfConnType,
       "entityShelfConnTableId": entityShelfConnTableId,
       "entityShelfConnParentId": entityShelfConnParentId,
       "entityShelfConnClass": entityShelfConnClass,
       "entityShelfConnOneIndex": entityShelfConnOneIndex,
       "entityFfpTable": entityFfpTable,
       "entityFfpEntry": entityFfpEntry,
       "entityFfpShelfNo": entityFfpShelfNo,
       "entityFfpSlotNo": entityFfpSlotNo,
       "entityFfpPortNo": entityFfpPortNo,
       "entityFfpExtNo": entityFfpExtNo,
       "entityFfpClassName": entityFfpClassName,
       "entityFfpAidString": entityFfpAidString,
       "entityFfpType": entityFfpType,
       "entityFfpTableId": entityFfpTableId,
       "entityFfpParentId": entityFfpParentId,
       "entityFfpClass": entityFfpClass,
       "entityFfpOneIndex": entityFfpOneIndex,
       "entityCrossDcnTable": entityCrossDcnTable,
       "entityCrossDcnEntry": entityCrossDcnEntry,
       "entityCrossDcnShelfNo": entityCrossDcnShelfNo,
       "entityCrossDcnSlotNo": entityCrossDcnSlotNo,
       "entityCrossDcnPortNo": entityCrossDcnPortNo,
       "entityCrossDcnExtNo": entityCrossDcnExtNo,
       "entityCrossDcnClassName": entityCrossDcnClassName,
       "entityCrossDcnAidString": entityCrossDcnAidString,
       "entityCrossDcnType": entityCrossDcnType,
       "entityCrossDcnTableId": entityCrossDcnTableId,
       "entityCrossDcnParentId": entityCrossDcnParentId,
       "entityCrossDcnClass": entityCrossDcnClass,
       "entityCrossDcnOneIndex": entityCrossDcnOneIndex,
       "entityProtectionCableTable": entityProtectionCableTable,
       "entityProtectionCableEntry": entityProtectionCableEntry,
       "entityProtectionCableIndex1": entityProtectionCableIndex1,
       "entityProtectionCableIndex2": entityProtectionCableIndex2,
       "entityProtectionCableIndex3": entityProtectionCableIndex3,
       "entityProtectionCableIndex4": entityProtectionCableIndex4,
       "entityProtectionCableClassName": entityProtectionCableClassName,
       "entityProtectionCableAidString": entityProtectionCableAidString,
       "entityProtectionCableType": entityProtectionCableType,
       "entityProtectionCableTableId": entityProtectionCableTableId,
       "entityProtectionCableParentId": entityProtectionCableParentId,
       "entityProtectionCableClass": entityProtectionCableClass,
       "entityFilterCableTable": entityFilterCableTable,
       "entityFilterCableEntry": entityFilterCableEntry,
       "entityFilterCableIndex1": entityFilterCableIndex1,
       "entityFilterCableIndex2": entityFilterCableIndex2,
       "entityFilterCableIndex3": entityFilterCableIndex3,
       "entityFilterCableIndex4": entityFilterCableIndex4,
       "entityFilterCableClassName": entityFilterCableClassName,
       "entityFilterCableAidString": entityFilterCableAidString,
       "entityFilterCableType": entityFilterCableType,
       "entityFilterCableTableId": entityFilterCableTableId,
       "entityFilterCableParentId": entityFilterCableParentId,
       "entityFilterCableClass": entityFilterCableClass,
       "entityMtosiSlotsTable": entityMtosiSlotsTable,
       "entityMtosiSlotsEntry": entityMtosiSlotsEntry,
       "entityMtosiSlotsShelfNo": entityMtosiSlotsShelfNo,
       "entityMtosiSlotsSlotNo": entityMtosiSlotsSlotNo,
       "entityMtosiSlotsPortNo": entityMtosiSlotsPortNo,
       "entityMtosiSlotsExtNo": entityMtosiSlotsExtNo,
       "entityMtosiSlotsClassName": entityMtosiSlotsClassName,
       "entityMtosiSlotsAidString": entityMtosiSlotsAidString,
       "entityMtosiSlotsParentId": entityMtosiSlotsParentId,
       "entityMtosiSlotsClass": entityMtosiSlotsClass,
       "entityMtosiSlotsChildId": entityMtosiSlotsChildId,
       "endOfEntities": endOfEntities,
       "management": management,
       "neMgmt": neMgmt,
       "trapModeLegacy": trapModeLegacy,
       "artificialEntity": artificialEntity,
       "identifyTraps": identifyTraps,
       "controlPlane": controlPlane,
       "autoRestart": autoRestart,
       "autoRestartMax": autoRestartMax,
       "autoRestartCount": autoRestartCount,
       "cpRest": cpRest,
       "autoProvisionOL": autoProvisionOL,
       "uidEraseTime": uidEraseTime,
       "restConf": restConf,
       "netConf": netConf,
       "networkIntelligence": networkIntelligence,
       "channelSpacing": channelSpacing,
       "sdnInterface": sdnInterface,
       "webInterface": webInterface,
       "updateFwpOnInstall": updateFwpOnInstall,
       "mpFilePointer": mpFilePointer,
       "ipConf": ipConf,
       "ipv6Control": ipv6Control,
       "ipv6DefGateway": ipv6DefGateway,
       "ipv6": ipv6,
       "ipv6PrefixLen": ipv6PrefixLen,
       "dnsServer1": dnsServer1,
       "dnsServer2": dnsServer2,
       "ospfConf": ospfConf,
       "naasMode": naasMode,
       "timeoutConf": timeoutConf,
       "netConfTmout": netConfTmout,
       "endOfNeMgmt": endOfNeMgmt,
       "specificMgmt": specificMgmt,
       "crossConnectionTable": crossConnectionTable,
       "crossConnectionEntry": crossConnectionEntry,
       "crossConnectionRowStatus": crossConnectionRowStatus,
       "crossConnectionAdmin": crossConnectionAdmin,
       "crossConnectionRedLineState": crossConnectionRedLineState,
       "crossConnectionCrsFunction": crossConnectionCrsFunction,
       "crossConnectionConn": crossConnectionConn,
       "crossConnectionCrsType": crossConnectionCrsType,
       "crossConnectionAlias": crossConnectionAlias,
       "crossConnectionPathNode": crossConnectionPathNode,
       "crossConnectionTunnelAid": crossConnectionTunnelAid,
       "crossConnectionIngressTid": crossConnectionIngressTid,
       "crossConnectionIngressNodeIp": crossConnectionIngressNodeIp,
       "crossConnectionOperState": crossConnectionOperState,
       "crossConnectionSecondaryStates": crossConnectionSecondaryStates,
       "crossConnectionType": crossConnectionType,
       "crossConnectionPathProtection": crossConnectionPathProtection,
       "crossConnectionCrsFromAidTwo": crossConnectionCrsFromAidTwo,
       "crossConnectionCrsToAidTwo": crossConnectionCrsToAidTwo,
       "crossConnectionCrsMcAidList": crossConnectionCrsMcAidList,
       "crossConnectionCrsContAidList": crossConnectionCrsContAidList,
       "crossConnectionCrsContAidListTwo": crossConnectionCrsContAidListTwo,
       "crossOpticalLineTable": crossOpticalLineTable,
       "crossOpticalLineEntry": crossOpticalLineEntry,
       "crossOpticalLineRowStatus": crossOpticalLineRowStatus,
       "crossOpticalLineRedLineState": crossOpticalLineRedLineState,
       "crossOpticalLineCrsFunction": crossOpticalLineCrsFunction,
       "crossOpticalLineConn": crossOpticalLineConn,
       "crossOpticalLineCrsType": crossOpticalLineCrsType,
       "crossOpticalLineAlias": crossOpticalLineAlias,
       "crossOpticalLineTunnelAid": crossOpticalLineTunnelAid,
       "crossOpticalLineIngressTid": crossOpticalLineIngressTid,
       "crossOpticalLineIngressNodeIp": crossOpticalLineIngressNodeIp,
       "crossOpticalLineSecondaryStates": crossOpticalLineSecondaryStates,
       "endOfCrossOpticalLineTable": endOfCrossOpticalLineTable,
       "crossDcnTable": crossDcnTable,
       "crossDcnEntry": crossDcnEntry,
       "crossDcnRowStatus": crossDcnRowStatus,
       "crossDcnType": crossDcnType,
       "crossDcnLink": crossDcnLink,
       "crossDcnEcc": crossDcnEcc,
       "endOfCrossDcnTable": endOfCrossDcnTable,
       "endOfSpecificMgmt": endOfSpecificMgmt,
       "eqptMgmt": eqptMgmt,
       "shelfTable": shelfTable,
       "shelfEntry": shelfEntry,
       "shelfRowStatus": shelfRowStatus,
       "shelfNetworkPorts": shelfNetworkPorts,
       "shelfInternalPlugs": shelfInternalPlugs,
       "shelfConnectionType": shelfConnectionType,
       "shelfOscPorts": shelfOscPorts,
       "shelfShelfHeight": shelfShelfHeight,
       "shelfChannel": shelfChannel,
       "shelfPsuOutputPower": shelfPsuOutputPower,
       "shelfType": shelfType,
       "shelfChannelsNumber": shelfChannelsNumber,
       "shelfRack": shelfRack,
       "shelfInternalPlugRates": shelfInternalPlugRates,
       "shelfConnectorType": shelfConnectorType,
       "shelfSupply": shelfSupply,
       "shelfClientPorts": shelfClientPorts,
       "shelfFiberBrand": shelfFiberBrand,
       "shelfTransmitChannel": shelfTransmitChannel,
       "shelfBandProvision": shelfBandProvision,
       "shelfUpgradePorts": shelfUpgradePorts,
       "shelfStandardSlotHeight": shelfStandardSlotHeight,
       "shelfStandardSlots": shelfStandardSlots,
       "shelfChannelBandwith": shelfChannelBandwith,
       "shelfAdmin": shelfAdmin,
       "shelfInternalPorts": shelfInternalPorts,
       "shelfRackNumber": shelfRackNumber,
       "shelfRackOrder": shelfRackOrder,
       "shelfOscChannel": shelfOscChannel,
       "shelfMaxPowerConsumption": shelfMaxPowerConsumption,
       "shelfAlias": shelfAlias,
       "shelfFiberType": shelfFiberType,
       "shelfChannelSpacing": shelfChannelSpacing,
       "shelfSecondaryStates": shelfSecondaryStates,
       "shelfOperState": shelfOperState,
       "shelfScuRing": shelfScuRing,
       "shelfShelfId": shelfShelfId,
       "shelfFDports": shelfFDports,
       "shelfSlot": shelfSlot,
       "shelfChannelRangeProvision": shelfChannelRangeProvision,
       "shelfPowerSupplyProtection": shelfPowerSupplyProtection,
       "shelfAirFilterClear": shelfAirFilterClear,
       "shelfAirFilterChange": shelfAirFilterChange,
       "shelfAirFilterCycle": shelfAirFilterCycle,
       "endOfShelfTable": endOfShelfTable,
       "fanTable": fanTable,
       "fanEntry": fanEntry,
       "fanRowStatus": fanRowStatus,
       "fanForceDestroy": fanForceDestroy,
       "fanMaxPowerConsumption": fanMaxPowerConsumption,
       "fanAdmin": fanAdmin,
       "fanType": fanType,
       "fanAlias": fanAlias,
       "fanOutputReset": fanOutputReset,
       "fanFanPorts": fanFanPorts,
       "fanSecondaryStates": fanSecondaryStates,
       "fanOperState": fanOperState,
       "fanFanProfile": fanFanProfile,
       "endOfFanTable": endOfFanTable,
       "plugTable": plugTable,
       "plugEntry": plugEntry,
       "plugRowStatus": plugRowStatus,
       "plugConnector": plugConnector,
       "plugType": plugType,
       "plugReach": plugReach,
       "plugLoopbackAttenuation": plugLoopbackAttenuation,
       "plugGenericPorts": plugGenericPorts,
       "plugConnectorType": plugConnectorType,
       "plugFiberType": plugFiberType,
       "plugTransmitChannel": plugTransmitChannel,
       "plugAlias": plugAlias,
       "plugLaneGroup": plugLaneGroup,
       "plugMaxDataRate": plugMaxDataRate,
       "plugThirdPartyUsage": plugThirdPartyUsage,
       "plugAdmin": plugAdmin,
       "plugSecondaryStates": plugSecondaryStates,
       "plugOperState": plugOperState,
       "plugBidirectionalChannel": plugBidirectionalChannel,
       "plugChannelSpacingProvision": plugChannelSpacingProvision,
       "plugChannelRangeProvision": plugChannelRangeProvision,
       "plugLength": plugLength,
       "plugPlugType": plugPlugType,
       "plugPlugMode": plugPlugMode,
       "endOfPlugTable": endOfPlugTable,
       "moduleTable": moduleTable,
       "moduleEntry": moduleEntry,
       "moduleRowStatus": moduleRowStatus,
       "moduleForceDestroy": moduleForceDestroy,
       "moduleCategory": moduleCategory,
       "moduleNetworkPorts": moduleNetworkPorts,
       "moduleInternalPlugs": moduleInternalPlugs,
       "modulePsuOutputPower": modulePsuOutputPower,
       "moduleWidth": moduleWidth,
       "modulePower": modulePower,
       "moduleReach": moduleReach,
       "moduleInitEqlz": moduleInitEqlz,
       "moduleSuppClientPlugTypes": moduleSuppClientPlugTypes,
       "moduleSuppNetworkPlugTypes": moduleSuppNetworkPlugTypes,
       "moduleLanAid": moduleLanAid,
       "moduleType": moduleType,
       "moduleMapping": moduleMapping,
       "moduleGainRange": moduleGainRange,
       "moduleInternalPlugRates": moduleInternalPlugRates,
       "moduleSfProvision": moduleSfProvision,
       "moduleInternalPlugsReach": moduleInternalPlugsReach,
       "moduleCapabilityLevelProvision": moduleCapabilityLevelProvision,
       "moduleConnector": moduleConnector,
       "moduleDCFiberType": moduleDCFiberType,
       "moduleChannelsProvision": moduleChannelsProvision,
       "moduleFiberDetect": moduleFiberDetect,
       "moduleDescription": moduleDescription,
       "moduleSupply": moduleSupply,
       "moduleSuppClientPlugRates": moduleSuppClientPlugRates,
       "moduleClientPorts": moduleClientPorts,
       "moduleGroup": moduleGroup,
       "moduleDeploy": moduleDeploy,
       "moduleLagSysPrio": moduleLagSysPrio,
       "moduleMaxPowerConsumption": moduleMaxPowerConsumption,
       "moduleTransmitChannel": moduleTransmitChannel,
       "moduleBand": moduleBand,
       "moduleUpgradePorts": moduleUpgradePorts,
       "moduleTrafficDirection": moduleTrafficDirection,
       "moduleMidstagePorts": moduleMidstagePorts,
       "moduleStages": moduleStages,
       "moduleIpAddr": moduleIpAddr,
       "moduleDispersionCompensation": moduleDispersionCompensation,
       "moduleActivateDetect": moduleActivateDetect,
       "moduleOscUsage": moduleOscUsage,
       "moduleInternalPorts": moduleInternalPorts,
       "moduleAdmin": moduleAdmin,
       "moduleScrambling": moduleScrambling,
       "moduleTerminationType": moduleTerminationType,
       "moduleChannelsNumber": moduleChannelsNumber,
       "moduleLanPorts": moduleLanPorts,
       "moduleChannelSpacingProvision": moduleChannelSpacingProvision,
       "moduleMode": moduleMode,
       "moduleEccPorts": moduleEccPorts,
       "moduleSubBandProvision": moduleSubBandProvision,
       "moduleSuppNetworkPlugRates": moduleSuppNetworkPlugRates,
       "moduleHeight": moduleHeight,
       "moduleAlias": moduleAlias,
       "moduleFiberType": moduleFiberType,
       "moduleChannelSpacing": moduleChannelSpacing,
       "moduleOutputReset": moduleOutputReset,
       "moduleSerialPorts": moduleSerialPorts,
       "moduleRoadmNumber": moduleRoadmNumber,
       "moduleSecondaryStates": moduleSecondaryStates,
       "moduleOperState": moduleOperState,
       "moduleAlsConf": moduleAlsConf,
       "moduleTopologyType": moduleTopologyType,
       "moduleScuRing": moduleScuRing,
       "moduleNodeIpAddress": moduleNodeIpAddress,
       "moduleInventoryDescription": moduleInventoryDescription,
       "moduleGenericPlugRates": moduleGenericPlugRates,
       "moduleTopology": moduleTopology,
       "moduleForceConfig": moduleForceConfig,
       "moduleRamUsage": moduleRamUsage,
       "moduleFanMode": moduleFanMode,
       "moduleMuxMethod": moduleMuxMethod,
       "moduleNdpCleanup": moduleNdpCleanup,
       "moduleAvlndpGbeTxcrs": moduleAvlndpGbeTxcrs,
       "moduleAvlndpGbeRxcrs": moduleAvlndpGbeRxcrs,
       "moduleAvlndpF125Txcrs": moduleAvlndpF125Txcrs,
       "moduleAvlndpF125Rxcrs": moduleAvlndpF125Rxcrs,
       "moduleAvlndpF270Txcrs": moduleAvlndpF270Txcrs,
       "moduleAvlndpF270Rxcrs": moduleAvlndpF270Rxcrs,
       "moduleAvlndpF1483Txcrs": moduleAvlndpF1483Txcrs,
       "moduleAvlndpF1483Rxcrs": moduleAvlndpF1483Rxcrs,
       "moduleAvlndpF1485Txcrs": moduleAvlndpF1485Txcrs,
       "moduleAvlndpF1485Rxcrs": moduleAvlndpF1485Rxcrs,
       "moduleAvlndpF2967Txcrs": moduleAvlndpF2967Txcrs,
       "moduleAvlndpF2967Rxcrs": moduleAvlndpF2967Rxcrs,
       "moduleAvlndpF2970Txcrs": moduleAvlndpF2970Txcrs,
       "moduleAvlndpF2970Rxcrs": moduleAvlndpF2970Rxcrs,
       "moduleAvlmdp": moduleAvlmdp,
       "moduleRstp": moduleRstp,
       "moduleRemoteReset": moduleRemoteReset,
       "moduleChannelRangeProvision": moduleChannelRangeProvision,
       "modulePartner1": modulePartner1,
       "modulePartner2": modulePartner2,
       "modulePartner3": modulePartner3,
       "modulePartner4": modulePartner4,
       "moduleAcp": moduleAcp,
       "moduleAvlSwCap": moduleAvlSwCap,
       "moduleAvlMapCapUp": moduleAvlMapCapUp,
       "moduleAvlMapCapDown": moduleAvlMapCapDown,
       "moduleAvlndpAdapt1485Txcrs": moduleAvlndpAdapt1485Txcrs,
       "moduleAvlndpAdapt1485Rxcrs": moduleAvlndpAdapt1485Rxcrs,
       "moduleAvlndpAdapt2970Txcrs": moduleAvlndpAdapt2970Txcrs,
       "moduleAvlndpAdapt2970Rxcrs": moduleAvlndpAdapt2970Rxcrs,
       "moduleManagementPorts": moduleManagementPorts,
       "endOfModuleTable": endOfModuleTable,
       "protectionCableTable": protectionCableTable,
       "protectionCableEntry": protectionCableEntry,
       "protectionCableRowStatus": protectionCableRowStatus,
       "protectionCableType": protectionCableType,
       "endOfProtectionCableTable": endOfProtectionCableTable,
       "filterCableTable": filterCableTable,
       "filterCableEntry": filterCableEntry,
       "filterCableRowStatus": filterCableRowStatus,
       "filterCableType": filterCableType,
       "endOfFilterCableTable": endOfFilterCableTable,
       "endOfEqptMgmt": endOfEqptMgmt,
       "facilityMgmt": facilityMgmt,
       "physicalPortTable": physicalPortTable,
       "physicalPortEntry": physicalPortEntry,
       "physicalPortRowStatus": physicalPortRowStatus,
       "physicalPortType": physicalPortType,
       "physicalPortAdmin": physicalPortAdmin,
       "physicalPortConnector": physicalPortConnector,
       "physicalPortFiber": physicalPortFiber,
       "physicalPortConnType": physicalPortConnType,
       "physicalPortOperState": physicalPortOperState,
       "physicalPortLaneChannel": physicalPortLaneChannel,
       "physicalPortLaserBiasCurrLevel": physicalPortLaserBiasCurrLevel,
       "physicalPortLaserTemp": physicalPortLaserTemp,
       "physicalPortInputPower": physicalPortInputPower,
       "physicalPortOutputPower": physicalPortOutputPower,
       "physicalPortSecondaryStates": physicalPortSecondaryStates,
       "physicalPortAlias": physicalPortAlias,
       "physicalPortAlsMode": physicalPortAlsMode,
       "physicalPortAutoThresReset": physicalPortAutoThresReset,
       "physicalPortAutonegotiation": physicalPortAutonegotiation,
       "physicalPortBand": physicalPortBand,
       "physicalPortPhysIfBaseType": physicalPortPhysIfBaseType,
       "physicalPortConnState": physicalPortConnState,
       "physicalPortBehaviour": physicalPortBehaviour,
       "physicalPortRate": physicalPortRate,
       "physicalPortBitrate": physicalPortBitrate,
       "physicalPortDispertionConfig": physicalPortDispertionConfig,
       "physicalPortDispersionSetting": physicalPortDispersionSetting,
       "physicalPortDispersionMode": physicalPortDispersionMode,
       "physicalPortChannelSpacing": physicalPortChannelSpacing,
       "physicalPortChannelProv": physicalPortChannelProv,
       "physicalPortWdmRxChannel": physicalPortWdmRxChannel,
       "physicalPortCodeGain": physicalPortCodeGain,
       "physicalPortXfpDecisionThres": physicalPortXfpDecisionThres,
       "physicalPortDisparityCorrection": physicalPortDisparityCorrection,
       "physicalPortDuplexMode": physicalPortDuplexMode,
       "physicalPortEqlzAdmin": physicalPortEqlzAdmin,
       "physicalPortErrorForwarding": physicalPortErrorForwarding,
       "physicalPortFecType": physicalPortFecType,
       "physicalPortFarEndCommunication": physicalPortFarEndCommunication,
       "physicalPortFlowControl": physicalPortFlowControl,
       "physicalPortForceLaserOn": physicalPortForceLaserOn,
       "physicalPortFrequency": physicalPortFrequency,
       "physicalPortReceiverFrequency": physicalPortReceiverFrequency,
       "physicalPortInhibitSwitchToProt": physicalPortInhibitSwitchToProt,
       "physicalPortInhibitSwitchToWork": physicalPortInhibitSwitchToWork,
       "physicalPortTransmitWavelength": physicalPortTransmitWavelength,
       "physicalPortReceiverWavelength": physicalPortReceiverWavelength,
       "physicalPortLaneChannelSetting": physicalPortLaneChannelSetting,
       "physicalPortLaneChannel1": physicalPortLaneChannel1,
       "physicalPortLaneChannel2": physicalPortLaneChannel2,
       "physicalPortLaneChannel3": physicalPortLaneChannel3,
       "physicalPortLaneChannel4": physicalPortLaneChannel4,
       "physicalPortLaneGroup": physicalPortLaneGroup,
       "physicalPortLoopConfig": physicalPortLoopConfig,
       "physicalPortLaserDelayTimer": physicalPortLaserDelayTimer,
       "physicalPortLaserOffTimer": physicalPortLaserOffTimer,
       "physicalPortLaserOnTimer": physicalPortLaserOnTimer,
       "physicalPortLaserOffDelayFunction": physicalPortLaserOffDelayFunction,
       "physicalPortMonLevel": physicalPortMonLevel,
       "physicalPortSumTransmited": physicalPortSumTransmited,
       "physicalPortAutoPTassignment": physicalPortAutoPTassignment,
       "physicalPortTributarySlotMethod": physicalPortTributarySlotMethod,
       "physicalPortTributaryFreeSlotNo": physicalPortTributaryFreeSlotNo,
       "physicalPortTributaryAssignedSlotNo": physicalPortTributaryAssignedSlotNo,
       "physicalPortInitiateEqualization": physicalPortInitiateEqualization,
       "physicalPortLossAttenuation": physicalPortLossAttenuation,
       "physicalPortOpticalSetPoint": physicalPortOpticalSetPoint,
       "physicalPortDataLayerPmReset": physicalPortDataLayerPmReset,
       "physicalPortPrbsPmReset": physicalPortPrbsPmReset,
       "physicalPortTestPrbsRcvMode": physicalPortTestPrbsRcvMode,
       "physicalPortTestPrbsTrmtMode": physicalPortTestPrbsTrmtMode,
       "physicalPortSwitchCommand": physicalPortSwitchCommand,
       "physicalPortOpuPayloadType": physicalPortOpuPayloadType,
       "physicalPortReach": physicalPortReach,
       "physicalPortSigDegThresSonetLine": physicalPortSigDegThresSonetLine,
       "physicalPortSigDegThresSdhMs": physicalPortSigDegThresSdhMs,
       "physicalPortSigDegThresOtu": physicalPortSigDegThresOtu,
       "physicalPortSigDegThresOdu": physicalPortSigDegThresOdu,
       "physicalPortSigDegThreshold": physicalPortSigDegThreshold,
       "physicalPortSigDegPcslThreshold": physicalPortSigDegPcslThreshold,
       "physicalPortSigDegThresSonetSection": physicalPortSigDegThresSonetSection,
       "physicalPortSigDegThresSdhSection": physicalPortSigDegThresSdhSection,
       "physicalPortSigDegThresOduTcmA": physicalPortSigDegThresOduTcmA,
       "physicalPortSigDegThresOduTcmB": physicalPortSigDegThresOduTcmB,
       "physicalPortSigDegThresOduTcmC": physicalPortSigDegThresOduTcmC,
       "physicalPortSignalDegradePeriod": physicalPortSignalDegradePeriod,
       "physicalPortSigDegPeriodOdu": physicalPortSigDegPeriodOdu,
       "physicalPortSigDegPeriodOtu": physicalPortSigDegPeriodOtu,
       "physicalPortSigDegPeriodIntegration": physicalPortSigDegPeriodIntegration,
       "physicalPortSigDegPeriodSdhSection": physicalPortSigDegPeriodSdhSection,
       "physicalPortSigDegPeriodOduTcmA": physicalPortSigDegPeriodOduTcmA,
       "physicalPortSigDegPeriodOduTcmB": physicalPortSigDegPeriodOduTcmB,
       "physicalPortSigDegPeriodOduTcmC": physicalPortSigDegPeriodOduTcmC,
       "physicalPortOtnStuffing": physicalPortOtnStuffing,
       "physicalPortTcmALevel": physicalPortTcmALevel,
       "physicalPortTcmBLevel": physicalPortTcmBLevel,
       "physicalPortTcmCLevel": physicalPortTcmCLevel,
       "physicalPortTerminationLevel": physicalPortTerminationLevel,
       "physicalPortTimingSource": physicalPortTimingSource,
       "physicalPortTimModeOdu": physicalPortTimModeOdu,
       "physicalPortTimModeOtu": physicalPortTimModeOtu,
       "physicalPortTimModeSonetSection": physicalPortTimModeSonetSection,
       "physicalPortTimModeOduTcmA": physicalPortTimModeOduTcmA,
       "physicalPortTimModeOduTcmB": physicalPortTimModeOduTcmB,
       "physicalPortTimModeOduTcmC": physicalPortTimModeOduTcmC,
       "physicalPortTraceFormSonetSection": physicalPortTraceFormSonetSection,
       "physicalPortTraceExpectedSonetSection": physicalPortTraceExpectedSonetSection,
       "physicalPortTraceTransmitSonetSection": physicalPortTraceTransmitSonetSection,
       "physicalPortTraceExpectedOtu": physicalPortTraceExpectedOtu,
       "physicalPortTraceTransmitSapiOtu": physicalPortTraceTransmitSapiOtu,
       "physicalPortTraceTransmitDapiOtu": physicalPortTraceTransmitDapiOtu,
       "physicalPortTraceTransmitOpspOtu": physicalPortTraceTransmitOpspOtu,
       "physicalPortTraceExpectedOdu": physicalPortTraceExpectedOdu,
       "physicalPortTraceTransmitSapiOdu": physicalPortTraceTransmitSapiOdu,
       "physicalPortTraceTransmitDapiOdu": physicalPortTraceTransmitDapiOdu,
       "physicalPortTraceTransmitOpspOdu": physicalPortTraceTransmitOpspOdu,
       "physicalPortTraceExpectedOduTcmA": physicalPortTraceExpectedOduTcmA,
       "physicalPortTraceTransmitSapiOduTcmA": physicalPortTraceTransmitSapiOduTcmA,
       "physicalPortTraceTransmitDapiOduTcmA": physicalPortTraceTransmitDapiOduTcmA,
       "physicalPortTraceTransmitOpspOduTcmA": physicalPortTraceTransmitOpspOduTcmA,
       "physicalPortTraceExpectedOduTcmB": physicalPortTraceExpectedOduTcmB,
       "physicalPortTraceTransmitSapiOduTcmB": physicalPortTraceTransmitSapiOduTcmB,
       "physicalPortTraceTransmitDapiOduTcmB": physicalPortTraceTransmitDapiOduTcmB,
       "physicalPortTraceTransmitOpspOduTcmB": physicalPortTraceTransmitOpspOduTcmB,
       "physicalPortTraceExpectedOduTcmC": physicalPortTraceExpectedOduTcmC,
       "physicalPortTraceTransmitSapiOduTcmC": physicalPortTraceTransmitSapiOduTcmC,
       "physicalPortTraceTransmitDapiOduTcmC": physicalPortTraceTransmitDapiOduTcmC,
       "physicalPortTraceTransmitOpspOduTcmC": physicalPortTraceTransmitOpspOduTcmC,
       "physicalPortTraceRcvSapiOdu": physicalPortTraceRcvSapiOdu,
       "physicalPortTraceRcvDapiOdu": physicalPortTraceRcvDapiOdu,
       "physicalPortTraceRcvOpspOdu": physicalPortTraceRcvOpspOdu,
       "physicalPortTraceRcvSapiOtu": physicalPortTraceRcvSapiOtu,
       "physicalPortTraceRcvDapiOtu": physicalPortTraceRcvDapiOtu,
       "physicalPortTraceRcvOpspOtu": physicalPortTraceRcvOpspOtu,
       "physicalPortTraceRcvSapiTcma": physicalPortTraceRcvSapiTcma,
       "physicalPortTraceRcvDapiTcma": physicalPortTraceRcvDapiTcma,
       "physicalPortTraceRcvOpspTcma": physicalPortTraceRcvOpspTcma,
       "physicalPortTraceRcvSapiTcmb": physicalPortTraceRcvSapiTcmb,
       "physicalPortTraceRcvDapiTcmb": physicalPortTraceRcvDapiTcmb,
       "physicalPortTraceRcvOpspTcmb": physicalPortTraceRcvOpspTcmb,
       "physicalPortTraceRcvSapiTcmc": physicalPortTraceRcvSapiTcmc,
       "physicalPortTraceRcvDapiTcmc": physicalPortTraceRcvDapiTcmc,
       "physicalPortTraceRcvOpspTcmc": physicalPortTraceRcvOpspTcmc,
       "physicalPortTraceReceived": physicalPortTraceReceived,
       "physicalPortTurnupConfig": physicalPortTurnupConfig,
       "physicalPortTxOffDelay": physicalPortTxOffDelay,
       "physicalPortVoaMode": physicalPortVoaMode,
       "physicalPortVoaSetpoint": physicalPortVoaSetpoint,
       "physicalPortCbsRcv": physicalPortCbsRcv,
       "physicalPortCbsTrmt": physicalPortCbsTrmt,
       "physicalPortCirRcv": physicalPortCirRcv,
       "physicalPortCirTrmt": physicalPortCirTrmt,
       "physicalPortLagPrio": physicalPortLagPrio,
       "physicalPortMacAddress": physicalPortMacAddress,
       "physicalPortMaxFrameSize": physicalPortMaxFrameSize,
       "physicalPortPayload": physicalPortPayload,
       "physicalPortPortMode": physicalPortPortMode,
       "physicalPortPortRole": physicalPortPortRole,
       "physicalPortPriority": physicalPortPriority,
       "physicalPortPvid": physicalPortPvid,
       "physicalPortStagType": physicalPortStagType,
       "physicalPortUtag": physicalPortUtag,
       "physicalPortVethAid": physicalPortVethAid,
       "physicalPortChannelBandwith": physicalPortChannelBandwith,
       "physicalPortFacilities": physicalPortFacilities,
       "physicalPortLanes": physicalPortLanes,
       "physicalPortProtectionRole": physicalPortProtectionRole,
       "physicalPortMonitoredBitrate": physicalPortMonitoredBitrate,
       "physicalPortLagState": physicalPortLagState,
       "physicalPortLagIdFend": physicalPortLagIdFend,
       "physicalPortLagFendState": physicalPortLagFendState,
       "physicalPortLagPortNo": physicalPortLagPortNo,
       "physicalPortLagKey": physicalPortLagKey,
       "physicalPortValidSigTimer": physicalPortValidSigTimer,
       "physicalPortLaserReleaseTimer": physicalPortLaserReleaseTimer,
       "physicalPortBidirectionalChannel": physicalPortBidirectionalChannel,
       "physicalPortTransmitterWavelength": physicalPortTransmitterWavelength,
       "physicalPortTransmitterFrequency": physicalPortTransmitterFrequency,
       "physicalPortRedLineState": physicalPortRedLineState,
       "physicalPortTunnelAid": physicalPortTunnelAid,
       "physicalPortIngressTid": physicalPortIngressTid,
       "physicalPortIngressNodeIp": physicalPortIngressNodeIp,
       "physicalPortRateLimit": physicalPortRateLimit,
       "physicalPortPathProtection": physicalPortPathProtection,
       "physicalPortGropticsType": physicalPortGropticsType,
       "physicalPortAvlntsTxcrs": physicalPortAvlntsTxcrs,
       "physicalPortAvlntsRxcrs": physicalPortAvlntsRxcrs,
       "physicalPortTxOffOnTm": physicalPortTxOffOnTm,
       "physicalPortTxOffTimer": physicalPortTxOffTimer,
       "physicalPortTxOnTimer": physicalPortTxOnTimer,
       "physicalPortTrafficDirection": physicalPortTrafficDirection,
       "physicalPortChannelSpacingProvision": physicalPortChannelSpacingProvision,
       "physicalPortChannelRangeProvision": physicalPortChannelRangeProvision,
       "physicalPortMode": physicalPortMode,
       "physicalPortNearEndProtectionState": physicalPortNearEndProtectionState,
       "physicalPortFarEndProtectionState": physicalPortFarEndProtectionState,
       "physicalPortChannelPlan": physicalPortChannelPlan,
       "physicalPortAutosrvLock": physicalPortAutosrvLock,
       "physicalPortOptimize": physicalPortOptimize,
       "physicalPortEncryptionChannel": physicalPortEncryptionChannel,
       "physicalPortLinkSetup": physicalPortLinkSetup,
       "physicalPortCdCompensationRange": physicalPortCdCompensationRange,
       "physicalPortLLDPNeighborsRx": physicalPortLLDPNeighborsRx,
       "physicalPortLLDPNeighborsTx": physicalPortLLDPNeighborsTx,
       "physicalPortCdPostCompensationRange": physicalPortCdPostCompensationRange,
       "physicalPortOpticalSetPointLane1": physicalPortOpticalSetPointLane1,
       "physicalPortOpticalSetPointLane2": physicalPortOpticalSetPointLane2,
       "physicalPortOduMultiplexStructure": physicalPortOduMultiplexStructure,
       "physicalPortTerminationMode": physicalPortTerminationMode,
       "physicalPortTimDetModeOtu": physicalPortTimDetModeOtu,
       "physicalPortTimActionOtu": physicalPortTimActionOtu,
       "physicalPortTraceExpectedDapiOtu": physicalPortTraceExpectedDapiOtu,
       "physicalPortTraceExpectedOpspOtu": physicalPortTraceExpectedOpspOtu,
       "physicalPortTimDetModeOdu": physicalPortTimDetModeOdu,
       "physicalPortTimActionOdu": physicalPortTimActionOdu,
       "physicalPortTraceExpectedDapiOdu": physicalPortTraceExpectedDapiOdu,
       "physicalPortTraceExpectedOpspOdu": physicalPortTraceExpectedOpspOdu,
       "physicalPortReportAisLine": physicalPortReportAisLine,
       "physicalPortReportSsfLine": physicalPortReportSsfLine,
       "physicalPortReportSsfSection": physicalPortReportSsfSection,
       "physicalPortDelayMeasurementLayer": physicalPortDelayMeasurementLayer,
       "physicalPortDelayMeasurementOperation": physicalPortDelayMeasurementOperation,
       "physicalPortDelayMeasurementStatus": physicalPortDelayMeasurementStatus,
       "physicalPortDelayMeasurementTime": physicalPortDelayMeasurementTime,
       "virtualPortTable": virtualPortTable,
       "virtualPortEntry": virtualPortEntry,
       "virtualPortRowStatus": virtualPortRowStatus,
       "virtualPortChannelBand": virtualPortChannelBand,
       "virtualPortType": virtualPortType,
       "virtualPortAlias": virtualPortAlias,
       "virtualPortFunction": virtualPortFunction,
       "virtualPortChannelProv": virtualPortChannelProv,
       "virtualPortLambda": virtualPortLambda,
       "virtualPortFrequency": virtualPortFrequency,
       "virtualPortAdmin": virtualPortAdmin,
       "virtualPortOperState": virtualPortOperState,
       "virtualPortConnState": virtualPortConnState,
       "virtualPortEqlzAdmin": virtualPortEqlzAdmin,
       "virtualPortInitEqlz": virtualPortInitEqlz,
       "virtualPortInputPower": virtualPortInputPower,
       "virtualPortOutputPower": virtualPortOutputPower,
       "virtualPortSecondaryStates": virtualPortSecondaryStates,
       "virtualPortRate": virtualPortRate,
       "virtualPortCirRcv": virtualPortCirRcv,
       "virtualPortCbsRcv": virtualPortCbsRcv,
       "virtualPortCirTrmt": virtualPortCirTrmt,
       "virtualPortCbsTrmt": virtualPortCbsTrmt,
       "virtualPortLagPorts": virtualPortLagPorts,
       "virtualPortLagPortType": virtualPortLagPortType,
       "virtualPortLagStandby": virtualPortLagStandby,
       "virtualPortLacpMode": virtualPortLacpMode,
       "virtualPortLacpTimeout": virtualPortLacpTimeout,
       "virtualPortLagActivePorts": virtualPortLagActivePorts,
       "virtualPortMacAddress": virtualPortMacAddress,
       "virtualPortMaxFrameSize": virtualPortMaxFrameSize,
       "virtualPortPortMode": virtualPortPortMode,
       "virtualPortDataLayerPmReset": virtualPortDataLayerPmReset,
       "virtualPortPortRole": virtualPortPortRole,
       "virtualPortPriority": virtualPortPriority,
       "virtualPortPvid": virtualPortPvid,
       "virtualPortRevertiveMode": virtualPortRevertiveMode,
       "virtualPortStagType": virtualPortStagType,
       "virtualPortUtag": virtualPortUtag,
       "virtualPortBundle": virtualPortBundle,
       "virtualPortSwitchCommand": virtualPortSwitchCommand,
       "virtualPortInhibitSwitchToWork": virtualPortInhibitSwitchToWork,
       "virtualPortInhibitSwitchToProt": virtualPortInhibitSwitchToProt,
       "virtualPortMonLevel": virtualPortMonLevel,
       "virtualPortOduTribPortNo": virtualPortOduTribPortNo,
       "virtualPortOduTribTimeSlottNo": virtualPortOduTribTimeSlottNo,
       "virtualPortSigDegThresOdu": virtualPortSigDegThresOdu,
       "virtualPortSigDegPeriodOdu": virtualPortSigDegPeriodOdu,
       "virtualPortTraceExpectedOdu": virtualPortTraceExpectedOdu,
       "virtualPortTraceTransmitSapiOdu": virtualPortTraceTransmitSapiOdu,
       "virtualPortTraceTransmitDapiOdu": virtualPortTraceTransmitDapiOdu,
       "virtualPortTraceTransmitOpspOdu": virtualPortTraceTransmitOpspOdu,
       "virtualPortTimModeOdu": virtualPortTimModeOdu,
       "virtualPortSigDegThresOduTcmA": virtualPortSigDegThresOduTcmA,
       "virtualPortSigDegPeriodOduTcmA": virtualPortSigDegPeriodOduTcmA,
       "virtualPortSigDegThresOduTcmB": virtualPortSigDegThresOduTcmB,
       "virtualPortSigDegPeriodOduTcmB": virtualPortSigDegPeriodOduTcmB,
       "virtualPortSigDegThresOduTcmC": virtualPortSigDegThresOduTcmC,
       "virtualPortSigDegPeriodOduTcmC": virtualPortSigDegPeriodOduTcmC,
       "virtualPortTcmALevel": virtualPortTcmALevel,
       "virtualPortTcmBLevel": virtualPortTcmBLevel,
       "virtualPortTcmCLevel": virtualPortTcmCLevel,
       "virtualPortTraceTransmitSapiOduTcmA": virtualPortTraceTransmitSapiOduTcmA,
       "virtualPortTraceTransmitDapiOduTcmA": virtualPortTraceTransmitDapiOduTcmA,
       "virtualPortTraceTransmitOpspOduTcmA": virtualPortTraceTransmitOpspOduTcmA,
       "virtualPortTraceExpectedOduTcmA": virtualPortTraceExpectedOduTcmA,
       "virtualPortTimModeOduTcmA": virtualPortTimModeOduTcmA,
       "virtualPortTraceExpectedOduTcmB": virtualPortTraceExpectedOduTcmB,
       "virtualPortTraceTransmitSapiOduTcmB": virtualPortTraceTransmitSapiOduTcmB,
       "virtualPortTraceTransmitDapiOduTcmB": virtualPortTraceTransmitDapiOduTcmB,
       "virtualPortTraceTransmitOpspOduTcmB": virtualPortTraceTransmitOpspOduTcmB,
       "virtualPortTimModeOduTcmB": virtualPortTimModeOduTcmB,
       "virtualPortTraceExpectedOduTcmC": virtualPortTraceExpectedOduTcmC,
       "virtualPortTraceTransmitSapiOduTcmC": virtualPortTraceTransmitSapiOduTcmC,
       "virtualPortTraceTransmitDapiOduTcmC": virtualPortTraceTransmitDapiOduTcmC,
       "virtualPortTraceTransmitOpspOduTcmC": virtualPortTraceTransmitOpspOduTcmC,
       "virtualPortTimModeOduTcmC": virtualPortTimModeOduTcmC,
       "virtualPortTraceRcvSapiOdu": virtualPortTraceRcvSapiOdu,
       "virtualPortTraceRcvDapiOdu": virtualPortTraceRcvDapiOdu,
       "virtualPortTraceRcvOpspOdu": virtualPortTraceRcvOpspOdu,
       "virtualPortTraceRcvSapiTcma": virtualPortTraceRcvSapiTcma,
       "virtualPortTraceRcvDapiTcma": virtualPortTraceRcvDapiTcma,
       "virtualPortTraceRcvOpspTcma": virtualPortTraceRcvOpspTcma,
       "virtualPortTraceRcvSapiTcmb": virtualPortTraceRcvSapiTcmb,
       "virtualPortTraceRcvDapiTcmb": virtualPortTraceRcvDapiTcmb,
       "virtualPortTraceRcvOpspTcmb": virtualPortTraceRcvOpspTcmb,
       "virtualPortTraceRcvSapiTcmc": virtualPortTraceRcvSapiTcmc,
       "virtualPortTraceRcvDapiTcmc": virtualPortTraceRcvDapiTcmc,
       "virtualPortTraceRcvOpspTcmc": virtualPortTraceRcvOpspTcmc,
       "virtualPortTerminationLevel": virtualPortTerminationLevel,
       "virtualPortChannelSpacing": virtualPortChannelSpacing,
       "virtualPortCir": virtualPortCir,
       "virtualPortLoopConfig": virtualPortLoopConfig,
       "virtualPortOwnerAid": virtualPortOwnerAid,
       "virtualPortPayload": virtualPortPayload,
       "virtualPortVcType": virtualPortVcType,
       "virtualPortOdtuType": virtualPortOdtuType,
       "virtualPortProtectionRole": virtualPortProtectionRole,
       "virtualPortLagSysPrio": virtualPortLagSysPrio,
       "virtualPortOpuPayloadType": virtualPortOpuPayloadType,
       "virtualPortLagSysMac": virtualPortLagSysMac,
       "virtualPortLagSysIdFend": virtualPortLagSysIdFend,
       "virtualPortValidSigTimer": virtualPortValidSigTimer,
       "virtualPortOtnStuffing": virtualPortOtnStuffing,
       "virtualPortRedLineState": virtualPortRedLineState,
       "virtualPortTunnelAid": virtualPortTunnelAid,
       "virtualPortIngressTid": virtualPortIngressTid,
       "virtualPortIngressNodeIp": virtualPortIngressNodeIp,
       "virtualPortEncapsulationMethod": virtualPortEncapsulationMethod,
       "virtualPortPathProtection": virtualPortPathProtection,
       "virtualPortTimeslot": virtualPortTimeslot,
       "virtualPortOffsetHigh": virtualPortOffsetHigh,
       "virtualPortOffsetLow": virtualPortOffsetLow,
       "virtualPortTrafficDirection": virtualPortTrafficDirection,
       "virtualPortChannelId": virtualPortChannelId,
       "virtualPortNearEndProtectionState": virtualPortNearEndProtectionState,
       "virtualPortFarEndProtectionState": virtualPortFarEndProtectionState,
       "virtualPortAutosrvLock": virtualPortAutosrvLock,
       "virtualPortOptSetDeviation": virtualPortOptSetDeviation,
       "virtualPortPrbsPmReset": virtualPortPrbsPmReset,
       "virtualPortTestPrbsRcvMode": virtualPortTestPrbsRcvMode,
       "virtualPortTestPrbsTrmtMode": virtualPortTestPrbsTrmtMode,
       "virtualPortTerminationMode": virtualPortTerminationMode,
       "virtualPortTimDetModeOdu": virtualPortTimDetModeOdu,
       "virtualPortTimActionOdu": virtualPortTimActionOdu,
       "virtualPortTraceExpectedDapiOdu": virtualPortTraceExpectedDapiOdu,
       "virtualPortTraceExpectedOpspOdu": virtualPortTraceExpectedOpspOdu,
       "lldpTable": lldpTable,
       "lldpEntry": lldpEntry,
       "lldpRowStatus": lldpRowStatus,
       "lldpType": lldpType,
       "lldpAlias": lldpAlias,
       "lldpDataLayerPmReset": lldpDataLayerPmReset,
       "lldpAdmin": lldpAdmin,
       "lldpOperState": lldpOperState,
       "lldpLLDPScope": lldpLLDPScope,
       "lldpLLDPLocation": lldpLLDPLocation,
       "lldpAgeOutPeriod": lldpAgeOutPeriod,
       "lldpTimeTillAgeOut": lldpTimeTillAgeOut,
       "lldpLLDPChassisType": lldpLLDPChassisType,
       "lldpChassisID": lldpChassisID,
       "lldpPortType": lldpPortType,
       "lldpPortID": lldpPortID,
       "lldpPortDescription": lldpPortDescription,
       "lldpSystemName": lldpSystemName,
       "lldpSystemDescription": lldpSystemDescription,
       "lldpSystemCapabilityList": lldpSystemCapabilityList,
       "lldpSystemOperationList": lldpSystemOperationList,
       "lldpManagementType": lldpManagementType,
       "lldpManagementAddress": lldpManagementAddress,
       "lldpManagementInterface": lldpManagementInterface,
       "lldpManagementReference": lldpManagementReference,
       "lldpManagementObjectID": lldpManagementObjectID,
       "endOfFacilityMgmt": endOfFacilityMgmt,
       "dcnMgmt": dcnMgmt,
       "linkTable": linkTable,
       "linkEntry": linkEntry,
       "linkRowStatus": linkRowStatus,
       "linkType": linkType,
       "linkAdmin": linkAdmin,
       "linkAlias": linkAlias,
       "linkAuthString": linkAuthString,
       "linkConnector": linkConnector,
       "linkProxyArp": linkProxyArp,
       "linkOspf": linkOspf,
       "linkBaud": linkBaud,
       "linkAuthType": linkAuthType,
       "linkIpType": linkIpType,
       "linkMetric": linkMetric,
       "linkAreaAid": linkAreaAid,
       "linkEccAid": linkEccAid,
       "linkNearEndIp": linkNearEndIp,
       "linkFarEndIp": linkFarEndIp,
       "linkBitrate": linkBitrate,
       "linkParityBit": linkParityBit,
       "linkSecondaryStates": linkSecondaryStates,
       "linkOperState": linkOperState,
       "linkNendIpMonitor": linkNendIpMonitor,
       "linkValidSigTimer": linkValidSigTimer,
       "linkIPv6Type": linkIPv6Type,
       "linkNendIPv6": linkNendIPv6,
       "linkFendIPv6": linkFendIPv6,
       "linkMtu": linkMtu,
       "linkHelloInterval": linkHelloInterval,
       "linkDeadInterval": linkDeadInterval,
       "linkRetransmitInterval": linkRetransmitInterval,
       "linkNendLogicalIpAddr": linkNendLogicalIpAddr,
       "linkFendLogicalIpAddr": linkFendLogicalIpAddr,
       "endOfLinkTable": endOfLinkTable,
       "scTable": scTable,
       "scEntry": scEntry,
       "scRowStatus": scRowStatus,
       "scType": scType,
       "scAdmin": scAdmin,
       "scAlias": scAlias,
       "scAuthString": scAuthString,
       "scConnector": scConnector,
       "scOspf": scOspf,
       "scAuthType": scAuthType,
       "scIpType": scIpType,
       "scMetric": scMetric,
       "scAreaAid": scAreaAid,
       "scAlsMode": scAlsMode,
       "scSigDegThresReceiver": scSigDegThresReceiver,
       "scAutonegotiation": scAutonegotiation,
       "scPhysIfBaseType": scPhysIfBaseType,
       "scBitrate": scBitrate,
       "scConnectionType": scConnectionType,
       "scChannel": scChannel,
       "scDuplex": scDuplex,
       "scFarEndTid": scFarEndTid,
       "scFiberType": scFiberType,
       "scTrmtFrequency": scTrmtFrequency,
       "scAttGradientTh": scAttGradientTh,
       "scIpAddr": scIpAddr,
       "scTrmtWavelength": scTrmtWavelength,
       "scLanAid": scLanAid,
       "scIpMask": scIpMask,
       "scDataLayerPmReset": scDataLayerPmReset,
       "scPriority": scPriority,
       "scReach": scReach,
       "scSecondaryStates": scSecondaryStates,
       "scOperState": scOperState,
       "scIpAddrMonitor": scIpAddrMonitor,
       "scMonitoredDuplexMode": scMonitoredDuplexMode,
       "scMonitoredBitrate": scMonitoredBitrate,
       "scIpMaskMonitor": scIpMaskMonitor,
       "scFarEndPort": scFarEndPort,
       "scFendTransportTermPoint": scFendTransportTermPoint,
       "scFarEndIp": scFarEndIp,
       "scFarEndSigDegThres": scFarEndSigDegThres,
       "scValidSigTimer": scValidSigTimer,
       "scIPv6": scIPv6,
       "scIPv6PrefixLen": scIPv6PrefixLen,
       "scIPv6LinkLocal": scIPv6LinkLocal,
       "scIpMode": scIpMode,
       "scGatewayProxyArp": scGatewayProxyArp,
       "scMtu": scMtu,
       "scHelloInterval": scHelloInterval,
       "scDeadInterval": scDeadInterval,
       "scRetransmitInterval": scRetransmitInterval,
       "scDhcpServer": scDhcpServer,
       "scDhcpStartAddr": scDhcpStartAddr,
       "scDhcpStopAddr": scDhcpStopAddr,
       "scDhcpMask": scDhcpMask,
       "scFrcdLogin": scFrcdLogin,
       "scMdix": scMdix,
       "endOfScTable": endOfScTable,
       "lanTable": lanTable,
       "lanEntry": lanEntry,
       "lanRowStatus": lanRowStatus,
       "lanType": lanType,
       "lanAdmin": lanAdmin,
       "lanAlias": lanAlias,
       "lanAuthString": lanAuthString,
       "lanOspf": lanOspf,
       "lanAuthType": lanAuthType,
       "lanIpType": lanIpType,
       "lanMetric": lanMetric,
       "lanAreaAid": lanAreaAid,
       "lanIpAddr": lanIpAddr,
       "lanIpMask": lanIpMask,
       "lanPriority": lanPriority,
       "lanLanMembers": lanLanMembers,
       "lanSecondaryStates": lanSecondaryStates,
       "lanOperState": lanOperState,
       "lanIpAddrMonitor": lanIpAddrMonitor,
       "lanIpMaskMonitor": lanIpMaskMonitor,
       "lanValidSigTimer": lanValidSigTimer,
       "lanIPv6": lanIPv6,
       "lanIPv6PrefixLen": lanIPv6PrefixLen,
       "lanIPv6LinkLocal": lanIPv6LinkLocal,
       "lanIpMode": lanIpMode,
       "lanMtu": lanMtu,
       "lanHelloInterval": lanHelloInterval,
       "lanDeadInterval": lanDeadInterval,
       "lanRetransmitInterval": lanRetransmitInterval,
       "lanDhcpServer": lanDhcpServer,
       "lanDhcpStartAddr": lanDhcpStartAddr,
       "lanDhcpStopAddr": lanDhcpStopAddr,
       "lanDhcpMask": lanDhcpMask,
       "lanFrcdLogin": lanFrcdLogin,
       "endOfLanTable": endOfLanTable,
       "eccTable": eccTable,
       "eccEntry": eccEntry,
       "eccRowStatus": eccRowStatus,
       "eccType": eccType,
       "eccAdmin": eccAdmin,
       "eccAlias": eccAlias,
       "eccConnectionType": eccConnectionType,
       "eccLanAid": eccLanAid,
       "eccExternalVid": eccExternalVid,
       "eccpppIpLinkAid": eccpppIpLinkAid,
       "eccMaxDataRate": eccMaxDataRate,
       "eccProtAvailability": eccProtAvailability,
       "eccSecondaryStates": eccSecondaryStates,
       "eccConnState": eccConnState,
       "eccOperState": eccOperState,
       "eccValidSigTimer": eccValidSigTimer,
       "eccGccUsage": eccGccUsage,
       "endOfEccTable": endOfEccTable,
       "endOfDcnMgmt": endOfDcnMgmt,
       "opticalMuxMgmt": opticalMuxMgmt,
       "opticalMuxTable": opticalMuxTable,
       "opticalMuxEntry": opticalMuxEntry,
       "opticalMuxRowStatus": opticalMuxRowStatus,
       "opticalMuxConnectionType": opticalMuxConnectionType,
       "opticalMuxChannelsNumber": opticalMuxChannelsNumber,
       "opticalMuxPumpPower": opticalMuxPumpPower,
       "opticalMuxInhibitSwitchToWork": opticalMuxInhibitSwitchToWork,
       "opticalMuxForceLaserOn": opticalMuxForceLaserOn,
       "opticalMuxAseTabCreation": opticalMuxAseTabCreation,
       "opticalMuxTransmitFrequency": opticalMuxTransmitFrequency,
       "opticalMuxMultiplexLevel": opticalMuxMultiplexLevel,
       "opticalMuxOpticalSetPoint": opticalMuxOpticalSetPoint,
       "opticalMuxInitiateEqualization": opticalMuxInitiateEqualization,
       "opticalMuxConnectorType": opticalMuxConnectorType,
       "opticalMuxFiberType": opticalMuxFiberType,
       "opticalMuxTilt": opticalMuxTilt,
       "opticalMuxOscOpticalSetpoint": opticalMuxOscOpticalSetpoint,
       "opticalMuxOffset": opticalMuxOffset,
       "opticalMuxSwitchCommand": opticalMuxSwitchCommand,
       "opticalMuxTransmitChannel": opticalMuxTransmitChannel,
       "opticalMuxBandProvision": opticalMuxBandProvision,
       "opticalMuxAlsMode": opticalMuxAlsMode,
       "opticalMuxType": opticalMuxType,
       "opticalMuxAttenuationGradient": opticalMuxAttenuationGradient,
       "opticalMuxTransmitWavelength": opticalMuxTransmitWavelength,
       "opticalMuxInhibitSwitchToProt": opticalMuxInhibitSwitchToProt,
       "opticalMuxTrmtChannel": opticalMuxTrmtChannel,
       "opticalMuxVariableGain": opticalMuxVariableGain,
       "opticalMuxSumTransmited": opticalMuxSumTransmited,
       "opticalMuxRcvChannel": opticalMuxRcvChannel,
       "opticalMuxAdmin": opticalMuxAdmin,
       "opticalMuxTimePeriod": opticalMuxTimePeriod,
       "opticalMuxSigDegThresReceiver": opticalMuxSigDegThresReceiver,
       "opticalMuxChannelsProvision": opticalMuxChannelsProvision,
       "opticalMuxAlias": opticalMuxAlias,
       "opticalMuxChannelSpacing": opticalMuxChannelSpacing,
       "opticalMuxDataLayerPmReset": opticalMuxDataLayerPmReset,
       "opticalMuxGain": opticalMuxGain,
       "opticalMuxSignalDirection": opticalMuxSignalDirection,
       "opticalMuxEdfaPwrOut": opticalMuxEdfaPwrOut,
       "opticalMuxVoaSetpoint": opticalMuxVoaSetpoint,
       "opticalMuxFiberBrand": opticalMuxFiberBrand,
       "opticalMuxStages": opticalMuxStages,
       "opticalMuxTiltSet": opticalMuxTiltSet,
       "opticalMuxForceFwdAsePilotOn": opticalMuxForceFwdAsePilotOn,
       "opticalMuxSecondaryStates": opticalMuxSecondaryStates,
       "opticalMuxConnState": opticalMuxConnState,
       "opticalMuxOperState": opticalMuxOperState,
       "opticalMuxProtectionRole": opticalMuxProtectionRole,
       "opticalMuxFarEndSigDegThres": opticalMuxFarEndSigDegThres,
       "opticalMuxMaxRamanGainMon": opticalMuxMaxRamanGainMon,
       "opticalMuxValidSigTimer": opticalMuxValidSigTimer,
       "opticalMuxGainRange": opticalMuxGainRange,
       "opticalMuxPpc": opticalMuxPpc,
       "opticalMuxOffsetHigh": opticalMuxOffsetHigh,
       "opticalMuxOffsetLow": opticalMuxOffsetLow,
       "opticalMuxOptUpdate": opticalMuxOptUpdate,
       "opticalMuxChannelRangeProvision": opticalMuxChannelRangeProvision,
       "opticalMuxNearEndProtectionState": opticalMuxNearEndProtectionState,
       "opticalMuxFarEndProtectionState": opticalMuxFarEndProtectionState,
       "opticalMuxVariableGainNtoR": opticalMuxVariableGainNtoR,
       "opticalMuxVariableGainNtoC": opticalMuxVariableGainNtoC,
       "opticalMuxVariableGainRtoN": opticalMuxVariableGainRtoN,
       "opticalMuxVariableGainCtoN": opticalMuxVariableGainCtoN,
       "endOfOpticalMuxTable": endOfOpticalMuxTable,
       "endOfOpticalMuxMgmt": endOfOpticalMuxMgmt,
       "shelfConnMgmt": shelfConnMgmt,
       "shelfConnTable": shelfConnTable,
       "shelfConnEntry": shelfConnEntry,
       "shelfConnRowStatus": shelfConnRowStatus,
       "shelfConnConnectionType": shelfConnConnectionType,
       "shelfConnConnector": shelfConnConnector,
       "shelfConnFiber": shelfConnFiber,
       "shelfConnReach": shelfConnReach,
       "shelfConnRate": shelfConnRate,
       "shelfConnAdmin": shelfConnAdmin,
       "shelfConnAlias": shelfConnAlias,
       "shelfConnTransmitChannel": shelfConnTransmitChannel,
       "shelfConnFacilityType": shelfConnFacilityType,
       "shelfConnSecondaryStates": shelfConnSecondaryStates,
       "shelfConnOperState": shelfConnOperState,
       "shelfConnValidSigTimer": shelfConnValidSigTimer,
       "shelfConnDataLayerPmReset": shelfConnDataLayerPmReset,
       "shelfConnAutonegotiation": shelfConnAutonegotiation,
       "shelfConnBitrate": shelfConnBitrate,
       "shelfConnDuplex": shelfConnDuplex,
       "shelfConnMdix": shelfConnMdix,
       "endOfShelfConnTable": endOfShelfConnTable,
       "endOfShelfConnMgmt": endOfShelfConnMgmt,
       "envMgmt": envMgmt,
       "envPortTable": envPortTable,
       "envPortEntry": envPortEntry,
       "envPortRowStatus": envPortRowStatus,
       "envPortConnectorType": envPortConnectorType,
       "envPortTelemetry": envPortTelemetry,
       "envPortFacilityType": envPortFacilityType,
       "envPortTifAlarmType": envPortTifAlarmType,
       "envPortTifAlarmMessage": envPortTifAlarmMessage,
       "envPortInvertTifInputLogic": envPortInvertTifInputLogic,
       "endOfEnvPortTable": endOfEnvPortTable,
       "endOfEnvMgmt": endOfEnvMgmt,
       "containerMgmt": containerMgmt,
       "containerTable": containerTable,
       "containerEntry": containerEntry,
       "containerRowStatus": containerRowStatus,
       "containerAdmin": containerAdmin,
       "containerSequenceNumber": containerSequenceNumber,
       "containerFacilityType": containerFacilityType,
       "containerContainer": containerContainer,
       "containerVSContainer": containerVSContainer,
       "containerSecondaryStates": containerSecondaryStates,
       "containerOperState": containerOperState,
       "endOfContainerTable": endOfContainerTable,
       "endOfContainerMgmt": endOfContainerMgmt,
       "opticalLineMgmt": opticalLineMgmt,
       "opticalLineTable": opticalLineTable,
       "opticalLineEntry": opticalLineEntry,
       "opticalLineRowStatus": opticalLineRowStatus,
       "opticalLineTxLineAttenuation": opticalLineTxLineAttenuation,
       "opticalLineRxLineAttenuation": opticalLineRxLineAttenuation,
       "opticalLineAlias": opticalLineAlias,
       "opticalLineFarEndLocation": opticalLineFarEndLocation,
       "opticalLineLaneChannel1": opticalLineLaneChannel1,
       "opticalLineLaneChannel2": opticalLineLaneChannel2,
       "opticalLineLaneChannel3": opticalLineLaneChannel3,
       "opticalLineLaneChannel4": opticalLineLaneChannel4,
       "opticalLineLanes": opticalLineLanes,
       "opticalLineChannelBandwith": opticalLineChannelBandwith,
       "opticalLineChannelSpacing": opticalLineChannelSpacing,
       "opticalLineFacilities": opticalLineFacilities,
       "opticalLineSecondaryStates": opticalLineSecondaryStates,
       "opticalLineConnState": opticalLineConnState,
       "opticalLineLogicalInterfaceAid": opticalLineLogicalInterfaceAid,
       "opticalLineOwnerAid": opticalLineOwnerAid,
       "opticalLineTransmitWavelength": opticalLineTransmitWavelength,
       "opticalLineTransmitFrequency": opticalLineTransmitFrequency,
       "opticalLineTransmitChannel": opticalLineTransmitChannel,
       "opticalLineFiberLength": opticalLineFiberLength,
       "endOfOpticalLineTable": endOfOpticalLineTable,
       "endOfOpticalLineMgmt": endOfOpticalLineMgmt,
       "alarm": alarm,
       "alarmSysTable": alarmSysTable,
       "alarmSysEntry": alarmSysEntry,
       "alarmSysType": alarmSysType,
       "alarmSysSeverity": alarmSysSeverity,
       "alarmSysAffect": alarmSysAffect,
       "alarmSysTimeStamp": alarmSysTimeStamp,
       "endOfAlarmSysTable": endOfAlarmSysTable,
       "alarmSeveritySysTable": alarmSeveritySysTable,
       "alarmSeveritySysEntry": alarmSeveritySysEntry,
       "alarmSeveritySysType": alarmSeveritySysType,
       "alarmSeveritySysValue": alarmSeveritySysValue,
       "endOfAlarmSeveritySysTable": endOfAlarmSeveritySysTable,
       "alarmEqptTable": alarmEqptTable,
       "alarmEqptEntry": alarmEqptEntry,
       "alarmEqptType": alarmEqptType,
       "alarmEqptSeverity": alarmEqptSeverity,
       "alarmEqptAffect": alarmEqptAffect,
       "alarmEqptTimeStamp": alarmEqptTimeStamp,
       "endOfAlarmEqptTable": endOfAlarmEqptTable,
       "alarmFacilityTable": alarmFacilityTable,
       "alarmFacilityEntry": alarmFacilityEntry,
       "alarmFacilityType": alarmFacilityType,
       "alarmFacilitySeverity": alarmFacilitySeverity,
       "alarmFacilityAffect": alarmFacilityAffect,
       "alarmFacilityTimeStamp": alarmFacilityTimeStamp,
       "alarmSeverityFacilityTable": alarmSeverityFacilityTable,
       "alarmSeverityFacilityEntry": alarmSeverityFacilityEntry,
       "alarmSeverityFacilityType": alarmSeverityFacilityType,
       "alarmSeverityFacilityValue": alarmSeverityFacilityValue,
       "alarmTerminPointTable": alarmTerminPointTable,
       "alarmTerminPointEntry": alarmTerminPointEntry,
       "alarmTerminPointType": alarmTerminPointType,
       "alarmTerminPointSeverity": alarmTerminPointSeverity,
       "alarmTerminPointAffect": alarmTerminPointAffect,
       "alarmTerminPointTimeStamp": alarmTerminPointTimeStamp,
       "alarmSeverityTerminPointTable": alarmSeverityTerminPointTable,
       "alarmSeverityTerminPointEntry": alarmSeverityTerminPointEntry,
       "alarmSeverityTerminPointType": alarmSeverityTerminPointType,
       "alarmSeverityTerminPointValue": alarmSeverityTerminPointValue,
       "alarmExternalPortTable": alarmExternalPortTable,
       "alarmExternalPortEntry": alarmExternalPortEntry,
       "alarmExternalPortType": alarmExternalPortType,
       "alarmExternalPortSeverity": alarmExternalPortSeverity,
       "alarmExternalPortAffect": alarmExternalPortAffect,
       "alarmExternalPortTimeStamp": alarmExternalPortTimeStamp,
       "alarmSeverityExternalPortTable": alarmSeverityExternalPortTable,
       "alarmSeverityExternalPortEntry": alarmSeverityExternalPortEntry,
       "alarmSeverityExternalPortType": alarmSeverityExternalPortType,
       "alarmSeverityExternalPortValue": alarmSeverityExternalPortValue,
       "endOfAlarmSeverityExternalPortTable": endOfAlarmSeverityExternalPortTable,
       "alarmSeverityEqptTable": alarmSeverityEqptTable,
       "alarmSeverityEqptEntry": alarmSeverityEqptEntry,
       "alarmSeverityEqptType": alarmSeverityEqptType,
       "alarmSeverityEqptValue": alarmSeverityEqptValue,
       "endOfAlarmSeverityEqptTable": endOfAlarmSeverityEqptTable,
       "alarmDcnTable": alarmDcnTable,
       "alarmDcnEntry": alarmDcnEntry,
       "alarmDcnType": alarmDcnType,
       "alarmDcnSeverity": alarmDcnSeverity,
       "alarmDcnAffect": alarmDcnAffect,
       "alarmDcnTimeStamp": alarmDcnTimeStamp,
       "endOfAlarmDcnTable": endOfAlarmDcnTable,
       "alarmSeverityDcnTable": alarmSeverityDcnTable,
       "alarmSeverityDcnEntry": alarmSeverityDcnEntry,
       "alarmSeverityDcnType": alarmSeverityDcnType,
       "alarmSeverityDcnValue": alarmSeverityDcnValue,
       "endOfAlarmSeverityDcnTable": endOfAlarmSeverityDcnTable,
       "alarmEnvTable": alarmEnvTable,
       "alarmEnvEntry": alarmEnvEntry,
       "alarmEnvType": alarmEnvType,
       "alarmEnvSeverity": alarmEnvSeverity,
       "alarmEnvAffect": alarmEnvAffect,
       "alarmEnvTimeStamp": alarmEnvTimeStamp,
       "endOfAlarmEnvTable": endOfAlarmEnvTable,
       "alarmSeverityEnvTable": alarmSeverityEnvTable,
       "alarmSeverityEnvEntry": alarmSeverityEnvEntry,
       "alarmSeverityEnvType": alarmSeverityEnvType,
       "alarmSeverityEnvValue": alarmSeverityEnvValue,
       "endOfAlarmSeverityEnvTable": endOfAlarmSeverityEnvTable,
       "alarmContainerTable": alarmContainerTable,
       "alarmContainerEntry": alarmContainerEntry,
       "alarmContainerType": alarmContainerType,
       "alarmContainerSeverity": alarmContainerSeverity,
       "alarmContainerAffect": alarmContainerAffect,
       "alarmContainerTimeStamp": alarmContainerTimeStamp,
       "endOfAlarmContainerTable": endOfAlarmContainerTable,
       "alarmSeverityContainerTable": alarmSeverityContainerTable,
       "alarmSeverityContainerEntry": alarmSeverityContainerEntry,
       "alarmSeverityContainerType": alarmSeverityContainerType,
       "alarmSeverityContainerValue": alarmSeverityContainerValue,
       "endOfAlarmSeverityContainerTable": endOfAlarmSeverityContainerTable,
       "alarmOpticalMuxTable": alarmOpticalMuxTable,
       "alarmOpticalMuxEntry": alarmOpticalMuxEntry,
       "alarmOpticalMuxType": alarmOpticalMuxType,
       "alarmOpticalMuxSeverity": alarmOpticalMuxSeverity,
       "alarmOpticalMuxAffect": alarmOpticalMuxAffect,
       "alarmOpticalMuxTimeStamp": alarmOpticalMuxTimeStamp,
       "endOfAlarmOpticalMuxTable": endOfAlarmOpticalMuxTable,
       "alarmSeverityOpticalMuxTable": alarmSeverityOpticalMuxTable,
       "alarmSeverityOpticalMuxEntry": alarmSeverityOpticalMuxEntry,
       "alarmSeverityOpticalMuxType": alarmSeverityOpticalMuxType,
       "alarmSeverityOpticalMuxValue": alarmSeverityOpticalMuxValue,
       "endOfAlarmSeverityOpticalMuxTable": endOfAlarmSeverityOpticalMuxTable,
       "alarmShelfConnTable": alarmShelfConnTable,
       "alarmShelfConnEntry": alarmShelfConnEntry,
       "alarmShelfConnType": alarmShelfConnType,
       "alarmShelfConnSeverity": alarmShelfConnSeverity,
       "alarmShelfConnAffect": alarmShelfConnAffect,
       "alarmShelfConnTimeStamp": alarmShelfConnTimeStamp,
       "endOfAlarmShelfConnTable": endOfAlarmShelfConnTable,
       "alarmSeverityShelfConnTable": alarmSeverityShelfConnTable,
       "alarmSeverityShelfConnEntry": alarmSeverityShelfConnEntry,
       "alarmSeverityShelfConnType": alarmSeverityShelfConnType,
       "alarmSeverityShelfConnValue": alarmSeverityShelfConnValue,
       "endOfAlarmSeverityShelfConnTable": endOfAlarmSeverityShelfConnTable,
       "alarmNtpIPv4Table": alarmNtpIPv4Table,
       "alarmNtpIPv4Entry": alarmNtpIPv4Entry,
       "alarmNtpIPv4Type": alarmNtpIPv4Type,
       "alarmNtpIPv4Severity": alarmNtpIPv4Severity,
       "alarmNtpIPv4Affect": alarmNtpIPv4Affect,
       "alarmNtpIPv4TimeStamp": alarmNtpIPv4TimeStamp,
       "alarmSeverityNtpIPv4Table": alarmSeverityNtpIPv4Table,
       "alarmSeverityNtpIPv4Entry": alarmSeverityNtpIPv4Entry,
       "alarmSeverityNtpIPv4Type": alarmSeverityNtpIPv4Type,
       "alarmSeverityNtpIPv4Value": alarmSeverityNtpIPv4Value,
       "alarmNtpIPv6Table": alarmNtpIPv6Table,
       "alarmNtpIPv6Entry": alarmNtpIPv6Entry,
       "alarmNtpIPv6Type": alarmNtpIPv6Type,
       "alarmNtpIPv6Severity": alarmNtpIPv6Severity,
       "alarmNtpIPv6Affect": alarmNtpIPv6Affect,
       "alarmNtpIPv6TimeStamp": alarmNtpIPv6TimeStamp,
       "alarmSeverityNtpIPv6Table": alarmSeverityNtpIPv6Table,
       "alarmSeverityNtpIPv6Entry": alarmSeverityNtpIPv6Entry,
       "alarmSeverityNtpIPv6Type": alarmSeverityNtpIPv6Type,
       "alarmSeverityNtpIPv6Value": alarmSeverityNtpIPv6Value,
       "alarmProfile": alarmProfile,
       "alarmProfileSeverityTable": alarmProfileSeverityTable,
       "alarmProfileSeverityEntry": alarmProfileSeverityEntry,
       "alarmProfileSeverityAidType": alarmProfileSeverityAidType,
       "alarmProfileSeverityType": alarmProfileSeverityType,
       "alarmProfileSeverityValue": alarmProfileSeverityValue,
       "alarmProfileSeverityDefaultValue": alarmProfileSeverityDefaultValue,
       "endOfAlarmProfileSeverityTable": endOfAlarmProfileSeverityTable,
       "endOfAlarmProfile": endOfAlarmProfile,
       "serviceAffecting": serviceAffecting,
       "endOfAlarm": endOfAlarm,
       "trap": trap,
       "fspR7Trap": fspR7Trap,
       "fspR7CreationTrap": fspR7CreationTrap,
       "fspR7DeletionTrap": fspR7DeletionTrap,
       "fspR7StateChangeTrap": fspR7StateChangeTrap,
       "fspR7ObjectChangeTrap": fspR7ObjectChangeTrap,
       "alarmTerminalLoopback": alarmTerminalLoopback,
       "alarmOosDisabled": alarmOosDisabled,
       "alarmOosManagement": alarmOosManagement,
       "alarmOosMaintenance": alarmOosMaintenance,
       "alarmOosAins": alarmOosAins,
       "alarmRemoved": alarmRemoved,
       "alarmLossOfSignal": alarmLossOfSignal,
       "alarmOptInputPwrReceivedTooLow": alarmOptInputPwrReceivedTooLow,
       "alarmOptInputPwrReceivedTooHigh": alarmOptInputPwrReceivedTooHigh,
       "alarmLaserTemperatureTooHigh": alarmLaserTemperatureTooHigh,
       "alarmLaserTemperatureTooLow": alarmLaserTemperatureTooLow,
       "alarmOptOutputPowerTransTooLow": alarmOptOutputPowerTransTooLow,
       "alarmOptOutputPowerTransTooHigh": alarmOptOutputPowerTransTooHigh,
       "alarmAutoShutdownToHighTemp": alarmAutoShutdownToHighTemp,
       "alarmAutoShutdownToHighTxPwr": alarmAutoShutdownToHighTxPwr,
       "alarmLaserEndOfLife": alarmLaserEndOfLife,
       "alarmServerSignalFailureVf": alarmServerSignalFailureVf,
       "alarmEqualizationProgress": alarmEqualizationProgress,
       "alarmUPortFailure": alarmUPortFailure,
       "alarmAutoShutdownBlock": alarmAutoShutdownBlock,
       "alarmAutoPowerShutdown": alarmAutoPowerShutdown,
       "alarmConfOutPowerTransTooHigh": alarmConfOutPowerTransTooHigh,
       "alarmConfOutPowerTransTooLow": alarmConfOutPowerTransTooLow,
       "alarmOptSignalFailure": alarmOptSignalFailure,
       "alarmDsbdChannelPowerTooHigh": alarmDsbdChannelPowerTooHigh,
       "alarmLossOfSignalCPort": alarmLossOfSignalCPort,
       "alarmLossOfSignalNPort": alarmLossOfSignalNPort,
       "alarmOutputPowerFault": alarmOutputPowerFault,
       "alarmEqlzAdjust": alarmEqlzAdjust,
       "alarmAmpFailure": alarmAmpFailure,
       "alarmEqptProvMismatch": alarmEqptProvMismatch,
       "alarmBackreflectionTooHigh": alarmBackreflectionTooHigh,
       "transientEqlzStart": transientEqlzStart,
       "transientEqlzFailed": transientEqlzFailed,
       "transientEqlzCompleted": transientEqlzCompleted,
       "transientEqlzRequestDenied": transientEqlzRequestDenied,
       "transientEqlzNotRequired": transientEqlzNotRequired,
       "transientEqlzProcessPassed": transientEqlzProcessPassed,
       "transientEqlzProcessWait": transientEqlzProcessWait,
       "transientPmSnapshotStarted": transientPmSnapshotStarted,
       "transientEqlzAuto": transientEqlzAuto,
       "transientEqlzRamanAdjust": transientEqlzRamanAdjust,
       "alarmFiberConnLos": alarmFiberConnLos,
       "alarmFiberConnOptFault": alarmFiberConnOptFault,
       "alarmFiberConnInvalid": alarmFiberConnInvalid,
       "alarmFiberConnMismatch": alarmFiberConnMismatch,
       "alarmFiberConnCommError": alarmFiberConnCommError,
       "alarmFiberConnProtocolFailure": alarmFiberConnProtocolFailure,
       "alarmFiberConnDataFailure": alarmFiberConnDataFailure,
       "alarmFiberAttenuationHigh": alarmFiberAttenuationHigh,
       "transientFiberConnStatChange": transientFiberConnStatChange,
       "alarmLaserBiasCurrAbnormal": alarmLaserBiasCurrAbnormal,
       "alarmFiberConnInvalidTx": alarmFiberConnInvalidTx,
       "alarmFiberConnMismatchTx": alarmFiberConnMismatchTx,
       "alarmFiberAttenuationHighTx": alarmFiberAttenuationHighTx,
       "alarmLaserFailure": alarmLaserFailure,
       "alarmLossOfReceiverClockRecovery": alarmLossOfReceiverClockRecovery,
       "alarmFiberAttenuationCond": alarmFiberAttenuationCond,
       "alarmChannelMismatch": alarmChannelMismatch,
       "alarmAlarmIndicationSignalLine": alarmAlarmIndicationSignalLine,
       "alarmAlarmIndicationSignalLowerOrderPath": alarmAlarmIndicationSignalLowerOrderPath,
       "alarmAlarmIndicationSignalOdu": alarmAlarmIndicationSignalOdu,
       "alarmAlarmIndicationSignalOpu": alarmAlarmIndicationSignalOpu,
       "alarmAlarmIndicationSignalOtu": alarmAlarmIndicationSignalOtu,
       "alarmAlarmIndicationSignalHigherOrderPath": alarmAlarmIndicationSignalHigherOrderPath,
       "alarmAlarmIndicationSignalOduTcmA": alarmAlarmIndicationSignalOduTcmA,
       "alarmAlarmIndicationSignalOduTcmB": alarmAlarmIndicationSignalOduTcmB,
       "alarmAlarmIndicationSignalOduTcmC": alarmAlarmIndicationSignalOduTcmC,
       "alarmVirtualChannelAis": alarmVirtualChannelAis,
       "alarmAmplifierAbnormal": alarmAmplifierAbnormal,
       "alarmAutomaticPowerReduction": alarmAutomaticPowerReduction,
       "alarmAutomaticPowerReductionForEyeSafety": alarmAutomaticPowerReductionForEyeSafety,
       "transientAlpSettingFinished": transientAlpSettingFinished,
       "transientAlpSettingStarted": transientAlpSettingStarted,
       "alarmApsConfigMismatch": alarmApsConfigMismatch,
       "alarmApsProtocolFailure": alarmApsProtocolFailure,
       "alarmAseLow": alarmAseLow,
       "alarmAseTableGenFailLow": alarmAseTableGenFailLow,
       "alarmAseTableGenFailHighBackreflection": alarmAseTableGenFailHighBackreflection,
       "alarmAseTableGenFailOscMissing": alarmAseTableGenFailOscMissing,
       "alarmAseTableGenFailPilot": alarmAseTableGenFailPilot,
       "alarmAseTableGenFailSignalinput": alarmAseTableGenFailSignalinput,
       "alarmAseTableNotAvailable": alarmAseTableNotAvailable,
       "alarmAseTableGenProgress": alarmAseTableGenProgress,
       "alarmEncryptionPortAuthPasswdMissing": alarmEncryptionPortAuthPasswdMissing,
       "transientCryptoAuthPasswdChanged": transientCryptoAuthPasswdChanged,
       "alarmBackwardDefectIndicationOdu": alarmBackwardDefectIndicationOdu,
       "alarmBackwardDefectIndicationOtu": alarmBackwardDefectIndicationOtu,
       "alarmBackwardDefectIndicationOduTcmA": alarmBackwardDefectIndicationOduTcmA,
       "alarmBackwardDefectIndicationOduTcmB": alarmBackwardDefectIndicationOduTcmB,
       "alarmBackwardDefectIndicationOduTcmC": alarmBackwardDefectIndicationOduTcmC,
       "alarmTopologyDataCalculationInProgress": alarmTopologyDataCalculationInProgress,
       "transientDispersionCompFailed": transientDispersionCompFailed,
       "alarmDispertionTunningCondition": alarmDispertionTunningCondition,
       "alarmLossOfCharSync": alarmLossOfCharSync,
       "alarmLossOfCharSyncFromFarEnd": alarmLossOfCharSyncFromFarEnd,
       "transientCryptoAuthPasswdInvalid": transientCryptoAuthPasswdInvalid,
       "alarmEncryptionPortEncryptionSwitchOffEnabled": alarmEncryptionPortEncryptionSwitchOffEnabled,
       "alarmEncryptionModuleCryPasswdMissing": alarmEncryptionModuleCryPasswdMissing,
       "transientCryptoPasswdChanged": transientCryptoPasswdChanged,
       "transientCryptoRtf": transientCryptoRtf,
       "alarmEncryptionModuleSelfTestStarted": alarmEncryptionModuleSelfTestStarted,
       "alarmEncryptionPortEncryptionSwitchedOff": alarmEncryptionPortEncryptionSwitchedOff,
       "alarmOpuClientSignalFail": alarmOpuClientSignalFail,
       "alarmDatabaseMismatch": alarmDatabaseMismatch,
       "alarmDatabaseFailure": alarmDatabaseFailure,
       "alarmDatabaseNcuMismatch": alarmDatabaseNcuMismatch,
       "alarmDbReplicationIncompleted": alarmDbReplicationIncompleted,
       "alarmDatabaseVersionMismatch": alarmDatabaseVersionMismatch,
       "alarmXfpDecisionThresSetFailed": alarmXfpDecisionThresSetFailed,
       "alarmDuplexLinkFailure": alarmDuplexLinkFailure,
       "transientFarEndDyingGasp": transientFarEndDyingGasp,
       "alarmSingleFanFailure": alarmSingleFanFailure,
       "alarmMultipleFanFailure": alarmMultipleFanFailure,
       "alarmLossOfSignalTransmitter": alarmLossOfSignalTransmitter,
       "transientFarEndChanged": transientFarEndChanged,
       "alarmFarEndIpAddressUnknown": alarmFarEndIpAddressUnknown,
       "alarmFarEndCommFailure": alarmFarEndCommFailure,
       "transientTopologyDataInvalid": transientTopologyDataInvalid,
       "alarmBackupForcedToHalt": alarmBackupForcedToHalt,
       "transientForcedReboot": transientForcedReboot,
       "alarmFacilityForcedOn": alarmFacilityForcedOn,
       "alarmFwdAseTableFailPilot": alarmFwdAseTableFailPilot,
       "alarmFwdAseTableOnPilot": alarmFwdAseTableOnPilot,
       "transientCryptoFwpUpdate": transientCryptoFwpUpdate,
       "alarmEncryptionModuleFwpUpdateEnabled": alarmEncryptionModuleFwpUpdateEnabled,
       "alarmFwpMismatchDownloadNotServiceAffecting": alarmFwpMismatchDownloadNotServiceAffecting,
       "alarmFwpMismatchDownloadServiceAffecting": alarmFwpMismatchDownloadServiceAffecting,
       "transientCryptoFwpRevChanged": transientCryptoFwpRevChanged,
       "alarmGainTiltNotSettable": alarmGainTiltNotSettable,
       "alarmHighBer": alarmHighBer,
       "alarmReceiverOverloadProtection": alarmReceiverOverloadProtection,
       "alarmHwInitializing": alarmHwInitializing,
       "alarmHwOprReachedHT": alarmHwOprReachedHT,
       "alarmHwDegrade": alarmHwDegrade,
       "alarmHwFailure": alarmHwFailure,
       "alarmSwitchtoProtectionInhibited": alarmSwitchtoProtectionInhibited,
       "alarmSwitchtoWorkingInhibited": alarmSwitchtoWorkingInhibited,
       "transientIntrusionRx": transientIntrusionRx,
       "transientIntrusionTx": transientIntrusionTx,
       "transientEncryptionPortSingleKeyExchgFailed": transientEncryptionPortSingleKeyExchgFailed,
       "transientCryptoKeyExchgFailCondClr": transientCryptoKeyExchgFailCondClr,
       "alarmEncryptionPortKeyInitExchgMissed": alarmEncryptionPortKeyInitExchgMissed,
       "alarmEncryptionPortMaxKeyExchgFailuresReachedIs": alarmEncryptionPortMaxKeyExchgFailuresReachedIs,
       "alarmEncryptionPortMaxKeyExchgFailuresReachedOos": alarmEncryptionPortMaxKeyExchgFailuresReachedOos,
       "alarmEncryptionPortKeyExchangedForced": alarmEncryptionPortKeyExchangedForced,
       "alarmLaserOnDelay": alarmLaserOnDelay,
       "alarmLockedDefectOdu": alarmLockedDefectOdu,
       "alarmLockedDefectOduTcmA": alarmLockedDefectOduTcmA,
       "alarmLockedDefectOduTcmB": alarmLockedDefectOduTcmB,
       "alarmLockedDefectOduTcmC": alarmLockedDefectOduTcmC,
       "alarmLinkControlProtocolFailure": alarmLinkControlProtocolFailure,
       "alarmLinkDown": alarmLinkDown,
       "alarmAutoShutdownSendingAisLine": alarmAutoShutdownSendingAisLine,
       "alarmAutoShutdownSendingAisOdu": alarmAutoShutdownSendingAisOdu,
       "alarmAutoShutdownSendingAisOpu": alarmAutoShutdownSendingAisOpu,
       "alarmClientFailForwarding": alarmClientFailForwarding,
       "alarmAutoShutdownAls": alarmAutoShutdownAls,
       "alarmAutoAmpShutdown": alarmAutoAmpShutdown,
       "alarmAutoShutdownAmpAps": alarmAutoShutdownAmpAps,
       "alarmAseTableBuild": alarmAseTableBuild,
       "alarmAutoShutdownOpuClientSignalFail": alarmAutoShutdownOpuClientSignalFail,
       "alarmAutoShutdownSendingEPC": alarmAutoShutdownSendingEPC,
       "alarmAutoShutdownSendingLckOdu": alarmAutoShutdownSendingLckOdu,
       "alarmAutoShutdownSendingOciOdu": alarmAutoShutdownSendingOciOdu,
       "alarmAutoShutdownLaserOffDueToErrFwd": alarmAutoShutdownLaserOffDueToErrFwd,
       "alarmAutoShutdownTxRxLasersDueToHighTemp": alarmAutoShutdownTxRxLasersDueToHighTemp,
       "alarmLocalFault": alarmLocalFault,
       "alarmLocalOscLevelAbnormal": alarmLocalOscLevelAbnormal,
       "alarmLossOfGfpFrame": alarmLossOfGfpFrame,
       "alarmLossOfFrameMux": alarmLossOfFrameMux,
       "alarmLossOfFrameOtu": alarmLossOfFrameOtu,
       "alarmLossOfFrame": alarmLossOfFrame,
       "alarmLossOfFrameLossOfMultiFrameOdu": alarmLossOfFrameLossOfMultiFrameOdu,
       "alarmLossOfLane": alarmLossOfLane,
       "alarmLossofMultiframeLowerOrderPath": alarmLossofMultiframeLowerOrderPath,
       "alarmLossOfMultiFrameOtu": alarmLossOfMultiFrameOtu,
       "alarmLossofMultiframeHigherOrderPath": alarmLossofMultiframeHigherOrderPath,
       "alarmLossOfPointerLowerOrderPath": alarmLossOfPointerLowerOrderPath,
       "alarmLossOfPointerHigherOrderPath": alarmLossOfPointerHigherOrderPath,
       "alarmLosAttProgress": alarmLosAttProgress,
       "alarmLossOsc": alarmLossOsc,
       "alarmGfpLossOfClientSig": alarmGfpLossOfClientSig,
       "alarmLoopbackError": alarmLoopbackError,
       "alarmFacilityLoopback": alarmFacilityLoopback,
       "alarmLossofTandemConnectionOduTcmA": alarmLossofTandemConnectionOduTcmA,
       "alarmLossofTandemConnectionOduTcmB": alarmLossofTandemConnectionOduTcmB,
       "alarmLossofTandemConnectionOduTcmC": alarmLossofTandemConnectionOduTcmC,
       "alarmMansw": alarmMansw,
       "transientManualWorkingSwitchedBacktoWorking": transientManualWorkingSwitchedBacktoWorking,
       "transientManualWorkingSwitchedtoProtection": transientManualWorkingSwitchedtoProtection,
       "alarmEquipmentNotAccepted": alarmEquipmentNotAccepted,
       "alarmEquipmentNotApproved": alarmEquipmentNotApproved,
       "alarmCapabilityLevelMismatch": alarmCapabilityLevelMismatch,
       "alarmEquipmentMismatch": alarmEquipmentMismatch,
       "alarmEquipmentNotSupportedByPhysicalLayer": alarmEquipmentNotSupportedByPhysicalLayer,
       "alarmMeaSwRevision": alarmMeaSwRevision,
       "alarmMismatch": alarmMismatch,
       "alarmMidstageFault": alarmMidstageFault,
       "alarmMultiplexStructureIdentifierMismatchOPU": alarmMultiplexStructureIdentifierMismatchOPU,
       "alarmBackupNotResponding": alarmBackupNotResponding,
       "alarmOpenConnectionIndicationOdu": alarmOpenConnectionIndicationOdu,
       "alarmOpenConnectionIndicationOduTcmA": alarmOpenConnectionIndicationOduTcmA,
       "alarmOpenConnectionIndicationOduTcmB": alarmOpenConnectionIndicationOduTcmB,
       "alarmOpenConnectionIndicationOduTcmC": alarmOpenConnectionIndicationOduTcmC,
       "alarmOduTribMsiMismatch": alarmOduTribMsiMismatch,
       "alarmTransmitterDisabledOff": alarmTransmitterDisabledOff,
       "alarmReceiverDisabled": alarmReceiverDisabled,
       "alarmOpmAbnormalCondition": alarmOpmAbnormalCondition,
       "alarmFaultOnOpm": alarmFaultOnOpm,
       "alarmThresOptPowerCtrlFailureHigh": alarmThresOptPowerCtrlFailureHigh,
       "alarmThresOptPowerCtrlFailureLow": alarmThresOptPowerCtrlFailureLow,
       "alarmTxPowerLimited": alarmTxPowerLimited,
       "alarmOscOpticalPowerControlFailHigh": alarmOscOpticalPowerControlFailHigh,
       "alarmOscOpticalPowerControlFailLow": alarmOscOpticalPowerControlFailLow,
       "alarmOTDRMeasuringinProgress": alarmOTDRMeasuringinProgress,
       "alarmEncryptionModuleCryPasswdError": alarmEncryptionModuleCryPasswdError,
       "alarmPeerLink": alarmPeerLink,
       "alarmPilotReceiveLevelHigh": alarmPilotReceiveLevelHigh,
       "alarmLossOfPilotSignal": alarmLossOfPilotSignal,
       "alarmPayloadMismatchGfp": alarmPayloadMismatchGfp,
       "alarmPayloadMismatchLowerOrderPath": alarmPayloadMismatchLowerOrderPath,
       "alarmPayloadMismatchOPU": alarmPayloadMismatchOPU,
       "alarmPayloadMismatchHigherOrderPath": alarmPayloadMismatchHigherOrderPath,
       "alarmProvPayloadMismatch": alarmProvPayloadMismatch,
       "alarmPrbsLossOfSeqSynch": alarmPrbsLossOfSeqSynch,
       "alarmPrbsRcvActivated": alarmPrbsRcvActivated,
       "alarmPrbsTrmtActivated": alarmPrbsTrmtActivated,
       "alarmProtectionNotAvailable": alarmProtectionNotAvailable,
       "alarmPowerSupplyUnitFailure": alarmPowerSupplyUnitFailure,
       "alarmMaxPowerConsProvModulesToHigh": alarmMaxPowerConsProvModulesToHigh,
       "alarmMaxPowerConsEquipModulesToHigh": alarmMaxPowerConsEquipModulesToHigh,
       "alarmPowerMissing": alarmPowerMissing,
       "alarmRemoteDefectIndicationLine": alarmRemoteDefectIndicationLine,
       "alarmRemoteDefectIndicationLowerOrderPath": alarmRemoteDefectIndicationLowerOrderPath,
       "alarmRemoteDefectIndicationHigherOrderPath": alarmRemoteDefectIndicationHigherOrderPath,
       "transientPmSnapshotEnded": transientPmSnapshotEnded,
       "alarmDcnCommunicationFail": alarmDcnCommunicationFail,
       "alarmNtpForSchedEqlzRequired": alarmNtpForSchedEqlzRequired,
       "alarmSignalDegradeOlm": alarmSignalDegradeOlm,
       "alarmSignalDegradeLine": alarmSignalDegradeLine,
       "alarmSignalDegradationonLinkVector": alarmSignalDegradationonLinkVector,
       "alarmSignalDegradeOdu": alarmSignalDegradeOdu,
       "alarmSignalDegradeOtu": alarmSignalDegradeOtu,
       "alarmPcsSignalDegrade": alarmPcsSignalDegrade,
       "alarmSignalDegradeScn": alarmSignalDegradeScn,
       "alarmSignalDegradeOduTcmA": alarmSignalDegradeOduTcmA,
       "alarmSignalDegradeOduTcmB": alarmSignalDegradeOduTcmB,
       "alarmSignalDegradeOduTcmC": alarmSignalDegradeOduTcmC,
       "alarmEncryptionModuleSelfTestFail": alarmEncryptionModuleSelfTestFail,
       "alarmEncryptionModuleSelfTestFailCritical": alarmEncryptionModuleSelfTestFailCritical,
       "alarmSignalFailureOnLink": alarmSignalFailureOnLink,
       "alarmSignalFailureonLinkVector": alarmSignalFailureonLinkVector,
       "alarmSignalFailureOPU": alarmSignalFailureOPU,
       "alarmClientOutage": alarmClientOutage,
       "alarmFacilityDataRateNotSupported": alarmFacilityDataRateNotSupported,
       "transientCryptoSessKeyLifetimeChanged": transientCryptoSessKeyLifetimeChanged,
       "alarmLossofSequenceLowerOrderPath": alarmLossofSequenceLowerOrderPath,
       "alarmLossofSequenceHigherOrderPath": alarmLossofSequenceHigherOrderPath,
       "alarmServerSignalFail": alarmServerSignalFail,
       "alarmServerSignalFailureGfp": alarmServerSignalFailureGfp,
       "alarmServerSignalFailureODU": alarmServerSignalFailureODU,
       "alarmServerSignalFailurePath": alarmServerSignalFailurePath,
       "alarmServerSignalFailureSectionRS": alarmServerSignalFailureSectionRS,
       "transientProtSwToDuplexCompl": transientProtSwToDuplexCompl,
       "transientProtSwToDuplexFail": transientProtSwToDuplexFail,
       "alarmSwitchToDuplexInhibited": alarmSwitchToDuplexInhibited,
       "transientProtSwToDuplexStart": transientProtSwToDuplexStart,
       "alarmSwitchFailed": alarmSwitchFailed,
       "transientSwResetReload": transientSwResetReload,
       "alarmCurrentTooHigh": alarmCurrentTooHigh,
       "alarmAttOnReceiverFiberHigherThanMonitor": alarmAttOnReceiverFiberHigherThanMonitor,
       "alarmAttOnReceiverFiberLowerThanMonitor": alarmAttOnReceiverFiberLowerThanMonitor,
       "alarmAttOnTransmitterFiberHigherThanMonitor": alarmAttOnTransmitterFiberHigherThanMonitor,
       "alarmAttOnTransmitterFiberLowerThanMonitor": alarmAttOnTransmitterFiberLowerThanMonitor,
       "alarmThres15MinExceededOduBbe": alarmThres15MinExceededOduBbe,
       "transientThres1DayExceededOduBbe": transientThres1DayExceededOduBbe,
       "alarmThres15MinExceededOtuBbe": alarmThres15MinExceededOtuBbe,
       "transientThres1DayExceededOtuBbe": transientThres1DayExceededOtuBbe,
       "alarmThres15MinExceededOduTcmABbe": alarmThres15MinExceededOduTcmABbe,
       "transientThres1DayExceededOduTcmABbe": transientThres1DayExceededOduTcmABbe,
       "alarmThres15MinExceededOduTcmBBbe": alarmThres15MinExceededOduTcmBBbe,
       "transientThres1DayExceededOduTcmBBbe": transientThres1DayExceededOduTcmBBbe,
       "alarmThres15MinExceededOduTcmCBbe": alarmThres15MinExceededOduTcmCBbe,
       "transientThres1DayExceededOduTcmCBbe": transientThres1DayExceededOduTcmCBbe,
       "alarmThres15MinExceededFecBERCE": alarmThres15MinExceededFecBERCE,
       "transientThres1DayExceededFecBERCE": transientThres1DayExceededFecBERCE,
       "alarmBrPwrRxTooHigh": alarmBrPwrRxTooHigh,
       "alarmChromaticDispersionTooHigh": alarmChromaticDispersionTooHigh,
       "alarmChromaticDispersionTooLow": alarmChromaticDispersionTooLow,
       "alarmDispersionCompensationTooHigh": alarmDispersionCompensationTooHigh,
       "alarmDispersionCompensationTooLow": alarmDispersionCompensationTooLow,
       "alarmThres15MinExceededFecCE": alarmThres15MinExceededFecCE,
       "transientThres1DayExceededFecCE": transientThres1DayExceededFecCE,
       "alarmCarrierFreqOffsetTooHigh": alarmCarrierFreqOffsetTooHigh,
       "alarmCarrierFreqOffsetTooLow": alarmCarrierFreqOffsetTooLow,
       "alarmThres15MinExceededSonetLineCV": alarmThres15MinExceededSonetLineCV,
       "transientThres1DayExceededSonetLineCV": transientThres1DayExceededSonetLineCV,
       "alarmThres15MinExceededPhysConvCV": alarmThres15MinExceededPhysConvCV,
       "transientThres1DayExceededPhysConvCV": transientThres1DayExceededPhysConvCV,
       "alarmThres15MinExceededSonetSectCV": alarmThres15MinExceededSonetSectCV,
       "transientThres1DayExceededSonetSectCV": transientThres1DayExceededSonetSectCV,
       "alarmThres15MinExceededPhysConvDE": alarmThres15MinExceededPhysConvDE,
       "transientThres1DayExceededPhysConvDE": transientThres1DayExceededPhysConvDE,
       "alarmDifferentialGroupDelayTooHigh": alarmDifferentialGroupDelayTooHigh,
       "alarmThres15MinExceededFecES": alarmThres15MinExceededFecES,
       "transientThres1DayExceededFecES": transientThres1DayExceededFecES,
       "alarmThres15MinExceededSonetLineES": alarmThres15MinExceededSonetLineES,
       "transientThres1DayExceededSonetLineES": transientThres1DayExceededSonetLineES,
       "alarmThres15MinExceededOduES": alarmThres15MinExceededOduES,
       "transientThres1DayExceededOduES": transientThres1DayExceededOduES,
       "alarmThres15MinExceededOtuES": alarmThres15MinExceededOtuES,
       "transientThres1DayExceededOtuES": transientThres1DayExceededOtuES,
       "alarmThres15MinExceededPhysConvES": alarmThres15MinExceededPhysConvES,
       "transientThres1DayExceededPhysConvES": transientThres1DayExceededPhysConvES,
       "alarmThres15MinExceededSonetSectES": alarmThres15MinExceededSonetSectES,
       "transientThres1DayExceededSonetSectES": transientThres1DayExceededSonetSectES,
       "alarmThres15MinExceededOduTcmAES": alarmThres15MinExceededOduTcmAES,
       "transientThres1DayExceededOduTcmAES": transientThres1DayExceededOduTcmAES,
       "alarmThres15MinExceededOduTcmBES": alarmThres15MinExceededOduTcmBES,
       "transientThres1DayExceededOduTcmBES": transientThres1DayExceededOduTcmBES,
       "alarmThres15MinExceededOduTcmCES": alarmThres15MinExceededOduTcmCES,
       "transientThres1DayExceededOduTcmCES": transientThres1DayExceededOduTcmCES,
       "alarmLatencyTooHigh": alarmLatencyTooHigh,
       "alarmLatencyTooLow": alarmLatencyTooLow,
       "alarmLaserBiasCurrentNormalizedtooHigh": alarmLaserBiasCurrentNormalizedtooHigh,
       "alarmLocalOscTemperatureTooHigh": alarmLocalOscTemperatureTooHigh,
       "alarmLocalOscTemperatureTooLow": alarmLocalOscTemperatureTooLow,
       "alarmPumpLaser1TempTooHigh": alarmPumpLaser1TempTooHigh,
       "alarmPumpLaser1TempTooLow": alarmPumpLaser1TempTooLow,
       "alarmPumpLaser2TempTooHigh": alarmPumpLaser2TempTooHigh,
       "alarmPumpLaser2TempTooLow": alarmPumpLaser2TempTooLow,
       "alarmPumpLaser3TempTooHigh": alarmPumpLaser3TempTooHigh,
       "alarmPumpLaser3TempTooLow": alarmPumpLaser3TempTooLow,
       "alarmPumpLaser4TempTooHigh": alarmPumpLaser4TempTooHigh,
       "alarmPumpLaser4TempTooLow": alarmPumpLaser4TempTooLow,
       "alarmOscPwrTooHigh": alarmOscPwrTooHigh,
       "alarmOscPwrTooLow": alarmOscPwrTooLow,
       "alarmRamanPumpPwrTooHigh": alarmRamanPumpPwrTooHigh,
       "alarmRamanPumpPwrTooLow": alarmRamanPumpPwrTooLow,
       "alarmRoundTripDelayTooHigh": alarmRoundTripDelayTooHigh,
       "alarmRoundTripDelayTooLow": alarmRoundTripDelayTooLow,
       "alarmThres15MinExceededSonetSectSEFS": alarmThres15MinExceededSonetSectSEFS,
       "transientThres1DayExceededSonetSectSEFS": transientThres1DayExceededSonetSectSEFS,
       "alarmThres15MinExceededFecSES": alarmThres15MinExceededFecSES,
       "transientThres1DayExceededFecSES": transientThres1DayExceededFecSES,
       "alarmThres15MinExceededSonetLineSES": alarmThres15MinExceededSonetLineSES,
       "transientThres1DayExceededSonetLineSES": transientThres1DayExceededSonetLineSES,
       "alarmThres15MinExceededOduSES": alarmThres15MinExceededOduSES,
       "transientThres1DayExceededOduSES": transientThres1DayExceededOduSES,
       "alarmThres15MinExceededOtuSES": alarmThres15MinExceededOtuSES,
       "transientThres1DayExceededOtuSES": transientThres1DayExceededOtuSES,
       "alarmThres15MinExceededSonetSectSES": alarmThres15MinExceededSonetSectSES,
       "transientThres1DayExceededSonetSectSES": transientThres1DayExceededSonetSectSES,
       "alarmThres15MinExceededOduTcmASES": alarmThres15MinExceededOduTcmASES,
       "transientThres1DayExceededOduTcmASES": transientThres1DayExceededOduTcmASES,
       "alarmThres15MinExceededOduTcmBSES": alarmThres15MinExceededOduTcmBSES,
       "transientThres1DayExceededOduTcmBSES": transientThres1DayExceededOduTcmBSES,
       "alarmThres15MinExceededOduTcmCSES": alarmThres15MinExceededOduTcmCSES,
       "transientThres1DayExceededOduTcmCSES": transientThres1DayExceededOduTcmCSES,
       "alarmLogicalLanesSkewTooHigh": alarmLogicalLanesSkewTooHigh,
       "alarmSignalToNoiseRatioTooLow": alarmSignalToNoiseRatioTooLow,
       "alarmSubModuleTempTooHigh": alarmSubModuleTempTooHigh,
       "alarmTemperatureTooHigh": alarmTemperatureTooHigh,
       "alarmTemperatureTooLow": alarmTemperatureTooLow,
       "alarmThres15MinExceededSonetLineUAS": alarmThres15MinExceededSonetLineUAS,
       "transientThres1DayExceededSonetLineUAS": transientThres1DayExceededSonetLineUAS,
       "alarmThres15MinExceededOduUAS": alarmThres15MinExceededOduUAS,
       "transientThres1DayExceededOduUAS": transientThres1DayExceededOduUAS,
       "alarmThres15MinExceededOtuUAS": alarmThres15MinExceededOtuUAS,
       "transientThres1DayExceededOtuUAS": transientThres1DayExceededOtuUAS,
       "alarmThres15MinExceededOduTcmAUAS": alarmThres15MinExceededOduTcmAUAS,
       "transientThres1DayExceededOduTcmAUAS": transientThres1DayExceededOduTcmAUAS,
       "alarmThres15MinExceededOduTcmBUAS": alarmThres15MinExceededOduTcmBUAS,
       "transientThres1DayExceededOduTcmBUAS": transientThres1DayExceededOduTcmBUAS,
       "alarmThres15MinExceededOduTcmCUAS": alarmThres15MinExceededOduTcmCUAS,
       "transientThres1DayExceededOduTcmCUAS": transientThres1DayExceededOduTcmCUAS,
       "alarmThres15MinExceededFecUBE": alarmThres15MinExceededFecUBE,
       "transientThres1DayExceededFecUBE": transientThres1DayExceededFecUBE,
       "alarmEncryptionModuleTamperDetected": alarmEncryptionModuleTamperDetected,
       "alarmThermoElectricCoolerEndOfLife": alarmThermoElectricCoolerEndOfLife,
       "alarmInputTIF": alarmInputTIF,
       "transientHardwareResetInputTIF": transientHardwareResetInputTIF,
       "alarmTraceIdentifierMismatchOdu": alarmTraceIdentifierMismatchOdu,
       "alarmTraceIdentifierMismatchOtu": alarmTraceIdentifierMismatchOtu,
       "alarmSectionTraceMismatch": alarmSectionTraceMismatch,
       "alarmTraceIdentifierMismatchOduTcmA": alarmTraceIdentifierMismatchOduTcmA,
       "alarmTraceIdentifierMismatchOduTcmB": alarmTraceIdentifierMismatchOduTcmB,
       "alarmTraceIdentifierMismatchOduTcmC": alarmTraceIdentifierMismatchOduTcmC,
       "alarmTurnupFailed": alarmTurnupFailed,
       "alarmTurnupCondition": alarmTurnupCondition,
       "alarmUnequippedLowerOrderPath": alarmUnequippedLowerOrderPath,
       "alarmUnequippedHigherOrderPath": alarmUnequippedHigherOrderPath,
       "alarmVoaControlFail": alarmVoaControlFail,
       "alarmVoltageOutOfRange": alarmVoltageOutOfRange,
       "alarmInputVoltageFailure": alarmInputVoltageFailure,
       "alarmInputVoltageFailurePort1": alarmInputVoltageFailurePort1,
       "alarmInputVoltageFailurePort2": alarmInputVoltageFailurePort2,
       "transientWorkingSwitchedBacktoWorking": transientWorkingSwitchedBacktoWorking,
       "transientWorkingSwitchedtoProtection": transientWorkingSwitchedtoProtection,
       "alarmWtrTimerRunning": alarmWtrTimerRunning,
       "alarmLossOfLaneOtu": alarmLossOfLaneOtu,
       "alarmLossOfTestSeqSynchOpu": alarmLossOfTestSeqSynchOpu,
       "alarmLossOfMfiOpu": alarmLossOfMfiOpu,
       "alarmOosDisabledLckOduTrmt": alarmOosDisabledLckOduTrmt,
       "alarmConfigurationMismatch": alarmConfigurationMismatch,
       "alarmOduAutoShutdownRxAIS": alarmOduAutoShutdownRxAIS,
       "alarmOduAutoShutdownTxAIS": alarmOduAutoShutdownTxAIS,
       "alarmOosDisabledLckOduRx": alarmOosDisabledLckOduRx,
       "transientBootUpFailed": transientBootUpFailed,
       "transientBootUpCompleted": transientBootUpCompleted,
       "transientBootUpStarted": transientBootUpStarted,
       "transientInstallFwpCompleted": transientInstallFwpCompleted,
       "transientBootUpRejected": transientBootUpRejected,
       "alarmThres15MinExceededBbePcs": alarmThres15MinExceededBbePcs,
       "transientThres15DayExceededBbePcs": transientThres15DayExceededBbePcs,
       "alarmAutoShutdownGAis": alarmAutoShutdownGAis,
       "alarmEquipmentMismatchAllow": alarmEquipmentMismatchAllow,
       "alarmWarmUp": alarmWarmUp,
       "transientFwpInstallStarted": transientFwpInstallStarted,
       "transientFwpInstallFailed": transientFwpInstallFailed,
       "transientFwpInstallCompleted": transientFwpInstallCompleted,
       "transientFwpSwitchStarted": transientFwpSwitchStarted,
       "transientFwpSwitchFailed": transientFwpSwitchFailed,
       "transientFwpSwitchCompleted": transientFwpSwitchCompleted,
       "transientFwpSwitchRejected": transientFwpSwitchRejected,
       "alarmNetworkPathRestricted": alarmNetworkPathRestricted,
       "transientPathCleanupComplete": transientPathCleanupComplete,
       "alarmVfClientSignalFail": alarmVfClientSignalFail,
       "alarmAutoShutdownVfCSF": alarmAutoShutdownVfCSF,
       "transientNtpSrvTestSuccessed": transientNtpSrvTestSuccessed,
       "transientNtpSrvTestFailed": transientNtpSrvTestFailed,
       "transientNtpSrvSyncChanged": transientNtpSrvSyncChanged,
       "alarmLinkFailToPartner1": alarmLinkFailToPartner1,
       "alarmLinkFailToPartner2": alarmLinkFailToPartner2,
       "alarmLinkFailToPartner3": alarmLinkFailToPartner3,
       "alarmLinkFailToPartner4": alarmLinkFailToPartner4,
       "alarmPartnerUnavailable": alarmPartnerUnavailable,
       "transientCommunicationFail": transientCommunicationFail,
       "alarmPartner1Deleted": alarmPartner1Deleted,
       "alarmPartner2Deleted": alarmPartner2Deleted,
       "alarmPartner3Deleted": alarmPartner3Deleted,
       "alarmPartner4Deleted": alarmPartner4Deleted,
       "transientEqlzReport": transientEqlzReport,
       "alarmThres15MinExceededPhysConvSE": alarmThres15MinExceededPhysConvSE,
       "transientThres1DayExceededPhysConvSE": transientThres1DayExceededPhysConvSE,
       "alarmThres15MinExceededPhysConvCVDE": alarmThres15MinExceededPhysConvCVDE,
       "transientThres1DayExceededPhysConvCVDE": transientThres1DayExceededPhysConvCVDE,
       "transientForcedWorkingSwitchedBacktoWorking": transientForcedWorkingSwitchedBacktoWorking,
       "transientForcedWorkingSwitchedBacktoProtection": transientForcedWorkingSwitchedBacktoProtection,
       "alarmAutoShutdownSendingOciOduTx": alarmAutoShutdownSendingOciOduTx,
       "alarmAcpLinkLoss": alarmAcpLinkLoss,
       "alarmAcpChannelUnAvail": alarmAcpChannelUnAvail,
       "alarmAcpPartnerUnassigned": alarmAcpPartnerUnassigned,
       "alarmAcpPartnerDeleted": alarmAcpPartnerDeleted,
       "alarmThres15MinExceededCrcErrorsRcv": alarmThres15MinExceededCrcErrorsRcv,
       "transientThres1DayExceededCrcErrorsRcv": transientThres1DayExceededCrcErrorsRcv,
       "alarmThres15MinExceededCrcFramesEgress": alarmThres15MinExceededCrcFramesEgress,
       "transientThres1DayExceededCrcFramesEgress": transientThres1DayExceededCrcFramesEgress,
       "alarmAutoServiceMismatch": alarmAutoServiceMismatch,
       "alarmBatteryNoCharge": alarmBatteryNoCharge,
       "transientFwpHashPass": transientFwpHashPass,
       "transientFwpHashFail": transientFwpHashFail,
       "alarmTagReceiveFail": alarmTagReceiveFail,
       "alarmTagReceiveFailMaxReached": alarmTagReceiveFailMaxReached,
       "transientTagCounterReset": transientTagCounterReset,
       "transientTagCounterResetFw": transientTagCounterResetFw,
       "alarmInternalEncryptionFail": alarmInternalEncryptionFail,
       "transientCryptoTagFailureLimitChanged": transientCryptoTagFailureLimitChanged,
       "transientCryptoTagFailurePeriodChanged": transientCryptoTagFailurePeriodChanged,
       "alarmInsufficientPower": alarmInsufficientPower,
       "alarmPowerConsumptionHigh": alarmPowerConsumptionHigh,
       "alarmLossOfOverhead": alarmLossOfOverhead,
       "alarmLossOfInputSignal": alarmLossOfInputSignal,
       "alarmOtuServerSignalFail": alarmOtuServerSignalFail,
       "alarmLossOfPRBSonaLane": alarmLossOfPRBSonaLane,
       "alarmLossOfAlignment": alarmLossOfAlignment,
       "alarmLocalFaultRx": alarmLocalFaultRx,
       "alarmLocalFaultTx": alarmLocalFaultTx,
       "alarmServerSignalFailRx": alarmServerSignalFailRx,
       "alarmServerSignalFailTx": alarmServerSignalFailTx,
       "alarmLossOfBlockLock": alarmLossOfBlockLock,
       "alarmInputVoltageLow": alarmInputVoltageLow,
       "alarmOutputVoltageFailure": alarmOutputVoltageFailure,
       "alarmOutputPowerHigh": alarmOutputPowerHigh,
       "alarmCommunicationLoss": alarmCommunicationLoss,
       "alarmIncompatibleVersion": alarmIncompatibleVersion,
       "alarmAirDustFilterClogged": alarmAirDustFilterClogged,
       "alarmPsmRedundancyMismatch": alarmPsmRedundancyMismatch,
       "alarmLossOfModemSync": alarmLossOfModemSync,
       "alarmServerSignalFailPayload": alarmServerSignalFailPayload,
       "alarmOutputCurrentDrawHigh": alarmOutputCurrentDrawHigh,
       "alarmRAndCPortOutage": alarmRAndCPortOutage,
       "alarmRPortOutage": alarmRPortOutage,
       "alarmPPortOutage": alarmPPortOutage,
       "alarmHwOptReachedHT": alarmHwOptReachedHT,
       "alarmExcessLLDPNeighborsRx": alarmExcessLLDPNeighborsRx,
       "alarmExcessLLDPNeighborsTx": alarmExcessLLDPNeighborsTx,
       "alarmConfigurationFault": alarmConfigurationFault,
       "alarmChannelMismatchRx": alarmChannelMismatchRx,
       "alarmLossOfCoupling": alarmLossOfCoupling,
       "alarmHardwareUnavailable": alarmHardwareUnavailable,
       "transientCryBootStarted": transientCryBootStarted,
       "transientCryAuthKeyMade": transientCryAuthKeyMade,
       "transientCryAuthKeyReceived": transientCryAuthKeyReceived,
       "alarmCryAuthKeyMissing": alarmCryAuthKeyMissing,
       "alarmCryDataInvalid": alarmCryDataInvalid,
       "alarmLossOfSignalDcPort": alarmLossOfSignalDcPort,
       "alarmAmpDisabled": alarmAmpDisabled,
       "transientEncryptionModuleSelfTestPass": transientEncryptionModuleSelfTestPass,
       "alarmLicenseMissing": alarmLicenseMissing,
       "alarmHwConfigFault": alarmHwConfigFault,
       "alarmThres15MinExceededSonetSectBbe": alarmThres15MinExceededSonetSectBbe,
       "transientThres1DayExceededSonetSectBbe": transientThres1DayExceededSonetSectBbe,
       "alarmThres15MinExceededSonetLineBbe": alarmThres15MinExceededSonetLineBbe,
       "transientThres1DayExceededSonetLineBbe": transientThres1DayExceededSonetLineBbe,
       "alarmServerSignalFailLine": alarmServerSignalFailLine,
       "alarmThres15MinExceededSonetSectOofs": alarmThres15MinExceededSonetSectOofs,
       "transientThres1DayExceededSonetSectOofs": transientThres1DayExceededSonetSectOofs,
       "alarmNoLicenseFile": alarmNoLicenseFile,
       "alarmLicenseServerDisconnected": alarmLicenseServerDisconnected,
       "alarmLicenseServerNotConfigured": alarmLicenseServerNotConfigured,
       "alarmLicenseInvalid": alarmLicenseInvalid,
       "alarmLicenseOverdraft": alarmLicenseOverdraft,
       "alarmLicenseMissingMismatch": alarmLicenseMissingMismatch,
       "alarmQualityFactorTooLow": alarmQualityFactorTooLow,
       "transientCryBootCompleted": transientCryBootCompleted,
       "transientCryBootFailed": transientCryBootFailed,
       "transientCrySwitchStarted": transientCrySwitchStarted,
       "transientCrySwitchCompleted": transientCrySwitchCompleted,
       "transientCrySwitchFailed": transientCrySwitchFailed,
       "alarmReplaceAirFilter": alarmReplaceAirFilter,
       "alarmAutoShutdownSendingIdle": alarmAutoShutdownSendingIdle,
       "transientMpReleased": transientMpReleased,
       "transientMpLocked": transientMpLocked,
       "alarmMpFileMissing": alarmMpFileMissing,
       "transientMpDeleted": transientMpDeleted,
       "transientMpCreated": transientMpCreated,
       "transientMpParameterSetFail": transientMpParameterSetFail,
       "transientMpImported": transientMpImported,
       "alarmDelayMeasurementProgress": alarmDelayMeasurementProgress,
       "transientDelayMeasurementCompleted": transientDelayMeasurementCompleted,
       "transientDelayMeasurementFailed": transientDelayMeasurementFailed,
       "fspR7EquipmentInsertedTrap": fspR7EquipmentInsertedTrap,
       "fspR7EquipmentRemovedTrap": fspR7EquipmentRemovedTrap,
       "fspR7WriteAccessRequest": fspR7WriteAccessRequest,
       "fspR7WriteAccessGranted": fspR7WriteAccessGranted,
       "fspR7WriteAccessRevoked": fspR7WriteAccessRevoked,
       "fspR7WriteAccessDenied": fspR7WriteAccessDenied,
       "fspR7WriteAccessTimeout": fspR7WriteAccessTimeout,
       "fspR7WriteAccessRequestTimeout": fspR7WriteAccessRequestTimeout,
       "fspR7TrapSinkCreation": fspR7TrapSinkCreation,
       "fspR7TrapSinkDeletion": fspR7TrapSinkDeletion,
       "fspR7TrapSinkChange": fspR7TrapSinkChange,
       "fspR7AccountStateChange": fspR7AccountStateChange,
       "fspR7CommunityCreation": fspR7CommunityCreation,
       "fspR7CommunityDeletion": fspR7CommunityDeletion,
       "fspR7PrivilegeChange": fspR7PrivilegeChange,
       "fspR7AuthenticationNotification": fspR7AuthenticationNotification,
       "fspR7AuthenticationNotificationSummary": fspR7AuthenticationNotificationSummary,
       "performance": performance,
       "performanceFacility": performanceFacility,
       "performanceFacilityThreshold": performanceFacilityThreshold,
       "optThresholdConfigTable": optThresholdConfigTable,
       "optThresholdConfigEntry": optThresholdConfigEntry,
       "optThresholdConfigLowFixed": optThresholdConfigLowFixed,
       "optThresholdConfigHighFixed": optThresholdConfigHighFixed,
       "optThresholdConfigLowConfig": optThresholdConfigLowConfig,
       "optThresholdConfigHighConfig": optThresholdConfigHighConfig,
       "oprThresholdConfigTable": oprThresholdConfigTable,
       "oprThresholdConfigEntry": oprThresholdConfigEntry,
       "oprThresholdConfigLowConfig": oprThresholdConfigLowConfig,
       "oprThresholdConfigHighConfig": oprThresholdConfigHighConfig,
       "lsrtempThresholdConfigTable": lsrtempThresholdConfigTable,
       "lsrtempThresholdConfigEntry": lsrtempThresholdConfigEntry,
       "lsrtempThresholdConfigLowFixed": lsrtempThresholdConfigLowFixed,
       "lsrtempThresholdConfigHighFixed": lsrtempThresholdConfigHighFixed,
       "performanceFacilityMonitoring": performanceFacilityMonitoring,
       "optIntervalPm15minTable": optIntervalPm15minTable,
       "optIntervalPm15minEntry": optIntervalPm15minEntry,
       "optIntervalPm15minNumber": optIntervalPm15minNumber,
       "optIntervalPm15minLow": optIntervalPm15minLow,
       "optIntervalPm15minMean": optIntervalPm15minMean,
       "optIntervalPm15minHigh": optIntervalPm15minHigh,
       "optIntervalPm15minValidFlag": optIntervalPm15minValidFlag,
       "optIntervalPm15minTimeStamp": optIntervalPm15minTimeStamp,
       "optIntervalPm1dayTable": optIntervalPm1dayTable,
       "optIntervalPm1dayEntry": optIntervalPm1dayEntry,
       "optIntervalPm1dayNumber": optIntervalPm1dayNumber,
       "optIntervalPm1dayLow": optIntervalPm1dayLow,
       "optIntervalPm1dayMean": optIntervalPm1dayMean,
       "optIntervalPm1dayHigh": optIntervalPm1dayHigh,
       "optIntervalPm1dayValidFlag": optIntervalPm1dayValidFlag,
       "optIntervalPm1dayTimeStamp": optIntervalPm1dayTimeStamp,
       "optIntervalPm1weekTable": optIntervalPm1weekTable,
       "optIntervalPm1weekEntry": optIntervalPm1weekEntry,
       "optIntervalPm1weekNumber": optIntervalPm1weekNumber,
       "optIntervalPm1weekLow": optIntervalPm1weekLow,
       "optIntervalPm1weekMean": optIntervalPm1weekMean,
       "optIntervalPm1weekHigh": optIntervalPm1weekHigh,
       "optIntervalPm1weekValidFlag": optIntervalPm1weekValidFlag,
       "optIntervalPm1weekTimeStamp": optIntervalPm1weekTimeStamp,
       "oprIntervalPm15minTable": oprIntervalPm15minTable,
       "oprIntervalPm15minEntry": oprIntervalPm15minEntry,
       "oprIntervalPm15minNumber": oprIntervalPm15minNumber,
       "oprIntervalPm15minLow": oprIntervalPm15minLow,
       "oprIntervalPm15minMean": oprIntervalPm15minMean,
       "oprIntervalPm15minHigh": oprIntervalPm15minHigh,
       "oprIntervalPm15minValidFlag": oprIntervalPm15minValidFlag,
       "oprIntervalPm15minTimeStamp": oprIntervalPm15minTimeStamp,
       "oprIntervalPm1dayTable": oprIntervalPm1dayTable,
       "oprIntervalPm1dayEntry": oprIntervalPm1dayEntry,
       "oprIntervalPm1dayNumber": oprIntervalPm1dayNumber,
       "oprIntervalPm1dayLow": oprIntervalPm1dayLow,
       "oprIntervalPm1dayMean": oprIntervalPm1dayMean,
       "oprIntervalPm1dayHigh": oprIntervalPm1dayHigh,
       "oprIntervalPm1dayValidFlag": oprIntervalPm1dayValidFlag,
       "oprIntervalPm1dayTimeStamp": oprIntervalPm1dayTimeStamp,
       "oprIntervalPm1weekTable": oprIntervalPm1weekTable,
       "oprIntervalPm1weekEntry": oprIntervalPm1weekEntry,
       "oprIntervalPm1weekNumber": oprIntervalPm1weekNumber,
       "oprIntervalPm1weekLow": oprIntervalPm1weekLow,
       "oprIntervalPm1weekMean": oprIntervalPm1weekMean,
       "oprIntervalPm1weekHigh": oprIntervalPm1weekHigh,
       "oprIntervalPm1weekValidFlag": oprIntervalPm1weekValidFlag,
       "oprIntervalPm1weekTimeStamp": oprIntervalPm1weekTimeStamp,
       "endOfPerformance": endOfPerformance,
       "featureSpecific": featureSpecific,
       "fiberMap": fiberMap,
       "terminationPointTable": terminationPointTable,
       "terminationPointEntry": terminationPointEntry,
       "terminationPointRowStatus": terminationPointRowStatus,
       "terminationPointPartnerAid": terminationPointPartnerAid,
       "terminationPointAdmin": terminationPointAdmin,
       "terminationPointFiberDetect": terminationPointFiberDetect,
       "terminationPointFiberDetectStatus": terminationPointFiberDetectStatus,
       "terminationPointFunction": terminationPointFunction,
       "terminationPointAlias": terminationPointAlias,
       "terminationPointValidSigTimer": terminationPointValidSigTimer,
       "terminationPointConnector": terminationPointConnector,
       "terminationPointFiber": terminationPointFiber,
       "terminationPointConnType": terminationPointConnType,
       "terminationPointOper": terminationPointOper,
       "terminationPointOutputPower": terminationPointOutputPower,
       "terminationPointInputPower": terminationPointInputPower,
       "terminationPointFiberConnAtten": terminationPointFiberConnAtten,
       "terminationPointConnEqptState": terminationPointConnEqptState,
       "terminationPointTermType": terminationPointTermType,
       "terminationPointChannel": terminationPointChannel,
       "terminationPointLambda": terminationPointLambda,
       "terminationPointFrequency": terminationPointFrequency,
       "terminationPointReach": terminationPointReach,
       "terminationPointBand": terminationPointBand,
       "terminationPointSubBand": terminationPointSubBand,
       "terminationPointGroup": terminationPointGroup,
       "terminationPointSfProvision": terminationPointSfProvision,
       "terminationPointDirection": terminationPointDirection,
       "terminationPointLevel": terminationPointLevel,
       "terminationPointSecondaryStates": terminationPointSecondaryStates,
       "terminationPointChannelRangeProvision": terminationPointChannelRangeProvision,
       "connectionTable": connectionTable,
       "connectionEntry": connectionEntry,
       "connectionRowStatus": connectionRowStatus,
       "connectionType": connectionType,
       "connectionState": connectionState,
       "connectionCreationMethod": connectionCreationMethod,
       "facilityReferByTable": facilityReferByTable,
       "facilityReferByEntry": facilityReferByEntry,
       "facilityReferByTerminPoint": facilityReferByTerminPoint,
       "externalPortReferByTable": externalPortReferByTable,
       "externalPortReferByEntry": externalPortReferByEntry,
       "externalPortReferByTerminPoint": externalPortReferByTerminPoint,
       "endOfExternalPortReferByTabke": endOfExternalPortReferByTabke,
       "dcnReferByTable": dcnReferByTable,
       "dcnReferByEntry": dcnReferByEntry,
       "dcnReferByTerminPoint": dcnReferByTerminPoint,
       "endOfDcnReferByTable": endOfDcnReferByTable,
       "opticalMuxReferByTable": opticalMuxReferByTable,
       "opticalMuxReferByEntry": opticalMuxReferByEntry,
       "opticalMuxReferByTerminPoint": opticalMuxReferByTerminPoint,
       "endOfOpticalMuxReferByTable": endOfOpticalMuxReferByTable,
       "endOfFiberMap": endOfFiberMap,
       "pmSnapshot": pmSnapshot,
       "startPmSnapshot": startPmSnapshot,
       "pmSnapshotStatus": pmSnapshotStatus,
       "pmSnapshotCurrentTable": pmSnapshotCurrentTable,
       "pmSnapshotCurrentEntry": pmSnapshotCurrentEntry,
       "pmSnapshotCurrentOutputPower": pmSnapshotCurrentOutputPower,
       "pmSnapshotCurrentInputPower": pmSnapshotCurrentInputPower,
       "pmSnapshotCurrentAttenuation": pmSnapshotCurrentAttenuation,
       "pmSnapshotCurrentAttenOfVoa": pmSnapshotCurrentAttenOfVoa,
       "pmSnapshotCurrentOscGain": pmSnapshotCurrentOscGain,
       "pmSnapshotCurrentBckreflecPwrRx": pmSnapshotCurrentBckreflecPwrRx,
       "pmSnapshotCurrentRamanPumpPower": pmSnapshotCurrentRamanPumpPower,
       "pmSnapshotCurrentOscPwrReceived": pmSnapshotCurrentOscPwrReceived,
       "pmSnapshotCurrentVariableGain": pmSnapshotCurrentVariableGain,
       "pmSnapshotCurrentTxLineAtten": pmSnapshotCurrentTxLineAtten,
       "pmSnapshotCurrentRxLineAtten": pmSnapshotCurrentRxLineAtten,
       "pmSnapshotHistoricalTable": pmSnapshotHistoricalTable,
       "pmSnapshotHistoricalEntry": pmSnapshotHistoricalEntry,
       "pmSnapshotHistoricalParameter": pmSnapshotHistoricalParameter,
       "pmSnapshotHistoricalNumber": pmSnapshotHistoricalNumber,
       "pmSnapshotHistoricalValue": pmSnapshotHistoricalValue,
       "pmSnapshotHistoricalValidFlag": pmSnapshotHistoricalValidFlag,
       "pmSnapshotHistoricalTimeStamp": pmSnapshotHistoricalTimeStamp,
       "pmSnapshotCurrentTerminPointTable": pmSnapshotCurrentTerminPointTable,
       "pmSnapshotCurrentTerminPointEntry": pmSnapshotCurrentTerminPointEntry,
       "pmSnapshotCurrentTerminPointOutputPower": pmSnapshotCurrentTerminPointOutputPower,
       "pmSnapshotCurrentTerminPointInputPower": pmSnapshotCurrentTerminPointInputPower,
       "pmSnapshotCurrentTerminPointFiberConnAtten": pmSnapshotCurrentTerminPointFiberConnAtten,
       "pmSnapshotHistoricalTerminPointTable": pmSnapshotHistoricalTerminPointTable,
       "pmSnapshotHistoricalTerminPointEntry": pmSnapshotHistoricalTerminPointEntry,
       "pmSnapshotHistoricalTerminPointParameter": pmSnapshotHistoricalTerminPointParameter,
       "pmSnapshotHistoricalTerminPointNumber": pmSnapshotHistoricalTerminPointNumber,
       "pmSnapshotHistoricalTerminPointValue": pmSnapshotHistoricalTerminPointValue,
       "pmSnapshotHistoricalTerminPointValidFlag": pmSnapshotHistoricalTerminPointValidFlag,
       "pmSnapshotHistoricalTerminPointTimeStamp": pmSnapshotHistoricalTerminPointTimeStamp,
       "endOfPmSnampshot": endOfPmSnampshot,
       "eci": eci,
       "externalPortTable": externalPortTable,
       "externalPortEntry": externalPortEntry,
       "externalPortRowStatus": externalPortRowStatus,
       "externalPortConnectionState": externalPortConnectionState,
       "externalPortType": externalPortType,
       "externalPortTransmitChannel": externalPortTransmitChannel,
       "externalPortChannelBandwith": externalPortChannelBandwith,
       "externalPortAlias": externalPortAlias,
       "externalPortFarEndLocation": externalPortFarEndLocation,
       "externalPortBitrate": externalPortBitrate,
       "externalPortFecType": externalPortFecType,
       "externalPortLineCoding": externalPortLineCoding,
       "externalPortFrameFormat": externalPortFrameFormat,
       "externalPortOpticalPowerTx": externalPortOpticalPowerTx,
       "externalPortOsnrTransmit": externalPortOsnrTransmit,
       "externalPortPmdTransmit": externalPortPmdTransmit,
       "externalPortChromDisperTx": externalPortChromDisperTx,
       "externalPortMinOsnrRcv": externalPortMinOsnrRcv,
       "externalPortMinOptPowerRcv": externalPortMinOptPowerRcv,
       "externalPortMaxOptPowerRcv": externalPortMaxOptPowerRcv,
       "externalPortMaxPmdRcv": externalPortMaxPmdRcv,
       "externalPortMinChromDisperRcv": externalPortMinChromDisperRcv,
       "externalPortMaxChromDisperRcv": externalPortMaxChromDisperRcv,
       "externalPortMaxBitErrorRate": externalPortMaxBitErrorRate,
       "externalPortSourceProfile": externalPortSourceProfile,
       "externalPortSecondaryStates": externalPortSecondaryStates,
       "externalOmTable": externalOmTable,
       "externalOmEntry": externalOmEntry,
       "externalOmRowStatus": externalOmRowStatus,
       "externalOmType": externalOmType,
       "externalOmHostName": externalOmHostName,
       "externalVchTable": externalVchTable,
       "externalVchEntry": externalVchEntry,
       "externalVchRowStatus": externalVchRowStatus,
       "externalVchConnectionState": externalVchConnectionState,
       "externalVchType": externalVchType,
       "externalVchTransmitChannel": externalVchTransmitChannel,
       "externalVchChannelBandwith": externalVchChannelBandwith,
       "externalVchAlias": externalVchAlias,
       "externalVchFarEndLocation": externalVchFarEndLocation,
       "externalVchBitrate": externalVchBitrate,
       "externalVchFecType": externalVchFecType,
       "externalVchLineCoding": externalVchLineCoding,
       "externalVchFrameFormat": externalVchFrameFormat,
       "externalVchOpticalPowerTx": externalVchOpticalPowerTx,
       "externalVchOsnrTransmit": externalVchOsnrTransmit,
       "externalVchPmdTransmit": externalVchPmdTransmit,
       "externalVchChromDisperTx": externalVchChromDisperTx,
       "externalVchMinOsnrRcv": externalVchMinOsnrRcv,
       "externalVchMinOptPowerRcv": externalVchMinOptPowerRcv,
       "externalVchMaxOptPowerRcv": externalVchMaxOptPowerRcv,
       "externalVchMaxPmdRcv": externalVchMaxPmdRcv,
       "externalVchMinChromDisperRcv": externalVchMinChromDisperRcv,
       "externalVchMaxChromDisperRcv": externalVchMaxChromDisperRcv,
       "externalVchMaxBitErrorRate": externalVchMaxBitErrorRate,
       "endOfEci": endOfEci,
       "serviceDiagnostics": serviceDiagnostics,
       "channelTracesTable": channelTracesTable,
       "channelTracesEntry": channelTracesEntry,
       "channelTracesIndexNo1": channelTracesIndexNo1,
       "channelTracesIndexNo2": channelTracesIndexNo2,
       "channelTracesIndexNo3": channelTracesIndexNo3,
       "channelTracesIndexNo4": channelTracesIndexNo4,
       "channelTracesClassName": channelTracesClassName,
       "channelTracesChannelNumber": channelTracesChannelNumber,
       "channelTracesRouteId": channelTracesRouteId,
       "channelTracesElementId": channelTracesElementId,
       "channelTracesFromAid": channelTracesFromAid,
       "channelTracesToAid": channelTracesToAid,
       "channelTracesRouteType": channelTracesRouteType,
       "channelTracesChannelRx": channelTracesChannelRx,
       "channelTracesChannelTx": channelTracesChannelTx,
       "endOfchannelTracesTable": endOfchannelTracesTable,
       "ratFrom": ratFrom,
       "ratTo": ratTo,
       "ratChIngress": ratChIngress,
       "ratChEgress": ratChEgress,
       "ratSuperChannel": ratSuperChannel,
       "ratSuperChannelFq": ratSuperChannelFq,
       "ratStartPointTable": ratStartPointTable,
       "ratStartPointEntry": ratStartPointEntry,
       "ratStartPointIndexNo1": ratStartPointIndexNo1,
       "ratStartPointIndexNo2": ratStartPointIndexNo2,
       "ratStartPointIndexNo3": ratStartPointIndexNo3,
       "ratStartPointIndexNo4": ratStartPointIndexNo4,
       "ratStartPointClassName": ratStartPointClassName,
       "ratStartPointAidString": ratStartPointAidString,
       "ratStartPointTableId": ratStartPointTableId,
       "ratStartPointChannelNumber": ratStartPointChannelNumber,
       "ratStartPointChannelGroup": ratStartPointChannelGroup,
       "ratStartPointClass": ratStartPointClass,
       "endOfRatStartPointTable": endOfRatStartPointTable,
       "ratAnalyzerTable": ratAnalyzerTable,
       "ratAnalyzerEntry": ratAnalyzerEntry,
       "ratAnalyzerRouteId": ratAnalyzerRouteId,
       "ratAnalyzerElementId": ratAnalyzerElementId,
       "ratAnalyzerFromAid": ratAnalyzerFromAid,
       "ratAnalyzerToAid": ratAnalyzerToAid,
       "ratAnalyzerChannelTx": ratAnalyzerChannelTx,
       "ratAnalyzerState": ratAnalyzerState,
       "ratAnalyzerRouteType": ratAnalyzerRouteType,
       "endOfRatAnalyzerTable": endOfRatAnalyzerTable,
       "ratBlockingTable": ratBlockingTable,
       "ratBlockingEntry": ratBlockingEntry,
       "ratBlockingElementId": ratBlockingElementId,
       "ratBlockingType": ratBlockingType,
       "ratBlockingConnState": ratBlockingConnState,
       "ratBlockingAid": ratBlockingAid,
       "endOfRatBlockingTable": endOfRatBlockingTable,
       "endOfserviceDiagnostics": endOfserviceDiagnostics,
       "changeService": changeService,
       "changePhysicalPortServiceTable": changePhysicalPortServiceTable,
       "changePhysicalPortServiceEntry": changePhysicalPortServiceEntry,
       "changePhysicalPortServiceRowStatus": changePhysicalPortServiceRowStatus,
       "changePhysicalPortServiceType": changePhysicalPortServiceType,
       "changePhysicalPortServiceAdmin": changePhysicalPortServiceAdmin,
       "changePhysicalPortServiceAlias": changePhysicalPortServiceAlias,
       "changePhysicalPortServiceAlsMode": changePhysicalPortServiceAlsMode,
       "changePhysicalPortServiceBehaviour": changePhysicalPortServiceBehaviour,
       "changePhysicalPortServiceDispersionSetting": changePhysicalPortServiceDispersionSetting,
       "changePhysicalPortServiceDispersionMode": changePhysicalPortServiceDispersionMode,
       "changePhysicalPortServiceChannelProv": changePhysicalPortServiceChannelProv,
       "changePhysicalPortServiceWdmRxChannel": changePhysicalPortServiceWdmRxChannel,
       "changePhysicalPortServiceCodeGain": changePhysicalPortServiceCodeGain,
       "changePhysicalPortServiceXfpDecisionThres": changePhysicalPortServiceXfpDecisionThres,
       "changePhysicalPortServiceDisparityCorrection": changePhysicalPortServiceDisparityCorrection,
       "changePhysicalPortServiceEqlzAdmin": changePhysicalPortServiceEqlzAdmin,
       "changePhysicalPortServiceErrorForwarding": changePhysicalPortServiceErrorForwarding,
       "changePhysicalPortServiceFecType": changePhysicalPortServiceFecType,
       "changePhysicalPortServiceFarEndCommunication": changePhysicalPortServiceFarEndCommunication,
       "changePhysicalPortServiceFlowControl": changePhysicalPortServiceFlowControl,
       "changePhysicalPortServiceLaneChannelSetting": changePhysicalPortServiceLaneChannelSetting,
       "changePhysicalPortServiceLaserDelayTimer": changePhysicalPortServiceLaserDelayTimer,
       "changePhysicalPortServiceLaserOffTimer": changePhysicalPortServiceLaserOffTimer,
       "changePhysicalPortServiceLaserOnTimer": changePhysicalPortServiceLaserOnTimer,
       "changePhysicalPortServiceLaserOffDelayFunction": changePhysicalPortServiceLaserOffDelayFunction,
       "changePhysicalPortServiceAutoPTassignment": changePhysicalPortServiceAutoPTassignment,
       "changePhysicalPortServiceTributarySlotMethod": changePhysicalPortServiceTributarySlotMethod,
       "changePhysicalPortServiceOpticalSetPoint": changePhysicalPortServiceOpticalSetPoint,
       "changePhysicalPortServiceOpuPayloadType": changePhysicalPortServiceOpuPayloadType,
       "changePhysicalPortServiceSigDegThresSonetLine": changePhysicalPortServiceSigDegThresSonetLine,
       "changePhysicalPortServiceSigDegThresSdhMs": changePhysicalPortServiceSigDegThresSdhMs,
       "changePhysicalPortServiceSigDegThresOtu": changePhysicalPortServiceSigDegThresOtu,
       "changePhysicalPortServiceSigDegThresOdu": changePhysicalPortServiceSigDegThresOdu,
       "changePhysicalPortServiceSigDegThreshold": changePhysicalPortServiceSigDegThreshold,
       "changePhysicalPortServiceSigDegPcslThreshold": changePhysicalPortServiceSigDegPcslThreshold,
       "changePhysicalPortServiceSigDegThresSonetSection": changePhysicalPortServiceSigDegThresSonetSection,
       "changePhysicalPortServiceSigDegThresSdhSection": changePhysicalPortServiceSigDegThresSdhSection,
       "changePhysicalPortServiceSigDegThresOduTcmA": changePhysicalPortServiceSigDegThresOduTcmA,
       "changePhysicalPortServiceSigDegThresOduTcmB": changePhysicalPortServiceSigDegThresOduTcmB,
       "changePhysicalPortServiceSigDegThresOduTcmC": changePhysicalPortServiceSigDegThresOduTcmC,
       "changePhysicalPortServiceSignalDegradePeriod": changePhysicalPortServiceSignalDegradePeriod,
       "changePhysicalPortServiceSigDegPeriodOdu": changePhysicalPortServiceSigDegPeriodOdu,
       "changePhysicalPortServiceSigDegPeriodOtu": changePhysicalPortServiceSigDegPeriodOtu,
       "changePhysicalPortServiceSigDegPeriodIntegration": changePhysicalPortServiceSigDegPeriodIntegration,
       "changePhysicalPortServiceSigDegPeriodSdhSection": changePhysicalPortServiceSigDegPeriodSdhSection,
       "changePhysicalPortServiceSigDegPeriodOduTcmA": changePhysicalPortServiceSigDegPeriodOduTcmA,
       "changePhysicalPortServiceSigDegPeriodOduTcmB": changePhysicalPortServiceSigDegPeriodOduTcmB,
       "changePhysicalPortServiceSigDegPeriodOduTcmC": changePhysicalPortServiceSigDegPeriodOduTcmC,
       "changePhysicalPortServiceOtnStuffing": changePhysicalPortServiceOtnStuffing,
       "changePhysicalPortServiceTcmALevel": changePhysicalPortServiceTcmALevel,
       "changePhysicalPortServiceTcmBLevel": changePhysicalPortServiceTcmBLevel,
       "changePhysicalPortServiceTcmCLevel": changePhysicalPortServiceTcmCLevel,
       "changePhysicalPortServiceTerminationLevel": changePhysicalPortServiceTerminationLevel,
       "changePhysicalPortServiceTimingSource": changePhysicalPortServiceTimingSource,
       "changePhysicalPortServiceTimModeOdu": changePhysicalPortServiceTimModeOdu,
       "changePhysicalPortServiceTimModeOtu": changePhysicalPortServiceTimModeOtu,
       "changePhysicalPortServiceTimModeSonetSection": changePhysicalPortServiceTimModeSonetSection,
       "changePhysicalPortServiceTimModeOduTcmA": changePhysicalPortServiceTimModeOduTcmA,
       "changePhysicalPortServiceTimModeOduTcmB": changePhysicalPortServiceTimModeOduTcmB,
       "changePhysicalPortServiceTimModeOduTcmC": changePhysicalPortServiceTimModeOduTcmC,
       "changePhysicalPortServiceTraceFormSonetSection": changePhysicalPortServiceTraceFormSonetSection,
       "changePhysicalPortServiceTraceExpectedSonetSection": changePhysicalPortServiceTraceExpectedSonetSection,
       "changePhysicalPortServiceTraceTransmitSonetSection": changePhysicalPortServiceTraceTransmitSonetSection,
       "changePhysicalPortServiceTraceExpectedOtu": changePhysicalPortServiceTraceExpectedOtu,
       "changePhysicalPortServiceTraceTransmitSapiOtu": changePhysicalPortServiceTraceTransmitSapiOtu,
       "changePhysicalPortServiceTraceTransmitDapiOtu": changePhysicalPortServiceTraceTransmitDapiOtu,
       "changePhysicalPortServiceTraceTransmitOpspOtu": changePhysicalPortServiceTraceTransmitOpspOtu,
       "changePhysicalPortServiceTraceExpectedOdu": changePhysicalPortServiceTraceExpectedOdu,
       "changePhysicalPortServiceTraceTransmitSapiOdu": changePhysicalPortServiceTraceTransmitSapiOdu,
       "changePhysicalPortServiceTraceTransmitDapiOdu": changePhysicalPortServiceTraceTransmitDapiOdu,
       "changePhysicalPortServiceTraceTransmitOpspOdu": changePhysicalPortServiceTraceTransmitOpspOdu,
       "changePhysicalPortServiceTraceExpectedOduTcmA": changePhysicalPortServiceTraceExpectedOduTcmA,
       "changePhysicalPortServiceTraceTransmitSapiOduTcmA": changePhysicalPortServiceTraceTransmitSapiOduTcmA,
       "changePhysicalPortServiceTraceTransmitDapiOduTcmA": changePhysicalPortServiceTraceTransmitDapiOduTcmA,
       "changePhysicalPortServiceTraceTransmitOpspOduTcmA": changePhysicalPortServiceTraceTransmitOpspOduTcmA,
       "changePhysicalPortServiceTraceExpectedOduTcmB": changePhysicalPortServiceTraceExpectedOduTcmB,
       "changePhysicalPortServiceTraceTransmitSapiOduTcmB": changePhysicalPortServiceTraceTransmitSapiOduTcmB,
       "changePhysicalPortServiceTraceTransmitDapiOduTcmB": changePhysicalPortServiceTraceTransmitDapiOduTcmB,
       "changePhysicalPortServiceTraceTransmitOpspOduTcmB": changePhysicalPortServiceTraceTransmitOpspOduTcmB,
       "changePhysicalPortServiceTraceExpectedOduTcmC": changePhysicalPortServiceTraceExpectedOduTcmC,
       "changePhysicalPortServiceTraceTransmitSapiOduTcmC": changePhysicalPortServiceTraceTransmitSapiOduTcmC,
       "changePhysicalPortServiceTraceTransmitDapiOduTcmC": changePhysicalPortServiceTraceTransmitDapiOduTcmC,
       "changePhysicalPortServiceTraceTransmitOpspOduTcmC": changePhysicalPortServiceTraceTransmitOpspOduTcmC,
       "changePhysicalPortServiceTxOffDelay": changePhysicalPortServiceTxOffDelay,
       "changePhysicalPortServiceVoaMode": changePhysicalPortServiceVoaMode,
       "changePhysicalPortServiceVoaSetpoint": changePhysicalPortServiceVoaSetpoint,
       "changePhysicalPortServiceTxOffOnTm": changePhysicalPortServiceTxOffOnTm,
       "changePhysicalPortServiceTxOffTimer": changePhysicalPortServiceTxOffTimer,
       "changePhysicalPortServiceTxOnTimer": changePhysicalPortServiceTxOnTimer,
       "changePhysicalPortServiceMode": changePhysicalPortServiceMode,
       "changePhysicalPortServiceChannelPlan": changePhysicalPortServiceChannelPlan,
       "changePhysicalPortServiceOptimize": changePhysicalPortServiceOptimize,
       "changePhysicalPortServiceLinkSetup": changePhysicalPortServiceLinkSetup,
       "changePhysicalPortServiceChannelSpacing": changePhysicalPortServiceChannelSpacing,
       "endOfChangeService": endOfChangeService,
       "protection": protection,
       "haTable": haTable,
       "haEntry": haEntry,
       "haProtectionIndexAid": haProtectionIndexAid,
       "haInhSwitching": haInhSwitching,
       "haSwitchToDuplex": haSwitchToDuplex,
       "haSwitchOverCause": haSwitchOverCause,
       "haSoftwareVersion": haSoftwareVersion,
       "endOfHaTable": endOfHaTable,
       "ffpTable": ffpTable,
       "ffpEntry": ffpEntry,
       "ffpRowStatus": ffpRowStatus,
       "ffpCreationMethod": ffpCreationMethod,
       "ffpSDswitching": ffpSDswitching,
       "ffpHoldOffTime": ffpHoldOffTime,
       "ffpProtectionMech": ffpProtectionMech,
       "ffpWorkingAid": ffpWorkingAid,
       "ffpProtectionAid": ffpProtectionAid,
       "ffpSignalDegradeSwitching": ffpSignalDegradeSwitching,
       "ffpSignalFailureSwitching": ffpSignalFailureSwitching,
       "ffpFarEndIp": ffpFarEndIp,
       "ffpPeerAid": ffpPeerAid,
       "ffpApsType": ffpApsType,
       "ffpRevertMode": ffpRevertMode,
       "ffpWaitToRestore": ffpWaitToRestore,
       "ffpDirection": ffpDirection,
       "ffpProtectionType": ffpProtectionType,
       "ffpApsChannel": ffpApsChannel,
       "ffpApsFarEndModule": ffpApsFarEndModule,
       "endOfFfpTable": endOfFfpTable,
       "endOfProtection": endOfProtection,
       "translation": translation,
       "aidMappingTable": aidMappingTable,
       "aidMappingEntry": aidMappingEntry,
       "aidMappingAidString": aidMappingAidString,
       "aidMappingId": aidMappingId,
       "aidMappingString": aidMappingString,
       "endOfAidMappingTable": endOfAidMappingTable,
       "endOfTranslation": endOfTranslation,
       "advaSecurity": advaSecurity,
       "sshHostKeyLength": sshHostKeyLength,
       "newSshHostKey": newSshHostKey,
       "accessWarning": accessWarning,
       "accessWarningMessage": accessWarningMessage,
       "showLastLoginSuccess": showLastLoginSuccess,
       "showLastLoginFail": showLastLoginFail,
       "writeAccessStatus": writeAccessStatus,
       "writeAccessRequestTimeout": writeAccessRequestTimeout,
       "virtualSessionTable": virtualSessionTable,
       "virtualSessionEntry": virtualSessionEntry,
       "virtualSessionId": virtualSessionId,
       "virtualSessionStatus": virtualSessionStatus,
       "virtualSessionTimeout": virtualSessionTimeout,
       "virtualSessionWriteAccess": virtualSessionWriteAccess,
       "virtualSessionUserName": virtualSessionUserName,
       "virtualSessionIpAddress": virtualSessionIpAddress,
       "virtualSessionChangeReason": virtualSessionChangeReason,
       "virtualSessionChangeTime": virtualSessionChangeTime,
       "packetFiltering": packetFiltering,
       "whitelistFiltering": whitelistFiltering,
       "restrictToSysIP": restrictToSysIP,
       "icmpFiltering": icmpFiltering,
       "icmpEchoRequests": icmpEchoRequests,
       "icmpSourceQuench": icmpSourceQuench,
       "icmpRedirect": icmpRedirect,
       "ocmpTimestampRequest": ocmpTimestampRequest,
       "icmpAddrMask": icmpAddrMask,
       "dosProtection": dosProtection,
       "isolateInbandChan": isolateInbandChan,
       "ipForwarding": ipForwarding,
       "whitelistTable": whitelistTable,
       "whitelistEntry": whitelistEntry,
       "whitelistId": whitelistId,
       "whitelistRowStatus": whitelistRowStatus,
       "whitelistAdmin": whitelistAdmin,
       "whitelistIpMask": whitelistIpMask,
       "whitelistIpAddr": whitelistIpAddr,
       "lockSafety": lockSafety,
       "unlockTime": unlockTime,
       "sslRenewMode": sslRenewMode,
       "sslKeyLength": sslKeyLength,
       "sslValidityPeriod": sslValidityPeriod,
       "sslCertApply": sslCertApply,
       "sslCertIp": sslCertIp,
       "trapSource": trapSource,
       "trapUser": trapUser,
       "removeUsers": removeUsers,
       "authTrapUserName": authTrapUserName,
       "authTrapAccountState": authTrapAccountState,
       "privilegeChangeTable": privilegeChangeTable,
       "privilegeChangeEntry": privilegeChangeEntry,
       "privilegeChangeId": privilegeChangeId,
       "privilegeChangeUserName": privilegeChangeUserName,
       "privilegeChangeIpAddress": privilegeChangeIpAddress,
       "privilegeChangeInterface": privilegeChangeInterface,
       "privilegeChangeCurrentPrivilege": privilegeChangeCurrentPrivilege,
       "privilegeChangeRequestedPrivilege": privilegeChangeRequestedPrivilege,
       "privilegeChangeDuration": privilegeChangeDuration,
       "privilegeChangeAction": privilegeChangeAction,
       "privilegeChangeState": privilegeChangeState,
       "privilegeChangeRemainingTime": privilegeChangeRemainingTime,
       "privilegeChangeRemoteName": privilegeChangeRemoteName,
       "authTrapSrcIp": authTrapSrcIp,
       "authTrapStatus": authTrapStatus,
       "authTrapSessionId": authTrapSessionId,
       "authTrapProtocol": authTrapProtocol,
       "authTrapPort": authTrapPort,
       "authTrapAccess": authTrapAccess,
       "authTrapSuccessfulAuthCount": authTrapSuccessfulAuthCount,
       "authTrapUnsuccessfulAuthCount": authTrapUnsuccessfulAuthCount,
       "userManagementTable": userManagementTable,
       "userManagementEntry": userManagementEntry,
       "userManagementRowStatus": userManagementRowStatus,
       "userManagementUsername": userManagementUsername,
       "userManagementPrivilegeLevel": userManagementPrivilegeLevel,
       "userManagementSecurityLevel": userManagementSecurityLevel,
       "userManagementAuthPrivKey": userManagementAuthPrivKey,
       "userManagementAuthPrivKeyOld": userManagementAuthPrivKeyOld,
       "userManagementTl1TimeoutAvailable": userManagementTl1TimeoutAvailable,
       "userManagementTl1TimeoutValue": userManagementTl1TimeoutValue,
       "userManagementSnmpTimeoutValue": userManagementSnmpTimeoutValue,
       "userManagementUdpSessionStatus": userManagementUdpSessionStatus,
       "userManagementAccountFlag": userManagementAccountFlag,
       "userManagementPasswordMinAge": userManagementPasswordMinAge,
       "userManagementPasswordMaxAge": userManagementPasswordMaxAge,
       "userManagementPasswordExpirationPeriod": userManagementPasswordExpirationPeriod,
       "userManagementAccountState": userManagementAccountState,
       "userManagementPasswordExpirationDate": userManagementPasswordExpirationDate,
       "userManagementPasswordLastChangeDate": userManagementPasswordLastChangeDate,
       "userManagementFailedLoginAttempts": userManagementFailedLoginAttempts,
       "userManagementLastLoginFailInfo": userManagementLastLoginFailInfo,
       "userManagementLastLoginSuccessInfo": userManagementLastLoginSuccessInfo,
       "userManagementInactivityPeriod": userManagementInactivityPeriod,
       "userManagementAccessStartTime": userManagementAccessStartTime,
       "userManagementAccessEndTime": userManagementAccessEndTime,
       "userManagementAccessDays": userManagementAccessDays,
       "userManagementExpirationDate": userManagementExpirationDate,
       "userManagementSso2fa": userManagementSso2fa,
       "userManagementPasswordHashType": userManagementPasswordHashType,
       "userManagementPrivacyKeyType": userManagementPrivacyKeyType,
       "userManagementPrivacyKey": userManagementPrivacyKey,
       "activeUsersTable": activeUsersTable,
       "activeUsersEntry": activeUsersEntry,
       "activeUsersSessionGroupName": activeUsersSessionGroupName,
       "activeUsersInterfaces": activeUsersInterfaces,
       "activeUsersTerminate": activeUsersTerminate,
       "ncuPortC2": ncuPortC2,
       "rpFilter": rpFilter,
       "sso2fa": sso2fa,
       "remoteAuth": remoteAuth,
       "remoteAuthProtocol": remoteAuthProtocol,
       "tlsSupport": tlsSupport,
       "ipSettings": ipSettings,
       "knownHostIPv6Table": knownHostIPv6Table,
       "knownHostIPv6Entry": knownHostIPv6Entry,
       "knownHostIPv6IP": knownHostIPv6IP,
       "knownHostIPv6KeyEncryptAlgorithm": knownHostIPv6KeyEncryptAlgorithm,
       "knownHostIPv6RowStatus": knownHostIPv6RowStatus,
       "knownHostIPv6FingerPrint": knownHostIPv6FingerPrint,
       "ipv6ActRoutesTable": ipv6ActRoutesTable,
       "ipv6ActRoutesEntry": ipv6ActRoutesEntry,
       "ipv6ActRoutesDestination": ipv6ActRoutesDestination,
       "ipv6ActRoutesPrefix": ipv6ActRoutesPrefix,
       "ipv6ActRoutesNextHop": ipv6ActRoutesNextHop,
       "ipv6ActRoutesShelfNo": ipv6ActRoutesShelfNo,
       "ipv6ActRoutesSlotNo": ipv6ActRoutesSlotNo,
       "ipv6ActRoutesPortNo": ipv6ActRoutesPortNo,
       "ipv6ActRoutesExtNo": ipv6ActRoutesExtNo,
       "ipv6ActRoutesClassName": ipv6ActRoutesClassName,
       "ipv6ActRoutesRowStatus": ipv6ActRoutesRowStatus,
       "ipv6ActRoutesType": ipv6ActRoutesType,
       "ipv6ActRoutesMetric": ipv6ActRoutesMetric,
       "ipv6ActRoutesDestIp": ipv6ActRoutesDestIp,
       "ipv6ActRoutesPrefixLen": ipv6ActRoutesPrefixLen,
       "ipv6ActRoutesNextHopIp": ipv6ActRoutesNextHopIp,
       "ipv6ActRoutesPort": ipv6ActRoutesPort,
       "ipv6InActRoutesTable": ipv6InActRoutesTable,
       "ipv6InActRoutesEntry": ipv6InActRoutesEntry,
       "ipv6InActRoutesDestination": ipv6InActRoutesDestination,
       "ipv6InActRoutesPrefix": ipv6InActRoutesPrefix,
       "ipv6InActRoutesNextHop": ipv6InActRoutesNextHop,
       "ipv6InActRoutesShelfNo": ipv6InActRoutesShelfNo,
       "ipv6InActRoutesSlotNo": ipv6InActRoutesSlotNo,
       "ipv6InActRoutesPortNo": ipv6InActRoutesPortNo,
       "ipv6InActRoutesExtNo": ipv6InActRoutesExtNo,
       "ipv6InActRoutesClassName": ipv6InActRoutesClassName,
       "ipv6InActRoutesRowStatus": ipv6InActRoutesRowStatus,
       "ipv6InActRoutesType": ipv6InActRoutesType,
       "ipv6InActRoutesMetric": ipv6InActRoutesMetric,
       "ipv6InActRoutesDestIp": ipv6InActRoutesDestIp,
       "ipv6InActRoutesPrefixLen": ipv6InActRoutesPrefixLen,
       "ipv6InActRoutesNextHopIp": ipv6InActRoutesNextHopIp,
       "ipv6InActRoutesPort": ipv6InActRoutesPort,
       "syslogIPv4Table": syslogIPv4Table,
       "syslogIPv4Entry": syslogIPv4Entry,
       "syslogIPv4Ip": syslogIPv4Ip,
       "syslogIPv4RowStatus": syslogIPv4RowStatus,
       "syslogIPv4Reporting": syslogIPv4Reporting,
       "syslogIPv4DbchgReports": syslogIPv4DbchgReports,
       "syslogIPv4SecurityReports": syslogIPv4SecurityReports,
       "syslogIPv4IpAddr": syslogIPv4IpAddr,
       "syslogIPv4SourceIp": syslogIPv4SourceIp,
       "syslogIPv6Table": syslogIPv6Table,
       "syslogIPv6Entry": syslogIPv6Entry,
       "syslogIPv6Ip": syslogIPv6Ip,
       "syslogIPv6RowStatus": syslogIPv6RowStatus,
       "syslogIPv6Reporting": syslogIPv6Reporting,
       "syslogIPv6DbchgReports": syslogIPv6DbchgReports,
       "syslogIPv6SecurityReports": syslogIPv6SecurityReports,
       "syslogIPv6IpAddr": syslogIPv6IpAddr,
       "syslogIPv6SourceIp": syslogIPv6SourceIp,
       "dateAndTime": dateAndTime,
       "ntpIPv4Table": ntpIPv4Table,
       "ntpIPv4Entry": ntpIPv4Entry,
       "ntpIPv4Ip": ntpIPv4Ip,
       "ntpIPv4RowStatus": ntpIPv4RowStatus,
       "ntpIPv4SourceIp": ntpIPv4SourceIp,
       "ntpIPv4Test": ntpIPv4Test,
       "ntpIPv4TestStatus": ntpIPv4TestStatus,
       "ntpIPv4SyncStatus": ntpIPv4SyncStatus,
       "ntpIPv4Admin": ntpIPv4Admin,
       "ntpIPv4OperState": ntpIPv4OperState,
       "ntpIPv4IpAddr": ntpIPv4IpAddr,
       "ntpIPv6Table": ntpIPv6Table,
       "ntpIPv6Entry": ntpIPv6Entry,
       "ntpIPv6Ip": ntpIPv6Ip,
       "ntpIPv6RowStatus": ntpIPv6RowStatus,
       "ntpIPv6SourceIp": ntpIPv6SourceIp,
       "ntpIPv6Test": ntpIPv6Test,
       "ntpIPv6TestStatus": ntpIPv6TestStatus,
       "ntpIPv6SyncStatus": ntpIPv6SyncStatus,
       "ntpIPv6Admin": ntpIPv6Admin,
       "ntpIPv6OperState": ntpIPv6OperState,
       "ntpIPv6IpAddr": ntpIPv6IpAddr,
       "snmpSettings": snmpSettings,
       "unusedTrapSinkId": unusedTrapSinkId,
       "trapSinkTable": trapSinkTable,
       "trapSinkEntry": trapSinkEntry,
       "trapSinkId": trapSinkId,
       "trapSinkRowStatus": trapSinkRowStatus,
       "trapSinkVersion": trapSinkVersion,
       "trapSinkIpMode": trapSinkIpMode,
       "trapSinkIPv4": trapSinkIPv4,
       "trapSinkIPv6": trapSinkIPv6,
       "trapSinkPort": trapSinkPort,
       "trapSinkCommunity": trapSinkCommunity,
       "trapSinkUserName": trapSinkUserName,
       "trapSinkDuration": trapSinkDuration,
       "trapSinkIpSubnet": trapSinkIpSubnet,
       "unusedCommunityId": unusedCommunityId,
       "communityTable": communityTable,
       "communityEntry": communityEntry,
       "communityId": communityId,
       "communityRowStatus": communityRowStatus,
       "communityIpMode": communityIpMode,
       "communityIPv4": communityIPv4,
       "communityIpMask": communityIpMask,
       "communityIPv6": communityIPv6,
       "communityIPv6PrefixLen": communityIPv6PrefixLen,
       "communityName": communityName,
       "communityAccess": communityAccess,
       "tools": tools,
       "neCommand": neCommand,
       "neCommandState": neCommandState,
       "neCommandBusy": neCommandBusy,
       "neCommandIp": neCommandIp,
       "neCommandLogin": neCommandLogin,
       "neCommandPass": neCommandPass,
       "neCommandPath": neCommandPath,
       "neCommandFile": neCommandFile,
       "neCommandProtocol": neCommandProtocol,
       "neCommandSourceIp": neCommandSourceIp,
       "neSdpType": neSdpType,
       "neDbOnActivate": neDbOnActivate,
       "neAutoDhcp": neAutoDhcp,
       "errorMessage": errorMessage,
       "files": files,
       "fileDataTable": fileDataTable,
       "fileDataEntry": fileDataEntry,
       "fileDataId": fileDataId,
       "fileDataArea": fileDataArea,
       "fileDataType": fileDataType,
       "fileDataSize": fileDataSize,
       "fileDataCreationTime": fileDataCreationTime,
       "fileDataVersion": fileDataVersion,
       "fileDataGrade": fileDataGrade,
       "fileDataComment": fileDataComment,
       "fileDataFileName": fileDataFileName,
       "fileDataPgmType": fileDataPgmType,
       "fileDataMpName": fileDataMpName,
       "fileDataRevision": fileDataRevision,
       "fileDataMpTag": fileDataMpTag,
       "fileDataMpState": fileDataMpState,
       "hdShelves": hdShelves,
       "containerHdSystemTable": containerHdSystemTable,
       "containerHdSystemEntry": containerHdSystemEntry,
       "containerHdSystemId": containerHdSystemId,
       "containerHdSystemAidString": containerHdSystemAidString,
       "containerHdSystemClass": containerHdSystemClass,
       "containerHdSystemParentId": containerHdSystemParentId,
       "hdSystemTable": hdSystemTable,
       "hdSystemEntry": hdSystemEntry,
       "hdSystemId": hdSystemId,
       "hdSystemAidString": hdSystemAidString,
       "hdSystemRowStatus": hdSystemRowStatus,
       "hdSystemDcnAid": hdSystemDcnAid,
       "hdSystemAdopt": hdSystemAdopt,
       "hdSystemAdmin": hdSystemAdmin,
       "hdSystemOperState": hdSystemOperState,
       "hdSystemSerialNumbers": hdSystemSerialNumbers,
       "hdSystemClass": hdSystemClass,
       "hdSystemParentId": hdSystemParentId,
       "hdSystemNendLogicalIpAddr": hdSystemNendLogicalIpAddr,
       "containerShelfmapTable": containerShelfmapTable,
       "containerShelfmapEntry": containerShelfmapEntry,
       "containerShelfmapId": containerShelfmapId,
       "containerShelfmapAidString": containerShelfmapAidString,
       "containerShelfmapSerialNumInv": containerShelfmapSerialNumInv,
       "containerShelfmapTypeInv": containerShelfmapTypeInv,
       "containerShelfmapEquipmentState": containerShelfmapEquipmentState,
       "containerShelfmapClass": containerShelfmapClass,
       "containerShelfmapParentId": containerShelfmapParentId,
       "shelfmapTable": shelfmapTable,
       "shelfmapEntry": shelfmapEntry,
       "shelfmapId": shelfmapId,
       "shelfmapAidString": shelfmapAidString,
       "shelfmapRowStatus": shelfmapRowStatus,
       "shelfmapIpAddr": shelfmapIpAddr,
       "shelfmapEqptIdentifier": shelfmapEqptIdentifier,
       "shelfmapSerialNum": shelfmapSerialNum,
       "shelfmapSerialNumInv": shelfmapSerialNumInv,
       "shelfmapTypeInv": shelfmapTypeInv,
       "shelfmapEquipmentState": shelfmapEquipmentState,
       "shelfmapAdmin": shelfmapAdmin,
       "shelfmapOperState": shelfmapOperState,
       "shelfmapClass": shelfmapClass,
       "shelfmapParentId": shelfmapParentId,
       "alarmHdSystemTable": alarmHdSystemTable,
       "alarmHdSystemEntry": alarmHdSystemEntry,
       "alarmHdSystemId": alarmHdSystemId,
       "alarmHdSystemType": alarmHdSystemType,
       "alarmHdSystemSeverity": alarmHdSystemSeverity,
       "alarmHdSystemAffect": alarmHdSystemAffect,
       "alarmHdSystemTimeStamp": alarmHdSystemTimeStamp,
       "alarmSeverityHdSystemTable": alarmSeverityHdSystemTable,
       "alarmSeverityHdSystemEntry": alarmSeverityHdSystemEntry,
       "alarmSeverityHdSystemId": alarmSeverityHdSystemId,
       "alarmSeverityHdSystemType": alarmSeverityHdSystemType,
       "alarmSeverityHdSystemValue": alarmSeverityHdSystemValue,
       "alarmShelfmapTable": alarmShelfmapTable,
       "alarmShelfmapEntry": alarmShelfmapEntry,
       "alarmShelfmapId": alarmShelfmapId,
       "alarmShelfmapType": alarmShelfmapType,
       "alarmShelfmapSeverity": alarmShelfmapSeverity,
       "alarmShelfmapAffect": alarmShelfmapAffect,
       "alarmShelfmapTimeStamp": alarmShelfmapTimeStamp,
       "alarmSeverityShelfmapTable": alarmSeverityShelfmapTable,
       "alarmSeverityShelfmapEntry": alarmSeverityShelfmapEntry,
       "alarmSeverityShelfmapId": alarmSeverityShelfmapId,
       "alarmSeverityShelfmapType": alarmSeverityShelfmapType,
       "alarmSeverityShelfmapValue": alarmSeverityShelfmapValue,
       "licenses": licenses,
       "licenseManagerTable": licenseManagerTable,
       "licenseManagerEntry": licenseManagerEntry,
       "licenseManagerShelfNo": licenseManagerShelfNo,
       "licenseManagerSlotNo": licenseManagerSlotNo,
       "licenseManagerPortNo": licenseManagerPortNo,
       "licenseManagerExtNo": licenseManagerExtNo,
       "licenseManagerClassName": licenseManagerClassName,
       "licenseManagerAidString": licenseManagerAidString,
       "licenseManagerClass": licenseManagerClass,
       "licenseManagerRowStatus": licenseManagerRowStatus,
       "licenseManagerLicenseManagement": licenseManagerLicenseManagement,
       "licenseManagerLicenseServer": licenseManagerLicenseServer,
       "licenseManagerLicenseServerStatus": licenseManagerLicenseServerStatus,
       "licenseManagerLicenseFilesInstall": licenseManagerLicenseFilesInstall,
       "licenseManagerAdmin": licenseManagerAdmin,
       "licenseManagerSecondaryStates": licenseManagerSecondaryStates,
       "licenseManagerOperState": licenseManagerOperState,
       "licenseManagerParentId": licenseManagerParentId,
       "licenseTable": licenseTable,
       "licenseEntry": licenseEntry,
       "licenseShelfNo": licenseShelfNo,
       "licenseSlotNo": licenseSlotNo,
       "licensePortNo": licensePortNo,
       "licenseExtNo": licenseExtNo,
       "licenseClassName": licenseClassName,
       "licenseAidString": licenseAidString,
       "licenseClass": licenseClass,
       "licenseRowStatus": licenseRowStatus,
       "licenseLicenseName": licenseLicenseName,
       "licenseLicenseType": licenseLicenseType,
       "licenseLicenseCountAvailable": licenseLicenseCountAvailable,
       "licenseLicenseCountUsed": licenseLicenseCountUsed,
       "licenseLicenseCountGranted": licenseLicenseCountGranted,
       "licenseAdmin": licenseAdmin,
       "licenseSecondaryStates": licenseSecondaryStates,
       "licenseOperState": licenseOperState,
       "licenseParentId": licenseParentId,
       "alarmLicenseManagerTable": alarmLicenseManagerTable,
       "alarmLicenseManagerEntry": alarmLicenseManagerEntry,
       "alarmLicenseManagerType": alarmLicenseManagerType,
       "alarmLicenseManagerSeverity": alarmLicenseManagerSeverity,
       "alarmLicenseManagerAffect": alarmLicenseManagerAffect,
       "alarmLicenseManagerTimeStamp": alarmLicenseManagerTimeStamp,
       "alarmSeverityLicenseManagerTable": alarmSeverityLicenseManagerTable,
       "alarmSeverityLicenseManagerEntry": alarmSeverityLicenseManagerEntry,
       "alarmSeverityLicenseManagerType": alarmSeverityLicenseManagerType,
       "alarmSeverityLicenseManagerValue": alarmSeverityLicenseManagerValue,
       "alarmLicenseTable": alarmLicenseTable,
       "alarmLicenseEntry": alarmLicenseEntry,
       "alarmLicenseType": alarmLicenseType,
       "alarmLicenseSeverity": alarmLicenseSeverity,
       "alarmLicenseAffect": alarmLicenseAffect,
       "alarmLicenseTimeStamp": alarmLicenseTimeStamp,
       "alarmSeverityLicenseTable": alarmSeverityLicenseTable,
       "alarmSeverityLicenseEntry": alarmSeverityLicenseEntry,
       "alarmSeverityLicenseType": alarmSeverityLicenseType,
       "alarmSeverityLicenseValue": alarmSeverityLicenseValue,
       "endOfLicensesMgmt": endOfLicensesMgmt,
       "endOfHdShelvesMgmt": endOfHdShelvesMgmt,
       "endOfFeatureSpecific": endOfFeatureSpecific,
       "relationship": relationship,
       "upwardEqptTable": upwardEqptTable,
       "upwardEqptEntry": upwardEqptEntry,
       "upwardEqptShelfNo": upwardEqptShelfNo,
       "upwardEqptSlotNo": upwardEqptSlotNo,
       "upwardEqptPortNo": upwardEqptPortNo,
       "upwardEqptExtNo": upwardEqptExtNo,
       "upwardEqptClassName": upwardEqptClassName,
       "upwardEqptIndex": upwardEqptIndex,
       "upwardEqptParentId": upwardEqptParentId,
       "endOfUpwardEqptTable": endOfUpwardEqptTable,
       "downwardEqptTable": downwardEqptTable,
       "downwardEqptEntry": downwardEqptEntry,
       "downwardEqptShelfNo": downwardEqptShelfNo,
       "downwardEqptSlotNo": downwardEqptSlotNo,
       "downwardEqptPortNo": downwardEqptPortNo,
       "downwardEqptExtNo": downwardEqptExtNo,
       "downwardEqptClassName": downwardEqptClassName,
       "downwardEqptIndex": downwardEqptIndex,
       "downwardEqptChildId": downwardEqptChildId,
       "endOfDownwardEqptTable": endOfDownwardEqptTable,
       "upwardDcnTable": upwardDcnTable,
       "upwardDcnEntry": upwardDcnEntry,
       "upwardDcnShelfNo": upwardDcnShelfNo,
       "upwardDcnSlotNo": upwardDcnSlotNo,
       "upwardDcnPortNo": upwardDcnPortNo,
       "upwardDcnExtNo": upwardDcnExtNo,
       "upwardDcnClassName": upwardDcnClassName,
       "upwardDcnIndex": upwardDcnIndex,
       "upwardDcnParentId": upwardDcnParentId,
       "endOfUpwardDcnTable": endOfUpwardDcnTable,
       "downwardDcnTable": downwardDcnTable,
       "downwardDcnEntry": downwardDcnEntry,
       "downwardDcnShelfNo": downwardDcnShelfNo,
       "downwardDcnSlotNo": downwardDcnSlotNo,
       "downwardDcnPortNo": downwardDcnPortNo,
       "downwardDcnExtNo": downwardDcnExtNo,
       "downwardDcnClassName": downwardDcnClassName,
       "downwardDcnIndex": downwardDcnIndex,
       "downwardDcnChildId": downwardDcnChildId,
       "endOfDownwardDcnTable": endOfDownwardDcnTable,
       "upwardEnvTable": upwardEnvTable,
       "upwardEnvEntry": upwardEnvEntry,
       "upwardEnvShelfNo": upwardEnvShelfNo,
       "upwardEnvSlotNo": upwardEnvSlotNo,
       "upwardEnvPortNo": upwardEnvPortNo,
       "upwardEnvExtNo": upwardEnvExtNo,
       "upwardEnvClassName": upwardEnvClassName,
       "upwardEnvIndex": upwardEnvIndex,
       "upwardEnvParentId": upwardEnvParentId,
       "endOfUpwardEnvTable": endOfUpwardEnvTable,
       "downwardEnvTable": downwardEnvTable,
       "downwardEnvEntry": downwardEnvEntry,
       "downwardEnvShelfNo": downwardEnvShelfNo,
       "downwardEnvSlotNo": downwardEnvSlotNo,
       "downwardEnvPortNo": downwardEnvPortNo,
       "downwardEnvExtNo": downwardEnvExtNo,
       "downwardEnvClassName": downwardEnvClassName,
       "downwardEnvIndex": downwardEnvIndex,
       "downwardEnvChildId": downwardEnvChildId,
       "endOfDownwardEnvTable": endOfDownwardEnvTable,
       "upwardFacilityTable": upwardFacilityTable,
       "upwardFacilityEntry": upwardFacilityEntry,
       "upwardFacilityShelfNo": upwardFacilityShelfNo,
       "upwardFacilitySlotNo": upwardFacilitySlotNo,
       "upwardFacilityPortNo": upwardFacilityPortNo,
       "upwardFacilityExtNo": upwardFacilityExtNo,
       "upwardFacilityClassName": upwardFacilityClassName,
       "upwardFacilityIndex": upwardFacilityIndex,
       "upwardFacilityParentId": upwardFacilityParentId,
       "downwardFacilityTable": downwardFacilityTable,
       "downwardFacilityEntry": downwardFacilityEntry,
       "downwardFacilityShelfNo": downwardFacilityShelfNo,
       "downwardFacilitySlotNo": downwardFacilitySlotNo,
       "downwardFacilityPortNo": downwardFacilityPortNo,
       "downwardFacilityExtNo": downwardFacilityExtNo,
       "downwardFacilityClassName": downwardFacilityClassName,
       "downwardFacilityIndex": downwardFacilityIndex,
       "downwardFacilityChildId": downwardFacilityChildId,
       "endOfDownwardFacilityTable": endOfDownwardFacilityTable,
       "upwardOptLineTable": upwardOptLineTable,
       "upwardOptLineEntry": upwardOptLineEntry,
       "upwardOptLineShelfNo": upwardOptLineShelfNo,
       "upwardOptLineSlotNo": upwardOptLineSlotNo,
       "upwardOptLinePortNo": upwardOptLinePortNo,
       "upwardOptLineExtNo": upwardOptLineExtNo,
       "upwardOptLineClassName": upwardOptLineClassName,
       "upwardOptLineIndex": upwardOptLineIndex,
       "upwardOptLineParentId": upwardOptLineParentId,
       "endOfUpwardOptLineTable": endOfUpwardOptLineTable,
       "downwardOptLineTable": downwardOptLineTable,
       "downwardOptLineEntry": downwardOptLineEntry,
       "downwardOptLineShelfNo": downwardOptLineShelfNo,
       "downwardOptLineSlotNo": downwardOptLineSlotNo,
       "downwardOptLinePortNo": downwardOptLinePortNo,
       "downwardOptLineExtNo": downwardOptLineExtNo,
       "downwardOptLineClassName": downwardOptLineClassName,
       "downwardOptLineIndex": downwardOptLineIndex,
       "downwardOptLineChildId": downwardOptLineChildId,
       "upwardTerminPointTable": upwardTerminPointTable,
       "upwardTerminPointEntry": upwardTerminPointEntry,
       "upwardTerminPointIndexNo1": upwardTerminPointIndexNo1,
       "upwardTerminPointIndexNo2": upwardTerminPointIndexNo2,
       "upwardTerminPointIndexNo3": upwardTerminPointIndexNo3,
       "upwardTerminPointIndexNo4": upwardTerminPointIndexNo4,
       "upwardTerminPointClassName": upwardTerminPointClassName,
       "upwardTerminPointIndex": upwardTerminPointIndex,
       "upwardTerminPointParentId": upwardTerminPointParentId,
       "downwardTerminPointTable": downwardTerminPointTable,
       "downwardTerminPointEntry": downwardTerminPointEntry,
       "downwardTerminPointIndexNo1": downwardTerminPointIndexNo1,
       "downwardTerminPointIndexNo2": downwardTerminPointIndexNo2,
       "downwardTerminPointIndexNo3": downwardTerminPointIndexNo3,
       "downwardTerminPointIndexNo4": downwardTerminPointIndexNo4,
       "downwardTerminPointClassName": downwardTerminPointClassName,
       "downwardTerminPointIndex": downwardTerminPointIndex,
       "downwardTerminPointChildId": downwardTerminPointChildId,
       "endOfDownwardTerminPointTable": endOfDownwardTerminPointTable,
       "upwardExternalPortTable": upwardExternalPortTable,
       "upwardExternalPortEntry": upwardExternalPortEntry,
       "upwardExternalPortShelfNo": upwardExternalPortShelfNo,
       "upwardExternalPortSlotNo": upwardExternalPortSlotNo,
       "upwardExternalPortPortNo": upwardExternalPortPortNo,
       "upwardExternalPortExtNo": upwardExternalPortExtNo,
       "upwardExternalPortClassName": upwardExternalPortClassName,
       "upwardExternalPortIndex": upwardExternalPortIndex,
       "upwardExternalPortParentId": upwardExternalPortParentId,
       "downwardExternalPortTable": downwardExternalPortTable,
       "downwardExternalPortEntry": downwardExternalPortEntry,
       "downwardExternalPortShelfNo": downwardExternalPortShelfNo,
       "downwardExternalPortSlotNo": downwardExternalPortSlotNo,
       "downwardExternalPortPortNo": downwardExternalPortPortNo,
       "downwardExternalPortExtNo": downwardExternalPortExtNo,
       "downwardExternalPortClassName": downwardExternalPortClassName,
       "downwardExternalPortIndex": downwardExternalPortIndex,
       "downwardExternalPortChildId": downwardExternalPortChildId,
       "endOfDownwardExternalPortTable": endOfDownwardExternalPortTable,
       "upwardContainerTable": upwardContainerTable,
       "upwardContainerEntry": upwardContainerEntry,
       "upwardContainerShelfNo": upwardContainerShelfNo,
       "upwardContainerSlotNo": upwardContainerSlotNo,
       "upwardContainerPortNo": upwardContainerPortNo,
       "upwardContainerExtNo": upwardContainerExtNo,
       "upwardContainerClassName": upwardContainerClassName,
       "upwardContainerIndex": upwardContainerIndex,
       "upwardContainerParentId": upwardContainerParentId,
       "endOfUpwardContainerTable": endOfUpwardContainerTable,
       "downwardContainerTable": downwardContainerTable,
       "downwardContainerEntry": downwardContainerEntry,
       "downwardContainerShelfNo": downwardContainerShelfNo,
       "downwardContainerSlotNo": downwardContainerSlotNo,
       "downwardContainerPortNo": downwardContainerPortNo,
       "downwardContainerExtNo": downwardContainerExtNo,
       "downwardContainerClassName": downwardContainerClassName,
       "downwardContainerIndex": downwardContainerIndex,
       "downwardContainerChildId": downwardContainerChildId,
       "endOfDownwardContainerTable": endOfDownwardContainerTable,
       "upwardOpticalMuxTable": upwardOpticalMuxTable,
       "upwardOpticalMuxEntry": upwardOpticalMuxEntry,
       "upwardOpticalMuxShelfNo": upwardOpticalMuxShelfNo,
       "upwardOpticalMuxSlotNo": upwardOpticalMuxSlotNo,
       "upwardOpticalMuxPortNo": upwardOpticalMuxPortNo,
       "upwardOpticalMuxExtNo": upwardOpticalMuxExtNo,
       "upwardOpticalMuxClassName": upwardOpticalMuxClassName,
       "upwardOpticalMuxIndex": upwardOpticalMuxIndex,
       "upwardOpticalMuxParentId": upwardOpticalMuxParentId,
       "endOfUpwardOpticalMuxTable": endOfUpwardOpticalMuxTable,
       "downwardOpticalMuxTable": downwardOpticalMuxTable,
       "downwardOpticalMuxEntry": downwardOpticalMuxEntry,
       "downwardOpticalMuxShelfNo": downwardOpticalMuxShelfNo,
       "downwardOpticalMuxSlotNo": downwardOpticalMuxSlotNo,
       "downwardOpticalMuxPortNo": downwardOpticalMuxPortNo,
       "downwardOpticalMuxExtNo": downwardOpticalMuxExtNo,
       "downwardOpticalMuxClassName": downwardOpticalMuxClassName,
       "downwardOpticalMuxIndex": downwardOpticalMuxIndex,
       "downwardOpticalMuxChildId": downwardOpticalMuxChildId,
       "endOfDownwardOpticalMuxTable": endOfDownwardOpticalMuxTable,
       "upwardShelfConnTable": upwardShelfConnTable,
       "upwardShelfConnEntry": upwardShelfConnEntry,
       "upwardShelfConnShelfNo": upwardShelfConnShelfNo,
       "upwardShelfConnSlotNo": upwardShelfConnSlotNo,
       "upwardShelfConnPortNo": upwardShelfConnPortNo,
       "upwardShelfConnExtNo": upwardShelfConnExtNo,
       "upwardShelfConnClassName": upwardShelfConnClassName,
       "upwardShelfConnIndex": upwardShelfConnIndex,
       "upwardShelfConnParentId": upwardShelfConnParentId,
       "endOfUpwardShelfConnTable": endOfUpwardShelfConnTable,
       "downwardShelfConnTable": downwardShelfConnTable,
       "downwardShelfConnEntry": downwardShelfConnEntry,
       "downwardShelfConnShelfNo": downwardShelfConnShelfNo,
       "downwardShelfConnSlotNo": downwardShelfConnSlotNo,
       "downwardShelfConnPortNo": downwardShelfConnPortNo,
       "downwardShelfConnExtNo": downwardShelfConnExtNo,
       "downwardShelfConnClassName": downwardShelfConnClassName,
       "downwardShelfConnIndex": downwardShelfConnIndex,
       "downwardShelfConnChildId": downwardShelfConnChildId,
       "endOfDownwardShelfConnTable": endOfDownwardShelfConnTable,
       "dependentTable": dependentTable,
       "dependentEntry": dependentEntry,
       "dependentIndexNo1": dependentIndexNo1,
       "dependentIndexNo2": dependentIndexNo2,
       "dependentIndexNo3": dependentIndexNo3,
       "dependentIndexNo4": dependentIndexNo4,
       "dependentClassName": dependentClassName,
       "dependentIndex": dependentIndex,
       "dependentAid": dependentAid,
       "dependentId": dependentId,
       "endOfDependentTable": endOfDependentTable,
       "endOfRelationship": endOfRelationship,
       "notAssignables": notAssignables,
       "notAssignableEqptTable": notAssignableEqptTable,
       "notAssignableEqptEntry": notAssignableEqptEntry,
       "notAssignableEqptIndexNo1": notAssignableEqptIndexNo1,
       "notAssignableEqptIndexNo2": notAssignableEqptIndexNo2,
       "notAssignableEqptIndexNo3": notAssignableEqptIndexNo3,
       "notAssignableEqptIndexNo4": notAssignableEqptIndexNo4,
       "notAssignableEqptClassName": notAssignableEqptClassName,
       "notAssignableEqptAidString": notAssignableEqptAidString,
       "notAssignableEqptParentId": notAssignableEqptParentId,
       "notAssignableEqptClass": notAssignableEqptClass,
       "endOfNotAssignableEqptTable": endOfNotAssignableEqptTable,
       "notAssignableDcnTable": notAssignableDcnTable,
       "notAssignableDcnEntry": notAssignableDcnEntry,
       "notAssignableDcnIndexNo1": notAssignableDcnIndexNo1,
       "notAssignableDcnIndexNo2": notAssignableDcnIndexNo2,
       "notAssignableDcnIndexNo3": notAssignableDcnIndexNo3,
       "notAssignableDcnIndexNo4": notAssignableDcnIndexNo4,
       "notAssignableDcnClassName": notAssignableDcnClassName,
       "notAssignableDcnAidString": notAssignableDcnAidString,
       "notAssignableDcnParentId": notAssignableDcnParentId,
       "notAssignableDcnClass": notAssignableDcnClass,
       "endOfNotAssignableDcnTable": endOfNotAssignableDcnTable,
       "notAssignableFacilityTable": notAssignableFacilityTable,
       "notAssignableFacilityEntry": notAssignableFacilityEntry,
       "notAssignableFacilityIndexNo1": notAssignableFacilityIndexNo1,
       "notAssignableFacilityIndexNo2": notAssignableFacilityIndexNo2,
       "notAssignableFacilityIndexNo3": notAssignableFacilityIndexNo3,
       "notAssignableFacilityIndexNo4": notAssignableFacilityIndexNo4,
       "notAssignableFacilityClassName": notAssignableFacilityClassName,
       "notAssignableFacilityAidString": notAssignableFacilityAidString,
       "notAssignableFacilityParentId": notAssignableFacilityParentId,
       "notAssignableFacilityClass": notAssignableFacilityClass,
       "endOfNotAssignableFacilityTable": endOfNotAssignableFacilityTable,
       "notAssignableOptLineTable": notAssignableOptLineTable,
       "notAssignableOptLineEntry": notAssignableOptLineEntry,
       "notAssignableOptLineIndexNo1": notAssignableOptLineIndexNo1,
       "notAssignableOptLineIndexNo2": notAssignableOptLineIndexNo2,
       "notAssignableOptLineIndexNo3": notAssignableOptLineIndexNo3,
       "notAssignableOptLineIndexNo4": notAssignableOptLineIndexNo4,
       "notAssignableOptLineClassName": notAssignableOptLineClassName,
       "notAssignableOptLineAidString": notAssignableOptLineAidString,
       "notAssignableOptLineParentId": notAssignableOptLineParentId,
       "notAssignableOptLineClass": notAssignableOptLineClass,
       "endOfNotAssignableOptLineTable": endOfNotAssignableOptLineTable,
       "notAssignableEnvTable": notAssignableEnvTable,
       "notAssignableEnvEntry": notAssignableEnvEntry,
       "notAssignableEnvIndexNo1": notAssignableEnvIndexNo1,
       "notAssignableEnvIndexNo2": notAssignableEnvIndexNo2,
       "notAssignableEnvIndexNo3": notAssignableEnvIndexNo3,
       "notAssignableEnvIndexNo4": notAssignableEnvIndexNo4,
       "notAssignableEnvClassName": notAssignableEnvClassName,
       "notAssignableEnvAidString": notAssignableEnvAidString,
       "notAssignableEnvParentId": notAssignableEnvParentId,
       "notAssignableEnvClass": notAssignableEnvClass,
       "endOfNotAssignableEnvTable": endOfNotAssignableEnvTable,
       "notAssignableExternalPortTable": notAssignableExternalPortTable,
       "notAssignableExternalPortEntry": notAssignableExternalPortEntry,
       "notAssignableExternalPortIndexNo1": notAssignableExternalPortIndexNo1,
       "notAssignableExternalPortIndexNo2": notAssignableExternalPortIndexNo2,
       "notAssignableExternalPortIndexNo3": notAssignableExternalPortIndexNo3,
       "notAssignableExternalPortIndexNo4": notAssignableExternalPortIndexNo4,
       "notAssignableExternalPortClassName": notAssignableExternalPortClassName,
       "notAssignableExternalPortAidString": notAssignableExternalPortAidString,
       "notAssignableExternalPortParentId": notAssignableExternalPortParentId,
       "notAssignableExternalPortClass": notAssignableExternalPortClass,
       "endOfNotAssignableExternalPortTable": endOfNotAssignableExternalPortTable,
       "notAssignableContainerTable": notAssignableContainerTable,
       "notAssignableContainerEntry": notAssignableContainerEntry,
       "notAssignableContainerIndexNo1": notAssignableContainerIndexNo1,
       "notAssignableContainerIndexNo2": notAssignableContainerIndexNo2,
       "notAssignableContainerIndexNo3": notAssignableContainerIndexNo3,
       "notAssignableContainerIndexNo4": notAssignableContainerIndexNo4,
       "notAssignableContainerClassName": notAssignableContainerClassName,
       "notAssignableContainerAidString": notAssignableContainerAidString,
       "notAssignableContainerParentId": notAssignableContainerParentId,
       "notAssignableContainerClass": notAssignableContainerClass,
       "endOfNotAssignableContainerTable": endOfNotAssignableContainerTable,
       "notAssignableOpticalMuxTable": notAssignableOpticalMuxTable,
       "notAssignableOpticalMuxEntry": notAssignableOpticalMuxEntry,
       "notAssignableOpticalMuxIndexNo1": notAssignableOpticalMuxIndexNo1,
       "notAssignableOpticalMuxIndexNo2": notAssignableOpticalMuxIndexNo2,
       "notAssignableOpticalMuxIndexNo3": notAssignableOpticalMuxIndexNo3,
       "notAssignableOpticalMuxIndexNo4": notAssignableOpticalMuxIndexNo4,
       "notAssignableOpticalMuxClassName": notAssignableOpticalMuxClassName,
       "notAssignableOpticalMuxAidString": notAssignableOpticalMuxAidString,
       "notAssignableOpticalMuxParentId": notAssignableOpticalMuxParentId,
       "notAssignableOpticalMuxClass": notAssignableOpticalMuxClass,
       "endOfNotAssignableOpticalMuxTable": endOfNotAssignableOpticalMuxTable,
       "notAssignableShelfConnTable": notAssignableShelfConnTable,
       "notAssignableShelfConnEntry": notAssignableShelfConnEntry,
       "notAssignableShelfConnIndexNo1": notAssignableShelfConnIndexNo1,
       "notAssignableShelfConnIndexNo2": notAssignableShelfConnIndexNo2,
       "notAssignableShelfConnIndexNo3": notAssignableShelfConnIndexNo3,
       "notAssignableShelfConnIndexNo4": notAssignableShelfConnIndexNo4,
       "notAssignableShelfConnClassName": notAssignableShelfConnClassName,
       "notAssignableShelfConnAidString": notAssignableShelfConnAidString,
       "notAssignableShelfConnParentId": notAssignableShelfConnParentId,
       "notAssignableShelfConnClass": notAssignableShelfConnClass,
       "endOfNotAssignableShelfConnTable": endOfNotAssignableShelfConnTable,
       "endOfNotAssignables": endOfNotAssignables,
       "inventory": inventory,
       "advaInventoryTable": advaInventoryTable,
       "advaInventoryEntry": advaInventoryEntry,
       "advaInventoryShelfNo": advaInventoryShelfNo,
       "advaInventorySlotNo": advaInventorySlotNo,
       "advaInventoryPortNo": advaInventoryPortNo,
       "advaInventoryExtNo": advaInventoryExtNo,
       "advaInventoryClassName": advaInventoryClassName,
       "advaInventoryAidString": advaInventoryAidString,
       "advaInventoryUnitName": advaInventoryUnitName,
       "advaInventoryFirmwarePackageRev": advaInventoryFirmwarePackageRev,
       "advaInventoryHardwareRev": advaInventoryHardwareRev,
       "advaInventorySoftwareRev": advaInventorySoftwareRev,
       "advaInventoryFpgaRev": advaInventoryFpgaRev,
       "advaInventorySerialNum": advaInventorySerialNum,
       "advaInventoryPartnumber": advaInventoryPartnumber,
       "advaInventoryCleiCode": advaInventoryCleiCode,
       "advaInventoryVendorId": advaInventoryVendorId,
       "advaInventoryType": advaInventoryType,
       "advaInventoryUniversalSerialIdent": advaInventoryUniversalSerialIdent,
       "advaInventoryGradeInventory": advaInventoryGradeInventory,
       "advaInventoryClass": advaInventoryClass,
       "advaInventoryInventoryDescription": advaInventoryInventoryDescription,
       "advaInventoryCapabilityLevel": advaInventoryCapabilityLevel,
       "advaInventoryCfSerialNum": advaInventoryCfSerialNum,
       "advaInventoryCfModel": advaInventoryCfModel,
       "unassignedInventoryTable": unassignedInventoryTable,
       "unassignedInventoryEntry": unassignedInventoryEntry,
       "unassignedInventoryAidString": unassignedInventoryAidString,
       "unassignedInventoryType": unassignedInventoryType,
       "unassignedInventoryParentId": unassignedInventoryParentId,
       "unassignedInventoryClass": unassignedInventoryClass,
       "unassignedInventoryAssignState": unassignedInventoryAssignState,
       "unassignedInventoryOneIndex": unassignedInventoryOneIndex,
       "unassignedInventoryTableId": unassignedInventoryTableId,
       "unassignedInventoryMtosiParentId": unassignedInventoryMtosiParentId}
)
