# SNMP MIB module (XIRRUS-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\xirrus_aos\XIRRUS-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 12:35:32 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention")


# MODULE-IDENTITY

xirrus = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 21013)
)
if mibBuilder.loadTexts:
    xirrus.setRevisions(
        ("2016-05-23 12:00",)
    )


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Products_ObjectIdentity = ObjectIdentity
products = _Products_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1)
)
_XmManage_ObjectIdentity = ObjectIdentity
xmManage = _XmManage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 1)
)
_XsArray_ObjectIdentity = ObjectIdentity
xsArray = _XsArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2)
)
_Acl_ObjectIdentity = ObjectIdentity
acl = _Acl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2)
)


class _AclEnable_Type(Integer32):
    """Custom type aclEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("allow", 1),
          ("deny", 2),
          ("deny-include-blocked-rogues", 3))
    )


_AclEnable_Type.__name__ = "Integer32"
_AclEnable_Object = MibScalar
aclEnable = _AclEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 1),
    _AclEnable_Type()
)
aclEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclEnable.setStatus("current")
_AclTable_Object = MibTable
aclTable = _AclTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2)
)
if mibBuilder.loadTexts:
    aclTable.setStatus("current")
_AclEntry_Object = MibTableRow
aclEntry = _AclEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1)
)
aclEntry.setIndexNames(
    (0, "XIRRUS-MIB", "aclIndex"),
)
if mibBuilder.loadTexts:
    aclEntry.setStatus("current")
_AclIndex_Type = Integer32
_AclIndex_Object = MibTableColumn
aclIndex = _AclIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 1),
    _AclIndex_Type()
)
aclIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIndex.setStatus("current")


class _AclMacAddress_Type(DisplayString):
    """Custom type aclMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 17),
    )


_AclMacAddress_Type.__name__ = "DisplayString"
_AclMacAddress_Object = MibTableColumn
aclMacAddress = _AclMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 2),
    _AclMacAddress_Type()
)
aclMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacAddress.setStatus("current")
_AclRowStatus_Type = RowStatus
_AclRowStatus_Object = MibTableColumn
aclRowStatus = _AclRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 3),
    _AclRowStatus_Type()
)
aclRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclRowStatus.setStatus("current")


class _AclTableReset_Type(Integer32):
    """Custom type aclTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AclTableReset_Type.__name__ = "Integer32"
_AclTableReset_Object = MibScalar
aclTableReset = _AclTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 3),
    _AclTableReset_Type()
)
aclTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclTableReset.setStatus("current")
_AclSsidTable_Object = MibTable
aclSsidTable = _AclSsidTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4)
)
if mibBuilder.loadTexts:
    aclSsidTable.setStatus("current")
_AclSsidEntry_Object = MibTableRow
aclSsidEntry = _AclSsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1)
)
aclSsidEntry.setIndexNames(
    (0, "XIRRUS-MIB", "aclSsidIndex"),
)
if mibBuilder.loadTexts:
    aclSsidEntry.setStatus("current")
_AclSsidIndex_Type = Integer32
_AclSsidIndex_Object = MibTableColumn
aclSsidIndex = _AclSsidIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 1),
    _AclSsidIndex_Type()
)
aclSsidIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclSsidIndex.setStatus("current")


class _AclSsidMacAddress_Type(DisplayString):
    """Custom type aclSsidMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 17),
    )


_AclSsidMacAddress_Type.__name__ = "DisplayString"
_AclSsidMacAddress_Object = MibTableColumn
aclSsidMacAddress = _AclSsidMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 2),
    _AclSsidMacAddress_Type()
)
aclSsidMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclSsidMacAddress.setStatus("current")


class _AclSsidName_Type(DisplayString):
    """Custom type aclSsidName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_AclSsidName_Type.__name__ = "DisplayString"
_AclSsidName_Object = MibTableColumn
aclSsidName = _AclSsidName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 3),
    _AclSsidName_Type()
)
aclSsidName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclSsidName.setStatus("current")
_AclSsidRowStatus_Type = RowStatus
_AclSsidRowStatus_Object = MibTableColumn
aclSsidRowStatus = _AclSsidRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 4),
    _AclSsidRowStatus_Type()
)
aclSsidRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclSsidRowStatus.setStatus("current")


class _AclSsidTableReset_Type(DisplayString):
    """Custom type aclSsidTableReset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_AclSsidTableReset_Type.__name__ = "DisplayString"
_AclSsidTableReset_Object = MibScalar
aclSsidTableReset = _AclSsidTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 5),
    _AclSsidTableReset_Type()
)
aclSsidTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclSsidTableReset.setStatus("current")
_Admin_ObjectIdentity = ObjectIdentity
admin = _Admin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4)
)
_AdminTable_Object = MibTable
adminTable = _AdminTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1)
)
if mibBuilder.loadTexts:
    adminTable.setStatus("current")
_AdminEntry_Object = MibTableRow
adminEntry = _AdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1)
)
adminEntry.setIndexNames(
    (0, "XIRRUS-MIB", "adminIndex"),
)
if mibBuilder.loadTexts:
    adminEntry.setStatus("current")
_AdminIndex_Type = Integer32
_AdminIndex_Object = MibTableColumn
adminIndex = _AdminIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 1),
    _AdminIndex_Type()
)
adminIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    adminIndex.setStatus("current")


class _AdminUsername_Type(DisplayString):
    """Custom type adminUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(5, 50),
    )


_AdminUsername_Type.__name__ = "DisplayString"
_AdminUsername_Object = MibTableColumn
adminUsername = _AdminUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 2),
    _AdminUsername_Type()
)
adminUsername.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminUsername.setStatus("current")


class _AdminPassword_Type(DisplayString):
    """Custom type adminPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(5, 50),
    )


_AdminPassword_Type.__name__ = "DisplayString"
_AdminPassword_Object = MibTableColumn
adminPassword = _AdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 3),
    _AdminPassword_Type()
)
adminPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminPassword.setStatus("current")


class _AdminPasswordForm_Type(Integer32):
    """Custom type adminPasswordForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_AdminPasswordForm_Type.__name__ = "Integer32"
_AdminPasswordForm_Object = MibTableColumn
adminPasswordForm = _AdminPasswordForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 4),
    _AdminPasswordForm_Type()
)
adminPasswordForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminPasswordForm.setStatus("current")


class _AdminPrivilege_Type(Integer32):
    """Custom type adminPrivilege based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("read-only", 0),
          ("read-write", 1))
    )


_AdminPrivilege_Type.__name__ = "Integer32"
_AdminPrivilege_Object = MibTableColumn
adminPrivilege = _AdminPrivilege_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 5),
    _AdminPrivilege_Type()
)
adminPrivilege.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminPrivilege.setStatus("current")
_AdminRowStatus_Type = RowStatus
_AdminRowStatus_Object = MibTableColumn
adminRowStatus = _AdminRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 6),
    _AdminRowStatus_Type()
)
adminRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminRowStatus.setStatus("current")


class _AdminPrivilegeLevel_Type(Integer32):
    """Custom type adminPrivilegeLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AdminPrivilegeLevel_Type.__name__ = "Integer32"
_AdminPrivilegeLevel_Object = MibTableColumn
adminPrivilegeLevel = _AdminPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 7),
    _AdminPrivilegeLevel_Type()
)
adminPrivilegeLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    adminPrivilegeLevel.setStatus("current")


class _AdminTableReset_Type(Integer32):
    """Custom type adminTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AdminTableReset_Type.__name__ = "Integer32"
_AdminTableReset_Object = MibScalar
adminTableReset = _AdminTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 2),
    _AdminTableReset_Type()
)
adminTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminTableReset.setStatus("current")


class _AdminTableClear_Type(Integer32):
    """Custom type adminTableClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_AdminTableClear_Type.__name__ = "Integer32"
_AdminTableClear_Object = MibScalar
adminTableClear = _AdminTableClear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 3),
    _AdminTableClear_Type()
)
adminTableClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminTableClear.setStatus("current")
_AdminRadius_ObjectIdentity = ObjectIdentity
adminRadius = _AdminRadius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4)
)


class _AdminRadiusEnable_Type(Integer32):
    """Custom type adminRadiusEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AdminRadiusEnable_Type.__name__ = "Integer32"
_AdminRadiusEnable_Object = MibScalar
adminRadiusEnable = _AdminRadiusEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 1),
    _AdminRadiusEnable_Type()
)
adminRadiusEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusEnable.setStatus("current")


class _AdminRadiusPriServer_Type(DisplayString):
    """Custom type adminRadiusPriServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_AdminRadiusPriServer_Type.__name__ = "DisplayString"
_AdminRadiusPriServer_Object = MibScalar
adminRadiusPriServer = _AdminRadiusPriServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 2),
    _AdminRadiusPriServer_Type()
)
adminRadiusPriServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusPriServer.setStatus("current")


class _AdminRadiusPriServerPort_Type(Integer32):
    """Custom type adminRadiusPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AdminRadiusPriServerPort_Type.__name__ = "Integer32"
_AdminRadiusPriServerPort_Object = MibScalar
adminRadiusPriServerPort = _AdminRadiusPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 3),
    _AdminRadiusPriServerPort_Type()
)
adminRadiusPriServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusPriServerPort.setStatus("current")


class _AdminRadiusPriServerSecret_Type(DisplayString):
    """Custom type adminRadiusPriServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_AdminRadiusPriServerSecret_Type.__name__ = "DisplayString"
_AdminRadiusPriServerSecret_Object = MibScalar
adminRadiusPriServerSecret = _AdminRadiusPriServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 4),
    _AdminRadiusPriServerSecret_Type()
)
adminRadiusPriServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusPriServerSecret.setStatus("current")


class _AdminRadiusPriServerSecretEnc_Type(DisplayString):
    """Custom type adminRadiusPriServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_AdminRadiusPriServerSecretEnc_Type.__name__ = "DisplayString"
_AdminRadiusPriServerSecretEnc_Object = MibScalar
adminRadiusPriServerSecretEnc = _AdminRadiusPriServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 5),
    _AdminRadiusPriServerSecretEnc_Type()
)
adminRadiusPriServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusPriServerSecretEnc.setStatus("current")


class _AdminRadiusSecServer_Type(DisplayString):
    """Custom type adminRadiusSecServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_AdminRadiusSecServer_Type.__name__ = "DisplayString"
_AdminRadiusSecServer_Object = MibScalar
adminRadiusSecServer = _AdminRadiusSecServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 6),
    _AdminRadiusSecServer_Type()
)
adminRadiusSecServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusSecServer.setStatus("current")


class _AdminRadiusSecServerPort_Type(Integer32):
    """Custom type adminRadiusSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AdminRadiusSecServerPort_Type.__name__ = "Integer32"
_AdminRadiusSecServerPort_Object = MibScalar
adminRadiusSecServerPort = _AdminRadiusSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 7),
    _AdminRadiusSecServerPort_Type()
)
adminRadiusSecServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusSecServerPort.setStatus("current")


class _AdminRadiusSecServerSecret_Type(DisplayString):
    """Custom type adminRadiusSecServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_AdminRadiusSecServerSecret_Type.__name__ = "DisplayString"
_AdminRadiusSecServerSecret_Object = MibScalar
adminRadiusSecServerSecret = _AdminRadiusSecServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 8),
    _AdminRadiusSecServerSecret_Type()
)
adminRadiusSecServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusSecServerSecret.setStatus("current")


class _AdminRadiusSecServerSecretEnc_Type(DisplayString):
    """Custom type adminRadiusSecServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_AdminRadiusSecServerSecretEnc_Type.__name__ = "DisplayString"
_AdminRadiusSecServerSecretEnc_Object = MibScalar
adminRadiusSecServerSecretEnc = _AdminRadiusSecServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 9),
    _AdminRadiusSecServerSecretEnc_Type()
)
adminRadiusSecServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusSecServerSecretEnc.setStatus("current")


class _AdminRadiusTimeout_Type(Integer32):
    """Custom type adminRadiusTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AdminRadiusTimeout_Type.__name__ = "Integer32"
_AdminRadiusTimeout_Object = MibScalar
adminRadiusTimeout = _AdminRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 10),
    _AdminRadiusTimeout_Type()
)
adminRadiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusTimeout.setStatus("current")


class _AdminRadiusAuthType_Type(Integer32):
    """Custom type adminRadiusAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("chap", 0),
          ("pap", 1),
          ("ms-chap", 2))
    )


_AdminRadiusAuthType_Type.__name__ = "Integer32"
_AdminRadiusAuthType_Object = MibScalar
adminRadiusAuthType = _AdminRadiusAuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 11),
    _AdminRadiusAuthType_Type()
)
adminRadiusAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminRadiusAuthType.setStatus("current")
_AdminHistoryTable_Object = MibTable
adminHistoryTable = _AdminHistoryTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5)
)
if mibBuilder.loadTexts:
    adminHistoryTable.setStatus("current")
_AdminHistoryEntry_Object = MibTableRow
adminHistoryEntry = _AdminHistoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1)
)
adminHistoryEntry.setIndexNames(
    (0, "XIRRUS-MIB", "adminHistoryIndex"),
)
if mibBuilder.loadTexts:
    adminHistoryEntry.setStatus("current")
_AdminHistoryIndex_Type = Integer32
_AdminHistoryIndex_Object = MibTableColumn
adminHistoryIndex = _AdminHistoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 1),
    _AdminHistoryIndex_Type()
)
adminHistoryIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    adminHistoryIndex.setStatus("current")
_AdminHistoryUsername_Type = DisplayString
_AdminHistoryUsername_Object = MibTableColumn
adminHistoryUsername = _AdminHistoryUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 2),
    _AdminHistoryUsername_Type()
)
adminHistoryUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminHistoryUsername.setStatus("current")
_AdminHistoryIPAddress_Type = DisplayString
_AdminHistoryIPAddress_Object = MibTableColumn
adminHistoryIPAddress = _AdminHistoryIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 3),
    _AdminHistoryIPAddress_Type()
)
adminHistoryIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminHistoryIPAddress.setStatus("current")


class _AdminHistoryInterface_Type(Integer32):
    """Custom type adminHistoryInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("console", 0),
          ("telnet", 1),
          ("ssh", 2),
          ("https", 3))
    )


_AdminHistoryInterface_Type.__name__ = "Integer32"
_AdminHistoryInterface_Object = MibTableColumn
adminHistoryInterface = _AdminHistoryInterface_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 4),
    _AdminHistoryInterface_Type()
)
adminHistoryInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminHistoryInterface.setStatus("current")
_AdminHistoryLoginTime_Type = DisplayString
_AdminHistoryLoginTime_Object = MibTableColumn
adminHistoryLoginTime = _AdminHistoryLoginTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 5),
    _AdminHistoryLoginTime_Type()
)
adminHistoryLoginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminHistoryLoginTime.setStatus("current")
_AdminHistoryLogoutTime_Type = DisplayString
_AdminHistoryLogoutTime_Object = MibTableColumn
adminHistoryLogoutTime = _AdminHistoryLogoutTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 6),
    _AdminHistoryLogoutTime_Type()
)
adminHistoryLogoutTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminHistoryLogoutTime.setStatus("current")
_AdminPrivLevelTable_Object = MibTable
adminPrivLevelTable = _AdminPrivLevelTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6)
)
if mibBuilder.loadTexts:
    adminPrivLevelTable.setStatus("current")
_AdminPrivLevelEntry_Object = MibTableRow
adminPrivLevelEntry = _AdminPrivLevelEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1)
)
adminPrivLevelEntry.setIndexNames(
    (0, "XIRRUS-MIB", "adminPrivLevelNumber"),
)
if mibBuilder.loadTexts:
    adminPrivLevelEntry.setStatus("current")
_AdminPrivLevelNumber_Type = Integer32
_AdminPrivLevelNumber_Object = MibTableColumn
adminPrivLevelNumber = _AdminPrivLevelNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1, 1),
    _AdminPrivLevelNumber_Type()
)
adminPrivLevelNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminPrivLevelNumber.setStatus("current")


class _AdminPrivLevelName_Type(DisplayString):
    """Custom type adminPrivLevelName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_AdminPrivLevelName_Type.__name__ = "DisplayString"
_AdminPrivLevelName_Object = MibTableColumn
adminPrivLevelName = _AdminPrivLevelName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1, 2),
    _AdminPrivLevelName_Type()
)
adminPrivLevelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminPrivLevelName.setStatus("current")
_AdminPrivSectionTable_Object = MibTable
adminPrivSectionTable = _AdminPrivSectionTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7)
)
if mibBuilder.loadTexts:
    adminPrivSectionTable.setStatus("current")
_AdminPrivSectionEntry_Object = MibTableRow
adminPrivSectionEntry = _AdminPrivSectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1)
)
adminPrivSectionEntry.setIndexNames(
    (0, "XIRRUS-MIB", "adminPrivSectionIndex"),
)
if mibBuilder.loadTexts:
    adminPrivSectionEntry.setStatus("current")
_AdminPrivSectionIndex_Type = Integer32
_AdminPrivSectionIndex_Object = MibTableColumn
adminPrivSectionIndex = _AdminPrivSectionIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 1),
    _AdminPrivSectionIndex_Type()
)
adminPrivSectionIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    adminPrivSectionIndex.setStatus("current")
_AdminPrivSectionName_Type = DisplayString
_AdminPrivSectionName_Object = MibTableColumn
adminPrivSectionName = _AdminPrivSectionName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 2),
    _AdminPrivSectionName_Type()
)
adminPrivSectionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminPrivSectionName.setStatus("current")


class _AdminPrivSectionLevel_Type(Integer32):
    """Custom type adminPrivSectionLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AdminPrivSectionLevel_Type.__name__ = "Integer32"
_AdminPrivSectionLevel_Object = MibTableColumn
adminPrivSectionLevel = _AdminPrivSectionLevel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 3),
    _AdminPrivSectionLevel_Type()
)
adminPrivSectionLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminPrivSectionLevel.setStatus("current")
_Cdp_ObjectIdentity = ObjectIdentity
cdp = _Cdp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5)
)
_CdpInfoTable_Object = MibTable
cdpInfoTable = _CdpInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1)
)
if mibBuilder.loadTexts:
    cdpInfoTable.setStatus("current")
_CdpInfoEntry_Object = MibTableRow
cdpInfoEntry = _CdpInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1)
)
cdpInfoEntry.setIndexNames(
    (0, "XIRRUS-MIB", "cdpInfoIndex"),
)
if mibBuilder.loadTexts:
    cdpInfoEntry.setStatus("current")
_CdpInfoIndex_Type = Integer32
_CdpInfoIndex_Object = MibTableColumn
cdpInfoIndex = _CdpInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 1),
    _CdpInfoIndex_Type()
)
cdpInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cdpInfoIndex.setStatus("current")
_CdpInfoHostname_Type = DisplayString
_CdpInfoHostname_Object = MibTableColumn
cdpInfoHostname = _CdpInfoHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 2),
    _CdpInfoHostname_Type()
)
cdpInfoHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoHostname.setStatus("current")
_CdpInfoIPAddress_Type = DisplayString
_CdpInfoIPAddress_Object = MibTableColumn
cdpInfoIPAddress = _CdpInfoIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 3),
    _CdpInfoIPAddress_Type()
)
cdpInfoIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoIPAddress.setStatus("current")
_CdpInfoModel_Type = DisplayString
_CdpInfoModel_Object = MibTableColumn
cdpInfoModel = _CdpInfoModel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 4),
    _CdpInfoModel_Type()
)
cdpInfoModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoModel.setStatus("current")
_CdpInfoInterface_Type = DisplayString
_CdpInfoInterface_Object = MibTableColumn
cdpInfoInterface = _CdpInfoInterface_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 5),
    _CdpInfoInterface_Type()
)
cdpInfoInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoInterface.setStatus("current")
_CdpInfoNativeVlan_Type = DisplayString
_CdpInfoNativeVlan_Object = MibTableColumn
cdpInfoNativeVlan = _CdpInfoNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 6),
    _CdpInfoNativeVlan_Type()
)
cdpInfoNativeVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoNativeVlan.setStatus("current")
_CdpInfoCapabilities_Type = DisplayString
_CdpInfoCapabilities_Object = MibTableColumn
cdpInfoCapabilities = _CdpInfoCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 7),
    _CdpInfoCapabilities_Type()
)
cdpInfoCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoCapabilities.setStatus("current")
_CdpInfoSoftware_Type = DisplayString
_CdpInfoSoftware_Object = MibTableColumn
cdpInfoSoftware = _CdpInfoSoftware_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 8),
    _CdpInfoSoftware_Type()
)
cdpInfoSoftware.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cdpInfoSoftware.setStatus("current")


class _CdpEnable_Type(Integer32):
    """Custom type cdpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CdpEnable_Type.__name__ = "Integer32"
_CdpEnable_Object = MibScalar
cdpEnable = _CdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 2),
    _CdpEnable_Type()
)
cdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cdpEnable.setStatus("current")


class _CdpInterval_Type(Integer32):
    """Custom type cdpInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
    )


_CdpInterval_Type.__name__ = "Integer32"
_CdpInterval_Object = MibScalar
cdpInterval = _CdpInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 3),
    _CdpInterval_Type()
)
cdpInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cdpInterval.setStatus("current")


class _CdpHoldTime_Type(Integer32):
    """Custom type cdpHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 255),
    )


_CdpHoldTime_Type.__name__ = "Integer32"
_CdpHoldTime_Object = MibScalar
cdpHoldTime = _CdpHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 4),
    _CdpHoldTime_Type()
)
cdpHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cdpHoldTime.setStatus("current")
_DateTime_ObjectIdentity = ObjectIdentity
dateTime = _DateTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6)
)


class _DateTimeSet_Type(DisplayString):
    """Custom type dateTimeSet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_DateTimeSet_Type.__name__ = "DisplayString"
_DateTimeSet_Object = MibScalar
dateTimeSet = _DateTimeSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 1),
    _DateTimeSet_Type()
)
dateTimeSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dateTimeSet.setStatus("current")


class _DateTimeZoneHours_Type(Integer32):
    """Custom type dateTimeZoneHours based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-12, 12),
    )


_DateTimeZoneHours_Type.__name__ = "Integer32"
_DateTimeZoneHours_Object = MibScalar
dateTimeZoneHours = _DateTimeZoneHours_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 2),
    _DateTimeZoneHours_Type()
)
dateTimeZoneHours.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dateTimeZoneHours.setStatus("current")


class _DateTimeZoneMins_Type(Integer32):
    """Custom type dateTimeZoneMins based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_DateTimeZoneMins_Type.__name__ = "Integer32"
_DateTimeZoneMins_Object = MibScalar
dateTimeZoneMins = _DateTimeZoneMins_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 3),
    _DateTimeZoneMins_Type()
)
dateTimeZoneMins.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dateTimeZoneMins.setStatus("current")


class _DateTimeDSTAdjust_Type(Integer32):
    """Custom type dateTimeDSTAdjust based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DateTimeDSTAdjust_Type.__name__ = "Integer32"
_DateTimeDSTAdjust_Object = MibScalar
dateTimeDSTAdjust = _DateTimeDSTAdjust_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 4),
    _DateTimeDSTAdjust_Type()
)
dateTimeDSTAdjust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dateTimeDSTAdjust.setStatus("current")
_Ntp_ObjectIdentity = ObjectIdentity
ntp = _Ntp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5)
)


class _NtpEnable_Type(Integer32):
    """Custom type ntpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NtpEnable_Type.__name__ = "Integer32"
_NtpEnable_Object = MibScalar
ntpEnable = _NtpEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 1),
    _NtpEnable_Type()
)
ntpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpEnable.setStatus("current")


class _NtpPrimary_Type(DisplayString):
    """Custom type ntpPrimary based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_NtpPrimary_Type.__name__ = "DisplayString"
_NtpPrimary_Object = MibScalar
ntpPrimary = _NtpPrimary_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 2),
    _NtpPrimary_Type()
)
ntpPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpPrimary.setStatus("current")


class _NtpSecondary_Type(DisplayString):
    """Custom type ntpSecondary based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_NtpSecondary_Type.__name__ = "DisplayString"
_NtpSecondary_Object = MibScalar
ntpSecondary = _NtpSecondary_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 3),
    _NtpSecondary_Type()
)
ntpSecondary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSecondary.setStatus("current")


class _NtpPrimaryAuthType_Type(Integer32):
    """Custom type ntpPrimaryAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("md5", 1),
          ("sha1", 2))
    )


_NtpPrimaryAuthType_Type.__name__ = "Integer32"
_NtpPrimaryAuthType_Object = MibScalar
ntpPrimaryAuthType = _NtpPrimaryAuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 4),
    _NtpPrimaryAuthType_Type()
)
ntpPrimaryAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpPrimaryAuthType.setStatus("current")


class _NtpPrimaryAuthKeyID_Type(Integer32):
    """Custom type ntpPrimaryAuthKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_NtpPrimaryAuthKeyID_Type.__name__ = "Integer32"
_NtpPrimaryAuthKeyID_Object = MibScalar
ntpPrimaryAuthKeyID = _NtpPrimaryAuthKeyID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 5),
    _NtpPrimaryAuthKeyID_Type()
)
ntpPrimaryAuthKeyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpPrimaryAuthKeyID.setStatus("current")


class _NtpPrimaryAuthKey_Type(DisplayString):
    """Custom type ntpPrimaryAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NtpPrimaryAuthKey_Type.__name__ = "DisplayString"
_NtpPrimaryAuthKey_Object = MibScalar
ntpPrimaryAuthKey = _NtpPrimaryAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 6),
    _NtpPrimaryAuthKey_Type()
)
ntpPrimaryAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpPrimaryAuthKey.setStatus("current")


class _NtpPrimaryAuthKeyEnc_Type(DisplayString):
    """Custom type ntpPrimaryAuthKeyEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_NtpPrimaryAuthKeyEnc_Type.__name__ = "DisplayString"
_NtpPrimaryAuthKeyEnc_Object = MibScalar
ntpPrimaryAuthKeyEnc = _NtpPrimaryAuthKeyEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 7),
    _NtpPrimaryAuthKeyEnc_Type()
)
ntpPrimaryAuthKeyEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpPrimaryAuthKeyEnc.setStatus("current")


class _NtpSecondaryAuthType_Type(Integer32):
    """Custom type ntpSecondaryAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("md5", 1),
          ("sha1", 2))
    )


_NtpSecondaryAuthType_Type.__name__ = "Integer32"
_NtpSecondaryAuthType_Object = MibScalar
ntpSecondaryAuthType = _NtpSecondaryAuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 8),
    _NtpSecondaryAuthType_Type()
)
ntpSecondaryAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSecondaryAuthType.setStatus("current")


class _NtpSecondaryAuthKeyID_Type(Integer32):
    """Custom type ntpSecondaryAuthKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_NtpSecondaryAuthKeyID_Type.__name__ = "Integer32"
_NtpSecondaryAuthKeyID_Object = MibScalar
ntpSecondaryAuthKeyID = _NtpSecondaryAuthKeyID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 9),
    _NtpSecondaryAuthKeyID_Type()
)
ntpSecondaryAuthKeyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSecondaryAuthKeyID.setStatus("current")


class _NtpSecondaryAuthKey_Type(DisplayString):
    """Custom type ntpSecondaryAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NtpSecondaryAuthKey_Type.__name__ = "DisplayString"
_NtpSecondaryAuthKey_Object = MibScalar
ntpSecondaryAuthKey = _NtpSecondaryAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 10),
    _NtpSecondaryAuthKey_Type()
)
ntpSecondaryAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSecondaryAuthKey.setStatus("current")


class _NtpSecondaryAuthKeyEnc_Type(DisplayString):
    """Custom type ntpSecondaryAuthKeyEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_NtpSecondaryAuthKeyEnc_Type.__name__ = "DisplayString"
_NtpSecondaryAuthKeyEnc_Object = MibScalar
ntpSecondaryAuthKeyEnc = _NtpSecondaryAuthKeyEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 11),
    _NtpSecondaryAuthKeyEnc_Type()
)
ntpSecondaryAuthKeyEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSecondaryAuthKeyEnc.setStatus("current")
_Dhcp_ObjectIdentity = ObjectIdentity
dhcp = _Dhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8)
)


class _DhcpPoolTableReset_Type(Integer32):
    """Custom type dhcpPoolTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_DhcpPoolTableReset_Type.__name__ = "Integer32"
_DhcpPoolTableReset_Object = MibScalar
dhcpPoolTableReset = _DhcpPoolTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 1),
    _DhcpPoolTableReset_Type()
)
dhcpPoolTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolTableReset.setStatus("current")
_DhcpPoolTable_Object = MibTable
dhcpPoolTable = _DhcpPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2)
)
if mibBuilder.loadTexts:
    dhcpPoolTable.setStatus("current")
_DhcpPoolEntry_Object = MibTableRow
dhcpPoolEntry = _DhcpPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1)
)
dhcpPoolEntry.setIndexNames(
    (0, "XIRRUS-MIB", "dhcpPoolIndex"),
)
if mibBuilder.loadTexts:
    dhcpPoolEntry.setStatus("current")
_DhcpPoolIndex_Type = Integer32
_DhcpPoolIndex_Object = MibTableColumn
dhcpPoolIndex = _DhcpPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 1),
    _DhcpPoolIndex_Type()
)
dhcpPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpPoolIndex.setStatus("current")


class _DhcpPoolName_Type(DisplayString):
    """Custom type dhcpPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_DhcpPoolName_Type.__name__ = "DisplayString"
_DhcpPoolName_Object = MibTableColumn
dhcpPoolName = _DhcpPoolName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 2),
    _DhcpPoolName_Type()
)
dhcpPoolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolName.setStatus("current")


class _DhcpPoolEnable_Type(Integer32):
    """Custom type dhcpPoolEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpPoolEnable_Type.__name__ = "Integer32"
_DhcpPoolEnable_Object = MibTableColumn
dhcpPoolEnable = _DhcpPoolEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 3),
    _DhcpPoolEnable_Type()
)
dhcpPoolEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolEnable.setStatus("current")
_DhcpPoolRangeStartIP_Type = IpAddress
_DhcpPoolRangeStartIP_Object = MibTableColumn
dhcpPoolRangeStartIP = _DhcpPoolRangeStartIP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 4),
    _DhcpPoolRangeStartIP_Type()
)
dhcpPoolRangeStartIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolRangeStartIP.setStatus("current")
_DhcpPoolRangeEndIP_Type = IpAddress
_DhcpPoolRangeEndIP_Object = MibTableColumn
dhcpPoolRangeEndIP = _DhcpPoolRangeEndIP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 5),
    _DhcpPoolRangeEndIP_Type()
)
dhcpPoolRangeEndIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolRangeEndIP.setStatus("current")


class _DhcpPoolDefaultLease_Type(Integer32):
    """Custom type dhcpPoolDefaultLease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 3000000),
    )


_DhcpPoolDefaultLease_Type.__name__ = "Integer32"
_DhcpPoolDefaultLease_Object = MibTableColumn
dhcpPoolDefaultLease = _DhcpPoolDefaultLease_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 6),
    _DhcpPoolDefaultLease_Type()
)
dhcpPoolDefaultLease.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolDefaultLease.setStatus("current")


class _DhcpPoolMaxLease_Type(Integer32):
    """Custom type dhcpPoolMaxLease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 3000000),
    )


_DhcpPoolMaxLease_Type.__name__ = "Integer32"
_DhcpPoolMaxLease_Object = MibTableColumn
dhcpPoolMaxLease = _DhcpPoolMaxLease_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 7),
    _DhcpPoolMaxLease_Type()
)
dhcpPoolMaxLease.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolMaxLease.setStatus("current")
_DhcpPoolMask_Type = IpAddress
_DhcpPoolMask_Object = MibTableColumn
dhcpPoolMask = _DhcpPoolMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 8),
    _DhcpPoolMask_Type()
)
dhcpPoolMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolMask.setStatus("current")
_DhcpPoolGateway_Type = IpAddress
_DhcpPoolGateway_Object = MibTableColumn
dhcpPoolGateway = _DhcpPoolGateway_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 9),
    _DhcpPoolGateway_Type()
)
dhcpPoolGateway.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolGateway.setStatus("current")


class _DhcpPoolDNSDomain_Type(DisplayString):
    """Custom type dhcpPoolDNSDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_DhcpPoolDNSDomain_Type.__name__ = "DisplayString"
_DhcpPoolDNSDomain_Object = MibTableColumn
dhcpPoolDNSDomain = _DhcpPoolDNSDomain_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 10),
    _DhcpPoolDNSDomain_Type()
)
dhcpPoolDNSDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolDNSDomain.setStatus("current")
_DhcpPoolDNSServer1_Type = IpAddress
_DhcpPoolDNSServer1_Object = MibTableColumn
dhcpPoolDNSServer1 = _DhcpPoolDNSServer1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 11),
    _DhcpPoolDNSServer1_Type()
)
dhcpPoolDNSServer1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolDNSServer1.setStatus("current")
_DhcpPoolDNSServer2_Type = IpAddress
_DhcpPoolDNSServer2_Object = MibTableColumn
dhcpPoolDNSServer2 = _DhcpPoolDNSServer2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 12),
    _DhcpPoolDNSServer2_Type()
)
dhcpPoolDNSServer2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolDNSServer2.setStatus("current")
_DhcpPoolDNSServer3_Type = IpAddress
_DhcpPoolDNSServer3_Object = MibTableColumn
dhcpPoolDNSServer3 = _DhcpPoolDNSServer3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 13),
    _DhcpPoolDNSServer3_Type()
)
dhcpPoolDNSServer3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolDNSServer3.setStatus("current")


class _DhcpPoolNAT_Type(Integer32):
    """Custom type dhcpPoolNAT based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpPoolNAT_Type.__name__ = "Integer32"
_DhcpPoolNAT_Object = MibTableColumn
dhcpPoolNAT = _DhcpPoolNAT_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 14),
    _DhcpPoolNAT_Type()
)
dhcpPoolNAT.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolNAT.setStatus("current")
_DhcpPoolRowStatus_Type = RowStatus
_DhcpPoolRowStatus_Object = MibTableColumn
dhcpPoolRowStatus = _DhcpPoolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 15),
    _DhcpPoolRowStatus_Type()
)
dhcpPoolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpPoolRowStatus.setStatus("current")
_Dns_ObjectIdentity = ObjectIdentity
dns = _Dns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10)
)


class _DnsDomain_Type(DisplayString):
    """Custom type dnsDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_DnsDomain_Type.__name__ = "DisplayString"
_DnsDomain_Object = MibScalar
dnsDomain = _DnsDomain_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 1),
    _DnsDomain_Type()
)
dnsDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsDomain.setStatus("current")
_DnsSrv1_Type = IpAddress
_DnsSrv1_Object = MibScalar
dnsSrv1 = _DnsSrv1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 2),
    _DnsSrv1_Type()
)
dnsSrv1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsSrv1.setStatus("current")
_DnsSrv2_Type = IpAddress
_DnsSrv2_Object = MibScalar
dnsSrv2 = _DnsSrv2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 3),
    _DnsSrv2_Type()
)
dnsSrv2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsSrv2.setStatus("current")
_DnsSrv3_Type = IpAddress
_DnsSrv3_Object = MibScalar
dnsSrv3 = _DnsSrv3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 4),
    _DnsSrv3_Type()
)
dnsSrv3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsSrv3.setStatus("current")


class _DnsUseDhcp_Type(Integer32):
    """Custom type dnsUseDhcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DnsUseDhcp_Type.__name__ = "Integer32"
_DnsUseDhcp_Object = MibScalar
dnsUseDhcp = _DnsUseDhcp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 5),
    _DnsUseDhcp_Type()
)
dnsUseDhcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsUseDhcp.setStatus("current")
_Filter_ObjectIdentity = ObjectIdentity
filter = _Filter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11)
)


class _FilterMoveDown_Type(DisplayString):
    """Custom type filterMoveDown based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FilterMoveDown_Type.__name__ = "DisplayString"
_FilterMoveDown_Object = MibScalar
filterMoveDown = _FilterMoveDown_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 1),
    _FilterMoveDown_Type()
)
filterMoveDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterMoveDown.setStatus("current")


class _FilterMoveUp_Type(DisplayString):
    """Custom type filterMoveUp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FilterMoveUp_Type.__name__ = "DisplayString"
_FilterMoveUp_Object = MibScalar
filterMoveUp = _FilterMoveUp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 2),
    _FilterMoveUp_Type()
)
filterMoveUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterMoveUp.setStatus("current")


class _FilterTableReset_Type(Integer32):
    """Custom type filterTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FilterTableReset_Type.__name__ = "Integer32"
_FilterTableReset_Object = MibScalar
filterTableReset = _FilterTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 3),
    _FilterTableReset_Type()
)
filterTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterTableReset.setStatus("current")
_FilterTable_Object = MibTable
filterTable = _FilterTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4)
)
if mibBuilder.loadTexts:
    filterTable.setStatus("current")
_FilterEntry_Object = MibTableRow
filterEntry = _FilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1)
)
filterEntry.setIndexNames(
    (0, "XIRRUS-MIB", "filterIndex"),
)
if mibBuilder.loadTexts:
    filterEntry.setStatus("current")
_FilterIndex_Type = Integer32
_FilterIndex_Object = MibTableColumn
filterIndex = _FilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 1),
    _FilterIndex_Type()
)
filterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterIndex.setStatus("current")


class _FilterName_Type(DisplayString):
    """Custom type filterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FilterName_Type.__name__ = "DisplayString"
_FilterName_Object = MibTableColumn
filterName = _FilterName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 2),
    _FilterName_Type()
)
filterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterName.setStatus("current")


class _FilterEnable_Type(Integer32):
    """Custom type filterEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FilterEnable_Type.__name__ = "Integer32"
_FilterEnable_Object = MibTableColumn
filterEnable = _FilterEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 3),
    _FilterEnable_Type()
)
filterEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterEnable.setStatus("current")


class _FilterType_Type(Integer32):
    """Custom type filterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_FilterType_Type.__name__ = "Integer32"
_FilterType_Object = MibTableColumn
filterType = _FilterType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 4),
    _FilterType_Type()
)
filterType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterType.setStatus("current")


class _FilterProtocol_Type(Integer32):
    """Custom type filterProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FilterProtocol_Type.__name__ = "Integer32"
_FilterProtocol_Object = MibTableColumn
filterProtocol = _FilterProtocol_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 5),
    _FilterProtocol_Type()
)
filterProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterProtocol.setStatus("current")


class _FilterPort_Type(Integer32):
    """Custom type filterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FilterPort_Type.__name__ = "Integer32"
_FilterPort_Object = MibTableColumn
filterPort = _FilterPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 6),
    _FilterPort_Type()
)
filterPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterPort.setStatus("current")


class _FilterSrcType_Type(Integer32):
    """Custom type filterSrcType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("ssid", 1),
          ("vlan", 2),
          ("ip", 3),
          ("mac", 4),
          ("interface", 5),
          ("group", 6))
    )


_FilterSrcType_Type.__name__ = "Integer32"
_FilterSrcType_Object = MibTableColumn
filterSrcType = _FilterSrcType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 7),
    _FilterSrcType_Type()
)
filterSrcType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcType.setStatus("current")


class _FilterSrcInvertSense_Type(Integer32):
    """Custom type filterSrcInvertSense based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_FilterSrcInvertSense_Type.__name__ = "Integer32"
_FilterSrcInvertSense_Object = MibTableColumn
filterSrcInvertSense = _FilterSrcInvertSense_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 8),
    _FilterSrcInvertSense_Type()
)
filterSrcInvertSense.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcInvertSense.setStatus("current")


class _FilterSrcSsid_Type(DisplayString):
    """Custom type filterSrcSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_FilterSrcSsid_Type.__name__ = "DisplayString"
_FilterSrcSsid_Object = MibTableColumn
filterSrcSsid = _FilterSrcSsid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 9),
    _FilterSrcSsid_Type()
)
filterSrcSsid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcSsid.setStatus("current")


class _FilterSrcVlan_Type(Integer32):
    """Custom type filterSrcVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FilterSrcVlan_Type.__name__ = "Integer32"
_FilterSrcVlan_Object = MibTableColumn
filterSrcVlan = _FilterSrcVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 10),
    _FilterSrcVlan_Type()
)
filterSrcVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcVlan.setStatus("current")
_FilterSrcIPAddress_Type = IpAddress
_FilterSrcIPAddress_Object = MibTableColumn
filterSrcIPAddress = _FilterSrcIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 11),
    _FilterSrcIPAddress_Type()
)
filterSrcIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcIPAddress.setStatus("current")
_FilterSrcIPAddressMask_Type = IpAddress
_FilterSrcIPAddressMask_Object = MibTableColumn
filterSrcIPAddressMask = _FilterSrcIPAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 12),
    _FilterSrcIPAddressMask_Type()
)
filterSrcIPAddressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcIPAddressMask.setStatus("current")


class _FilterSrcMacAddress_Type(DisplayString):
    """Custom type filterSrcMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_FilterSrcMacAddress_Type.__name__ = "DisplayString"
_FilterSrcMacAddress_Object = MibTableColumn
filterSrcMacAddress = _FilterSrcMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 13),
    _FilterSrcMacAddress_Type()
)
filterSrcMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcMacAddress.setStatus("current")


class _FilterSrcMacAddressMask_Type(DisplayString):
    """Custom type filterSrcMacAddressMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_FilterSrcMacAddressMask_Type.__name__ = "DisplayString"
_FilterSrcMacAddressMask_Object = MibTableColumn
filterSrcMacAddressMask = _FilterSrcMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 14),
    _FilterSrcMacAddressMask_Type()
)
filterSrcMacAddressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcMacAddressMask.setStatus("current")


class _FilterSrcIface_Type(Integer32):
    """Custom type filterSrcIface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("iap", 0),
          ("wds-client-1", 1),
          ("wds-client-2", 2),
          ("wds-client-3", 3),
          ("wds-client-4", 4),
          ("wds-all", 5),
          ("gig", 6),
          ("wds-host-1", 7),
          ("wds-host-2", 8),
          ("wds-host-3", 9),
          ("wds-host-4", 10),
          ("tunnel", 11))
    )


_FilterSrcIface_Type.__name__ = "Integer32"
_FilterSrcIface_Object = MibTableColumn
filterSrcIface = _FilterSrcIface_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 15),
    _FilterSrcIface_Type()
)
filterSrcIface.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcIface.setStatus("current")


class _FilterDstType_Type(Integer32):
    """Custom type filterDstType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("ssid", 1),
          ("vlan", 2),
          ("ip", 3),
          ("mac", 4),
          ("interface", 5),
          ("group", 6))
    )


_FilterDstType_Type.__name__ = "Integer32"
_FilterDstType_Object = MibTableColumn
filterDstType = _FilterDstType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 16),
    _FilterDstType_Type()
)
filterDstType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstType.setStatus("current")


class _FilterDstInvertSense_Type(Integer32):
    """Custom type filterDstInvertSense based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_FilterDstInvertSense_Type.__name__ = "Integer32"
_FilterDstInvertSense_Object = MibTableColumn
filterDstInvertSense = _FilterDstInvertSense_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 17),
    _FilterDstInvertSense_Type()
)
filterDstInvertSense.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstInvertSense.setStatus("current")


class _FilterDstSsid_Type(DisplayString):
    """Custom type filterDstSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_FilterDstSsid_Type.__name__ = "DisplayString"
_FilterDstSsid_Object = MibTableColumn
filterDstSsid = _FilterDstSsid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 18),
    _FilterDstSsid_Type()
)
filterDstSsid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstSsid.setStatus("current")


class _FilterDstVlan_Type(Integer32):
    """Custom type filterDstVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FilterDstVlan_Type.__name__ = "Integer32"
_FilterDstVlan_Object = MibTableColumn
filterDstVlan = _FilterDstVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 19),
    _FilterDstVlan_Type()
)
filterDstVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstVlan.setStatus("current")
_FilterDstIPAddress_Type = IpAddress
_FilterDstIPAddress_Object = MibTableColumn
filterDstIPAddress = _FilterDstIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 20),
    _FilterDstIPAddress_Type()
)
filterDstIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstIPAddress.setStatus("current")
_FilterDstIPAddressMask_Type = IpAddress
_FilterDstIPAddressMask_Object = MibTableColumn
filterDstIPAddressMask = _FilterDstIPAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 21),
    _FilterDstIPAddressMask_Type()
)
filterDstIPAddressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstIPAddressMask.setStatus("current")


class _FilterDstMacAddress_Type(DisplayString):
    """Custom type filterDstMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_FilterDstMacAddress_Type.__name__ = "DisplayString"
_FilterDstMacAddress_Object = MibTableColumn
filterDstMacAddress = _FilterDstMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 22),
    _FilterDstMacAddress_Type()
)
filterDstMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstMacAddress.setStatus("current")


class _FilterDstMacAddressMask_Type(DisplayString):
    """Custom type filterDstMacAddressMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_FilterDstMacAddressMask_Type.__name__ = "DisplayString"
_FilterDstMacAddressMask_Object = MibTableColumn
filterDstMacAddressMask = _FilterDstMacAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 23),
    _FilterDstMacAddressMask_Type()
)
filterDstMacAddressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstMacAddressMask.setStatus("current")


class _FilterDstIface_Type(Integer32):
    """Custom type filterDstIface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("iap", 0),
          ("wds-client-1", 1),
          ("wds-client-2", 2),
          ("wds-client-3", 3),
          ("wds-client-4", 4),
          ("wds-all", 5),
          ("gig", 6),
          ("wds-host-1", 7),
          ("wds-host-2", 8),
          ("wds-host-3", 9),
          ("wds-host-4", 10),
          ("tunnel", 11))
    )


_FilterDstIface_Type.__name__ = "Integer32"
_FilterDstIface_Object = MibTableColumn
filterDstIface = _FilterDstIface_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 24),
    _FilterDstIface_Type()
)
filterDstIface.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstIface.setStatus("current")


class _FilterSetQOS_Type(Integer32):
    """Custom type filterSetQOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 3),
    )


_FilterSetQOS_Type.__name__ = "Integer32"
_FilterSetQOS_Object = MibTableColumn
filterSetQOS = _FilterSetQOS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 25),
    _FilterSetQOS_Type()
)
filterSetQOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSetQOS.setStatus("current")


class _FilterSetVlan_Type(Integer32):
    """Custom type filterSetVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 4095),
    )


_FilterSetVlan_Type.__name__ = "Integer32"
_FilterSetVlan_Object = MibTableColumn
filterSetVlan = _FilterSetVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 26),
    _FilterSetVlan_Type()
)
filterSetVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSetVlan.setStatus("current")


class _FilterPriority_Type(Integer32):
    """Custom type filterPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 50),
    )


_FilterPriority_Type.__name__ = "Integer32"
_FilterPriority_Object = MibTableColumn
filterPriority = _FilterPriority_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 27),
    _FilterPriority_Type()
)
filterPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterPriority.setStatus("current")
_FilterRowStatus_Type = RowStatus
_FilterRowStatus_Object = MibTableColumn
filterRowStatus = _FilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 28),
    _FilterRowStatus_Type()
)
filterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterRowStatus.setStatus("current")


class _FilterList_Type(DisplayString):
    """Custom type filterList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FilterList_Type.__name__ = "DisplayString"
_FilterList_Object = MibTableColumn
filterList = _FilterList_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 29),
    _FilterList_Type()
)
filterList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterList.setStatus("current")


class _FilterPortRange_Type(Integer32):
    """Custom type filterPortRange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FilterPortRange_Type.__name__ = "Integer32"
_FilterPortRange_Object = MibTableColumn
filterPortRange = _FilterPortRange_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 30),
    _FilterPortRange_Type()
)
filterPortRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterPortRange.setStatus("current")


class _FilterSrcGroup_Type(DisplayString):
    """Custom type filterSrcGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_FilterSrcGroup_Type.__name__ = "DisplayString"
_FilterSrcGroup_Object = MibTableColumn
filterSrcGroup = _FilterSrcGroup_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 31),
    _FilterSrcGroup_Type()
)
filterSrcGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSrcGroup.setStatus("current")


class _FilterDstGroup_Type(DisplayString):
    """Custom type filterDstGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_FilterDstGroup_Type.__name__ = "DisplayString"
_FilterDstGroup_Object = MibTableColumn
filterDstGroup = _FilterDstGroup_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 32),
    _FilterDstGroup_Type()
)
filterDstGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDstGroup.setStatus("current")


class _FilterLog_Type(Integer32):
    """Custom type filterLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FilterLog_Type.__name__ = "Integer32"
_FilterLog_Object = MibTableColumn
filterLog = _FilterLog_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 33),
    _FilterLog_Type()
)
filterLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterLog.setStatus("current")
_FilterPackets_Type = Counter64
_FilterPackets_Object = MibTableColumn
filterPackets = _FilterPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 34),
    _FilterPackets_Type()
)
filterPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterPackets.setStatus("current")
_FilterBytes_Type = Counter64
_FilterBytes_Object = MibTableColumn
filterBytes = _FilterBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 35),
    _FilterBytes_Type()
)
filterBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterBytes.setStatus("current")


class _FilterApplication_Type(DisplayString):
    """Custom type filterApplication based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_FilterApplication_Type.__name__ = "DisplayString"
_FilterApplication_Object = MibTableColumn
filterApplication = _FilterApplication_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 36),
    _FilterApplication_Type()
)
filterApplication.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterApplication.setStatus("current")


class _FilterLayer_Type(Integer32):
    """Custom type filterLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("layer-2", 0),
          ("layer-3", 1))
    )


_FilterLayer_Type.__name__ = "Integer32"
_FilterLayer_Object = MibTableColumn
filterLayer = _FilterLayer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 37),
    _FilterLayer_Type()
)
filterLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterLayer.setStatus("current")


class _FilterSetDSCP_Type(Integer32):
    """Custom type filterSetDSCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 63),
    )


_FilterSetDSCP_Type.__name__ = "Integer32"
_FilterSetDSCP_Object = MibTableColumn
filterSetDSCP = _FilterSetDSCP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 38),
    _FilterSetDSCP_Type()
)
filterSetDSCP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSetDSCP.setStatus("current")


class _FilterTrafficLimit_Type(Integer32):
    """Custom type filterTrafficLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 4000000),
    )


_FilterTrafficLimit_Type.__name__ = "Integer32"
_FilterTrafficLimit_Object = MibTableColumn
filterTrafficLimit = _FilterTrafficLimit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 39),
    _FilterTrafficLimit_Type()
)
filterTrafficLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterTrafficLimit.setStatus("current")


class _FilterTrafficLimitType_Type(Integer32):
    """Custom type filterTrafficLimitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("all-pps", 1),
          ("all-kbps", 2),
          ("sta-pps", 3),
          ("sta-kbps", 4))
    )


_FilterTrafficLimitType_Type.__name__ = "Integer32"
_FilterTrafficLimitType_Object = MibTableColumn
filterTrafficLimitType = _FilterTrafficLimitType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 40),
    _FilterTrafficLimitType_Type()
)
filterTrafficLimitType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterTrafficLimitType.setStatus("current")


class _FilterTimeOn_Type(Integer32):
    """Custom type filterTimeOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_FilterTimeOn_Type.__name__ = "Integer32"
_FilterTimeOn_Object = MibTableColumn
filterTimeOn = _FilterTimeOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 41),
    _FilterTimeOn_Type()
)
filterTimeOn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterTimeOn.setStatus("current")


class _FilterTimeOff_Type(Integer32):
    """Custom type filterTimeOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_FilterTimeOff_Type.__name__ = "Integer32"
_FilterTimeOff_Object = MibTableColumn
filterTimeOff = _FilterTimeOff_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 42),
    _FilterTimeOff_Type()
)
filterTimeOff.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterTimeOff.setStatus("current")


class _FilterDays_Type(DisplayString):
    """Custom type filterDays based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_FilterDays_Type.__name__ = "DisplayString"
_FilterDays_Object = MibTableColumn
filterDays = _FilterDays_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 43),
    _FilterDays_Type()
)
filterDays.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterDays.setStatus("current")


class _FilterSetIP_Type(DisplayString):
    """Custom type filterSetIP based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_FilterSetIP_Type.__name__ = "DisplayString"
_FilterSetIP_Object = MibTableColumn
filterSetIP = _FilterSetIP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 44),
    _FilterSetIP_Type()
)
filterSetIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterSetIP.setStatus("current")
_FilterListTable_Object = MibTable
filterListTable = _FilterListTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5)
)
if mibBuilder.loadTexts:
    filterListTable.setStatus("current")
_FilterListEntry_Object = MibTableRow
filterListEntry = _FilterListEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1)
)
filterListEntry.setIndexNames(
    (0, "XIRRUS-MIB", "filterListIndex"),
)
if mibBuilder.loadTexts:
    filterListEntry.setStatus("current")
_FilterListIndex_Type = Integer32
_FilterListIndex_Object = MibTableColumn
filterListIndex = _FilterListIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 1),
    _FilterListIndex_Type()
)
filterListIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterListIndex.setStatus("current")


class _FilterListName_Type(DisplayString):
    """Custom type filterListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FilterListName_Type.__name__ = "DisplayString"
_FilterListName_Object = MibTableColumn
filterListName = _FilterListName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 2),
    _FilterListName_Type()
)
filterListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterListName.setStatus("current")


class _FilterListEnable_Type(Integer32):
    """Custom type filterListEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FilterListEnable_Type.__name__ = "Integer32"
_FilterListEnable_Object = MibTableColumn
filterListEnable = _FilterListEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 3),
    _FilterListEnable_Type()
)
filterListEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterListEnable.setStatus("current")
_FilterListLength_Type = Integer32
_FilterListLength_Object = MibTableColumn
filterListLength = _FilterListLength_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 4),
    _FilterListLength_Type()
)
filterListLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterListLength.setStatus("current")


class _FilterListReset_Type(Integer32):
    """Custom type filterListReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FilterListReset_Type.__name__ = "Integer32"
_FilterListReset_Object = MibTableColumn
filterListReset = _FilterListReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 5),
    _FilterListReset_Type()
)
filterListReset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterListReset.setStatus("current")
_FilterListRowStatus_Type = RowStatus
_FilterListRowStatus_Object = MibTableColumn
filterListRowStatus = _FilterListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 6),
    _FilterListRowStatus_Type()
)
filterListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterListRowStatus.setStatus("current")


class _FilterStateful_Type(Integer32):
    """Custom type filterStateful based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FilterStateful_Type.__name__ = "Integer32"
_FilterStateful_Object = MibScalar
filterStateful = _FilterStateful_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 6),
    _FilterStateful_Type()
)
filterStateful.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterStateful.setStatus("current")


class _FilterTrackApps_Type(Integer32):
    """Custom type filterTrackApps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FilterTrackApps_Type.__name__ = "Integer32"
_FilterTrackApps_Object = MibScalar
filterTrackApps = _FilterTrackApps_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 7),
    _FilterTrackApps_Type()
)
filterTrackApps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterTrackApps.setStatus("current")
_FilterAppTable_Object = MibTable
filterAppTable = _FilterAppTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8)
)
if mibBuilder.loadTexts:
    filterAppTable.setStatus("current")
_FilterAppEntry_Object = MibTableRow
filterAppEntry = _FilterAppEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1)
)
filterAppEntry.setIndexNames(
    (0, "XIRRUS-MIB", "filterAppIndex"),
)
if mibBuilder.loadTexts:
    filterAppEntry.setStatus("current")
_FilterAppIndex_Type = Integer32
_FilterAppIndex_Object = MibTableColumn
filterAppIndex = _FilterAppIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 1),
    _FilterAppIndex_Type()
)
filterAppIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterAppIndex.setStatus("current")
_FilterAppGuid_Type = DisplayString
_FilterAppGuid_Object = MibTableColumn
filterAppGuid = _FilterAppGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 2),
    _FilterAppGuid_Type()
)
filterAppGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterAppGuid.setStatus("current")
_FilterAppCategory_Type = DisplayString
_FilterAppCategory_Object = MibTableColumn
filterAppCategory = _FilterAppCategory_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 3),
    _FilterAppCategory_Type()
)
filterAppCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterAppCategory.setStatus("current")
_FilterAppDescription_Type = DisplayString
_FilterAppDescription_Object = MibTableColumn
filterAppDescription = _FilterAppDescription_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 4),
    _FilterAppDescription_Type()
)
filterAppDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterAppDescription.setStatus("current")
_FilterAppCatTable_Object = MibTable
filterAppCatTable = _FilterAppCatTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9)
)
if mibBuilder.loadTexts:
    filterAppCatTable.setStatus("current")
_FilterAppCatEntry_Object = MibTableRow
filterAppCatEntry = _FilterAppCatEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1)
)
filterAppCatEntry.setIndexNames(
    (0, "XIRRUS-MIB", "filterAppCatIndex"),
)
if mibBuilder.loadTexts:
    filterAppCatEntry.setStatus("current")
_FilterAppCatIndex_Type = Integer32
_FilterAppCatIndex_Object = MibTableColumn
filterAppCatIndex = _FilterAppCatIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 1),
    _FilterAppCatIndex_Type()
)
filterAppCatIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterAppCatIndex.setStatus("current")
_FilterAppCatGuid_Type = DisplayString
_FilterAppCatGuid_Object = MibTableColumn
filterAppCatGuid = _FilterAppCatGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 2),
    _FilterAppCatGuid_Type()
)
filterAppCatGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterAppCatGuid.setStatus("current")
_FilterAppCatDescription_Type = DisplayString
_FilterAppCatDescription_Object = MibTableColumn
filterAppCatDescription = _FilterAppCatDescription_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 3),
    _FilterAppCatDescription_Type()
)
filterAppCatDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterAppCatDescription.setStatus("current")
_FilterAppListTable_Object = MibTable
filterAppListTable = _FilterAppListTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10)
)
if mibBuilder.loadTexts:
    filterAppListTable.setStatus("current")
_FilterAppListEntry_Object = MibTableRow
filterAppListEntry = _FilterAppListEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1)
)
filterAppListEntry.setIndexNames(
    (0, "XIRRUS-MIB", "filterAppListIndex"),
)
if mibBuilder.loadTexts:
    filterAppListEntry.setStatus("current")
_FilterAppListIndex_Type = Integer32
_FilterAppListIndex_Object = MibTableColumn
filterAppListIndex = _FilterAppListIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 1),
    _FilterAppListIndex_Type()
)
filterAppListIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterAppListIndex.setStatus("current")
_FilterAppListGuid_Type = DisplayString
_FilterAppListGuid_Object = MibTableColumn
filterAppListGuid = _FilterAppListGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 2),
    _FilterAppListGuid_Type()
)
filterAppListGuid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterAppListGuid.setStatus("current")
_FilterAppListDesc_Type = DisplayString
_FilterAppListDesc_Object = MibTableColumn
filterAppListDesc = _FilterAppListDesc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 3),
    _FilterAppListDesc_Type()
)
filterAppListDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterAppListDesc.setStatus("current")
_FilterAppListRowStatus_Type = RowStatus
_FilterAppListRowStatus_Object = MibTableColumn
filterAppListRowStatus = _FilterAppListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 4),
    _FilterAppListRowStatus_Type()
)
filterAppListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterAppListRowStatus.setStatus("current")
_AppListMemberTable_Object = MibTable
appListMemberTable = _AppListMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11)
)
if mibBuilder.loadTexts:
    appListMemberTable.setStatus("current")
_AppListMemberEntry_Object = MibTableRow
appListMemberEntry = _AppListMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1)
)
appListMemberEntry.setIndexNames(
    (0, "XIRRUS-MIB", "appListMemberIndex"),
)
if mibBuilder.loadTexts:
    appListMemberEntry.setStatus("current")
_AppListMemberIndex_Type = Integer32
_AppListMemberIndex_Object = MibTableColumn
appListMemberIndex = _AppListMemberIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 1),
    _AppListMemberIndex_Type()
)
appListMemberIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appListMemberIndex.setStatus("current")
_AppListMemberGuid_Type = DisplayString
_AppListMemberGuid_Object = MibTableColumn
appListMemberGuid = _AppListMemberGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 2),
    _AppListMemberGuid_Type()
)
appListMemberGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appListMemberGuid.setStatus("current")
_AppListMemberApp_Type = DisplayString
_AppListMemberApp_Object = MibTableColumn
appListMemberApp = _AppListMemberApp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 3),
    _AppListMemberApp_Type()
)
appListMemberApp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    appListMemberApp.setStatus("current")
_AppListMemberRowStatus_Type = RowStatus
_AppListMemberRowStatus_Object = MibTableColumn
appListMemberRowStatus = _AppListMemberRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 4),
    _AppListMemberRowStatus_Type()
)
appListMemberRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    appListMemberRowStatus.setStatus("current")
_Interface_ObjectIdentity = ObjectIdentity
interface = _Interface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12)
)
_Iap_ObjectIdentity = ObjectIdentity
iap = _Iap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1)
)
_IapTable_Object = MibTable
iapTable = _IapTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1)
)
if mibBuilder.loadTexts:
    iapTable.setStatus("current")
_IapEntry_Object = MibTableRow
iapEntry = _IapEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1)
)
iapEntry.setIndexNames(
    (0, "XIRRUS-MIB", "iapIndex"),
)
if mibBuilder.loadTexts:
    iapEntry.setStatus("current")
_IapIndex_Type = Integer32
_IapIndex_Object = MibTableColumn
iapIndex = _IapIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 1),
    _IapIndex_Type()
)
iapIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iapIndex.setStatus("current")
_IapName_Type = DisplayString
_IapName_Object = MibTableColumn
iapName = _IapName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 2),
    _IapName_Type()
)
iapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapName.setStatus("current")
_IapMacAddress_Type = DisplayString
_IapMacAddress_Object = MibTableColumn
iapMacAddress = _IapMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 3),
    _IapMacAddress_Type()
)
iapMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMacAddress.setStatus("current")
_IapNumStations_Type = Integer32
_IapNumStations_Object = MibTableColumn
iapNumStations = _IapNumStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 4),
    _IapNumStations_Type()
)
iapNumStations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapNumStations.setStatus("current")


class _IapEnable_Type(Integer32):
    """Custom type iapEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_IapEnable_Type.__name__ = "Integer32"
_IapEnable_Object = MibTableColumn
iapEnable = _IapEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 5),
    _IapEnable_Type()
)
iapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapEnable.setStatus("current")


class _IapCellSize_Type(Integer32):
    """Custom type iapCellSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("small", 1),
          ("medium", 2),
          ("large", 3),
          ("max", 4),
          ("auto", 5),
          ("monitor", 6))
    )


_IapCellSize_Type.__name__ = "Integer32"
_IapCellSize_Object = MibTableColumn
iapCellSize = _IapCellSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 6),
    _IapCellSize_Type()
)
iapCellSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapCellSize.setStatus("current")


class _IapTxPwr_Type(Integer32):
    """Custom type iapTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_IapTxPwr_Type.__name__ = "Integer32"
_IapTxPwr_Object = MibTableColumn
iapTxPwr = _IapTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 7),
    _IapTxPwr_Type()
)
iapTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapTxPwr.setStatus("current")


class _IapRxThreshold_Type(Integer32):
    """Custom type iapRxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-100, 0),
    )


_IapRxThreshold_Type.__name__ = "Integer32"
_IapRxThreshold_Object = MibTableColumn
iapRxThreshold = _IapRxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 8),
    _IapRxThreshold_Type()
)
iapRxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapRxThreshold.setStatus("current")


class _IapChannel_Type(Integer32):
    """Custom type iapChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_IapChannel_Type.__name__ = "Integer32"
_IapChannel_Object = MibTableColumn
iapChannel = _IapChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 9),
    _IapChannel_Type()
)
iapChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapChannel.setStatus("current")


class _IapAntenna_Type(Integer32):
    """Custom type iapAntenna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("internal", 1),
          ("external", 2),
          ("omni", 3))
    )


_IapAntenna_Type.__name__ = "Integer32"
_IapAntenna_Object = MibTableColumn
iapAntenna = _IapAntenna_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 10),
    _IapAntenna_Type()
)
iapAntenna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapAntenna.setStatus("current")


class _IapDot11Mode_Type(Integer32):
    """Custom type iapDot11Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dot11a", 0),
          ("dot11g", 1),
          ("monitor", 2))
    )


_IapDot11Mode_Type.__name__ = "Integer32"
_IapDot11Mode_Object = MibTableColumn
iapDot11Mode = _IapDot11Mode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 11),
    _IapDot11Mode_Type()
)
iapDot11Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapDot11Mode.setStatus("current")


class _IapDescription_Type(DisplayString):
    """Custom type iapDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_IapDescription_Type.__name__ = "DisplayString"
_IapDescription_Object = MibTableColumn
iapDescription = _IapDescription_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 12),
    _IapDescription_Type()
)
iapDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapDescription.setStatus("current")


class _IapWdsClientLink_Type(Integer32):
    """Custom type iapWdsClientLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_IapWdsClientLink_Type.__name__ = "Integer32"
_IapWdsClientLink_Object = MibTableColumn
iapWdsClientLink = _IapWdsClientLink_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 13),
    _IapWdsClientLink_Type()
)
iapWdsClientLink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapWdsClientLink.setStatus("current")


class _IapWdsHostLink_Type(Integer32):
    """Custom type iapWdsHostLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_IapWdsHostLink_Type.__name__ = "Integer32"
_IapWdsHostLink_Object = MibTableColumn
iapWdsHostLink = _IapWdsHostLink_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 14),
    _IapWdsHostLink_Type()
)
iapWdsHostLink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapWdsHostLink.setStatus("current")


class _IapChannelBondMode_Type(Integer32):
    """Custom type iapChannelBondMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("minus1", -1),
          ("off", 0),
          ("plus1", 1),
          ("auto", 2))
    )


_IapChannelBondMode_Type.__name__ = "Integer32"
_IapChannelBondMode_Object = MibTableColumn
iapChannelBondMode = _IapChannelBondMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 15),
    _IapChannelBondMode_Type()
)
iapChannelBondMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapChannelBondMode.setStatus("current")
_IapBondedChannel_Type = Integer32
_IapBondedChannel_Object = MibTableColumn
iapBondedChannel = _IapBondedChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 16),
    _IapBondedChannel_Type()
)
iapBondedChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapBondedChannel.setStatus("current")
_IapMaxStationsHour_Type = Integer32
_IapMaxStationsHour_Object = MibTableColumn
iapMaxStationsHour = _IapMaxStationsHour_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 17),
    _IapMaxStationsHour_Type()
)
iapMaxStationsHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMaxStationsHour.setStatus("current")
_IapMaxStationsDay_Type = Integer32
_IapMaxStationsDay_Object = MibTableColumn
iapMaxStationsDay = _IapMaxStationsDay_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 18),
    _IapMaxStationsDay_Type()
)
iapMaxStationsDay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMaxStationsDay.setStatus("current")
_IapMaxStationsWeek_Type = Integer32
_IapMaxStationsWeek_Object = MibTableColumn
iapMaxStationsWeek = _IapMaxStationsWeek_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 19),
    _IapMaxStationsWeek_Type()
)
iapMaxStationsWeek.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMaxStationsWeek.setStatus("current")
_IapMaxStationsMonth_Type = Integer32
_IapMaxStationsMonth_Object = MibTableColumn
iapMaxStationsMonth = _IapMaxStationsMonth_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 20),
    _IapMaxStationsMonth_Type()
)
iapMaxStationsMonth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMaxStationsMonth.setStatus("current")
_IapMaxStationsYear_Type = Integer32
_IapMaxStationsYear_Object = MibTableColumn
iapMaxStationsYear = _IapMaxStationsYear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 21),
    _IapMaxStationsYear_Type()
)
iapMaxStationsYear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapMaxStationsYear.setStatus("current")


class _IapChannelMode_Type(Integer32):
    """Custom type iapChannelMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("manual", 1),
          ("auto", 2),
          ("radar", 3),
          ("locked", 4),
          ("monitor", 5),
          ("timeshare", 6))
    )


_IapChannelMode_Type.__name__ = "Integer32"
_IapChannelMode_Object = MibTableColumn
iapChannelMode = _IapChannelMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 22),
    _IapChannelMode_Type()
)
iapChannelMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapChannelMode.setStatus("current")


class _IapWifiMode_Type(Integer32):
    """Custom type iapWifiMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              24,
              25,
              31)
        )
    )
    namedValues = NamedValues(
        *(("dot11a", 1),
          ("dot11b", 2),
          ("dot11ab", 3),
          ("dot11g", 4),
          ("dot11ag", 5),
          ("dot11bg", 6),
          ("dot11abg", 7),
          ("dot11n", 8),
          ("dot11an", 9),
          ("dot11bn", 10),
          ("dot11abn", 11),
          ("dot11gn", 12),
          ("dot11agn", 13),
          ("dot11bgn", 14),
          ("dot11abgn", 15),
          ("dot11ac", 16),
          ("dot11nac", 24),
          ("dot11anac", 25),
          ("dot11abgnac", 31))
    )


_IapWifiMode_Type.__name__ = "Integer32"
_IapWifiMode_Object = MibTableColumn
iapWifiMode = _IapWifiMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 23),
    _IapWifiMode_Type()
)
iapWifiMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapWifiMode.setStatus("current")


class _IapPresent_Type(Integer32):
    """Custom type iapPresent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("not-present", 0),
          ("present", 1))
    )


_IapPresent_Type.__name__ = "Integer32"
_IapPresent_Object = MibTableColumn
iapPresent = _IapPresent_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 24),
    _IapPresent_Type()
)
iapPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapPresent.setStatus("current")


class _IapWdsLinkDistance_Type(Integer32):
    """Custom type iapWdsLinkDistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_IapWdsLinkDistance_Type.__name__ = "Integer32"
_IapWdsLinkDistance_Object = MibTableColumn
iapWdsLinkDistance = _IapWdsLinkDistance_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 25),
    _IapWdsLinkDistance_Type()
)
iapWdsLinkDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapWdsLinkDistance.setStatus("current")
_IapResetsMonitor_Type = Counter64
_IapResetsMonitor_Object = MibTableColumn
iapResetsMonitor = _IapResetsMonitor_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 26),
    _IapResetsMonitor_Type()
)
iapResetsMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapResetsMonitor.setStatus("current")
_IapResetsBeacon_Type = Counter64
_IapResetsBeacon_Object = MibTableColumn
iapResetsBeacon = _IapResetsBeacon_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 27),
    _IapResetsBeacon_Type()
)
iapResetsBeacon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapResetsBeacon.setStatus("current")
_IapResetsPhy_Type = Counter64
_IapResetsPhy_Object = MibTableColumn
iapResetsPhy = _IapResetsPhy_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 28),
    _IapResetsPhy_Type()
)
iapResetsPhy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapResetsPhy.setStatus("current")
_IapResetsMac_Type = Counter64
_IapResetsMac_Object = MibTableColumn
iapResetsMac = _IapResetsMac_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 29),
    _IapResetsMac_Type()
)
iapResetsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapResetsMac.setStatus("current")
_IapResetsSystem_Type = Counter64
_IapResetsSystem_Object = MibTableColumn
iapResetsSystem = _IapResetsSystem_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 30),
    _IapResetsSystem_Type()
)
iapResetsSystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapResetsSystem.setStatus("current")


class _IapSpatialStreams_Type(Integer32):
    """Custom type iapSpatialStreams based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-present", 0),
          ("type-1x1", 1),
          ("type-2x2", 2),
          ("type-2x3", 3),
          ("type-3x3", 4),
          ("type-4x4", 5))
    )


_IapSpatialStreams_Type.__name__ = "Integer32"
_IapSpatialStreams_Object = MibTableColumn
iapSpatialStreams = _IapSpatialStreams_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 31),
    _IapSpatialStreams_Type()
)
iapSpatialStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapSpatialStreams.setStatus("current")


class _IapChannelBond80Mhz_Type(Integer32):
    """Custom type iapChannelBond80Mhz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_IapChannelBond80Mhz_Type.__name__ = "Integer32"
_IapChannelBond80Mhz_Object = MibTableColumn
iapChannelBond80Mhz = _IapChannelBond80Mhz_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 32),
    _IapChannelBond80Mhz_Type()
)
iapChannelBond80Mhz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapChannelBond80Mhz.setStatus("current")
_IapBondedChannelList_Type = DisplayString
_IapBondedChannelList_Object = MibTableColumn
iapBondedChannelList = _IapBondedChannelList_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 33),
    _IapBondedChannelList_Type()
)
iapBondedChannelList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapBondedChannelList.setStatus("current")


class _IapType_Type(Integer32):
    """Custom type iapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("not-present", 0),
          ("unknown", 1),
          ("dot11abgn", 2),
          ("dot11abgnac", 3),
          ("dot11an", 4),
          ("dot11anac", 5))
    )


_IapType_Type.__name__ = "Integer32"
_IapType_Object = MibTableColumn
iapType = _IapType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 34),
    _IapType_Type()
)
iapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapType.setStatus("current")


class _IapChannelBond160Mhz_Type(Integer32):
    """Custom type iapChannelBond160Mhz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_IapChannelBond160Mhz_Type.__name__ = "Integer32"
_IapChannelBond160Mhz_Object = MibTableColumn
iapChannelBond160Mhz = _IapChannelBond160Mhz_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 35),
    _IapChannelBond160Mhz_Type()
)
iapChannelBond160Mhz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iapChannelBond160Mhz.setStatus("current")
__pysmi_global_ObjectIdentity = ObjectIdentity
_pysmi_global = __pysmi_global_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2)
)


class _GlobalIAPEnable_Type(Integer32):
    """Custom type globalIAPEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("all-down", 0),
          ("all-up", 1))
    )


_GlobalIAPEnable_Type.__name__ = "Integer32"
_GlobalIAPEnable_Object = MibScalar
globalIAPEnable = _GlobalIAPEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 1),
    _GlobalIAPEnable_Type()
)
globalIAPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPEnable.setStatus("current")


class _GlobalIAPCellSize_Type(Integer32):
    """Custom type globalIAPCellSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("small", 1),
          ("medium", 2),
          ("large", 3),
          ("max", 4),
          ("auto", 5),
          ("monitor", 6))
    )


_GlobalIAPCellSize_Type.__name__ = "Integer32"
_GlobalIAPCellSize_Object = MibScalar
globalIAPCellSize = _GlobalIAPCellSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 2),
    _GlobalIAPCellSize_Type()
)
globalIAPCellSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPCellSize.setStatus("current")


class _GlobalIAPTxPwr_Type(Integer32):
    """Custom type globalIAPTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_GlobalIAPTxPwr_Type.__name__ = "Integer32"
_GlobalIAPTxPwr_Object = MibScalar
globalIAPTxPwr = _GlobalIAPTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 3),
    _GlobalIAPTxPwr_Type()
)
globalIAPTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPTxPwr.setStatus("current")


class _GlobalIAPRxThreshold_Type(Integer32):
    """Custom type globalIAPRxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-100, 0),
    )


_GlobalIAPRxThreshold_Type.__name__ = "Integer32"
_GlobalIAPRxThreshold_Object = MibScalar
globalIAPRxThreshold = _GlobalIAPRxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 4),
    _GlobalIAPRxThreshold_Type()
)
globalIAPRxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPRxThreshold.setStatus("current")


class _GlobalIAPBeaconRate_Type(Integer32):
    """Custom type globalIAPBeaconRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_GlobalIAPBeaconRate_Type.__name__ = "Integer32"
_GlobalIAPBeaconRate_Object = MibScalar
globalIAPBeaconRate = _GlobalIAPBeaconRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 5),
    _GlobalIAPBeaconRate_Type()
)
globalIAPBeaconRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPBeaconRate.setStatus("current")


class _GlobalIAPBeaconDTIM_Type(Integer32):
    """Custom type globalIAPBeaconDTIM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_GlobalIAPBeaconDTIM_Type.__name__ = "Integer32"
_GlobalIAPBeaconDTIM_Object = MibScalar
globalIAPBeaconDTIM = _GlobalIAPBeaconDTIM_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 6),
    _GlobalIAPBeaconDTIM_Type()
)
globalIAPBeaconDTIM.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPBeaconDTIM.setStatus("current")


class _GlobalIAPLongRetry_Type(Integer32):
    """Custom type globalIAPLongRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_GlobalIAPLongRetry_Type.__name__ = "Integer32"
_GlobalIAPLongRetry_Object = MibScalar
globalIAPLongRetry = _GlobalIAPLongRetry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 7),
    _GlobalIAPLongRetry_Type()
)
globalIAPLongRetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPLongRetry.setStatus("current")


class _GlobalIAPShortRetry_Type(Integer32):
    """Custom type globalIAPShortRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_GlobalIAPShortRetry_Type.__name__ = "Integer32"
_GlobalIAPShortRetry_Object = MibScalar
globalIAPShortRetry = _GlobalIAPShortRetry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 8),
    _GlobalIAPShortRetry_Type()
)
globalIAPShortRetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPShortRetry.setStatus("current")


class _GlobalIAPMaxStations_Type(Integer32):
    """Custom type globalIAPMaxStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 240),
    )


_GlobalIAPMaxStations_Type.__name__ = "Integer32"
_GlobalIAPMaxStations_Object = MibScalar
globalIAPMaxStations = _GlobalIAPMaxStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 9),
    _GlobalIAPMaxStations_Type()
)
globalIAPMaxStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPMaxStations.setStatus("current")


class _GlobalIAPInactiveTime_Type(Integer32):
    """Custom type globalIAPInactiveTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_GlobalIAPInactiveTime_Type.__name__ = "Integer32"
_GlobalIAPInactiveTime_Object = MibScalar
globalIAPInactiveTime = _GlobalIAPInactiveTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 10),
    _GlobalIAPInactiveTime_Type()
)
globalIAPInactiveTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPInactiveTime.setStatus("current")


class _GlobalIAPReauthPeriod_Type(Integer32):
    """Custom type globalIAPReauthPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GlobalIAPReauthPeriod_Type.__name__ = "Integer32"
_GlobalIAPReauthPeriod_Object = MibScalar
globalIAPReauthPeriod = _GlobalIAPReauthPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 11),
    _GlobalIAPReauthPeriod_Type()
)
globalIAPReauthPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPReauthPeriod.setStatus("current")


class _GlobalIAPSta2Sta_Type(Integer32):
    """Custom type globalIAPSta2Sta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("forward", 0),
          ("block", 1))
    )


_GlobalIAPSta2Sta_Type.__name__ = "Integer32"
_GlobalIAPSta2Sta_Object = MibScalar
globalIAPSta2Sta = _GlobalIAPSta2Sta_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 12),
    _GlobalIAPSta2Sta_Type()
)
globalIAPSta2Sta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPSta2Sta.setStatus("current")


class _GlobalMgmt_Type(Integer32):
    """Custom type globalMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalMgmt_Type.__name__ = "Integer32"
_GlobalMgmt_Object = MibScalar
globalMgmt = _GlobalMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 13),
    _GlobalMgmt_Type()
)
globalMgmt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMgmt.setStatus("current")
_Leds_ObjectIdentity = ObjectIdentity
leds = _Leds_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14)
)


class _LedsEnable_Type(Integer32):
    """Custom type ledsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("iapUp", 1),
          ("associated", 2))
    )


_LedsEnable_Type.__name__ = "Integer32"
_LedsEnable_Object = MibScalar
ledsEnable = _LedsEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 1),
    _LedsEnable_Type()
)
ledsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ledsEnable.setStatus("current")
_LedsActivityTable_Object = MibTable
ledsActivityTable = _LedsActivityTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2)
)
if mibBuilder.loadTexts:
    ledsActivityTable.setStatus("current")
_LedsActivityEntry_Object = MibTableRow
ledsActivityEntry = _LedsActivityEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1)
)
ledsActivityEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ledsActivityIndex"),
)
if mibBuilder.loadTexts:
    ledsActivityEntry.setStatus("current")
_LedsActivityIndex_Type = Integer32
_LedsActivityIndex_Object = MibTableColumn
ledsActivityIndex = _LedsActivityIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 1),
    _LedsActivityIndex_Type()
)
ledsActivityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ledsActivityIndex.setStatus("current")
_LedsActivityPacketType_Type = DisplayString
_LedsActivityPacketType_Object = MibTableColumn
ledsActivityPacketType = _LedsActivityPacketType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 2),
    _LedsActivityPacketType_Type()
)
ledsActivityPacketType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ledsActivityPacketType.setStatus("current")


class _LedsActivityStatus_Type(Integer32):
    """Custom type ledsActivityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_LedsActivityStatus_Type.__name__ = "Integer32"
_LedsActivityStatus_Object = MibTableColumn
ledsActivityStatus = _LedsActivityStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 3),
    _LedsActivityStatus_Type()
)
ledsActivityStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ledsActivityStatus.setStatus("current")
_AutoChannel_ObjectIdentity = ObjectIdentity
autoChannel = _AutoChannel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15)
)


class _AutoChannelEnable_Type(Integer32):
    """Custom type autoChannelEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("negotiate", 2))
    )


_AutoChannelEnable_Type.__name__ = "Integer32"
_AutoChannelEnable_Object = MibScalar
autoChannelEnable = _AutoChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 1),
    _AutoChannelEnable_Type()
)
autoChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelEnable.setStatus("current")


class _AutoChannelPowerUp_Type(Integer32):
    """Custom type autoChannelPowerUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoChannelPowerUp_Type.__name__ = "Integer32"
_AutoChannelPowerUp_Object = MibScalar
autoChannelPowerUp = _AutoChannelPowerUp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 2),
    _AutoChannelPowerUp_Type()
)
autoChannelPowerUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelPowerUp.setStatus("current")


class _AutoChannelSchedule_Type(DisplayString):
    """Custom type autoChannelSchedule based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_AutoChannelSchedule_Type.__name__ = "DisplayString"
_AutoChannelSchedule_Object = MibScalar
autoChannelSchedule = _AutoChannelSchedule_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 3),
    _AutoChannelSchedule_Type()
)
autoChannelSchedule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelSchedule.setStatus("current")
_RogueDetect_ObjectIdentity = ObjectIdentity
rogueDetect = _RogueDetect_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16)
)


class _RogueDetectEnable_Type(Integer32):
    """Custom type rogueDetectEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("standard", 1),
          ("advanced", 2),
          ("standard-auto-block", 3))
    )


_RogueDetectEnable_Type.__name__ = "Integer32"
_RogueDetectEnable_Object = MibScalar
rogueDetectEnable = _RogueDetectEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 1),
    _RogueDetectEnable_Type()
)
rogueDetectEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectEnable.setStatus("current")
_RogueDetectSSIDTable_Object = MibTable
rogueDetectSSIDTable = _RogueDetectSSIDTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2)
)
if mibBuilder.loadTexts:
    rogueDetectSSIDTable.setStatus("current")
_RogueDetectSSIDEntry_Object = MibTableRow
rogueDetectSSIDEntry = _RogueDetectSSIDEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1)
)
rogueDetectSSIDEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rogueDetectSSIDIndex"),
)
if mibBuilder.loadTexts:
    rogueDetectSSIDEntry.setStatus("current")
_RogueDetectSSIDIndex_Type = Integer32
_RogueDetectSSIDIndex_Object = MibTableColumn
rogueDetectSSIDIndex = _RogueDetectSSIDIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 1),
    _RogueDetectSSIDIndex_Type()
)
rogueDetectSSIDIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rogueDetectSSIDIndex.setStatus("current")


class _RogueDetectSSIDName_Type(DisplayString):
    """Custom type rogueDetectSSIDName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_RogueDetectSSIDName_Type.__name__ = "DisplayString"
_RogueDetectSSIDName_Object = MibTableColumn
rogueDetectSSIDName = _RogueDetectSSIDName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 2),
    _RogueDetectSSIDName_Type()
)
rogueDetectSSIDName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectSSIDName.setStatus("current")


class _RogueDetectSSIDStatus_Type(Integer32):
    """Custom type rogueDetectSSIDStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("known", 1),
          ("approved", 2),
          ("blocked", 3))
    )


_RogueDetectSSIDStatus_Type.__name__ = "Integer32"
_RogueDetectSSIDStatus_Object = MibTableColumn
rogueDetectSSIDStatus = _RogueDetectSSIDStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 3),
    _RogueDetectSSIDStatus_Type()
)
rogueDetectSSIDStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectSSIDStatus.setStatus("current")
_RogueDetectSSIDRowStatus_Type = RowStatus
_RogueDetectSSIDRowStatus_Object = MibTableColumn
rogueDetectSSIDRowStatus = _RogueDetectSSIDRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 4),
    _RogueDetectSSIDRowStatus_Type()
)
rogueDetectSSIDRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectSSIDRowStatus.setStatus("current")


class _RogueDetectSSIDMatch_Type(Integer32):
    """Custom type rogueDetectSSIDMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bssid-or-ssid", 0),
          ("bssid", 1),
          ("ssid", 2),
          ("manufacturer", 3))
    )


_RogueDetectSSIDMatch_Type.__name__ = "Integer32"
_RogueDetectSSIDMatch_Object = MibTableColumn
rogueDetectSSIDMatch = _RogueDetectSSIDMatch_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 5),
    _RogueDetectSSIDMatch_Type()
)
rogueDetectSSIDMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectSSIDMatch.setStatus("current")
_RogueDetectAPTable_Object = MibTable
rogueDetectAPTable = _RogueDetectAPTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3)
)
if mibBuilder.loadTexts:
    rogueDetectAPTable.setStatus("current")
_RogueDetectAPEntry_Object = MibTableRow
rogueDetectAPEntry = _RogueDetectAPEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1)
)
rogueDetectAPEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rogueDetectAPIndex"),
)
if mibBuilder.loadTexts:
    rogueDetectAPEntry.setStatus("current")
_RogueDetectAPIndex_Type = Integer32
_RogueDetectAPIndex_Object = MibTableColumn
rogueDetectAPIndex = _RogueDetectAPIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 1),
    _RogueDetectAPIndex_Type()
)
rogueDetectAPIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rogueDetectAPIndex.setStatus("current")


class _RogueDetectAPStatus_Type(Integer32):
    """Custom type rogueDetectAPStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("known", 1),
          ("approved", 2),
          ("blocked", 3))
    )


_RogueDetectAPStatus_Type.__name__ = "Integer32"
_RogueDetectAPStatus_Object = MibTableColumn
rogueDetectAPStatus = _RogueDetectAPStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 2),
    _RogueDetectAPStatus_Type()
)
rogueDetectAPStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPStatus.setStatus("current")
_RogueDetectAPSSID_Type = DisplayString
_RogueDetectAPSSID_Object = MibTableColumn
rogueDetectAPSSID = _RogueDetectAPSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 3),
    _RogueDetectAPSSID_Type()
)
rogueDetectAPSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPSSID.setStatus("current")
_RogueDetectAPBSSID_Type = DisplayString
_RogueDetectAPBSSID_Object = MibTableColumn
rogueDetectAPBSSID = _RogueDetectAPBSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 4),
    _RogueDetectAPBSSID_Type()
)
rogueDetectAPBSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPBSSID.setStatus("current")
_RogueDetectAPManufacturer_Type = DisplayString
_RogueDetectAPManufacturer_Object = MibTableColumn
rogueDetectAPManufacturer = _RogueDetectAPManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 5),
    _RogueDetectAPManufacturer_Type()
)
rogueDetectAPManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPManufacturer.setStatus("current")
_RogueDetectAPChannel_Type = Integer32
_RogueDetectAPChannel_Object = MibTableColumn
rogueDetectAPChannel = _RogueDetectAPChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 6),
    _RogueDetectAPChannel_Type()
)
rogueDetectAPChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPChannel.setStatus("current")
_RogueDetectAPRSSI_Type = Integer32
_RogueDetectAPRSSI_Object = MibTableColumn
rogueDetectAPRSSI = _RogueDetectAPRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 7),
    _RogueDetectAPRSSI_Type()
)
rogueDetectAPRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPRSSI.setStatus("current")
_RogueDetectAPSecurity_Type = DisplayString
_RogueDetectAPSecurity_Object = MibTableColumn
rogueDetectAPSecurity = _RogueDetectAPSecurity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 8),
    _RogueDetectAPSecurity_Type()
)
rogueDetectAPSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPSecurity.setStatus("current")
_RogueDetectAPIPAddress_Type = DisplayString
_RogueDetectAPIPAddress_Object = MibTableColumn
rogueDetectAPIPAddress = _RogueDetectAPIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 9),
    _RogueDetectAPIPAddress_Type()
)
rogueDetectAPIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPIPAddress.setStatus("current")
_RogueDetectAPTimeDiscovered_Type = DisplayString
_RogueDetectAPTimeDiscovered_Object = MibTableColumn
rogueDetectAPTimeDiscovered = _RogueDetectAPTimeDiscovered_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 10),
    _RogueDetectAPTimeDiscovered_Type()
)
rogueDetectAPTimeDiscovered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPTimeDiscovered.setStatus("current")
_RogueDetectAPTimeLastActive_Type = DisplayString
_RogueDetectAPTimeLastActive_Object = MibTableColumn
rogueDetectAPTimeLastActive = _RogueDetectAPTimeLastActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 11),
    _RogueDetectAPTimeLastActive_Type()
)
rogueDetectAPTimeLastActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPTimeLastActive.setStatus("current")


class _RogueDetectAPType_Type(Integer32):
    """Custom type rogueDetectAPType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ibss", 1),
          ("ess", 2))
    )


_RogueDetectAPType_Type.__name__ = "Integer32"
_RogueDetectAPType_Object = MibTableColumn
rogueDetectAPType = _RogueDetectAPType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 12),
    _RogueDetectAPType_Type()
)
rogueDetectAPType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPType.setStatus("current")


class _RogueDetectSSIDTableReset_Type(Integer32):
    """Custom type rogueDetectSSIDTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_RogueDetectSSIDTableReset_Type.__name__ = "Integer32"
_RogueDetectSSIDTableReset_Object = MibScalar
rogueDetectSSIDTableReset = _RogueDetectSSIDTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 4),
    _RogueDetectSSIDTableReset_Type()
)
rogueDetectSSIDTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectSSIDTableReset.setStatus("current")
_RogueDetectAPOrigTable_Object = MibTable
rogueDetectAPOrigTable = _RogueDetectAPOrigTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5)
)
if mibBuilder.loadTexts:
    rogueDetectAPOrigTable.setStatus("current")
_RogueDetectAPOrigTableEntry_Object = MibTableRow
rogueDetectAPOrigTableEntry = _RogueDetectAPOrigTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1)
)
rogueDetectAPOrigTableEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rogueDetectAPOrigTableIndex"),
)
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableEntry.setStatus("current")
_RogueDetectAPOrigTableIndex_Type = Integer32
_RogueDetectAPOrigTableIndex_Object = MibTableColumn
rogueDetectAPOrigTableIndex = _RogueDetectAPOrigTableIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 1),
    _RogueDetectAPOrigTableIndex_Type()
)
rogueDetectAPOrigTableIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableIndex.setStatus("current")
_RogueDetectAPOrigTableSSID_Type = DisplayString
_RogueDetectAPOrigTableSSID_Object = MibTableColumn
rogueDetectAPOrigTableSSID = _RogueDetectAPOrigTableSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 2),
    _RogueDetectAPOrigTableSSID_Type()
)
rogueDetectAPOrigTableSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableSSID.setStatus("current")
_RogueDetectAPOrigTableBSSID_Type = DisplayString
_RogueDetectAPOrigTableBSSID_Object = MibTableColumn
rogueDetectAPOrigTableBSSID = _RogueDetectAPOrigTableBSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 3),
    _RogueDetectAPOrigTableBSSID_Type()
)
rogueDetectAPOrigTableBSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableBSSID.setStatus("current")
_RogueDetectAPOrigTableManufacturer_Type = DisplayString
_RogueDetectAPOrigTableManufacturer_Object = MibTableColumn
rogueDetectAPOrigTableManufacturer = _RogueDetectAPOrigTableManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 4),
    _RogueDetectAPOrigTableManufacturer_Type()
)
rogueDetectAPOrigTableManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableManufacturer.setStatus("current")
_RogueDetectAPOrigTableChannel_Type = Integer32
_RogueDetectAPOrigTableChannel_Object = MibTableColumn
rogueDetectAPOrigTableChannel = _RogueDetectAPOrigTableChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 5),
    _RogueDetectAPOrigTableChannel_Type()
)
rogueDetectAPOrigTableChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableChannel.setStatus("current")


class _RogueDetectAPOrigTableBand_Type(Integer32):
    """Custom type rogueDetectAPOrigTableBand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dot11a", 1),
          ("dot11g", 2))
    )


_RogueDetectAPOrigTableBand_Type.__name__ = "Integer32"
_RogueDetectAPOrigTableBand_Object = MibTableColumn
rogueDetectAPOrigTableBand = _RogueDetectAPOrigTableBand_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 6),
    _RogueDetectAPOrigTableBand_Type()
)
rogueDetectAPOrigTableBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableBand.setStatus("current")
_RogueDetectAPOrigTableRSSI_Type = Integer32
_RogueDetectAPOrigTableRSSI_Object = MibTableColumn
rogueDetectAPOrigTableRSSI = _RogueDetectAPOrigTableRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 7),
    _RogueDetectAPOrigTableRSSI_Type()
)
rogueDetectAPOrigTableRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableRSSI.setStatus("current")
_RogueDetectAPOrigTableSecurity_Type = DisplayString
_RogueDetectAPOrigTableSecurity_Object = MibTableColumn
rogueDetectAPOrigTableSecurity = _RogueDetectAPOrigTableSecurity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 8),
    _RogueDetectAPOrigTableSecurity_Type()
)
rogueDetectAPOrigTableSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableSecurity.setStatus("current")
_RogueDetectAPOrigTableIPAddress_Type = DisplayString
_RogueDetectAPOrigTableIPAddress_Object = MibTableColumn
rogueDetectAPOrigTableIPAddress = _RogueDetectAPOrigTableIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 9),
    _RogueDetectAPOrigTableIPAddress_Type()
)
rogueDetectAPOrigTableIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableIPAddress.setStatus("current")
_RogueDetectAPOrigTableTimeDiscovered_Type = Counter32
_RogueDetectAPOrigTableTimeDiscovered_Object = MibTableColumn
rogueDetectAPOrigTableTimeDiscovered = _RogueDetectAPOrigTableTimeDiscovered_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 10),
    _RogueDetectAPOrigTableTimeDiscovered_Type()
)
rogueDetectAPOrigTableTimeDiscovered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableTimeDiscovered.setStatus("current")
_RogueDetectAPOrigTableTimeLastActive_Type = Counter32
_RogueDetectAPOrigTableTimeLastActive_Object = MibTableColumn
rogueDetectAPOrigTableTimeLastActive = _RogueDetectAPOrigTableTimeLastActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 11),
    _RogueDetectAPOrigTableTimeLastActive_Type()
)
rogueDetectAPOrigTableTimeLastActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableTimeLastActive.setStatus("current")


class _RogueDetectAPOrigTableActive_Type(Integer32):
    """Custom type rogueDetectAPOrigTableActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("not-active", 2))
    )


_RogueDetectAPOrigTableActive_Type.__name__ = "Integer32"
_RogueDetectAPOrigTableActive_Object = MibTableColumn
rogueDetectAPOrigTableActive = _RogueDetectAPOrigTableActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 12),
    _RogueDetectAPOrigTableActive_Type()
)
rogueDetectAPOrigTableActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableActive.setStatus("current")


class _RogueDetectAPOrigTableType_Type(Integer32):
    """Custom type rogueDetectAPOrigTableType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ibss", 1),
          ("ess", 2))
    )


_RogueDetectAPOrigTableType_Type.__name__ = "Integer32"
_RogueDetectAPOrigTableType_Object = MibTableColumn
rogueDetectAPOrigTableType = _RogueDetectAPOrigTableType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 13),
    _RogueDetectAPOrigTableType_Type()
)
rogueDetectAPOrigTableType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTableType.setStatus("current")


class _RogueDetectAutoBlockEnc_Type(Integer32):
    """Custom type rogueDetectAutoBlockEnc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wep-and-none", 1),
          ("all", 2))
    )


_RogueDetectAutoBlockEnc_Type.__name__ = "Integer32"
_RogueDetectAutoBlockEnc_Object = MibScalar
rogueDetectAutoBlockEnc = _RogueDetectAutoBlockEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 6),
    _RogueDetectAutoBlockEnc_Type()
)
rogueDetectAutoBlockEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockEnc.setStatus("current")


class _RogueDetectAutoBlockRSSI_Type(Integer32):
    """Custom type rogueDetectAutoBlockRSSI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-95, -50),
    )


_RogueDetectAutoBlockRSSI_Type.__name__ = "Integer32"
_RogueDetectAutoBlockRSSI_Object = MibScalar
rogueDetectAutoBlockRSSI = _RogueDetectAutoBlockRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 7),
    _RogueDetectAutoBlockRSSI_Type()
)
rogueDetectAutoBlockRSSI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockRSSI.setStatus("current")


class _RogueDetectAutoBlockType_Type(Integer32):
    """Custom type rogueDetectAutoBlockType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("ibss", 1),
          ("ess", 2))
    )


_RogueDetectAutoBlockType_Type.__name__ = "Integer32"
_RogueDetectAutoBlockType_Object = MibScalar
rogueDetectAutoBlockType = _RogueDetectAutoBlockType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 8),
    _RogueDetectAutoBlockType_Type()
)
rogueDetectAutoBlockType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockType.setStatus("current")


class _RogueDetectAPOrigTablePeriod_Type(Counter32):
    """Custom type rogueDetectAPOrigTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_RogueDetectAPOrigTablePeriod_Type.__name__ = "Counter32"
_RogueDetectAPOrigTablePeriod_Object = MibScalar
rogueDetectAPOrigTablePeriod = _RogueDetectAPOrigTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 9),
    _RogueDetectAPOrigTablePeriod_Type()
)
rogueDetectAPOrigTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectAPOrigTablePeriod.setStatus("current")
_RogueDetectAutoBlockWhitelistTable_Object = MibTable
rogueDetectAutoBlockWhitelistTable = _RogueDetectAutoBlockWhitelistTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10)
)
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistTable.setStatus("current")
_RogueDetectAutoBlockWhitelistEntry_Object = MibTableRow
rogueDetectAutoBlockWhitelistEntry = _RogueDetectAutoBlockWhitelistEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1)
)
rogueDetectAutoBlockWhitelistEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rogueDetectAutoBlockWhitelistIndex"),
)
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistEntry.setStatus("current")
_RogueDetectAutoBlockWhitelistIndex_Type = Integer32
_RogueDetectAutoBlockWhitelistIndex_Object = MibTableColumn
rogueDetectAutoBlockWhitelistIndex = _RogueDetectAutoBlockWhitelistIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 1),
    _RogueDetectAutoBlockWhitelistIndex_Type()
)
rogueDetectAutoBlockWhitelistIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistIndex.setStatus("current")


class _RogueDetectAutoBlockWhitelistChannel_Type(Integer32):
    """Custom type rogueDetectAutoBlockWhitelistChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RogueDetectAutoBlockWhitelistChannel_Type.__name__ = "Integer32"
_RogueDetectAutoBlockWhitelistChannel_Object = MibTableColumn
rogueDetectAutoBlockWhitelistChannel = _RogueDetectAutoBlockWhitelistChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 2),
    _RogueDetectAutoBlockWhitelistChannel_Type()
)
rogueDetectAutoBlockWhitelistChannel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistChannel.setStatus("current")
_RogueDetectAutoBlockWhitelistRowStatus_Type = RowStatus
_RogueDetectAutoBlockWhitelistRowStatus_Object = MibTableColumn
rogueDetectAutoBlockWhitelistRowStatus = _RogueDetectAutoBlockWhitelistRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 3),
    _RogueDetectAutoBlockWhitelistRowStatus_Type()
)
rogueDetectAutoBlockWhitelistRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistRowStatus.setStatus("current")


class _RogueDetectAutoBlockWhitelistTableReset_Type(Integer32):
    """Custom type rogueDetectAutoBlockWhitelistTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_RogueDetectAutoBlockWhitelistTableReset_Type.__name__ = "Integer32"
_RogueDetectAutoBlockWhitelistTableReset_Object = MibScalar
rogueDetectAutoBlockWhitelistTableReset = _RogueDetectAutoBlockWhitelistTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 11),
    _RogueDetectAutoBlockWhitelistTableReset_Type()
)
rogueDetectAutoBlockWhitelistTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rogueDetectAutoBlockWhitelistTableReset.setStatus("current")
_FastRoaming_ObjectIdentity = ObjectIdentity
fastRoaming = _FastRoaming_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17)
)


class _FastRoamingEnable_Type(Integer32):
    """Custom type fastRoamingEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("broadcast", 1),
          ("tunnel", 2))
    )


_FastRoamingEnable_Type.__name__ = "Integer32"
_FastRoamingEnable_Object = MibScalar
fastRoamingEnable = _FastRoamingEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 1),
    _FastRoamingEnable_Type()
)
fastRoamingEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fastRoamingEnable.setStatus("current")


class _FastRoamingPeerMode_Type(Integer32):
    """Custom type fastRoamingPeerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("target-only", 0),
          ("in-range", 1),
          ("all", 2))
    )


_FastRoamingPeerMode_Type.__name__ = "Integer32"
_FastRoamingPeerMode_Object = MibScalar
fastRoamingPeerMode = _FastRoamingPeerMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 2),
    _FastRoamingPeerMode_Type()
)
fastRoamingPeerMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fastRoamingPeerMode.setStatus("current")


class _FastRoamingTargetArrayTableReset_Type(Integer32):
    """Custom type fastRoamingTargetArrayTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FastRoamingTargetArrayTableReset_Type.__name__ = "Integer32"
_FastRoamingTargetArrayTableReset_Object = MibScalar
fastRoamingTargetArrayTableReset = _FastRoamingTargetArrayTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 3),
    _FastRoamingTargetArrayTableReset_Type()
)
fastRoamingTargetArrayTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fastRoamingTargetArrayTableReset.setStatus("current")


class _FastRoamingLayer_Type(Integer32):
    """Custom type fastRoamingLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("layer-2-only", 0),
          ("layer-2-and-3", 1))
    )


_FastRoamingLayer_Type.__name__ = "Integer32"
_FastRoamingLayer_Object = MibScalar
fastRoamingLayer = _FastRoamingLayer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 5),
    _FastRoamingLayer_Type()
)
fastRoamingLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fastRoamingLayer.setStatus("current")
_FastRoamingTargetTable_Object = MibTable
fastRoamingTargetTable = _FastRoamingTargetTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6)
)
if mibBuilder.loadTexts:
    fastRoamingTargetTable.setStatus("current")
_FastRoamingTargetEntry_Object = MibTableRow
fastRoamingTargetEntry = _FastRoamingTargetEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1)
)
fastRoamingTargetEntry.setIndexNames(
    (0, "XIRRUS-MIB", "fastRoamingTargetIndex"),
)
if mibBuilder.loadTexts:
    fastRoamingTargetEntry.setStatus("current")
_FastRoamingTargetIndex_Type = Integer32
_FastRoamingTargetIndex_Object = MibTableColumn
fastRoamingTargetIndex = _FastRoamingTargetIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 1),
    _FastRoamingTargetIndex_Type()
)
fastRoamingTargetIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fastRoamingTargetIndex.setStatus("current")


class _FastRoamingTargetType_Type(Integer32):
    """Custom type fastRoamingTargetType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mac", 0),
          ("ip", 1),
          ("hostname", 2))
    )


_FastRoamingTargetType_Type.__name__ = "Integer32"
_FastRoamingTargetType_Object = MibTableColumn
fastRoamingTargetType = _FastRoamingTargetType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 2),
    _FastRoamingTargetType_Type()
)
fastRoamingTargetType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fastRoamingTargetType.setStatus("current")


class _FastRoamingTargetMacAddress_Type(DisplayString):
    """Custom type fastRoamingTargetMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_FastRoamingTargetMacAddress_Type.__name__ = "DisplayString"
_FastRoamingTargetMacAddress_Object = MibTableColumn
fastRoamingTargetMacAddress = _FastRoamingTargetMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 3),
    _FastRoamingTargetMacAddress_Type()
)
fastRoamingTargetMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fastRoamingTargetMacAddress.setStatus("current")
_FastRoamingTargetIpAddress_Type = IpAddress
_FastRoamingTargetIpAddress_Object = MibTableColumn
fastRoamingTargetIpAddress = _FastRoamingTargetIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 4),
    _FastRoamingTargetIpAddress_Type()
)
fastRoamingTargetIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fastRoamingTargetIpAddress.setStatus("current")


class _FastRoamingTargetHostname_Type(DisplayString):
    """Custom type fastRoamingTargetHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FastRoamingTargetHostname_Type.__name__ = "DisplayString"
_FastRoamingTargetHostname_Object = MibTableColumn
fastRoamingTargetHostname = _FastRoamingTargetHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 5),
    _FastRoamingTargetHostname_Type()
)
fastRoamingTargetHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fastRoamingTargetHostname.setStatus("current")
_FastRoamingTargetRowStatus_Type = RowStatus
_FastRoamingTargetRowStatus_Object = MibTableColumn
fastRoamingTargetRowStatus = _FastRoamingTargetRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 6),
    _FastRoamingTargetRowStatus_Type()
)
fastRoamingTargetRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fastRoamingTargetRowStatus.setStatus("current")


class _GlobalLoadBalancing_Type(Integer32):
    """Custom type globalLoadBalancing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 2))
    )


_GlobalLoadBalancing_Type.__name__ = "Integer32"
_GlobalLoadBalancing_Object = MibScalar
globalLoadBalancing = _GlobalLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 18),
    _GlobalLoadBalancing_Type()
)
globalLoadBalancing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalLoadBalancing.setStatus("current")


class _GlobalCountryCode_Type(Integer32):
    """Custom type globalCountryCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64)
        )
    )
    namedValues = NamedValues(
        *(("not-set", 0),
          ("united-states", 1),
          ("canada", 2),
          ("australia", 3),
          ("new-zealand", 4),
          ("austria", 5),
          ("belgium", 6),
          ("denmark", 7),
          ("finland", 8),
          ("france", 9),
          ("germany", 10),
          ("hungary", 11),
          ("ireland", 12),
          ("italy", 13),
          ("luxembourg", 14),
          ("netherlands", 15),
          ("norway", 16),
          ("poland", 17),
          ("portugal", 18),
          ("slovenia", 19),
          ("spain", 20),
          ("sweden", 21),
          ("switzerland", 22),
          ("united-kingdom", 23),
          ("japan", 24),
          ("united-states-ext", 25),
          ("mexico", 26),
          ("thailand", 27),
          ("greece", 28),
          ("israel", 29),
          ("south-africa", 30),
          ("brazil", 31),
          ("india", 32),
          ("singapore", 33),
          ("malaysia", 34),
          ("korea", 35),
          ("hong-kong", 36),
          ("china", 37),
          ("macao", 38),
          ("united-states-outdoor", 39),
          ("united-status-weather-radar", 40),
          ("russia", 41),
          ("united-states-non-dfs", 42),
          ("united-arab-emirates", 43),
          ("argentina", 44),
          ("bahrain", 45),
          ("brunei", 46),
          ("bahamas", 47),
          ("chile", 48),
          ("colombia", 49),
          ("dominican-republic", 50),
          ("egypt", 51),
          ("indonesia", 52),
          ("kuwait", 53),
          ("lebanon", 54),
          ("oman", 55),
          ("peru", 56),
          ("philippines", 57),
          ("qatar", 58),
          ("saudi-arabia", 59),
          ("taiwan", 60),
          ("turkey", 61),
          ("trinidad", 62),
          ("ukraine", 63),
          ("venezuela", 64))
    )


_GlobalCountryCode_Type.__name__ = "Integer32"
_GlobalCountryCode_Object = MibScalar
globalCountryCode = _GlobalCountryCode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 19),
    _GlobalCountryCode_Type()
)
globalCountryCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalCountryCode.setStatus("current")


class _GlobalSharpCell_Type(Integer32):
    """Custom type globalSharpCell based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalSharpCell_Type.__name__ = "Integer32"
_GlobalSharpCell_Object = MibScalar
globalSharpCell = _GlobalSharpCell_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 20),
    _GlobalSharpCell_Type()
)
globalSharpCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalSharpCell.setStatus("current")


class _GlobalIAPMaxPhones_Type(Integer32):
    """Custom type globalIAPMaxPhones based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_GlobalIAPMaxPhones_Type.__name__ = "Integer32"
_GlobalIAPMaxPhones_Object = MibScalar
globalIAPMaxPhones = _GlobalIAPMaxPhones_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 21),
    _GlobalIAPMaxPhones_Type()
)
globalIAPMaxPhones.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPMaxPhones.setStatus("current")
_GlobalNumStations_Type = Integer32
_GlobalNumStations_Object = MibScalar
globalNumStations = _GlobalNumStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 22),
    _GlobalNumStations_Type()
)
globalNumStations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalNumStations.setStatus("current")


class _GlobalBroadcastRates_Type(Integer32):
    """Custom type globalBroadcastRates based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("standard", 0),
          ("optimized", 1))
    )


_GlobalBroadcastRates_Type.__name__ = "Integer32"
_GlobalBroadcastRates_Object = MibScalar
globalBroadcastRates = _GlobalBroadcastRates_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 23),
    _GlobalBroadcastRates_Type()
)
globalBroadcastRates.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalBroadcastRates.setStatus("current")
_AutoCell_ObjectIdentity = ObjectIdentity
autoCell = _AutoCell_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24)
)


class _AutoCellEnable_Type(Integer32):
    """Custom type autoCellEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_AutoCellEnable_Type.__name__ = "Integer32"
_AutoCellEnable_Object = MibScalar
autoCellEnable = _AutoCellEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 1),
    _AutoCellEnable_Type()
)
autoCellEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCellEnable.setStatus("current")


class _AutoCellOverlap_Type(Integer32):
    """Custom type autoCellOverlap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_AutoCellOverlap_Type.__name__ = "Integer32"
_AutoCellOverlap_Object = MibScalar
autoCellOverlap = _AutoCellOverlap_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 2),
    _AutoCellOverlap_Type()
)
autoCellOverlap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCellOverlap.setStatus("current")


class _AutoCellPeriod_Type(Integer32):
    """Custom type autoCellPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3000000),
    )


_AutoCellPeriod_Type.__name__ = "Integer32"
_AutoCellPeriod_Object = MibScalar
autoCellPeriod = _AutoCellPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 3),
    _AutoCellPeriod_Type()
)
autoCellPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCellPeriod.setStatus("current")


class _AutoCellMinTxPwr_Type(Integer32):
    """Custom type autoCellMinTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_AutoCellMinTxPwr_Type.__name__ = "Integer32"
_AutoCellMinTxPwr_Object = MibScalar
autoCellMinTxPwr = _AutoCellMinTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 4),
    _AutoCellMinTxPwr_Type()
)
autoCellMinTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCellMinTxPwr.setStatus("current")


class _AutoCellByChan_Type(Integer32):
    """Custom type autoCellByChan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_AutoCellByChan_Type.__name__ = "Integer32"
_AutoCellByChan_Object = MibScalar
autoCellByChan = _AutoCellByChan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 5),
    _AutoCellByChan_Type()
)
autoCellByChan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCellByChan.setStatus("current")


class _GlobalPublicSafety_Type(Integer32):
    """Custom type globalPublicSafety based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalPublicSafety_Type.__name__ = "Integer32"
_GlobalPublicSafety_Object = MibScalar
globalPublicSafety = _GlobalPublicSafety_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 25),
    _GlobalPublicSafety_Type()
)
globalPublicSafety.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalPublicSafety.setStatus("current")


class _GlobalDot11hSupport_Type(Integer32):
    """Custom type globalDot11hSupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalDot11hSupport_Type.__name__ = "Integer32"
_GlobalDot11hSupport_Object = MibScalar
globalDot11hSupport = _GlobalDot11hSupport_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 26),
    _GlobalDot11hSupport_Type()
)
globalDot11hSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalDot11hSupport.setStatus("current")


class _GlobalLoopbackTest_Type(Integer32):
    """Custom type globalLoopbackTest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("alert-only", 1),
          ("repair-without-reboot", 2),
          ("reboot-allowed", 3))
    )


_GlobalLoopbackTest_Type.__name__ = "Integer32"
_GlobalLoopbackTest_Object = MibScalar
globalLoopbackTest = _GlobalLoopbackTest_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 27),
    _GlobalLoopbackTest_Type()
)
globalLoopbackTest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalLoopbackTest.setStatus("current")


class _GlobalArpFilter_Type(Integer32):
    """Custom type globalArpFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("passthru", 1),
          ("proxy", 2))
    )


_GlobalArpFilter_Type.__name__ = "Integer32"
_GlobalArpFilter_Object = MibScalar
globalArpFilter = _GlobalArpFilter_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 28),
    _GlobalArpFilter_Type()
)
globalArpFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalArpFilter.setStatus("current")


class _GlobalIAPChannelReset_Type(Integer32):
    """Custom type globalIAPChannelReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GlobalIAPChannelReset_Type.__name__ = "Integer32"
_GlobalIAPChannelReset_Object = MibScalar
globalIAPChannelReset = _GlobalIAPChannelReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 29),
    _GlobalIAPChannelReset_Type()
)
globalIAPChannelReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIAPChannelReset.setStatus("current")


class _GlobalWfaMode_Type(Integer32):
    """Custom type globalWfaMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalWfaMode_Type.__name__ = "Integer32"
_GlobalWfaMode_Object = MibScalar
globalWfaMode = _GlobalWfaMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 30),
    _GlobalWfaMode_Type()
)
globalWfaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalWfaMode.setStatus("current")


class _GlobalMaxStations_Type(Integer32):
    """Custom type globalMaxStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3840),
    )


_GlobalMaxStations_Type.__name__ = "Integer32"
_GlobalMaxStations_Object = MibScalar
globalMaxStations = _GlobalMaxStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 31),
    _GlobalMaxStations_Type()
)
globalMaxStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMaxStations.setStatus("current")


class _GlobalMulticastMode_Type(Integer32):
    """Custom type globalMulticastMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("standard", 0),
          ("convert", 1),
          ("snoop", 2),
          ("prune", 3))
    )


_GlobalMulticastMode_Type.__name__ = "Integer32"
_GlobalMulticastMode_Object = MibScalar
globalMulticastMode = _GlobalMulticastMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 32),
    _GlobalMulticastMode_Type()
)
globalMulticastMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMulticastMode.setStatus("current")
_Ids_ObjectIdentity = ObjectIdentity
ids = _Ids_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33)
)
_IdsEventTable_Object = MibTable
idsEventTable = _IdsEventTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1)
)
if mibBuilder.loadTexts:
    idsEventTable.setStatus("current")
_IdsEventEntry_Object = MibTableRow
idsEventEntry = _IdsEventEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1)
)
idsEventEntry.setIndexNames(
    (0, "XIRRUS-MIB", "idsEventIndex"),
)
if mibBuilder.loadTexts:
    idsEventEntry.setStatus("current")
_IdsEventIndex_Type = Integer32
_IdsEventIndex_Object = MibTableColumn
idsEventIndex = _IdsEventIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 1),
    _IdsEventIndex_Type()
)
idsEventIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    idsEventIndex.setStatus("current")


class _IdsEventId_Type(Integer32):
    """Custom type idsEventId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("beacon-flood", 1),
          ("probe-req-flood", 2),
          ("auth-flood", 3),
          ("assoc-flood", 4),
          ("disassoc-flood", 5),
          ("deauth-flood", 6),
          ("eap-flood", 7),
          ("ap-impersonation", 8),
          ("disassoc-attack", 9),
          ("deauth-attack", 10),
          ("duration-attack", 11),
          ("mic-error-attack", 12),
          ("null-probe-resp", 13),
          ("seq-num-anomaly", 14),
          ("sta-impersonation", 15),
          ("sta-broadcast", 16),
          ("evil-twin-attack", 17),
          ("rf-jamming", 18))
    )


_IdsEventId_Type.__name__ = "Integer32"
_IdsEventId_Object = MibTableColumn
idsEventId = _IdsEventId_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 2),
    _IdsEventId_Type()
)
idsEventId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventId.setStatus("current")
_IdsEventTime_Type = DisplayString
_IdsEventTime_Object = MibTableColumn
idsEventTime = _IdsEventTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 3),
    _IdsEventTime_Type()
)
idsEventTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventTime.setStatus("current")
_IdsEventTimestamp_Type = Counter32
_IdsEventTimestamp_Object = MibTableColumn
idsEventTimestamp = _IdsEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 4),
    _IdsEventTimestamp_Type()
)
idsEventTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventTimestamp.setStatus("current")
_IdsEventIAP_Type = DisplayString
_IdsEventIAP_Object = MibTableColumn
idsEventIAP = _IdsEventIAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 5),
    _IdsEventIAP_Type()
)
idsEventIAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventIAP.setStatus("current")
_IdsEventChannel_Type = Integer32
_IdsEventChannel_Object = MibTableColumn
idsEventChannel = _IdsEventChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 6),
    _IdsEventChannel_Type()
)
idsEventChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventChannel.setStatus("current")
_IdsEventPeriod_Type = Counter32
_IdsEventPeriod_Object = MibTableColumn
idsEventPeriod = _IdsEventPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 7),
    _IdsEventPeriod_Type()
)
idsEventPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventPeriod.setStatus("current")
_IdsEventCurPackets_Type = Counter32
_IdsEventCurPackets_Object = MibTableColumn
idsEventCurPackets = _IdsEventCurPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 8),
    _IdsEventCurPackets_Type()
)
idsEventCurPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventCurPackets.setStatus("current")
_IdsEventAvgPackets_Type = Counter32
_IdsEventAvgPackets_Object = MibTableColumn
idsEventAvgPackets = _IdsEventAvgPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 9),
    _IdsEventAvgPackets_Type()
)
idsEventAvgPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventAvgPackets.setStatus("current")
_IdsEventMaxPackets_Type = Counter32
_IdsEventMaxPackets_Object = MibTableColumn
idsEventMaxPackets = _IdsEventMaxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 10),
    _IdsEventMaxPackets_Type()
)
idsEventMaxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventMaxPackets.setStatus("current")
_IdsEventMacAddress_Type = DisplayString
_IdsEventMacAddress_Object = MibTableColumn
idsEventMacAddress = _IdsEventMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 11),
    _IdsEventMacAddress_Type()
)
idsEventMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventMacAddress.setStatus("current")
_IdsEventSSID_Type = DisplayString
_IdsEventSSID_Object = MibTableColumn
idsEventSSID = _IdsEventSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 12),
    _IdsEventSSID_Type()
)
idsEventSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idsEventSSID.setStatus("current")
_IdsDosAttack_ObjectIdentity = ObjectIdentity
idsDosAttack = _IdsDosAttack_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2)
)


class _IdsBeaconFloodMode_Type(Integer32):
    """Custom type idsBeaconFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsBeaconFloodMode_Type.__name__ = "Integer32"
_IdsBeaconFloodMode_Object = MibScalar
idsBeaconFloodMode = _IdsBeaconFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 1),
    _IdsBeaconFloodMode_Type()
)
idsBeaconFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsBeaconFloodMode.setStatus("current")


class _IdsBeaconFloodThreshold_Type(Integer32):
    """Custom type idsBeaconFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsBeaconFloodThreshold_Type.__name__ = "Integer32"
_IdsBeaconFloodThreshold_Object = MibScalar
idsBeaconFloodThreshold = _IdsBeaconFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 2),
    _IdsBeaconFloodThreshold_Type()
)
idsBeaconFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsBeaconFloodThreshold.setStatus("current")


class _IdsBeaconFloodPeriod_Type(Integer32):
    """Custom type idsBeaconFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsBeaconFloodPeriod_Type.__name__ = "Integer32"
_IdsBeaconFloodPeriod_Object = MibScalar
idsBeaconFloodPeriod = _IdsBeaconFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 3),
    _IdsBeaconFloodPeriod_Type()
)
idsBeaconFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsBeaconFloodPeriod.setStatus("current")


class _IdsProbeReqFloodMode_Type(Integer32):
    """Custom type idsProbeReqFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsProbeReqFloodMode_Type.__name__ = "Integer32"
_IdsProbeReqFloodMode_Object = MibScalar
idsProbeReqFloodMode = _IdsProbeReqFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 4),
    _IdsProbeReqFloodMode_Type()
)
idsProbeReqFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsProbeReqFloodMode.setStatus("current")


class _IdsProbeReqFloodThreshold_Type(Integer32):
    """Custom type idsProbeReqFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsProbeReqFloodThreshold_Type.__name__ = "Integer32"
_IdsProbeReqFloodThreshold_Object = MibScalar
idsProbeReqFloodThreshold = _IdsProbeReqFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 5),
    _IdsProbeReqFloodThreshold_Type()
)
idsProbeReqFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsProbeReqFloodThreshold.setStatus("current")


class _IdsProbeReqFloodPeriod_Type(Integer32):
    """Custom type idsProbeReqFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsProbeReqFloodPeriod_Type.__name__ = "Integer32"
_IdsProbeReqFloodPeriod_Object = MibScalar
idsProbeReqFloodPeriod = _IdsProbeReqFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 6),
    _IdsProbeReqFloodPeriod_Type()
)
idsProbeReqFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsProbeReqFloodPeriod.setStatus("current")


class _IdsAuthFloodMode_Type(Integer32):
    """Custom type idsAuthFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsAuthFloodMode_Type.__name__ = "Integer32"
_IdsAuthFloodMode_Object = MibScalar
idsAuthFloodMode = _IdsAuthFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 7),
    _IdsAuthFloodMode_Type()
)
idsAuthFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAuthFloodMode.setStatus("current")


class _IdsAuthFloodThreshold_Type(Integer32):
    """Custom type idsAuthFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsAuthFloodThreshold_Type.__name__ = "Integer32"
_IdsAuthFloodThreshold_Object = MibScalar
idsAuthFloodThreshold = _IdsAuthFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 8),
    _IdsAuthFloodThreshold_Type()
)
idsAuthFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAuthFloodThreshold.setStatus("current")


class _IdsAuthFloodPeriod_Type(Integer32):
    """Custom type idsAuthFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsAuthFloodPeriod_Type.__name__ = "Integer32"
_IdsAuthFloodPeriod_Object = MibScalar
idsAuthFloodPeriod = _IdsAuthFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 9),
    _IdsAuthFloodPeriod_Type()
)
idsAuthFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAuthFloodPeriod.setStatus("current")


class _IdsAssocFloodMode_Type(Integer32):
    """Custom type idsAssocFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsAssocFloodMode_Type.__name__ = "Integer32"
_IdsAssocFloodMode_Object = MibScalar
idsAssocFloodMode = _IdsAssocFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 10),
    _IdsAssocFloodMode_Type()
)
idsAssocFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAssocFloodMode.setStatus("current")


class _IdsAssocFloodThreshold_Type(Integer32):
    """Custom type idsAssocFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsAssocFloodThreshold_Type.__name__ = "Integer32"
_IdsAssocFloodThreshold_Object = MibScalar
idsAssocFloodThreshold = _IdsAssocFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 11),
    _IdsAssocFloodThreshold_Type()
)
idsAssocFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAssocFloodThreshold.setStatus("current")


class _IdsAssocFloodPeriod_Type(Integer32):
    """Custom type idsAssocFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsAssocFloodPeriod_Type.__name__ = "Integer32"
_IdsAssocFloodPeriod_Object = MibScalar
idsAssocFloodPeriod = _IdsAssocFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 12),
    _IdsAssocFloodPeriod_Type()
)
idsAssocFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAssocFloodPeriod.setStatus("current")


class _IdsDisassocFloodMode_Type(Integer32):
    """Custom type idsDisassocFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsDisassocFloodMode_Type.__name__ = "Integer32"
_IdsDisassocFloodMode_Object = MibScalar
idsDisassocFloodMode = _IdsDisassocFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 13),
    _IdsDisassocFloodMode_Type()
)
idsDisassocFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocFloodMode.setStatus("current")


class _IdsDisassocFloodThreshold_Type(Integer32):
    """Custom type idsDisassocFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsDisassocFloodThreshold_Type.__name__ = "Integer32"
_IdsDisassocFloodThreshold_Object = MibScalar
idsDisassocFloodThreshold = _IdsDisassocFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 14),
    _IdsDisassocFloodThreshold_Type()
)
idsDisassocFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocFloodThreshold.setStatus("current")


class _IdsDisassocFloodPeriod_Type(Integer32):
    """Custom type idsDisassocFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsDisassocFloodPeriod_Type.__name__ = "Integer32"
_IdsDisassocFloodPeriod_Object = MibScalar
idsDisassocFloodPeriod = _IdsDisassocFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 15),
    _IdsDisassocFloodPeriod_Type()
)
idsDisassocFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocFloodPeriod.setStatus("current")


class _IdsDeauthFloodMode_Type(Integer32):
    """Custom type idsDeauthFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsDeauthFloodMode_Type.__name__ = "Integer32"
_IdsDeauthFloodMode_Object = MibScalar
idsDeauthFloodMode = _IdsDeauthFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 16),
    _IdsDeauthFloodMode_Type()
)
idsDeauthFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthFloodMode.setStatus("current")


class _IdsDeauthFloodThreshold_Type(Integer32):
    """Custom type idsDeauthFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsDeauthFloodThreshold_Type.__name__ = "Integer32"
_IdsDeauthFloodThreshold_Object = MibScalar
idsDeauthFloodThreshold = _IdsDeauthFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 17),
    _IdsDeauthFloodThreshold_Type()
)
idsDeauthFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthFloodThreshold.setStatus("current")


class _IdsDeauthFloodPeriod_Type(Integer32):
    """Custom type idsDeauthFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsDeauthFloodPeriod_Type.__name__ = "Integer32"
_IdsDeauthFloodPeriod_Object = MibScalar
idsDeauthFloodPeriod = _IdsDeauthFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 18),
    _IdsDeauthFloodPeriod_Type()
)
idsDeauthFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthFloodPeriod.setStatus("current")


class _IdsEAPFloodMode_Type(Integer32):
    """Custom type idsEAPFloodMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("manual", 1),
          ("auto", 2))
    )


_IdsEAPFloodMode_Type.__name__ = "Integer32"
_IdsEAPFloodMode_Object = MibScalar
idsEAPFloodMode = _IdsEAPFloodMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 19),
    _IdsEAPFloodMode_Type()
)
idsEAPFloodMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsEAPFloodMode.setStatus("current")


class _IdsEAPFloodThreshold_Type(Integer32):
    """Custom type idsEAPFloodThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsEAPFloodThreshold_Type.__name__ = "Integer32"
_IdsEAPFloodThreshold_Object = MibScalar
idsEAPFloodThreshold = _IdsEAPFloodThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 20),
    _IdsEAPFloodThreshold_Type()
)
idsEAPFloodThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsEAPFloodThreshold.setStatus("current")


class _IdsEAPFloodPeriod_Type(Integer32):
    """Custom type idsEAPFloodPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsEAPFloodPeriod_Type.__name__ = "Integer32"
_IdsEAPFloodPeriod_Object = MibScalar
idsEAPFloodPeriod = _IdsEAPFloodPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 21),
    _IdsEAPFloodPeriod_Type()
)
idsEAPFloodPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsEAPFloodPeriod.setStatus("current")


class _IdsNullProbeRespEnable_Type(Integer32):
    """Custom type idsNullProbeRespEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsNullProbeRespEnable_Type.__name__ = "Integer32"
_IdsNullProbeRespEnable_Object = MibScalar
idsNullProbeRespEnable = _IdsNullProbeRespEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 22),
    _IdsNullProbeRespEnable_Type()
)
idsNullProbeRespEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsNullProbeRespEnable.setStatus("current")


class _IdsNullProbeRespThreshold_Type(Integer32):
    """Custom type idsNullProbeRespThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsNullProbeRespThreshold_Type.__name__ = "Integer32"
_IdsNullProbeRespThreshold_Object = MibScalar
idsNullProbeRespThreshold = _IdsNullProbeRespThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 23),
    _IdsNullProbeRespThreshold_Type()
)
idsNullProbeRespThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsNullProbeRespThreshold.setStatus("current")


class _IdsNullProbeRespPeriod_Type(Integer32):
    """Custom type idsNullProbeRespPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsNullProbeRespPeriod_Type.__name__ = "Integer32"
_IdsNullProbeRespPeriod_Object = MibScalar
idsNullProbeRespPeriod = _IdsNullProbeRespPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 24),
    _IdsNullProbeRespPeriod_Type()
)
idsNullProbeRespPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsNullProbeRespPeriod.setStatus("current")


class _IdsMICErrorAttackEnable_Type(Integer32):
    """Custom type idsMICErrorAttackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsMICErrorAttackEnable_Type.__name__ = "Integer32"
_IdsMICErrorAttackEnable_Object = MibScalar
idsMICErrorAttackEnable = _IdsMICErrorAttackEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 25),
    _IdsMICErrorAttackEnable_Type()
)
idsMICErrorAttackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsMICErrorAttackEnable.setStatus("current")


class _IdsMICErrorAttackThreshold_Type(Integer32):
    """Custom type idsMICErrorAttackThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsMICErrorAttackThreshold_Type.__name__ = "Integer32"
_IdsMICErrorAttackThreshold_Object = MibScalar
idsMICErrorAttackThreshold = _IdsMICErrorAttackThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 26),
    _IdsMICErrorAttackThreshold_Type()
)
idsMICErrorAttackThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsMICErrorAttackThreshold.setStatus("current")


class _IdsMICErrorAttackPeriod_Type(Integer32):
    """Custom type idsMICErrorAttackPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsMICErrorAttackPeriod_Type.__name__ = "Integer32"
_IdsMICErrorAttackPeriod_Object = MibScalar
idsMICErrorAttackPeriod = _IdsMICErrorAttackPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 27),
    _IdsMICErrorAttackPeriod_Type()
)
idsMICErrorAttackPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsMICErrorAttackPeriod.setStatus("current")


class _IdsDisassocAttackEnable_Type(Integer32):
    """Custom type idsDisassocAttackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsDisassocAttackEnable_Type.__name__ = "Integer32"
_IdsDisassocAttackEnable_Object = MibScalar
idsDisassocAttackEnable = _IdsDisassocAttackEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 28),
    _IdsDisassocAttackEnable_Type()
)
idsDisassocAttackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocAttackEnable.setStatus("current")


class _IdsDisassocAttackThreshold_Type(Integer32):
    """Custom type idsDisassocAttackThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsDisassocAttackThreshold_Type.__name__ = "Integer32"
_IdsDisassocAttackThreshold_Object = MibScalar
idsDisassocAttackThreshold = _IdsDisassocAttackThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 29),
    _IdsDisassocAttackThreshold_Type()
)
idsDisassocAttackThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocAttackThreshold.setStatus("current")


class _IdsDisassocAttackPeriod_Type(Integer32):
    """Custom type idsDisassocAttackPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsDisassocAttackPeriod_Type.__name__ = "Integer32"
_IdsDisassocAttackPeriod_Object = MibScalar
idsDisassocAttackPeriod = _IdsDisassocAttackPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 30),
    _IdsDisassocAttackPeriod_Type()
)
idsDisassocAttackPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDisassocAttackPeriod.setStatus("current")


class _IdsDeauthAttackEnable_Type(Integer32):
    """Custom type idsDeauthAttackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsDeauthAttackEnable_Type.__name__ = "Integer32"
_IdsDeauthAttackEnable_Object = MibScalar
idsDeauthAttackEnable = _IdsDeauthAttackEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 31),
    _IdsDeauthAttackEnable_Type()
)
idsDeauthAttackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthAttackEnable.setStatus("current")


class _IdsDeauthAttackThreshold_Type(Integer32):
    """Custom type idsDeauthAttackThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsDeauthAttackThreshold_Type.__name__ = "Integer32"
_IdsDeauthAttackThreshold_Object = MibScalar
idsDeauthAttackThreshold = _IdsDeauthAttackThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 32),
    _IdsDeauthAttackThreshold_Type()
)
idsDeauthAttackThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthAttackThreshold.setStatus("current")


class _IdsDeauthAttackPeriod_Type(Integer32):
    """Custom type idsDeauthAttackPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsDeauthAttackPeriod_Type.__name__ = "Integer32"
_IdsDeauthAttackPeriod_Object = MibScalar
idsDeauthAttackPeriod = _IdsDeauthAttackPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 33),
    _IdsDeauthAttackPeriod_Type()
)
idsDeauthAttackPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDeauthAttackPeriod.setStatus("current")


class _IdsDurationAttackEnable_Type(Integer32):
    """Custom type idsDurationAttackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsDurationAttackEnable_Type.__name__ = "Integer32"
_IdsDurationAttackEnable_Object = MibScalar
idsDurationAttackEnable = _IdsDurationAttackEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 34),
    _IdsDurationAttackEnable_Type()
)
idsDurationAttackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDurationAttackEnable.setStatus("current")


class _IdsDurationAttackThreshold_Type(Integer32):
    """Custom type idsDurationAttackThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsDurationAttackThreshold_Type.__name__ = "Integer32"
_IdsDurationAttackThreshold_Object = MibScalar
idsDurationAttackThreshold = _IdsDurationAttackThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 35),
    _IdsDurationAttackThreshold_Type()
)
idsDurationAttackThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDurationAttackThreshold.setStatus("current")


class _IdsDurationAttackPeriod_Type(Integer32):
    """Custom type idsDurationAttackPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_IdsDurationAttackPeriod_Type.__name__ = "Integer32"
_IdsDurationAttackPeriod_Object = MibScalar
idsDurationAttackPeriod = _IdsDurationAttackPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 36),
    _IdsDurationAttackPeriod_Type()
)
idsDurationAttackPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDurationAttackPeriod.setStatus("current")


class _IdsDurationAttackNAV_Type(Integer32):
    """Custom type idsDurationAttackNAV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_IdsDurationAttackNAV_Type.__name__ = "Integer32"
_IdsDurationAttackNAV_Object = MibScalar
idsDurationAttackNAV = _IdsDurationAttackNAV_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 37),
    _IdsDurationAttackNAV_Type()
)
idsDurationAttackNAV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsDurationAttackNAV.setStatus("current")
_IdsImpersonation_ObjectIdentity = ObjectIdentity
idsImpersonation = _IdsImpersonation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3)
)


class _IdsAPImpersonationEnable_Type(Integer32):
    """Custom type idsAPImpersonationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsAPImpersonationEnable_Type.__name__ = "Integer32"
_IdsAPImpersonationEnable_Object = MibScalar
idsAPImpersonationEnable = _IdsAPImpersonationEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 1),
    _IdsAPImpersonationEnable_Type()
)
idsAPImpersonationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAPImpersonationEnable.setStatus("current")


class _IdsAPImpersonationThreshold_Type(Integer32):
    """Custom type idsAPImpersonationThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsAPImpersonationThreshold_Type.__name__ = "Integer32"
_IdsAPImpersonationThreshold_Object = MibScalar
idsAPImpersonationThreshold = _IdsAPImpersonationThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 2),
    _IdsAPImpersonationThreshold_Type()
)
idsAPImpersonationThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAPImpersonationThreshold.setStatus("current")


class _IdsAPImpersonationPeriod_Type(Integer32):
    """Custom type idsAPImpersonationPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_IdsAPImpersonationPeriod_Type.__name__ = "Integer32"
_IdsAPImpersonationPeriod_Object = MibScalar
idsAPImpersonationPeriod = _IdsAPImpersonationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 3),
    _IdsAPImpersonationPeriod_Type()
)
idsAPImpersonationPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsAPImpersonationPeriod.setStatus("current")


class _IdsStationImpersonationEnable_Type(Integer32):
    """Custom type idsStationImpersonationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsStationImpersonationEnable_Type.__name__ = "Integer32"
_IdsStationImpersonationEnable_Object = MibScalar
idsStationImpersonationEnable = _IdsStationImpersonationEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 4),
    _IdsStationImpersonationEnable_Type()
)
idsStationImpersonationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsStationImpersonationEnable.setStatus("current")


class _IdsStationImpersonationThreshold_Type(Integer32):
    """Custom type idsStationImpersonationThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000000),
    )


_IdsStationImpersonationThreshold_Type.__name__ = "Integer32"
_IdsStationImpersonationThreshold_Object = MibScalar
idsStationImpersonationThreshold = _IdsStationImpersonationThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 5),
    _IdsStationImpersonationThreshold_Type()
)
idsStationImpersonationThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsStationImpersonationThreshold.setStatus("current")


class _IdsStationImpersonationPeriod_Type(Integer32):
    """Custom type idsStationImpersonationPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_IdsStationImpersonationPeriod_Type.__name__ = "Integer32"
_IdsStationImpersonationPeriod_Object = MibScalar
idsStationImpersonationPeriod = _IdsStationImpersonationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 6),
    _IdsStationImpersonationPeriod_Type()
)
idsStationImpersonationPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsStationImpersonationPeriod.setStatus("current")


class _IdsSeqNumAnomalyMode_Type(Integer32):
    """Custom type idsSeqNumAnomalyMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("mgmt", 1),
          ("data", 2))
    )


_IdsSeqNumAnomalyMode_Type.__name__ = "Integer32"
_IdsSeqNumAnomalyMode_Object = MibScalar
idsSeqNumAnomalyMode = _IdsSeqNumAnomalyMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 7),
    _IdsSeqNumAnomalyMode_Type()
)
idsSeqNumAnomalyMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsSeqNumAnomalyMode.setStatus("current")


class _IdsEvilTwinAttackEnable_Type(Integer32):
    """Custom type idsEvilTwinAttackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IdsEvilTwinAttackEnable_Type.__name__ = "Integer32"
_IdsEvilTwinAttackEnable_Object = MibScalar
idsEvilTwinAttackEnable = _IdsEvilTwinAttackEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 8),
    _IdsEvilTwinAttackEnable_Type()
)
idsEvilTwinAttackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsEvilTwinAttackEnable.setStatus("current")


class _IdsSeqNumAnomalyGap_Type(Integer32):
    """Custom type idsSeqNumAnomalyGap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1000),
    )


_IdsSeqNumAnomalyGap_Type.__name__ = "Integer32"
_IdsSeqNumAnomalyGap_Object = MibScalar
idsSeqNumAnomalyGap = _IdsSeqNumAnomalyGap_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 9),
    _IdsSeqNumAnomalyGap_Type()
)
idsSeqNumAnomalyGap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsSeqNumAnomalyGap.setStatus("current")


class _IdsEventTablePeriod_Type(Counter32):
    """Custom type idsEventTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_IdsEventTablePeriod_Type.__name__ = "Counter32"
_IdsEventTablePeriod_Object = MibScalar
idsEventTablePeriod = _IdsEventTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 4),
    _IdsEventTablePeriod_Type()
)
idsEventTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    idsEventTablePeriod.setStatus("current")


class _GlobalAutoBandEnable_Type(Integer32):
    """Custom type globalAutoBandEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_GlobalAutoBandEnable_Type.__name__ = "Integer32"
_GlobalAutoBandEnable_Object = MibScalar
globalAutoBandEnable = _GlobalAutoBandEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 34),
    _GlobalAutoBandEnable_Type()
)
globalAutoBandEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalAutoBandEnable.setStatus("current")


class _GlobalWmmPowerSave_Type(Integer32):
    """Custom type globalWmmPowerSave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalWmmPowerSave_Type.__name__ = "Integer32"
_GlobalWmmPowerSave_Object = MibScalar
globalWmmPowerSave = _GlobalWmmPowerSave_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 35),
    _GlobalWmmPowerSave_Type()
)
globalWmmPowerSave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalWmmPowerSave.setStatus("current")


class _GlobalDscpMappingMode_Type(Integer32):
    """Custom type globalDscpMappingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalDscpMappingMode_Type.__name__ = "Integer32"
_GlobalDscpMappingMode_Object = MibScalar
globalDscpMappingMode = _GlobalDscpMappingMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 36),
    _GlobalDscpMappingMode_Type()
)
globalDscpMappingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalDscpMappingMode.setStatus("current")
_GlobalDscpMappingTable_Object = MibTable
globalDscpMappingTable = _GlobalDscpMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37)
)
if mibBuilder.loadTexts:
    globalDscpMappingTable.setStatus("current")
_GlobalDscpMappingEntry_Object = MibTableRow
globalDscpMappingEntry = _GlobalDscpMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1)
)
globalDscpMappingEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalDscpMappingIndex"),
)
if mibBuilder.loadTexts:
    globalDscpMappingEntry.setStatus("current")
_GlobalDscpMappingIndex_Type = Integer32
_GlobalDscpMappingIndex_Object = MibTableColumn
globalDscpMappingIndex = _GlobalDscpMappingIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 1),
    _GlobalDscpMappingIndex_Type()
)
globalDscpMappingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalDscpMappingIndex.setStatus("current")
_GlobalDscpMappingDscp_Type = Integer32
_GlobalDscpMappingDscp_Object = MibTableColumn
globalDscpMappingDscp = _GlobalDscpMappingDscp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 2),
    _GlobalDscpMappingDscp_Type()
)
globalDscpMappingDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalDscpMappingDscp.setStatus("current")


class _GlobalDscpMappingQos_Type(Integer32):
    """Custom type globalDscpMappingQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_GlobalDscpMappingQos_Type.__name__ = "Integer32"
_GlobalDscpMappingQos_Object = MibTableColumn
globalDscpMappingQos = _GlobalDscpMappingQos_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 3),
    _GlobalDscpMappingQos_Type()
)
globalDscpMappingQos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalDscpMappingQos.setStatus("current")
_GlobalMulticastExcludeTable_Object = MibTable
globalMulticastExcludeTable = _GlobalMulticastExcludeTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38)
)
if mibBuilder.loadTexts:
    globalMulticastExcludeTable.setStatus("current")
_GlobalMulticastExcludeEntry_Object = MibTableRow
globalMulticastExcludeEntry = _GlobalMulticastExcludeEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1)
)
globalMulticastExcludeEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalMulticastExcludeIndex"),
)
if mibBuilder.loadTexts:
    globalMulticastExcludeEntry.setStatus("current")
_GlobalMulticastExcludeIndex_Type = Integer32
_GlobalMulticastExcludeIndex_Object = MibTableColumn
globalMulticastExcludeIndex = _GlobalMulticastExcludeIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 1),
    _GlobalMulticastExcludeIndex_Type()
)
globalMulticastExcludeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalMulticastExcludeIndex.setStatus("current")
_GlobalMulticastExcludeIpAddress_Type = IpAddress
_GlobalMulticastExcludeIpAddress_Object = MibTableColumn
globalMulticastExcludeIpAddress = _GlobalMulticastExcludeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 2),
    _GlobalMulticastExcludeIpAddress_Type()
)
globalMulticastExcludeIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastExcludeIpAddress.setStatus("current")
_GlobalMulticastExcludeRowStatus_Type = RowStatus
_GlobalMulticastExcludeRowStatus_Object = MibTableColumn
globalMulticastExcludeRowStatus = _GlobalMulticastExcludeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 3),
    _GlobalMulticastExcludeRowStatus_Type()
)
globalMulticastExcludeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastExcludeRowStatus.setStatus("current")


class _GlobalMulticastExcludeTableReset_Type(Integer32):
    """Custom type globalMulticastExcludeTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GlobalMulticastExcludeTableReset_Type.__name__ = "Integer32"
_GlobalMulticastExcludeTableReset_Object = MibScalar
globalMulticastExcludeTableReset = _GlobalMulticastExcludeTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 39),
    _GlobalMulticastExcludeTableReset_Type()
)
globalMulticastExcludeTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMulticastExcludeTableReset.setStatus("current")
_RfMonitor_ObjectIdentity = ObjectIdentity
rfMonitor = _RfMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40)
)


class _RfMonitorMode_Type(Integer32):
    """Custom type rfMonitorMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("dedicated", 1),
          ("timeshare", 2))
    )


_RfMonitorMode_Type.__name__ = "Integer32"
_RfMonitorMode_Object = MibScalar
rfMonitorMode = _RfMonitorMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 1),
    _RfMonitorMode_Type()
)
rfMonitorMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rfMonitorMode.setStatus("current")


class _RfMonitorTimeshareScanInterval_Type(Integer32):
    """Custom type rfMonitorTimeshareScanInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 600),
    )


_RfMonitorTimeshareScanInterval_Type.__name__ = "Integer32"
_RfMonitorTimeshareScanInterval_Object = MibScalar
rfMonitorTimeshareScanInterval = _RfMonitorTimeshareScanInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 2),
    _RfMonitorTimeshareScanInterval_Type()
)
rfMonitorTimeshareScanInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rfMonitorTimeshareScanInterval.setStatus("current")


class _RfMonitorTimeshareStationThreshold_Type(Integer32):
    """Custom type rfMonitorTimeshareStationThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 240),
    )


_RfMonitorTimeshareStationThreshold_Type.__name__ = "Integer32"
_RfMonitorTimeshareStationThreshold_Object = MibScalar
rfMonitorTimeshareStationThreshold = _RfMonitorTimeshareStationThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 3),
    _RfMonitorTimeshareStationThreshold_Type()
)
rfMonitorTimeshareStationThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rfMonitorTimeshareStationThreshold.setStatus("current")


class _RfMonitorTimeshareTrafficThreshold_Type(Integer32):
    """Custom type rfMonitorTimeshareTrafficThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 50000),
    )


_RfMonitorTimeshareTrafficThreshold_Type.__name__ = "Integer32"
_RfMonitorTimeshareTrafficThreshold_Object = MibScalar
rfMonitorTimeshareTrafficThreshold = _RfMonitorTimeshareTrafficThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 4),
    _RfMonitorTimeshareTrafficThreshold_Type()
)
rfMonitorTimeshareTrafficThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rfMonitorTimeshareTrafficThreshold.setStatus("current")
_GlobalExtractStaInfoTable_Object = MibTable
globalExtractStaInfoTable = _GlobalExtractStaInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41)
)
if mibBuilder.loadTexts:
    globalExtractStaInfoTable.setStatus("current")
_GlobalExtractStaInfoEntry_Object = MibTableRow
globalExtractStaInfoEntry = _GlobalExtractStaInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1)
)
globalExtractStaInfoEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalExtractStaInfoIndex"),
)
if mibBuilder.loadTexts:
    globalExtractStaInfoEntry.setStatus("current")
_GlobalExtractStaInfoIndex_Type = Integer32
_GlobalExtractStaInfoIndex_Object = MibTableColumn
globalExtractStaInfoIndex = _GlobalExtractStaInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 1),
    _GlobalExtractStaInfoIndex_Type()
)
globalExtractStaInfoIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalExtractStaInfoIndex.setStatus("current")
_GlobalExtractStaInfoType_Type = DisplayString
_GlobalExtractStaInfoType_Object = MibTableColumn
globalExtractStaInfoType = _GlobalExtractStaInfoType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 2),
    _GlobalExtractStaInfoType_Type()
)
globalExtractStaInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalExtractStaInfoType.setStatus("current")


class _GlobalExtractStaInfoStatus_Type(Integer32):
    """Custom type globalExtractStaInfoStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_GlobalExtractStaInfoStatus_Type.__name__ = "Integer32"
_GlobalExtractStaInfoStatus_Object = MibTableColumn
globalExtractStaInfoStatus = _GlobalExtractStaInfoStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 3),
    _GlobalExtractStaInfoStatus_Type()
)
globalExtractStaInfoStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalExtractStaInfoStatus.setStatus("current")


class _GlobalStaAuthTimeout_Type(Integer32):
    """Custom type globalStaAuthTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 65535),
    )


_GlobalStaAuthTimeout_Type.__name__ = "Integer32"
_GlobalStaAuthTimeout_Object = MibScalar
globalStaAuthTimeout = _GlobalStaAuthTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 42),
    _GlobalStaAuthTimeout_Type()
)
globalStaAuthTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalStaAuthTimeout.setStatus("current")


class _GlobalIPv6Filter_Type(Integer32):
    """Custom type globalIPv6Filter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalIPv6Filter_Type.__name__ = "Integer32"
_GlobalIPv6Filter_Object = MibScalar
globalIPv6Filter = _GlobalIPv6Filter_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 43),
    _GlobalIPv6Filter_Type()
)
globalIPv6Filter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalIPv6Filter.setStatus("current")
_GlobalMulticastForwardingTable_Object = MibTable
globalMulticastForwardingTable = _GlobalMulticastForwardingTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44)
)
if mibBuilder.loadTexts:
    globalMulticastForwardingTable.setStatus("current")
_GlobalMulticastForwardingEntry_Object = MibTableRow
globalMulticastForwardingEntry = _GlobalMulticastForwardingEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1)
)
globalMulticastForwardingEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalMulticastForwardingIndex"),
)
if mibBuilder.loadTexts:
    globalMulticastForwardingEntry.setStatus("current")
_GlobalMulticastForwardingIndex_Type = Integer32
_GlobalMulticastForwardingIndex_Object = MibTableColumn
globalMulticastForwardingIndex = _GlobalMulticastForwardingIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 1),
    _GlobalMulticastForwardingIndex_Type()
)
globalMulticastForwardingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalMulticastForwardingIndex.setStatus("current")
_GlobalMulticastForwardingIpAddress_Type = IpAddress
_GlobalMulticastForwardingIpAddress_Object = MibTableColumn
globalMulticastForwardingIpAddress = _GlobalMulticastForwardingIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 2),
    _GlobalMulticastForwardingIpAddress_Type()
)
globalMulticastForwardingIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastForwardingIpAddress.setStatus("current")
_GlobalMulticastForwardingRowStatus_Type = RowStatus
_GlobalMulticastForwardingRowStatus_Object = MibTableColumn
globalMulticastForwardingRowStatus = _GlobalMulticastForwardingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 3),
    _GlobalMulticastForwardingRowStatus_Type()
)
globalMulticastForwardingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastForwardingRowStatus.setStatus("current")


class _GlobalMulticastForwardingTableReset_Type(Integer32):
    """Custom type globalMulticastForwardingTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GlobalMulticastForwardingTableReset_Type.__name__ = "Integer32"
_GlobalMulticastForwardingTableReset_Object = MibScalar
globalMulticastForwardingTableReset = _GlobalMulticastForwardingTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 45),
    _GlobalMulticastForwardingTableReset_Type()
)
globalMulticastForwardingTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMulticastForwardingTableReset.setStatus("current")
_GlobalMulticastVlanForwardingTable_Object = MibTable
globalMulticastVlanForwardingTable = _GlobalMulticastVlanForwardingTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46)
)
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingTable.setStatus("current")
_GlobalMulticastVlanForwardingEntry_Object = MibTableRow
globalMulticastVlanForwardingEntry = _GlobalMulticastVlanForwardingEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1)
)
globalMulticastVlanForwardingEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalMulticastVlanForwardingIndex"),
)
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingEntry.setStatus("current")
_GlobalMulticastVlanForwardingIndex_Type = Integer32
_GlobalMulticastVlanForwardingIndex_Object = MibTableColumn
globalMulticastVlanForwardingIndex = _GlobalMulticastVlanForwardingIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 1),
    _GlobalMulticastVlanForwardingIndex_Type()
)
globalMulticastVlanForwardingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingIndex.setStatus("current")
_GlobalMulticastVlanForwardingVlanNumber_Type = Integer32
_GlobalMulticastVlanForwardingVlanNumber_Object = MibTableColumn
globalMulticastVlanForwardingVlanNumber = _GlobalMulticastVlanForwardingVlanNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 2),
    _GlobalMulticastVlanForwardingVlanNumber_Type()
)
globalMulticastVlanForwardingVlanNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingVlanNumber.setStatus("current")
_GlobalMulticastVlanForwardingRowStatus_Type = RowStatus
_GlobalMulticastVlanForwardingRowStatus_Object = MibTableColumn
globalMulticastVlanForwardingRowStatus = _GlobalMulticastVlanForwardingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 3),
    _GlobalMulticastVlanForwardingRowStatus_Type()
)
globalMulticastVlanForwardingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingRowStatus.setStatus("current")


class _GlobalMulticastVlanForwardingTableReset_Type(Integer32):
    """Custom type globalMulticastVlanForwardingTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GlobalMulticastVlanForwardingTableReset_Type.__name__ = "Integer32"
_GlobalMulticastVlanForwardingTableReset_Object = MibScalar
globalMulticastVlanForwardingTableReset = _GlobalMulticastVlanForwardingTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 47),
    _GlobalMulticastVlanForwardingTableReset_Type()
)
globalMulticastVlanForwardingTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMulticastVlanForwardingTableReset.setStatus("current")
_GlobalMulticastDnsFilteringTable_Object = MibTable
globalMulticastDnsFilteringTable = _GlobalMulticastDnsFilteringTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48)
)
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringTable.setStatus("current")
_GlobalMulticastDnsFilteringEntry_Object = MibTableRow
globalMulticastDnsFilteringEntry = _GlobalMulticastDnsFilteringEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1)
)
globalMulticastDnsFilteringEntry.setIndexNames(
    (0, "XIRRUS-MIB", "globalMulticastDnsFilteringIndex"),
)
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringEntry.setStatus("current")
_GlobalMulticastDnsFilteringIndex_Type = Integer32
_GlobalMulticastDnsFilteringIndex_Object = MibTableColumn
globalMulticastDnsFilteringIndex = _GlobalMulticastDnsFilteringIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 1),
    _GlobalMulticastDnsFilteringIndex_Type()
)
globalMulticastDnsFilteringIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringIndex.setStatus("current")


class _GlobalMulticastDnsFilteringName_Type(DisplayString):
    """Custom type globalMulticastDnsFilteringName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 24),
    )


_GlobalMulticastDnsFilteringName_Type.__name__ = "DisplayString"
_GlobalMulticastDnsFilteringName_Object = MibTableColumn
globalMulticastDnsFilteringName = _GlobalMulticastDnsFilteringName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 2),
    _GlobalMulticastDnsFilteringName_Type()
)
globalMulticastDnsFilteringName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringName.setStatus("current")
_GlobalMulticastDnsFilteringRowStatus_Type = RowStatus
_GlobalMulticastDnsFilteringRowStatus_Object = MibTableColumn
globalMulticastDnsFilteringRowStatus = _GlobalMulticastDnsFilteringRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 3),
    _GlobalMulticastDnsFilteringRowStatus_Type()
)
globalMulticastDnsFilteringRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringRowStatus.setStatus("current")


class _GlobalMulticastDnsFilteringTableReset_Type(Integer32):
    """Custom type globalMulticastDnsFilteringTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GlobalMulticastDnsFilteringTableReset_Type.__name__ = "Integer32"
_GlobalMulticastDnsFilteringTableReset_Object = MibScalar
globalMulticastDnsFilteringTableReset = _GlobalMulticastDnsFilteringTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 49),
    _GlobalMulticastDnsFilteringTableReset_Type()
)
globalMulticastDnsFilteringTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalMulticastDnsFilteringTableReset.setStatus("current")


class _GlobalDot11kSupport_Type(Integer32):
    """Custom type globalDot11kSupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalDot11kSupport_Type.__name__ = "Integer32"
_GlobalDot11kSupport_Object = MibScalar
globalDot11kSupport = _GlobalDot11kSupport_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 50),
    _GlobalDot11kSupport_Type()
)
globalDot11kSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalDot11kSupport.setStatus("current")


class _GlobalDot11wProtectedManagement_Type(Integer32):
    """Custom type globalDot11wProtectedManagement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GlobalDot11wProtectedManagement_Type.__name__ = "Integer32"
_GlobalDot11wProtectedManagement_Object = MibScalar
globalDot11wProtectedManagement = _GlobalDot11wProtectedManagement_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 51),
    _GlobalDot11wProtectedManagement_Type()
)
globalDot11wProtectedManagement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalDot11wProtectedManagement.setStatus("current")


class _GlobalExtractIpAddrDhcpPeriod_Type(Integer32):
    """Custom type globalExtractIpAddrDhcpPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_GlobalExtractIpAddrDhcpPeriod_Type.__name__ = "Integer32"
_GlobalExtractIpAddrDhcpPeriod_Object = MibScalar
globalExtractIpAddrDhcpPeriod = _GlobalExtractIpAddrDhcpPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 52),
    _GlobalExtractIpAddrDhcpPeriod_Type()
)
globalExtractIpAddrDhcpPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalExtractIpAddrDhcpPeriod.setStatus("current")
_Global11a_ObjectIdentity = ObjectIdentity
global11a = _Global11a_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3)
)


class _Global11aIAPEnable_Type(Integer32):
    """Custom type global11aIAPEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("all-down", 0),
          ("all-up", 1))
    )


_Global11aIAPEnable_Type.__name__ = "Integer32"
_Global11aIAPEnable_Object = MibScalar
global11aIAPEnable = _Global11aIAPEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 1),
    _Global11aIAPEnable_Type()
)
global11aIAPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPEnable.setStatus("current")


class _Global11aIAPCellSize_Type(Integer32):
    """Custom type global11aIAPCellSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("small", 1),
          ("medium", 2),
          ("large", 3),
          ("max", 4),
          ("auto", 5),
          ("monitor", 6))
    )


_Global11aIAPCellSize_Type.__name__ = "Integer32"
_Global11aIAPCellSize_Object = MibScalar
global11aIAPCellSize = _Global11aIAPCellSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 2),
    _Global11aIAPCellSize_Type()
)
global11aIAPCellSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPCellSize.setStatus("current")


class _Global11aIAPTxPwr_Type(Integer32):
    """Custom type global11aIAPTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_Global11aIAPTxPwr_Type.__name__ = "Integer32"
_Global11aIAPTxPwr_Object = MibScalar
global11aIAPTxPwr = _Global11aIAPTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 3),
    _Global11aIAPTxPwr_Type()
)
global11aIAPTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPTxPwr.setStatus("current")


class _Global11aIAPRxThreshold_Type(Integer32):
    """Custom type global11aIAPRxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-100, 0),
    )


_Global11aIAPRxThreshold_Type.__name__ = "Integer32"
_Global11aIAPRxThreshold_Object = MibScalar
global11aIAPRxThreshold = _Global11aIAPRxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 4),
    _Global11aIAPRxThreshold_Type()
)
global11aIAPRxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPRxThreshold.setStatus("current")


class _Global11aIAPAutoChannelEnable_Type(Integer32):
    """Custom type global11aIAPAutoChannelEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("negotiate", 2))
    )


_Global11aIAPAutoChannelEnable_Type.__name__ = "Integer32"
_Global11aIAPAutoChannelEnable_Object = MibScalar
global11aIAPAutoChannelEnable = _Global11aIAPAutoChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 5),
    _Global11aIAPAutoChannelEnable_Type()
)
global11aIAPAutoChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoChannelEnable.setStatus("current")


class _Global11aIAPFragThreshold_Type(Integer32):
    """Custom type global11aIAPFragThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 2346),
    )


_Global11aIAPFragThreshold_Type.__name__ = "Integer32"
_Global11aIAPFragThreshold_Object = MibScalar
global11aIAPFragThreshold = _Global11aIAPFragThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 6),
    _Global11aIAPFragThreshold_Type()
)
global11aIAPFragThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPFragThreshold.setStatus("current")


class _Global11aIAPRTSThreshold_Type(Integer32):
    """Custom type global11aIAPRTSThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2347),
    )


_Global11aIAPRTSThreshold_Type.__name__ = "Integer32"
_Global11aIAPRTSThreshold_Object = MibScalar
global11aIAPRTSThreshold = _Global11aIAPRTSThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 7),
    _Global11aIAPRTSThreshold_Type()
)
global11aIAPRTSThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPRTSThreshold.setStatus("current")
_Rates11a_ObjectIdentity = ObjectIdentity
rates11a = _Rates11a_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8)
)


class _Rates11aSet_Type(Integer32):
    """Custom type rates11aSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("optimize-range", 2),
          ("optimize-throughput", 3))
    )


_Rates11aSet_Type.__name__ = "Integer32"
_Rates11aSet_Object = MibScalar
rates11aSet = _Rates11aSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 1),
    _Rates11aSet_Type()
)
rates11aSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11aSet.setStatus("current")
_Rates11aTable_Object = MibTable
rates11aTable = _Rates11aTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2)
)
if mibBuilder.loadTexts:
    rates11aTable.setStatus("current")
_Rates11aEntry_Object = MibTableRow
rates11aEntry = _Rates11aEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1)
)
rates11aEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rates11aIndex"),
)
if mibBuilder.loadTexts:
    rates11aEntry.setStatus("current")
_Rates11aIndex_Type = Integer32
_Rates11aIndex_Object = MibTableColumn
rates11aIndex = _Rates11aIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 1),
    _Rates11aIndex_Type()
)
rates11aIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rates11aIndex.setStatus("current")
_Rates11aRate_Type = DisplayString
_Rates11aRate_Object = MibTableColumn
rates11aRate = _Rates11aRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 2),
    _Rates11aRate_Type()
)
rates11aRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rates11aRate.setStatus("current")


class _Rates11aStatus_Type(Integer32):
    """Custom type rates11aStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("basic", 1),
          ("supported", 2))
    )


_Rates11aStatus_Type.__name__ = "Integer32"
_Rates11aStatus_Object = MibTableColumn
rates11aStatus = _Rates11aStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 3),
    _Rates11aStatus_Type()
)
rates11aStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11aStatus.setStatus("current")


class _Global11aIAPAutoCellEnable_Type(Integer32):
    """Custom type global11aIAPAutoCellEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_Global11aIAPAutoCellEnable_Type.__name__ = "Integer32"
_Global11aIAPAutoCellEnable_Object = MibScalar
global11aIAPAutoCellEnable = _Global11aIAPAutoCellEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 9),
    _Global11aIAPAutoCellEnable_Type()
)
global11aIAPAutoCellEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoCellEnable.setStatus("current")
_AutoChannelList11a_ObjectIdentity = ObjectIdentity
autoChannelList11a = _AutoChannelList11a_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10)
)


class _AutoChannelList11aSet_Type(Integer32):
    """Custom type autoChannelList11aSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("use-all", 2))
    )


_AutoChannelList11aSet_Type.__name__ = "Integer32"
_AutoChannelList11aSet_Object = MibScalar
autoChannelList11aSet = _AutoChannelList11aSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 1),
    _AutoChannelList11aSet_Type()
)
autoChannelList11aSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelList11aSet.setStatus("current")
_AutoChannelList11aTable_Object = MibTable
autoChannelList11aTable = _AutoChannelList11aTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2)
)
if mibBuilder.loadTexts:
    autoChannelList11aTable.setStatus("current")
_AutoChannelList11aEntry_Object = MibTableRow
autoChannelList11aEntry = _AutoChannelList11aEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1)
)
autoChannelList11aEntry.setIndexNames(
    (0, "XIRRUS-MIB", "autoChannelList11aIndex"),
)
if mibBuilder.loadTexts:
    autoChannelList11aEntry.setStatus("current")
_AutoChannelList11aIndex_Type = Integer32
_AutoChannelList11aIndex_Object = MibTableColumn
autoChannelList11aIndex = _AutoChannelList11aIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 1),
    _AutoChannelList11aIndex_Type()
)
autoChannelList11aIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    autoChannelList11aIndex.setStatus("current")
_AutoChannelList11aChannel_Type = Integer32
_AutoChannelList11aChannel_Object = MibTableColumn
autoChannelList11aChannel = _AutoChannelList11aChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 2),
    _AutoChannelList11aChannel_Type()
)
autoChannelList11aChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoChannelList11aChannel.setStatus("current")


class _AutoChannelList11aStatus_Type(Integer32):
    """Custom type autoChannelList11aStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AutoChannelList11aStatus_Type.__name__ = "Integer32"
_AutoChannelList11aStatus_Object = MibTableColumn
autoChannelList11aStatus = _AutoChannelList11aStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 3),
    _AutoChannelList11aStatus_Type()
)
autoChannelList11aStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelList11aStatus.setStatus("current")


class _Global11aIAPChannelReset_Type(Integer32):
    """Custom type global11aIAPChannelReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_Global11aIAPChannelReset_Type.__name__ = "Integer32"
_Global11aIAPChannelReset_Object = MibScalar
global11aIAPChannelReset = _Global11aIAPChannelReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 11),
    _Global11aIAPChannelReset_Type()
)
global11aIAPChannelReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPChannelReset.setStatus("current")


class _Global11aIAPAutoCellOverlap_Type(Integer32):
    """Custom type global11aIAPAutoCellOverlap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_Global11aIAPAutoCellOverlap_Type.__name__ = "Integer32"
_Global11aIAPAutoCellOverlap_Object = MibScalar
global11aIAPAutoCellOverlap = _Global11aIAPAutoCellOverlap_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 12),
    _Global11aIAPAutoCellOverlap_Type()
)
global11aIAPAutoCellOverlap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoCellOverlap.setStatus("current")


class _Global11aIAPAutoCellPeriod_Type(Integer32):
    """Custom type global11aIAPAutoCellPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3000000),
    )


_Global11aIAPAutoCellPeriod_Type.__name__ = "Integer32"
_Global11aIAPAutoCellPeriod_Object = MibScalar
global11aIAPAutoCellPeriod = _Global11aIAPAutoCellPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 13),
    _Global11aIAPAutoCellPeriod_Type()
)
global11aIAPAutoCellPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoCellPeriod.setStatus("current")


class _Global11aIAPAutoCellMinTxPwr_Type(Integer32):
    """Custom type global11aIAPAutoCellMinTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_Global11aIAPAutoCellMinTxPwr_Type.__name__ = "Integer32"
_Global11aIAPAutoCellMinTxPwr_Object = MibScalar
global11aIAPAutoCellMinTxPwr = _Global11aIAPAutoCellMinTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 14),
    _Global11aIAPAutoCellMinTxPwr_Type()
)
global11aIAPAutoCellMinTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoCellMinTxPwr.setStatus("current")


class _Global11aIAPMaxStations_Type(Integer32):
    """Custom type global11aIAPMaxStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3840),
    )


_Global11aIAPMaxStations_Type.__name__ = "Integer32"
_Global11aIAPMaxStations_Object = MibScalar
global11aIAPMaxStations = _Global11aIAPMaxStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 15),
    _Global11aIAPMaxStations_Type()
)
global11aIAPMaxStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPMaxStations.setStatus("current")


class _Global11aIAPMaxIapStations_Type(Integer32):
    """Custom type global11aIAPMaxIapStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 240),
    )


_Global11aIAPMaxIapStations_Type.__name__ = "Integer32"
_Global11aIAPMaxIapStations_Object = MibScalar
global11aIAPMaxIapStations = _Global11aIAPMaxIapStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 16),
    _Global11aIAPMaxIapStations_Type()
)
global11aIAPMaxIapStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPMaxIapStations.setStatus("current")


class _Global11aIAPAutoCellByChan_Type(Integer32):
    """Custom type global11aIAPAutoCellByChan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_Global11aIAPAutoCellByChan_Type.__name__ = "Integer32"
_Global11aIAPAutoCellByChan_Object = MibScalar
global11aIAPAutoCellByChan = _Global11aIAPAutoCellByChan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 17),
    _Global11aIAPAutoCellByChan_Type()
)
global11aIAPAutoCellByChan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11aIAPAutoCellByChan.setStatus("current")
_Global11bg_ObjectIdentity = ObjectIdentity
global11bg = _Global11bg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4)
)


class _Global11bgIAPEnable_Type(Integer32):
    """Custom type global11bgIAPEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("all-down", 0),
          ("all-up", 1))
    )


_Global11bgIAPEnable_Type.__name__ = "Integer32"
_Global11bgIAPEnable_Object = MibScalar
global11bgIAPEnable = _Global11bgIAPEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 1),
    _Global11bgIAPEnable_Type()
)
global11bgIAPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPEnable.setStatus("current")


class _Global11bgIAPCellSize_Type(Integer32):
    """Custom type global11bgIAPCellSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("small", 1),
          ("medium", 2),
          ("large", 3),
          ("max", 4),
          ("auto", 5),
          ("monitor", 6))
    )


_Global11bgIAPCellSize_Type.__name__ = "Integer32"
_Global11bgIAPCellSize_Object = MibScalar
global11bgIAPCellSize = _Global11bgIAPCellSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 2),
    _Global11bgIAPCellSize_Type()
)
global11bgIAPCellSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPCellSize.setStatus("current")


class _Global11bgIAPTxPwr_Type(Integer32):
    """Custom type global11bgIAPTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_Global11bgIAPTxPwr_Type.__name__ = "Integer32"
_Global11bgIAPTxPwr_Object = MibScalar
global11bgIAPTxPwr = _Global11bgIAPTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 3),
    _Global11bgIAPTxPwr_Type()
)
global11bgIAPTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPTxPwr.setStatus("current")


class _Global11bgIAPRxThreshold_Type(Integer32):
    """Custom type global11bgIAPRxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-100, 0),
    )


_Global11bgIAPRxThreshold_Type.__name__ = "Integer32"
_Global11bgIAPRxThreshold_Object = MibScalar
global11bgIAPRxThreshold = _Global11bgIAPRxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 4),
    _Global11bgIAPRxThreshold_Type()
)
global11bgIAPRxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPRxThreshold.setStatus("current")


class _Global11bgIAPAutoChannelEnable_Type(Integer32):
    """Custom type global11bgIAPAutoChannelEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("negotiate", 2))
    )


_Global11bgIAPAutoChannelEnable_Type.__name__ = "Integer32"
_Global11bgIAPAutoChannelEnable_Object = MibScalar
global11bgIAPAutoChannelEnable = _Global11bgIAPAutoChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 5),
    _Global11bgIAPAutoChannelEnable_Type()
)
global11bgIAPAutoChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoChannelEnable.setStatus("current")


class _Global11bgIAPFragThreshold_Type(Integer32):
    """Custom type global11bgIAPFragThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 2346),
    )


_Global11bgIAPFragThreshold_Type.__name__ = "Integer32"
_Global11bgIAPFragThreshold_Object = MibScalar
global11bgIAPFragThreshold = _Global11bgIAPFragThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 6),
    _Global11bgIAPFragThreshold_Type()
)
global11bgIAPFragThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPFragThreshold.setStatus("current")


class _Global11bgIAPRTSThreshold_Type(Integer32):
    """Custom type global11bgIAPRTSThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2347),
    )


_Global11bgIAPRTSThreshold_Type.__name__ = "Integer32"
_Global11bgIAPRTSThreshold_Object = MibScalar
global11bgIAPRTSThreshold = _Global11bgIAPRTSThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 7),
    _Global11bgIAPRTSThreshold_Type()
)
global11bgIAPRTSThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPRTSThreshold.setStatus("current")


class _Global11bgIAPgOnly_Type(Integer32):
    """Custom type global11bgIAPgOnly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11bgIAPgOnly_Type.__name__ = "Integer32"
_Global11bgIAPgOnly_Object = MibScalar
global11bgIAPgOnly = _Global11bgIAPgOnly_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 8),
    _Global11bgIAPgOnly_Type()
)
global11bgIAPgOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPgOnly.setStatus("current")


class _Global11bgIAPgProtect_Type(Integer32):
    """Custom type global11bgIAPgProtect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("auto-cts", 1),
          ("auto-rts", 2))
    )


_Global11bgIAPgProtect_Type.__name__ = "Integer32"
_Global11bgIAPgProtect_Object = MibScalar
global11bgIAPgProtect = _Global11bgIAPgProtect_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 9),
    _Global11bgIAPgProtect_Type()
)
global11bgIAPgProtect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPgProtect.setStatus("current")


class _Global11bgIAPPreamble_Type(Integer32):
    """Custom type global11bgIAPPreamble based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("long-only", 0),
          ("auto-length", 1))
    )


_Global11bgIAPPreamble_Type.__name__ = "Integer32"
_Global11bgIAPPreamble_Object = MibScalar
global11bgIAPPreamble = _Global11bgIAPPreamble_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 10),
    _Global11bgIAPPreamble_Type()
)
global11bgIAPPreamble.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPPreamble.setStatus("current")


class _Global11bgIAPSlotTime_Type(Integer32):
    """Custom type global11bgIAPSlotTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto-time", 0),
          ("short-only", 1))
    )


_Global11bgIAPSlotTime_Type.__name__ = "Integer32"
_Global11bgIAPSlotTime_Object = MibScalar
global11bgIAPSlotTime = _Global11bgIAPSlotTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 11),
    _Global11bgIAPSlotTime_Type()
)
global11bgIAPSlotTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPSlotTime.setStatus("current")
_Rates11bg_ObjectIdentity = ObjectIdentity
rates11bg = _Rates11bg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12)
)


class _Rates11bgSet_Type(Integer32):
    """Custom type rates11bgSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("optimize-range", 2),
          ("optimize-throughput", 3))
    )


_Rates11bgSet_Type.__name__ = "Integer32"
_Rates11bgSet_Object = MibScalar
rates11bgSet = _Rates11bgSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 1),
    _Rates11bgSet_Type()
)
rates11bgSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11bgSet.setStatus("current")
_Rates11bgTable_Object = MibTable
rates11bgTable = _Rates11bgTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2)
)
if mibBuilder.loadTexts:
    rates11bgTable.setStatus("current")
_Rates11bgEntry_Object = MibTableRow
rates11bgEntry = _Rates11bgEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1)
)
rates11bgEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rates11bgIndex"),
)
if mibBuilder.loadTexts:
    rates11bgEntry.setStatus("current")
_Rates11bgIndex_Type = Integer32
_Rates11bgIndex_Object = MibTableColumn
rates11bgIndex = _Rates11bgIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 1),
    _Rates11bgIndex_Type()
)
rates11bgIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rates11bgIndex.setStatus("current")
_Rates11bgRate_Type = DisplayString
_Rates11bgRate_Object = MibTableColumn
rates11bgRate = _Rates11bgRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 2),
    _Rates11bgRate_Type()
)
rates11bgRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rates11bgRate.setStatus("current")


class _Rates11bgStatus_Type(Integer32):
    """Custom type rates11bgStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("basic", 1),
          ("supported", 2))
    )


_Rates11bgStatus_Type.__name__ = "Integer32"
_Rates11bgStatus_Object = MibTableColumn
rates11bgStatus = _Rates11bgStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 3),
    _Rates11bgStatus_Type()
)
rates11bgStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11bgStatus.setStatus("current")


class _Global11bgIAPAutoCellEnable_Type(Integer32):
    """Custom type global11bgIAPAutoCellEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_Global11bgIAPAutoCellEnable_Type.__name__ = "Integer32"
_Global11bgIAPAutoCellEnable_Object = MibScalar
global11bgIAPAutoCellEnable = _Global11bgIAPAutoCellEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 13),
    _Global11bgIAPAutoCellEnable_Type()
)
global11bgIAPAutoCellEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoCellEnable.setStatus("current")
_AutoChannelList11bg_ObjectIdentity = ObjectIdentity
autoChannelList11bg = _AutoChannelList11bg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14)
)


class _AutoChannelList11bgSet_Type(Integer32):
    """Custom type autoChannelList11bgSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("use-all", 2))
    )


_AutoChannelList11bgSet_Type.__name__ = "Integer32"
_AutoChannelList11bgSet_Object = MibScalar
autoChannelList11bgSet = _AutoChannelList11bgSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 1),
    _AutoChannelList11bgSet_Type()
)
autoChannelList11bgSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelList11bgSet.setStatus("current")
_AutoChannelList11bgTable_Object = MibTable
autoChannelList11bgTable = _AutoChannelList11bgTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2)
)
if mibBuilder.loadTexts:
    autoChannelList11bgTable.setStatus("current")
_AutoChannelList11bgEntry_Object = MibTableRow
autoChannelList11bgEntry = _AutoChannelList11bgEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1)
)
autoChannelList11bgEntry.setIndexNames(
    (0, "XIRRUS-MIB", "autoChannelList11bgIndex"),
)
if mibBuilder.loadTexts:
    autoChannelList11bgEntry.setStatus("current")
_AutoChannelList11bgIndex_Type = Integer32
_AutoChannelList11bgIndex_Object = MibTableColumn
autoChannelList11bgIndex = _AutoChannelList11bgIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 1),
    _AutoChannelList11bgIndex_Type()
)
autoChannelList11bgIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    autoChannelList11bgIndex.setStatus("current")
_AutoChannelList11bgChannel_Type = Integer32
_AutoChannelList11bgChannel_Object = MibTableColumn
autoChannelList11bgChannel = _AutoChannelList11bgChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 2),
    _AutoChannelList11bgChannel_Type()
)
autoChannelList11bgChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoChannelList11bgChannel.setStatus("current")


class _AutoChannelList11bgStatus_Type(Integer32):
    """Custom type autoChannelList11bgStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AutoChannelList11bgStatus_Type.__name__ = "Integer32"
_AutoChannelList11bgStatus_Object = MibTableColumn
autoChannelList11bgStatus = _AutoChannelList11bgStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 3),
    _AutoChannelList11bgStatus_Type()
)
autoChannelList11bgStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoChannelList11bgStatus.setStatus("current")


class _Global11bgIAPChannelReset_Type(Integer32):
    """Custom type global11bgIAPChannelReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_Global11bgIAPChannelReset_Type.__name__ = "Integer32"
_Global11bgIAPChannelReset_Object = MibScalar
global11bgIAPChannelReset = _Global11bgIAPChannelReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 15),
    _Global11bgIAPChannelReset_Type()
)
global11bgIAPChannelReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPChannelReset.setStatus("current")


class _Global11bgIAPAutoCellOverlap_Type(Integer32):
    """Custom type global11bgIAPAutoCellOverlap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_Global11bgIAPAutoCellOverlap_Type.__name__ = "Integer32"
_Global11bgIAPAutoCellOverlap_Object = MibScalar
global11bgIAPAutoCellOverlap = _Global11bgIAPAutoCellOverlap_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 16),
    _Global11bgIAPAutoCellOverlap_Type()
)
global11bgIAPAutoCellOverlap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoCellOverlap.setStatus("current")


class _Global11bgIAPAutoCellPeriod_Type(Integer32):
    """Custom type global11bgIAPAutoCellPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3000000),
    )


_Global11bgIAPAutoCellPeriod_Type.__name__ = "Integer32"
_Global11bgIAPAutoCellPeriod_Object = MibScalar
global11bgIAPAutoCellPeriod = _Global11bgIAPAutoCellPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 17),
    _Global11bgIAPAutoCellPeriod_Type()
)
global11bgIAPAutoCellPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoCellPeriod.setStatus("current")


class _Global11bgIAPAutoCellMinTxPwr_Type(Integer32):
    """Custom type global11bgIAPAutoCellMinTxPwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 20),
    )


_Global11bgIAPAutoCellMinTxPwr_Type.__name__ = "Integer32"
_Global11bgIAPAutoCellMinTxPwr_Object = MibScalar
global11bgIAPAutoCellMinTxPwr = _Global11bgIAPAutoCellMinTxPwr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 18),
    _Global11bgIAPAutoCellMinTxPwr_Type()
)
global11bgIAPAutoCellMinTxPwr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoCellMinTxPwr.setStatus("current")


class _Global11bgIAPMaxStations_Type(Integer32):
    """Custom type global11bgIAPMaxStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3840),
    )


_Global11bgIAPMaxStations_Type.__name__ = "Integer32"
_Global11bgIAPMaxStations_Object = MibScalar
global11bgIAPMaxStations = _Global11bgIAPMaxStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 19),
    _Global11bgIAPMaxStations_Type()
)
global11bgIAPMaxStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPMaxStations.setStatus("current")


class _Global11bgIAPMaxIapStations_Type(Integer32):
    """Custom type global11bgIAPMaxIapStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 240),
    )


_Global11bgIAPMaxIapStations_Type.__name__ = "Integer32"
_Global11bgIAPMaxIapStations_Object = MibScalar
global11bgIAPMaxIapStations = _Global11bgIAPMaxIapStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 20),
    _Global11bgIAPMaxIapStations_Type()
)
global11bgIAPMaxIapStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPMaxIapStations.setStatus("current")


class _Global11bgIAPAutoCellByChan_Type(Integer32):
    """Custom type global11bgIAPAutoCellByChan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_Global11bgIAPAutoCellByChan_Type.__name__ = "Integer32"
_Global11bgIAPAutoCellByChan_Object = MibScalar
global11bgIAPAutoCellByChan = _Global11bgIAPAutoCellByChan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 21),
    _Global11bgIAPAutoCellByChan_Type()
)
global11bgIAPAutoCellByChan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11bgIAPAutoCellByChan.setStatus("current")
_Wds_ObjectIdentity = ObjectIdentity
wds = _Wds_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5)
)


class _WdsAutoChannel_Type(Integer32):
    """Custom type wdsAutoChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_WdsAutoChannel_Type.__name__ = "Integer32"
_WdsAutoChannel_Object = MibScalar
wdsAutoChannel = _WdsAutoChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 1),
    _WdsAutoChannel_Type()
)
wdsAutoChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsAutoChannel.setStatus("current")


class _WdsClientLinkTableReset_Type(Integer32):
    """Custom type wdsClientLinkTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_WdsClientLinkTableReset_Type.__name__ = "Integer32"
_WdsClientLinkTableReset_Object = MibScalar
wdsClientLinkTableReset = _WdsClientLinkTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 2),
    _WdsClientLinkTableReset_Type()
)
wdsClientLinkTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkTableReset.setStatus("current")
_WdsClientLinkTable_Object = MibTable
wdsClientLinkTable = _WdsClientLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wdsClientLinkTable.setStatus("current")
_WdsClientLinkEntry_Object = MibTableRow
wdsClientLinkEntry = _WdsClientLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1)
)
wdsClientLinkEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wdsClientLinkIndex"),
)
if mibBuilder.loadTexts:
    wdsClientLinkEntry.setStatus("current")
_WdsClientLinkIndex_Type = Integer32
_WdsClientLinkIndex_Object = MibTableColumn
wdsClientLinkIndex = _WdsClientLinkIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 1),
    _WdsClientLinkIndex_Type()
)
wdsClientLinkIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wdsClientLinkIndex.setStatus("current")


class _WdsClientLinkEnable_Type(Integer32):
    """Custom type wdsClientLinkEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WdsClientLinkEnable_Type.__name__ = "Integer32"
_WdsClientLinkEnable_Object = MibTableColumn
wdsClientLinkEnable = _WdsClientLinkEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 2),
    _WdsClientLinkEnable_Type()
)
wdsClientLinkEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkEnable.setStatus("current")


class _WdsClientLinkMaxIAPs_Type(Integer32):
    """Custom type wdsClientLinkMaxIAPs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WdsClientLinkMaxIAPs_Type.__name__ = "Integer32"
_WdsClientLinkMaxIAPs_Object = MibTableColumn
wdsClientLinkMaxIAPs = _WdsClientLinkMaxIAPs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 3),
    _WdsClientLinkMaxIAPs_Type()
)
wdsClientLinkMaxIAPs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkMaxIAPs.setStatus("current")


class _WdsClientLinkTarget_Type(DisplayString):
    """Custom type wdsClientLinkTarget based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_WdsClientLinkTarget_Type.__name__ = "DisplayString"
_WdsClientLinkTarget_Object = MibTableColumn
wdsClientLinkTarget = _WdsClientLinkTarget_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 4),
    _WdsClientLinkTarget_Type()
)
wdsClientLinkTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkTarget.setStatus("current")


class _WdsClientLinkSSID_Type(DisplayString):
    """Custom type wdsClientLinkSSID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WdsClientLinkSSID_Type.__name__ = "DisplayString"
_WdsClientLinkSSID_Object = MibTableColumn
wdsClientLinkSSID = _WdsClientLinkSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 5),
    _WdsClientLinkSSID_Type()
)
wdsClientLinkSSID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkSSID.setStatus("current")


class _WdsClientLinkUsername_Type(DisplayString):
    """Custom type wdsClientLinkUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_WdsClientLinkUsername_Type.__name__ = "DisplayString"
_WdsClientLinkUsername_Object = MibTableColumn
wdsClientLinkUsername = _WdsClientLinkUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 6),
    _WdsClientLinkUsername_Type()
)
wdsClientLinkUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkUsername.setStatus("current")


class _WdsClientLinkPassword_Type(DisplayString):
    """Custom type wdsClientLinkPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WdsClientLinkPassword_Type.__name__ = "DisplayString"
_WdsClientLinkPassword_Object = MibTableColumn
wdsClientLinkPassword = _WdsClientLinkPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 7),
    _WdsClientLinkPassword_Type()
)
wdsClientLinkPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkPassword.setStatus("current")


class _WdsClientLinkPasswordForm_Type(Integer32):
    """Custom type wdsClientLinkPasswordForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_WdsClientLinkPasswordForm_Type.__name__ = "Integer32"
_WdsClientLinkPasswordForm_Object = MibTableColumn
wdsClientLinkPasswordForm = _WdsClientLinkPasswordForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 8),
    _WdsClientLinkPasswordForm_Type()
)
wdsClientLinkPasswordForm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsClientLinkPasswordForm.setStatus("current")
_WdsHostLinkTable_Object = MibTable
wdsHostLinkTable = _WdsHostLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4)
)
if mibBuilder.loadTexts:
    wdsHostLinkTable.setStatus("current")
_WdsHostLinkEntry_Object = MibTableRow
wdsHostLinkEntry = _WdsHostLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1)
)
wdsHostLinkEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wdsHostLinkIndex"),
)
if mibBuilder.loadTexts:
    wdsHostLinkEntry.setStatus("current")
_WdsHostLinkIndex_Type = Integer32
_WdsHostLinkIndex_Object = MibTableColumn
wdsHostLinkIndex = _WdsHostLinkIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 1),
    _WdsHostLinkIndex_Type()
)
wdsHostLinkIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wdsHostLinkIndex.setStatus("current")


class _WdsHostLinkState_Type(Integer32):
    """Custom type wdsHostLinkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_WdsHostLinkState_Type.__name__ = "Integer32"
_WdsHostLinkState_Object = MibTableColumn
wdsHostLinkState = _WdsHostLinkState_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 2),
    _WdsHostLinkState_Type()
)
wdsHostLinkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsHostLinkState.setStatus("current")
_WdsHostLinkNumIAPs_Type = Integer32
_WdsHostLinkNumIAPs_Object = MibTableColumn
wdsHostLinkNumIAPs = _WdsHostLinkNumIAPs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 3),
    _WdsHostLinkNumIAPs_Type()
)
wdsHostLinkNumIAPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsHostLinkNumIAPs.setStatus("current")
_WdsHostLinkSource_Type = DisplayString
_WdsHostLinkSource_Object = MibTableColumn
wdsHostLinkSource = _WdsHostLinkSource_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 4),
    _WdsHostLinkSource_Type()
)
wdsHostLinkSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsHostLinkSource.setStatus("current")
_WdsHostLinkSSID_Type = DisplayString
_WdsHostLinkSSID_Object = MibTableColumn
wdsHostLinkSSID = _WdsHostLinkSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 5),
    _WdsHostLinkSSID_Type()
)
wdsHostLinkSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsHostLinkSSID.setStatus("current")


class _WdsAllowStations_Type(Integer32):
    """Custom type wdsAllowStations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WdsAllowStations_Type.__name__ = "Integer32"
_WdsAllowStations_Object = MibScalar
wdsAllowStations = _WdsAllowStations_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 5),
    _WdsAllowStations_Type()
)
wdsAllowStations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsAllowStations.setStatus("current")


class _WdsStpEnable_Type(Integer32):
    """Custom type wdsStpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WdsStpEnable_Type.__name__ = "Integer32"
_WdsStpEnable_Object = MibScalar
wdsStpEnable = _WdsStpEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 6),
    _WdsStpEnable_Type()
)
wdsStpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsStpEnable.setStatus("current")


class _WdsRoamThreshold_Type(Integer32):
    """Custom type wdsRoamThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WdsRoamThreshold_Type.__name__ = "Integer32"
_WdsRoamThreshold_Object = MibScalar
wdsRoamThreshold = _WdsRoamThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 7),
    _WdsRoamThreshold_Type()
)
wdsRoamThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsRoamThreshold.setStatus("current")


class _WdsRoamAvgWeight_Type(Integer32):
    """Custom type wdsRoamAvgWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_WdsRoamAvgWeight_Type.__name__ = "Integer32"
_WdsRoamAvgWeight_Object = MibScalar
wdsRoamAvgWeight = _WdsRoamAvgWeight_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 8),
    _WdsRoamAvgWeight_Type()
)
wdsRoamAvgWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wdsRoamAvgWeight.setStatus("current")
_Global11n_ObjectIdentity = ObjectIdentity
global11n = _Global11n_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6)
)


class _Global11nEnable_Type(Integer32):
    """Custom type global11nEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11nEnable_Type.__name__ = "Integer32"
_Global11nEnable_Object = MibScalar
global11nEnable = _Global11nEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 1),
    _Global11nEnable_Type()
)
global11nEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nEnable.setStatus("current")


class _Global11nTxChains_Type(Integer32):
    """Custom type global11nTxChains based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_Global11nTxChains_Type.__name__ = "Integer32"
_Global11nTxChains_Object = MibScalar
global11nTxChains = _Global11nTxChains_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 2),
    _Global11nTxChains_Type()
)
global11nTxChains.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nTxChains.setStatus("current")


class _Global11nRxChains_Type(Integer32):
    """Custom type global11nRxChains based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_Global11nRxChains_Type.__name__ = "Integer32"
_Global11nRxChains_Object = MibScalar
global11nRxChains = _Global11nRxChains_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 3),
    _Global11nRxChains_Type()
)
global11nRxChains.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nRxChains.setStatus("current")


class _Global11nGuardInterval_Type(Integer32):
    """Custom type global11nGuardInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("long", 0),
          ("short", 1))
    )


_Global11nGuardInterval_Type.__name__ = "Integer32"
_Global11nGuardInterval_Object = MibScalar
global11nGuardInterval = _Global11nGuardInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 4),
    _Global11nGuardInterval_Type()
)
global11nGuardInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nGuardInterval.setStatus("current")


class _Global11nAutoBond_Type(Integer32):
    """Custom type global11nAutoBond based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11nAutoBond_Type.__name__ = "Integer32"
_Global11nAutoBond_Object = MibScalar
global11nAutoBond = _Global11nAutoBond_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 5),
    _Global11nAutoBond_Type()
)
global11nAutoBond.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nAutoBond.setStatus("current")


class _Global11nBondedChannelWidth5GHz_Type(Integer32):
    """Custom type global11nBondedChannelWidth5GHz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 0),
          ("static", 1))
    )


_Global11nBondedChannelWidth5GHz_Type.__name__ = "Integer32"
_Global11nBondedChannelWidth5GHz_Object = MibScalar
global11nBondedChannelWidth5GHz = _Global11nBondedChannelWidth5GHz_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 6),
    _Global11nBondedChannelWidth5GHz_Type()
)
global11nBondedChannelWidth5GHz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nBondedChannelWidth5GHz.setStatus("current")


class _Global11nBondedChannelWidth2GHz_Type(Integer32):
    """Custom type global11nBondedChannelWidth2GHz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 0),
          ("static", 1))
    )


_Global11nBondedChannelWidth2GHz_Type.__name__ = "Integer32"
_Global11nBondedChannelWidth2GHz_Object = MibScalar
global11nBondedChannelWidth2GHz = _Global11nBondedChannelWidth2GHz_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 7),
    _Global11nBondedChannelWidth2GHz_Type()
)
global11nBondedChannelWidth2GHz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11nBondedChannelWidth2GHz.setStatus("current")
_Rates11n_ObjectIdentity = ObjectIdentity
rates11n = _Rates11n_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8)
)


class _Rates11nSet_Type(Integer32):
    """Custom type rates11nSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("default", 1)
    )


_Rates11nSet_Type.__name__ = "Integer32"
_Rates11nSet_Object = MibScalar
rates11nSet = _Rates11nSet_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 1),
    _Rates11nSet_Type()
)
rates11nSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11nSet.setStatus("current")
_Rates11nTable_Object = MibTable
rates11nTable = _Rates11nTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2)
)
if mibBuilder.loadTexts:
    rates11nTable.setStatus("current")
_Rates11nEntry_Object = MibTableRow
rates11nEntry = _Rates11nEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1)
)
rates11nEntry.setIndexNames(
    (0, "XIRRUS-MIB", "rates11nMCSIndex"),
)
if mibBuilder.loadTexts:
    rates11nEntry.setStatus("current")
_Rates11nMCSIndex_Type = Integer32
_Rates11nMCSIndex_Object = MibTableColumn
rates11nMCSIndex = _Rates11nMCSIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1, 1),
    _Rates11nMCSIndex_Type()
)
rates11nMCSIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rates11nMCSIndex.setStatus("current")


class _Rates11nMCSStatus_Type(Integer32):
    """Custom type rates11nMCSStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("basic", 1),
          ("supported", 2))
    )


_Rates11nMCSStatus_Type.__name__ = "Integer32"
_Rates11nMCSStatus_Object = MibTableColumn
rates11nMCSStatus = _Rates11nMCSStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1, 2),
    _Rates11nMCSStatus_Type()
)
rates11nMCSStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rates11nMCSStatus.setStatus("current")
_IapSsidToBssidMappingTable_Object = MibTable
iapSsidToBssidMappingTable = _IapSsidToBssidMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7)
)
if mibBuilder.loadTexts:
    iapSsidToBssidMappingTable.setStatus("current")
_IapSsidToBssidMappingEntry_Object = MibTableRow
iapSsidToBssidMappingEntry = _IapSsidToBssidMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1)
)
iapSsidToBssidMappingEntry.setIndexNames(
    (0, "XIRRUS-MIB", "iapSsidToBssidMappingIndex"),
)
if mibBuilder.loadTexts:
    iapSsidToBssidMappingEntry.setStatus("current")
_IapSsidToBssidMappingIndex_Type = Integer32
_IapSsidToBssidMappingIndex_Object = MibTableColumn
iapSsidToBssidMappingIndex = _IapSsidToBssidMappingIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 1),
    _IapSsidToBssidMappingIndex_Type()
)
iapSsidToBssidMappingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iapSsidToBssidMappingIndex.setStatus("current")
_IapSsidToBssidMappingIAP_Type = DisplayString
_IapSsidToBssidMappingIAP_Object = MibTableColumn
iapSsidToBssidMappingIAP = _IapSsidToBssidMappingIAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 2),
    _IapSsidToBssidMappingIAP_Type()
)
iapSsidToBssidMappingIAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapSsidToBssidMappingIAP.setStatus("current")
_IapSsidToBssidMappingSSID_Type = DisplayString
_IapSsidToBssidMappingSSID_Object = MibTableColumn
iapSsidToBssidMappingSSID = _IapSsidToBssidMappingSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 3),
    _IapSsidToBssidMappingSSID_Type()
)
iapSsidToBssidMappingSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapSsidToBssidMappingSSID.setStatus("current")
_IapSsidToBssidMappingBSSID_Type = DisplayString
_IapSsidToBssidMappingBSSID_Object = MibTableColumn
iapSsidToBssidMappingBSSID = _IapSsidToBssidMappingBSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 4),
    _IapSsidToBssidMappingBSSID_Type()
)
iapSsidToBssidMappingBSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapSsidToBssidMappingBSSID.setStatus("current")
_Global11ac_ObjectIdentity = ObjectIdentity
global11ac = _Global11ac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8)
)


class _Global11acEnable_Type(Integer32):
    """Custom type global11acEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11acEnable_Type.__name__ = "Integer32"
_Global11acEnable_Object = MibScalar
global11acEnable = _Global11acEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 1),
    _Global11acEnable_Type()
)
global11acEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acEnable.setStatus("current")


class _Global11acGuardInterval_Type(Integer32):
    """Custom type global11acGuardInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("long", 0),
          ("short", 1))
    )


_Global11acGuardInterval_Type.__name__ = "Integer32"
_Global11acGuardInterval_Object = MibScalar
global11acGuardInterval = _Global11acGuardInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 2),
    _Global11acGuardInterval_Type()
)
global11acGuardInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acGuardInterval.setStatus("current")


class _Global11acMaxMCS1SS_Type(Integer32):
    """Custom type global11acMaxMCS1SS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mcs7", 0),
          ("mcs8", 1),
          ("mcs9", 2))
    )


_Global11acMaxMCS1SS_Type.__name__ = "Integer32"
_Global11acMaxMCS1SS_Object = MibScalar
global11acMaxMCS1SS = _Global11acMaxMCS1SS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 3),
    _Global11acMaxMCS1SS_Type()
)
global11acMaxMCS1SS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acMaxMCS1SS.setStatus("current")


class _Global11acMaxMCS2SS_Type(Integer32):
    """Custom type global11acMaxMCS2SS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mcs7", 0),
          ("mcs8", 1),
          ("mcs9", 2))
    )


_Global11acMaxMCS2SS_Type.__name__ = "Integer32"
_Global11acMaxMCS2SS_Object = MibScalar
global11acMaxMCS2SS = _Global11acMaxMCS2SS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 4),
    _Global11acMaxMCS2SS_Type()
)
global11acMaxMCS2SS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acMaxMCS2SS.setStatus("current")


class _Global11acMaxMCS3SS_Type(Integer32):
    """Custom type global11acMaxMCS3SS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mcs7", 0),
          ("mcs8", 1),
          ("mcs9", 2))
    )


_Global11acMaxMCS3SS_Type.__name__ = "Integer32"
_Global11acMaxMCS3SS_Object = MibScalar
global11acMaxMCS3SS = _Global11acMaxMCS3SS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 5),
    _Global11acMaxMCS3SS_Type()
)
global11acMaxMCS3SS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acMaxMCS3SS.setStatus("current")


class _Global11acMaxMCS4SS_Type(Integer32):
    """Custom type global11acMaxMCS4SS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mcs7", 0),
          ("mcs8", 1),
          ("mcs9", 2))
    )


_Global11acMaxMCS4SS_Type.__name__ = "Integer32"
_Global11acMaxMCS4SS_Object = MibScalar
global11acMaxMCS4SS = _Global11acMaxMCS4SS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 6),
    _Global11acMaxMCS4SS_Type()
)
global11acMaxMCS4SS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acMaxMCS4SS.setStatus("current")


class _Global11acTxBeamForming_Type(Integer32):
    """Custom type global11acTxBeamForming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11acTxBeamForming_Type.__name__ = "Integer32"
_Global11acTxBeamForming_Object = MibScalar
global11acTxBeamForming = _Global11acTxBeamForming_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 7),
    _Global11acTxBeamForming_Type()
)
global11acTxBeamForming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acTxBeamForming.setStatus("current")


class _Global11acMultiUserMimo_Type(Integer32):
    """Custom type global11acMultiUserMimo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11acMultiUserMimo_Type.__name__ = "Integer32"
_Global11acMultiUserMimo_Object = MibScalar
global11acMultiUserMimo = _Global11acMultiUserMimo_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 8),
    _Global11acMultiUserMimo_Type()
)
global11acMultiUserMimo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acMultiUserMimo.setStatus("current")


class _Global11acWave2Capability_Type(Integer32):
    """Custom type global11acWave2Capability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Global11acWave2Capability_Type.__name__ = "Integer32"
_Global11acWave2Capability_Object = MibScalar
global11acWave2Capability = _Global11acWave2Capability_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 9),
    _Global11acWave2Capability_Type()
)
global11acWave2Capability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    global11acWave2Capability.setStatus("current")


class _Global11acAutoBond_Type(Integer32):
    """Custom type global11acAutoBond based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Global11acAutoBond_Type.__name__ = "Integer32"
_Global11acAutoBond_Object = MibScalar
global11acAutoBond = _Global11acAutoBond_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 10),
    _Global11acAutoBond_Type()
)
global11acAutoBond.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    global11acAutoBond.setStatus("current")
_Ethernet_ObjectIdentity = ObjectIdentity
ethernet = _Ethernet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2)
)
_EthTable_Object = MibTable
ethTable = _EthTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1)
)
if mibBuilder.loadTexts:
    ethTable.setStatus("current")
_EthEntry_Object = MibTableRow
ethEntry = _EthEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1)
)
ethEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ethIndex"),
)
if mibBuilder.loadTexts:
    ethEntry.setStatus("current")
_EthIndex_Type = Integer32
_EthIndex_Object = MibTableColumn
ethIndex = _EthIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 1),
    _EthIndex_Type()
)
ethIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ethIndex.setStatus("current")
_EthName_Type = DisplayString
_EthName_Object = MibTableColumn
ethName = _EthName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 2),
    _EthName_Type()
)
ethName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethName.setStatus("current")


class _EthEnable_Type(Integer32):
    """Custom type ethEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_EthEnable_Type.__name__ = "Integer32"
_EthEnable_Object = MibTableColumn
ethEnable = _EthEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 3),
    _EthEnable_Type()
)
ethEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethEnable.setStatus("current")


class _EthDHCPBind_Type(Integer32):
    """Custom type ethDHCPBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_EthDHCPBind_Type.__name__ = "Integer32"
_EthDHCPBind_Object = MibTableColumn
ethDHCPBind = _EthDHCPBind_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 4),
    _EthDHCPBind_Type()
)
ethDHCPBind.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethDHCPBind.setStatus("current")
_EthIPAddress_Type = IpAddress
_EthIPAddress_Object = MibTableColumn
ethIPAddress = _EthIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 5),
    _EthIPAddress_Type()
)
ethIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethIPAddress.setStatus("current")
_EthIPMask_Type = IpAddress
_EthIPMask_Object = MibTableColumn
ethIPMask = _EthIPMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 6),
    _EthIPMask_Type()
)
ethIPMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethIPMask.setStatus("current")
_EthGateway_Type = IpAddress
_EthGateway_Object = MibTableColumn
ethGateway = _EthGateway_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 7),
    _EthGateway_Type()
)
ethGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethGateway.setStatus("current")


class _EthAutoneg_Type(Integer32):
    """Custom type ethAutoneg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_EthAutoneg_Type.__name__ = "Integer32"
_EthAutoneg_Object = MibTableColumn
ethAutoneg = _EthAutoneg_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 8),
    _EthAutoneg_Type()
)
ethAutoneg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethAutoneg.setStatus("current")


class _EthDuplex_Type(Integer32):
    """Custom type ethDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("half", 0),
          ("full", 1))
    )


_EthDuplex_Type.__name__ = "Integer32"
_EthDuplex_Object = MibTableColumn
ethDuplex = _EthDuplex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 9),
    _EthDuplex_Type()
)
ethDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethDuplex.setStatus("current")


class _EthSpeed_Type(Integer32):
    """Custom type ethSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("speed-10Mbps", 1),
          ("speed-100Mbps", 2),
          ("speed-1000Mbps", 3),
          ("speed-2500Mbps", 4))
    )


_EthSpeed_Type.__name__ = "Integer32"
_EthSpeed_Object = MibTableColumn
ethSpeed = _EthSpeed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 10),
    _EthSpeed_Type()
)
ethSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethSpeed.setStatus("current")


class _EthMTU_Type(Integer32):
    """Custom type ethMTU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 1732),
    )


_EthMTU_Type.__name__ = "Integer32"
_EthMTU_Object = MibTableColumn
ethMTU = _EthMTU_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 11),
    _EthMTU_Type()
)
ethMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethMTU.setStatus("current")


class _EthMgmt_Type(Integer32):
    """Custom type ethMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_EthMgmt_Type.__name__ = "Integer32"
_EthMgmt_Object = MibTableColumn
ethMgmt = _EthMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 12),
    _EthMgmt_Type()
)
ethMgmt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethMgmt.setStatus("current")


class _EthDefault_Type(Integer32):
    """Custom type ethDefault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_EthDefault_Type.__name__ = "Integer32"
_EthDefault_Object = MibTableColumn
ethDefault = _EthDefault_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 13),
    _EthDefault_Type()
)
ethDefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethDefault.setStatus("current")


class _EthPortMode_Type(Integer32):
    """Custom type ethPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("link-backup", 0),
          ("load-balance", 3),
          ("bridge", 4),
          ("ieee802dot3ad", 5),
          ("broadcast", 6),
          ("mirror", 7))
    )


_EthPortMode_Type.__name__ = "Integer32"
_EthPortMode_Object = MibTableColumn
ethPortMode = _EthPortMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 14),
    _EthPortMode_Type()
)
ethPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethPortMode.setStatus("current")


class _EthBond_Type(DisplayString):
    """Custom type ethBond based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_EthBond_Type.__name__ = "DisplayString"
_EthBond_Object = MibTableColumn
ethBond = _EthBond_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 15),
    _EthBond_Type()
)
ethBond.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethBond.setStatus("current")


class _EthLED_Type(Integer32):
    """Custom type ethLED based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_EthLED_Type.__name__ = "Integer32"
_EthLED_Object = MibTableColumn
ethLED = _EthLED_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 16),
    _EthLED_Type()
)
ethLED.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethLED.setStatus("current")
_BondTable_Object = MibTable
bondTable = _BondTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2)
)
if mibBuilder.loadTexts:
    bondTable.setStatus("current")
_BondEntry_Object = MibTableRow
bondEntry = _BondEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1)
)
bondEntry.setIndexNames(
    (0, "XIRRUS-MIB", "bondIndex"),
)
if mibBuilder.loadTexts:
    bondEntry.setStatus("current")
_BondIndex_Type = Integer32
_BondIndex_Object = MibTableColumn
bondIndex = _BondIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 1),
    _BondIndex_Type()
)
bondIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bondIndex.setStatus("current")
_BondName_Type = DisplayString
_BondName_Object = MibTableColumn
bondName = _BondName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 2),
    _BondName_Type()
)
bondName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bondName.setStatus("current")


class _BondMode_Type(Integer32):
    """Custom type bondMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("link-backup", 0),
          ("load-balance", 3),
          ("ieee802dot3ad", 5),
          ("broadcast", 6))
    )


_BondMode_Type.__name__ = "Integer32"
_BondMode_Object = MibTableColumn
bondMode = _BondMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 3),
    _BondMode_Type()
)
bondMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bondMode.setStatus("current")


class _BondMirror_Type(DisplayString):
    """Custom type bondMirror based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_BondMirror_Type.__name__ = "DisplayString"
_BondMirror_Object = MibTableColumn
bondMirror = _BondMirror_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 4),
    _BondMirror_Type()
)
bondMirror.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bondMirror.setStatus("current")


class _BondActiveVlans_Type(DisplayString):
    """Custom type bondActiveVlans based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 160),
    )


_BondActiveVlans_Type.__name__ = "DisplayString"
_BondActiveVlans_Object = MibTableColumn
bondActiveVlans = _BondActiveVlans_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 5),
    _BondActiveVlans_Type()
)
bondActiveVlans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bondActiveVlans.setStatus("current")
_Console_ObjectIdentity = ObjectIdentity
console = _Console_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3)
)


class _ConsoleBaud_Type(Integer32):
    """Custom type consoleBaud based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(300, 115200),
    )


_ConsoleBaud_Type.__name__ = "Integer32"
_ConsoleBaud_Object = MibScalar
consoleBaud = _ConsoleBaud_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 1),
    _ConsoleBaud_Type()
)
consoleBaud.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleBaud.setStatus("current")


class _ConsoleByteSize_Type(Integer32):
    """Custom type consoleByteSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(7, 8),
    )


_ConsoleByteSize_Type.__name__ = "Integer32"
_ConsoleByteSize_Object = MibScalar
consoleByteSize = _ConsoleByteSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 2),
    _ConsoleByteSize_Type()
)
consoleByteSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleByteSize.setStatus("current")


class _ConsoleParity_Type(Integer32):
    """Custom type consoleParity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("odd", 1),
          ("even", 2))
    )


_ConsoleParity_Type.__name__ = "Integer32"
_ConsoleParity_Object = MibScalar
consoleParity = _ConsoleParity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 3),
    _ConsoleParity_Type()
)
consoleParity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleParity.setStatus("current")


class _ConsoleStopBits_Type(Integer32):
    """Custom type consoleStopBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ConsoleStopBits_Type.__name__ = "Integer32"
_ConsoleStopBits_Object = MibScalar
consoleStopBits = _ConsoleStopBits_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 4),
    _ConsoleStopBits_Type()
)
consoleStopBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleStopBits.setStatus("current")


class _ConsoleTimeout_Type(Integer32):
    """Custom type consoleTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 100000),
    )


_ConsoleTimeout_Type.__name__ = "Integer32"
_ConsoleTimeout_Object = MibScalar
consoleTimeout = _ConsoleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 5),
    _ConsoleTimeout_Type()
)
consoleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleTimeout.setStatus("current")


class _ConsoleMgmt_Type(Integer32):
    """Custom type consoleMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConsoleMgmt_Type.__name__ = "Integer32"
_ConsoleMgmt_Object = MibScalar
consoleMgmt = _ConsoleMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 6),
    _ConsoleMgmt_Type()
)
consoleMgmt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleMgmt.setStatus("current")
_NetworkMap_ObjectIdentity = ObjectIdentity
networkMap = _NetworkMap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13)
)
_NeighborArrayTable_Object = MibTable
neighborArrayTable = _NeighborArrayTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1)
)
if mibBuilder.loadTexts:
    neighborArrayTable.setStatus("current")
_NeighborArrayEntry_Object = MibTableRow
neighborArrayEntry = _NeighborArrayEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1)
)
neighborArrayEntry.setIndexNames(
    (0, "XIRRUS-MIB", "neighborArrayIndex"),
)
if mibBuilder.loadTexts:
    neighborArrayEntry.setStatus("current")
_NeighborArrayIndex_Type = Integer32
_NeighborArrayIndex_Object = MibTableColumn
neighborArrayIndex = _NeighborArrayIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 1),
    _NeighborArrayIndex_Type()
)
neighborArrayIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    neighborArrayIndex.setStatus("current")
_NeighborArrayHostname_Type = DisplayString
_NeighborArrayHostname_Object = MibTableColumn
neighborArrayHostname = _NeighborArrayHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 2),
    _NeighborArrayHostname_Type()
)
neighborArrayHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayHostname.setStatus("current")
_NeighborArrayLocation_Type = DisplayString
_NeighborArrayLocation_Object = MibTableColumn
neighborArrayLocation = _NeighborArrayLocation_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 3),
    _NeighborArrayLocation_Type()
)
neighborArrayLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayLocation.setStatus("current")
_NeighborArrayIPAddress_Type = DisplayString
_NeighborArrayIPAddress_Object = MibTableColumn
neighborArrayIPAddress = _NeighborArrayIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 4),
    _NeighborArrayIPAddress_Type()
)
neighborArrayIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayIPAddress.setStatus("current")
_NeighborArrayModel_Type = DisplayString
_NeighborArrayModel_Object = MibTableColumn
neighborArrayModel = _NeighborArrayModel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 5),
    _NeighborArrayModel_Type()
)
neighborArrayModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayModel.setStatus("current")
_NeighborArrayNumIAPsUp_Type = Integer32
_NeighborArrayNumIAPsUp_Object = MibTableColumn
neighborArrayNumIAPsUp = _NeighborArrayNumIAPsUp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 6),
    _NeighborArrayNumIAPsUp_Type()
)
neighborArrayNumIAPsUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayNumIAPsUp.setStatus("current")
_NeighborArrayNumSSIDs_Type = Integer32
_NeighborArrayNumSSIDs_Object = MibTableColumn
neighborArrayNumSSIDs = _NeighborArrayNumSSIDs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 7),
    _NeighborArrayNumSSIDs_Type()
)
neighborArrayNumSSIDs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayNumSSIDs.setStatus("current")
_NeighborArrayNumActiveSSIDs_Type = Integer32
_NeighborArrayNumActiveSSIDs_Object = MibTableColumn
neighborArrayNumActiveSSIDs = _NeighborArrayNumActiveSSIDs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 8),
    _NeighborArrayNumActiveSSIDs_Type()
)
neighborArrayNumActiveSSIDs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayNumActiveSSIDs.setStatus("current")
_NeighborArrayNumStationsAssoc_Type = Integer32
_NeighborArrayNumStationsAssoc_Object = MibTableColumn
neighborArrayNumStationsAssoc = _NeighborArrayNumStationsAssoc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 9),
    _NeighborArrayNumStationsAssoc_Type()
)
neighborArrayNumStationsAssoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayNumStationsAssoc.setStatus("current")


class _NeighborArrayInRange_Type(Integer32):
    """Custom type neighborArrayInRange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("not-in-range", 0),
          ("in-range", 1))
    )


_NeighborArrayInRange_Type.__name__ = "Integer32"
_NeighborArrayInRange_Object = MibTableColumn
neighborArrayInRange = _NeighborArrayInRange_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 10),
    _NeighborArrayInRange_Type()
)
neighborArrayInRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayInRange.setStatus("current")


class _NeighborArrayFastRoam_Type(Integer32):
    """Custom type neighborArrayFastRoam based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no-fast-roam", 0),
          ("fast-roam", 1))
    )


_NeighborArrayFastRoam_Type.__name__ = "Integer32"
_NeighborArrayFastRoam_Object = MibTableColumn
neighborArrayFastRoam = _NeighborArrayFastRoam_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 11),
    _NeighborArrayFastRoam_Type()
)
neighborArrayFastRoam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayFastRoam.setStatus("current")
_NeighborArrayUptime_Type = DisplayString
_NeighborArrayUptime_Object = MibTableColumn
neighborArrayUptime = _NeighborArrayUptime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 12),
    _NeighborArrayUptime_Type()
)
neighborArrayUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborArrayUptime.setStatus("current")
_Radius_ObjectIdentity = ObjectIdentity
radius = _Radius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14)
)


class _RadiusEnable_Type(Integer32):
    """Custom type radiusEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("external", 1),
          ("internal", 2),
          ("active-directory", 3))
    )


_RadiusEnable_Type.__name__ = "Integer32"
_RadiusEnable_Object = MibScalar
radiusEnable = _RadiusEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 1),
    _RadiusEnable_Type()
)
radiusEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusEnable.setStatus("current")
_RadiusServerExternal_ObjectIdentity = ObjectIdentity
radiusServerExternal = _RadiusServerExternal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2)
)
_RadiusPriServerIPAddress_Type = IpAddress
_RadiusPriServerIPAddress_Object = MibScalar
radiusPriServerIPAddress = _RadiusPriServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 1),
    _RadiusPriServerIPAddress_Type()
)
radiusPriServerIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPriServerIPAddress.setStatus("current")


class _RadiusPriServerPort_Type(Integer32):
    """Custom type radiusPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusPriServerPort_Type.__name__ = "Integer32"
_RadiusPriServerPort_Object = MibScalar
radiusPriServerPort = _RadiusPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 2),
    _RadiusPriServerPort_Type()
)
radiusPriServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPriServerPort.setStatus("current")


class _RadiusPriServerSecret_Type(DisplayString):
    """Custom type radiusPriServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RadiusPriServerSecret_Type.__name__ = "DisplayString"
_RadiusPriServerSecret_Object = MibScalar
radiusPriServerSecret = _RadiusPriServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 3),
    _RadiusPriServerSecret_Type()
)
radiusPriServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPriServerSecret.setStatus("current")
_RadiusSecServerIPAddress_Type = IpAddress
_RadiusSecServerIPAddress_Object = MibScalar
radiusSecServerIPAddress = _RadiusSecServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 4),
    _RadiusSecServerIPAddress_Type()
)
radiusSecServerIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecServerIPAddress.setStatus("current")


class _RadiusSecServerPort_Type(Integer32):
    """Custom type radiusSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusSecServerPort_Type.__name__ = "Integer32"
_RadiusSecServerPort_Object = MibScalar
radiusSecServerPort = _RadiusSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 5),
    _RadiusSecServerPort_Type()
)
radiusSecServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecServerPort.setStatus("current")


class _RadiusSecServerSecret_Type(DisplayString):
    """Custom type radiusSecServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RadiusSecServerSecret_Type.__name__ = "DisplayString"
_RadiusSecServerSecret_Object = MibScalar
radiusSecServerSecret = _RadiusSecServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 6),
    _RadiusSecServerSecret_Type()
)
radiusSecServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecServerSecret.setStatus("current")


class _RadiusTimeout_Type(Integer32):
    """Custom type radiusTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusTimeout_Type.__name__ = "Integer32"
_RadiusTimeout_Object = MibScalar
radiusTimeout = _RadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 7),
    _RadiusTimeout_Type()
)
radiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusTimeout.setStatus("current")


class _RadiusAcctEnable_Type(Integer32):
    """Custom type radiusAcctEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RadiusAcctEnable_Type.__name__ = "Integer32"
_RadiusAcctEnable_Object = MibScalar
radiusAcctEnable = _RadiusAcctEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 8),
    _RadiusAcctEnable_Type()
)
radiusAcctEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctEnable.setStatus("current")
_RadiusAcctPriServerIPAddress_Type = IpAddress
_RadiusAcctPriServerIPAddress_Object = MibScalar
radiusAcctPriServerIPAddress = _RadiusAcctPriServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 9),
    _RadiusAcctPriServerIPAddress_Type()
)
radiusAcctPriServerIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctPriServerIPAddress.setStatus("current")


class _RadiusAcctPriServerPort_Type(Integer32):
    """Custom type radiusAcctPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusAcctPriServerPort_Type.__name__ = "Integer32"
_RadiusAcctPriServerPort_Object = MibScalar
radiusAcctPriServerPort = _RadiusAcctPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 10),
    _RadiusAcctPriServerPort_Type()
)
radiusAcctPriServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctPriServerPort.setStatus("current")


class _RadiusAcctPriServerSecret_Type(DisplayString):
    """Custom type radiusAcctPriServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RadiusAcctPriServerSecret_Type.__name__ = "DisplayString"
_RadiusAcctPriServerSecret_Object = MibScalar
radiusAcctPriServerSecret = _RadiusAcctPriServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 11),
    _RadiusAcctPriServerSecret_Type()
)
radiusAcctPriServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctPriServerSecret.setStatus("current")
_RadiusAcctSecServerIPAddress_Type = IpAddress
_RadiusAcctSecServerIPAddress_Object = MibScalar
radiusAcctSecServerIPAddress = _RadiusAcctSecServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 12),
    _RadiusAcctSecServerIPAddress_Type()
)
radiusAcctSecServerIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctSecServerIPAddress.setStatus("current")


class _RadiusAcctSecServerPort_Type(Integer32):
    """Custom type radiusAcctSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusAcctSecServerPort_Type.__name__ = "Integer32"
_RadiusAcctSecServerPort_Object = MibScalar
radiusAcctSecServerPort = _RadiusAcctSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 13),
    _RadiusAcctSecServerPort_Type()
)
radiusAcctSecServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctSecServerPort.setStatus("current")


class _RadiusAcctSecServerSecret_Type(DisplayString):
    """Custom type radiusAcctSecServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RadiusAcctSecServerSecret_Type.__name__ = "DisplayString"
_RadiusAcctSecServerSecret_Object = MibScalar
radiusAcctSecServerSecret = _RadiusAcctSecServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 14),
    _RadiusAcctSecServerSecret_Type()
)
radiusAcctSecServerSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctSecServerSecret.setStatus("current")


class _RadiusAcctInterval_Type(Integer32):
    """Custom type radiusAcctInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 65535),
    )


_RadiusAcctInterval_Type.__name__ = "Integer32"
_RadiusAcctInterval_Object = MibScalar
radiusAcctInterval = _RadiusAcctInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 15),
    _RadiusAcctInterval_Type()
)
radiusAcctInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctInterval.setStatus("current")


class _RadiusNasIdentifier_Type(DisplayString):
    """Custom type radiusNasIdentifier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RadiusNasIdentifier_Type.__name__ = "DisplayString"
_RadiusNasIdentifier_Object = MibScalar
radiusNasIdentifier = _RadiusNasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 16),
    _RadiusNasIdentifier_Type()
)
radiusNasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasIdentifier.setStatus("current")


class _RadiusPriServerHostname_Type(DisplayString):
    """Custom type radiusPriServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RadiusPriServerHostname_Type.__name__ = "DisplayString"
_RadiusPriServerHostname_Object = MibScalar
radiusPriServerHostname = _RadiusPriServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 17),
    _RadiusPriServerHostname_Type()
)
radiusPriServerHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPriServerHostname.setStatus("current")


class _RadiusSecServerHostname_Type(DisplayString):
    """Custom type radiusSecServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RadiusSecServerHostname_Type.__name__ = "DisplayString"
_RadiusSecServerHostname_Object = MibScalar
radiusSecServerHostname = _RadiusSecServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 18),
    _RadiusSecServerHostname_Type()
)
radiusSecServerHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecServerHostname.setStatus("current")


class _RadiusAcctPriServerHostname_Type(DisplayString):
    """Custom type radiusAcctPriServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RadiusAcctPriServerHostname_Type.__name__ = "DisplayString"
_RadiusAcctPriServerHostname_Object = MibScalar
radiusAcctPriServerHostname = _RadiusAcctPriServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 19),
    _RadiusAcctPriServerHostname_Type()
)
radiusAcctPriServerHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctPriServerHostname.setStatus("current")


class _RadiusAcctSecServerHostname_Type(DisplayString):
    """Custom type radiusAcctSecServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RadiusAcctSecServerHostname_Type.__name__ = "DisplayString"
_RadiusAcctSecServerHostname_Object = MibScalar
radiusAcctSecServerHostname = _RadiusAcctSecServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 20),
    _RadiusAcctSecServerHostname_Type()
)
radiusAcctSecServerHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctSecServerHostname.setStatus("current")


class _RadiusPriServerSecretEnc_Type(DisplayString):
    """Custom type radiusPriServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_RadiusPriServerSecretEnc_Type.__name__ = "DisplayString"
_RadiusPriServerSecretEnc_Object = MibScalar
radiusPriServerSecretEnc = _RadiusPriServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 21),
    _RadiusPriServerSecretEnc_Type()
)
radiusPriServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPriServerSecretEnc.setStatus("current")


class _RadiusSecServerSecretEnc_Type(DisplayString):
    """Custom type radiusSecServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_RadiusSecServerSecretEnc_Type.__name__ = "DisplayString"
_RadiusSecServerSecretEnc_Object = MibScalar
radiusSecServerSecretEnc = _RadiusSecServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 22),
    _RadiusSecServerSecretEnc_Type()
)
radiusSecServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecServerSecretEnc.setStatus("current")


class _RadiusAcctPriServerSecretEnc_Type(DisplayString):
    """Custom type radiusAcctPriServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_RadiusAcctPriServerSecretEnc_Type.__name__ = "DisplayString"
_RadiusAcctPriServerSecretEnc_Object = MibScalar
radiusAcctPriServerSecretEnc = _RadiusAcctPriServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 23),
    _RadiusAcctPriServerSecretEnc_Type()
)
radiusAcctPriServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctPriServerSecretEnc.setStatus("current")


class _RadiusAcctSecServerSecretEnc_Type(DisplayString):
    """Custom type radiusAcctSecServerSecretEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_RadiusAcctSecServerSecretEnc_Type.__name__ = "DisplayString"
_RadiusAcctSecServerSecretEnc_Object = MibScalar
radiusAcctSecServerSecretEnc = _RadiusAcctSecServerSecretEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 24),
    _RadiusAcctSecServerSecretEnc_Type()
)
radiusAcctSecServerSecretEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctSecServerSecretEnc.setStatus("current")


class _RadiusDASPort_Type(Integer32):
    """Custom type radiusDASPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusDASPort_Type.__name__ = "Integer32"
_RadiusDASPort_Object = MibScalar
radiusDASPort = _RadiusDASPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 25),
    _RadiusDASPort_Type()
)
radiusDASPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusDASPort.setStatus("current")


class _RadiusDASTimeWindow_Type(Integer32):
    """Custom type radiusDASTimeWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 10000000),
    )


_RadiusDASTimeWindow_Type.__name__ = "Integer32"
_RadiusDASTimeWindow_Object = MibScalar
radiusDASTimeWindow = _RadiusDASTimeWindow_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 26),
    _RadiusDASTimeWindow_Type()
)
radiusDASTimeWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusDASTimeWindow.setStatus("current")


class _RadiusDASEventTimestamp_Type(Integer32):
    """Custom type radiusDASEventTimestamp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("optional", 0),
          ("required", 1))
    )


_RadiusDASEventTimestamp_Type.__name__ = "Integer32"
_RadiusDASEventTimestamp_Object = MibScalar
radiusDASEventTimestamp = _RadiusDASEventTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 27),
    _RadiusDASEventTimestamp_Type()
)
radiusDASEventTimestamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusDASEventTimestamp.setStatus("current")


class _RadiusCalledStationIdFormat_Type(Integer32):
    """Custom type radiusCalledStationIdFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bssid-ssid", 0),
          ("bssid", 1),
          ("ethernet-mac", 2))
    )


_RadiusCalledStationIdFormat_Type.__name__ = "Integer32"
_RadiusCalledStationIdFormat_Object = MibScalar
radiusCalledStationIdFormat = _RadiusCalledStationIdFormat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 28),
    _RadiusCalledStationIdFormat_Type()
)
radiusCalledStationIdFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusCalledStationIdFormat.setStatus("current")


class _RadiusStationMACFormat_Type(Integer32):
    """Custom type radiusStationMACFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lower", 0),
          ("upper", 1),
          ("lower-hyphen", 2),
          ("upper-hyphen", 3))
    )


_RadiusStationMACFormat_Type.__name__ = "Integer32"
_RadiusStationMACFormat_Object = MibScalar
radiusStationMACFormat = _RadiusStationMACFormat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 29),
    _RadiusStationMACFormat_Type()
)
radiusStationMACFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusStationMACFormat.setStatus("current")


class _RadiusFailoverTimeout_Type(Integer32):
    """Custom type radiusFailoverTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_RadiusFailoverTimeout_Type.__name__ = "Integer32"
_RadiusFailoverTimeout_Object = MibScalar
radiusFailoverTimeout = _RadiusFailoverTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 30),
    _RadiusFailoverTimeout_Type()
)
radiusFailoverTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusFailoverTimeout.setStatus("current")
_RadiusServerInternal_ObjectIdentity = ObjectIdentity
radiusServerInternal = _RadiusServerInternal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3)
)
_RadiusUserTable_Object = MibTable
radiusUserTable = _RadiusUserTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1)
)
if mibBuilder.loadTexts:
    radiusUserTable.setStatus("current")
_RadiusUserEntry_Object = MibTableRow
radiusUserEntry = _RadiusUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1)
)
radiusUserEntry.setIndexNames(
    (0, "XIRRUS-MIB", "radiusUserIndex"),
)
if mibBuilder.loadTexts:
    radiusUserEntry.setStatus("current")
_RadiusUserIndex_Type = Integer32
_RadiusUserIndex_Object = MibTableColumn
radiusUserIndex = _RadiusUserIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 1),
    _RadiusUserIndex_Type()
)
radiusUserIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    radiusUserIndex.setStatus("current")


class _RadiusUserID_Type(DisplayString):
    """Custom type radiusUserID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_RadiusUserID_Type.__name__ = "DisplayString"
_RadiusUserID_Object = MibTableColumn
radiusUserID = _RadiusUserID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 2),
    _RadiusUserID_Type()
)
radiusUserID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserID.setStatus("current")


class _RadiusUserPassword_Type(DisplayString):
    """Custom type radiusUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 100),
    )


_RadiusUserPassword_Type.__name__ = "DisplayString"
_RadiusUserPassword_Object = MibTableColumn
radiusUserPassword = _RadiusUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 3),
    _RadiusUserPassword_Type()
)
radiusUserPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserPassword.setStatus("current")


class _RadiusUserSSID_Type(DisplayString):
    """Custom type radiusUserSSID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_RadiusUserSSID_Type.__name__ = "DisplayString"
_RadiusUserSSID_Object = MibTableColumn
radiusUserSSID = _RadiusUserSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 4),
    _RadiusUserSSID_Type()
)
radiusUserSSID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserSSID.setStatus("current")
_RadiusUserRowStatus_Type = RowStatus
_RadiusUserRowStatus_Object = MibTableColumn
radiusUserRowStatus = _RadiusUserRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 5),
    _RadiusUserRowStatus_Type()
)
radiusUserRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserRowStatus.setStatus("current")


class _RadiusUserGroup_Type(DisplayString):
    """Custom type radiusUserGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_RadiusUserGroup_Type.__name__ = "DisplayString"
_RadiusUserGroup_Object = MibTableColumn
radiusUserGroup = _RadiusUserGroup_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 6),
    _RadiusUserGroup_Type()
)
radiusUserGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserGroup.setStatus("current")


class _RadiusUserPasswordForm_Type(Integer32):
    """Custom type radiusUserPasswordForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_RadiusUserPasswordForm_Type.__name__ = "Integer32"
_RadiusUserPasswordForm_Object = MibTableColumn
radiusUserPasswordForm = _RadiusUserPasswordForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 7),
    _RadiusUserPasswordForm_Type()
)
radiusUserPasswordForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    radiusUserPasswordForm.setStatus("current")


class _RadiusUserTableReset_Type(Integer32):
    """Custom type radiusUserTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_RadiusUserTableReset_Type.__name__ = "Integer32"
_RadiusUserTableReset_Object = MibScalar
radiusUserTableReset = _RadiusUserTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 2),
    _RadiusUserTableReset_Type()
)
radiusUserTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusUserTableReset.setStatus("current")
_RadiusServerAD_ObjectIdentity = ObjectIdentity
radiusServerAD = _RadiusServerAD_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4)
)


class _ActiveDirectoryUser_Type(DisplayString):
    """Custom type activeDirectoryUser based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ActiveDirectoryUser_Type.__name__ = "DisplayString"
_ActiveDirectoryUser_Object = MibScalar
activeDirectoryUser = _ActiveDirectoryUser_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 1),
    _ActiveDirectoryUser_Type()
)
activeDirectoryUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryUser.setStatus("current")


class _ActiveDirectoryPassword_Type(DisplayString):
    """Custom type activeDirectoryPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ActiveDirectoryPassword_Type.__name__ = "DisplayString"
_ActiveDirectoryPassword_Object = MibScalar
activeDirectoryPassword = _ActiveDirectoryPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 2),
    _ActiveDirectoryPassword_Type()
)
activeDirectoryPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryPassword.setStatus("current")


class _ActiveDirectoryDomainController_Type(DisplayString):
    """Custom type activeDirectoryDomainController based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_ActiveDirectoryDomainController_Type.__name__ = "DisplayString"
_ActiveDirectoryDomainController_Object = MibScalar
activeDirectoryDomainController = _ActiveDirectoryDomainController_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 3),
    _ActiveDirectoryDomainController_Type()
)
activeDirectoryDomainController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryDomainController.setStatus("current")


class _ActiveDirectoryWorkgroup_Type(DisplayString):
    """Custom type activeDirectoryWorkgroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_ActiveDirectoryWorkgroup_Type.__name__ = "DisplayString"
_ActiveDirectoryWorkgroup_Object = MibScalar
activeDirectoryWorkgroup = _ActiveDirectoryWorkgroup_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 4),
    _ActiveDirectoryWorkgroup_Type()
)
activeDirectoryWorkgroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryWorkgroup.setStatus("current")


class _ActiveDirectoryRealm_Type(DisplayString):
    """Custom type activeDirectoryRealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_ActiveDirectoryRealm_Type.__name__ = "DisplayString"
_ActiveDirectoryRealm_Object = MibScalar
activeDirectoryRealm = _ActiveDirectoryRealm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 5),
    _ActiveDirectoryRealm_Type()
)
activeDirectoryRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryRealm.setStatus("current")


class _ActiveDirectoryJoin_Type(Integer32):
    """Custom type activeDirectoryJoin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("join", 1)
    )


_ActiveDirectoryJoin_Type.__name__ = "Integer32"
_ActiveDirectoryJoin_Object = MibScalar
activeDirectoryJoin = _ActiveDirectoryJoin_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 6),
    _ActiveDirectoryJoin_Type()
)
activeDirectoryJoin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryJoin.setStatus("current")


class _ActiveDirectoryLeave_Type(Integer32):
    """Custom type activeDirectoryLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("leave", 1)
    )


_ActiveDirectoryLeave_Type.__name__ = "Integer32"
_ActiveDirectoryLeave_Object = MibScalar
activeDirectoryLeave = _ActiveDirectoryLeave_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 7),
    _ActiveDirectoryLeave_Type()
)
activeDirectoryLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeDirectoryLeave.setStatus("current")
_RoamAssist_ObjectIdentity = ObjectIdentity
roamAssist = _RoamAssist_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15)
)


class _RoamAssistEnable_Type(Integer32):
    """Custom type roamAssistEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RoamAssistEnable_Type.__name__ = "Integer32"
_RoamAssistEnable_Object = MibScalar
roamAssistEnable = _RoamAssistEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 1),
    _RoamAssistEnable_Type()
)
roamAssistEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    roamAssistEnable.setStatus("current")


class _RoamAssistPeriod_Type(Integer32):
    """Custom type roamAssistPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 9999),
    )


_RoamAssistPeriod_Type.__name__ = "Integer32"
_RoamAssistPeriod_Object = MibScalar
roamAssistPeriod = _RoamAssistPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 2),
    _RoamAssistPeriod_Type()
)
roamAssistPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    roamAssistPeriod.setStatus("current")


class _RoamAssistThreshold_Type(Integer32):
    """Custom type roamAssistThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 50),
    )


_RoamAssistThreshold_Type.__name__ = "Integer32"
_RoamAssistThreshold_Object = MibScalar
roamAssistThreshold = _RoamAssistThreshold_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 3),
    _RoamAssistThreshold_Type()
)
roamAssistThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    roamAssistThreshold.setStatus("current")


class _RoamAssistDataRate_Type(Integer32):
    """Custom type roamAssistDataRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_RoamAssistDataRate_Type.__name__ = "Integer32"
_RoamAssistDataRate_Object = MibScalar
roamAssistDataRate = _RoamAssistDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 4),
    _RoamAssistDataRate_Type()
)
roamAssistDataRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    roamAssistDataRate.setStatus("current")


class _RoamAssistDevices_Type(DisplayString):
    """Custom type roamAssistDevices based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RoamAssistDevices_Type.__name__ = "DisplayString"
_RoamAssistDevices_Object = MibScalar
roamAssistDevices = _RoamAssistDevices_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 5),
    _RoamAssistDevices_Type()
)
roamAssistDevices.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    roamAssistDevices.setStatus("current")
_Security_ObjectIdentity = ObjectIdentity
security = _Security_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16)
)
_Wep_ObjectIdentity = ObjectIdentity
wep = _Wep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1)
)


class _WepDefaultKeyID_Type(Integer32):
    """Custom type wepDefaultKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WepDefaultKeyID_Type.__name__ = "Integer32"
_WepDefaultKeyID_Object = MibScalar
wepDefaultKeyID = _WepDefaultKeyID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 1),
    _WepDefaultKeyID_Type()
)
wepDefaultKeyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wepDefaultKeyID.setStatus("current")
_WepKeyTable_Object = MibTable
wepKeyTable = _WepKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2)
)
if mibBuilder.loadTexts:
    wepKeyTable.setStatus("current")
_WepKeyEntry_Object = MibTableRow
wepKeyEntry = _WepKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1)
)
wepKeyEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wepKeyNum"),
)
if mibBuilder.loadTexts:
    wepKeyEntry.setStatus("current")
_WepKeyNum_Type = Integer32
_WepKeyNum_Object = MibTableColumn
wepKeyNum = _WepKeyNum_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 1),
    _WepKeyNum_Type()
)
wepKeyNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wepKeyNum.setStatus("current")


class _WepKeySize_Type(Integer32):
    """Custom type wepKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wep40", 1),
          ("wep128", 2))
    )


_WepKeySize_Type.__name__ = "Integer32"
_WepKeySize_Object = MibTableColumn
wepKeySize = _WepKeySize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 2),
    _WepKeySize_Type()
)
wepKeySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wepKeySize.setStatus("current")


class _WepKeyString_Type(DisplayString):
    """Custom type wepKeyString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 26),
    )


_WepKeyString_Type.__name__ = "DisplayString"
_WepKeyString_Object = MibTableColumn
wepKeyString = _WepKeyString_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 3),
    _WepKeyString_Type()
)
wepKeyString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wepKeyString.setStatus("current")


class _WepKeyStringForm_Type(Integer32):
    """Custom type wepKeyStringForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_WepKeyStringForm_Type.__name__ = "Integer32"
_WepKeyStringForm_Object = MibTableColumn
wepKeyStringForm = _WepKeyStringForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 4),
    _WepKeyStringForm_Type()
)
wepKeyStringForm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wepKeyStringForm.setStatus("current")
_Wpa_ObjectIdentity = ObjectIdentity
wpa = _Wpa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2)
)


class _WpaTKIP_Type(Integer32):
    """Custom type wpaTKIP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WpaTKIP_Type.__name__ = "Integer32"
_WpaTKIP_Object = MibScalar
wpaTKIP = _WpaTKIP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 1),
    _WpaTKIP_Type()
)
wpaTKIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaTKIP.setStatus("current")


class _WpaAES_Type(Integer32):
    """Custom type wpaAES based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WpaAES_Type.__name__ = "Integer32"
_WpaAES_Object = MibScalar
wpaAES = _WpaAES_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 2),
    _WpaAES_Type()
)
wpaAES.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaAES.setStatus("current")


class _WpaEAP_Type(Integer32):
    """Custom type wpaEAP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WpaEAP_Type.__name__ = "Integer32"
_WpaEAP_Object = MibScalar
wpaEAP = _WpaEAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 3),
    _WpaEAP_Type()
)
wpaEAP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaEAP.setStatus("current")


class _WpaPSK_Type(Integer32):
    """Custom type wpaPSK based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WpaPSK_Type.__name__ = "Integer32"
_WpaPSK_Object = MibScalar
wpaPSK = _WpaPSK_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 4),
    _WpaPSK_Type()
)
wpaPSK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaPSK.setStatus("current")


class _WpaPassphrase_Type(DisplayString):
    """Custom type wpaPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(8, 64),
    )


_WpaPassphrase_Type.__name__ = "DisplayString"
_WpaPassphrase_Object = MibScalar
wpaPassphrase = _WpaPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 5),
    _WpaPassphrase_Type()
)
wpaPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaPassphrase.setStatus("current")


class _WpaRekey_Type(Integer32):
    """Custom type wpaRekey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_WpaRekey_Type.__name__ = "Integer32"
_WpaRekey_Object = MibScalar
wpaRekey = _WpaRekey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 6),
    _WpaRekey_Type()
)
wpaRekey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaRekey.setStatus("current")


class _WpaPassphraseEnc_Type(DisplayString):
    """Custom type wpaPassphraseEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 128),
    )


_WpaPassphraseEnc_Type.__name__ = "DisplayString"
_WpaPassphraseEnc_Object = MibScalar
wpaPassphraseEnc = _WpaPassphraseEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 7),
    _WpaPassphraseEnc_Type()
)
wpaPassphraseEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wpaPassphraseEnc.setStatus("current")
_SnmpAgent_ObjectIdentity = ObjectIdentity
snmpAgent = _SnmpAgent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18)
)


class _SnmpAgentEnable_Type(Integer32):
    """Custom type snmpAgentEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SnmpAgentEnable_Type.__name__ = "Integer32"
_SnmpAgentEnable_Object = MibScalar
snmpAgentEnable = _SnmpAgentEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 1),
    _SnmpAgentEnable_Type()
)
snmpAgentEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentEnable.setStatus("current")


class _SnmpAgentReadWriteCommunity_Type(DisplayString):
    """Custom type snmpAgentReadWriteCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SnmpAgentReadWriteCommunity_Type.__name__ = "DisplayString"
_SnmpAgentReadWriteCommunity_Object = MibScalar
snmpAgentReadWriteCommunity = _SnmpAgentReadWriteCommunity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 2),
    _SnmpAgentReadWriteCommunity_Type()
)
snmpAgentReadWriteCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentReadWriteCommunity.setStatus("current")


class _SnmpAgentTrapHost_Type(DisplayString):
    """Custom type snmpAgentTrapHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpAgentTrapHost_Type.__name__ = "DisplayString"
_SnmpAgentTrapHost_Object = MibScalar
snmpAgentTrapHost = _SnmpAgentTrapHost_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 3),
    _SnmpAgentTrapHost_Type()
)
snmpAgentTrapHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapHost.setStatus("current")


class _SnmpAgentTrapPort_Type(Integer32):
    """Custom type snmpAgentTrapPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpAgentTrapPort_Type.__name__ = "Integer32"
_SnmpAgentTrapPort_Object = MibScalar
snmpAgentTrapPort = _SnmpAgentTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 4),
    _SnmpAgentTrapPort_Type()
)
snmpAgentTrapPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapPort.setStatus("current")


class _SnmpAgentTrapAuth_Type(Integer32):
    """Custom type snmpAgentTrapAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SnmpAgentTrapAuth_Type.__name__ = "Integer32"
_SnmpAgentTrapAuth_Object = MibScalar
snmpAgentTrapAuth = _SnmpAgentTrapAuth_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 5),
    _SnmpAgentTrapAuth_Type()
)
snmpAgentTrapAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapAuth.setStatus("current")


class _SnmpAgentReadOnlyCommunity_Type(DisplayString):
    """Custom type snmpAgentReadOnlyCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SnmpAgentReadOnlyCommunity_Type.__name__ = "DisplayString"
_SnmpAgentReadOnlyCommunity_Object = MibScalar
snmpAgentReadOnlyCommunity = _SnmpAgentReadOnlyCommunity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 6),
    _SnmpAgentReadOnlyCommunity_Type()
)
snmpAgentReadOnlyCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentReadOnlyCommunity.setStatus("current")


class _SnmpAgentTrapHost2_Type(DisplayString):
    """Custom type snmpAgentTrapHost2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpAgentTrapHost2_Type.__name__ = "DisplayString"
_SnmpAgentTrapHost2_Object = MibScalar
snmpAgentTrapHost2 = _SnmpAgentTrapHost2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 7),
    _SnmpAgentTrapHost2_Type()
)
snmpAgentTrapHost2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapHost2.setStatus("current")


class _SnmpAgentTrapPort2_Type(Integer32):
    """Custom type snmpAgentTrapPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpAgentTrapPort2_Type.__name__ = "Integer32"
_SnmpAgentTrapPort2_Object = MibScalar
snmpAgentTrapPort2 = _SnmpAgentTrapPort2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 8),
    _SnmpAgentTrapPort2_Type()
)
snmpAgentTrapPort2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapPort2.setStatus("current")


class _SnmpAgentTrapHost3_Type(DisplayString):
    """Custom type snmpAgentTrapHost3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpAgentTrapHost3_Type.__name__ = "DisplayString"
_SnmpAgentTrapHost3_Object = MibScalar
snmpAgentTrapHost3 = _SnmpAgentTrapHost3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 9),
    _SnmpAgentTrapHost3_Type()
)
snmpAgentTrapHost3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapHost3.setStatus("current")


class _SnmpAgentTrapPort3_Type(Integer32):
    """Custom type snmpAgentTrapPort3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpAgentTrapPort3_Type.__name__ = "Integer32"
_SnmpAgentTrapPort3_Object = MibScalar
snmpAgentTrapPort3 = _SnmpAgentTrapPort3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 10),
    _SnmpAgentTrapPort3_Type()
)
snmpAgentTrapPort3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapPort3.setStatus("current")


class _SnmpAgentTrapHost4_Type(DisplayString):
    """Custom type snmpAgentTrapHost4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpAgentTrapHost4_Type.__name__ = "DisplayString"
_SnmpAgentTrapHost4_Object = MibScalar
snmpAgentTrapHost4 = _SnmpAgentTrapHost4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 11),
    _SnmpAgentTrapHost4_Type()
)
snmpAgentTrapHost4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapHost4.setStatus("current")


class _SnmpAgentTrapPort4_Type(Integer32):
    """Custom type snmpAgentTrapPort4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpAgentTrapPort4_Type.__name__ = "Integer32"
_SnmpAgentTrapPort4_Object = MibScalar
snmpAgentTrapPort4 = _SnmpAgentTrapPort4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 12),
    _SnmpAgentTrapPort4_Type()
)
snmpAgentTrapPort4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapPort4.setStatus("current")


class _SnmpAgentV3Enable_Type(Integer32):
    """Custom type snmpAgentV3Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SnmpAgentV3Enable_Type.__name__ = "Integer32"
_SnmpAgentV3Enable_Object = MibScalar
snmpAgentV3Enable = _SnmpAgentV3Enable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 13),
    _SnmpAgentV3Enable_Type()
)
snmpAgentV3Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3Enable.setStatus("current")


class _SnmpAgentV3AuthType_Type(Integer32):
    """Custom type snmpAgentV3AuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha", 1))
    )


_SnmpAgentV3AuthType_Type.__name__ = "Integer32"
_SnmpAgentV3AuthType_Object = MibScalar
snmpAgentV3AuthType = _SnmpAgentV3AuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 14),
    _SnmpAgentV3AuthType_Type()
)
snmpAgentV3AuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3AuthType.setStatus("current")


class _SnmpAgentV3PrivProtocol_Type(Integer32):
    """Custom type snmpAgentV3PrivProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("des", 0),
          ("aes", 1))
    )


_SnmpAgentV3PrivProtocol_Type.__name__ = "Integer32"
_SnmpAgentV3PrivProtocol_Object = MibScalar
snmpAgentV3PrivProtocol = _SnmpAgentV3PrivProtocol_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 15),
    _SnmpAgentV3PrivProtocol_Type()
)
snmpAgentV3PrivProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3PrivProtocol.setStatus("current")


class _SnmpAgentV3ReadWriteUser_Type(DisplayString):
    """Custom type snmpAgentV3ReadWriteUser based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SnmpAgentV3ReadWriteUser_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadWriteUser_Object = MibScalar
snmpAgentV3ReadWriteUser = _SnmpAgentV3ReadWriteUser_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 16),
    _SnmpAgentV3ReadWriteUser_Type()
)
snmpAgentV3ReadWriteUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadWriteUser.setStatus("current")


class _SnmpAgentV3ReadWriteUserAuthPassphrase_Type(DisplayString):
    """Custom type snmpAgentV3ReadWriteUserAuthPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 30),
    )


_SnmpAgentV3ReadWriteUserAuthPassphrase_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadWriteUserAuthPassphrase_Object = MibScalar
snmpAgentV3ReadWriteUserAuthPassphrase = _SnmpAgentV3ReadWriteUserAuthPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 17),
    _SnmpAgentV3ReadWriteUserAuthPassphrase_Type()
)
snmpAgentV3ReadWriteUserAuthPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadWriteUserAuthPassphrase.setStatus("current")


class _SnmpAgentV3ReadWriteUserAuthPassphraseEnc_Type(DisplayString):
    """Custom type snmpAgentV3ReadWriteUserAuthPassphraseEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 60),
    )


_SnmpAgentV3ReadWriteUserAuthPassphraseEnc_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadWriteUserAuthPassphraseEnc_Object = MibScalar
snmpAgentV3ReadWriteUserAuthPassphraseEnc = _SnmpAgentV3ReadWriteUserAuthPassphraseEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 18),
    _SnmpAgentV3ReadWriteUserAuthPassphraseEnc_Type()
)
snmpAgentV3ReadWriteUserAuthPassphraseEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadWriteUserAuthPassphraseEnc.setStatus("current")


class _SnmpAgentV3ReadWriteUserPrivPassphrase_Type(DisplayString):
    """Custom type snmpAgentV3ReadWriteUserPrivPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 30),
    )


_SnmpAgentV3ReadWriteUserPrivPassphrase_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadWriteUserPrivPassphrase_Object = MibScalar
snmpAgentV3ReadWriteUserPrivPassphrase = _SnmpAgentV3ReadWriteUserPrivPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 19),
    _SnmpAgentV3ReadWriteUserPrivPassphrase_Type()
)
snmpAgentV3ReadWriteUserPrivPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadWriteUserPrivPassphrase.setStatus("current")


class _SnmpAgentV3ReadWriteUserPrivPassphraseEnc_Type(DisplayString):
    """Custom type snmpAgentV3ReadWriteUserPrivPassphraseEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 60),
    )


_SnmpAgentV3ReadWriteUserPrivPassphraseEnc_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadWriteUserPrivPassphraseEnc_Object = MibScalar
snmpAgentV3ReadWriteUserPrivPassphraseEnc = _SnmpAgentV3ReadWriteUserPrivPassphraseEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 20),
    _SnmpAgentV3ReadWriteUserPrivPassphraseEnc_Type()
)
snmpAgentV3ReadWriteUserPrivPassphraseEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadWriteUserPrivPassphraseEnc.setStatus("current")


class _SnmpAgentV3ReadOnlyUser_Type(DisplayString):
    """Custom type snmpAgentV3ReadOnlyUser based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SnmpAgentV3ReadOnlyUser_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadOnlyUser_Object = MibScalar
snmpAgentV3ReadOnlyUser = _SnmpAgentV3ReadOnlyUser_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 21),
    _SnmpAgentV3ReadOnlyUser_Type()
)
snmpAgentV3ReadOnlyUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadOnlyUser.setStatus("current")


class _SnmpAgentV3ReadOnlyUserAuthPassphrase_Type(DisplayString):
    """Custom type snmpAgentV3ReadOnlyUserAuthPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 30),
    )


_SnmpAgentV3ReadOnlyUserAuthPassphrase_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadOnlyUserAuthPassphrase_Object = MibScalar
snmpAgentV3ReadOnlyUserAuthPassphrase = _SnmpAgentV3ReadOnlyUserAuthPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 22),
    _SnmpAgentV3ReadOnlyUserAuthPassphrase_Type()
)
snmpAgentV3ReadOnlyUserAuthPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadOnlyUserAuthPassphrase.setStatus("current")


class _SnmpAgentV3ReadOnlyUserAuthPassphraseEnc_Type(DisplayString):
    """Custom type snmpAgentV3ReadOnlyUserAuthPassphraseEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 60),
    )


_SnmpAgentV3ReadOnlyUserAuthPassphraseEnc_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadOnlyUserAuthPassphraseEnc_Object = MibScalar
snmpAgentV3ReadOnlyUserAuthPassphraseEnc = _SnmpAgentV3ReadOnlyUserAuthPassphraseEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 23),
    _SnmpAgentV3ReadOnlyUserAuthPassphraseEnc_Type()
)
snmpAgentV3ReadOnlyUserAuthPassphraseEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadOnlyUserAuthPassphraseEnc.setStatus("current")


class _SnmpAgentV3ReadOnlyUserPrivPassphrase_Type(DisplayString):
    """Custom type snmpAgentV3ReadOnlyUserPrivPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 30),
    )


_SnmpAgentV3ReadOnlyUserPrivPassphrase_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadOnlyUserPrivPassphrase_Object = MibScalar
snmpAgentV3ReadOnlyUserPrivPassphrase = _SnmpAgentV3ReadOnlyUserPrivPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 24),
    _SnmpAgentV3ReadOnlyUserPrivPassphrase_Type()
)
snmpAgentV3ReadOnlyUserPrivPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadOnlyUserPrivPassphrase.setStatus("current")


class _SnmpAgentV3ReadOnlyUserPrivPassphraseEnc_Type(DisplayString):
    """Custom type snmpAgentV3ReadOnlyUserPrivPassphraseEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 60),
    )


_SnmpAgentV3ReadOnlyUserPrivPassphraseEnc_Type.__name__ = "DisplayString"
_SnmpAgentV3ReadOnlyUserPrivPassphraseEnc_Object = MibScalar
snmpAgentV3ReadOnlyUserPrivPassphraseEnc = _SnmpAgentV3ReadOnlyUserPrivPassphraseEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 25),
    _SnmpAgentV3ReadOnlyUserPrivPassphraseEnc_Type()
)
snmpAgentV3ReadOnlyUserPrivPassphraseEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentV3ReadOnlyUserPrivPassphraseEnc.setStatus("current")


class _SnmpAgentEngineID_Type(DisplayString):
    """Custom type snmpAgentEngineID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(24, 50),
    )


_SnmpAgentEngineID_Type.__name__ = "DisplayString"
_SnmpAgentEngineID_Object = MibScalar
snmpAgentEngineID = _SnmpAgentEngineID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 26),
    _SnmpAgentEngineID_Type()
)
snmpAgentEngineID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentEngineID.setStatus("current")


class _SnmpAgentRestart_Type(Integer32):
    """Custom type snmpAgentRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("restart", 1)
    )


_SnmpAgentRestart_Type.__name__ = "Integer32"
_SnmpAgentRestart_Object = MibScalar
snmpAgentRestart = _SnmpAgentRestart_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 27),
    _SnmpAgentRestart_Type()
)
snmpAgentRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentRestart.setStatus("current")


class _SnmpAgentKeepAlive_Type(Integer32):
    """Custom type snmpAgentKeepAlive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_SnmpAgentKeepAlive_Type.__name__ = "Integer32"
_SnmpAgentKeepAlive_Object = MibScalar
snmpAgentKeepAlive = _SnmpAgentKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 28),
    _SnmpAgentKeepAlive_Type()
)
snmpAgentKeepAlive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentKeepAlive.setStatus("current")


class _SnmpAgentReadWriteCommunityEnc_Type(DisplayString):
    """Custom type snmpAgentReadWriteCommunityEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_SnmpAgentReadWriteCommunityEnc_Type.__name__ = "DisplayString"
_SnmpAgentReadWriteCommunityEnc_Object = MibScalar
snmpAgentReadWriteCommunityEnc = _SnmpAgentReadWriteCommunityEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 29),
    _SnmpAgentReadWriteCommunityEnc_Type()
)
snmpAgentReadWriteCommunityEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentReadWriteCommunityEnc.setStatus("current")


class _SnmpAgentReadOnlyCommunityEnc_Type(DisplayString):
    """Custom type snmpAgentReadOnlyCommunityEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_SnmpAgentReadOnlyCommunityEnc_Type.__name__ = "DisplayString"
_SnmpAgentReadOnlyCommunityEnc_Object = MibScalar
snmpAgentReadOnlyCommunityEnc = _SnmpAgentReadOnlyCommunityEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 30),
    _SnmpAgentReadOnlyCommunityEnc_Type()
)
snmpAgentReadOnlyCommunityEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentReadOnlyCommunityEnc.setStatus("current")
_Ssid_ObjectIdentity = ObjectIdentity
ssid = _Ssid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20)
)
_SsidTable_Object = MibTable
ssidTable = _SsidTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1)
)
if mibBuilder.loadTexts:
    ssidTable.setStatus("current")
_SsidEntry_Object = MibTableRow
ssidEntry = _SsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1)
)
ssidEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ssidIndex"),
)
if mibBuilder.loadTexts:
    ssidEntry.setStatus("current")
_SsidIndex_Type = Integer32
_SsidIndex_Object = MibTableColumn
ssidIndex = _SsidIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 1),
    _SsidIndex_Type()
)
ssidIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ssidIndex.setStatus("current")


class _SsidName_Type(DisplayString):
    """Custom type ssidName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SsidName_Type.__name__ = "DisplayString"
_SsidName_Object = MibTableColumn
ssidName = _SsidName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 2),
    _SsidName_Type()
)
ssidName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidName.setStatus("current")


class _SsidBroadcast_Type(Integer32):
    """Custom type ssidBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidBroadcast_Type.__name__ = "Integer32"
_SsidBroadcast_Object = MibTableColumn
ssidBroadcast = _SsidBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 3),
    _SsidBroadcast_Type()
)
ssidBroadcast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidBroadcast.setStatus("current")


class _SsidBand_Type(Integer32):
    """Custom type ssidBand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 1),
          ("dot11a", 2),
          ("dot11bg", 3))
    )


_SsidBand_Type.__name__ = "Integer32"
_SsidBand_Object = MibTableColumn
ssidBand = _SsidBand_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 4),
    _SsidBand_Type()
)
ssidBand.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidBand.setStatus("current")


class _SsidQOS_Type(Integer32):
    """Custom type ssidQOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SsidQOS_Type.__name__ = "Integer32"
_SsidQOS_Object = MibTableColumn
ssidQOS = _SsidQOS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 5),
    _SsidQOS_Type()
)
ssidQOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidQOS.setStatus("current")


class _SsidVlan_Type(Integer32):
    """Custom type ssidVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_SsidVlan_Type.__name__ = "Integer32"
_SsidVlan_Object = MibTableColumn
ssidVlan = _SsidVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 6),
    _SsidVlan_Type()
)
ssidVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidVlan.setStatus("current")


class _SsidDhcpPool_Type(DisplayString):
    """Custom type ssidDhcpPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SsidDhcpPool_Type.__name__ = "DisplayString"
_SsidDhcpPool_Object = MibTableColumn
ssidDhcpPool = _SsidDhcpPool_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 7),
    _SsidDhcpPool_Type()
)
ssidDhcpPool.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidDhcpPool.setStatus("current")


class _SsidEncryption_Type(Integer32):
    """Custom type ssidEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wep", 1),
          ("wpa", 2),
          ("wpa2", 3),
          ("wpa-both", 4))
    )


_SsidEncryption_Type.__name__ = "Integer32"
_SsidEncryption_Object = MibTableColumn
ssidEncryption = _SsidEncryption_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 8),
    _SsidEncryption_Type()
)
ssidEncryption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidEncryption.setStatus("current")


class _SsidDefaultSecurity_Type(Integer32):
    """Custom type ssidDefaultSecurity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidDefaultSecurity_Type.__name__ = "Integer32"
_SsidDefaultSecurity_Object = MibTableColumn
ssidDefaultSecurity = _SsidDefaultSecurity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 9),
    _SsidDefaultSecurity_Type()
)
ssidDefaultSecurity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidDefaultSecurity.setStatus("current")


class _SsidWepDefaultKeyID_Type(Integer32):
    """Custom type ssidWepDefaultKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_SsidWepDefaultKeyID_Type.__name__ = "Integer32"
_SsidWepDefaultKeyID_Object = MibTableColumn
ssidWepDefaultKeyID = _SsidWepDefaultKeyID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 10),
    _SsidWepDefaultKeyID_Type()
)
ssidWepDefaultKeyID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepDefaultKeyID.setStatus("current")


class _SsidWepKey1Size_Type(Integer32):
    """Custom type ssidWepKey1Size based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wep40", 1),
          ("wep128", 2))
    )


_SsidWepKey1Size_Type.__name__ = "Integer32"
_SsidWepKey1Size_Object = MibTableColumn
ssidWepKey1Size = _SsidWepKey1Size_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 11),
    _SsidWepKey1Size_Type()
)
ssidWepKey1Size.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidWepKey1Size.setStatus("current")


class _SsidWepKey1String_Type(DisplayString):
    """Custom type ssidWepKey1String based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 26),
    )


_SsidWepKey1String_Type.__name__ = "DisplayString"
_SsidWepKey1String_Object = MibTableColumn
ssidWepKey1String = _SsidWepKey1String_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 12),
    _SsidWepKey1String_Type()
)
ssidWepKey1String.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey1String.setStatus("current")


class _SsidWepKey2Size_Type(Integer32):
    """Custom type ssidWepKey2Size based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wep40", 1),
          ("wep128", 2))
    )


_SsidWepKey2Size_Type.__name__ = "Integer32"
_SsidWepKey2Size_Object = MibTableColumn
ssidWepKey2Size = _SsidWepKey2Size_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 13),
    _SsidWepKey2Size_Type()
)
ssidWepKey2Size.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidWepKey2Size.setStatus("current")


class _SsidWepKey2String_Type(DisplayString):
    """Custom type ssidWepKey2String based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 26),
    )


_SsidWepKey2String_Type.__name__ = "DisplayString"
_SsidWepKey2String_Object = MibTableColumn
ssidWepKey2String = _SsidWepKey2String_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 14),
    _SsidWepKey2String_Type()
)
ssidWepKey2String.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey2String.setStatus("current")


class _SsidWepKey3Size_Type(Integer32):
    """Custom type ssidWepKey3Size based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wep40", 1),
          ("wep128", 2))
    )


_SsidWepKey3Size_Type.__name__ = "Integer32"
_SsidWepKey3Size_Object = MibTableColumn
ssidWepKey3Size = _SsidWepKey3Size_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 15),
    _SsidWepKey3Size_Type()
)
ssidWepKey3Size.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidWepKey3Size.setStatus("current")


class _SsidWepKey3String_Type(DisplayString):
    """Custom type ssidWepKey3String based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 26),
    )


_SsidWepKey3String_Type.__name__ = "DisplayString"
_SsidWepKey3String_Object = MibTableColumn
ssidWepKey3String = _SsidWepKey3String_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 16),
    _SsidWepKey3String_Type()
)
ssidWepKey3String.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey3String.setStatus("current")


class _SsidWepKey4Size_Type(Integer32):
    """Custom type ssidWepKey4Size based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wep40", 1),
          ("wep128", 2))
    )


_SsidWepKey4Size_Type.__name__ = "Integer32"
_SsidWepKey4Size_Object = MibTableColumn
ssidWepKey4Size = _SsidWepKey4Size_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 17),
    _SsidWepKey4Size_Type()
)
ssidWepKey4Size.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidWepKey4Size.setStatus("current")


class _SsidWepKey4String_Type(DisplayString):
    """Custom type ssidWepKey4String based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 26),
    )


_SsidWepKey4String_Type.__name__ = "DisplayString"
_SsidWepKey4String_Object = MibTableColumn
ssidWepKey4String = _SsidWepKey4String_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 18),
    _SsidWepKey4String_Type()
)
ssidWepKey4String.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey4String.setStatus("current")


class _SsidWpaEAP_Type(Integer32):
    """Custom type ssidWpaEAP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWpaEAP_Type.__name__ = "Integer32"
_SsidWpaEAP_Object = MibTableColumn
ssidWpaEAP = _SsidWpaEAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 19),
    _SsidWpaEAP_Type()
)
ssidWpaEAP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaEAP.setStatus("current")


class _SsidWpaPSK_Type(Integer32):
    """Custom type ssidWpaPSK based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("u-psk", 2))
    )


_SsidWpaPSK_Type.__name__ = "Integer32"
_SsidWpaPSK_Object = MibTableColumn
ssidWpaPSK = _SsidWpaPSK_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 20),
    _SsidWpaPSK_Type()
)
ssidWpaPSK.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaPSK.setStatus("current")


class _SsidWpaPassphrase_Type(DisplayString):
    """Custom type ssidWpaPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(8, 128),
    )


_SsidWpaPassphrase_Type.__name__ = "DisplayString"
_SsidWpaPassphrase_Object = MibTableColumn
ssidWpaPassphrase = _SsidWpaPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 21),
    _SsidWpaPassphrase_Type()
)
ssidWpaPassphrase.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaPassphrase.setStatus("current")


class _SsidRadiusEnable_Type(Integer32):
    """Custom type ssidRadiusEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("external", 1),
          ("internal", 2),
          ("active-directory", 3))
    )


_SsidRadiusEnable_Type.__name__ = "Integer32"
_SsidRadiusEnable_Object = MibTableColumn
ssidRadiusEnable = _SsidRadiusEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 22),
    _SsidRadiusEnable_Type()
)
ssidRadiusEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusEnable.setStatus("current")
_SsidRadiusPriServerIPAddress_Type = IpAddress
_SsidRadiusPriServerIPAddress_Object = MibTableColumn
ssidRadiusPriServerIPAddress = _SsidRadiusPriServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 23),
    _SsidRadiusPriServerIPAddress_Type()
)
ssidRadiusPriServerIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusPriServerIPAddress.setStatus("current")


class _SsidRadiusPriServerPort_Type(Integer32):
    """Custom type ssidRadiusPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusPriServerPort_Type.__name__ = "Integer32"
_SsidRadiusPriServerPort_Object = MibTableColumn
ssidRadiusPriServerPort = _SsidRadiusPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 24),
    _SsidRadiusPriServerPort_Type()
)
ssidRadiusPriServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusPriServerPort.setStatus("current")


class _SsidRadiusPriServerSecret_Type(DisplayString):
    """Custom type ssidRadiusPriServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SsidRadiusPriServerSecret_Type.__name__ = "DisplayString"
_SsidRadiusPriServerSecret_Object = MibTableColumn
ssidRadiusPriServerSecret = _SsidRadiusPriServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 25),
    _SsidRadiusPriServerSecret_Type()
)
ssidRadiusPriServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusPriServerSecret.setStatus("current")
_SsidRadiusSecServerIPAddress_Type = IpAddress
_SsidRadiusSecServerIPAddress_Object = MibTableColumn
ssidRadiusSecServerIPAddress = _SsidRadiusSecServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 26),
    _SsidRadiusSecServerIPAddress_Type()
)
ssidRadiusSecServerIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusSecServerIPAddress.setStatus("current")


class _SsidRadiusSecServerPort_Type(Integer32):
    """Custom type ssidRadiusSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusSecServerPort_Type.__name__ = "Integer32"
_SsidRadiusSecServerPort_Object = MibTableColumn
ssidRadiusSecServerPort = _SsidRadiusSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 27),
    _SsidRadiusSecServerPort_Type()
)
ssidRadiusSecServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusSecServerPort.setStatus("current")


class _SsidRadiusSecServerSecret_Type(DisplayString):
    """Custom type ssidRadiusSecServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SsidRadiusSecServerSecret_Type.__name__ = "DisplayString"
_SsidRadiusSecServerSecret_Object = MibTableColumn
ssidRadiusSecServerSecret = _SsidRadiusSecServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 28),
    _SsidRadiusSecServerSecret_Type()
)
ssidRadiusSecServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusSecServerSecret.setStatus("current")


class _SsidRadiusTimeout_Type(Integer32):
    """Custom type ssidRadiusTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusTimeout_Type.__name__ = "Integer32"
_SsidRadiusTimeout_Object = MibTableColumn
ssidRadiusTimeout = _SsidRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 29),
    _SsidRadiusTimeout_Type()
)
ssidRadiusTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusTimeout.setStatus("current")


class _SsidRadiusAcctEnable_Type(Integer32):
    """Custom type ssidRadiusAcctEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidRadiusAcctEnable_Type.__name__ = "Integer32"
_SsidRadiusAcctEnable_Object = MibTableColumn
ssidRadiusAcctEnable = _SsidRadiusAcctEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 30),
    _SsidRadiusAcctEnable_Type()
)
ssidRadiusAcctEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctEnable.setStatus("current")
_SsidRadiusAcctPriServerIPAddress_Type = IpAddress
_SsidRadiusAcctPriServerIPAddress_Object = MibTableColumn
ssidRadiusAcctPriServerIPAddress = _SsidRadiusAcctPriServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 31),
    _SsidRadiusAcctPriServerIPAddress_Type()
)
ssidRadiusAcctPriServerIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctPriServerIPAddress.setStatus("current")


class _SsidRadiusAcctPriServerPort_Type(Integer32):
    """Custom type ssidRadiusAcctPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusAcctPriServerPort_Type.__name__ = "Integer32"
_SsidRadiusAcctPriServerPort_Object = MibTableColumn
ssidRadiusAcctPriServerPort = _SsidRadiusAcctPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 32),
    _SsidRadiusAcctPriServerPort_Type()
)
ssidRadiusAcctPriServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctPriServerPort.setStatus("current")


class _SsidRadiusAcctPriServerSecret_Type(DisplayString):
    """Custom type ssidRadiusAcctPriServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SsidRadiusAcctPriServerSecret_Type.__name__ = "DisplayString"
_SsidRadiusAcctPriServerSecret_Object = MibTableColumn
ssidRadiusAcctPriServerSecret = _SsidRadiusAcctPriServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 33),
    _SsidRadiusAcctPriServerSecret_Type()
)
ssidRadiusAcctPriServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctPriServerSecret.setStatus("current")
_SsidRadiusAcctSecServerIPAddress_Type = IpAddress
_SsidRadiusAcctSecServerIPAddress_Object = MibTableColumn
ssidRadiusAcctSecServerIPAddress = _SsidRadiusAcctSecServerIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 34),
    _SsidRadiusAcctSecServerIPAddress_Type()
)
ssidRadiusAcctSecServerIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctSecServerIPAddress.setStatus("current")


class _SsidRadiusAcctSecServerPort_Type(Integer32):
    """Custom type ssidRadiusAcctSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusAcctSecServerPort_Type.__name__ = "Integer32"
_SsidRadiusAcctSecServerPort_Object = MibTableColumn
ssidRadiusAcctSecServerPort = _SsidRadiusAcctSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 35),
    _SsidRadiusAcctSecServerPort_Type()
)
ssidRadiusAcctSecServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctSecServerPort.setStatus("current")


class _SsidRadiusAcctSecServerSecret_Type(DisplayString):
    """Custom type ssidRadiusAcctSecServerSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SsidRadiusAcctSecServerSecret_Type.__name__ = "DisplayString"
_SsidRadiusAcctSecServerSecret_Object = MibTableColumn
ssidRadiusAcctSecServerSecret = _SsidRadiusAcctSecServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 36),
    _SsidRadiusAcctSecServerSecret_Type()
)
ssidRadiusAcctSecServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctSecServerSecret.setStatus("current")


class _SsidRadiusAcctInterval_Type(Integer32):
    """Custom type ssidRadiusAcctInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 65535),
    )


_SsidRadiusAcctInterval_Type.__name__ = "Integer32"
_SsidRadiusAcctInterval_Object = MibTableColumn
ssidRadiusAcctInterval = _SsidRadiusAcctInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 37),
    _SsidRadiusAcctInterval_Type()
)
ssidRadiusAcctInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctInterval.setStatus("current")


class _SsidAuthentication_Type(Integer32):
    """Custom type ssidAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("open", 0),
          ("radius-mac", 1),
          ("dot1x", 2))
    )


_SsidAuthentication_Type.__name__ = "Integer32"
_SsidAuthentication_Object = MibTableColumn
ssidAuthentication = _SsidAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 38),
    _SsidAuthentication_Type()
)
ssidAuthentication.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidAuthentication.setStatus("current")
_SsidRowStatus_Type = RowStatus
_SsidRowStatus_Object = MibTableColumn
ssidRowStatus = _SsidRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 39),
    _SsidRowStatus_Type()
)
ssidRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRowStatus.setStatus("current")


class _SsidRoamingLayer_Type(Integer32):
    """Custom type ssidRoamingLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("layer-2-only", 0),
          ("layer-2-and-3", 1),
          ("none", 2))
    )


_SsidRoamingLayer_Type.__name__ = "Integer32"
_SsidRoamingLayer_Object = MibTableColumn
ssidRoamingLayer = _SsidRoamingLayer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 40),
    _SsidRoamingLayer_Type()
)
ssidRoamingLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRoamingLayer.setStatus("current")


class _SsidRadiusPriServerHostname_Type(DisplayString):
    """Custom type ssidRadiusPriServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidRadiusPriServerHostname_Type.__name__ = "DisplayString"
_SsidRadiusPriServerHostname_Object = MibTableColumn
ssidRadiusPriServerHostname = _SsidRadiusPriServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 41),
    _SsidRadiusPriServerHostname_Type()
)
ssidRadiusPriServerHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusPriServerHostname.setStatus("current")


class _SsidRadiusSecServerHostname_Type(DisplayString):
    """Custom type ssidRadiusSecServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidRadiusSecServerHostname_Type.__name__ = "DisplayString"
_SsidRadiusSecServerHostname_Object = MibTableColumn
ssidRadiusSecServerHostname = _SsidRadiusSecServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 42),
    _SsidRadiusSecServerHostname_Type()
)
ssidRadiusSecServerHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusSecServerHostname.setStatus("current")


class _SsidRadiusAcctPriServerHostname_Type(DisplayString):
    """Custom type ssidRadiusAcctPriServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidRadiusAcctPriServerHostname_Type.__name__ = "DisplayString"
_SsidRadiusAcctPriServerHostname_Object = MibTableColumn
ssidRadiusAcctPriServerHostname = _SsidRadiusAcctPriServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 43),
    _SsidRadiusAcctPriServerHostname_Type()
)
ssidRadiusAcctPriServerHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctPriServerHostname.setStatus("current")


class _SsidRadiusAcctSecServerHostname_Type(DisplayString):
    """Custom type ssidRadiusAcctSecServerHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidRadiusAcctSecServerHostname_Type.__name__ = "DisplayString"
_SsidRadiusAcctSecServerHostname_Object = MibTableColumn
ssidRadiusAcctSecServerHostname = _SsidRadiusAcctSecServerHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 44),
    _SsidRadiusAcctSecServerHostname_Type()
)
ssidRadiusAcctSecServerHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctSecServerHostname.setStatus("current")


class _SsidWepKey1StringForm_Type(Integer32):
    """Custom type ssidWepKey1StringForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWepKey1StringForm_Type.__name__ = "Integer32"
_SsidWepKey1StringForm_Object = MibTableColumn
ssidWepKey1StringForm = _SsidWepKey1StringForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 45),
    _SsidWepKey1StringForm_Type()
)
ssidWepKey1StringForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey1StringForm.setStatus("current")


class _SsidWepKey2StringForm_Type(Integer32):
    """Custom type ssidWepKey2StringForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWepKey2StringForm_Type.__name__ = "Integer32"
_SsidWepKey2StringForm_Object = MibTableColumn
ssidWepKey2StringForm = _SsidWepKey2StringForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 46),
    _SsidWepKey2StringForm_Type()
)
ssidWepKey2StringForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey2StringForm.setStatus("current")


class _SsidWepKey3StringForm_Type(Integer32):
    """Custom type ssidWepKey3StringForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWepKey3StringForm_Type.__name__ = "Integer32"
_SsidWepKey3StringForm_Object = MibTableColumn
ssidWepKey3StringForm = _SsidWepKey3StringForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 47),
    _SsidWepKey3StringForm_Type()
)
ssidWepKey3StringForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey3StringForm.setStatus("current")


class _SsidWepKey4StringForm_Type(Integer32):
    """Custom type ssidWepKey4StringForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWepKey4StringForm_Type.__name__ = "Integer32"
_SsidWepKey4StringForm_Object = MibTableColumn
ssidWepKey4StringForm = _SsidWepKey4StringForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 48),
    _SsidWepKey4StringForm_Type()
)
ssidWepKey4StringForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWepKey4StringForm.setStatus("current")


class _SsidWpaPassphraseForm_Type(Integer32):
    """Custom type ssidWpaPassphraseForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWpaPassphraseForm_Type.__name__ = "Integer32"
_SsidWpaPassphraseForm_Object = MibTableColumn
ssidWpaPassphraseForm = _SsidWpaPassphraseForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 49),
    _SsidWpaPassphraseForm_Type()
)
ssidWpaPassphraseForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaPassphraseForm.setStatus("current")


class _SsidRadiusPriServerSecretForm_Type(Integer32):
    """Custom type ssidRadiusPriServerSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidRadiusPriServerSecretForm_Type.__name__ = "Integer32"
_SsidRadiusPriServerSecretForm_Object = MibTableColumn
ssidRadiusPriServerSecretForm = _SsidRadiusPriServerSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 50),
    _SsidRadiusPriServerSecretForm_Type()
)
ssidRadiusPriServerSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusPriServerSecretForm.setStatus("current")


class _SsidRadiusSecServerSecretForm_Type(Integer32):
    """Custom type ssidRadiusSecServerSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidRadiusSecServerSecretForm_Type.__name__ = "Integer32"
_SsidRadiusSecServerSecretForm_Object = MibTableColumn
ssidRadiusSecServerSecretForm = _SsidRadiusSecServerSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 51),
    _SsidRadiusSecServerSecretForm_Type()
)
ssidRadiusSecServerSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusSecServerSecretForm.setStatus("current")


class _SsidRadiusAcctPriServerSecretForm_Type(Integer32):
    """Custom type ssidRadiusAcctPriServerSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidRadiusAcctPriServerSecretForm_Type.__name__ = "Integer32"
_SsidRadiusAcctPriServerSecretForm_Object = MibTableColumn
ssidRadiusAcctPriServerSecretForm = _SsidRadiusAcctPriServerSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 52),
    _SsidRadiusAcctPriServerSecretForm_Type()
)
ssidRadiusAcctPriServerSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctPriServerSecretForm.setStatus("current")


class _SsidRadiusAcctSecServerSecretForm_Type(Integer32):
    """Custom type ssidRadiusAcctSecServerSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidRadiusAcctSecServerSecretForm_Type.__name__ = "Integer32"
_SsidRadiusAcctSecServerSecretForm_Object = MibTableColumn
ssidRadiusAcctSecServerSecretForm = _SsidRadiusAcctSecServerSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 53),
    _SsidRadiusAcctSecServerSecretForm_Type()
)
ssidRadiusAcctSecServerSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusAcctSecServerSecretForm.setStatus("current")


class _SsidFilterList_Type(DisplayString):
    """Custom type ssidFilterList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SsidFilterList_Type.__name__ = "DisplayString"
_SsidFilterList_Object = MibTableColumn
ssidFilterList = _SsidFilterList_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 54),
    _SsidFilterList_Type()
)
ssidFilterList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidFilterList.setStatus("current")


class _SsidWpaTKIP_Type(Integer32):
    """Custom type ssidWpaTKIP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWpaTKIP_Type.__name__ = "Integer32"
_SsidWpaTKIP_Object = MibTableColumn
ssidWpaTKIP = _SsidWpaTKIP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 55),
    _SsidWpaTKIP_Type()
)
ssidWpaTKIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaTKIP.setStatus("current")


class _SsidWpaAES_Type(Integer32):
    """Custom type ssidWpaAES based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWpaAES_Type.__name__ = "Integer32"
_SsidWpaAES_Object = MibTableColumn
ssidWpaAES = _SsidWpaAES_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 56),
    _SsidWpaAES_Type()
)
ssidWpaAES.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaAES.setStatus("current")


class _SsidActiveIAPs_Type(Integer32):
    """Custom type ssidActiveIAPs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidActiveIAPs_Type.__name__ = "Integer32"
_SsidActiveIAPs_Object = MibTableColumn
ssidActiveIAPs = _SsidActiveIAPs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 57),
    _SsidActiveIAPs_Type()
)
ssidActiveIAPs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidActiveIAPs.setStatus("current")


class _SsidAclEnable_Type(Integer32):
    """Custom type ssidAclEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("allow", 1),
          ("deny", 2),
          ("deny-include-blocked-rogues", 3))
    )


_SsidAclEnable_Type.__name__ = "Integer32"
_SsidAclEnable_Object = MibTableColumn
ssidAclEnable = _SsidAclEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 58),
    _SsidAclEnable_Type()
)
ssidAclEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidAclEnable.setStatus("current")


class _SsidFallback_Type(Integer32):
    """Custom type ssidFallback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disable-ssid", 1))
    )


_SsidFallback_Type.__name__ = "Integer32"
_SsidFallback_Object = MibTableColumn
ssidFallback = _SsidFallback_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 59),
    _SsidFallback_Type()
)
ssidFallback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidFallback.setStatus("current")


class _SsidTunnel_Type(DisplayString):
    """Custom type ssidTunnel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SsidTunnel_Type.__name__ = "DisplayString"
_SsidTunnel_Object = MibTableColumn
ssidTunnel = _SsidTunnel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 60),
    _SsidTunnel_Type()
)
ssidTunnel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidTunnel.setStatus("current")


class _SsidMdmAuth_Type(Integer32):
    """Custom type ssidMdmAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("airwatch", 1))
    )


_SsidMdmAuth_Type.__name__ = "Integer32"
_SsidMdmAuth_Object = MibTableColumn
ssidMdmAuth = _SsidMdmAuth_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 61),
    _SsidMdmAuth_Type()
)
ssidMdmAuth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidMdmAuth.setStatus("current")


class _SsidDhcpOption_Type(Integer32):
    """Custom type ssidDhcpOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidDhcpOption_Type.__name__ = "Integer32"
_SsidDhcpOption_Object = MibTableColumn
ssidDhcpOption = _SsidDhcpOption_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 62),
    _SsidDhcpOption_Type()
)
ssidDhcpOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidDhcpOption.setStatus("current")


class _SsidWpaUPSKCacheTimeout_Type(Integer32):
    """Custom type ssidWpaUPSKCacheTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10080),
    )


_SsidWpaUPSKCacheTimeout_Type.__name__ = "Integer32"
_SsidWpaUPSKCacheTimeout_Object = MibTableColumn
ssidWpaUPSKCacheTimeout = _SsidWpaUPSKCacheTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 63),
    _SsidWpaUPSKCacheTimeout_Type()
)
ssidWpaUPSKCacheTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaUPSKCacheTimeout.setStatus("current")


class _SsidWpaUPSKServerConnError_Type(Integer32):
    """Custom type ssidWpaUPSKServerConnError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("block", 0),
          ("allow", 1))
    )


_SsidWpaUPSKServerConnError_Type.__name__ = "Integer32"
_SsidWpaUPSKServerConnError_Object = MibTableColumn
ssidWpaUPSKServerConnError = _SsidWpaUPSKServerConnError_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 64),
    _SsidWpaUPSKServerConnError_Type()
)
ssidWpaUPSKServerConnError.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidWpaUPSKServerConnError.setStatus("current")


class _SsidVlanPool_Type(DisplayString):
    """Custom type ssidVlanPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SsidVlanPool_Type.__name__ = "DisplayString"
_SsidVlanPool_Object = MibTableColumn
ssidVlanPool = _SsidVlanPool_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 65),
    _SsidVlanPool_Type()
)
ssidVlanPool.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidVlanPool.setStatus("current")
_SsidExpiration_Type = Integer32
_SsidExpiration_Object = MibTableColumn
ssidExpiration = _SsidExpiration_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 66),
    _SsidExpiration_Type()
)
ssidExpiration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidExpiration.setStatus("current")
_SsidDateOn_Type = Integer32
_SsidDateOn_Object = MibTableColumn
ssidDateOn = _SsidDateOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 67),
    _SsidDateOn_Type()
)
ssidDateOn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidDateOn.setStatus("current")
_SsidDateOff_Type = Integer32
_SsidDateOff_Object = MibTableColumn
ssidDateOff = _SsidDateOff_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 68),
    _SsidDateOff_Type()
)
ssidDateOff.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidDateOff.setStatus("current")


class _SsidRadiusFailoverTimeout_Type(Integer32):
    """Custom type ssidRadiusFailoverTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_SsidRadiusFailoverTimeout_Type.__name__ = "Integer32"
_SsidRadiusFailoverTimeout_Object = MibTableColumn
ssidRadiusFailoverTimeout = _SsidRadiusFailoverTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 69),
    _SsidRadiusFailoverTimeout_Type()
)
ssidRadiusFailoverTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidRadiusFailoverTimeout.setStatus("current")


class _SsidTableReset_Type(Integer32):
    """Custom type ssidTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_SsidTableReset_Type.__name__ = "Integer32"
_SsidTableReset_Object = MibScalar
ssidTableReset = _SsidTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 2),
    _SsidTableReset_Type()
)
ssidTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidTableReset.setStatus("current")


class _SsidTableClear_Type(Integer32):
    """Custom type ssidTableClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_SsidTableClear_Type.__name__ = "Integer32"
_SsidTableClear_Object = MibScalar
ssidTableClear = _SsidTableClear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 3),
    _SsidTableClear_Type()
)
ssidTableClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidTableClear.setStatus("current")
_SsidLimitsTable_Object = MibTable
ssidLimitsTable = _SsidLimitsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4)
)
if mibBuilder.loadTexts:
    ssidLimitsTable.setStatus("current")
_SsidLimitsEntry_Object = MibTableRow
ssidLimitsEntry = _SsidLimitsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1)
)
ssidLimitsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ssidLimitsIndex"),
)
if mibBuilder.loadTexts:
    ssidLimitsEntry.setStatus("current")
_SsidLimitsIndex_Type = Integer32
_SsidLimitsIndex_Object = MibTableColumn
ssidLimitsIndex = _SsidLimitsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 1),
    _SsidLimitsIndex_Type()
)
ssidLimitsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ssidLimitsIndex.setStatus("current")
_SsidLimitsSsidName_Type = DisplayString
_SsidLimitsSsidName_Object = MibTableColumn
ssidLimitsSsidName = _SsidLimitsSsidName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 2),
    _SsidLimitsSsidName_Type()
)
ssidLimitsSsidName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidLimitsSsidName.setStatus("current")


class _SsidLimitsEnable_Type(Integer32):
    """Custom type ssidLimitsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidLimitsEnable_Type.__name__ = "Integer32"
_SsidLimitsEnable_Object = MibTableColumn
ssidLimitsEnable = _SsidLimitsEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 3),
    _SsidLimitsEnable_Type()
)
ssidLimitsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsEnable.setStatus("current")


class _SsidLimitsTrafficLimit_Type(Integer32):
    """Custom type ssidLimitsTrafficLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_SsidLimitsTrafficLimit_Type.__name__ = "Integer32"
_SsidLimitsTrafficLimit_Object = MibTableColumn
ssidLimitsTrafficLimit = _SsidLimitsTrafficLimit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 4),
    _SsidLimitsTrafficLimit_Type()
)
ssidLimitsTrafficLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTrafficLimit.setStatus("current")


class _SsidLimitsTrafficLimitSta_Type(Integer32):
    """Custom type ssidLimitsTrafficLimitSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000),
    )


_SsidLimitsTrafficLimitSta_Type.__name__ = "Integer32"
_SsidLimitsTrafficLimitSta_Object = MibTableColumn
ssidLimitsTrafficLimitSta = _SsidLimitsTrafficLimitSta_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 5),
    _SsidLimitsTrafficLimitSta_Type()
)
ssidLimitsTrafficLimitSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTrafficLimitSta.setStatus("current")


class _SsidLimitsTimeOn_Type(Integer32):
    """Custom type ssidLimitsTimeOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_SsidLimitsTimeOn_Type.__name__ = "Integer32"
_SsidLimitsTimeOn_Object = MibTableColumn
ssidLimitsTimeOn = _SsidLimitsTimeOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 6),
    _SsidLimitsTimeOn_Type()
)
ssidLimitsTimeOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTimeOn.setStatus("current")


class _SsidLimitsTimeOff_Type(Integer32):
    """Custom type ssidLimitsTimeOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_SsidLimitsTimeOff_Type.__name__ = "Integer32"
_SsidLimitsTimeOff_Object = MibTableColumn
ssidLimitsTimeOff = _SsidLimitsTimeOff_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 7),
    _SsidLimitsTimeOff_Type()
)
ssidLimitsTimeOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTimeOff.setStatus("current")


class _SsidLimitsDaysOnMon_Type(Integer32):
    """Custom type ssidLimitsDaysOnMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnMon_Type.__name__ = "Integer32"
_SsidLimitsDaysOnMon_Object = MibTableColumn
ssidLimitsDaysOnMon = _SsidLimitsDaysOnMon_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 8),
    _SsidLimitsDaysOnMon_Type()
)
ssidLimitsDaysOnMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnMon.setStatus("current")


class _SsidLimitsDaysOnTue_Type(Integer32):
    """Custom type ssidLimitsDaysOnTue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnTue_Type.__name__ = "Integer32"
_SsidLimitsDaysOnTue_Object = MibTableColumn
ssidLimitsDaysOnTue = _SsidLimitsDaysOnTue_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 9),
    _SsidLimitsDaysOnTue_Type()
)
ssidLimitsDaysOnTue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnTue.setStatus("current")


class _SsidLimitsDaysOnWed_Type(Integer32):
    """Custom type ssidLimitsDaysOnWed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnWed_Type.__name__ = "Integer32"
_SsidLimitsDaysOnWed_Object = MibTableColumn
ssidLimitsDaysOnWed = _SsidLimitsDaysOnWed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 10),
    _SsidLimitsDaysOnWed_Type()
)
ssidLimitsDaysOnWed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnWed.setStatus("current")


class _SsidLimitsDaysOnThu_Type(Integer32):
    """Custom type ssidLimitsDaysOnThu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnThu_Type.__name__ = "Integer32"
_SsidLimitsDaysOnThu_Object = MibTableColumn
ssidLimitsDaysOnThu = _SsidLimitsDaysOnThu_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 11),
    _SsidLimitsDaysOnThu_Type()
)
ssidLimitsDaysOnThu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnThu.setStatus("current")


class _SsidLimitsDaysOnFri_Type(Integer32):
    """Custom type ssidLimitsDaysOnFri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnFri_Type.__name__ = "Integer32"
_SsidLimitsDaysOnFri_Object = MibTableColumn
ssidLimitsDaysOnFri = _SsidLimitsDaysOnFri_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 12),
    _SsidLimitsDaysOnFri_Type()
)
ssidLimitsDaysOnFri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnFri.setStatus("current")


class _SsidLimitsDaysOnSat_Type(Integer32):
    """Custom type ssidLimitsDaysOnSat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnSat_Type.__name__ = "Integer32"
_SsidLimitsDaysOnSat_Object = MibTableColumn
ssidLimitsDaysOnSat = _SsidLimitsDaysOnSat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 13),
    _SsidLimitsDaysOnSat_Type()
)
ssidLimitsDaysOnSat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnSat.setStatus("current")


class _SsidLimitsDaysOnSun_Type(Integer32):
    """Custom type ssidLimitsDaysOnSun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SsidLimitsDaysOnSun_Type.__name__ = "Integer32"
_SsidLimitsDaysOnSun_Object = MibTableColumn
ssidLimitsDaysOnSun = _SsidLimitsDaysOnSun_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 14),
    _SsidLimitsDaysOnSun_Type()
)
ssidLimitsDaysOnSun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsDaysOnSun.setStatus("current")


class _SsidLimitsActive_Type(Integer32):
    """Custom type ssidLimitsActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_SsidLimitsActive_Type.__name__ = "Integer32"
_SsidLimitsActive_Object = MibTableColumn
ssidLimitsActive = _SsidLimitsActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 15),
    _SsidLimitsActive_Type()
)
ssidLimitsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidLimitsActive.setStatus("current")


class _SsidLimitsStationLimit_Type(Integer32):
    """Custom type ssidLimitsStationLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3840),
    )


_SsidLimitsStationLimit_Type.__name__ = "Integer32"
_SsidLimitsStationLimit_Object = MibTableColumn
ssidLimitsStationLimit = _SsidLimitsStationLimit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 16),
    _SsidLimitsStationLimit_Type()
)
ssidLimitsStationLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsStationLimit.setStatus("current")


class _SsidLimitsTrafficLimitKbps_Type(Integer32):
    """Custom type ssidLimitsTrafficLimitKbps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4000000),
    )


_SsidLimitsTrafficLimitKbps_Type.__name__ = "Integer32"
_SsidLimitsTrafficLimitKbps_Object = MibTableColumn
ssidLimitsTrafficLimitKbps = _SsidLimitsTrafficLimitKbps_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 17),
    _SsidLimitsTrafficLimitKbps_Type()
)
ssidLimitsTrafficLimitKbps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTrafficLimitKbps.setStatus("current")


class _SsidLimitsTrafficLimitKbpsSta_Type(Integer32):
    """Custom type ssidLimitsTrafficLimitKbpsSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 400000),
    )


_SsidLimitsTrafficLimitKbpsSta_Type.__name__ = "Integer32"
_SsidLimitsTrafficLimitKbpsSta_Object = MibTableColumn
ssidLimitsTrafficLimitKbpsSta = _SsidLimitsTrafficLimitKbpsSta_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 18),
    _SsidLimitsTrafficLimitKbpsSta_Type()
)
ssidLimitsTrafficLimitKbpsSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidLimitsTrafficLimitKbpsSta.setStatus("current")
_SsidWprTable_Object = MibTable
ssidWprTable = _SsidWprTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5)
)
if mibBuilder.loadTexts:
    ssidWprTable.setStatus("current")
_SsidWprEntry_Object = MibTableRow
ssidWprEntry = _SsidWprEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1)
)
ssidWprEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ssidWprIndex"),
)
if mibBuilder.loadTexts:
    ssidWprEntry.setStatus("current")
_SsidWprIndex_Type = Integer32
_SsidWprIndex_Object = MibTableColumn
ssidWprIndex = _SsidWprIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 1),
    _SsidWprIndex_Type()
)
ssidWprIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ssidWprIndex.setStatus("current")
_SsidWprSsidName_Type = DisplayString
_SsidWprSsidName_Object = MibTableColumn
ssidWprSsidName = _SsidWprSsidName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 2),
    _SsidWprSsidName_Type()
)
ssidWprSsidName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssidWprSsidName.setStatus("current")


class _SsidWprEnable_Type(Integer32):
    """Custom type ssidWprEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWprEnable_Type.__name__ = "Integer32"
_SsidWprEnable_Object = MibTableColumn
ssidWprEnable = _SsidWprEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 3),
    _SsidWprEnable_Type()
)
ssidWprEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprEnable.setStatus("current")


class _SsidWprServerType_Type(Integer32):
    """Custom type ssidWprServerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 0),
          ("internal", 1),
          ("cloud", 2))
    )


_SsidWprServerType_Type.__name__ = "Integer32"
_SsidWprServerType_Object = MibTableColumn
ssidWprServerType = _SsidWprServerType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 6),
    _SsidWprServerType_Type()
)
ssidWprServerType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprServerType.setStatus("current")


class _SsidWprUrl_Type(DisplayString):
    """Custom type ssidWprUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidWprUrl_Type.__name__ = "DisplayString"
_SsidWprUrl_Object = MibTableColumn
ssidWprUrl = _SsidWprUrl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 7),
    _SsidWprUrl_Type()
)
ssidWprUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprUrl.setStatus("current")


class _SsidWprSharedSecret_Type(DisplayString):
    """Custom type ssidWprSharedSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SsidWprSharedSecret_Type.__name__ = "DisplayString"
_SsidWprSharedSecret_Object = MibTableColumn
ssidWprSharedSecret = _SsidWprSharedSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 8),
    _SsidWprSharedSecret_Type()
)
ssidWprSharedSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprSharedSecret.setStatus("current")


class _SsidWprScreenType_Type(Integer32):
    """Custom type ssidWprScreenType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("splash", 0),
          ("login", 1),
          ("none", 2))
    )


_SsidWprScreenType_Type.__name__ = "Integer32"
_SsidWprScreenType_Object = MibTableColumn
ssidWprScreenType = _SsidWprScreenType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 9),
    _SsidWprScreenType_Type()
)
ssidWprScreenType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprScreenType.setStatus("current")


class _SsidWprScreenTimeout_Type(Integer32):
    """Custom type ssidWprScreenTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SsidWprScreenTimeout_Type.__name__ = "Integer32"
_SsidWprScreenTimeout_Object = MibTableColumn
ssidWprScreenTimeout = _SsidWprScreenTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 10),
    _SsidWprScreenTimeout_Type()
)
ssidWprScreenTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprScreenTimeout.setStatus("current")


class _SsidWprLandingPage_Type(DisplayString):
    """Custom type ssidWprLandingPage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SsidWprLandingPage_Type.__name__ = "DisplayString"
_SsidWprLandingPage_Object = MibTableColumn
ssidWprLandingPage = _SsidWprLandingPage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 11),
    _SsidWprLandingPage_Type()
)
ssidWprLandingPage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprLandingPage.setStatus("current")


class _SsidWprSharedSecretForm_Type(Integer32):
    """Custom type ssidWprSharedSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_SsidWprSharedSecretForm_Type.__name__ = "Integer32"
_SsidWprSharedSecretForm_Object = MibTableColumn
ssidWprSharedSecretForm = _SsidWprSharedSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 12),
    _SsidWprSharedSecretForm_Type()
)
ssidWprSharedSecretForm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprSharedSecretForm.setStatus("current")


class _SsidWprAuthType_Type(Integer32):
    """Custom type ssidWprAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("chap", 0),
          ("pap", 1),
          ("ms-chap", 2))
    )


_SsidWprAuthType_Type.__name__ = "Integer32"
_SsidWprAuthType_Object = MibTableColumn
ssidWprAuthType = _SsidWprAuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 13),
    _SsidWprAuthType_Type()
)
ssidWprAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprAuthType.setStatus("current")


class _SsidWprHttpsEnable_Type(Integer32):
    """Custom type ssidWprHttpsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWprHttpsEnable_Type.__name__ = "Integer32"
_SsidWprHttpsEnable_Object = MibTableColumn
ssidWprHttpsEnable = _SsidWprHttpsEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 14),
    _SsidWprHttpsEnable_Type()
)
ssidWprHttpsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprHttpsEnable.setStatus("current")


class _SsidWprBackground_Type(DisplayString):
    """Custom type ssidWprBackground based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SsidWprBackground_Type.__name__ = "DisplayString"
_SsidWprBackground_Object = MibTableColumn
ssidWprBackground = _SsidWprBackground_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 15),
    _SsidWprBackground_Type()
)
ssidWprBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprBackground.setStatus("current")


class _SsidWprLogoImage_Type(DisplayString):
    """Custom type ssidWprLogoImage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SsidWprLogoImage_Type.__name__ = "DisplayString"
_SsidWprLogoImage_Object = MibTableColumn
ssidWprLogoImage = _SsidWprLogoImage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 16),
    _SsidWprLogoImage_Type()
)
ssidWprLogoImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprLogoImage.setStatus("current")


class _SsidWprHeaderText_Type(DisplayString):
    """Custom type ssidWprHeaderText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SsidWprHeaderText_Type.__name__ = "DisplayString"
_SsidWprHeaderText_Object = MibTableColumn
ssidWprHeaderText = _SsidWprHeaderText_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 17),
    _SsidWprHeaderText_Type()
)
ssidWprHeaderText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprHeaderText.setStatus("current")


class _SsidWprFooterText_Type(DisplayString):
    """Custom type ssidWprFooterText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SsidWprFooterText_Type.__name__ = "DisplayString"
_SsidWprFooterText_Object = MibTableColumn
ssidWprFooterText = _SsidWprFooterText_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 18),
    _SsidWprFooterText_Type()
)
ssidWprFooterText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprFooterText.setStatus("current")


class _SsidWprAuthTimeout_Type(Integer32):
    """Custom type ssidWprAuthTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10080),
    )


_SsidWprAuthTimeout_Type.__name__ = "Integer32"
_SsidWprAuthTimeout_Object = MibTableColumn
ssidWprAuthTimeout = _SsidWprAuthTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 19),
    _SsidWprAuthTimeout_Type()
)
ssidWprAuthTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprAuthTimeout.setStatus("current")


class _SsidWprHttpsPassthru_Type(Integer32):
    """Custom type ssidWprHttpsPassthru based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidWprHttpsPassthru_Type.__name__ = "Integer32"
_SsidWprHttpsPassthru_Object = MibTableColumn
ssidWprHttpsPassthru = _SsidWprHttpsPassthru_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 20),
    _SsidWprHttpsPassthru_Type()
)
ssidWprHttpsPassthru.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWprHttpsPassthru.setStatus("current")
_SsidHoneypotWhitelistTable_Object = MibTable
ssidHoneypotWhitelistTable = _SsidHoneypotWhitelistTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6)
)
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistTable.setStatus("current")
_SsidHoneypotWhitelistEntry_Object = MibTableRow
ssidHoneypotWhitelistEntry = _SsidHoneypotWhitelistEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1)
)
ssidHoneypotWhitelistEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ssidHoneypotWhitelistIndex"),
)
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistEntry.setStatus("current")
_SsidHoneypotWhitelistIndex_Type = Integer32
_SsidHoneypotWhitelistIndex_Object = MibTableColumn
ssidHoneypotWhitelistIndex = _SsidHoneypotWhitelistIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 1),
    _SsidHoneypotWhitelistIndex_Type()
)
ssidHoneypotWhitelistIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistIndex.setStatus("current")


class _SsidHoneypotWhitelistSSID_Type(DisplayString):
    """Custom type ssidHoneypotWhitelistSSID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SsidHoneypotWhitelistSSID_Type.__name__ = "DisplayString"
_SsidHoneypotWhitelistSSID_Object = MibTableColumn
ssidHoneypotWhitelistSSID = _SsidHoneypotWhitelistSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 2),
    _SsidHoneypotWhitelistSSID_Type()
)
ssidHoneypotWhitelistSSID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistSSID.setStatus("current")
_SsidHoneypotWhitelistRowStatus_Type = RowStatus
_SsidHoneypotWhitelistRowStatus_Object = MibTableColumn
ssidHoneypotWhitelistRowStatus = _SsidHoneypotWhitelistRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 3),
    _SsidHoneypotWhitelistRowStatus_Type()
)
ssidHoneypotWhitelistRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistRowStatus.setStatus("current")


class _SsidHoneypotWhitelistTableReset_Type(Integer32):
    """Custom type ssidHoneypotWhitelistTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_SsidHoneypotWhitelistTableReset_Type.__name__ = "Integer32"
_SsidHoneypotWhitelistTableReset_Object = MibScalar
ssidHoneypotWhitelistTableReset = _SsidHoneypotWhitelistTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 7),
    _SsidHoneypotWhitelistTableReset_Type()
)
ssidHoneypotWhitelistTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidHoneypotWhitelistTableReset.setStatus("current")
_SsidHoneypotBroadcastTable_Object = MibTable
ssidHoneypotBroadcastTable = _SsidHoneypotBroadcastTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8)
)
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastTable.setStatus("current")
_SsidHoneypotBroadcastEntry_Object = MibTableRow
ssidHoneypotBroadcastEntry = _SsidHoneypotBroadcastEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1)
)
ssidHoneypotBroadcastEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ssidHoneypotBroadcastIndex"),
)
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastEntry.setStatus("current")
_SsidHoneypotBroadcastIndex_Type = Integer32
_SsidHoneypotBroadcastIndex_Object = MibTableColumn
ssidHoneypotBroadcastIndex = _SsidHoneypotBroadcastIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 1),
    _SsidHoneypotBroadcastIndex_Type()
)
ssidHoneypotBroadcastIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastIndex.setStatus("current")


class _SsidHoneypotBroadcastSSID_Type(DisplayString):
    """Custom type ssidHoneypotBroadcastSSID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SsidHoneypotBroadcastSSID_Type.__name__ = "DisplayString"
_SsidHoneypotBroadcastSSID_Object = MibTableColumn
ssidHoneypotBroadcastSSID = _SsidHoneypotBroadcastSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 2),
    _SsidHoneypotBroadcastSSID_Type()
)
ssidHoneypotBroadcastSSID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastSSID.setStatus("current")
_SsidHoneypotBroadcastRowStatus_Type = RowStatus
_SsidHoneypotBroadcastRowStatus_Object = MibTableColumn
ssidHoneypotBroadcastRowStatus = _SsidHoneypotBroadcastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 3),
    _SsidHoneypotBroadcastRowStatus_Type()
)
ssidHoneypotBroadcastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastRowStatus.setStatus("current")


class _SsidHoneypotBroadcastTableReset_Type(Integer32):
    """Custom type ssidHoneypotBroadcastTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_SsidHoneypotBroadcastTableReset_Type.__name__ = "Integer32"
_SsidHoneypotBroadcastTableReset_Object = MibScalar
ssidHoneypotBroadcastTableReset = _SsidHoneypotBroadcastTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 9),
    _SsidHoneypotBroadcastTableReset_Type()
)
ssidHoneypotBroadcastTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidHoneypotBroadcastTableReset.setStatus("current")
_Stations_ObjectIdentity = ObjectIdentity
stations = _Stations_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22)
)
_StationAssociationTable_Object = MibTable
stationAssociationTable = _StationAssociationTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1)
)
if mibBuilder.loadTexts:
    stationAssociationTable.setStatus("current")
_StationAssociationEntry_Object = MibTableRow
stationAssociationEntry = _StationAssociationEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1)
)
stationAssociationEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationAssociationIndex"),
)
if mibBuilder.loadTexts:
    stationAssociationEntry.setStatus("current")
_StationAssociationIndex_Type = Integer32
_StationAssociationIndex_Object = MibTableColumn
stationAssociationIndex = _StationAssociationIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 1),
    _StationAssociationIndex_Type()
)
stationAssociationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stationAssociationIndex.setStatus("current")
_StationAssociationMACAddress_Type = DisplayString
_StationAssociationMACAddress_Object = MibTableColumn
stationAssociationMACAddress = _StationAssociationMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 2),
    _StationAssociationMACAddress_Type()
)
stationAssociationMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationMACAddress.setStatus("current")
_StationAssociationManufacturer_Type = DisplayString
_StationAssociationManufacturer_Object = MibTableColumn
stationAssociationManufacturer = _StationAssociationManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 3),
    _StationAssociationManufacturer_Type()
)
stationAssociationManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationManufacturer.setStatus("current")
_StationAssociationIPAddress_Type = DisplayString
_StationAssociationIPAddress_Object = MibTableColumn
stationAssociationIPAddress = _StationAssociationIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 4),
    _StationAssociationIPAddress_Type()
)
stationAssociationIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationIPAddress.setStatus("current")
_StationAssociationNetbiosName_Type = DisplayString
_StationAssociationNetbiosName_Object = MibTableColumn
stationAssociationNetbiosName = _StationAssociationNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 5),
    _StationAssociationNetbiosName_Type()
)
stationAssociationNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationNetbiosName.setStatus("current")
_StationAssociationIAP_Type = DisplayString
_StationAssociationIAP_Object = MibTableColumn
stationAssociationIAP = _StationAssociationIAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 6),
    _StationAssociationIAP_Type()
)
stationAssociationIAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationIAP.setStatus("current")
_StationAssociationSSID_Type = DisplayString
_StationAssociationSSID_Object = MibTableColumn
stationAssociationSSID = _StationAssociationSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 7),
    _StationAssociationSSID_Type()
)
stationAssociationSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationSSID.setStatus("current")
_StationAssociationVLAN_Type = Integer32
_StationAssociationVLAN_Object = MibTableColumn
stationAssociationVLAN = _StationAssociationVLAN_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 8),
    _StationAssociationVLAN_Type()
)
stationAssociationVLAN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationVLAN.setStatus("current")
_StationAssociationRSSI_Type = Integer32
_StationAssociationRSSI_Object = MibTableColumn
stationAssociationRSSI = _StationAssociationRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 9),
    _StationAssociationRSSI_Type()
)
stationAssociationRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSI.setStatus("current")
_StationAssociationTime_Type = DisplayString
_StationAssociationTime_Object = MibTableColumn
stationAssociationTime = _StationAssociationTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 10),
    _StationAssociationTime_Type()
)
stationAssociationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTime.setStatus("current")
_StationAssociationTxRate_Type = Integer32
_StationAssociationTxRate_Object = MibTableColumn
stationAssociationTxRate = _StationAssociationTxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 11),
    _StationAssociationTxRate_Type()
)
stationAssociationTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTxRate.setStatus("current")
_StationAssociationRxRate_Type = Integer32
_StationAssociationRxRate_Object = MibTableColumn
stationAssociationRxRate = _StationAssociationRxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 12),
    _StationAssociationRxRate_Type()
)
stationAssociationRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRxRate.setStatus("current")
_StationAssociationRSSIa1_Type = Integer32
_StationAssociationRSSIa1_Object = MibTableColumn
stationAssociationRSSIa1 = _StationAssociationRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 13),
    _StationAssociationRSSIa1_Type()
)
stationAssociationRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa1.setStatus("current")
_StationAssociationRSSIa2_Type = Integer32
_StationAssociationRSSIa2_Object = MibTableColumn
stationAssociationRSSIa2 = _StationAssociationRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 14),
    _StationAssociationRSSIa2_Type()
)
stationAssociationRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa2.setStatus("current")
_StationAssociationRSSIa3_Type = Integer32
_StationAssociationRSSIa3_Object = MibTableColumn
stationAssociationRSSIa3 = _StationAssociationRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 15),
    _StationAssociationRSSIa3_Type()
)
stationAssociationRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa3.setStatus("current")
_StationAssociationRSSIa4_Type = Integer32
_StationAssociationRSSIa4_Object = MibTableColumn
stationAssociationRSSIa4 = _StationAssociationRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 16),
    _StationAssociationRSSIa4_Type()
)
stationAssociationRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa4.setStatus("current")
_StationAssociationRSSIa5_Type = Integer32
_StationAssociationRSSIa5_Object = MibTableColumn
stationAssociationRSSIa5 = _StationAssociationRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 17),
    _StationAssociationRSSIa5_Type()
)
stationAssociationRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa5.setStatus("current")
_StationAssociationRSSIa6_Type = Integer32
_StationAssociationRSSIa6_Object = MibTableColumn
stationAssociationRSSIa6 = _StationAssociationRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 18),
    _StationAssociationRSSIa6_Type()
)
stationAssociationRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa6.setStatus("current")
_StationAssociationRSSIa7_Type = Integer32
_StationAssociationRSSIa7_Object = MibTableColumn
stationAssociationRSSIa7 = _StationAssociationRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 19),
    _StationAssociationRSSIa7_Type()
)
stationAssociationRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa7.setStatus("current")
_StationAssociationRSSIa8_Type = Integer32
_StationAssociationRSSIa8_Object = MibTableColumn
stationAssociationRSSIa8 = _StationAssociationRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 20),
    _StationAssociationRSSIa8_Type()
)
stationAssociationRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa8.setStatus("current")
_StationAssociationRSSIa9_Type = Integer32
_StationAssociationRSSIa9_Object = MibTableColumn
stationAssociationRSSIa9 = _StationAssociationRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 21),
    _StationAssociationRSSIa9_Type()
)
stationAssociationRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa9.setStatus("current")
_StationAssociationRSSIa10_Type = Integer32
_StationAssociationRSSIa10_Object = MibTableColumn
stationAssociationRSSIa10 = _StationAssociationRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 22),
    _StationAssociationRSSIa10_Type()
)
stationAssociationRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa10.setStatus("current")
_StationAssociationRSSIa11_Type = Integer32
_StationAssociationRSSIa11_Object = MibTableColumn
stationAssociationRSSIa11 = _StationAssociationRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 23),
    _StationAssociationRSSIa11_Type()
)
stationAssociationRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa11.setStatus("current")
_StationAssociationRSSIa12_Type = Integer32
_StationAssociationRSSIa12_Object = MibTableColumn
stationAssociationRSSIa12 = _StationAssociationRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 24),
    _StationAssociationRSSIa12_Type()
)
stationAssociationRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIa12.setStatus("current")
_StationAssociationRSSIabg1_Type = Integer32
_StationAssociationRSSIabg1_Object = MibTableColumn
stationAssociationRSSIabg1 = _StationAssociationRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 25),
    _StationAssociationRSSIabg1_Type()
)
stationAssociationRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIabg1.setStatus("current")
_StationAssociationRSSIabg2_Type = Integer32
_StationAssociationRSSIabg2_Object = MibTableColumn
stationAssociationRSSIabg2 = _StationAssociationRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 26),
    _StationAssociationRSSIabg2_Type()
)
stationAssociationRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIabg2.setStatus("current")
_StationAssociationRSSIabg3_Type = Integer32
_StationAssociationRSSIabg3_Object = MibTableColumn
stationAssociationRSSIabg3 = _StationAssociationRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 27),
    _StationAssociationRSSIabg3_Type()
)
stationAssociationRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIabg3.setStatus("current")
_StationAssociationRSSIabg4_Type = Integer32
_StationAssociationRSSIabg4_Object = MibTableColumn
stationAssociationRSSIabg4 = _StationAssociationRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 28),
    _StationAssociationRSSIabg4_Type()
)
stationAssociationRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationRSSIabg4.setStatus("current")


class _StationAssociationEncType_Type(Integer32):
    """Custom type stationAssociationEncType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wep", 1),
          ("wpa", 2),
          ("wpa2", 3))
    )


_StationAssociationEncType_Type.__name__ = "Integer32"
_StationAssociationEncType_Object = MibTableColumn
stationAssociationEncType = _StationAssociationEncType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 29),
    _StationAssociationEncType_Type()
)
stationAssociationEncType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationEncType.setStatus("current")


class _StationAssociationCipher_Type(Integer32):
    """Custom type stationAssociationCipher based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rc4", 1),
          ("tkip", 2),
          ("aes", 3))
    )


_StationAssociationCipher_Type.__name__ = "Integer32"
_StationAssociationCipher_Object = MibTableColumn
stationAssociationCipher = _StationAssociationCipher_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 30),
    _StationAssociationCipher_Type()
)
stationAssociationCipher.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationCipher.setStatus("current")


class _StationAssociationKeyMgmt_Type(Integer32):
    """Custom type stationAssociationKeyMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("eap", 1),
          ("psk", 2))
    )


_StationAssociationKeyMgmt_Type.__name__ = "Integer32"
_StationAssociationKeyMgmt_Object = MibTableColumn
stationAssociationKeyMgmt = _StationAssociationKeyMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 31),
    _StationAssociationKeyMgmt_Type()
)
stationAssociationKeyMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationKeyMgmt.setStatus("current")


class _StationAssociationBand_Type(Integer32):
    """Custom type stationAssociationBand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dot11a", 0),
          ("dot11bg", 1))
    )


_StationAssociationBand_Type.__name__ = "Integer32"
_StationAssociationBand_Object = MibTableColumn
stationAssociationBand = _StationAssociationBand_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 32),
    _StationAssociationBand_Type()
)
stationAssociationBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationBand.setStatus("current")
_StationAssociationChannel_Type = Integer32
_StationAssociationChannel_Object = MibTableColumn
stationAssociationChannel = _StationAssociationChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 33),
    _StationAssociationChannel_Type()
)
stationAssociationChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationChannel.setStatus("current")


class _StationAssociationMediaType_Type(Integer32):
    """Custom type stationAssociationMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("dot11b", 1),
          ("dot11bg", 2),
          ("dot11abg", 3),
          ("dot11a", 4),
          ("dot11ab", 5),
          ("dot11ag", 6),
          ("dot11g", 7),
          ("dot11n", 8),
          ("dot11bn", 9),
          ("dot11gn", 10),
          ("dot11bgn", 11),
          ("dot11an", 12),
          ("dot11abn", 13),
          ("dot11agn", 14),
          ("dot11abgn", 15),
          ("dot11anac", 16),
          ("dot11abgnac", 17))
    )


_StationAssociationMediaType_Type.__name__ = "Integer32"
_StationAssociationMediaType_Object = MibTableColumn
stationAssociationMediaType = _StationAssociationMediaType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 34),
    _StationAssociationMediaType_Type()
)
stationAssociationMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationMediaType.setStatus("current")
_StationAssociationUserName_Type = DisplayString
_StationAssociationUserName_Object = MibTableColumn
stationAssociationUserName = _StationAssociationUserName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 35),
    _StationAssociationUserName_Type()
)
stationAssociationUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationUserName.setStatus("current")
_StationAssociationTimeRSSIa1_Type = Counter32
_StationAssociationTimeRSSIa1_Object = MibTableColumn
stationAssociationTimeRSSIa1 = _StationAssociationTimeRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 36),
    _StationAssociationTimeRSSIa1_Type()
)
stationAssociationTimeRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa1.setStatus("current")
_StationAssociationTimeRSSIa2_Type = Counter32
_StationAssociationTimeRSSIa2_Object = MibTableColumn
stationAssociationTimeRSSIa2 = _StationAssociationTimeRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 37),
    _StationAssociationTimeRSSIa2_Type()
)
stationAssociationTimeRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa2.setStatus("current")
_StationAssociationTimeRSSIa3_Type = Counter32
_StationAssociationTimeRSSIa3_Object = MibTableColumn
stationAssociationTimeRSSIa3 = _StationAssociationTimeRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 38),
    _StationAssociationTimeRSSIa3_Type()
)
stationAssociationTimeRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa3.setStatus("current")
_StationAssociationTimeRSSIa4_Type = Counter32
_StationAssociationTimeRSSIa4_Object = MibTableColumn
stationAssociationTimeRSSIa4 = _StationAssociationTimeRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 39),
    _StationAssociationTimeRSSIa4_Type()
)
stationAssociationTimeRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa4.setStatus("current")
_StationAssociationTimeRSSIa5_Type = Counter32
_StationAssociationTimeRSSIa5_Object = MibTableColumn
stationAssociationTimeRSSIa5 = _StationAssociationTimeRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 40),
    _StationAssociationTimeRSSIa5_Type()
)
stationAssociationTimeRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa5.setStatus("current")
_StationAssociationTimeRSSIa6_Type = Counter32
_StationAssociationTimeRSSIa6_Object = MibTableColumn
stationAssociationTimeRSSIa6 = _StationAssociationTimeRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 41),
    _StationAssociationTimeRSSIa6_Type()
)
stationAssociationTimeRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa6.setStatus("current")
_StationAssociationTimeRSSIa7_Type = Counter32
_StationAssociationTimeRSSIa7_Object = MibTableColumn
stationAssociationTimeRSSIa7 = _StationAssociationTimeRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 42),
    _StationAssociationTimeRSSIa7_Type()
)
stationAssociationTimeRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa7.setStatus("current")
_StationAssociationTimeRSSIa8_Type = Counter32
_StationAssociationTimeRSSIa8_Object = MibTableColumn
stationAssociationTimeRSSIa8 = _StationAssociationTimeRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 43),
    _StationAssociationTimeRSSIa8_Type()
)
stationAssociationTimeRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa8.setStatus("current")
_StationAssociationTimeRSSIa9_Type = Counter32
_StationAssociationTimeRSSIa9_Object = MibTableColumn
stationAssociationTimeRSSIa9 = _StationAssociationTimeRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 44),
    _StationAssociationTimeRSSIa9_Type()
)
stationAssociationTimeRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa9.setStatus("current")
_StationAssociationTimeRSSIa10_Type = Counter32
_StationAssociationTimeRSSIa10_Object = MibTableColumn
stationAssociationTimeRSSIa10 = _StationAssociationTimeRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 45),
    _StationAssociationTimeRSSIa10_Type()
)
stationAssociationTimeRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa10.setStatus("current")
_StationAssociationTimeRSSIa11_Type = Counter32
_StationAssociationTimeRSSIa11_Object = MibTableColumn
stationAssociationTimeRSSIa11 = _StationAssociationTimeRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 46),
    _StationAssociationTimeRSSIa11_Type()
)
stationAssociationTimeRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa11.setStatus("current")
_StationAssociationTimeRSSIa12_Type = Counter32
_StationAssociationTimeRSSIa12_Object = MibTableColumn
stationAssociationTimeRSSIa12 = _StationAssociationTimeRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 47),
    _StationAssociationTimeRSSIa12_Type()
)
stationAssociationTimeRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIa12.setStatus("current")
_StationAssociationTimeRSSIabg1_Type = Counter32
_StationAssociationTimeRSSIabg1_Object = MibTableColumn
stationAssociationTimeRSSIabg1 = _StationAssociationTimeRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 48),
    _StationAssociationTimeRSSIabg1_Type()
)
stationAssociationTimeRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIabg1.setStatus("current")
_StationAssociationTimeRSSIabg2_Type = Counter32
_StationAssociationTimeRSSIabg2_Object = MibTableColumn
stationAssociationTimeRSSIabg2 = _StationAssociationTimeRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 49),
    _StationAssociationTimeRSSIabg2_Type()
)
stationAssociationTimeRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIabg2.setStatus("current")
_StationAssociationTimeRSSIabg3_Type = Counter32
_StationAssociationTimeRSSIabg3_Object = MibTableColumn
stationAssociationTimeRSSIabg3 = _StationAssociationTimeRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 50),
    _StationAssociationTimeRSSIabg3_Type()
)
stationAssociationTimeRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIabg3.setStatus("current")
_StationAssociationTimeRSSIabg4_Type = Counter32
_StationAssociationTimeRSSIabg4_Object = MibTableColumn
stationAssociationTimeRSSIabg4 = _StationAssociationTimeRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 51),
    _StationAssociationTimeRSSIabg4_Type()
)
stationAssociationTimeRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationTimeRSSIabg4.setStatus("current")
_StationAssociationHostname_Type = DisplayString
_StationAssociationHostname_Object = MibTableColumn
stationAssociationHostname = _StationAssociationHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 52),
    _StationAssociationHostname_Type()
)
stationAssociationHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationHostname.setStatus("current")
_StationAssociationDeviceType_Type = DisplayString
_StationAssociationDeviceType_Object = MibTableColumn
stationAssociationDeviceType = _StationAssociationDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 53),
    _StationAssociationDeviceType_Type()
)
stationAssociationDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationDeviceType.setStatus("current")
_StationAssociationDeviceClass_Type = DisplayString
_StationAssociationDeviceClass_Object = MibTableColumn
stationAssociationDeviceClass = _StationAssociationDeviceClass_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 54),
    _StationAssociationDeviceClass_Type()
)
stationAssociationDeviceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationDeviceClass.setStatus("current")
_StationAssociationUserAgent_Type = DisplayString
_StationAssociationUserAgent_Object = MibTableColumn
stationAssociationUserAgent = _StationAssociationUserAgent_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 55),
    _StationAssociationUserAgent_Type()
)
stationAssociationUserAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationUserAgent.setStatus("current")


class _StationAssociationDeviceSource_Type(Integer32):
    """Custom type stationAssociationDeviceSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("manufacturer", 1),
          ("netbios-name", 2),
          ("dhcp-hostname", 3),
          ("user-agent-string", 4),
          ("internal-rules", 5),
          ("external-rules", 6),
          ("cache", 7))
    )


_StationAssociationDeviceSource_Type.__name__ = "Integer32"
_StationAssociationDeviceSource_Object = MibTableColumn
stationAssociationDeviceSource = _StationAssociationDeviceSource_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 56),
    _StationAssociationDeviceSource_Type()
)
stationAssociationDeviceSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationDeviceSource.setStatus("current")
_StationAssociationDeviceSourceIndex_Type = Integer32
_StationAssociationDeviceSourceIndex_Object = MibTableColumn
stationAssociationDeviceSourceIndex = _StationAssociationDeviceSourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 57),
    _StationAssociationDeviceSourceIndex_Type()
)
stationAssociationDeviceSourceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationDeviceSourceIndex.setStatus("current")


class _StationAssociationOperatingMode_Type(Integer32):
    """Custom type stationAssociationOperatingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("b", 1),
          ("g", 2),
          ("bg", 3),
          ("a", 4),
          ("ab", 5),
          ("ag", 6),
          ("abg", 7),
          ("n", 8),
          ("bn", 9),
          ("gn", 10),
          ("bgn", 11),
          ("an", 12),
          ("abn", 13),
          ("agn", 14),
          ("abgn", 15),
          ("ac", 16),
          ("bac", 17),
          ("gac", 18),
          ("bgac", 19),
          ("aac", 20),
          ("abac", 21),
          ("agac", 22),
          ("abgac", 23),
          ("nac", 24),
          ("bnac", 25),
          ("gnac", 26),
          ("bgnac", 27),
          ("anac", 28),
          ("abnac", 29),
          ("agnac", 30),
          ("abgnac", 31))
    )


_StationAssociationOperatingMode_Type.__name__ = "Integer32"
_StationAssociationOperatingMode_Object = MibTableColumn
stationAssociationOperatingMode = _StationAssociationOperatingMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 58),
    _StationAssociationOperatingMode_Type()
)
stationAssociationOperatingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssociationOperatingMode.setStatus("current")
_StationUnassociatedTable_Object = MibTable
stationUnassociatedTable = _StationUnassociatedTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2)
)
if mibBuilder.loadTexts:
    stationUnassociatedTable.setStatus("current")
_StationUnassociatedEntry_Object = MibTableRow
stationUnassociatedEntry = _StationUnassociatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1)
)
stationUnassociatedEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationUnassociatedIndex"),
)
if mibBuilder.loadTexts:
    stationUnassociatedEntry.setStatus("current")
_StationUnassociatedIndex_Type = Integer32
_StationUnassociatedIndex_Object = MibTableColumn
stationUnassociatedIndex = _StationUnassociatedIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 1),
    _StationUnassociatedIndex_Type()
)
stationUnassociatedIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stationUnassociatedIndex.setStatus("current")
_StationUnassociatedMACAddress_Type = DisplayString
_StationUnassociatedMACAddress_Object = MibTableColumn
stationUnassociatedMACAddress = _StationUnassociatedMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 2),
    _StationUnassociatedMACAddress_Type()
)
stationUnassociatedMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedMACAddress.setStatus("current")
_StationUnassociatedManufacturer_Type = DisplayString
_StationUnassociatedManufacturer_Object = MibTableColumn
stationUnassociatedManufacturer = _StationUnassociatedManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 3),
    _StationUnassociatedManufacturer_Type()
)
stationUnassociatedManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedManufacturer.setStatus("current")
_StationUnassociatedNetbiosName_Type = DisplayString
_StationUnassociatedNetbiosName_Object = MibTableColumn
stationUnassociatedNetbiosName = _StationUnassociatedNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 4),
    _StationUnassociatedNetbiosName_Type()
)
stationUnassociatedNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedNetbiosName.setStatus("current")


class _StationUnassociatedMediaType_Type(Integer32):
    """Custom type stationUnassociatedMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("dot11b", 1),
          ("dot11bg", 2),
          ("dot11abg", 3),
          ("dot11a", 4),
          ("dot11ab", 5),
          ("dot11ag", 6),
          ("dot11g", 7),
          ("dot11n", 8),
          ("dot11bn", 9),
          ("dot11gn", 10),
          ("dot11bgn", 11),
          ("dot11an", 12),
          ("dot11abn", 13),
          ("dot11agn", 14),
          ("dot11abgn", 15),
          ("dot11anac", 16),
          ("dot11abgnac", 17))
    )


_StationUnassociatedMediaType_Type.__name__ = "Integer32"
_StationUnassociatedMediaType_Object = MibTableColumn
stationUnassociatedMediaType = _StationUnassociatedMediaType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 5),
    _StationUnassociatedMediaType_Type()
)
stationUnassociatedMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedMediaType.setStatus("current")
_StationUnassociatedTxRate_Type = Integer32
_StationUnassociatedTxRate_Object = MibTableColumn
stationUnassociatedTxRate = _StationUnassociatedTxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 6),
    _StationUnassociatedTxRate_Type()
)
stationUnassociatedTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTxRate.setStatus("current")
_StationUnassociatedRxRate_Type = Integer32
_StationUnassociatedRxRate_Object = MibTableColumn
stationUnassociatedRxRate = _StationUnassociatedRxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 7),
    _StationUnassociatedRxRate_Type()
)
stationUnassociatedRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRxRate.setStatus("current")
_StationUnassociatedRSSI_Type = Integer32
_StationUnassociatedRSSI_Object = MibTableColumn
stationUnassociatedRSSI = _StationUnassociatedRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 8),
    _StationUnassociatedRSSI_Type()
)
stationUnassociatedRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSI.setStatus("current")
_StationUnassociatedTime_Type = Counter32
_StationUnassociatedTime_Object = MibTableColumn
stationUnassociatedTime = _StationUnassociatedTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 9),
    _StationUnassociatedTime_Type()
)
stationUnassociatedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTime.setStatus("current")
_StationUnassociatedRSSIa1_Type = Integer32
_StationUnassociatedRSSIa1_Object = MibTableColumn
stationUnassociatedRSSIa1 = _StationUnassociatedRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 10),
    _StationUnassociatedRSSIa1_Type()
)
stationUnassociatedRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa1.setStatus("current")
_StationUnassociatedRSSIa2_Type = Integer32
_StationUnassociatedRSSIa2_Object = MibTableColumn
stationUnassociatedRSSIa2 = _StationUnassociatedRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 11),
    _StationUnassociatedRSSIa2_Type()
)
stationUnassociatedRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa2.setStatus("current")
_StationUnassociatedRSSIa3_Type = Integer32
_StationUnassociatedRSSIa3_Object = MibTableColumn
stationUnassociatedRSSIa3 = _StationUnassociatedRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 12),
    _StationUnassociatedRSSIa3_Type()
)
stationUnassociatedRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa3.setStatus("current")
_StationUnassociatedRSSIa4_Type = Integer32
_StationUnassociatedRSSIa4_Object = MibTableColumn
stationUnassociatedRSSIa4 = _StationUnassociatedRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 13),
    _StationUnassociatedRSSIa4_Type()
)
stationUnassociatedRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa4.setStatus("current")
_StationUnassociatedRSSIa5_Type = Integer32
_StationUnassociatedRSSIa5_Object = MibTableColumn
stationUnassociatedRSSIa5 = _StationUnassociatedRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 14),
    _StationUnassociatedRSSIa5_Type()
)
stationUnassociatedRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa5.setStatus("current")
_StationUnassociatedRSSIa6_Type = Integer32
_StationUnassociatedRSSIa6_Object = MibTableColumn
stationUnassociatedRSSIa6 = _StationUnassociatedRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 15),
    _StationUnassociatedRSSIa6_Type()
)
stationUnassociatedRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa6.setStatus("current")
_StationUnassociatedRSSIa7_Type = Integer32
_StationUnassociatedRSSIa7_Object = MibTableColumn
stationUnassociatedRSSIa7 = _StationUnassociatedRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 16),
    _StationUnassociatedRSSIa7_Type()
)
stationUnassociatedRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa7.setStatus("current")
_StationUnassociatedRSSIa8_Type = Integer32
_StationUnassociatedRSSIa8_Object = MibTableColumn
stationUnassociatedRSSIa8 = _StationUnassociatedRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 17),
    _StationUnassociatedRSSIa8_Type()
)
stationUnassociatedRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa8.setStatus("current")
_StationUnassociatedRSSIa9_Type = Integer32
_StationUnassociatedRSSIa9_Object = MibTableColumn
stationUnassociatedRSSIa9 = _StationUnassociatedRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 18),
    _StationUnassociatedRSSIa9_Type()
)
stationUnassociatedRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa9.setStatus("current")
_StationUnassociatedRSSIa10_Type = Integer32
_StationUnassociatedRSSIa10_Object = MibTableColumn
stationUnassociatedRSSIa10 = _StationUnassociatedRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 19),
    _StationUnassociatedRSSIa10_Type()
)
stationUnassociatedRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa10.setStatus("current")
_StationUnassociatedRSSIa11_Type = Integer32
_StationUnassociatedRSSIa11_Object = MibTableColumn
stationUnassociatedRSSIa11 = _StationUnassociatedRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 20),
    _StationUnassociatedRSSIa11_Type()
)
stationUnassociatedRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa11.setStatus("current")
_StationUnassociatedRSSIa12_Type = Integer32
_StationUnassociatedRSSIa12_Object = MibTableColumn
stationUnassociatedRSSIa12 = _StationUnassociatedRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 21),
    _StationUnassociatedRSSIa12_Type()
)
stationUnassociatedRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIa12.setStatus("current")
_StationUnassociatedRSSIabg1_Type = Integer32
_StationUnassociatedRSSIabg1_Object = MibTableColumn
stationUnassociatedRSSIabg1 = _StationUnassociatedRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 22),
    _StationUnassociatedRSSIabg1_Type()
)
stationUnassociatedRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIabg1.setStatus("current")
_StationUnassociatedRSSIabg2_Type = Integer32
_StationUnassociatedRSSIabg2_Object = MibTableColumn
stationUnassociatedRSSIabg2 = _StationUnassociatedRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 23),
    _StationUnassociatedRSSIabg2_Type()
)
stationUnassociatedRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIabg2.setStatus("current")
_StationUnassociatedRSSIabg3_Type = Integer32
_StationUnassociatedRSSIabg3_Object = MibTableColumn
stationUnassociatedRSSIabg3 = _StationUnassociatedRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 24),
    _StationUnassociatedRSSIabg3_Type()
)
stationUnassociatedRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIabg3.setStatus("current")
_StationUnassociatedRSSIabg4_Type = Integer32
_StationUnassociatedRSSIabg4_Object = MibTableColumn
stationUnassociatedRSSIabg4 = _StationUnassociatedRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 25),
    _StationUnassociatedRSSIabg4_Type()
)
stationUnassociatedRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedRSSIabg4.setStatus("current")
_StationUnassociatedTimeRSSIa1_Type = Counter32
_StationUnassociatedTimeRSSIa1_Object = MibTableColumn
stationUnassociatedTimeRSSIa1 = _StationUnassociatedTimeRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 26),
    _StationUnassociatedTimeRSSIa1_Type()
)
stationUnassociatedTimeRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa1.setStatus("current")
_StationUnassociatedTimeRSSIa2_Type = Counter32
_StationUnassociatedTimeRSSIa2_Object = MibTableColumn
stationUnassociatedTimeRSSIa2 = _StationUnassociatedTimeRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 27),
    _StationUnassociatedTimeRSSIa2_Type()
)
stationUnassociatedTimeRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa2.setStatus("current")
_StationUnassociatedTimeRSSIa3_Type = Counter32
_StationUnassociatedTimeRSSIa3_Object = MibTableColumn
stationUnassociatedTimeRSSIa3 = _StationUnassociatedTimeRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 28),
    _StationUnassociatedTimeRSSIa3_Type()
)
stationUnassociatedTimeRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa3.setStatus("current")
_StationUnassociatedTimeRSSIa4_Type = Counter32
_StationUnassociatedTimeRSSIa4_Object = MibTableColumn
stationUnassociatedTimeRSSIa4 = _StationUnassociatedTimeRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 29),
    _StationUnassociatedTimeRSSIa4_Type()
)
stationUnassociatedTimeRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa4.setStatus("current")
_StationUnassociatedTimeRSSIa5_Type = Counter32
_StationUnassociatedTimeRSSIa5_Object = MibTableColumn
stationUnassociatedTimeRSSIa5 = _StationUnassociatedTimeRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 30),
    _StationUnassociatedTimeRSSIa5_Type()
)
stationUnassociatedTimeRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa5.setStatus("current")
_StationUnassociatedTimeRSSIa6_Type = Counter32
_StationUnassociatedTimeRSSIa6_Object = MibTableColumn
stationUnassociatedTimeRSSIa6 = _StationUnassociatedTimeRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 31),
    _StationUnassociatedTimeRSSIa6_Type()
)
stationUnassociatedTimeRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa6.setStatus("current")
_StationUnassociatedTimeRSSIa7_Type = Counter32
_StationUnassociatedTimeRSSIa7_Object = MibTableColumn
stationUnassociatedTimeRSSIa7 = _StationUnassociatedTimeRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 32),
    _StationUnassociatedTimeRSSIa7_Type()
)
stationUnassociatedTimeRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa7.setStatus("current")
_StationUnassociatedTimeRSSIa8_Type = Counter32
_StationUnassociatedTimeRSSIa8_Object = MibTableColumn
stationUnassociatedTimeRSSIa8 = _StationUnassociatedTimeRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 33),
    _StationUnassociatedTimeRSSIa8_Type()
)
stationUnassociatedTimeRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa8.setStatus("current")
_StationUnassociatedTimeRSSIa9_Type = Counter32
_StationUnassociatedTimeRSSIa9_Object = MibTableColumn
stationUnassociatedTimeRSSIa9 = _StationUnassociatedTimeRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 34),
    _StationUnassociatedTimeRSSIa9_Type()
)
stationUnassociatedTimeRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa9.setStatus("current")
_StationUnassociatedTimeRSSIa10_Type = Counter32
_StationUnassociatedTimeRSSIa10_Object = MibTableColumn
stationUnassociatedTimeRSSIa10 = _StationUnassociatedTimeRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 35),
    _StationUnassociatedTimeRSSIa10_Type()
)
stationUnassociatedTimeRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa10.setStatus("current")
_StationUnassociatedTimeRSSIa11_Type = Counter32
_StationUnassociatedTimeRSSIa11_Object = MibTableColumn
stationUnassociatedTimeRSSIa11 = _StationUnassociatedTimeRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 36),
    _StationUnassociatedTimeRSSIa11_Type()
)
stationUnassociatedTimeRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa11.setStatus("current")
_StationUnassociatedTimeRSSIa12_Type = Counter32
_StationUnassociatedTimeRSSIa12_Object = MibTableColumn
stationUnassociatedTimeRSSIa12 = _StationUnassociatedTimeRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 37),
    _StationUnassociatedTimeRSSIa12_Type()
)
stationUnassociatedTimeRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIa12.setStatus("current")
_StationUnassociatedTimeRSSIabg1_Type = Counter32
_StationUnassociatedTimeRSSIabg1_Object = MibTableColumn
stationUnassociatedTimeRSSIabg1 = _StationUnassociatedTimeRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 38),
    _StationUnassociatedTimeRSSIabg1_Type()
)
stationUnassociatedTimeRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIabg1.setStatus("current")
_StationUnassociatedTimeRSSIabg2_Type = Counter32
_StationUnassociatedTimeRSSIabg2_Object = MibTableColumn
stationUnassociatedTimeRSSIabg2 = _StationUnassociatedTimeRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 39),
    _StationUnassociatedTimeRSSIabg2_Type()
)
stationUnassociatedTimeRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIabg2.setStatus("current")
_StationUnassociatedTimeRSSIabg3_Type = Counter32
_StationUnassociatedTimeRSSIabg3_Object = MibTableColumn
stationUnassociatedTimeRSSIabg3 = _StationUnassociatedTimeRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 40),
    _StationUnassociatedTimeRSSIabg3_Type()
)
stationUnassociatedTimeRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIabg3.setStatus("current")
_StationUnassociatedTimeRSSIabg4_Type = Counter32
_StationUnassociatedTimeRSSIabg4_Object = MibTableColumn
stationUnassociatedTimeRSSIabg4 = _StationUnassociatedTimeRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 41),
    _StationUnassociatedTimeRSSIabg4_Type()
)
stationUnassociatedTimeRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassociatedTimeRSSIabg4.setStatus("current")


class _StationDeauthMacAddress_Type(DisplayString):
    """Custom type stationDeauthMacAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 17),
    )


_StationDeauthMacAddress_Type.__name__ = "DisplayString"
_StationDeauthMacAddress_Object = MibScalar
stationDeauthMacAddress = _StationDeauthMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 3),
    _StationDeauthMacAddress_Type()
)
stationDeauthMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationDeauthMacAddress.setStatus("current")
_StationAssocTable_Object = MibTable
stationAssocTable = _StationAssocTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4)
)
if mibBuilder.loadTexts:
    stationAssocTable.setStatus("current")
_StationAssocEntry_Object = MibTableRow
stationAssocEntry = _StationAssocEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1)
)
stationAssocEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationAssocMACAddress"),
)
if mibBuilder.loadTexts:
    stationAssocEntry.setStatus("current")
_StationAssocMACAddress_Type = DisplayString
_StationAssocMACAddress_Object = MibTableColumn
stationAssocMACAddress = _StationAssocMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 1),
    _StationAssocMACAddress_Type()
)
stationAssocMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocMACAddress.setStatus("current")
_StationAssocManufacturer_Type = DisplayString
_StationAssocManufacturer_Object = MibTableColumn
stationAssocManufacturer = _StationAssocManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 2),
    _StationAssocManufacturer_Type()
)
stationAssocManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocManufacturer.setStatus("current")
_StationAssocIPAddress_Type = DisplayString
_StationAssocIPAddress_Object = MibTableColumn
stationAssocIPAddress = _StationAssocIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 3),
    _StationAssocIPAddress_Type()
)
stationAssocIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocIPAddress.setStatus("current")
_StationAssocNetbiosName_Type = DisplayString
_StationAssocNetbiosName_Object = MibTableColumn
stationAssocNetbiosName = _StationAssocNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 4),
    _StationAssocNetbiosName_Type()
)
stationAssocNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocNetbiosName.setStatus("current")
_StationAssocIAP_Type = DisplayString
_StationAssocIAP_Object = MibTableColumn
stationAssocIAP = _StationAssocIAP_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 5),
    _StationAssocIAP_Type()
)
stationAssocIAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocIAP.setStatus("current")
_StationAssocSSID_Type = DisplayString
_StationAssocSSID_Object = MibTableColumn
stationAssocSSID = _StationAssocSSID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 6),
    _StationAssocSSID_Type()
)
stationAssocSSID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocSSID.setStatus("current")
_StationAssocVLAN_Type = Integer32
_StationAssocVLAN_Object = MibTableColumn
stationAssocVLAN = _StationAssocVLAN_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 7),
    _StationAssocVLAN_Type()
)
stationAssocVLAN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocVLAN.setStatus("current")
_StationAssocRSSI_Type = Integer32
_StationAssocRSSI_Object = MibTableColumn
stationAssocRSSI = _StationAssocRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 8),
    _StationAssocRSSI_Type()
)
stationAssocRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSI.setStatus("current")
_StationAssocTime_Type = DisplayString
_StationAssocTime_Object = MibTableColumn
stationAssocTime = _StationAssocTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 9),
    _StationAssocTime_Type()
)
stationAssocTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTime.setStatus("current")
_StationAssocTxRate_Type = Integer32
_StationAssocTxRate_Object = MibTableColumn
stationAssocTxRate = _StationAssocTxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 10),
    _StationAssocTxRate_Type()
)
stationAssocTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTxRate.setStatus("current")
_StationAssocRxRate_Type = Integer32
_StationAssocRxRate_Object = MibTableColumn
stationAssocRxRate = _StationAssocRxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 11),
    _StationAssocRxRate_Type()
)
stationAssocRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRxRate.setStatus("current")
_StationAssocRSSIa1_Type = Integer32
_StationAssocRSSIa1_Object = MibTableColumn
stationAssocRSSIa1 = _StationAssocRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 12),
    _StationAssocRSSIa1_Type()
)
stationAssocRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa1.setStatus("current")
_StationAssocRSSIa2_Type = Integer32
_StationAssocRSSIa2_Object = MibTableColumn
stationAssocRSSIa2 = _StationAssocRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 13),
    _StationAssocRSSIa2_Type()
)
stationAssocRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa2.setStatus("current")
_StationAssocRSSIa3_Type = Integer32
_StationAssocRSSIa3_Object = MibTableColumn
stationAssocRSSIa3 = _StationAssocRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 14),
    _StationAssocRSSIa3_Type()
)
stationAssocRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa3.setStatus("current")
_StationAssocRSSIa4_Type = Integer32
_StationAssocRSSIa4_Object = MibTableColumn
stationAssocRSSIa4 = _StationAssocRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 15),
    _StationAssocRSSIa4_Type()
)
stationAssocRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa4.setStatus("current")
_StationAssocRSSIa5_Type = Integer32
_StationAssocRSSIa5_Object = MibTableColumn
stationAssocRSSIa5 = _StationAssocRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 16),
    _StationAssocRSSIa5_Type()
)
stationAssocRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa5.setStatus("current")
_StationAssocRSSIa6_Type = Integer32
_StationAssocRSSIa6_Object = MibTableColumn
stationAssocRSSIa6 = _StationAssocRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 17),
    _StationAssocRSSIa6_Type()
)
stationAssocRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa6.setStatus("current")
_StationAssocRSSIa7_Type = Integer32
_StationAssocRSSIa7_Object = MibTableColumn
stationAssocRSSIa7 = _StationAssocRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 18),
    _StationAssocRSSIa7_Type()
)
stationAssocRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa7.setStatus("current")
_StationAssocRSSIa8_Type = Integer32
_StationAssocRSSIa8_Object = MibTableColumn
stationAssocRSSIa8 = _StationAssocRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 19),
    _StationAssocRSSIa8_Type()
)
stationAssocRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa8.setStatus("current")
_StationAssocRSSIa9_Type = Integer32
_StationAssocRSSIa9_Object = MibTableColumn
stationAssocRSSIa9 = _StationAssocRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 20),
    _StationAssocRSSIa9_Type()
)
stationAssocRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa9.setStatus("current")
_StationAssocRSSIa10_Type = Integer32
_StationAssocRSSIa10_Object = MibTableColumn
stationAssocRSSIa10 = _StationAssocRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 21),
    _StationAssocRSSIa10_Type()
)
stationAssocRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa10.setStatus("current")
_StationAssocRSSIa11_Type = Integer32
_StationAssocRSSIa11_Object = MibTableColumn
stationAssocRSSIa11 = _StationAssocRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 22),
    _StationAssocRSSIa11_Type()
)
stationAssocRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa11.setStatus("current")
_StationAssocRSSIa12_Type = Integer32
_StationAssocRSSIa12_Object = MibTableColumn
stationAssocRSSIa12 = _StationAssocRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 23),
    _StationAssocRSSIa12_Type()
)
stationAssocRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIa12.setStatus("current")
_StationAssocRSSIabg1_Type = Integer32
_StationAssocRSSIabg1_Object = MibTableColumn
stationAssocRSSIabg1 = _StationAssocRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 24),
    _StationAssocRSSIabg1_Type()
)
stationAssocRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIabg1.setStatus("current")
_StationAssocRSSIabg2_Type = Integer32
_StationAssocRSSIabg2_Object = MibTableColumn
stationAssocRSSIabg2 = _StationAssocRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 25),
    _StationAssocRSSIabg2_Type()
)
stationAssocRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIabg2.setStatus("current")
_StationAssocRSSIabg3_Type = Integer32
_StationAssocRSSIabg3_Object = MibTableColumn
stationAssocRSSIabg3 = _StationAssocRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 26),
    _StationAssocRSSIabg3_Type()
)
stationAssocRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIabg3.setStatus("current")
_StationAssocRSSIabg4_Type = Integer32
_StationAssocRSSIabg4_Object = MibTableColumn
stationAssocRSSIabg4 = _StationAssocRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 27),
    _StationAssocRSSIabg4_Type()
)
stationAssocRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocRSSIabg4.setStatus("current")


class _StationAssocEncType_Type(Integer32):
    """Custom type stationAssocEncType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wep", 1),
          ("wpa", 2),
          ("wpa2", 3))
    )


_StationAssocEncType_Type.__name__ = "Integer32"
_StationAssocEncType_Object = MibTableColumn
stationAssocEncType = _StationAssocEncType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 28),
    _StationAssocEncType_Type()
)
stationAssocEncType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocEncType.setStatus("current")


class _StationAssocCipher_Type(Integer32):
    """Custom type stationAssocCipher based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rc4", 1),
          ("tkip", 2),
          ("aes", 3))
    )


_StationAssocCipher_Type.__name__ = "Integer32"
_StationAssocCipher_Object = MibTableColumn
stationAssocCipher = _StationAssocCipher_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 29),
    _StationAssocCipher_Type()
)
stationAssocCipher.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocCipher.setStatus("current")


class _StationAssocKeyMgmt_Type(Integer32):
    """Custom type stationAssocKeyMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("eap", 1),
          ("psk", 2))
    )


_StationAssocKeyMgmt_Type.__name__ = "Integer32"
_StationAssocKeyMgmt_Object = MibTableColumn
stationAssocKeyMgmt = _StationAssocKeyMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 30),
    _StationAssocKeyMgmt_Type()
)
stationAssocKeyMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocKeyMgmt.setStatus("current")


class _StationAssocBand_Type(Integer32):
    """Custom type stationAssocBand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dot11a", 0),
          ("dot11bg", 1))
    )


_StationAssocBand_Type.__name__ = "Integer32"
_StationAssocBand_Object = MibTableColumn
stationAssocBand = _StationAssocBand_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 31),
    _StationAssocBand_Type()
)
stationAssocBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocBand.setStatus("current")
_StationAssocChannel_Type = Integer32
_StationAssocChannel_Object = MibTableColumn
stationAssocChannel = _StationAssocChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 32),
    _StationAssocChannel_Type()
)
stationAssocChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocChannel.setStatus("current")


class _StationAssocMediaType_Type(Integer32):
    """Custom type stationAssocMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("dot11b", 1),
          ("dot11bg", 2),
          ("dot11abg", 3),
          ("dot11a", 4),
          ("dot11ab", 5),
          ("dot11ag", 6),
          ("dot11g", 7),
          ("dot11n", 8),
          ("dot11bn", 9),
          ("dot11gn", 10),
          ("dot11bgn", 11),
          ("dot11an", 12),
          ("dot11abn", 13),
          ("dot11agn", 14),
          ("dot11abgn", 15),
          ("dot11anac", 16),
          ("dot11abgnac", 17))
    )


_StationAssocMediaType_Type.__name__ = "Integer32"
_StationAssocMediaType_Object = MibTableColumn
stationAssocMediaType = _StationAssocMediaType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 33),
    _StationAssocMediaType_Type()
)
stationAssocMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocMediaType.setStatus("current")
_StationAssocUserName_Type = DisplayString
_StationAssocUserName_Object = MibTableColumn
stationAssocUserName = _StationAssocUserName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 34),
    _StationAssocUserName_Type()
)
stationAssocUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocUserName.setStatus("current")
_StationAssocTimeRSSIa1_Type = Counter32
_StationAssocTimeRSSIa1_Object = MibTableColumn
stationAssocTimeRSSIa1 = _StationAssocTimeRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 35),
    _StationAssocTimeRSSIa1_Type()
)
stationAssocTimeRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa1.setStatus("current")
_StationAssocTimeRSSIa2_Type = Counter32
_StationAssocTimeRSSIa2_Object = MibTableColumn
stationAssocTimeRSSIa2 = _StationAssocTimeRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 36),
    _StationAssocTimeRSSIa2_Type()
)
stationAssocTimeRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa2.setStatus("current")
_StationAssocTimeRSSIa3_Type = Counter32
_StationAssocTimeRSSIa3_Object = MibTableColumn
stationAssocTimeRSSIa3 = _StationAssocTimeRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 37),
    _StationAssocTimeRSSIa3_Type()
)
stationAssocTimeRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa3.setStatus("current")
_StationAssocTimeRSSIa4_Type = Counter32
_StationAssocTimeRSSIa4_Object = MibTableColumn
stationAssocTimeRSSIa4 = _StationAssocTimeRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 38),
    _StationAssocTimeRSSIa4_Type()
)
stationAssocTimeRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa4.setStatus("current")
_StationAssocTimeRSSIa5_Type = Counter32
_StationAssocTimeRSSIa5_Object = MibTableColumn
stationAssocTimeRSSIa5 = _StationAssocTimeRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 39),
    _StationAssocTimeRSSIa5_Type()
)
stationAssocTimeRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa5.setStatus("current")
_StationAssocTimeRSSIa6_Type = Counter32
_StationAssocTimeRSSIa6_Object = MibTableColumn
stationAssocTimeRSSIa6 = _StationAssocTimeRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 40),
    _StationAssocTimeRSSIa6_Type()
)
stationAssocTimeRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa6.setStatus("current")
_StationAssocTimeRSSIa7_Type = Counter32
_StationAssocTimeRSSIa7_Object = MibTableColumn
stationAssocTimeRSSIa7 = _StationAssocTimeRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 41),
    _StationAssocTimeRSSIa7_Type()
)
stationAssocTimeRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa7.setStatus("current")
_StationAssocTimeRSSIa8_Type = Counter32
_StationAssocTimeRSSIa8_Object = MibTableColumn
stationAssocTimeRSSIa8 = _StationAssocTimeRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 42),
    _StationAssocTimeRSSIa8_Type()
)
stationAssocTimeRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa8.setStatus("current")
_StationAssocTimeRSSIa9_Type = Counter32
_StationAssocTimeRSSIa9_Object = MibTableColumn
stationAssocTimeRSSIa9 = _StationAssocTimeRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 43),
    _StationAssocTimeRSSIa9_Type()
)
stationAssocTimeRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa9.setStatus("current")
_StationAssocTimeRSSIa10_Type = Counter32
_StationAssocTimeRSSIa10_Object = MibTableColumn
stationAssocTimeRSSIa10 = _StationAssocTimeRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 44),
    _StationAssocTimeRSSIa10_Type()
)
stationAssocTimeRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa10.setStatus("current")
_StationAssocTimeRSSIa11_Type = Counter32
_StationAssocTimeRSSIa11_Object = MibTableColumn
stationAssocTimeRSSIa11 = _StationAssocTimeRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 45),
    _StationAssocTimeRSSIa11_Type()
)
stationAssocTimeRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa11.setStatus("current")
_StationAssocTimeRSSIa12_Type = Counter32
_StationAssocTimeRSSIa12_Object = MibTableColumn
stationAssocTimeRSSIa12 = _StationAssocTimeRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 46),
    _StationAssocTimeRSSIa12_Type()
)
stationAssocTimeRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIa12.setStatus("current")
_StationAssocTimeRSSIabg1_Type = Counter32
_StationAssocTimeRSSIabg1_Object = MibTableColumn
stationAssocTimeRSSIabg1 = _StationAssocTimeRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 47),
    _StationAssocTimeRSSIabg1_Type()
)
stationAssocTimeRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIabg1.setStatus("current")
_StationAssocTimeRSSIabg2_Type = Counter32
_StationAssocTimeRSSIabg2_Object = MibTableColumn
stationAssocTimeRSSIabg2 = _StationAssocTimeRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 48),
    _StationAssocTimeRSSIabg2_Type()
)
stationAssocTimeRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIabg2.setStatus("current")
_StationAssocTimeRSSIabg3_Type = Counter32
_StationAssocTimeRSSIabg3_Object = MibTableColumn
stationAssocTimeRSSIabg3 = _StationAssocTimeRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 49),
    _StationAssocTimeRSSIabg3_Type()
)
stationAssocTimeRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIabg3.setStatus("current")
_StationAssocTimeRSSIabg4_Type = Counter32
_StationAssocTimeRSSIabg4_Object = MibTableColumn
stationAssocTimeRSSIabg4 = _StationAssocTimeRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 50),
    _StationAssocTimeRSSIabg4_Type()
)
stationAssocTimeRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocTimeRSSIabg4.setStatus("current")
_StationAssocHostname_Type = DisplayString
_StationAssocHostname_Object = MibTableColumn
stationAssocHostname = _StationAssocHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 51),
    _StationAssocHostname_Type()
)
stationAssocHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocHostname.setStatus("current")
_StationAssocDeviceType_Type = DisplayString
_StationAssocDeviceType_Object = MibTableColumn
stationAssocDeviceType = _StationAssocDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 52),
    _StationAssocDeviceType_Type()
)
stationAssocDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocDeviceType.setStatus("current")
_StationAssocDeviceClass_Type = DisplayString
_StationAssocDeviceClass_Object = MibTableColumn
stationAssocDeviceClass = _StationAssocDeviceClass_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 53),
    _StationAssocDeviceClass_Type()
)
stationAssocDeviceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocDeviceClass.setStatus("current")
_StationAssocUserAgent_Type = DisplayString
_StationAssocUserAgent_Object = MibTableColumn
stationAssocUserAgent = _StationAssocUserAgent_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 54),
    _StationAssocUserAgent_Type()
)
stationAssocUserAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocUserAgent.setStatus("current")


class _StationAssocDeviceSource_Type(Integer32):
    """Custom type stationAssocDeviceSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("manufacturer", 1),
          ("netbios-name", 2),
          ("dhcp-hostname", 3),
          ("user-agent-string", 4),
          ("internal-rules", 5),
          ("external-rules", 6),
          ("cache", 7))
    )


_StationAssocDeviceSource_Type.__name__ = "Integer32"
_StationAssocDeviceSource_Object = MibTableColumn
stationAssocDeviceSource = _StationAssocDeviceSource_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 55),
    _StationAssocDeviceSource_Type()
)
stationAssocDeviceSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocDeviceSource.setStatus("current")
_StationAssocDeviceSourceIndex_Type = Integer32
_StationAssocDeviceSourceIndex_Object = MibTableColumn
stationAssocDeviceSourceIndex = _StationAssocDeviceSourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 56),
    _StationAssocDeviceSourceIndex_Type()
)
stationAssocDeviceSourceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAssocDeviceSourceIndex.setStatus("current")
_StationUnassocTable_Object = MibTable
stationUnassocTable = _StationUnassocTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5)
)
if mibBuilder.loadTexts:
    stationUnassocTable.setStatus("current")
_StationUnassocEntry_Object = MibTableRow
stationUnassocEntry = _StationUnassocEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1)
)
stationUnassocEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationUnassocMACAddress"),
)
if mibBuilder.loadTexts:
    stationUnassocEntry.setStatus("current")
_StationUnassocMACAddress_Type = DisplayString
_StationUnassocMACAddress_Object = MibTableColumn
stationUnassocMACAddress = _StationUnassocMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 1),
    _StationUnassocMACAddress_Type()
)
stationUnassocMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocMACAddress.setStatus("current")
_StationUnassocManufacturer_Type = DisplayString
_StationUnassocManufacturer_Object = MibTableColumn
stationUnassocManufacturer = _StationUnassocManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 2),
    _StationUnassocManufacturer_Type()
)
stationUnassocManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocManufacturer.setStatus("current")
_StationUnassocNetbiosName_Type = DisplayString
_StationUnassocNetbiosName_Object = MibTableColumn
stationUnassocNetbiosName = _StationUnassocNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 3),
    _StationUnassocNetbiosName_Type()
)
stationUnassocNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocNetbiosName.setStatus("current")


class _StationUnassocMediaType_Type(Integer32):
    """Custom type stationUnassocMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("dot11b", 1),
          ("dot11bg", 2),
          ("dot11abg", 3),
          ("dot11a", 4),
          ("dot11ab", 5),
          ("dot11ag", 6),
          ("dot11g", 7),
          ("dot11n", 8),
          ("dot11bn", 9),
          ("dot11gn", 10),
          ("dot11bgn", 11),
          ("dot11an", 12),
          ("dot11abn", 13),
          ("dot11agn", 14),
          ("dot11abgn", 15),
          ("dot11anac", 16),
          ("dot11abgnac", 17))
    )


_StationUnassocMediaType_Type.__name__ = "Integer32"
_StationUnassocMediaType_Object = MibTableColumn
stationUnassocMediaType = _StationUnassocMediaType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 4),
    _StationUnassocMediaType_Type()
)
stationUnassocMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocMediaType.setStatus("current")
_StationUnassocTxRate_Type = Integer32
_StationUnassocTxRate_Object = MibTableColumn
stationUnassocTxRate = _StationUnassocTxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 5),
    _StationUnassocTxRate_Type()
)
stationUnassocTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTxRate.setStatus("current")
_StationUnassocRxRate_Type = Integer32
_StationUnassocRxRate_Object = MibTableColumn
stationUnassocRxRate = _StationUnassocRxRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 6),
    _StationUnassocRxRate_Type()
)
stationUnassocRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRxRate.setStatus("current")
_StationUnassocRSSI_Type = Integer32
_StationUnassocRSSI_Object = MibTableColumn
stationUnassocRSSI = _StationUnassocRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 7),
    _StationUnassocRSSI_Type()
)
stationUnassocRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSI.setStatus("current")
_StationUnassocTime_Type = Counter32
_StationUnassocTime_Object = MibTableColumn
stationUnassocTime = _StationUnassocTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 8),
    _StationUnassocTime_Type()
)
stationUnassocTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTime.setStatus("current")
_StationUnassocRSSIa1_Type = Integer32
_StationUnassocRSSIa1_Object = MibTableColumn
stationUnassocRSSIa1 = _StationUnassocRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 9),
    _StationUnassocRSSIa1_Type()
)
stationUnassocRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa1.setStatus("current")
_StationUnassocRSSIa2_Type = Integer32
_StationUnassocRSSIa2_Object = MibTableColumn
stationUnassocRSSIa2 = _StationUnassocRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 10),
    _StationUnassocRSSIa2_Type()
)
stationUnassocRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa2.setStatus("current")
_StationUnassocRSSIa3_Type = Integer32
_StationUnassocRSSIa3_Object = MibTableColumn
stationUnassocRSSIa3 = _StationUnassocRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 11),
    _StationUnassocRSSIa3_Type()
)
stationUnassocRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa3.setStatus("current")
_StationUnassocRSSIa4_Type = Integer32
_StationUnassocRSSIa4_Object = MibTableColumn
stationUnassocRSSIa4 = _StationUnassocRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 12),
    _StationUnassocRSSIa4_Type()
)
stationUnassocRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa4.setStatus("current")
_StationUnassocRSSIa5_Type = Integer32
_StationUnassocRSSIa5_Object = MibTableColumn
stationUnassocRSSIa5 = _StationUnassocRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 13),
    _StationUnassocRSSIa5_Type()
)
stationUnassocRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa5.setStatus("current")
_StationUnassocRSSIa6_Type = Integer32
_StationUnassocRSSIa6_Object = MibTableColumn
stationUnassocRSSIa6 = _StationUnassocRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 14),
    _StationUnassocRSSIa6_Type()
)
stationUnassocRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa6.setStatus("current")
_StationUnassocRSSIa7_Type = Integer32
_StationUnassocRSSIa7_Object = MibTableColumn
stationUnassocRSSIa7 = _StationUnassocRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 15),
    _StationUnassocRSSIa7_Type()
)
stationUnassocRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa7.setStatus("current")
_StationUnassocRSSIa8_Type = Integer32
_StationUnassocRSSIa8_Object = MibTableColumn
stationUnassocRSSIa8 = _StationUnassocRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 16),
    _StationUnassocRSSIa8_Type()
)
stationUnassocRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa8.setStatus("current")
_StationUnassocRSSIa9_Type = Integer32
_StationUnassocRSSIa9_Object = MibTableColumn
stationUnassocRSSIa9 = _StationUnassocRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 17),
    _StationUnassocRSSIa9_Type()
)
stationUnassocRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa9.setStatus("current")
_StationUnassocRSSIa10_Type = Integer32
_StationUnassocRSSIa10_Object = MibTableColumn
stationUnassocRSSIa10 = _StationUnassocRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 18),
    _StationUnassocRSSIa10_Type()
)
stationUnassocRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa10.setStatus("current")
_StationUnassocRSSIa11_Type = Integer32
_StationUnassocRSSIa11_Object = MibTableColumn
stationUnassocRSSIa11 = _StationUnassocRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 19),
    _StationUnassocRSSIa11_Type()
)
stationUnassocRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa11.setStatus("current")
_StationUnassocRSSIa12_Type = Integer32
_StationUnassocRSSIa12_Object = MibTableColumn
stationUnassocRSSIa12 = _StationUnassocRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 20),
    _StationUnassocRSSIa12_Type()
)
stationUnassocRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIa12.setStatus("current")
_StationUnassocRSSIabg1_Type = Integer32
_StationUnassocRSSIabg1_Object = MibTableColumn
stationUnassocRSSIabg1 = _StationUnassocRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 21),
    _StationUnassocRSSIabg1_Type()
)
stationUnassocRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIabg1.setStatus("current")
_StationUnassocRSSIabg2_Type = Integer32
_StationUnassocRSSIabg2_Object = MibTableColumn
stationUnassocRSSIabg2 = _StationUnassocRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 22),
    _StationUnassocRSSIabg2_Type()
)
stationUnassocRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIabg2.setStatus("current")
_StationUnassocRSSIabg3_Type = Integer32
_StationUnassocRSSIabg3_Object = MibTableColumn
stationUnassocRSSIabg3 = _StationUnassocRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 23),
    _StationUnassocRSSIabg3_Type()
)
stationUnassocRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIabg3.setStatus("current")
_StationUnassocRSSIabg4_Type = Integer32
_StationUnassocRSSIabg4_Object = MibTableColumn
stationUnassocRSSIabg4 = _StationUnassocRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 24),
    _StationUnassocRSSIabg4_Type()
)
stationUnassocRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocRSSIabg4.setStatus("current")
_StationUnassocTimeRSSIa1_Type = Counter32
_StationUnassocTimeRSSIa1_Object = MibTableColumn
stationUnassocTimeRSSIa1 = _StationUnassocTimeRSSIa1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 25),
    _StationUnassocTimeRSSIa1_Type()
)
stationUnassocTimeRSSIa1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa1.setStatus("current")
_StationUnassocTimeRSSIa2_Type = Counter32
_StationUnassocTimeRSSIa2_Object = MibTableColumn
stationUnassocTimeRSSIa2 = _StationUnassocTimeRSSIa2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 26),
    _StationUnassocTimeRSSIa2_Type()
)
stationUnassocTimeRSSIa2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa2.setStatus("current")
_StationUnassocTimeRSSIa3_Type = Counter32
_StationUnassocTimeRSSIa3_Object = MibTableColumn
stationUnassocTimeRSSIa3 = _StationUnassocTimeRSSIa3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 27),
    _StationUnassocTimeRSSIa3_Type()
)
stationUnassocTimeRSSIa3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa3.setStatus("current")
_StationUnassocTimeRSSIa4_Type = Counter32
_StationUnassocTimeRSSIa4_Object = MibTableColumn
stationUnassocTimeRSSIa4 = _StationUnassocTimeRSSIa4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 28),
    _StationUnassocTimeRSSIa4_Type()
)
stationUnassocTimeRSSIa4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa4.setStatus("current")
_StationUnassocTimeRSSIa5_Type = Counter32
_StationUnassocTimeRSSIa5_Object = MibTableColumn
stationUnassocTimeRSSIa5 = _StationUnassocTimeRSSIa5_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 29),
    _StationUnassocTimeRSSIa5_Type()
)
stationUnassocTimeRSSIa5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa5.setStatus("current")
_StationUnassocTimeRSSIa6_Type = Counter32
_StationUnassocTimeRSSIa6_Object = MibTableColumn
stationUnassocTimeRSSIa6 = _StationUnassocTimeRSSIa6_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 30),
    _StationUnassocTimeRSSIa6_Type()
)
stationUnassocTimeRSSIa6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa6.setStatus("current")
_StationUnassocTimeRSSIa7_Type = Counter32
_StationUnassocTimeRSSIa7_Object = MibTableColumn
stationUnassocTimeRSSIa7 = _StationUnassocTimeRSSIa7_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 31),
    _StationUnassocTimeRSSIa7_Type()
)
stationUnassocTimeRSSIa7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa7.setStatus("current")
_StationUnassocTimeRSSIa8_Type = Counter32
_StationUnassocTimeRSSIa8_Object = MibTableColumn
stationUnassocTimeRSSIa8 = _StationUnassocTimeRSSIa8_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 32),
    _StationUnassocTimeRSSIa8_Type()
)
stationUnassocTimeRSSIa8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa8.setStatus("current")
_StationUnassocTimeRSSIa9_Type = Counter32
_StationUnassocTimeRSSIa9_Object = MibTableColumn
stationUnassocTimeRSSIa9 = _StationUnassocTimeRSSIa9_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 33),
    _StationUnassocTimeRSSIa9_Type()
)
stationUnassocTimeRSSIa9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa9.setStatus("current")
_StationUnassocTimeRSSIa10_Type = Counter32
_StationUnassocTimeRSSIa10_Object = MibTableColumn
stationUnassocTimeRSSIa10 = _StationUnassocTimeRSSIa10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 34),
    _StationUnassocTimeRSSIa10_Type()
)
stationUnassocTimeRSSIa10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa10.setStatus("current")
_StationUnassocTimeRSSIa11_Type = Counter32
_StationUnassocTimeRSSIa11_Object = MibTableColumn
stationUnassocTimeRSSIa11 = _StationUnassocTimeRSSIa11_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 35),
    _StationUnassocTimeRSSIa11_Type()
)
stationUnassocTimeRSSIa11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa11.setStatus("current")
_StationUnassocTimeRSSIa12_Type = Counter32
_StationUnassocTimeRSSIa12_Object = MibTableColumn
stationUnassocTimeRSSIa12 = _StationUnassocTimeRSSIa12_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 36),
    _StationUnassocTimeRSSIa12_Type()
)
stationUnassocTimeRSSIa12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIa12.setStatus("current")
_StationUnassocTimeRSSIabg1_Type = Counter32
_StationUnassocTimeRSSIabg1_Object = MibTableColumn
stationUnassocTimeRSSIabg1 = _StationUnassocTimeRSSIabg1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 37),
    _StationUnassocTimeRSSIabg1_Type()
)
stationUnassocTimeRSSIabg1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIabg1.setStatus("current")
_StationUnassocTimeRSSIabg2_Type = Counter32
_StationUnassocTimeRSSIabg2_Object = MibTableColumn
stationUnassocTimeRSSIabg2 = _StationUnassocTimeRSSIabg2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 38),
    _StationUnassocTimeRSSIabg2_Type()
)
stationUnassocTimeRSSIabg2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIabg2.setStatus("current")
_StationUnassocTimeRSSIabg3_Type = Counter32
_StationUnassocTimeRSSIabg3_Object = MibTableColumn
stationUnassocTimeRSSIabg3 = _StationUnassocTimeRSSIabg3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 39),
    _StationUnassocTimeRSSIabg3_Type()
)
stationUnassocTimeRSSIabg3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIabg3.setStatus("current")
_StationUnassocTimeRSSIabg4_Type = Counter32
_StationUnassocTimeRSSIabg4_Object = MibTableColumn
stationUnassocTimeRSSIabg4 = _StationUnassocTimeRSSIabg4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 40),
    _StationUnassocTimeRSSIabg4_Type()
)
stationUnassocTimeRSSIabg4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationUnassocTimeRSSIabg4.setStatus("current")
_StationAssurance_ObjectIdentity = ObjectIdentity
stationAssurance = _StationAssurance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6)
)


class _StationAssuranceEnable_Type(Integer32):
    """Custom type stationAssuranceEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_StationAssuranceEnable_Type.__name__ = "Integer32"
_StationAssuranceEnable_Object = MibScalar
stationAssuranceEnable = _StationAssuranceEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 1),
    _StationAssuranceEnable_Type()
)
stationAssuranceEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceEnable.setStatus("current")


class _StationAssurancePeriod_Type(Integer32):
    """Custom type stationAssurancePeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 9999),
    )


_StationAssurancePeriod_Type.__name__ = "Integer32"
_StationAssurancePeriod_Object = MibScalar
stationAssurancePeriod = _StationAssurancePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 2),
    _StationAssurancePeriod_Type()
)
stationAssurancePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssurancePeriod.setStatus("current")


class _StationAssuranceAssocTime_Type(Integer32):
    """Custom type stationAssuranceAssocTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_StationAssuranceAssocTime_Type.__name__ = "Integer32"
_StationAssuranceAssocTime_Object = MibScalar
stationAssuranceAssocTime = _StationAssuranceAssocTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 3),
    _StationAssuranceAssocTime_Type()
)
stationAssuranceAssocTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceAssocTime.setStatus("current")


class _StationAssuranceAuthFailures_Type(Integer32):
    """Custom type stationAssuranceAuthFailures based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_StationAssuranceAuthFailures_Type.__name__ = "Integer32"
_StationAssuranceAuthFailures_Object = MibScalar
stationAssuranceAuthFailures = _StationAssuranceAuthFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 4),
    _StationAssuranceAuthFailures_Type()
)
stationAssuranceAuthFailures.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceAuthFailures.setStatus("current")


class _StationAssuranceErrorRate_Type(Integer32):
    """Custom type stationAssuranceErrorRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_StationAssuranceErrorRate_Type.__name__ = "Integer32"
_StationAssuranceErrorRate_Object = MibScalar
stationAssuranceErrorRate = _StationAssuranceErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 5),
    _StationAssuranceErrorRate_Type()
)
stationAssuranceErrorRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceErrorRate.setStatus("current")


class _StationAssuranceRetryRate_Type(Integer32):
    """Custom type stationAssuranceRetryRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_StationAssuranceRetryRate_Type.__name__ = "Integer32"
_StationAssuranceRetryRate_Object = MibScalar
stationAssuranceRetryRate = _StationAssuranceRetryRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 6),
    _StationAssuranceRetryRate_Type()
)
stationAssuranceRetryRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceRetryRate.setStatus("current")


class _StationAssuranceDataRate_Type(Integer32):
    """Custom type stationAssuranceDataRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_StationAssuranceDataRate_Type.__name__ = "Integer32"
_StationAssuranceDataRate_Object = MibScalar
stationAssuranceDataRate = _StationAssuranceDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 7),
    _StationAssuranceDataRate_Type()
)
stationAssuranceDataRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceDataRate.setStatus("current")


class _StationAssuranceRSSI_Type(Integer32):
    """Custom type stationAssuranceRSSI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-90, -50),
    )


_StationAssuranceRSSI_Type.__name__ = "Integer32"
_StationAssuranceRSSI_Object = MibScalar
stationAssuranceRSSI = _StationAssuranceRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 8),
    _StationAssuranceRSSI_Type()
)
stationAssuranceRSSI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceRSSI.setStatus("current")


class _StationAssuranceSNR_Type(Integer32):
    """Custom type stationAssuranceSNR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_StationAssuranceSNR_Type.__name__ = "Integer32"
_StationAssuranceSNR_Object = MibScalar
stationAssuranceSNR = _StationAssuranceSNR_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 9),
    _StationAssuranceSNR_Type()
)
stationAssuranceSNR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceSNR.setStatus("current")


class _StationAssuranceDistance_Type(Integer32):
    """Custom type stationAssuranceDistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9999),
    )


_StationAssuranceDistance_Type.__name__ = "Integer32"
_StationAssuranceDistance_Object = MibScalar
stationAssuranceDistance = _StationAssuranceDistance_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 10),
    _StationAssuranceDistance_Type()
)
stationAssuranceDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceDistance.setStatus("current")
_StationAssuranceTable_Object = MibTable
stationAssuranceTable = _StationAssuranceTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11)
)
if mibBuilder.loadTexts:
    stationAssuranceTable.setStatus("current")
_StationAssuranceEntry_Object = MibTableRow
stationAssuranceEntry = _StationAssuranceEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1)
)
stationAssuranceEntry.setIndexNames(
    (0, "XIRRUS-MIB", "staAssuranceIndex"),
)
if mibBuilder.loadTexts:
    stationAssuranceEntry.setStatus("current")
_StaAssuranceIndex_Type = Integer32
_StaAssuranceIndex_Object = MibTableColumn
staAssuranceIndex = _StaAssuranceIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 1),
    _StaAssuranceIndex_Type()
)
staAssuranceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    staAssuranceIndex.setStatus("current")
_StaAssuranceMACAddress_Type = DisplayString
_StaAssuranceMACAddress_Object = MibTableColumn
staAssuranceMACAddress = _StaAssuranceMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 2),
    _StaAssuranceMACAddress_Type()
)
staAssuranceMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceMACAddress.setStatus("current")
_StaAssuranceIPAddress_Type = DisplayString
_StaAssuranceIPAddress_Object = MibTableColumn
staAssuranceIPAddress = _StaAssuranceIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 3),
    _StaAssuranceIPAddress_Type()
)
staAssuranceIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceIPAddress.setStatus("current")
_StaAssuranceNetbiosName_Type = DisplayString
_StaAssuranceNetbiosName_Object = MibTableColumn
staAssuranceNetbiosName = _StaAssuranceNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 4),
    _StaAssuranceNetbiosName_Type()
)
staAssuranceNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceNetbiosName.setStatus("current")
_StaAssuranceManufacturer_Type = DisplayString
_StaAssuranceManufacturer_Object = MibTableColumn
staAssuranceManufacturer = _StaAssuranceManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 5),
    _StaAssuranceManufacturer_Type()
)
staAssuranceManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceManufacturer.setStatus("current")
_StaAssuranceTime_Type = DisplayString
_StaAssuranceTime_Object = MibTableColumn
staAssuranceTime = _StaAssuranceTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 6),
    _StaAssuranceTime_Type()
)
staAssuranceTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceTime.setStatus("current")
_StaAssuranceTimestamp_Type = Counter32
_StaAssuranceTimestamp_Object = MibTableColumn
staAssuranceTimestamp = _StaAssuranceTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 7),
    _StaAssuranceTimestamp_Type()
)
staAssuranceTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceTimestamp.setStatus("current")
_StaAssuranceAssocTime_Type = Integer32
_StaAssuranceAssocTime_Object = MibTableColumn
staAssuranceAssocTime = _StaAssuranceAssocTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 8),
    _StaAssuranceAssocTime_Type()
)
staAssuranceAssocTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAssocTime.setStatus("current")
_StaAssuranceAuthFailures_Type = Integer32
_StaAssuranceAuthFailures_Object = MibTableColumn
staAssuranceAuthFailures = _StaAssuranceAuthFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 9),
    _StaAssuranceAuthFailures_Type()
)
staAssuranceAuthFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAuthFailures.setStatus("current")
_StaAssuranceErrorRate_Type = Integer32
_StaAssuranceErrorRate_Object = MibTableColumn
staAssuranceErrorRate = _StaAssuranceErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 10),
    _StaAssuranceErrorRate_Type()
)
staAssuranceErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceErrorRate.setStatus("current")
_StaAssuranceRetryRate_Type = Integer32
_StaAssuranceRetryRate_Object = MibTableColumn
staAssuranceRetryRate = _StaAssuranceRetryRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 11),
    _StaAssuranceRetryRate_Type()
)
staAssuranceRetryRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRetryRate.setStatus("current")
_StaAssuranceDataRate_Type = Integer32
_StaAssuranceDataRate_Object = MibTableColumn
staAssuranceDataRate = _StaAssuranceDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 12),
    _StaAssuranceDataRate_Type()
)
staAssuranceDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDataRate.setStatus("current")
_StaAssuranceRSSI_Type = Integer32
_StaAssuranceRSSI_Object = MibTableColumn
staAssuranceRSSI = _StaAssuranceRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 13),
    _StaAssuranceRSSI_Type()
)
staAssuranceRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRSSI.setStatus("current")
_StaAssuranceSNR_Type = Integer32
_StaAssuranceSNR_Object = MibTableColumn
staAssuranceSNR = _StaAssuranceSNR_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 14),
    _StaAssuranceSNR_Type()
)
staAssuranceSNR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceSNR.setStatus("current")
_StaAssuranceDistance_Type = Integer32
_StaAssuranceDistance_Object = MibTableColumn
staAssuranceDistance = _StaAssuranceDistance_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 15),
    _StaAssuranceDistance_Type()
)
staAssuranceDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDistance.setStatus("current")
_StaAssuranceDeviceType_Type = DisplayString
_StaAssuranceDeviceType_Object = MibTableColumn
staAssuranceDeviceType = _StaAssuranceDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 16),
    _StaAssuranceDeviceType_Type()
)
staAssuranceDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDeviceType.setStatus("current")
_StaAssuranceDeviceClass_Type = DisplayString
_StaAssuranceDeviceClass_Object = MibTableColumn
staAssuranceDeviceClass = _StaAssuranceDeviceClass_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 17),
    _StaAssuranceDeviceClass_Type()
)
staAssuranceDeviceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDeviceClass.setStatus("current")
_StaAssuranceActiveAlarmTimestamp_Type = Counter32
_StaAssuranceActiveAlarmTimestamp_Object = MibTableColumn
staAssuranceActiveAlarmTimestamp = _StaAssuranceActiveAlarmTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 18),
    _StaAssuranceActiveAlarmTimestamp_Type()
)
staAssuranceActiveAlarmTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceActiveAlarmTimestamp.setStatus("current")


class _StaAssuranceActiveAlarmType_Type(Integer32):
    """Custom type staAssuranceActiveAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("assoc-time", 1),
          ("auth-fails", 2),
          ("error-rate", 3),
          ("retry-rate", 4),
          ("data-rate", 5),
          ("rssi", 6),
          ("snr", 7),
          ("distance", 8))
    )


_StaAssuranceActiveAlarmType_Type.__name__ = "Integer32"
_StaAssuranceActiveAlarmType_Object = MibTableColumn
staAssuranceActiveAlarmType = _StaAssuranceActiveAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 19),
    _StaAssuranceActiveAlarmType_Type()
)
staAssuranceActiveAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceActiveAlarmType.setStatus("current")
_StaAssuranceAssocTimeTimestamp_Type = Counter32
_StaAssuranceAssocTimeTimestamp_Object = MibTableColumn
staAssuranceAssocTimeTimestamp = _StaAssuranceAssocTimeTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 20),
    _StaAssuranceAssocTimeTimestamp_Type()
)
staAssuranceAssocTimeTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAssocTimeTimestamp.setStatus("current")
_StaAssuranceAuthFailuresTimestamp_Type = Counter32
_StaAssuranceAuthFailuresTimestamp_Object = MibTableColumn
staAssuranceAuthFailuresTimestamp = _StaAssuranceAuthFailuresTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 21),
    _StaAssuranceAuthFailuresTimestamp_Type()
)
staAssuranceAuthFailuresTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAuthFailuresTimestamp.setStatus("current")
_StaAssuranceErrorRateTimestamp_Type = Counter32
_StaAssuranceErrorRateTimestamp_Object = MibTableColumn
staAssuranceErrorRateTimestamp = _StaAssuranceErrorRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 22),
    _StaAssuranceErrorRateTimestamp_Type()
)
staAssuranceErrorRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceErrorRateTimestamp.setStatus("current")
_StaAssuranceRetryRateTimestamp_Type = Counter32
_StaAssuranceRetryRateTimestamp_Object = MibTableColumn
staAssuranceRetryRateTimestamp = _StaAssuranceRetryRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 23),
    _StaAssuranceRetryRateTimestamp_Type()
)
staAssuranceRetryRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRetryRateTimestamp.setStatus("current")
_StaAssuranceDataRateTimestamp_Type = Counter32
_StaAssuranceDataRateTimestamp_Object = MibTableColumn
staAssuranceDataRateTimestamp = _StaAssuranceDataRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 24),
    _StaAssuranceDataRateTimestamp_Type()
)
staAssuranceDataRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDataRateTimestamp.setStatus("current")
_StaAssuranceRSSITimestamp_Type = Counter32
_StaAssuranceRSSITimestamp_Object = MibTableColumn
staAssuranceRSSITimestamp = _StaAssuranceRSSITimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 25),
    _StaAssuranceRSSITimestamp_Type()
)
staAssuranceRSSITimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRSSITimestamp.setStatus("current")
_StaAssuranceSNRTimestamp_Type = Counter32
_StaAssuranceSNRTimestamp_Object = MibTableColumn
staAssuranceSNRTimestamp = _StaAssuranceSNRTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 26),
    _StaAssuranceSNRTimestamp_Type()
)
staAssuranceSNRTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceSNRTimestamp.setStatus("current")
_StaAssuranceDistanceTimestamp_Type = Counter32
_StaAssuranceDistanceTimestamp_Object = MibTableColumn
staAssuranceDistanceTimestamp = _StaAssuranceDistanceTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 27),
    _StaAssuranceDistanceTimestamp_Type()
)
staAssuranceDistanceTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDistanceTimestamp.setStatus("current")


class _StaAssuranceAssocTimeActive_Type(Integer32):
    """Custom type staAssuranceAssocTimeActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceAssocTimeActive_Type.__name__ = "Integer32"
_StaAssuranceAssocTimeActive_Object = MibTableColumn
staAssuranceAssocTimeActive = _StaAssuranceAssocTimeActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 28),
    _StaAssuranceAssocTimeActive_Type()
)
staAssuranceAssocTimeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAssocTimeActive.setStatus("current")


class _StaAssuranceAuthFailuresActive_Type(Integer32):
    """Custom type staAssuranceAuthFailuresActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceAuthFailuresActive_Type.__name__ = "Integer32"
_StaAssuranceAuthFailuresActive_Object = MibTableColumn
staAssuranceAuthFailuresActive = _StaAssuranceAuthFailuresActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 29),
    _StaAssuranceAuthFailuresActive_Type()
)
staAssuranceAuthFailuresActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAuthFailuresActive.setStatus("current")


class _StaAssuranceErrorRateActive_Type(Integer32):
    """Custom type staAssuranceErrorRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceErrorRateActive_Type.__name__ = "Integer32"
_StaAssuranceErrorRateActive_Object = MibTableColumn
staAssuranceErrorRateActive = _StaAssuranceErrorRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 30),
    _StaAssuranceErrorRateActive_Type()
)
staAssuranceErrorRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceErrorRateActive.setStatus("current")


class _StaAssuranceRetryRateActive_Type(Integer32):
    """Custom type staAssuranceRetryRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceRetryRateActive_Type.__name__ = "Integer32"
_StaAssuranceRetryRateActive_Object = MibTableColumn
staAssuranceRetryRateActive = _StaAssuranceRetryRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 31),
    _StaAssuranceRetryRateActive_Type()
)
staAssuranceRetryRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRetryRateActive.setStatus("current")


class _StaAssuranceDataRateActive_Type(Integer32):
    """Custom type staAssuranceDataRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceDataRateActive_Type.__name__ = "Integer32"
_StaAssuranceDataRateActive_Object = MibTableColumn
staAssuranceDataRateActive = _StaAssuranceDataRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 32),
    _StaAssuranceDataRateActive_Type()
)
staAssuranceDataRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDataRateActive.setStatus("current")


class _StaAssuranceRSSIActive_Type(Integer32):
    """Custom type staAssuranceRSSIActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceRSSIActive_Type.__name__ = "Integer32"
_StaAssuranceRSSIActive_Object = MibTableColumn
staAssuranceRSSIActive = _StaAssuranceRSSIActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 33),
    _StaAssuranceRSSIActive_Type()
)
staAssuranceRSSIActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceRSSIActive.setStatus("current")


class _StaAssuranceSNRActive_Type(Integer32):
    """Custom type staAssuranceSNRActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceSNRActive_Type.__name__ = "Integer32"
_StaAssuranceSNRActive_Object = MibTableColumn
staAssuranceSNRActive = _StaAssuranceSNRActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 34),
    _StaAssuranceSNRActive_Type()
)
staAssuranceSNRActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceSNRActive.setStatus("current")


class _StaAssuranceDistanceActive_Type(Integer32):
    """Custom type staAssuranceDistanceActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssuranceDistanceActive_Type.__name__ = "Integer32"
_StaAssuranceDistanceActive_Object = MibTableColumn
staAssuranceDistanceActive = _StaAssuranceDistanceActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 35),
    _StaAssuranceDistanceActive_Type()
)
staAssuranceDistanceActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceDistanceActive.setStatus("current")


class _StaAssuranceAlarmType_Type(Integer32):
    """Custom type staAssuranceAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("assoc-time", 1),
          ("auth-fails", 2),
          ("error-rate", 3),
          ("retry-rate", 4),
          ("data-rate", 5),
          ("rssi", 6),
          ("snr", 7),
          ("distance", 8))
    )


_StaAssuranceAlarmType_Type.__name__ = "Integer32"
_StaAssuranceAlarmType_Object = MibTableColumn
staAssuranceAlarmType = _StaAssuranceAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 36),
    _StaAssuranceAlarmType_Type()
)
staAssuranceAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssuranceAlarmType.setStatus("current")
_StationAssurTable_Object = MibTable
stationAssurTable = _StationAssurTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12)
)
if mibBuilder.loadTexts:
    stationAssurTable.setStatus("current")
_StationAssurEntry_Object = MibTableRow
stationAssurEntry = _StationAssurEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1)
)
stationAssurEntry.setIndexNames(
    (0, "XIRRUS-MIB", "staAssurMACAddress"),
)
if mibBuilder.loadTexts:
    stationAssurEntry.setStatus("current")
_StaAssurMACAddress_Type = DisplayString
_StaAssurMACAddress_Object = MibTableColumn
staAssurMACAddress = _StaAssurMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 1),
    _StaAssurMACAddress_Type()
)
staAssurMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurMACAddress.setStatus("current")
_StaAssurIPAddress_Type = DisplayString
_StaAssurIPAddress_Object = MibTableColumn
staAssurIPAddress = _StaAssurIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 2),
    _StaAssurIPAddress_Type()
)
staAssurIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurIPAddress.setStatus("current")
_StaAssurNetbiosName_Type = DisplayString
_StaAssurNetbiosName_Object = MibTableColumn
staAssurNetbiosName = _StaAssurNetbiosName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 3),
    _StaAssurNetbiosName_Type()
)
staAssurNetbiosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurNetbiosName.setStatus("current")
_StaAssurManufacturer_Type = DisplayString
_StaAssurManufacturer_Object = MibTableColumn
staAssurManufacturer = _StaAssurManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 4),
    _StaAssurManufacturer_Type()
)
staAssurManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurManufacturer.setStatus("current")
_StaAssurTime_Type = DisplayString
_StaAssurTime_Object = MibTableColumn
staAssurTime = _StaAssurTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 5),
    _StaAssurTime_Type()
)
staAssurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurTime.setStatus("current")
_StaAssurTimestamp_Type = Counter32
_StaAssurTimestamp_Object = MibTableColumn
staAssurTimestamp = _StaAssurTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 6),
    _StaAssurTimestamp_Type()
)
staAssurTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurTimestamp.setStatus("current")
_StaAssurAssocTime_Type = Integer32
_StaAssurAssocTime_Object = MibTableColumn
staAssurAssocTime = _StaAssurAssocTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 7),
    _StaAssurAssocTime_Type()
)
staAssurAssocTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAssocTime.setStatus("current")
_StaAssurAuthFailures_Type = Integer32
_StaAssurAuthFailures_Object = MibTableColumn
staAssurAuthFailures = _StaAssurAuthFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 8),
    _StaAssurAuthFailures_Type()
)
staAssurAuthFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAuthFailures.setStatus("current")
_StaAssurErrorRate_Type = Integer32
_StaAssurErrorRate_Object = MibTableColumn
staAssurErrorRate = _StaAssurErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 9),
    _StaAssurErrorRate_Type()
)
staAssurErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurErrorRate.setStatus("current")
_StaAssurRetryRate_Type = Integer32
_StaAssurRetryRate_Object = MibTableColumn
staAssurRetryRate = _StaAssurRetryRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 10),
    _StaAssurRetryRate_Type()
)
staAssurRetryRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRetryRate.setStatus("current")
_StaAssurDataRate_Type = Integer32
_StaAssurDataRate_Object = MibTableColumn
staAssurDataRate = _StaAssurDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 11),
    _StaAssurDataRate_Type()
)
staAssurDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDataRate.setStatus("current")
_StaAssurRSSI_Type = Integer32
_StaAssurRSSI_Object = MibTableColumn
staAssurRSSI = _StaAssurRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 12),
    _StaAssurRSSI_Type()
)
staAssurRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRSSI.setStatus("current")
_StaAssurSNR_Type = Integer32
_StaAssurSNR_Object = MibTableColumn
staAssurSNR = _StaAssurSNR_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 13),
    _StaAssurSNR_Type()
)
staAssurSNR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurSNR.setStatus("current")
_StaAssurDistance_Type = Integer32
_StaAssurDistance_Object = MibTableColumn
staAssurDistance = _StaAssurDistance_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 14),
    _StaAssurDistance_Type()
)
staAssurDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDistance.setStatus("current")
_StaAssurDeviceType_Type = DisplayString
_StaAssurDeviceType_Object = MibTableColumn
staAssurDeviceType = _StaAssurDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 15),
    _StaAssurDeviceType_Type()
)
staAssurDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDeviceType.setStatus("current")
_StaAssurDeviceClass_Type = DisplayString
_StaAssurDeviceClass_Object = MibTableColumn
staAssurDeviceClass = _StaAssurDeviceClass_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 16),
    _StaAssurDeviceClass_Type()
)
staAssurDeviceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDeviceClass.setStatus("current")
_StaAssurActiveAlarmTimestamp_Type = Counter32
_StaAssurActiveAlarmTimestamp_Object = MibTableColumn
staAssurActiveAlarmTimestamp = _StaAssurActiveAlarmTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 17),
    _StaAssurActiveAlarmTimestamp_Type()
)
staAssurActiveAlarmTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurActiveAlarmTimestamp.setStatus("current")


class _StaAssurActiveAlarmType_Type(Integer32):
    """Custom type staAssurActiveAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("assoc-time", 1),
          ("auth-fails", 2),
          ("error-rate", 3),
          ("retry-rate", 4),
          ("data-rate", 5),
          ("rssi", 6),
          ("snr", 7),
          ("distance", 8))
    )


_StaAssurActiveAlarmType_Type.__name__ = "Integer32"
_StaAssurActiveAlarmType_Object = MibTableColumn
staAssurActiveAlarmType = _StaAssurActiveAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 18),
    _StaAssurActiveAlarmType_Type()
)
staAssurActiveAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurActiveAlarmType.setStatus("current")
_StaAssurAssocTimeTimestamp_Type = Counter32
_StaAssurAssocTimeTimestamp_Object = MibTableColumn
staAssurAssocTimeTimestamp = _StaAssurAssocTimeTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 19),
    _StaAssurAssocTimeTimestamp_Type()
)
staAssurAssocTimeTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAssocTimeTimestamp.setStatus("current")
_StaAssurAuthFailuresTimestamp_Type = Counter32
_StaAssurAuthFailuresTimestamp_Object = MibTableColumn
staAssurAuthFailuresTimestamp = _StaAssurAuthFailuresTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 20),
    _StaAssurAuthFailuresTimestamp_Type()
)
staAssurAuthFailuresTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAuthFailuresTimestamp.setStatus("current")
_StaAssurErrorRateTimestamp_Type = Counter32
_StaAssurErrorRateTimestamp_Object = MibTableColumn
staAssurErrorRateTimestamp = _StaAssurErrorRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 21),
    _StaAssurErrorRateTimestamp_Type()
)
staAssurErrorRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurErrorRateTimestamp.setStatus("current")
_StaAssurRetryRateTimestamp_Type = Counter32
_StaAssurRetryRateTimestamp_Object = MibTableColumn
staAssurRetryRateTimestamp = _StaAssurRetryRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 22),
    _StaAssurRetryRateTimestamp_Type()
)
staAssurRetryRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRetryRateTimestamp.setStatus("current")
_StaAssurDataRateTimestamp_Type = Counter32
_StaAssurDataRateTimestamp_Object = MibTableColumn
staAssurDataRateTimestamp = _StaAssurDataRateTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 23),
    _StaAssurDataRateTimestamp_Type()
)
staAssurDataRateTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDataRateTimestamp.setStatus("current")
_StaAssurRSSITimestamp_Type = Counter32
_StaAssurRSSITimestamp_Object = MibTableColumn
staAssurRSSITimestamp = _StaAssurRSSITimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 24),
    _StaAssurRSSITimestamp_Type()
)
staAssurRSSITimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRSSITimestamp.setStatus("current")
_StaAssurSNRTimestamp_Type = Counter32
_StaAssurSNRTimestamp_Object = MibTableColumn
staAssurSNRTimestamp = _StaAssurSNRTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 25),
    _StaAssurSNRTimestamp_Type()
)
staAssurSNRTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurSNRTimestamp.setStatus("current")
_StaAssurDistanceTimestamp_Type = Counter32
_StaAssurDistanceTimestamp_Object = MibTableColumn
staAssurDistanceTimestamp = _StaAssurDistanceTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 26),
    _StaAssurDistanceTimestamp_Type()
)
staAssurDistanceTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDistanceTimestamp.setStatus("current")


class _StaAssurAssocTimeActive_Type(Integer32):
    """Custom type staAssurAssocTimeActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurAssocTimeActive_Type.__name__ = "Integer32"
_StaAssurAssocTimeActive_Object = MibTableColumn
staAssurAssocTimeActive = _StaAssurAssocTimeActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 27),
    _StaAssurAssocTimeActive_Type()
)
staAssurAssocTimeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAssocTimeActive.setStatus("current")


class _StaAssurAuthFailuresActive_Type(Integer32):
    """Custom type staAssurAuthFailuresActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurAuthFailuresActive_Type.__name__ = "Integer32"
_StaAssurAuthFailuresActive_Object = MibTableColumn
staAssurAuthFailuresActive = _StaAssurAuthFailuresActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 28),
    _StaAssurAuthFailuresActive_Type()
)
staAssurAuthFailuresActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAuthFailuresActive.setStatus("current")


class _StaAssurErrorRateActive_Type(Integer32):
    """Custom type staAssurErrorRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurErrorRateActive_Type.__name__ = "Integer32"
_StaAssurErrorRateActive_Object = MibTableColumn
staAssurErrorRateActive = _StaAssurErrorRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 29),
    _StaAssurErrorRateActive_Type()
)
staAssurErrorRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurErrorRateActive.setStatus("current")


class _StaAssurRetryRateActive_Type(Integer32):
    """Custom type staAssurRetryRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurRetryRateActive_Type.__name__ = "Integer32"
_StaAssurRetryRateActive_Object = MibTableColumn
staAssurRetryRateActive = _StaAssurRetryRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 30),
    _StaAssurRetryRateActive_Type()
)
staAssurRetryRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRetryRateActive.setStatus("current")


class _StaAssurDataRateActive_Type(Integer32):
    """Custom type staAssurDataRateActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurDataRateActive_Type.__name__ = "Integer32"
_StaAssurDataRateActive_Object = MibTableColumn
staAssurDataRateActive = _StaAssurDataRateActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 31),
    _StaAssurDataRateActive_Type()
)
staAssurDataRateActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDataRateActive.setStatus("current")


class _StaAssurRSSIActive_Type(Integer32):
    """Custom type staAssurRSSIActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurRSSIActive_Type.__name__ = "Integer32"
_StaAssurRSSIActive_Object = MibTableColumn
staAssurRSSIActive = _StaAssurRSSIActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 32),
    _StaAssurRSSIActive_Type()
)
staAssurRSSIActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurRSSIActive.setStatus("current")


class _StaAssurSNRActive_Type(Integer32):
    """Custom type staAssurSNRActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurSNRActive_Type.__name__ = "Integer32"
_StaAssurSNRActive_Object = MibTableColumn
staAssurSNRActive = _StaAssurSNRActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 33),
    _StaAssurSNRActive_Type()
)
staAssurSNRActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurSNRActive.setStatus("current")


class _StaAssurDistanceActive_Type(Integer32):
    """Custom type staAssurDistanceActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_StaAssurDistanceActive_Type.__name__ = "Integer32"
_StaAssurDistanceActive_Object = MibTableColumn
staAssurDistanceActive = _StaAssurDistanceActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 34),
    _StaAssurDistanceActive_Type()
)
staAssurDistanceActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurDistanceActive.setStatus("current")


class _StaAssurAlarmType_Type(Integer32):
    """Custom type staAssurAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("assoc-time", 1),
          ("auth-fails", 2),
          ("error-rate", 3),
          ("retry-rate", 4),
          ("data-rate", 5),
          ("rssi", 6),
          ("snr", 7),
          ("distance", 8))
    )


_StaAssurAlarmType_Type.__name__ = "Integer32"
_StaAssurAlarmType_Object = MibTableColumn
staAssurAlarmType = _StaAssurAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 35),
    _StaAssurAlarmType_Type()
)
staAssurAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAssurAlarmType.setStatus("current")


class _StationAssuranceTableClear_Type(Integer32):
    """Custom type stationAssuranceTableClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("history", 0),
          ("all", 1))
    )


_StationAssuranceTableClear_Type.__name__ = "Integer32"
_StationAssuranceTableClear_Object = MibScalar
stationAssuranceTableClear = _StationAssuranceTableClear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 13),
    _StationAssuranceTableClear_Type()
)
stationAssuranceTableClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceTableClear.setStatus("current")


class _StationAssuranceTablePeriod_Type(Counter32):
    """Custom type stationAssuranceTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_StationAssuranceTablePeriod_Type.__name__ = "Counter32"
_StationAssuranceTablePeriod_Object = MibScalar
stationAssuranceTablePeriod = _StationAssuranceTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 14),
    _StationAssuranceTablePeriod_Type()
)
stationAssuranceTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAssuranceTablePeriod.setStatus("current")


class _StationUnassociatedTablePeriod_Type(Counter32):
    """Custom type stationUnassociatedTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_StationUnassociatedTablePeriod_Type.__name__ = "Counter32"
_StationUnassociatedTablePeriod_Object = MibScalar
stationUnassociatedTablePeriod = _StationUnassociatedTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 7),
    _StationUnassociatedTablePeriod_Type()
)
stationUnassociatedTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationUnassociatedTablePeriod.setStatus("current")
_StationLocTable_Object = MibTable
stationLocTable = _StationLocTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8)
)
if mibBuilder.loadTexts:
    stationLocTable.setStatus("current")
_StationLocEntry_Object = MibTableRow
stationLocEntry = _StationLocEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1)
)
stationLocEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationLocMACAddress"),
)
if mibBuilder.loadTexts:
    stationLocEntry.setStatus("current")
_StationLocMACAddress_Type = DisplayString
_StationLocMACAddress_Object = MibTableColumn
stationLocMACAddress = _StationLocMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 1),
    _StationLocMACAddress_Type()
)
stationLocMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationLocMACAddress.setStatus("current")
_StationLocRSSI_Type = Integer32
_StationLocRSSI_Object = MibTableColumn
stationLocRSSI = _StationLocRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 2),
    _StationLocRSSI_Type()
)
stationLocRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationLocRSSI.setStatus("current")
_StationLocPositionX_Type = DisplayString
_StationLocPositionX_Object = MibTableColumn
stationLocPositionX = _StationLocPositionX_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 3),
    _StationLocPositionX_Type()
)
stationLocPositionX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationLocPositionX.setStatus("current")
_StationLocPositionY_Type = DisplayString
_StationLocPositionY_Object = MibTableColumn
stationLocPositionY = _StationLocPositionY_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 4),
    _StationLocPositionY_Type()
)
stationLocPositionY.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationLocPositionY.setStatus("current")
_StationLocPositionZ_Type = DisplayString
_StationLocPositionZ_Object = MibTableColumn
stationLocPositionZ = _StationLocPositionZ_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 5),
    _StationLocPositionZ_Type()
)
stationLocPositionZ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationLocPositionZ.setStatus("current")
_Statistics_ObjectIdentity = ObjectIdentity
statistics = _Statistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24)
)
_EthStatsTable_Object = MibTable
ethStatsTable = _EthStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1)
)
if mibBuilder.loadTexts:
    ethStatsTable.setStatus("current")
_EthStatsEntry_Object = MibTableRow
ethStatsEntry = _EthStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1)
)
ethStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "ethStatsIndex"),
)
if mibBuilder.loadTexts:
    ethStatsEntry.setStatus("current")
_EthStatsIndex_Type = Integer32
_EthStatsIndex_Object = MibTableColumn
ethStatsIndex = _EthStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 1),
    _EthStatsIndex_Type()
)
ethStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ethStatsIndex.setStatus("current")
_EthStatsIfaceName_Type = DisplayString
_EthStatsIfaceName_Object = MibTableColumn
ethStatsIfaceName = _EthStatsIfaceName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 2),
    _EthStatsIfaceName_Type()
)
ethStatsIfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsIfaceName.setStatus("current")


class _EthStatsIfaceStatus_Type(Integer32):
    """Custom type ethStatsIfaceStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_EthStatsIfaceStatus_Type.__name__ = "Integer32"
_EthStatsIfaceStatus_Object = MibTableColumn
ethStatsIfaceStatus = _EthStatsIfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 3),
    _EthStatsIfaceStatus_Type()
)
ethStatsIfaceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsIfaceStatus.setStatus("current")


class _EthStatsIfaceLink_Type(Integer32):
    """Custom type ethStatsIfaceLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_EthStatsIfaceLink_Type.__name__ = "Integer32"
_EthStatsIfaceLink_Object = MibTableColumn
ethStatsIfaceLink = _EthStatsIfaceLink_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 4),
    _EthStatsIfaceLink_Type()
)
ethStatsIfaceLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsIfaceLink.setStatus("current")


class _EthStatsIfaceDuplex_Type(Integer32):
    """Custom type ethStatsIfaceDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("half", 0),
          ("full", 1))
    )


_EthStatsIfaceDuplex_Type.__name__ = "Integer32"
_EthStatsIfaceDuplex_Object = MibTableColumn
ethStatsIfaceDuplex = _EthStatsIfaceDuplex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 5),
    _EthStatsIfaceDuplex_Type()
)
ethStatsIfaceDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsIfaceDuplex.setStatus("current")
_EthStatsIfaceSpeed_Type = Integer32
_EthStatsIfaceSpeed_Object = MibTableColumn
ethStatsIfaceSpeed = _EthStatsIfaceSpeed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 6),
    _EthStatsIfaceSpeed_Type()
)
ethStatsIfaceSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsIfaceSpeed.setStatus("current")
_EthStatsRxBytes_Type = Counter64
_EthStatsRxBytes_Object = MibTableColumn
ethStatsRxBytes = _EthStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 7),
    _EthStatsRxBytes_Type()
)
ethStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxBytes.setStatus("current")
_EthStatsRxPackets_Type = Counter64
_EthStatsRxPackets_Object = MibTableColumn
ethStatsRxPackets = _EthStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 8),
    _EthStatsRxPackets_Type()
)
ethStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxPackets.setStatus("current")
_EthStatsRxCompressed_Type = Counter64
_EthStatsRxCompressed_Object = MibTableColumn
ethStatsRxCompressed = _EthStatsRxCompressed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 9),
    _EthStatsRxCompressed_Type()
)
ethStatsRxCompressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxCompressed.setStatus("current")
_EthStatsRxMulticast_Type = Counter64
_EthStatsRxMulticast_Object = MibTableColumn
ethStatsRxMulticast = _EthStatsRxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 10),
    _EthStatsRxMulticast_Type()
)
ethStatsRxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxMulticast.setStatus("current")
_EthStatsRxDropped_Type = Counter64
_EthStatsRxDropped_Object = MibTableColumn
ethStatsRxDropped = _EthStatsRxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 11),
    _EthStatsRxDropped_Type()
)
ethStatsRxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxDropped.setStatus("current")
_EthStatsRxFifoErrors_Type = Counter64
_EthStatsRxFifoErrors_Object = MibTableColumn
ethStatsRxFifoErrors = _EthStatsRxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 12),
    _EthStatsRxFifoErrors_Type()
)
ethStatsRxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxFifoErrors.setStatus("current")
_EthStatsRxFrameErrors_Type = Counter64
_EthStatsRxFrameErrors_Object = MibTableColumn
ethStatsRxFrameErrors = _EthStatsRxFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 13),
    _EthStatsRxFrameErrors_Type()
)
ethStatsRxFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxFrameErrors.setStatus("current")
_EthStatsRxTotalErrors_Type = Counter64
_EthStatsRxTotalErrors_Object = MibTableColumn
ethStatsRxTotalErrors = _EthStatsRxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 14),
    _EthStatsRxTotalErrors_Type()
)
ethStatsRxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsRxTotalErrors.setStatus("current")
_EthStatsTxBytes_Type = Counter64
_EthStatsTxBytes_Object = MibTableColumn
ethStatsTxBytes = _EthStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 15),
    _EthStatsTxBytes_Type()
)
ethStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxBytes.setStatus("current")
_EthStatsTxPackets_Type = Counter64
_EthStatsTxPackets_Object = MibTableColumn
ethStatsTxPackets = _EthStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 16),
    _EthStatsTxPackets_Type()
)
ethStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxPackets.setStatus("current")
_EthStatsTxCompressed_Type = Counter64
_EthStatsTxCompressed_Object = MibTableColumn
ethStatsTxCompressed = _EthStatsTxCompressed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 17),
    _EthStatsTxCompressed_Type()
)
ethStatsTxCompressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxCompressed.setStatus("current")
_EthStatsTxCarrierErrors_Type = Counter64
_EthStatsTxCarrierErrors_Object = MibTableColumn
ethStatsTxCarrierErrors = _EthStatsTxCarrierErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 18),
    _EthStatsTxCarrierErrors_Type()
)
ethStatsTxCarrierErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxCarrierErrors.setStatus("current")
_EthStatsTxDropped_Type = Counter64
_EthStatsTxDropped_Object = MibTableColumn
ethStatsTxDropped = _EthStatsTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 19),
    _EthStatsTxDropped_Type()
)
ethStatsTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxDropped.setStatus("current")
_EthStatsTxFifoErrors_Type = Counter64
_EthStatsTxFifoErrors_Object = MibTableColumn
ethStatsTxFifoErrors = _EthStatsTxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 20),
    _EthStatsTxFifoErrors_Type()
)
ethStatsTxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxFifoErrors.setStatus("current")
_EthStatsTxCollisions_Type = Counter64
_EthStatsTxCollisions_Object = MibTableColumn
ethStatsTxCollisions = _EthStatsTxCollisions_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 21),
    _EthStatsTxCollisions_Type()
)
ethStatsTxCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxCollisions.setStatus("current")
_EthStatsTxTotalErrors_Type = Counter64
_EthStatsTxTotalErrors_Object = MibTableColumn
ethStatsTxTotalErrors = _EthStatsTxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 22),
    _EthStatsTxTotalErrors_Type()
)
ethStatsTxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTxTotalErrors.setStatus("current")
_EthStatsTimePeriod_Type = Counter32
_EthStatsTimePeriod_Object = MibTableColumn
ethStatsTimePeriod = _EthStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 23),
    _EthStatsTimePeriod_Type()
)
ethStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethStatsTimePeriod.setStatus("current")
_IapStatsTable_Object = MibTable
iapStatsTable = _IapStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2)
)
if mibBuilder.loadTexts:
    iapStatsTable.setStatus("current")
_IapStatsEntry_Object = MibTableRow
iapStatsEntry = _IapStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1)
)
iapStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "iapStatsIndex"),
)
if mibBuilder.loadTexts:
    iapStatsEntry.setStatus("current")
_IapStatsIndex_Type = Integer32
_IapStatsIndex_Object = MibTableColumn
iapStatsIndex = _IapStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 1),
    _IapStatsIndex_Type()
)
iapStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iapStatsIndex.setStatus("current")
_IapStatsIfaceName_Type = DisplayString
_IapStatsIfaceName_Object = MibTableColumn
iapStatsIfaceName = _IapStatsIfaceName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 2),
    _IapStatsIfaceName_Type()
)
iapStatsIfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsIfaceName.setStatus("current")
_IapStatsRxBytes_Type = Counter64
_IapStatsRxBytes_Object = MibTableColumn
iapStatsRxBytes = _IapStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 3),
    _IapStatsRxBytes_Type()
)
iapStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxBytes.setStatus("current")
_IapStatsRxPackets_Type = Counter64
_IapStatsRxPackets_Object = MibTableColumn
iapStatsRxPackets = _IapStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 4),
    _IapStatsRxPackets_Type()
)
iapStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxPackets.setStatus("current")
_IapStatsRxUnicast_Type = Counter64
_IapStatsRxUnicast_Object = MibTableColumn
iapStatsRxUnicast = _IapStatsRxUnicast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 5),
    _IapStatsRxUnicast_Type()
)
iapStatsRxUnicast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxUnicast.setStatus("current")
_IapStatsRxMulticast_Type = Counter64
_IapStatsRxMulticast_Object = MibTableColumn
iapStatsRxMulticast = _IapStatsRxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 6),
    _IapStatsRxMulticast_Type()
)
iapStatsRxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxMulticast.setStatus("current")
_IapStatsRxBroadcast_Type = Counter64
_IapStatsRxBroadcast_Object = MibTableColumn
iapStatsRxBroadcast = _IapStatsRxBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 7),
    _IapStatsRxBroadcast_Type()
)
iapStatsRxBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxBroadcast.setStatus("current")
_IapStatsRxManagement_Type = Counter64
_IapStatsRxManagement_Object = MibTableColumn
iapStatsRxManagement = _IapStatsRxManagement_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 8),
    _IapStatsRxManagement_Type()
)
iapStatsRxManagement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxManagement.setStatus("current")
_IapStatsRxBeacons_Type = Counter64
_IapStatsRxBeacons_Object = MibTableColumn
iapStatsRxBeacons = _IapStatsRxBeacons_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 9),
    _IapStatsRxBeacons_Type()
)
iapStatsRxBeacons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxBeacons.setStatus("current")
_IapStatsRxRTS_Type = Counter64
_IapStatsRxRTS_Object = MibTableColumn
iapStatsRxRTS = _IapStatsRxRTS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 10),
    _IapStatsRxRTS_Type()
)
iapStatsRxRTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRTS.setStatus("current")
_IapStatsRxCTS_Type = Counter64
_IapStatsRxCTS_Object = MibTableColumn
iapStatsRxCTS = _IapStatsRxCTS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 11),
    _IapStatsRxCTS_Type()
)
iapStatsRxCTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxCTS.setStatus("current")
_IapStatsRxFragments_Type = Counter64
_IapStatsRxFragments_Object = MibTableColumn
iapStatsRxFragments = _IapStatsRxFragments_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 12),
    _IapStatsRxFragments_Type()
)
iapStatsRxFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxFragments.setStatus("current")
_IapStatsRxTotalErrors_Type = Counter64
_IapStatsRxTotalErrors_Object = MibTableColumn
iapStatsRxTotalErrors = _IapStatsRxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 13),
    _IapStatsRxTotalErrors_Type()
)
iapStatsRxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxTotalErrors.setStatus("current")
_IapStatsRxTotalRetries_Type = Counter64
_IapStatsRxTotalRetries_Object = MibTableColumn
iapStatsRxTotalRetries = _IapStatsRxTotalRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 14),
    _IapStatsRxTotalRetries_Type()
)
iapStatsRxTotalRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxTotalRetries.setStatus("current")
_IapStatsRxDropped_Type = Counter64
_IapStatsRxDropped_Object = MibTableColumn
iapStatsRxDropped = _IapStatsRxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 15),
    _IapStatsRxDropped_Type()
)
iapStatsRxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxDropped.setStatus("current")
_IapStatsRxUnassociated_Type = Counter64
_IapStatsRxUnassociated_Object = MibTableColumn
iapStatsRxUnassociated = _IapStatsRxUnassociated_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 16),
    _IapStatsRxUnassociated_Type()
)
iapStatsRxUnassociated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxUnassociated.setStatus("current")
_IapStatsRxCRCErrors_Type = Counter64
_IapStatsRxCRCErrors_Object = MibTableColumn
iapStatsRxCRCErrors = _IapStatsRxCRCErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 17),
    _IapStatsRxCRCErrors_Type()
)
iapStatsRxCRCErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxCRCErrors.setStatus("current")
_IapStatsRxFragErrors_Type = Counter64
_IapStatsRxFragErrors_Object = MibTableColumn
iapStatsRxFragErrors = _IapStatsRxFragErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 18),
    _IapStatsRxFragErrors_Type()
)
iapStatsRxFragErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxFragErrors.setStatus("current")
_IapStatsRxEncErrors_Type = Counter64
_IapStatsRxEncErrors_Object = MibTableColumn
iapStatsRxEncErrors = _IapStatsRxEncErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 19),
    _IapStatsRxEncErrors_Type()
)
iapStatsRxEncErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxEncErrors.setStatus("current")
_IapStatsRxOverruns_Type = Counter64
_IapStatsRxOverruns_Object = MibTableColumn
iapStatsRxOverruns = _IapStatsRxOverruns_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 20),
    _IapStatsRxOverruns_Type()
)
iapStatsRxOverruns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxOverruns.setStatus("current")
_IapStatsRxDuplicates_Type = Counter64
_IapStatsRxDuplicates_Object = MibTableColumn
iapStatsRxDuplicates = _IapStatsRxDuplicates_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 21),
    _IapStatsRxDuplicates_Type()
)
iapStatsRxDuplicates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxDuplicates.setStatus("current")
_IapStatsRxRate1Bytes_Type = Counter64
_IapStatsRxRate1Bytes_Object = MibTableColumn
iapStatsRxRate1Bytes = _IapStatsRxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 22),
    _IapStatsRxRate1Bytes_Type()
)
iapStatsRxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate1Bytes.setStatus("current")
_IapStatsRxRate1Packets_Type = Counter64
_IapStatsRxRate1Packets_Object = MibTableColumn
iapStatsRxRate1Packets = _IapStatsRxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 23),
    _IapStatsRxRate1Packets_Type()
)
iapStatsRxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate1Packets.setStatus("current")
_IapStatsRxRate1Errors_Type = Counter64
_IapStatsRxRate1Errors_Object = MibTableColumn
iapStatsRxRate1Errors = _IapStatsRxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 24),
    _IapStatsRxRate1Errors_Type()
)
iapStatsRxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate1Errors.setStatus("current")
_IapStatsRxRate1Retries_Type = Counter64
_IapStatsRxRate1Retries_Object = MibTableColumn
iapStatsRxRate1Retries = _IapStatsRxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 25),
    _IapStatsRxRate1Retries_Type()
)
iapStatsRxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate1Retries.setStatus("current")
_IapStatsRxRate2Bytes_Type = Counter64
_IapStatsRxRate2Bytes_Object = MibTableColumn
iapStatsRxRate2Bytes = _IapStatsRxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 26),
    _IapStatsRxRate2Bytes_Type()
)
iapStatsRxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate2Bytes.setStatus("current")
_IapStatsRxRate2Packets_Type = Counter64
_IapStatsRxRate2Packets_Object = MibTableColumn
iapStatsRxRate2Packets = _IapStatsRxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 27),
    _IapStatsRxRate2Packets_Type()
)
iapStatsRxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate2Packets.setStatus("current")
_IapStatsRxRate2Errors_Type = Counter64
_IapStatsRxRate2Errors_Object = MibTableColumn
iapStatsRxRate2Errors = _IapStatsRxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 28),
    _IapStatsRxRate2Errors_Type()
)
iapStatsRxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate2Errors.setStatus("current")
_IapStatsRxRate2Retries_Type = Counter64
_IapStatsRxRate2Retries_Object = MibTableColumn
iapStatsRxRate2Retries = _IapStatsRxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 29),
    _IapStatsRxRate2Retries_Type()
)
iapStatsRxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate2Retries.setStatus("current")
_IapStatsRxRate5Bytes_Type = Counter64
_IapStatsRxRate5Bytes_Object = MibTableColumn
iapStatsRxRate5Bytes = _IapStatsRxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 30),
    _IapStatsRxRate5Bytes_Type()
)
iapStatsRxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate5Bytes.setStatus("current")
_IapStatsRxRate5Packets_Type = Counter64
_IapStatsRxRate5Packets_Object = MibTableColumn
iapStatsRxRate5Packets = _IapStatsRxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 31),
    _IapStatsRxRate5Packets_Type()
)
iapStatsRxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate5Packets.setStatus("current")
_IapStatsRxRate5Errors_Type = Counter64
_IapStatsRxRate5Errors_Object = MibTableColumn
iapStatsRxRate5Errors = _IapStatsRxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 32),
    _IapStatsRxRate5Errors_Type()
)
iapStatsRxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate5Errors.setStatus("current")
_IapStatsRxRate5Retries_Type = Counter64
_IapStatsRxRate5Retries_Object = MibTableColumn
iapStatsRxRate5Retries = _IapStatsRxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 33),
    _IapStatsRxRate5Retries_Type()
)
iapStatsRxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate5Retries.setStatus("current")
_IapStatsRxRate11Bytes_Type = Counter64
_IapStatsRxRate11Bytes_Object = MibTableColumn
iapStatsRxRate11Bytes = _IapStatsRxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 34),
    _IapStatsRxRate11Bytes_Type()
)
iapStatsRxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate11Bytes.setStatus("current")
_IapStatsRxRate11Packets_Type = Counter64
_IapStatsRxRate11Packets_Object = MibTableColumn
iapStatsRxRate11Packets = _IapStatsRxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 35),
    _IapStatsRxRate11Packets_Type()
)
iapStatsRxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate11Packets.setStatus("current")
_IapStatsRxRate11Errors_Type = Counter64
_IapStatsRxRate11Errors_Object = MibTableColumn
iapStatsRxRate11Errors = _IapStatsRxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 36),
    _IapStatsRxRate11Errors_Type()
)
iapStatsRxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate11Errors.setStatus("current")
_IapStatsRxRate11Retries_Type = Counter64
_IapStatsRxRate11Retries_Object = MibTableColumn
iapStatsRxRate11Retries = _IapStatsRxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 37),
    _IapStatsRxRate11Retries_Type()
)
iapStatsRxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate11Retries.setStatus("current")
_IapStatsRxRate6Bytes_Type = Counter64
_IapStatsRxRate6Bytes_Object = MibTableColumn
iapStatsRxRate6Bytes = _IapStatsRxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 38),
    _IapStatsRxRate6Bytes_Type()
)
iapStatsRxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate6Bytes.setStatus("current")
_IapStatsRxRate6Packets_Type = Counter64
_IapStatsRxRate6Packets_Object = MibTableColumn
iapStatsRxRate6Packets = _IapStatsRxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 39),
    _IapStatsRxRate6Packets_Type()
)
iapStatsRxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate6Packets.setStatus("current")
_IapStatsRxRate6Errors_Type = Counter64
_IapStatsRxRate6Errors_Object = MibTableColumn
iapStatsRxRate6Errors = _IapStatsRxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 40),
    _IapStatsRxRate6Errors_Type()
)
iapStatsRxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate6Errors.setStatus("current")
_IapStatsRxRate6Retries_Type = Counter64
_IapStatsRxRate6Retries_Object = MibTableColumn
iapStatsRxRate6Retries = _IapStatsRxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 41),
    _IapStatsRxRate6Retries_Type()
)
iapStatsRxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate6Retries.setStatus("current")
_IapStatsRxRate9Bytes_Type = Counter64
_IapStatsRxRate9Bytes_Object = MibTableColumn
iapStatsRxRate9Bytes = _IapStatsRxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 42),
    _IapStatsRxRate9Bytes_Type()
)
iapStatsRxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate9Bytes.setStatus("current")
_IapStatsRxRate9Packets_Type = Counter64
_IapStatsRxRate9Packets_Object = MibTableColumn
iapStatsRxRate9Packets = _IapStatsRxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 43),
    _IapStatsRxRate9Packets_Type()
)
iapStatsRxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate9Packets.setStatus("current")
_IapStatsRxRate9Errors_Type = Counter64
_IapStatsRxRate9Errors_Object = MibTableColumn
iapStatsRxRate9Errors = _IapStatsRxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 44),
    _IapStatsRxRate9Errors_Type()
)
iapStatsRxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate9Errors.setStatus("current")
_IapStatsRxRate9Retries_Type = Counter64
_IapStatsRxRate9Retries_Object = MibTableColumn
iapStatsRxRate9Retries = _IapStatsRxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 45),
    _IapStatsRxRate9Retries_Type()
)
iapStatsRxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate9Retries.setStatus("current")
_IapStatsRxRate12Bytes_Type = Counter64
_IapStatsRxRate12Bytes_Object = MibTableColumn
iapStatsRxRate12Bytes = _IapStatsRxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 46),
    _IapStatsRxRate12Bytes_Type()
)
iapStatsRxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate12Bytes.setStatus("current")
_IapStatsRxRate12Packets_Type = Counter64
_IapStatsRxRate12Packets_Object = MibTableColumn
iapStatsRxRate12Packets = _IapStatsRxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 47),
    _IapStatsRxRate12Packets_Type()
)
iapStatsRxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate12Packets.setStatus("current")
_IapStatsRxRate12Errors_Type = Counter64
_IapStatsRxRate12Errors_Object = MibTableColumn
iapStatsRxRate12Errors = _IapStatsRxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 48),
    _IapStatsRxRate12Errors_Type()
)
iapStatsRxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate12Errors.setStatus("current")
_IapStatsRxRate12Retries_Type = Counter64
_IapStatsRxRate12Retries_Object = MibTableColumn
iapStatsRxRate12Retries = _IapStatsRxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 49),
    _IapStatsRxRate12Retries_Type()
)
iapStatsRxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate12Retries.setStatus("current")
_IapStatsRxRate18Bytes_Type = Counter64
_IapStatsRxRate18Bytes_Object = MibTableColumn
iapStatsRxRate18Bytes = _IapStatsRxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 50),
    _IapStatsRxRate18Bytes_Type()
)
iapStatsRxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate18Bytes.setStatus("current")
_IapStatsRxRate18Packets_Type = Counter64
_IapStatsRxRate18Packets_Object = MibTableColumn
iapStatsRxRate18Packets = _IapStatsRxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 51),
    _IapStatsRxRate18Packets_Type()
)
iapStatsRxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate18Packets.setStatus("current")
_IapStatsRxRate18Errors_Type = Counter64
_IapStatsRxRate18Errors_Object = MibTableColumn
iapStatsRxRate18Errors = _IapStatsRxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 52),
    _IapStatsRxRate18Errors_Type()
)
iapStatsRxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate18Errors.setStatus("current")
_IapStatsRxRate18Retries_Type = Counter64
_IapStatsRxRate18Retries_Object = MibTableColumn
iapStatsRxRate18Retries = _IapStatsRxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 53),
    _IapStatsRxRate18Retries_Type()
)
iapStatsRxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate18Retries.setStatus("current")
_IapStatsRxRate24Bytes_Type = Counter64
_IapStatsRxRate24Bytes_Object = MibTableColumn
iapStatsRxRate24Bytes = _IapStatsRxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 54),
    _IapStatsRxRate24Bytes_Type()
)
iapStatsRxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate24Bytes.setStatus("current")
_IapStatsRxRate24Packets_Type = Counter64
_IapStatsRxRate24Packets_Object = MibTableColumn
iapStatsRxRate24Packets = _IapStatsRxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 55),
    _IapStatsRxRate24Packets_Type()
)
iapStatsRxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate24Packets.setStatus("current")
_IapStatsRxRate24Errors_Type = Counter64
_IapStatsRxRate24Errors_Object = MibTableColumn
iapStatsRxRate24Errors = _IapStatsRxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 56),
    _IapStatsRxRate24Errors_Type()
)
iapStatsRxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate24Errors.setStatus("current")
_IapStatsRxRate24Retries_Type = Counter64
_IapStatsRxRate24Retries_Object = MibTableColumn
iapStatsRxRate24Retries = _IapStatsRxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 57),
    _IapStatsRxRate24Retries_Type()
)
iapStatsRxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate24Retries.setStatus("current")
_IapStatsRxRate36Bytes_Type = Counter64
_IapStatsRxRate36Bytes_Object = MibTableColumn
iapStatsRxRate36Bytes = _IapStatsRxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 58),
    _IapStatsRxRate36Bytes_Type()
)
iapStatsRxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate36Bytes.setStatus("current")
_IapStatsRxRate36Packets_Type = Counter64
_IapStatsRxRate36Packets_Object = MibTableColumn
iapStatsRxRate36Packets = _IapStatsRxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 59),
    _IapStatsRxRate36Packets_Type()
)
iapStatsRxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate36Packets.setStatus("current")
_IapStatsRxRate36Errors_Type = Counter64
_IapStatsRxRate36Errors_Object = MibTableColumn
iapStatsRxRate36Errors = _IapStatsRxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 60),
    _IapStatsRxRate36Errors_Type()
)
iapStatsRxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate36Errors.setStatus("current")
_IapStatsRxRate36Retries_Type = Counter64
_IapStatsRxRate36Retries_Object = MibTableColumn
iapStatsRxRate36Retries = _IapStatsRxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 61),
    _IapStatsRxRate36Retries_Type()
)
iapStatsRxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate36Retries.setStatus("current")
_IapStatsRxRate48Bytes_Type = Counter64
_IapStatsRxRate48Bytes_Object = MibTableColumn
iapStatsRxRate48Bytes = _IapStatsRxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 62),
    _IapStatsRxRate48Bytes_Type()
)
iapStatsRxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate48Bytes.setStatus("current")
_IapStatsRxRate48Packets_Type = Counter64
_IapStatsRxRate48Packets_Object = MibTableColumn
iapStatsRxRate48Packets = _IapStatsRxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 63),
    _IapStatsRxRate48Packets_Type()
)
iapStatsRxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate48Packets.setStatus("current")
_IapStatsRxRate48Errors_Type = Counter64
_IapStatsRxRate48Errors_Object = MibTableColumn
iapStatsRxRate48Errors = _IapStatsRxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 64),
    _IapStatsRxRate48Errors_Type()
)
iapStatsRxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate48Errors.setStatus("current")
_IapStatsRxRate48Retries_Type = Counter64
_IapStatsRxRate48Retries_Object = MibTableColumn
iapStatsRxRate48Retries = _IapStatsRxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 65),
    _IapStatsRxRate48Retries_Type()
)
iapStatsRxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate48Retries.setStatus("current")
_IapStatsRxRate54Bytes_Type = Counter64
_IapStatsRxRate54Bytes_Object = MibTableColumn
iapStatsRxRate54Bytes = _IapStatsRxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 66),
    _IapStatsRxRate54Bytes_Type()
)
iapStatsRxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate54Bytes.setStatus("current")
_IapStatsRxRate54Packets_Type = Counter64
_IapStatsRxRate54Packets_Object = MibTableColumn
iapStatsRxRate54Packets = _IapStatsRxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 67),
    _IapStatsRxRate54Packets_Type()
)
iapStatsRxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate54Packets.setStatus("current")
_IapStatsRxRate54Errors_Type = Counter64
_IapStatsRxRate54Errors_Object = MibTableColumn
iapStatsRxRate54Errors = _IapStatsRxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 68),
    _IapStatsRxRate54Errors_Type()
)
iapStatsRxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate54Errors.setStatus("current")
_IapStatsRxRate54Retries_Type = Counter64
_IapStatsRxRate54Retries_Object = MibTableColumn
iapStatsRxRate54Retries = _IapStatsRxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 69),
    _IapStatsRxRate54Retries_Type()
)
iapStatsRxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsRxRate54Retries.setStatus("current")
_IapStatsTxBytes_Type = Counter64
_IapStatsTxBytes_Object = MibTableColumn
iapStatsTxBytes = _IapStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 70),
    _IapStatsTxBytes_Type()
)
iapStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxBytes.setStatus("current")
_IapStatsTxPackets_Type = Counter64
_IapStatsTxPackets_Object = MibTableColumn
iapStatsTxPackets = _IapStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 71),
    _IapStatsTxPackets_Type()
)
iapStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxPackets.setStatus("current")
_IapStatsTxUnicast_Type = Counter64
_IapStatsTxUnicast_Object = MibTableColumn
iapStatsTxUnicast = _IapStatsTxUnicast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 72),
    _IapStatsTxUnicast_Type()
)
iapStatsTxUnicast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxUnicast.setStatus("current")
_IapStatsTxMulticast_Type = Counter64
_IapStatsTxMulticast_Object = MibTableColumn
iapStatsTxMulticast = _IapStatsTxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 73),
    _IapStatsTxMulticast_Type()
)
iapStatsTxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxMulticast.setStatus("current")
_IapStatsTxBroadcast_Type = Counter64
_IapStatsTxBroadcast_Object = MibTableColumn
iapStatsTxBroadcast = _IapStatsTxBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 74),
    _IapStatsTxBroadcast_Type()
)
iapStatsTxBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxBroadcast.setStatus("current")
_IapStatsTxManagement_Type = Counter64
_IapStatsTxManagement_Object = MibTableColumn
iapStatsTxManagement = _IapStatsTxManagement_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 75),
    _IapStatsTxManagement_Type()
)
iapStatsTxManagement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxManagement.setStatus("current")
_IapStatsTxBeacons_Type = Counter64
_IapStatsTxBeacons_Object = MibTableColumn
iapStatsTxBeacons = _IapStatsTxBeacons_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 76),
    _IapStatsTxBeacons_Type()
)
iapStatsTxBeacons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxBeacons.setStatus("current")
_IapStatsTxRTS_Type = Counter64
_IapStatsTxRTS_Object = MibTableColumn
iapStatsTxRTS = _IapStatsTxRTS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 77),
    _IapStatsTxRTS_Type()
)
iapStatsTxRTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRTS.setStatus("current")
_IapStatsTxCTS_Type = Counter64
_IapStatsTxCTS_Object = MibTableColumn
iapStatsTxCTS = _IapStatsTxCTS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 78),
    _IapStatsTxCTS_Type()
)
iapStatsTxCTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxCTS.setStatus("current")
_IapStatsTxFragments_Type = Counter64
_IapStatsTxFragments_Object = MibTableColumn
iapStatsTxFragments = _IapStatsTxFragments_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 79),
    _IapStatsTxFragments_Type()
)
iapStatsTxFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxFragments.setStatus("current")
_IapStatsTxTotalErrors_Type = Counter64
_IapStatsTxTotalErrors_Object = MibTableColumn
iapStatsTxTotalErrors = _IapStatsTxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 80),
    _IapStatsTxTotalErrors_Type()
)
iapStatsTxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxTotalErrors.setStatus("current")
_IapStatsTxTotalRetries_Type = Counter64
_IapStatsTxTotalRetries_Object = MibTableColumn
iapStatsTxTotalRetries = _IapStatsTxTotalRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 81),
    _IapStatsTxTotalRetries_Type()
)
iapStatsTxTotalRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxTotalRetries.setStatus("current")
_IapStatsTxDropped_Type = Counter64
_IapStatsTxDropped_Object = MibTableColumn
iapStatsTxDropped = _IapStatsTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 82),
    _IapStatsTxDropped_Type()
)
iapStatsTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxDropped.setStatus("current")
_IapStatsTxUnassociated_Type = Counter64
_IapStatsTxUnassociated_Object = MibTableColumn
iapStatsTxUnassociated = _IapStatsTxUnassociated_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 83),
    _IapStatsTxUnassociated_Type()
)
iapStatsTxUnassociated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxUnassociated.setStatus("current")
_IapStatsTxACKFailures_Type = Counter64
_IapStatsTxACKFailures_Object = MibTableColumn
iapStatsTxACKFailures = _IapStatsTxACKFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 84),
    _IapStatsTxACKFailures_Type()
)
iapStatsTxACKFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxACKFailures.setStatus("current")
_IapStatsTxRTSFailures_Type = Counter64
_IapStatsTxRTSFailures_Object = MibTableColumn
iapStatsTxRTSFailures = _IapStatsTxRTSFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 85),
    _IapStatsTxRTSFailures_Type()
)
iapStatsTxRTSFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRTSFailures.setStatus("current")
_IapStatsTxRTSRetries_Type = Counter64
_IapStatsTxRTSRetries_Object = MibTableColumn
iapStatsTxRTSRetries = _IapStatsTxRTSRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 86),
    _IapStatsTxRTSRetries_Type()
)
iapStatsTxRTSRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRTSRetries.setStatus("current")
_IapStatsTxSingleRetries_Type = Counter64
_IapStatsTxSingleRetries_Object = MibTableColumn
iapStatsTxSingleRetries = _IapStatsTxSingleRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 87),
    _IapStatsTxSingleRetries_Type()
)
iapStatsTxSingleRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxSingleRetries.setStatus("current")
_IapStatsTxMultipleRetries_Type = Counter64
_IapStatsTxMultipleRetries_Object = MibTableColumn
iapStatsTxMultipleRetries = _IapStatsTxMultipleRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 88),
    _IapStatsTxMultipleRetries_Type()
)
iapStatsTxMultipleRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxMultipleRetries.setStatus("current")
_IapStatsTxRate1Bytes_Type = Counter64
_IapStatsTxRate1Bytes_Object = MibTableColumn
iapStatsTxRate1Bytes = _IapStatsTxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 89),
    _IapStatsTxRate1Bytes_Type()
)
iapStatsTxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate1Bytes.setStatus("current")
_IapStatsTxRate1Packets_Type = Counter64
_IapStatsTxRate1Packets_Object = MibTableColumn
iapStatsTxRate1Packets = _IapStatsTxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 90),
    _IapStatsTxRate1Packets_Type()
)
iapStatsTxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate1Packets.setStatus("current")
_IapStatsTxRate1Errors_Type = Counter64
_IapStatsTxRate1Errors_Object = MibTableColumn
iapStatsTxRate1Errors = _IapStatsTxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 91),
    _IapStatsTxRate1Errors_Type()
)
iapStatsTxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate1Errors.setStatus("current")
_IapStatsTxRate1Retries_Type = Counter64
_IapStatsTxRate1Retries_Object = MibTableColumn
iapStatsTxRate1Retries = _IapStatsTxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 92),
    _IapStatsTxRate1Retries_Type()
)
iapStatsTxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate1Retries.setStatus("current")
_IapStatsTxRate2Bytes_Type = Counter64
_IapStatsTxRate2Bytes_Object = MibTableColumn
iapStatsTxRate2Bytes = _IapStatsTxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 93),
    _IapStatsTxRate2Bytes_Type()
)
iapStatsTxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate2Bytes.setStatus("current")
_IapStatsTxRate2Packets_Type = Counter64
_IapStatsTxRate2Packets_Object = MibTableColumn
iapStatsTxRate2Packets = _IapStatsTxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 94),
    _IapStatsTxRate2Packets_Type()
)
iapStatsTxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate2Packets.setStatus("current")
_IapStatsTxRate2Errors_Type = Counter64
_IapStatsTxRate2Errors_Object = MibTableColumn
iapStatsTxRate2Errors = _IapStatsTxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 95),
    _IapStatsTxRate2Errors_Type()
)
iapStatsTxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate2Errors.setStatus("current")
_IapStatsTxRate2Retries_Type = Counter64
_IapStatsTxRate2Retries_Object = MibTableColumn
iapStatsTxRate2Retries = _IapStatsTxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 96),
    _IapStatsTxRate2Retries_Type()
)
iapStatsTxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate2Retries.setStatus("current")
_IapStatsTxRate5Bytes_Type = Counter64
_IapStatsTxRate5Bytes_Object = MibTableColumn
iapStatsTxRate5Bytes = _IapStatsTxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 97),
    _IapStatsTxRate5Bytes_Type()
)
iapStatsTxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate5Bytes.setStatus("current")
_IapStatsTxRate5Packets_Type = Counter64
_IapStatsTxRate5Packets_Object = MibTableColumn
iapStatsTxRate5Packets = _IapStatsTxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 98),
    _IapStatsTxRate5Packets_Type()
)
iapStatsTxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate5Packets.setStatus("current")
_IapStatsTxRate5Errors_Type = Counter64
_IapStatsTxRate5Errors_Object = MibTableColumn
iapStatsTxRate5Errors = _IapStatsTxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 99),
    _IapStatsTxRate5Errors_Type()
)
iapStatsTxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate5Errors.setStatus("current")
_IapStatsTxRate5Retries_Type = Counter64
_IapStatsTxRate5Retries_Object = MibTableColumn
iapStatsTxRate5Retries = _IapStatsTxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 100),
    _IapStatsTxRate5Retries_Type()
)
iapStatsTxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate5Retries.setStatus("current")
_IapStatsTxRate11Bytes_Type = Counter64
_IapStatsTxRate11Bytes_Object = MibTableColumn
iapStatsTxRate11Bytes = _IapStatsTxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 101),
    _IapStatsTxRate11Bytes_Type()
)
iapStatsTxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate11Bytes.setStatus("current")
_IapStatsTxRate11Packets_Type = Counter64
_IapStatsTxRate11Packets_Object = MibTableColumn
iapStatsTxRate11Packets = _IapStatsTxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 102),
    _IapStatsTxRate11Packets_Type()
)
iapStatsTxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate11Packets.setStatus("current")
_IapStatsTxRate11Errors_Type = Counter64
_IapStatsTxRate11Errors_Object = MibTableColumn
iapStatsTxRate11Errors = _IapStatsTxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 103),
    _IapStatsTxRate11Errors_Type()
)
iapStatsTxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate11Errors.setStatus("current")
_IapStatsTxRate11Retries_Type = Counter64
_IapStatsTxRate11Retries_Object = MibTableColumn
iapStatsTxRate11Retries = _IapStatsTxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 104),
    _IapStatsTxRate11Retries_Type()
)
iapStatsTxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate11Retries.setStatus("current")
_IapStatsTxRate6Bytes_Type = Counter64
_IapStatsTxRate6Bytes_Object = MibTableColumn
iapStatsTxRate6Bytes = _IapStatsTxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 105),
    _IapStatsTxRate6Bytes_Type()
)
iapStatsTxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate6Bytes.setStatus("current")
_IapStatsTxRate6Packets_Type = Counter64
_IapStatsTxRate6Packets_Object = MibTableColumn
iapStatsTxRate6Packets = _IapStatsTxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 106),
    _IapStatsTxRate6Packets_Type()
)
iapStatsTxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate6Packets.setStatus("current")
_IapStatsTxRate6Errors_Type = Counter64
_IapStatsTxRate6Errors_Object = MibTableColumn
iapStatsTxRate6Errors = _IapStatsTxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 107),
    _IapStatsTxRate6Errors_Type()
)
iapStatsTxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate6Errors.setStatus("current")
_IapStatsTxRate6Retries_Type = Counter64
_IapStatsTxRate6Retries_Object = MibTableColumn
iapStatsTxRate6Retries = _IapStatsTxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 108),
    _IapStatsTxRate6Retries_Type()
)
iapStatsTxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate6Retries.setStatus("current")
_IapStatsTxRate9Bytes_Type = Counter64
_IapStatsTxRate9Bytes_Object = MibTableColumn
iapStatsTxRate9Bytes = _IapStatsTxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 109),
    _IapStatsTxRate9Bytes_Type()
)
iapStatsTxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate9Bytes.setStatus("current")
_IapStatsTxRate9Packets_Type = Counter64
_IapStatsTxRate9Packets_Object = MibTableColumn
iapStatsTxRate9Packets = _IapStatsTxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 110),
    _IapStatsTxRate9Packets_Type()
)
iapStatsTxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate9Packets.setStatus("current")
_IapStatsTxRate9Errors_Type = Counter64
_IapStatsTxRate9Errors_Object = MibTableColumn
iapStatsTxRate9Errors = _IapStatsTxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 111),
    _IapStatsTxRate9Errors_Type()
)
iapStatsTxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate9Errors.setStatus("current")
_IapStatsTxRate9Retries_Type = Counter64
_IapStatsTxRate9Retries_Object = MibTableColumn
iapStatsTxRate9Retries = _IapStatsTxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 112),
    _IapStatsTxRate9Retries_Type()
)
iapStatsTxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate9Retries.setStatus("current")
_IapStatsTxRate12Bytes_Type = Counter64
_IapStatsTxRate12Bytes_Object = MibTableColumn
iapStatsTxRate12Bytes = _IapStatsTxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 113),
    _IapStatsTxRate12Bytes_Type()
)
iapStatsTxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate12Bytes.setStatus("current")
_IapStatsTxRate12Packets_Type = Counter64
_IapStatsTxRate12Packets_Object = MibTableColumn
iapStatsTxRate12Packets = _IapStatsTxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 114),
    _IapStatsTxRate12Packets_Type()
)
iapStatsTxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate12Packets.setStatus("current")
_IapStatsTxRate12Errors_Type = Counter64
_IapStatsTxRate12Errors_Object = MibTableColumn
iapStatsTxRate12Errors = _IapStatsTxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 115),
    _IapStatsTxRate12Errors_Type()
)
iapStatsTxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate12Errors.setStatus("current")
_IapStatsTxRate12Retries_Type = Counter64
_IapStatsTxRate12Retries_Object = MibTableColumn
iapStatsTxRate12Retries = _IapStatsTxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 116),
    _IapStatsTxRate12Retries_Type()
)
iapStatsTxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate12Retries.setStatus("current")
_IapStatsTxRate18Bytes_Type = Counter64
_IapStatsTxRate18Bytes_Object = MibTableColumn
iapStatsTxRate18Bytes = _IapStatsTxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 117),
    _IapStatsTxRate18Bytes_Type()
)
iapStatsTxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate18Bytes.setStatus("current")
_IapStatsTxRate18Packets_Type = Counter64
_IapStatsTxRate18Packets_Object = MibTableColumn
iapStatsTxRate18Packets = _IapStatsTxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 118),
    _IapStatsTxRate18Packets_Type()
)
iapStatsTxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate18Packets.setStatus("current")
_IapStatsTxRate18Errors_Type = Counter64
_IapStatsTxRate18Errors_Object = MibTableColumn
iapStatsTxRate18Errors = _IapStatsTxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 119),
    _IapStatsTxRate18Errors_Type()
)
iapStatsTxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate18Errors.setStatus("current")
_IapStatsTxRate18Retries_Type = Counter64
_IapStatsTxRate18Retries_Object = MibTableColumn
iapStatsTxRate18Retries = _IapStatsTxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 120),
    _IapStatsTxRate18Retries_Type()
)
iapStatsTxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate18Retries.setStatus("current")
_IapStatsTxRate24Bytes_Type = Counter64
_IapStatsTxRate24Bytes_Object = MibTableColumn
iapStatsTxRate24Bytes = _IapStatsTxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 121),
    _IapStatsTxRate24Bytes_Type()
)
iapStatsTxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate24Bytes.setStatus("current")
_IapStatsTxRate24Packets_Type = Counter64
_IapStatsTxRate24Packets_Object = MibTableColumn
iapStatsTxRate24Packets = _IapStatsTxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 122),
    _IapStatsTxRate24Packets_Type()
)
iapStatsTxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate24Packets.setStatus("current")
_IapStatsTxRate24Errors_Type = Counter64
_IapStatsTxRate24Errors_Object = MibTableColumn
iapStatsTxRate24Errors = _IapStatsTxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 123),
    _IapStatsTxRate24Errors_Type()
)
iapStatsTxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate24Errors.setStatus("current")
_IapStatsTxRate24Retries_Type = Counter64
_IapStatsTxRate24Retries_Object = MibTableColumn
iapStatsTxRate24Retries = _IapStatsTxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 124),
    _IapStatsTxRate24Retries_Type()
)
iapStatsTxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate24Retries.setStatus("current")
_IapStatsTxRate36Bytes_Type = Counter64
_IapStatsTxRate36Bytes_Object = MibTableColumn
iapStatsTxRate36Bytes = _IapStatsTxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 125),
    _IapStatsTxRate36Bytes_Type()
)
iapStatsTxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate36Bytes.setStatus("current")
_IapStatsTxRate36Packets_Type = Counter64
_IapStatsTxRate36Packets_Object = MibTableColumn
iapStatsTxRate36Packets = _IapStatsTxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 126),
    _IapStatsTxRate36Packets_Type()
)
iapStatsTxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate36Packets.setStatus("current")
_IapStatsTxRate36Errors_Type = Counter64
_IapStatsTxRate36Errors_Object = MibTableColumn
iapStatsTxRate36Errors = _IapStatsTxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 127),
    _IapStatsTxRate36Errors_Type()
)
iapStatsTxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate36Errors.setStatus("current")
_IapStatsTxRate36Retries_Type = Counter64
_IapStatsTxRate36Retries_Object = MibTableColumn
iapStatsTxRate36Retries = _IapStatsTxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 128),
    _IapStatsTxRate36Retries_Type()
)
iapStatsTxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate36Retries.setStatus("current")
_IapStatsTxRate48Bytes_Type = Counter64
_IapStatsTxRate48Bytes_Object = MibTableColumn
iapStatsTxRate48Bytes = _IapStatsTxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 129),
    _IapStatsTxRate48Bytes_Type()
)
iapStatsTxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate48Bytes.setStatus("current")
_IapStatsTxRate48Packets_Type = Counter64
_IapStatsTxRate48Packets_Object = MibTableColumn
iapStatsTxRate48Packets = _IapStatsTxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 130),
    _IapStatsTxRate48Packets_Type()
)
iapStatsTxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate48Packets.setStatus("current")
_IapStatsTxRate48Errors_Type = Counter64
_IapStatsTxRate48Errors_Object = MibTableColumn
iapStatsTxRate48Errors = _IapStatsTxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 131),
    _IapStatsTxRate48Errors_Type()
)
iapStatsTxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate48Errors.setStatus("current")
_IapStatsTxRate48Retries_Type = Counter64
_IapStatsTxRate48Retries_Object = MibTableColumn
iapStatsTxRate48Retries = _IapStatsTxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 132),
    _IapStatsTxRate48Retries_Type()
)
iapStatsTxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate48Retries.setStatus("current")
_IapStatsTxRate54Bytes_Type = Counter64
_IapStatsTxRate54Bytes_Object = MibTableColumn
iapStatsTxRate54Bytes = _IapStatsTxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 133),
    _IapStatsTxRate54Bytes_Type()
)
iapStatsTxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate54Bytes.setStatus("current")
_IapStatsTxRate54Packets_Type = Counter64
_IapStatsTxRate54Packets_Object = MibTableColumn
iapStatsTxRate54Packets = _IapStatsTxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 134),
    _IapStatsTxRate54Packets_Type()
)
iapStatsTxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate54Packets.setStatus("current")
_IapStatsTxRate54Errors_Type = Counter64
_IapStatsTxRate54Errors_Object = MibTableColumn
iapStatsTxRate54Errors = _IapStatsTxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 135),
    _IapStatsTxRate54Errors_Type()
)
iapStatsTxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate54Errors.setStatus("current")
_IapStatsTxRate54Retries_Type = Counter64
_IapStatsTxRate54Retries_Object = MibTableColumn
iapStatsTxRate54Retries = _IapStatsTxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 136),
    _IapStatsTxRate54Retries_Type()
)
iapStatsTxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxRate54Retries.setStatus("current")
_IapStatsTxUtilization_Type = Counter64
_IapStatsTxUtilization_Object = MibTableColumn
iapStatsTxUtilization = _IapStatsTxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 137),
    _IapStatsTxUtilization_Type()
)
iapStatsTxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTxUtilization.setStatus("current")
_IapStatsNoiseTotal_Type = Counter64
_IapStatsNoiseTotal_Object = MibTableColumn
iapStatsNoiseTotal = _IapStatsNoiseTotal_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 138),
    _IapStatsNoiseTotal_Type()
)
iapStatsNoiseTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsNoiseTotal.setStatus("current")
_IapStatsNoiseDenominator_Type = Counter64
_IapStatsNoiseDenominator_Object = MibTableColumn
iapStatsNoiseDenominator = _IapStatsNoiseDenominator_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 139),
    _IapStatsNoiseDenominator_Type()
)
iapStatsNoiseDenominator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsNoiseDenominator.setStatus("current")
_IapStatsTimePeriod_Type = Counter32
_IapStatsTimePeriod_Object = MibTableColumn
iapStatsTimePeriod = _IapStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 140),
    _IapStatsTimePeriod_Type()
)
iapStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapStatsTimePeriod.setStatus("current")
_StationStatsTable_Object = MibTable
stationStatsTable = _StationStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3)
)
if mibBuilder.loadTexts:
    stationStatsTable.setStatus("current")
_StationStatsEntry_Object = MibTableRow
stationStatsEntry = _StationStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1)
)
stationStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationStatsIndex"),
)
if mibBuilder.loadTexts:
    stationStatsEntry.setStatus("current")
_StationStatsIndex_Type = Integer32
_StationStatsIndex_Object = MibTableColumn
stationStatsIndex = _StationStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 1),
    _StationStatsIndex_Type()
)
stationStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stationStatsIndex.setStatus("current")
_StationStatsMACAddress_Type = DisplayString
_StationStatsMACAddress_Object = MibTableColumn
stationStatsMACAddress = _StationStatsMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 2),
    _StationStatsMACAddress_Type()
)
stationStatsMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsMACAddress.setStatus("current")
_StationStatsRxBytes_Type = Counter64
_StationStatsRxBytes_Object = MibTableColumn
stationStatsRxBytes = _StationStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 3),
    _StationStatsRxBytes_Type()
)
stationStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxBytes.setStatus("current")
_StationStatsRxPackets_Type = Counter64
_StationStatsRxPackets_Object = MibTableColumn
stationStatsRxPackets = _StationStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 4),
    _StationStatsRxPackets_Type()
)
stationStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxPackets.setStatus("current")
_StationStatsRxErrors_Type = Counter64
_StationStatsRxErrors_Object = MibTableColumn
stationStatsRxErrors = _StationStatsRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 5),
    _StationStatsRxErrors_Type()
)
stationStatsRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxErrors.setStatus("current")
_StationStatsRxRetries_Type = Counter64
_StationStatsRxRetries_Object = MibTableColumn
stationStatsRxRetries = _StationStatsRxRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 6),
    _StationStatsRxRetries_Type()
)
stationStatsRxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRetries.setStatus("current")
_StationStatsRxRate1Bytes_Type = Counter64
_StationStatsRxRate1Bytes_Object = MibTableColumn
stationStatsRxRate1Bytes = _StationStatsRxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 7),
    _StationStatsRxRate1Bytes_Type()
)
stationStatsRxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate1Bytes.setStatus("current")
_StationStatsRxRate1Packets_Type = Counter64
_StationStatsRxRate1Packets_Object = MibTableColumn
stationStatsRxRate1Packets = _StationStatsRxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 8),
    _StationStatsRxRate1Packets_Type()
)
stationStatsRxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate1Packets.setStatus("current")
_StationStatsRxRate1Errors_Type = Counter64
_StationStatsRxRate1Errors_Object = MibTableColumn
stationStatsRxRate1Errors = _StationStatsRxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 9),
    _StationStatsRxRate1Errors_Type()
)
stationStatsRxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate1Errors.setStatus("current")
_StationStatsRxRate1Retries_Type = Counter64
_StationStatsRxRate1Retries_Object = MibTableColumn
stationStatsRxRate1Retries = _StationStatsRxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 10),
    _StationStatsRxRate1Retries_Type()
)
stationStatsRxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate1Retries.setStatus("current")
_StationStatsRxRate2Bytes_Type = Counter64
_StationStatsRxRate2Bytes_Object = MibTableColumn
stationStatsRxRate2Bytes = _StationStatsRxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 11),
    _StationStatsRxRate2Bytes_Type()
)
stationStatsRxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate2Bytes.setStatus("current")
_StationStatsRxRate2Packets_Type = Counter64
_StationStatsRxRate2Packets_Object = MibTableColumn
stationStatsRxRate2Packets = _StationStatsRxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 12),
    _StationStatsRxRate2Packets_Type()
)
stationStatsRxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate2Packets.setStatus("current")
_StationStatsRxRate2Errors_Type = Counter64
_StationStatsRxRate2Errors_Object = MibTableColumn
stationStatsRxRate2Errors = _StationStatsRxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 13),
    _StationStatsRxRate2Errors_Type()
)
stationStatsRxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate2Errors.setStatus("current")
_StationStatsRxRate2Retries_Type = Counter64
_StationStatsRxRate2Retries_Object = MibTableColumn
stationStatsRxRate2Retries = _StationStatsRxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 14),
    _StationStatsRxRate2Retries_Type()
)
stationStatsRxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate2Retries.setStatus("current")
_StationStatsRxRate5Bytes_Type = Counter64
_StationStatsRxRate5Bytes_Object = MibTableColumn
stationStatsRxRate5Bytes = _StationStatsRxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 15),
    _StationStatsRxRate5Bytes_Type()
)
stationStatsRxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate5Bytes.setStatus("current")
_StationStatsRxRate5Packets_Type = Counter64
_StationStatsRxRate5Packets_Object = MibTableColumn
stationStatsRxRate5Packets = _StationStatsRxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 16),
    _StationStatsRxRate5Packets_Type()
)
stationStatsRxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate5Packets.setStatus("current")
_StationStatsRxRate5Errors_Type = Counter64
_StationStatsRxRate5Errors_Object = MibTableColumn
stationStatsRxRate5Errors = _StationStatsRxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 17),
    _StationStatsRxRate5Errors_Type()
)
stationStatsRxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate5Errors.setStatus("current")
_StationStatsRxRate5Retries_Type = Counter64
_StationStatsRxRate5Retries_Object = MibTableColumn
stationStatsRxRate5Retries = _StationStatsRxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 18),
    _StationStatsRxRate5Retries_Type()
)
stationStatsRxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate5Retries.setStatus("current")
_StationStatsRxRate11Bytes_Type = Counter64
_StationStatsRxRate11Bytes_Object = MibTableColumn
stationStatsRxRate11Bytes = _StationStatsRxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 19),
    _StationStatsRxRate11Bytes_Type()
)
stationStatsRxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate11Bytes.setStatus("current")
_StationStatsRxRate11Packets_Type = Counter64
_StationStatsRxRate11Packets_Object = MibTableColumn
stationStatsRxRate11Packets = _StationStatsRxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 20),
    _StationStatsRxRate11Packets_Type()
)
stationStatsRxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate11Packets.setStatus("current")
_StationStatsRxRate11Errors_Type = Counter64
_StationStatsRxRate11Errors_Object = MibTableColumn
stationStatsRxRate11Errors = _StationStatsRxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 21),
    _StationStatsRxRate11Errors_Type()
)
stationStatsRxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate11Errors.setStatus("current")
_StationStatsRxRate11Retries_Type = Counter64
_StationStatsRxRate11Retries_Object = MibTableColumn
stationStatsRxRate11Retries = _StationStatsRxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 22),
    _StationStatsRxRate11Retries_Type()
)
stationStatsRxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate11Retries.setStatus("current")
_StationStatsRxRate6Bytes_Type = Counter64
_StationStatsRxRate6Bytes_Object = MibTableColumn
stationStatsRxRate6Bytes = _StationStatsRxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 23),
    _StationStatsRxRate6Bytes_Type()
)
stationStatsRxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate6Bytes.setStatus("current")
_StationStatsRxRate6Packets_Type = Counter64
_StationStatsRxRate6Packets_Object = MibTableColumn
stationStatsRxRate6Packets = _StationStatsRxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 24),
    _StationStatsRxRate6Packets_Type()
)
stationStatsRxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate6Packets.setStatus("current")
_StationStatsRxRate6Errors_Type = Counter64
_StationStatsRxRate6Errors_Object = MibTableColumn
stationStatsRxRate6Errors = _StationStatsRxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 25),
    _StationStatsRxRate6Errors_Type()
)
stationStatsRxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate6Errors.setStatus("current")
_StationStatsRxRate6Retries_Type = Counter64
_StationStatsRxRate6Retries_Object = MibTableColumn
stationStatsRxRate6Retries = _StationStatsRxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 26),
    _StationStatsRxRate6Retries_Type()
)
stationStatsRxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate6Retries.setStatus("current")
_StationStatsRxRate9Bytes_Type = Counter64
_StationStatsRxRate9Bytes_Object = MibTableColumn
stationStatsRxRate9Bytes = _StationStatsRxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 27),
    _StationStatsRxRate9Bytes_Type()
)
stationStatsRxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate9Bytes.setStatus("current")
_StationStatsRxRate9Packets_Type = Counter64
_StationStatsRxRate9Packets_Object = MibTableColumn
stationStatsRxRate9Packets = _StationStatsRxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 28),
    _StationStatsRxRate9Packets_Type()
)
stationStatsRxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate9Packets.setStatus("current")
_StationStatsRxRate9Errors_Type = Counter64
_StationStatsRxRate9Errors_Object = MibTableColumn
stationStatsRxRate9Errors = _StationStatsRxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 29),
    _StationStatsRxRate9Errors_Type()
)
stationStatsRxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate9Errors.setStatus("current")
_StationStatsRxRate9Retries_Type = Counter64
_StationStatsRxRate9Retries_Object = MibTableColumn
stationStatsRxRate9Retries = _StationStatsRxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 30),
    _StationStatsRxRate9Retries_Type()
)
stationStatsRxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate9Retries.setStatus("current")
_StationStatsRxRate12Bytes_Type = Counter64
_StationStatsRxRate12Bytes_Object = MibTableColumn
stationStatsRxRate12Bytes = _StationStatsRxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 31),
    _StationStatsRxRate12Bytes_Type()
)
stationStatsRxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate12Bytes.setStatus("current")
_StationStatsRxRate12Packets_Type = Counter64
_StationStatsRxRate12Packets_Object = MibTableColumn
stationStatsRxRate12Packets = _StationStatsRxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 32),
    _StationStatsRxRate12Packets_Type()
)
stationStatsRxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate12Packets.setStatus("current")
_StationStatsRxRate12Errors_Type = Counter64
_StationStatsRxRate12Errors_Object = MibTableColumn
stationStatsRxRate12Errors = _StationStatsRxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 33),
    _StationStatsRxRate12Errors_Type()
)
stationStatsRxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate12Errors.setStatus("current")
_StationStatsRxRate12Retries_Type = Counter64
_StationStatsRxRate12Retries_Object = MibTableColumn
stationStatsRxRate12Retries = _StationStatsRxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 34),
    _StationStatsRxRate12Retries_Type()
)
stationStatsRxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate12Retries.setStatus("current")
_StationStatsRxRate18Bytes_Type = Counter64
_StationStatsRxRate18Bytes_Object = MibTableColumn
stationStatsRxRate18Bytes = _StationStatsRxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 35),
    _StationStatsRxRate18Bytes_Type()
)
stationStatsRxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate18Bytes.setStatus("current")
_StationStatsRxRate18Packets_Type = Counter64
_StationStatsRxRate18Packets_Object = MibTableColumn
stationStatsRxRate18Packets = _StationStatsRxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 36),
    _StationStatsRxRate18Packets_Type()
)
stationStatsRxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate18Packets.setStatus("current")
_StationStatsRxRate18Errors_Type = Counter64
_StationStatsRxRate18Errors_Object = MibTableColumn
stationStatsRxRate18Errors = _StationStatsRxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 37),
    _StationStatsRxRate18Errors_Type()
)
stationStatsRxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate18Errors.setStatus("current")
_StationStatsRxRate18Retries_Type = Counter64
_StationStatsRxRate18Retries_Object = MibTableColumn
stationStatsRxRate18Retries = _StationStatsRxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 38),
    _StationStatsRxRate18Retries_Type()
)
stationStatsRxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate18Retries.setStatus("current")
_StationStatsRxRate24Bytes_Type = Counter64
_StationStatsRxRate24Bytes_Object = MibTableColumn
stationStatsRxRate24Bytes = _StationStatsRxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 39),
    _StationStatsRxRate24Bytes_Type()
)
stationStatsRxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate24Bytes.setStatus("current")
_StationStatsRxRate24Packets_Type = Counter64
_StationStatsRxRate24Packets_Object = MibTableColumn
stationStatsRxRate24Packets = _StationStatsRxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 40),
    _StationStatsRxRate24Packets_Type()
)
stationStatsRxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate24Packets.setStatus("current")
_StationStatsRxRate24Errors_Type = Counter64
_StationStatsRxRate24Errors_Object = MibTableColumn
stationStatsRxRate24Errors = _StationStatsRxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 41),
    _StationStatsRxRate24Errors_Type()
)
stationStatsRxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate24Errors.setStatus("current")
_StationStatsRxRate24Retries_Type = Counter64
_StationStatsRxRate24Retries_Object = MibTableColumn
stationStatsRxRate24Retries = _StationStatsRxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 42),
    _StationStatsRxRate24Retries_Type()
)
stationStatsRxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate24Retries.setStatus("current")
_StationStatsRxRate36Bytes_Type = Counter64
_StationStatsRxRate36Bytes_Object = MibTableColumn
stationStatsRxRate36Bytes = _StationStatsRxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 43),
    _StationStatsRxRate36Bytes_Type()
)
stationStatsRxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate36Bytes.setStatus("current")
_StationStatsRxRate36Packets_Type = Counter64
_StationStatsRxRate36Packets_Object = MibTableColumn
stationStatsRxRate36Packets = _StationStatsRxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 44),
    _StationStatsRxRate36Packets_Type()
)
stationStatsRxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate36Packets.setStatus("current")
_StationStatsRxRate36Errors_Type = Counter64
_StationStatsRxRate36Errors_Object = MibTableColumn
stationStatsRxRate36Errors = _StationStatsRxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 45),
    _StationStatsRxRate36Errors_Type()
)
stationStatsRxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate36Errors.setStatus("current")
_StationStatsRxRate36Retries_Type = Counter64
_StationStatsRxRate36Retries_Object = MibTableColumn
stationStatsRxRate36Retries = _StationStatsRxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 46),
    _StationStatsRxRate36Retries_Type()
)
stationStatsRxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate36Retries.setStatus("current")
_StationStatsRxRate48Bytes_Type = Counter64
_StationStatsRxRate48Bytes_Object = MibTableColumn
stationStatsRxRate48Bytes = _StationStatsRxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 47),
    _StationStatsRxRate48Bytes_Type()
)
stationStatsRxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate48Bytes.setStatus("current")
_StationStatsRxRate48Packets_Type = Counter64
_StationStatsRxRate48Packets_Object = MibTableColumn
stationStatsRxRate48Packets = _StationStatsRxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 48),
    _StationStatsRxRate48Packets_Type()
)
stationStatsRxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate48Packets.setStatus("current")
_StationStatsRxRate48Errors_Type = Counter64
_StationStatsRxRate48Errors_Object = MibTableColumn
stationStatsRxRate48Errors = _StationStatsRxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 49),
    _StationStatsRxRate48Errors_Type()
)
stationStatsRxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate48Errors.setStatus("current")
_StationStatsRxRate48Retries_Type = Counter64
_StationStatsRxRate48Retries_Object = MibTableColumn
stationStatsRxRate48Retries = _StationStatsRxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 50),
    _StationStatsRxRate48Retries_Type()
)
stationStatsRxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate48Retries.setStatus("current")
_StationStatsRxRate54Bytes_Type = Counter64
_StationStatsRxRate54Bytes_Object = MibTableColumn
stationStatsRxRate54Bytes = _StationStatsRxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 51),
    _StationStatsRxRate54Bytes_Type()
)
stationStatsRxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate54Bytes.setStatus("current")
_StationStatsRxRate54Packets_Type = Counter64
_StationStatsRxRate54Packets_Object = MibTableColumn
stationStatsRxRate54Packets = _StationStatsRxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 52),
    _StationStatsRxRate54Packets_Type()
)
stationStatsRxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate54Packets.setStatus("current")
_StationStatsRxRate54Errors_Type = Counter64
_StationStatsRxRate54Errors_Object = MibTableColumn
stationStatsRxRate54Errors = _StationStatsRxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 53),
    _StationStatsRxRate54Errors_Type()
)
stationStatsRxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate54Errors.setStatus("current")
_StationStatsRxRate54Retries_Type = Counter64
_StationStatsRxRate54Retries_Object = MibTableColumn
stationStatsRxRate54Retries = _StationStatsRxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 54),
    _StationStatsRxRate54Retries_Type()
)
stationStatsRxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsRxRate54Retries.setStatus("current")
_StationStatsTxBytes_Type = Counter64
_StationStatsTxBytes_Object = MibTableColumn
stationStatsTxBytes = _StationStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 55),
    _StationStatsTxBytes_Type()
)
stationStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxBytes.setStatus("current")
_StationStatsTxPackets_Type = Counter64
_StationStatsTxPackets_Object = MibTableColumn
stationStatsTxPackets = _StationStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 56),
    _StationStatsTxPackets_Type()
)
stationStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxPackets.setStatus("current")
_StationStatsTxErrors_Type = Counter64
_StationStatsTxErrors_Object = MibTableColumn
stationStatsTxErrors = _StationStatsTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 57),
    _StationStatsTxErrors_Type()
)
stationStatsTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxErrors.setStatus("current")
_StationStatsTxRetries_Type = Counter64
_StationStatsTxRetries_Object = MibTableColumn
stationStatsTxRetries = _StationStatsTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 58),
    _StationStatsTxRetries_Type()
)
stationStatsTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRetries.setStatus("current")
_StationStatsTxRate1Bytes_Type = Counter64
_StationStatsTxRate1Bytes_Object = MibTableColumn
stationStatsTxRate1Bytes = _StationStatsTxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 59),
    _StationStatsTxRate1Bytes_Type()
)
stationStatsTxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate1Bytes.setStatus("current")
_StationStatsTxRate1Packets_Type = Counter64
_StationStatsTxRate1Packets_Object = MibTableColumn
stationStatsTxRate1Packets = _StationStatsTxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 60),
    _StationStatsTxRate1Packets_Type()
)
stationStatsTxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate1Packets.setStatus("current")
_StationStatsTxRate1Errors_Type = Counter64
_StationStatsTxRate1Errors_Object = MibTableColumn
stationStatsTxRate1Errors = _StationStatsTxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 61),
    _StationStatsTxRate1Errors_Type()
)
stationStatsTxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate1Errors.setStatus("current")
_StationStatsTxRate1Retries_Type = Counter64
_StationStatsTxRate1Retries_Object = MibTableColumn
stationStatsTxRate1Retries = _StationStatsTxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 62),
    _StationStatsTxRate1Retries_Type()
)
stationStatsTxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate1Retries.setStatus("current")
_StationStatsTxRate2Bytes_Type = Counter64
_StationStatsTxRate2Bytes_Object = MibTableColumn
stationStatsTxRate2Bytes = _StationStatsTxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 63),
    _StationStatsTxRate2Bytes_Type()
)
stationStatsTxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate2Bytes.setStatus("current")
_StationStatsTxRate2Packets_Type = Counter64
_StationStatsTxRate2Packets_Object = MibTableColumn
stationStatsTxRate2Packets = _StationStatsTxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 64),
    _StationStatsTxRate2Packets_Type()
)
stationStatsTxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate2Packets.setStatus("current")
_StationStatsTxRate2Errors_Type = Counter64
_StationStatsTxRate2Errors_Object = MibTableColumn
stationStatsTxRate2Errors = _StationStatsTxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 65),
    _StationStatsTxRate2Errors_Type()
)
stationStatsTxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate2Errors.setStatus("current")
_StationStatsTxRate2Retries_Type = Counter64
_StationStatsTxRate2Retries_Object = MibTableColumn
stationStatsTxRate2Retries = _StationStatsTxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 66),
    _StationStatsTxRate2Retries_Type()
)
stationStatsTxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate2Retries.setStatus("current")
_StationStatsTxRate5Bytes_Type = Counter64
_StationStatsTxRate5Bytes_Object = MibTableColumn
stationStatsTxRate5Bytes = _StationStatsTxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 67),
    _StationStatsTxRate5Bytes_Type()
)
stationStatsTxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate5Bytes.setStatus("current")
_StationStatsTxRate5Packets_Type = Counter64
_StationStatsTxRate5Packets_Object = MibTableColumn
stationStatsTxRate5Packets = _StationStatsTxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 68),
    _StationStatsTxRate5Packets_Type()
)
stationStatsTxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate5Packets.setStatus("current")
_StationStatsTxRate5Errors_Type = Counter64
_StationStatsTxRate5Errors_Object = MibTableColumn
stationStatsTxRate5Errors = _StationStatsTxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 69),
    _StationStatsTxRate5Errors_Type()
)
stationStatsTxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate5Errors.setStatus("current")
_StationStatsTxRate5Retries_Type = Counter64
_StationStatsTxRate5Retries_Object = MibTableColumn
stationStatsTxRate5Retries = _StationStatsTxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 70),
    _StationStatsTxRate5Retries_Type()
)
stationStatsTxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate5Retries.setStatus("current")
_StationStatsTxRate11Bytes_Type = Counter64
_StationStatsTxRate11Bytes_Object = MibTableColumn
stationStatsTxRate11Bytes = _StationStatsTxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 71),
    _StationStatsTxRate11Bytes_Type()
)
stationStatsTxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate11Bytes.setStatus("current")
_StationStatsTxRate11Packets_Type = Counter64
_StationStatsTxRate11Packets_Object = MibTableColumn
stationStatsTxRate11Packets = _StationStatsTxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 72),
    _StationStatsTxRate11Packets_Type()
)
stationStatsTxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate11Packets.setStatus("current")
_StationStatsTxRate11Errors_Type = Counter64
_StationStatsTxRate11Errors_Object = MibTableColumn
stationStatsTxRate11Errors = _StationStatsTxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 73),
    _StationStatsTxRate11Errors_Type()
)
stationStatsTxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate11Errors.setStatus("current")
_StationStatsTxRate11Retries_Type = Counter64
_StationStatsTxRate11Retries_Object = MibTableColumn
stationStatsTxRate11Retries = _StationStatsTxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 74),
    _StationStatsTxRate11Retries_Type()
)
stationStatsTxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate11Retries.setStatus("current")
_StationStatsTxRate6Bytes_Type = Counter64
_StationStatsTxRate6Bytes_Object = MibTableColumn
stationStatsTxRate6Bytes = _StationStatsTxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 75),
    _StationStatsTxRate6Bytes_Type()
)
stationStatsTxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate6Bytes.setStatus("current")
_StationStatsTxRate6Packets_Type = Counter64
_StationStatsTxRate6Packets_Object = MibTableColumn
stationStatsTxRate6Packets = _StationStatsTxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 76),
    _StationStatsTxRate6Packets_Type()
)
stationStatsTxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate6Packets.setStatus("current")
_StationStatsTxRate6Errors_Type = Counter64
_StationStatsTxRate6Errors_Object = MibTableColumn
stationStatsTxRate6Errors = _StationStatsTxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 77),
    _StationStatsTxRate6Errors_Type()
)
stationStatsTxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate6Errors.setStatus("current")
_StationStatsTxRate6Retries_Type = Counter64
_StationStatsTxRate6Retries_Object = MibTableColumn
stationStatsTxRate6Retries = _StationStatsTxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 78),
    _StationStatsTxRate6Retries_Type()
)
stationStatsTxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate6Retries.setStatus("current")
_StationStatsTxRate9Bytes_Type = Counter64
_StationStatsTxRate9Bytes_Object = MibTableColumn
stationStatsTxRate9Bytes = _StationStatsTxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 79),
    _StationStatsTxRate9Bytes_Type()
)
stationStatsTxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate9Bytes.setStatus("current")
_StationStatsTxRate9Packets_Type = Counter64
_StationStatsTxRate9Packets_Object = MibTableColumn
stationStatsTxRate9Packets = _StationStatsTxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 80),
    _StationStatsTxRate9Packets_Type()
)
stationStatsTxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate9Packets.setStatus("current")
_StationStatsTxRate9Errors_Type = Counter64
_StationStatsTxRate9Errors_Object = MibTableColumn
stationStatsTxRate9Errors = _StationStatsTxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 81),
    _StationStatsTxRate9Errors_Type()
)
stationStatsTxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate9Errors.setStatus("current")
_StationStatsTxRate9Retries_Type = Counter64
_StationStatsTxRate9Retries_Object = MibTableColumn
stationStatsTxRate9Retries = _StationStatsTxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 82),
    _StationStatsTxRate9Retries_Type()
)
stationStatsTxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate9Retries.setStatus("current")
_StationStatsTxRate12Bytes_Type = Counter64
_StationStatsTxRate12Bytes_Object = MibTableColumn
stationStatsTxRate12Bytes = _StationStatsTxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 83),
    _StationStatsTxRate12Bytes_Type()
)
stationStatsTxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate12Bytes.setStatus("current")
_StationStatsTxRate12Packets_Type = Counter64
_StationStatsTxRate12Packets_Object = MibTableColumn
stationStatsTxRate12Packets = _StationStatsTxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 84),
    _StationStatsTxRate12Packets_Type()
)
stationStatsTxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate12Packets.setStatus("current")
_StationStatsTxRate12Errors_Type = Counter64
_StationStatsTxRate12Errors_Object = MibTableColumn
stationStatsTxRate12Errors = _StationStatsTxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 85),
    _StationStatsTxRate12Errors_Type()
)
stationStatsTxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate12Errors.setStatus("current")
_StationStatsTxRate12Retries_Type = Counter64
_StationStatsTxRate12Retries_Object = MibTableColumn
stationStatsTxRate12Retries = _StationStatsTxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 86),
    _StationStatsTxRate12Retries_Type()
)
stationStatsTxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate12Retries.setStatus("current")
_StationStatsTxRate18Bytes_Type = Counter64
_StationStatsTxRate18Bytes_Object = MibTableColumn
stationStatsTxRate18Bytes = _StationStatsTxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 87),
    _StationStatsTxRate18Bytes_Type()
)
stationStatsTxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate18Bytes.setStatus("current")
_StationStatsTxRate18Packets_Type = Counter64
_StationStatsTxRate18Packets_Object = MibTableColumn
stationStatsTxRate18Packets = _StationStatsTxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 88),
    _StationStatsTxRate18Packets_Type()
)
stationStatsTxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate18Packets.setStatus("current")
_StationStatsTxRate18Errors_Type = Counter64
_StationStatsTxRate18Errors_Object = MibTableColumn
stationStatsTxRate18Errors = _StationStatsTxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 89),
    _StationStatsTxRate18Errors_Type()
)
stationStatsTxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate18Errors.setStatus("current")
_StationStatsTxRate18Retries_Type = Counter64
_StationStatsTxRate18Retries_Object = MibTableColumn
stationStatsTxRate18Retries = _StationStatsTxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 90),
    _StationStatsTxRate18Retries_Type()
)
stationStatsTxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate18Retries.setStatus("current")
_StationStatsTxRate24Bytes_Type = Counter64
_StationStatsTxRate24Bytes_Object = MibTableColumn
stationStatsTxRate24Bytes = _StationStatsTxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 91),
    _StationStatsTxRate24Bytes_Type()
)
stationStatsTxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate24Bytes.setStatus("current")
_StationStatsTxRate24Packets_Type = Counter64
_StationStatsTxRate24Packets_Object = MibTableColumn
stationStatsTxRate24Packets = _StationStatsTxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 92),
    _StationStatsTxRate24Packets_Type()
)
stationStatsTxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate24Packets.setStatus("current")
_StationStatsTxRate24Errors_Type = Counter64
_StationStatsTxRate24Errors_Object = MibTableColumn
stationStatsTxRate24Errors = _StationStatsTxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 93),
    _StationStatsTxRate24Errors_Type()
)
stationStatsTxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate24Errors.setStatus("current")
_StationStatsTxRate24Retries_Type = Counter64
_StationStatsTxRate24Retries_Object = MibTableColumn
stationStatsTxRate24Retries = _StationStatsTxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 94),
    _StationStatsTxRate24Retries_Type()
)
stationStatsTxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate24Retries.setStatus("current")
_StationStatsTxRate36Bytes_Type = Counter64
_StationStatsTxRate36Bytes_Object = MibTableColumn
stationStatsTxRate36Bytes = _StationStatsTxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 95),
    _StationStatsTxRate36Bytes_Type()
)
stationStatsTxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate36Bytes.setStatus("current")
_StationStatsTxRate36Packets_Type = Counter64
_StationStatsTxRate36Packets_Object = MibTableColumn
stationStatsTxRate36Packets = _StationStatsTxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 96),
    _StationStatsTxRate36Packets_Type()
)
stationStatsTxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate36Packets.setStatus("current")
_StationStatsTxRate36Errors_Type = Counter64
_StationStatsTxRate36Errors_Object = MibTableColumn
stationStatsTxRate36Errors = _StationStatsTxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 97),
    _StationStatsTxRate36Errors_Type()
)
stationStatsTxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate36Errors.setStatus("current")
_StationStatsTxRate36Retries_Type = Counter64
_StationStatsTxRate36Retries_Object = MibTableColumn
stationStatsTxRate36Retries = _StationStatsTxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 98),
    _StationStatsTxRate36Retries_Type()
)
stationStatsTxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate36Retries.setStatus("current")
_StationStatsTxRate48Bytes_Type = Counter64
_StationStatsTxRate48Bytes_Object = MibTableColumn
stationStatsTxRate48Bytes = _StationStatsTxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 99),
    _StationStatsTxRate48Bytes_Type()
)
stationStatsTxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate48Bytes.setStatus("current")
_StationStatsTxRate48Packets_Type = Counter64
_StationStatsTxRate48Packets_Object = MibTableColumn
stationStatsTxRate48Packets = _StationStatsTxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 100),
    _StationStatsTxRate48Packets_Type()
)
stationStatsTxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate48Packets.setStatus("current")
_StationStatsTxRate48Errors_Type = Counter64
_StationStatsTxRate48Errors_Object = MibTableColumn
stationStatsTxRate48Errors = _StationStatsTxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 101),
    _StationStatsTxRate48Errors_Type()
)
stationStatsTxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate48Errors.setStatus("current")
_StationStatsTxRate48Retries_Type = Counter64
_StationStatsTxRate48Retries_Object = MibTableColumn
stationStatsTxRate48Retries = _StationStatsTxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 102),
    _StationStatsTxRate48Retries_Type()
)
stationStatsTxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate48Retries.setStatus("current")
_StationStatsTxRate54Bytes_Type = Counter64
_StationStatsTxRate54Bytes_Object = MibTableColumn
stationStatsTxRate54Bytes = _StationStatsTxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 103),
    _StationStatsTxRate54Bytes_Type()
)
stationStatsTxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate54Bytes.setStatus("current")
_StationStatsTxRate54Packets_Type = Counter64
_StationStatsTxRate54Packets_Object = MibTableColumn
stationStatsTxRate54Packets = _StationStatsTxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 104),
    _StationStatsTxRate54Packets_Type()
)
stationStatsTxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate54Packets.setStatus("current")
_StationStatsTxRate54Errors_Type = Counter64
_StationStatsTxRate54Errors_Object = MibTableColumn
stationStatsTxRate54Errors = _StationStatsTxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 105),
    _StationStatsTxRate54Errors_Type()
)
stationStatsTxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate54Errors.setStatus("current")
_StationStatsTxRate54Retries_Type = Counter64
_StationStatsTxRate54Retries_Object = MibTableColumn
stationStatsTxRate54Retries = _StationStatsTxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 106),
    _StationStatsTxRate54Retries_Type()
)
stationStatsTxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTxRate54Retries.setStatus("current")
_StationStatsTimePeriod_Type = Counter32
_StationStatsTimePeriod_Object = MibTableColumn
stationStatsTimePeriod = _StationStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 107),
    _StationStatsTimePeriod_Type()
)
stationStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationStatsTimePeriod.setStatus("current")
_VlanStatsTable_Object = MibTable
vlanStatsTable = _VlanStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4)
)
if mibBuilder.loadTexts:
    vlanStatsTable.setStatus("current")
_VlanStatsEntry_Object = MibTableRow
vlanStatsEntry = _VlanStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1)
)
vlanStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanStatsIndex"),
)
if mibBuilder.loadTexts:
    vlanStatsEntry.setStatus("current")
_VlanStatsIndex_Type = Integer32
_VlanStatsIndex_Object = MibTableColumn
vlanStatsIndex = _VlanStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 1),
    _VlanStatsIndex_Type()
)
vlanStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanStatsIndex.setStatus("current")
_VlanStatsName_Type = DisplayString
_VlanStatsName_Object = MibTableColumn
vlanStatsName = _VlanStatsName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 2),
    _VlanStatsName_Type()
)
vlanStatsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsName.setStatus("current")
_VlanStatsNumber_Type = Integer32
_VlanStatsNumber_Object = MibTableColumn
vlanStatsNumber = _VlanStatsNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 3),
    _VlanStatsNumber_Type()
)
vlanStatsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsNumber.setStatus("current")
_VlanStatsRxBytes_Type = Counter64
_VlanStatsRxBytes_Object = MibTableColumn
vlanStatsRxBytes = _VlanStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 4),
    _VlanStatsRxBytes_Type()
)
vlanStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxBytes.setStatus("current")
_VlanStatsRxPackets_Type = Counter64
_VlanStatsRxPackets_Object = MibTableColumn
vlanStatsRxPackets = _VlanStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 5),
    _VlanStatsRxPackets_Type()
)
vlanStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxPackets.setStatus("current")
_VlanStatsRxCompressed_Type = Counter64
_VlanStatsRxCompressed_Object = MibTableColumn
vlanStatsRxCompressed = _VlanStatsRxCompressed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 6),
    _VlanStatsRxCompressed_Type()
)
vlanStatsRxCompressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxCompressed.setStatus("current")
_VlanStatsRxMulticast_Type = Counter64
_VlanStatsRxMulticast_Object = MibTableColumn
vlanStatsRxMulticast = _VlanStatsRxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 7),
    _VlanStatsRxMulticast_Type()
)
vlanStatsRxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxMulticast.setStatus("current")
_VlanStatsRxDropped_Type = Counter64
_VlanStatsRxDropped_Object = MibTableColumn
vlanStatsRxDropped = _VlanStatsRxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 8),
    _VlanStatsRxDropped_Type()
)
vlanStatsRxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxDropped.setStatus("current")
_VlanStatsRxFifoErrors_Type = Counter64
_VlanStatsRxFifoErrors_Object = MibTableColumn
vlanStatsRxFifoErrors = _VlanStatsRxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 9),
    _VlanStatsRxFifoErrors_Type()
)
vlanStatsRxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxFifoErrors.setStatus("current")
_VlanStatsRxFrameErrors_Type = Counter64
_VlanStatsRxFrameErrors_Object = MibTableColumn
vlanStatsRxFrameErrors = _VlanStatsRxFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 10),
    _VlanStatsRxFrameErrors_Type()
)
vlanStatsRxFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxFrameErrors.setStatus("current")
_VlanStatsRxTotalErrors_Type = Counter64
_VlanStatsRxTotalErrors_Object = MibTableColumn
vlanStatsRxTotalErrors = _VlanStatsRxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 11),
    _VlanStatsRxTotalErrors_Type()
)
vlanStatsRxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsRxTotalErrors.setStatus("current")
_VlanStatsTxBytes_Type = Counter64
_VlanStatsTxBytes_Object = MibTableColumn
vlanStatsTxBytes = _VlanStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 12),
    _VlanStatsTxBytes_Type()
)
vlanStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxBytes.setStatus("current")
_VlanStatsTxPackets_Type = Counter64
_VlanStatsTxPackets_Object = MibTableColumn
vlanStatsTxPackets = _VlanStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 13),
    _VlanStatsTxPackets_Type()
)
vlanStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxPackets.setStatus("current")
_VlanStatsTxCompressed_Type = Counter64
_VlanStatsTxCompressed_Object = MibTableColumn
vlanStatsTxCompressed = _VlanStatsTxCompressed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 14),
    _VlanStatsTxCompressed_Type()
)
vlanStatsTxCompressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxCompressed.setStatus("current")
_VlanStatsTxCarrierErrors_Type = Counter64
_VlanStatsTxCarrierErrors_Object = MibTableColumn
vlanStatsTxCarrierErrors = _VlanStatsTxCarrierErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 15),
    _VlanStatsTxCarrierErrors_Type()
)
vlanStatsTxCarrierErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxCarrierErrors.setStatus("current")
_VlanStatsTxDropped_Type = Counter64
_VlanStatsTxDropped_Object = MibTableColumn
vlanStatsTxDropped = _VlanStatsTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 16),
    _VlanStatsTxDropped_Type()
)
vlanStatsTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxDropped.setStatus("current")
_VlanStatsTxFifoErrors_Type = Counter64
_VlanStatsTxFifoErrors_Object = MibTableColumn
vlanStatsTxFifoErrors = _VlanStatsTxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 17),
    _VlanStatsTxFifoErrors_Type()
)
vlanStatsTxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxFifoErrors.setStatus("current")
_VlanStatsTxCollisions_Type = Counter64
_VlanStatsTxCollisions_Object = MibTableColumn
vlanStatsTxCollisions = _VlanStatsTxCollisions_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 18),
    _VlanStatsTxCollisions_Type()
)
vlanStatsTxCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxCollisions.setStatus("current")
_VlanStatsTxTotalErrors_Type = Counter64
_VlanStatsTxTotalErrors_Object = MibTableColumn
vlanStatsTxTotalErrors = _VlanStatsTxTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 19),
    _VlanStatsTxTotalErrors_Type()
)
vlanStatsTxTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTxTotalErrors.setStatus("current")
_VlanStatsTimePeriod_Type = Counter32
_VlanStatsTimePeriod_Object = MibTableColumn
vlanStatsTimePeriod = _VlanStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 20),
    _VlanStatsTimePeriod_Type()
)
vlanStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsTimePeriod.setStatus("current")
_WdsStatsTable_Object = MibTable
wdsStatsTable = _WdsStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5)
)
if mibBuilder.loadTexts:
    wdsStatsTable.setStatus("current")
_WdsStatsEntry_Object = MibTableRow
wdsStatsEntry = _WdsStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1)
)
wdsStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wdsStatsIndex"),
)
if mibBuilder.loadTexts:
    wdsStatsEntry.setStatus("current")
_WdsStatsIndex_Type = Integer32
_WdsStatsIndex_Object = MibTableColumn
wdsStatsIndex = _WdsStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 1),
    _WdsStatsIndex_Type()
)
wdsStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wdsStatsIndex.setStatus("current")
_WdsStatsLinkName_Type = DisplayString
_WdsStatsLinkName_Object = MibTableColumn
wdsStatsLinkName = _WdsStatsLinkName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 2),
    _WdsStatsLinkName_Type()
)
wdsStatsLinkName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsLinkName.setStatus("current")
_WdsStatsRxBytes_Type = Counter64
_WdsStatsRxBytes_Object = MibTableColumn
wdsStatsRxBytes = _WdsStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 3),
    _WdsStatsRxBytes_Type()
)
wdsStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxBytes.setStatus("current")
_WdsStatsRxPackets_Type = Counter64
_WdsStatsRxPackets_Object = MibTableColumn
wdsStatsRxPackets = _WdsStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 4),
    _WdsStatsRxPackets_Type()
)
wdsStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxPackets.setStatus("current")
_WdsStatsRxErrors_Type = Counter64
_WdsStatsRxErrors_Object = MibTableColumn
wdsStatsRxErrors = _WdsStatsRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 5),
    _WdsStatsRxErrors_Type()
)
wdsStatsRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxErrors.setStatus("current")
_WdsStatsRxRetries_Type = Counter64
_WdsStatsRxRetries_Object = MibTableColumn
wdsStatsRxRetries = _WdsStatsRxRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 6),
    _WdsStatsRxRetries_Type()
)
wdsStatsRxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRetries.setStatus("current")
_WdsStatsRxRate1Bytes_Type = Counter64
_WdsStatsRxRate1Bytes_Object = MibTableColumn
wdsStatsRxRate1Bytes = _WdsStatsRxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 7),
    _WdsStatsRxRate1Bytes_Type()
)
wdsStatsRxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate1Bytes.setStatus("current")
_WdsStatsRxRate1Packets_Type = Counter64
_WdsStatsRxRate1Packets_Object = MibTableColumn
wdsStatsRxRate1Packets = _WdsStatsRxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 8),
    _WdsStatsRxRate1Packets_Type()
)
wdsStatsRxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate1Packets.setStatus("current")
_WdsStatsRxRate1Errors_Type = Counter64
_WdsStatsRxRate1Errors_Object = MibTableColumn
wdsStatsRxRate1Errors = _WdsStatsRxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 9),
    _WdsStatsRxRate1Errors_Type()
)
wdsStatsRxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate1Errors.setStatus("current")
_WdsStatsRxRate1Retries_Type = Counter64
_WdsStatsRxRate1Retries_Object = MibTableColumn
wdsStatsRxRate1Retries = _WdsStatsRxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 10),
    _WdsStatsRxRate1Retries_Type()
)
wdsStatsRxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate1Retries.setStatus("current")
_WdsStatsRxRate2Bytes_Type = Counter64
_WdsStatsRxRate2Bytes_Object = MibTableColumn
wdsStatsRxRate2Bytes = _WdsStatsRxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 11),
    _WdsStatsRxRate2Bytes_Type()
)
wdsStatsRxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate2Bytes.setStatus("current")
_WdsStatsRxRate2Packets_Type = Counter64
_WdsStatsRxRate2Packets_Object = MibTableColumn
wdsStatsRxRate2Packets = _WdsStatsRxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 12),
    _WdsStatsRxRate2Packets_Type()
)
wdsStatsRxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate2Packets.setStatus("current")
_WdsStatsRxRate2Errors_Type = Counter64
_WdsStatsRxRate2Errors_Object = MibTableColumn
wdsStatsRxRate2Errors = _WdsStatsRxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 13),
    _WdsStatsRxRate2Errors_Type()
)
wdsStatsRxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate2Errors.setStatus("current")
_WdsStatsRxRate2Retries_Type = Counter64
_WdsStatsRxRate2Retries_Object = MibTableColumn
wdsStatsRxRate2Retries = _WdsStatsRxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 14),
    _WdsStatsRxRate2Retries_Type()
)
wdsStatsRxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate2Retries.setStatus("current")
_WdsStatsRxRate5Bytes_Type = Counter64
_WdsStatsRxRate5Bytes_Object = MibTableColumn
wdsStatsRxRate5Bytes = _WdsStatsRxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 15),
    _WdsStatsRxRate5Bytes_Type()
)
wdsStatsRxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate5Bytes.setStatus("current")
_WdsStatsRxRate5Packets_Type = Counter64
_WdsStatsRxRate5Packets_Object = MibTableColumn
wdsStatsRxRate5Packets = _WdsStatsRxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 16),
    _WdsStatsRxRate5Packets_Type()
)
wdsStatsRxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate5Packets.setStatus("current")
_WdsStatsRxRate5Errors_Type = Counter64
_WdsStatsRxRate5Errors_Object = MibTableColumn
wdsStatsRxRate5Errors = _WdsStatsRxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 17),
    _WdsStatsRxRate5Errors_Type()
)
wdsStatsRxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate5Errors.setStatus("current")
_WdsStatsRxRate5Retries_Type = Counter64
_WdsStatsRxRate5Retries_Object = MibTableColumn
wdsStatsRxRate5Retries = _WdsStatsRxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 18),
    _WdsStatsRxRate5Retries_Type()
)
wdsStatsRxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate5Retries.setStatus("current")
_WdsStatsRxRate11Bytes_Type = Counter64
_WdsStatsRxRate11Bytes_Object = MibTableColumn
wdsStatsRxRate11Bytes = _WdsStatsRxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 19),
    _WdsStatsRxRate11Bytes_Type()
)
wdsStatsRxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate11Bytes.setStatus("current")
_WdsStatsRxRate11Packets_Type = Counter64
_WdsStatsRxRate11Packets_Object = MibTableColumn
wdsStatsRxRate11Packets = _WdsStatsRxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 20),
    _WdsStatsRxRate11Packets_Type()
)
wdsStatsRxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate11Packets.setStatus("current")
_WdsStatsRxRate11Errors_Type = Counter64
_WdsStatsRxRate11Errors_Object = MibTableColumn
wdsStatsRxRate11Errors = _WdsStatsRxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 21),
    _WdsStatsRxRate11Errors_Type()
)
wdsStatsRxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate11Errors.setStatus("current")
_WdsStatsRxRate11Retries_Type = Counter64
_WdsStatsRxRate11Retries_Object = MibTableColumn
wdsStatsRxRate11Retries = _WdsStatsRxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 22),
    _WdsStatsRxRate11Retries_Type()
)
wdsStatsRxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate11Retries.setStatus("current")
_WdsStatsRxRate6Bytes_Type = Counter64
_WdsStatsRxRate6Bytes_Object = MibTableColumn
wdsStatsRxRate6Bytes = _WdsStatsRxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 23),
    _WdsStatsRxRate6Bytes_Type()
)
wdsStatsRxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate6Bytes.setStatus("current")
_WdsStatsRxRate6Packets_Type = Counter64
_WdsStatsRxRate6Packets_Object = MibTableColumn
wdsStatsRxRate6Packets = _WdsStatsRxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 24),
    _WdsStatsRxRate6Packets_Type()
)
wdsStatsRxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate6Packets.setStatus("current")
_WdsStatsRxRate6Errors_Type = Counter64
_WdsStatsRxRate6Errors_Object = MibTableColumn
wdsStatsRxRate6Errors = _WdsStatsRxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 25),
    _WdsStatsRxRate6Errors_Type()
)
wdsStatsRxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate6Errors.setStatus("current")
_WdsStatsRxRate6Retries_Type = Counter64
_WdsStatsRxRate6Retries_Object = MibTableColumn
wdsStatsRxRate6Retries = _WdsStatsRxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 26),
    _WdsStatsRxRate6Retries_Type()
)
wdsStatsRxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate6Retries.setStatus("current")
_WdsStatsRxRate9Bytes_Type = Counter64
_WdsStatsRxRate9Bytes_Object = MibTableColumn
wdsStatsRxRate9Bytes = _WdsStatsRxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 27),
    _WdsStatsRxRate9Bytes_Type()
)
wdsStatsRxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate9Bytes.setStatus("current")
_WdsStatsRxRate9Packets_Type = Counter64
_WdsStatsRxRate9Packets_Object = MibTableColumn
wdsStatsRxRate9Packets = _WdsStatsRxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 28),
    _WdsStatsRxRate9Packets_Type()
)
wdsStatsRxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate9Packets.setStatus("current")
_WdsStatsRxRate9Errors_Type = Counter64
_WdsStatsRxRate9Errors_Object = MibTableColumn
wdsStatsRxRate9Errors = _WdsStatsRxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 29),
    _WdsStatsRxRate9Errors_Type()
)
wdsStatsRxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate9Errors.setStatus("current")
_WdsStatsRxRate9Retries_Type = Counter64
_WdsStatsRxRate9Retries_Object = MibTableColumn
wdsStatsRxRate9Retries = _WdsStatsRxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 30),
    _WdsStatsRxRate9Retries_Type()
)
wdsStatsRxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate9Retries.setStatus("current")
_WdsStatsRxRate12Bytes_Type = Counter64
_WdsStatsRxRate12Bytes_Object = MibTableColumn
wdsStatsRxRate12Bytes = _WdsStatsRxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 31),
    _WdsStatsRxRate12Bytes_Type()
)
wdsStatsRxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate12Bytes.setStatus("current")
_WdsStatsRxRate12Packets_Type = Counter64
_WdsStatsRxRate12Packets_Object = MibTableColumn
wdsStatsRxRate12Packets = _WdsStatsRxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 32),
    _WdsStatsRxRate12Packets_Type()
)
wdsStatsRxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate12Packets.setStatus("current")
_WdsStatsRxRate12Errors_Type = Counter64
_WdsStatsRxRate12Errors_Object = MibTableColumn
wdsStatsRxRate12Errors = _WdsStatsRxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 33),
    _WdsStatsRxRate12Errors_Type()
)
wdsStatsRxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate12Errors.setStatus("current")
_WdsStatsRxRate12Retries_Type = Counter64
_WdsStatsRxRate12Retries_Object = MibTableColumn
wdsStatsRxRate12Retries = _WdsStatsRxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 34),
    _WdsStatsRxRate12Retries_Type()
)
wdsStatsRxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate12Retries.setStatus("current")
_WdsStatsRxRate18Bytes_Type = Counter64
_WdsStatsRxRate18Bytes_Object = MibTableColumn
wdsStatsRxRate18Bytes = _WdsStatsRxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 35),
    _WdsStatsRxRate18Bytes_Type()
)
wdsStatsRxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate18Bytes.setStatus("current")
_WdsStatsRxRate18Packets_Type = Counter64
_WdsStatsRxRate18Packets_Object = MibTableColumn
wdsStatsRxRate18Packets = _WdsStatsRxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 36),
    _WdsStatsRxRate18Packets_Type()
)
wdsStatsRxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate18Packets.setStatus("current")
_WdsStatsRxRate18Errors_Type = Counter64
_WdsStatsRxRate18Errors_Object = MibTableColumn
wdsStatsRxRate18Errors = _WdsStatsRxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 37),
    _WdsStatsRxRate18Errors_Type()
)
wdsStatsRxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate18Errors.setStatus("current")
_WdsStatsRxRate18Retries_Type = Counter64
_WdsStatsRxRate18Retries_Object = MibTableColumn
wdsStatsRxRate18Retries = _WdsStatsRxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 38),
    _WdsStatsRxRate18Retries_Type()
)
wdsStatsRxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate18Retries.setStatus("current")
_WdsStatsRxRate24Bytes_Type = Counter64
_WdsStatsRxRate24Bytes_Object = MibTableColumn
wdsStatsRxRate24Bytes = _WdsStatsRxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 39),
    _WdsStatsRxRate24Bytes_Type()
)
wdsStatsRxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate24Bytes.setStatus("current")
_WdsStatsRxRate24Packets_Type = Counter64
_WdsStatsRxRate24Packets_Object = MibTableColumn
wdsStatsRxRate24Packets = _WdsStatsRxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 40),
    _WdsStatsRxRate24Packets_Type()
)
wdsStatsRxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate24Packets.setStatus("current")
_WdsStatsRxRate24Errors_Type = Counter64
_WdsStatsRxRate24Errors_Object = MibTableColumn
wdsStatsRxRate24Errors = _WdsStatsRxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 41),
    _WdsStatsRxRate24Errors_Type()
)
wdsStatsRxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate24Errors.setStatus("current")
_WdsStatsRxRate24Retries_Type = Counter64
_WdsStatsRxRate24Retries_Object = MibTableColumn
wdsStatsRxRate24Retries = _WdsStatsRxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 42),
    _WdsStatsRxRate24Retries_Type()
)
wdsStatsRxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate24Retries.setStatus("current")
_WdsStatsRxRate36Bytes_Type = Counter64
_WdsStatsRxRate36Bytes_Object = MibTableColumn
wdsStatsRxRate36Bytes = _WdsStatsRxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 43),
    _WdsStatsRxRate36Bytes_Type()
)
wdsStatsRxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate36Bytes.setStatus("current")
_WdsStatsRxRate36Packets_Type = Counter64
_WdsStatsRxRate36Packets_Object = MibTableColumn
wdsStatsRxRate36Packets = _WdsStatsRxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 44),
    _WdsStatsRxRate36Packets_Type()
)
wdsStatsRxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate36Packets.setStatus("current")
_WdsStatsRxRate36Errors_Type = Counter64
_WdsStatsRxRate36Errors_Object = MibTableColumn
wdsStatsRxRate36Errors = _WdsStatsRxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 45),
    _WdsStatsRxRate36Errors_Type()
)
wdsStatsRxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate36Errors.setStatus("current")
_WdsStatsRxRate36Retries_Type = Counter64
_WdsStatsRxRate36Retries_Object = MibTableColumn
wdsStatsRxRate36Retries = _WdsStatsRxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 46),
    _WdsStatsRxRate36Retries_Type()
)
wdsStatsRxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate36Retries.setStatus("current")
_WdsStatsRxRate48Bytes_Type = Counter64
_WdsStatsRxRate48Bytes_Object = MibTableColumn
wdsStatsRxRate48Bytes = _WdsStatsRxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 47),
    _WdsStatsRxRate48Bytes_Type()
)
wdsStatsRxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate48Bytes.setStatus("current")
_WdsStatsRxRate48Packets_Type = Counter64
_WdsStatsRxRate48Packets_Object = MibTableColumn
wdsStatsRxRate48Packets = _WdsStatsRxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 48),
    _WdsStatsRxRate48Packets_Type()
)
wdsStatsRxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate48Packets.setStatus("current")
_WdsStatsRxRate48Errors_Type = Counter64
_WdsStatsRxRate48Errors_Object = MibTableColumn
wdsStatsRxRate48Errors = _WdsStatsRxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 49),
    _WdsStatsRxRate48Errors_Type()
)
wdsStatsRxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate48Errors.setStatus("current")
_WdsStatsRxRate48Retries_Type = Counter64
_WdsStatsRxRate48Retries_Object = MibTableColumn
wdsStatsRxRate48Retries = _WdsStatsRxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 50),
    _WdsStatsRxRate48Retries_Type()
)
wdsStatsRxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate48Retries.setStatus("current")
_WdsStatsRxRate54Bytes_Type = Counter64
_WdsStatsRxRate54Bytes_Object = MibTableColumn
wdsStatsRxRate54Bytes = _WdsStatsRxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 51),
    _WdsStatsRxRate54Bytes_Type()
)
wdsStatsRxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate54Bytes.setStatus("current")
_WdsStatsRxRate54Packets_Type = Counter64
_WdsStatsRxRate54Packets_Object = MibTableColumn
wdsStatsRxRate54Packets = _WdsStatsRxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 52),
    _WdsStatsRxRate54Packets_Type()
)
wdsStatsRxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate54Packets.setStatus("current")
_WdsStatsRxRate54Errors_Type = Counter64
_WdsStatsRxRate54Errors_Object = MibTableColumn
wdsStatsRxRate54Errors = _WdsStatsRxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 53),
    _WdsStatsRxRate54Errors_Type()
)
wdsStatsRxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate54Errors.setStatus("current")
_WdsStatsRxRate54Retries_Type = Counter64
_WdsStatsRxRate54Retries_Object = MibTableColumn
wdsStatsRxRate54Retries = _WdsStatsRxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 54),
    _WdsStatsRxRate54Retries_Type()
)
wdsStatsRxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsRxRate54Retries.setStatus("current")
_WdsStatsTxBytes_Type = Counter64
_WdsStatsTxBytes_Object = MibTableColumn
wdsStatsTxBytes = _WdsStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 55),
    _WdsStatsTxBytes_Type()
)
wdsStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxBytes.setStatus("current")
_WdsStatsTxPackets_Type = Counter64
_WdsStatsTxPackets_Object = MibTableColumn
wdsStatsTxPackets = _WdsStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 56),
    _WdsStatsTxPackets_Type()
)
wdsStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxPackets.setStatus("current")
_WdsStatsTxErrors_Type = Counter64
_WdsStatsTxErrors_Object = MibTableColumn
wdsStatsTxErrors = _WdsStatsTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 57),
    _WdsStatsTxErrors_Type()
)
wdsStatsTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxErrors.setStatus("current")
_WdsStatsTxRetries_Type = Counter64
_WdsStatsTxRetries_Object = MibTableColumn
wdsStatsTxRetries = _WdsStatsTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 58),
    _WdsStatsTxRetries_Type()
)
wdsStatsTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRetries.setStatus("current")
_WdsStatsTxRate1Bytes_Type = Counter64
_WdsStatsTxRate1Bytes_Object = MibTableColumn
wdsStatsTxRate1Bytes = _WdsStatsTxRate1Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 59),
    _WdsStatsTxRate1Bytes_Type()
)
wdsStatsTxRate1Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate1Bytes.setStatus("current")
_WdsStatsTxRate1Packets_Type = Counter64
_WdsStatsTxRate1Packets_Object = MibTableColumn
wdsStatsTxRate1Packets = _WdsStatsTxRate1Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 60),
    _WdsStatsTxRate1Packets_Type()
)
wdsStatsTxRate1Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate1Packets.setStatus("current")
_WdsStatsTxRate1Errors_Type = Counter64
_WdsStatsTxRate1Errors_Object = MibTableColumn
wdsStatsTxRate1Errors = _WdsStatsTxRate1Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 61),
    _WdsStatsTxRate1Errors_Type()
)
wdsStatsTxRate1Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate1Errors.setStatus("current")
_WdsStatsTxRate1Retries_Type = Counter64
_WdsStatsTxRate1Retries_Object = MibTableColumn
wdsStatsTxRate1Retries = _WdsStatsTxRate1Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 62),
    _WdsStatsTxRate1Retries_Type()
)
wdsStatsTxRate1Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate1Retries.setStatus("current")
_WdsStatsTxRate2Bytes_Type = Counter64
_WdsStatsTxRate2Bytes_Object = MibTableColumn
wdsStatsTxRate2Bytes = _WdsStatsTxRate2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 63),
    _WdsStatsTxRate2Bytes_Type()
)
wdsStatsTxRate2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate2Bytes.setStatus("current")
_WdsStatsTxRate2Packets_Type = Counter64
_WdsStatsTxRate2Packets_Object = MibTableColumn
wdsStatsTxRate2Packets = _WdsStatsTxRate2Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 64),
    _WdsStatsTxRate2Packets_Type()
)
wdsStatsTxRate2Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate2Packets.setStatus("current")
_WdsStatsTxRate2Errors_Type = Counter64
_WdsStatsTxRate2Errors_Object = MibTableColumn
wdsStatsTxRate2Errors = _WdsStatsTxRate2Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 65),
    _WdsStatsTxRate2Errors_Type()
)
wdsStatsTxRate2Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate2Errors.setStatus("current")
_WdsStatsTxRate2Retries_Type = Counter64
_WdsStatsTxRate2Retries_Object = MibTableColumn
wdsStatsTxRate2Retries = _WdsStatsTxRate2Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 66),
    _WdsStatsTxRate2Retries_Type()
)
wdsStatsTxRate2Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate2Retries.setStatus("current")
_WdsStatsTxRate5Bytes_Type = Counter64
_WdsStatsTxRate5Bytes_Object = MibTableColumn
wdsStatsTxRate5Bytes = _WdsStatsTxRate5Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 67),
    _WdsStatsTxRate5Bytes_Type()
)
wdsStatsTxRate5Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate5Bytes.setStatus("current")
_WdsStatsTxRate5Packets_Type = Counter64
_WdsStatsTxRate5Packets_Object = MibTableColumn
wdsStatsTxRate5Packets = _WdsStatsTxRate5Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 68),
    _WdsStatsTxRate5Packets_Type()
)
wdsStatsTxRate5Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate5Packets.setStatus("current")
_WdsStatsTxRate5Errors_Type = Counter64
_WdsStatsTxRate5Errors_Object = MibTableColumn
wdsStatsTxRate5Errors = _WdsStatsTxRate5Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 69),
    _WdsStatsTxRate5Errors_Type()
)
wdsStatsTxRate5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate5Errors.setStatus("current")
_WdsStatsTxRate5Retries_Type = Counter64
_WdsStatsTxRate5Retries_Object = MibTableColumn
wdsStatsTxRate5Retries = _WdsStatsTxRate5Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 70),
    _WdsStatsTxRate5Retries_Type()
)
wdsStatsTxRate5Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate5Retries.setStatus("current")
_WdsStatsTxRate11Bytes_Type = Counter64
_WdsStatsTxRate11Bytes_Object = MibTableColumn
wdsStatsTxRate11Bytes = _WdsStatsTxRate11Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 71),
    _WdsStatsTxRate11Bytes_Type()
)
wdsStatsTxRate11Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate11Bytes.setStatus("current")
_WdsStatsTxRate11Packets_Type = Counter64
_WdsStatsTxRate11Packets_Object = MibTableColumn
wdsStatsTxRate11Packets = _WdsStatsTxRate11Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 72),
    _WdsStatsTxRate11Packets_Type()
)
wdsStatsTxRate11Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate11Packets.setStatus("current")
_WdsStatsTxRate11Errors_Type = Counter64
_WdsStatsTxRate11Errors_Object = MibTableColumn
wdsStatsTxRate11Errors = _WdsStatsTxRate11Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 73),
    _WdsStatsTxRate11Errors_Type()
)
wdsStatsTxRate11Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate11Errors.setStatus("current")
_WdsStatsTxRate11Retries_Type = Counter64
_WdsStatsTxRate11Retries_Object = MibTableColumn
wdsStatsTxRate11Retries = _WdsStatsTxRate11Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 74),
    _WdsStatsTxRate11Retries_Type()
)
wdsStatsTxRate11Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate11Retries.setStatus("current")
_WdsStatsTxRate6Bytes_Type = Counter64
_WdsStatsTxRate6Bytes_Object = MibTableColumn
wdsStatsTxRate6Bytes = _WdsStatsTxRate6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 75),
    _WdsStatsTxRate6Bytes_Type()
)
wdsStatsTxRate6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate6Bytes.setStatus("current")
_WdsStatsTxRate6Packets_Type = Counter64
_WdsStatsTxRate6Packets_Object = MibTableColumn
wdsStatsTxRate6Packets = _WdsStatsTxRate6Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 76),
    _WdsStatsTxRate6Packets_Type()
)
wdsStatsTxRate6Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate6Packets.setStatus("current")
_WdsStatsTxRate6Errors_Type = Counter64
_WdsStatsTxRate6Errors_Object = MibTableColumn
wdsStatsTxRate6Errors = _WdsStatsTxRate6Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 77),
    _WdsStatsTxRate6Errors_Type()
)
wdsStatsTxRate6Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate6Errors.setStatus("current")
_WdsStatsTxRate6Retries_Type = Counter64
_WdsStatsTxRate6Retries_Object = MibTableColumn
wdsStatsTxRate6Retries = _WdsStatsTxRate6Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 78),
    _WdsStatsTxRate6Retries_Type()
)
wdsStatsTxRate6Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate6Retries.setStatus("current")
_WdsStatsTxRate9Bytes_Type = Counter64
_WdsStatsTxRate9Bytes_Object = MibTableColumn
wdsStatsTxRate9Bytes = _WdsStatsTxRate9Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 79),
    _WdsStatsTxRate9Bytes_Type()
)
wdsStatsTxRate9Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate9Bytes.setStatus("current")
_WdsStatsTxRate9Packets_Type = Counter64
_WdsStatsTxRate9Packets_Object = MibTableColumn
wdsStatsTxRate9Packets = _WdsStatsTxRate9Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 80),
    _WdsStatsTxRate9Packets_Type()
)
wdsStatsTxRate9Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate9Packets.setStatus("current")
_WdsStatsTxRate9Errors_Type = Counter64
_WdsStatsTxRate9Errors_Object = MibTableColumn
wdsStatsTxRate9Errors = _WdsStatsTxRate9Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 81),
    _WdsStatsTxRate9Errors_Type()
)
wdsStatsTxRate9Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate9Errors.setStatus("current")
_WdsStatsTxRate9Retries_Type = Counter64
_WdsStatsTxRate9Retries_Object = MibTableColumn
wdsStatsTxRate9Retries = _WdsStatsTxRate9Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 82),
    _WdsStatsTxRate9Retries_Type()
)
wdsStatsTxRate9Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate9Retries.setStatus("current")
_WdsStatsTxRate12Bytes_Type = Counter64
_WdsStatsTxRate12Bytes_Object = MibTableColumn
wdsStatsTxRate12Bytes = _WdsStatsTxRate12Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 83),
    _WdsStatsTxRate12Bytes_Type()
)
wdsStatsTxRate12Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate12Bytes.setStatus("current")
_WdsStatsTxRate12Packets_Type = Counter64
_WdsStatsTxRate12Packets_Object = MibTableColumn
wdsStatsTxRate12Packets = _WdsStatsTxRate12Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 84),
    _WdsStatsTxRate12Packets_Type()
)
wdsStatsTxRate12Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate12Packets.setStatus("current")
_WdsStatsTxRate12Errors_Type = Counter64
_WdsStatsTxRate12Errors_Object = MibTableColumn
wdsStatsTxRate12Errors = _WdsStatsTxRate12Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 85),
    _WdsStatsTxRate12Errors_Type()
)
wdsStatsTxRate12Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate12Errors.setStatus("current")
_WdsStatsTxRate12Retries_Type = Counter64
_WdsStatsTxRate12Retries_Object = MibTableColumn
wdsStatsTxRate12Retries = _WdsStatsTxRate12Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 86),
    _WdsStatsTxRate12Retries_Type()
)
wdsStatsTxRate12Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate12Retries.setStatus("current")
_WdsStatsTxRate18Bytes_Type = Counter64
_WdsStatsTxRate18Bytes_Object = MibTableColumn
wdsStatsTxRate18Bytes = _WdsStatsTxRate18Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 87),
    _WdsStatsTxRate18Bytes_Type()
)
wdsStatsTxRate18Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate18Bytes.setStatus("current")
_WdsStatsTxRate18Packets_Type = Counter64
_WdsStatsTxRate18Packets_Object = MibTableColumn
wdsStatsTxRate18Packets = _WdsStatsTxRate18Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 88),
    _WdsStatsTxRate18Packets_Type()
)
wdsStatsTxRate18Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate18Packets.setStatus("current")
_WdsStatsTxRate18Errors_Type = Counter64
_WdsStatsTxRate18Errors_Object = MibTableColumn
wdsStatsTxRate18Errors = _WdsStatsTxRate18Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 89),
    _WdsStatsTxRate18Errors_Type()
)
wdsStatsTxRate18Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate18Errors.setStatus("current")
_WdsStatsTxRate18Retries_Type = Counter64
_WdsStatsTxRate18Retries_Object = MibTableColumn
wdsStatsTxRate18Retries = _WdsStatsTxRate18Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 90),
    _WdsStatsTxRate18Retries_Type()
)
wdsStatsTxRate18Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate18Retries.setStatus("current")
_WdsStatsTxRate24Bytes_Type = Counter64
_WdsStatsTxRate24Bytes_Object = MibTableColumn
wdsStatsTxRate24Bytes = _WdsStatsTxRate24Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 91),
    _WdsStatsTxRate24Bytes_Type()
)
wdsStatsTxRate24Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate24Bytes.setStatus("current")
_WdsStatsTxRate24Packets_Type = Counter64
_WdsStatsTxRate24Packets_Object = MibTableColumn
wdsStatsTxRate24Packets = _WdsStatsTxRate24Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 92),
    _WdsStatsTxRate24Packets_Type()
)
wdsStatsTxRate24Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate24Packets.setStatus("current")
_WdsStatsTxRate24Errors_Type = Counter64
_WdsStatsTxRate24Errors_Object = MibTableColumn
wdsStatsTxRate24Errors = _WdsStatsTxRate24Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 93),
    _WdsStatsTxRate24Errors_Type()
)
wdsStatsTxRate24Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate24Errors.setStatus("current")
_WdsStatsTxRate24Retries_Type = Counter64
_WdsStatsTxRate24Retries_Object = MibTableColumn
wdsStatsTxRate24Retries = _WdsStatsTxRate24Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 94),
    _WdsStatsTxRate24Retries_Type()
)
wdsStatsTxRate24Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate24Retries.setStatus("current")
_WdsStatsTxRate36Bytes_Type = Counter64
_WdsStatsTxRate36Bytes_Object = MibTableColumn
wdsStatsTxRate36Bytes = _WdsStatsTxRate36Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 95),
    _WdsStatsTxRate36Bytes_Type()
)
wdsStatsTxRate36Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate36Bytes.setStatus("current")
_WdsStatsTxRate36Packets_Type = Counter64
_WdsStatsTxRate36Packets_Object = MibTableColumn
wdsStatsTxRate36Packets = _WdsStatsTxRate36Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 96),
    _WdsStatsTxRate36Packets_Type()
)
wdsStatsTxRate36Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate36Packets.setStatus("current")
_WdsStatsTxRate36Errors_Type = Counter64
_WdsStatsTxRate36Errors_Object = MibTableColumn
wdsStatsTxRate36Errors = _WdsStatsTxRate36Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 97),
    _WdsStatsTxRate36Errors_Type()
)
wdsStatsTxRate36Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate36Errors.setStatus("current")
_WdsStatsTxRate36Retries_Type = Counter64
_WdsStatsTxRate36Retries_Object = MibTableColumn
wdsStatsTxRate36Retries = _WdsStatsTxRate36Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 98),
    _WdsStatsTxRate36Retries_Type()
)
wdsStatsTxRate36Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate36Retries.setStatus("current")
_WdsStatsTxRate48Bytes_Type = Counter64
_WdsStatsTxRate48Bytes_Object = MibTableColumn
wdsStatsTxRate48Bytes = _WdsStatsTxRate48Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 99),
    _WdsStatsTxRate48Bytes_Type()
)
wdsStatsTxRate48Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate48Bytes.setStatus("current")
_WdsStatsTxRate48Packets_Type = Counter64
_WdsStatsTxRate48Packets_Object = MibTableColumn
wdsStatsTxRate48Packets = _WdsStatsTxRate48Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 100),
    _WdsStatsTxRate48Packets_Type()
)
wdsStatsTxRate48Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate48Packets.setStatus("current")
_WdsStatsTxRate48Errors_Type = Counter64
_WdsStatsTxRate48Errors_Object = MibTableColumn
wdsStatsTxRate48Errors = _WdsStatsTxRate48Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 101),
    _WdsStatsTxRate48Errors_Type()
)
wdsStatsTxRate48Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate48Errors.setStatus("current")
_WdsStatsTxRate48Retries_Type = Counter64
_WdsStatsTxRate48Retries_Object = MibTableColumn
wdsStatsTxRate48Retries = _WdsStatsTxRate48Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 102),
    _WdsStatsTxRate48Retries_Type()
)
wdsStatsTxRate48Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate48Retries.setStatus("current")
_WdsStatsTxRate54Bytes_Type = Counter64
_WdsStatsTxRate54Bytes_Object = MibTableColumn
wdsStatsTxRate54Bytes = _WdsStatsTxRate54Bytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 103),
    _WdsStatsTxRate54Bytes_Type()
)
wdsStatsTxRate54Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate54Bytes.setStatus("current")
_WdsStatsTxRate54Packets_Type = Counter64
_WdsStatsTxRate54Packets_Object = MibTableColumn
wdsStatsTxRate54Packets = _WdsStatsTxRate54Packets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 104),
    _WdsStatsTxRate54Packets_Type()
)
wdsStatsTxRate54Packets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate54Packets.setStatus("current")
_WdsStatsTxRate54Errors_Type = Counter64
_WdsStatsTxRate54Errors_Object = MibTableColumn
wdsStatsTxRate54Errors = _WdsStatsTxRate54Errors_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 105),
    _WdsStatsTxRate54Errors_Type()
)
wdsStatsTxRate54Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate54Errors.setStatus("current")
_WdsStatsTxRate54Retries_Type = Counter64
_WdsStatsTxRate54Retries_Object = MibTableColumn
wdsStatsTxRate54Retries = _WdsStatsTxRate54Retries_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 106),
    _WdsStatsTxRate54Retries_Type()
)
wdsStatsTxRate54Retries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdsStatsTxRate54Retries.setStatus("current")
_SpectrumAnalysisTable_Object = MibTable
spectrumAnalysisTable = _SpectrumAnalysisTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6)
)
if mibBuilder.loadTexts:
    spectrumAnalysisTable.setStatus("current")
_SpectrumAnalysisEntry_Object = MibTableRow
spectrumAnalysisEntry = _SpectrumAnalysisEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1)
)
spectrumAnalysisEntry.setIndexNames(
    (0, "XIRRUS-MIB", "spectrumAnalysisIndex"),
)
if mibBuilder.loadTexts:
    spectrumAnalysisEntry.setStatus("current")
_SpectrumAnalysisIndex_Type = Integer32
_SpectrumAnalysisIndex_Object = MibTableColumn
spectrumAnalysisIndex = _SpectrumAnalysisIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 1),
    _SpectrumAnalysisIndex_Type()
)
spectrumAnalysisIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    spectrumAnalysisIndex.setStatus("current")
_SpectrumAnalysisChannel_Type = Integer32
_SpectrumAnalysisChannel_Object = MibTableColumn
spectrumAnalysisChannel = _SpectrumAnalysisChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 2),
    _SpectrumAnalysisChannel_Type()
)
spectrumAnalysisChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisChannel.setStatus("current")
_SpectrumAnalysisPackets_Type = Integer32
_SpectrumAnalysisPackets_Object = MibTableColumn
spectrumAnalysisPackets = _SpectrumAnalysisPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 3),
    _SpectrumAnalysisPackets_Type()
)
spectrumAnalysisPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisPackets.setStatus("current")
_SpectrumAnalysisBytes_Type = Integer32
_SpectrumAnalysisBytes_Object = MibTableColumn
spectrumAnalysisBytes = _SpectrumAnalysisBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 4),
    _SpectrumAnalysisBytes_Type()
)
spectrumAnalysisBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisBytes.setStatus("current")
_SpectrumAnalysisErrorRate_Type = Integer32
_SpectrumAnalysisErrorRate_Object = MibTableColumn
spectrumAnalysisErrorRate = _SpectrumAnalysisErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 5),
    _SpectrumAnalysisErrorRate_Type()
)
spectrumAnalysisErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisErrorRate.setStatus("current")
_SpectrumAnalysisAverageDataRate_Type = Integer32
_SpectrumAnalysisAverageDataRate_Object = MibTableColumn
spectrumAnalysisAverageDataRate = _SpectrumAnalysisAverageDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 6),
    _SpectrumAnalysisAverageDataRate_Type()
)
spectrumAnalysisAverageDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisAverageDataRate.setStatus("current")
_SpectrumAnalysisAverageRSSI_Type = Integer32
_SpectrumAnalysisAverageRSSI_Object = MibTableColumn
spectrumAnalysisAverageRSSI = _SpectrumAnalysisAverageRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 7),
    _SpectrumAnalysisAverageRSSI_Type()
)
spectrumAnalysisAverageRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisAverageRSSI.setStatus("current")
_SpectrumAnalysisSignalToNoiseRatio_Type = Integer32
_SpectrumAnalysisSignalToNoiseRatio_Object = MibTableColumn
spectrumAnalysisSignalToNoiseRatio = _SpectrumAnalysisSignalToNoiseRatio_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 8),
    _SpectrumAnalysisSignalToNoiseRatio_Type()
)
spectrumAnalysisSignalToNoiseRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisSignalToNoiseRatio.setStatus("current")
_SpectrumAnalysisNoiseFloor_Type = Integer32
_SpectrumAnalysisNoiseFloor_Object = MibTableColumn
spectrumAnalysisNoiseFloor = _SpectrumAnalysisNoiseFloor_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 9),
    _SpectrumAnalysisNoiseFloor_Type()
)
spectrumAnalysisNoiseFloor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisNoiseFloor.setStatus("current")
_SpectrumAnalysisDot11Busy_Type = Integer32
_SpectrumAnalysisDot11Busy_Object = MibTableColumn
spectrumAnalysisDot11Busy = _SpectrumAnalysisDot11Busy_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 10),
    _SpectrumAnalysisDot11Busy_Type()
)
spectrumAnalysisDot11Busy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisDot11Busy.setStatus("current")
_SpectrumAnalysisNoise_Type = Integer32
_SpectrumAnalysisNoise_Object = MibTableColumn
spectrumAnalysisNoise = _SpectrumAnalysisNoise_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 11),
    _SpectrumAnalysisNoise_Type()
)
spectrumAnalysisNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spectrumAnalysisNoise.setStatus("current")
_RealtimeMonitorTable_Object = MibTable
realtimeMonitorTable = _RealtimeMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7)
)
if mibBuilder.loadTexts:
    realtimeMonitorTable.setStatus("current")
_RealtimeMonitorEntry_Object = MibTableRow
realtimeMonitorEntry = _RealtimeMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1)
)
realtimeMonitorEntry.setIndexNames(
    (0, "XIRRUS-MIB", "realtimeMonitorIndex"),
)
if mibBuilder.loadTexts:
    realtimeMonitorEntry.setStatus("current")
_RealtimeMonitorIndex_Type = Integer32
_RealtimeMonitorIndex_Object = MibTableColumn
realtimeMonitorIndex = _RealtimeMonitorIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 1),
    _RealtimeMonitorIndex_Type()
)
realtimeMonitorIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    realtimeMonitorIndex.setStatus("current")
_RealtimeMonitorIfaceName_Type = DisplayString
_RealtimeMonitorIfaceName_Object = MibTableColumn
realtimeMonitorIfaceName = _RealtimeMonitorIfaceName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 2),
    _RealtimeMonitorIfaceName_Type()
)
realtimeMonitorIfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorIfaceName.setStatus("current")
_RealtimeMonitorChannel_Type = Integer32
_RealtimeMonitorChannel_Object = MibTableColumn
realtimeMonitorChannel = _RealtimeMonitorChannel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 3),
    _RealtimeMonitorChannel_Type()
)
realtimeMonitorChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorChannel.setStatus("current")
_RealtimeMonitorPackets_Type = Integer32
_RealtimeMonitorPackets_Object = MibTableColumn
realtimeMonitorPackets = _RealtimeMonitorPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 4),
    _RealtimeMonitorPackets_Type()
)
realtimeMonitorPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorPackets.setStatus("current")
_RealtimeMonitorBytes_Type = Integer32
_RealtimeMonitorBytes_Object = MibTableColumn
realtimeMonitorBytes = _RealtimeMonitorBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 5),
    _RealtimeMonitorBytes_Type()
)
realtimeMonitorBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorBytes.setStatus("current")
_RealtimeMonitorErrorRate_Type = Integer32
_RealtimeMonitorErrorRate_Object = MibTableColumn
realtimeMonitorErrorRate = _RealtimeMonitorErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 6),
    _RealtimeMonitorErrorRate_Type()
)
realtimeMonitorErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorErrorRate.setStatus("current")
_RealtimeMonitorAverageDataRate_Type = Integer32
_RealtimeMonitorAverageDataRate_Object = MibTableColumn
realtimeMonitorAverageDataRate = _RealtimeMonitorAverageDataRate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 7),
    _RealtimeMonitorAverageDataRate_Type()
)
realtimeMonitorAverageDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorAverageDataRate.setStatus("current")
_RealtimeMonitorAverageRSSI_Type = Integer32
_RealtimeMonitorAverageRSSI_Object = MibTableColumn
realtimeMonitorAverageRSSI = _RealtimeMonitorAverageRSSI_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 8),
    _RealtimeMonitorAverageRSSI_Type()
)
realtimeMonitorAverageRSSI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorAverageRSSI.setStatus("current")
_RealtimeMonitorSignalToNoiseRatio_Type = Integer32
_RealtimeMonitorSignalToNoiseRatio_Object = MibTableColumn
realtimeMonitorSignalToNoiseRatio = _RealtimeMonitorSignalToNoiseRatio_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 9),
    _RealtimeMonitorSignalToNoiseRatio_Type()
)
realtimeMonitorSignalToNoiseRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorSignalToNoiseRatio.setStatus("current")
_RealtimeMonitorNoiseFloor_Type = Integer32
_RealtimeMonitorNoiseFloor_Object = MibTableColumn
realtimeMonitorNoiseFloor = _RealtimeMonitorNoiseFloor_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 10),
    _RealtimeMonitorNoiseFloor_Type()
)
realtimeMonitorNoiseFloor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorNoiseFloor.setStatus("current")
_RealtimeMonitorDot11Busy_Type = Integer32
_RealtimeMonitorDot11Busy_Object = MibTableColumn
realtimeMonitorDot11Busy = _RealtimeMonitorDot11Busy_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 11),
    _RealtimeMonitorDot11Busy_Type()
)
realtimeMonitorDot11Busy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorDot11Busy.setStatus("current")
_RealtimeMonitorNoise_Type = Integer32
_RealtimeMonitorNoise_Object = MibTableColumn
realtimeMonitorNoise = _RealtimeMonitorNoise_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 12),
    _RealtimeMonitorNoise_Type()
)
realtimeMonitorNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realtimeMonitorNoise.setStatus("current")
_StationAppStatsTable_Object = MibTable
stationAppStatsTable = _StationAppStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8)
)
if mibBuilder.loadTexts:
    stationAppStatsTable.setStatus("current")
_StationAppStatsEntry_Object = MibTableRow
stationAppStatsEntry = _StationAppStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1)
)
stationAppStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationAppStatsIndex"),
)
if mibBuilder.loadTexts:
    stationAppStatsEntry.setStatus("current")
_StationAppStatsIndex_Type = Integer32
_StationAppStatsIndex_Object = MibTableColumn
stationAppStatsIndex = _StationAppStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 1),
    _StationAppStatsIndex_Type()
)
stationAppStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stationAppStatsIndex.setStatus("current")
_StationAppStatsMACAddress_Type = DisplayString
_StationAppStatsMACAddress_Object = MibTableColumn
stationAppStatsMACAddress = _StationAppStatsMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 2),
    _StationAppStatsMACAddress_Type()
)
stationAppStatsMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsMACAddress.setStatus("current")
_StationAppStatsGuid_Type = DisplayString
_StationAppStatsGuid_Object = MibTableColumn
stationAppStatsGuid = _StationAppStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 3),
    _StationAppStatsGuid_Type()
)
stationAppStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsGuid.setStatus("current")
_StationAppStatsTxPackets_Type = Counter64
_StationAppStatsTxPackets_Object = MibTableColumn
stationAppStatsTxPackets = _StationAppStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 4),
    _StationAppStatsTxPackets_Type()
)
stationAppStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsTxPackets.setStatus("current")
_StationAppStatsRxPackets_Type = Counter64
_StationAppStatsRxPackets_Object = MibTableColumn
stationAppStatsRxPackets = _StationAppStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 5),
    _StationAppStatsRxPackets_Type()
)
stationAppStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsRxPackets.setStatus("current")
_StationAppStatsTxBytes_Type = Counter64
_StationAppStatsTxBytes_Object = MibTableColumn
stationAppStatsTxBytes = _StationAppStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 6),
    _StationAppStatsTxBytes_Type()
)
stationAppStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsTxBytes.setStatus("current")
_StationAppStatsRxBytes_Type = Counter64
_StationAppStatsRxBytes_Object = MibTableColumn
stationAppStatsRxBytes = _StationAppStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 7),
    _StationAppStatsRxBytes_Type()
)
stationAppStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsRxBytes.setStatus("current")
_StationAppStatsTimePeriod_Type = Counter32
_StationAppStatsTimePeriod_Object = MibTableColumn
stationAppStatsTimePeriod = _StationAppStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 8),
    _StationAppStatsTimePeriod_Type()
)
stationAppStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppStatsTimePeriod.setStatus("current")
_StationAppCatStatsTable_Object = MibTable
stationAppCatStatsTable = _StationAppCatStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9)
)
if mibBuilder.loadTexts:
    stationAppCatStatsTable.setStatus("current")
_StationAppCatStatsEntry_Object = MibTableRow
stationAppCatStatsEntry = _StationAppCatStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1)
)
stationAppCatStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "stationAppCatStatsIndex"),
)
if mibBuilder.loadTexts:
    stationAppCatStatsEntry.setStatus("current")
_StationAppCatStatsIndex_Type = Integer32
_StationAppCatStatsIndex_Object = MibTableColumn
stationAppCatStatsIndex = _StationAppCatStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 1),
    _StationAppCatStatsIndex_Type()
)
stationAppCatStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stationAppCatStatsIndex.setStatus("current")
_StationAppCatStatsMACAddress_Type = DisplayString
_StationAppCatStatsMACAddress_Object = MibTableColumn
stationAppCatStatsMACAddress = _StationAppCatStatsMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 2),
    _StationAppCatStatsMACAddress_Type()
)
stationAppCatStatsMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsMACAddress.setStatus("current")
_StationAppCatStatsGuid_Type = DisplayString
_StationAppCatStatsGuid_Object = MibTableColumn
stationAppCatStatsGuid = _StationAppCatStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 3),
    _StationAppCatStatsGuid_Type()
)
stationAppCatStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsGuid.setStatus("current")
_StationAppCatStatsTxPackets_Type = Counter64
_StationAppCatStatsTxPackets_Object = MibTableColumn
stationAppCatStatsTxPackets = _StationAppCatStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 4),
    _StationAppCatStatsTxPackets_Type()
)
stationAppCatStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsTxPackets.setStatus("current")
_StationAppCatStatsRxPackets_Type = Counter64
_StationAppCatStatsRxPackets_Object = MibTableColumn
stationAppCatStatsRxPackets = _StationAppCatStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 5),
    _StationAppCatStatsRxPackets_Type()
)
stationAppCatStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsRxPackets.setStatus("current")
_StationAppCatStatsTxBytes_Type = Counter64
_StationAppCatStatsTxBytes_Object = MibTableColumn
stationAppCatStatsTxBytes = _StationAppCatStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 6),
    _StationAppCatStatsTxBytes_Type()
)
stationAppCatStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsTxBytes.setStatus("current")
_StationAppCatStatsRxBytes_Type = Counter64
_StationAppCatStatsRxBytes_Object = MibTableColumn
stationAppCatStatsRxBytes = _StationAppCatStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 7),
    _StationAppCatStatsRxBytes_Type()
)
stationAppCatStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsRxBytes.setStatus("current")
_StationAppCatStatsTimePeriod_Type = Counter32
_StationAppCatStatsTimePeriod_Object = MibTableColumn
stationAppCatStatsTimePeriod = _StationAppCatStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 8),
    _StationAppCatStatsTimePeriod_Type()
)
stationAppCatStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stationAppCatStatsTimePeriod.setStatus("current")
_VlanMgmtAppStatsTable_Object = MibTable
vlanMgmtAppStatsTable = _VlanMgmtAppStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10)
)
if mibBuilder.loadTexts:
    vlanMgmtAppStatsTable.setStatus("current")
_VlanMgmtAppStatsEntry_Object = MibTableRow
vlanMgmtAppStatsEntry = _VlanMgmtAppStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1)
)
vlanMgmtAppStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanMgmtAppStatsIndex"),
)
if mibBuilder.loadTexts:
    vlanMgmtAppStatsEntry.setStatus("current")
_VlanMgmtAppStatsIndex_Type = Integer32
_VlanMgmtAppStatsIndex_Object = MibTableColumn
vlanMgmtAppStatsIndex = _VlanMgmtAppStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 1),
    _VlanMgmtAppStatsIndex_Type()
)
vlanMgmtAppStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsIndex.setStatus("current")
_VlanMgmtAppStatsVlan_Type = Integer32
_VlanMgmtAppStatsVlan_Object = MibTableColumn
vlanMgmtAppStatsVlan = _VlanMgmtAppStatsVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 2),
    _VlanMgmtAppStatsVlan_Type()
)
vlanMgmtAppStatsVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsVlan.setStatus("current")
_VlanMgmtAppStatsGuid_Type = DisplayString
_VlanMgmtAppStatsGuid_Object = MibTableColumn
vlanMgmtAppStatsGuid = _VlanMgmtAppStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 3),
    _VlanMgmtAppStatsGuid_Type()
)
vlanMgmtAppStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsGuid.setStatus("current")
_VlanMgmtAppStatsTxPackets_Type = Counter64
_VlanMgmtAppStatsTxPackets_Object = MibTableColumn
vlanMgmtAppStatsTxPackets = _VlanMgmtAppStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 4),
    _VlanMgmtAppStatsTxPackets_Type()
)
vlanMgmtAppStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsTxPackets.setStatus("current")
_VlanMgmtAppStatsRxPackets_Type = Counter64
_VlanMgmtAppStatsRxPackets_Object = MibTableColumn
vlanMgmtAppStatsRxPackets = _VlanMgmtAppStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 5),
    _VlanMgmtAppStatsRxPackets_Type()
)
vlanMgmtAppStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsRxPackets.setStatus("current")
_VlanMgmtAppStatsTxBytes_Type = Counter64
_VlanMgmtAppStatsTxBytes_Object = MibTableColumn
vlanMgmtAppStatsTxBytes = _VlanMgmtAppStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 6),
    _VlanMgmtAppStatsTxBytes_Type()
)
vlanMgmtAppStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsTxBytes.setStatus("current")
_VlanMgmtAppStatsRxBytes_Type = Counter64
_VlanMgmtAppStatsRxBytes_Object = MibTableColumn
vlanMgmtAppStatsRxBytes = _VlanMgmtAppStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 7),
    _VlanMgmtAppStatsRxBytes_Type()
)
vlanMgmtAppStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsRxBytes.setStatus("current")
_VlanMgmtAppStatsTimePeriod_Type = Counter32
_VlanMgmtAppStatsTimePeriod_Object = MibTableColumn
vlanMgmtAppStatsTimePeriod = _VlanMgmtAppStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 8),
    _VlanMgmtAppStatsTimePeriod_Type()
)
vlanMgmtAppStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsTimePeriod.setStatus("current")
_VlanMgmtAppCatStatsTable_Object = MibTable
vlanMgmtAppCatStatsTable = _VlanMgmtAppCatStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11)
)
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsTable.setStatus("current")
_VlanMgmtAppCatStatsEntry_Object = MibTableRow
vlanMgmtAppCatStatsEntry = _VlanMgmtAppCatStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1)
)
vlanMgmtAppCatStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanMgmtAppCatStatsIndex"),
)
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsEntry.setStatus("current")
_VlanMgmtAppCatStatsIndex_Type = Integer32
_VlanMgmtAppCatStatsIndex_Object = MibTableColumn
vlanMgmtAppCatStatsIndex = _VlanMgmtAppCatStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 1),
    _VlanMgmtAppCatStatsIndex_Type()
)
vlanMgmtAppCatStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsIndex.setStatus("current")
_VlanMgmtAppCatStatsVlan_Type = Integer32
_VlanMgmtAppCatStatsVlan_Object = MibTableColumn
vlanMgmtAppCatStatsVlan = _VlanMgmtAppCatStatsVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 2),
    _VlanMgmtAppCatStatsVlan_Type()
)
vlanMgmtAppCatStatsVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsVlan.setStatus("current")
_VlanMgmtAppCatStatsGuid_Type = DisplayString
_VlanMgmtAppCatStatsGuid_Object = MibTableColumn
vlanMgmtAppCatStatsGuid = _VlanMgmtAppCatStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 3),
    _VlanMgmtAppCatStatsGuid_Type()
)
vlanMgmtAppCatStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsGuid.setStatus("current")
_VlanMgmtAppCatStatsTxPackets_Type = Counter64
_VlanMgmtAppCatStatsTxPackets_Object = MibTableColumn
vlanMgmtAppCatStatsTxPackets = _VlanMgmtAppCatStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 4),
    _VlanMgmtAppCatStatsTxPackets_Type()
)
vlanMgmtAppCatStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsTxPackets.setStatus("current")
_VlanMgmtAppCatStatsRxPackets_Type = Counter64
_VlanMgmtAppCatStatsRxPackets_Object = MibTableColumn
vlanMgmtAppCatStatsRxPackets = _VlanMgmtAppCatStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 5),
    _VlanMgmtAppCatStatsRxPackets_Type()
)
vlanMgmtAppCatStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsRxPackets.setStatus("current")
_VlanMgmtAppCatStatsTxBytes_Type = Counter64
_VlanMgmtAppCatStatsTxBytes_Object = MibTableColumn
vlanMgmtAppCatStatsTxBytes = _VlanMgmtAppCatStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 6),
    _VlanMgmtAppCatStatsTxBytes_Type()
)
vlanMgmtAppCatStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsTxBytes.setStatus("current")
_VlanMgmtAppCatStatsRxBytes_Type = Counter64
_VlanMgmtAppCatStatsRxBytes_Object = MibTableColumn
vlanMgmtAppCatStatsRxBytes = _VlanMgmtAppCatStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 7),
    _VlanMgmtAppCatStatsRxBytes_Type()
)
vlanMgmtAppCatStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsRxBytes.setStatus("current")
_VlanMgmtAppCatStatsTimePeriod_Type = Counter32
_VlanMgmtAppCatStatsTimePeriod_Object = MibTableColumn
vlanMgmtAppCatStatsTimePeriod = _VlanMgmtAppCatStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 8),
    _VlanMgmtAppCatStatsTimePeriod_Type()
)
vlanMgmtAppCatStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanMgmtAppCatStatsTimePeriod.setStatus("current")
_VlanStaAppStatsTable_Object = MibTable
vlanStaAppStatsTable = _VlanStaAppStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12)
)
if mibBuilder.loadTexts:
    vlanStaAppStatsTable.setStatus("current")
_VlanStaAppStatsEntry_Object = MibTableRow
vlanStaAppStatsEntry = _VlanStaAppStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1)
)
vlanStaAppStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanStaAppStatsIndex"),
)
if mibBuilder.loadTexts:
    vlanStaAppStatsEntry.setStatus("current")
_VlanStaAppStatsIndex_Type = Integer32
_VlanStaAppStatsIndex_Object = MibTableColumn
vlanStaAppStatsIndex = _VlanStaAppStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 1),
    _VlanStaAppStatsIndex_Type()
)
vlanStaAppStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanStaAppStatsIndex.setStatus("current")
_VlanStaAppStatsVlan_Type = Integer32
_VlanStaAppStatsVlan_Object = MibTableColumn
vlanStaAppStatsVlan = _VlanStaAppStatsVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 2),
    _VlanStaAppStatsVlan_Type()
)
vlanStaAppStatsVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsVlan.setStatus("current")
_VlanStaAppStatsGuid_Type = DisplayString
_VlanStaAppStatsGuid_Object = MibTableColumn
vlanStaAppStatsGuid = _VlanStaAppStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 3),
    _VlanStaAppStatsGuid_Type()
)
vlanStaAppStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsGuid.setStatus("current")
_VlanStaAppStatsTxPackets_Type = Counter64
_VlanStaAppStatsTxPackets_Object = MibTableColumn
vlanStaAppStatsTxPackets = _VlanStaAppStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 4),
    _VlanStaAppStatsTxPackets_Type()
)
vlanStaAppStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsTxPackets.setStatus("current")
_VlanStaAppStatsRxPackets_Type = Counter64
_VlanStaAppStatsRxPackets_Object = MibTableColumn
vlanStaAppStatsRxPackets = _VlanStaAppStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 5),
    _VlanStaAppStatsRxPackets_Type()
)
vlanStaAppStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsRxPackets.setStatus("current")
_VlanStaAppStatsTxBytes_Type = Counter64
_VlanStaAppStatsTxBytes_Object = MibTableColumn
vlanStaAppStatsTxBytes = _VlanStaAppStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 6),
    _VlanStaAppStatsTxBytes_Type()
)
vlanStaAppStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsTxBytes.setStatus("current")
_VlanStaAppStatsRxBytes_Type = Counter64
_VlanStaAppStatsRxBytes_Object = MibTableColumn
vlanStaAppStatsRxBytes = _VlanStaAppStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 7),
    _VlanStaAppStatsRxBytes_Type()
)
vlanStaAppStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsRxBytes.setStatus("current")
_VlanStaAppStatsTimePeriod_Type = Counter32
_VlanStaAppStatsTimePeriod_Object = MibTableColumn
vlanStaAppStatsTimePeriod = _VlanStaAppStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 8),
    _VlanStaAppStatsTimePeriod_Type()
)
vlanStaAppStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppStatsTimePeriod.setStatus("current")
_VlanStaAppCatStatsTable_Object = MibTable
vlanStaAppCatStatsTable = _VlanStaAppCatStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13)
)
if mibBuilder.loadTexts:
    vlanStaAppCatStatsTable.setStatus("current")
_VlanStaAppCatStatsEntry_Object = MibTableRow
vlanStaAppCatStatsEntry = _VlanStaAppCatStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1)
)
vlanStaAppCatStatsEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanStaAppCatStatsIndex"),
)
if mibBuilder.loadTexts:
    vlanStaAppCatStatsEntry.setStatus("current")
_VlanStaAppCatStatsIndex_Type = Integer32
_VlanStaAppCatStatsIndex_Object = MibTableColumn
vlanStaAppCatStatsIndex = _VlanStaAppCatStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 1),
    _VlanStaAppCatStatsIndex_Type()
)
vlanStaAppCatStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsIndex.setStatus("current")
_VlanStaAppCatStatsVlan_Type = Integer32
_VlanStaAppCatStatsVlan_Object = MibTableColumn
vlanStaAppCatStatsVlan = _VlanStaAppCatStatsVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 2),
    _VlanStaAppCatStatsVlan_Type()
)
vlanStaAppCatStatsVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsVlan.setStatus("current")
_VlanStaAppCatStatsGuid_Type = DisplayString
_VlanStaAppCatStatsGuid_Object = MibTableColumn
vlanStaAppCatStatsGuid = _VlanStaAppCatStatsGuid_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 3),
    _VlanStaAppCatStatsGuid_Type()
)
vlanStaAppCatStatsGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsGuid.setStatus("current")
_VlanStaAppCatStatsTxPackets_Type = Counter64
_VlanStaAppCatStatsTxPackets_Object = MibTableColumn
vlanStaAppCatStatsTxPackets = _VlanStaAppCatStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 4),
    _VlanStaAppCatStatsTxPackets_Type()
)
vlanStaAppCatStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsTxPackets.setStatus("current")
_VlanStaAppCatStatsRxPackets_Type = Counter64
_VlanStaAppCatStatsRxPackets_Object = MibTableColumn
vlanStaAppCatStatsRxPackets = _VlanStaAppCatStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 5),
    _VlanStaAppCatStatsRxPackets_Type()
)
vlanStaAppCatStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsRxPackets.setStatus("current")
_VlanStaAppCatStatsTxBytes_Type = Counter64
_VlanStaAppCatStatsTxBytes_Object = MibTableColumn
vlanStaAppCatStatsTxBytes = _VlanStaAppCatStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 6),
    _VlanStaAppCatStatsTxBytes_Type()
)
vlanStaAppCatStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsTxBytes.setStatus("current")
_VlanStaAppCatStatsRxBytes_Type = Counter64
_VlanStaAppCatStatsRxBytes_Object = MibTableColumn
vlanStaAppCatStatsRxBytes = _VlanStaAppCatStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 7),
    _VlanStaAppCatStatsRxBytes_Type()
)
vlanStaAppCatStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsRxBytes.setStatus("current")
_VlanStaAppCatStatsTimePeriod_Type = Counter32
_VlanStaAppCatStatsTimePeriod_Object = MibTableColumn
vlanStaAppCatStatsTimePeriod = _VlanStaAppCatStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 8),
    _VlanStaAppCatStatsTimePeriod_Type()
)
vlanStaAppCatStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStaAppCatStatsTimePeriod.setStatus("current")


class _StationAppStatsTablePeriod_Type(Counter32):
    """Custom type stationAppStatsTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_StationAppStatsTablePeriod_Type.__name__ = "Counter32"
_StationAppStatsTablePeriod_Object = MibScalar
stationAppStatsTablePeriod = _StationAppStatsTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 14),
    _StationAppStatsTablePeriod_Type()
)
stationAppStatsTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAppStatsTablePeriod.setStatus("current")


class _StationAppStatsTableClear_Type(Integer32):
    """Custom type stationAppStatsTableClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_StationAppStatsTableClear_Type.__name__ = "Integer32"
_StationAppStatsTableClear_Object = MibScalar
stationAppStatsTableClear = _StationAppStatsTableClear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 15),
    _StationAppStatsTableClear_Type()
)
stationAppStatsTableClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stationAppStatsTableClear.setStatus("current")


class _VlanStaAppStatsTablePeriod_Type(Counter32):
    """Custom type vlanStaAppStatsTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_VlanStaAppStatsTablePeriod_Type.__name__ = "Counter32"
_VlanStaAppStatsTablePeriod_Object = MibScalar
vlanStaAppStatsTablePeriod = _VlanStaAppStatsTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 16),
    _VlanStaAppStatsTablePeriod_Type()
)
vlanStaAppStatsTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanStaAppStatsTablePeriod.setStatus("current")


class _VlanMgmtAppStatsTablePeriod_Type(Counter32):
    """Custom type vlanMgmtAppStatsTablePeriod based on Counter32"""
    subtypeSpec = Counter32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )


_VlanMgmtAppStatsTablePeriod_Type.__name__ = "Counter32"
_VlanMgmtAppStatsTablePeriod_Object = MibScalar
vlanMgmtAppStatsTablePeriod = _VlanMgmtAppStatsTablePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 17),
    _VlanMgmtAppStatsTablePeriod_Type()
)
vlanMgmtAppStatsTablePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanMgmtAppStatsTablePeriod.setStatus("current")
_Syslog_ObjectIdentity = ObjectIdentity
syslog = _Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26)
)


class _SyslogEnable_Type(Integer32):
    """Custom type syslogEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SyslogEnable_Type.__name__ = "Integer32"
_SyslogEnable_Object = MibScalar
syslogEnable = _SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 1),
    _SyslogEnable_Type()
)
syslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEnable.setStatus("current")


class _SyslogLevel_Type(Integer32):
    """Custom type syslogLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogLevel_Type.__name__ = "Integer32"
_SyslogLevel_Object = MibScalar
syslogLevel = _SyslogLevel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 2),
    _SyslogLevel_Type()
)
syslogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogLevel.setStatus("current")


class _SyslogServer_Type(DisplayString):
    """Custom type syslogServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogServer_Type.__name__ = "DisplayString"
_SyslogServer_Object = MibScalar
syslogServer = _SyslogServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 3),
    _SyslogServer_Type()
)
syslogServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServer.setStatus("current")


class _SyslogConsole_Type(Integer32):
    """Custom type syslogConsole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SyslogConsole_Type.__name__ = "Integer32"
_SyslogConsole_Object = MibScalar
syslogConsole = _SyslogConsole_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 4),
    _SyslogConsole_Type()
)
syslogConsole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogConsole.setStatus("current")


class _SyslogSize_Type(Integer32):
    """Custom type syslogSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
    )


_SyslogSize_Type.__name__ = "Integer32"
_SyslogSize_Object = MibScalar
syslogSize = _SyslogSize_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 5),
    _SyslogSize_Type()
)
syslogSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSize.setStatus("current")
_SyslogTable_Object = MibTable
syslogTable = _SyslogTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6)
)
if mibBuilder.loadTexts:
    syslogTable.setStatus("current")
_SyslogEntry_Object = MibTableRow
syslogEntry = _SyslogEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1)
)
syslogEntry.setIndexNames(
    (0, "XIRRUS-MIB", "syslogIndex"),
)
if mibBuilder.loadTexts:
    syslogEntry.setStatus("current")
_SyslogIndex_Type = Integer32
_SyslogIndex_Object = MibTableColumn
syslogIndex = _SyslogIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 1),
    _SyslogIndex_Type()
)
syslogIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    syslogIndex.setStatus("current")
_SyslogTimestamp_Type = DisplayString
_SyslogTimestamp_Object = MibTableColumn
syslogTimestamp = _SyslogTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 2),
    _SyslogTimestamp_Type()
)
syslogTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogTimestamp.setStatus("current")
_SyslogPriority_Type = DisplayString
_SyslogPriority_Object = MibTableColumn
syslogPriority = _SyslogPriority_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 3),
    _SyslogPriority_Type()
)
syslogPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogPriority.setStatus("current")


class _SyslogMessage_Type(OctetString):
    """Custom type syslogMessage based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 500),
    )


_SyslogMessage_Type.__name__ = "OctetString"
_SyslogMessage_Object = MibTableColumn
syslogMessage = _SyslogMessage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 4),
    _SyslogMessage_Type()
)
syslogMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogMessage.setStatus("current")


class _SyslogSecServer_Type(DisplayString):
    """Custom type syslogSecServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogSecServer_Type.__name__ = "DisplayString"
_SyslogSecServer_Object = MibScalar
syslogSecServer = _SyslogSecServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 7),
    _SyslogSecServer_Type()
)
syslogSecServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSecServer.setStatus("current")


class _SyslogLevelConsole_Type(Integer32):
    """Custom type syslogLevelConsole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogLevelConsole_Type.__name__ = "Integer32"
_SyslogLevelConsole_Object = MibScalar
syslogLevelConsole = _SyslogLevelConsole_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 8),
    _SyslogLevelConsole_Type()
)
syslogLevelConsole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogLevelConsole.setStatus("current")


class _SyslogLevelPriServer_Type(Integer32):
    """Custom type syslogLevelPriServer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogLevelPriServer_Type.__name__ = "Integer32"
_SyslogLevelPriServer_Object = MibScalar
syslogLevelPriServer = _SyslogLevelPriServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 9),
    _SyslogLevelPriServer_Type()
)
syslogLevelPriServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogLevelPriServer.setStatus("current")


class _SyslogLevelSecServer_Type(Integer32):
    """Custom type syslogLevelSecServer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogLevelSecServer_Type.__name__ = "Integer32"
_SyslogLevelSecServer_Object = MibScalar
syslogLevelSecServer = _SyslogLevelSecServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 10),
    _SyslogLevelSecServer_Type()
)
syslogLevelSecServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogLevelSecServer.setStatus("current")


class _SyslogTerServer_Type(DisplayString):
    """Custom type syslogTerServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogTerServer_Type.__name__ = "DisplayString"
_SyslogTerServer_Object = MibScalar
syslogTerServer = _SyslogTerServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 11),
    _SyslogTerServer_Type()
)
syslogTerServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTerServer.setStatus("current")


class _SyslogLevelTerServer_Type(Integer32):
    """Custom type syslogLevelTerServer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogLevelTerServer_Type.__name__ = "Integer32"
_SyslogLevelTerServer_Object = MibScalar
syslogLevelTerServer = _SyslogLevelTerServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 12),
    _SyslogLevelTerServer_Type()
)
syslogLevelTerServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogLevelTerServer.setStatus("current")


class _SyslogEmailServer_Type(DisplayString):
    """Custom type syslogEmailServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogEmailServer_Type.__name__ = "DisplayString"
_SyslogEmailServer_Object = MibScalar
syslogEmailServer = _SyslogEmailServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 13),
    _SyslogEmailServer_Type()
)
syslogEmailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailServer.setStatus("current")


class _SyslogEmailLevel_Type(Integer32):
    """Custom type syslogEmailLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SyslogEmailLevel_Type.__name__ = "Integer32"
_SyslogEmailLevel_Object = MibScalar
syslogEmailLevel = _SyslogEmailLevel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 14),
    _SyslogEmailLevel_Type()
)
syslogEmailLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailLevel.setStatus("current")


class _SyslogEmailFromAddress_Type(DisplayString):
    """Custom type syslogEmailFromAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogEmailFromAddress_Type.__name__ = "DisplayString"
_SyslogEmailFromAddress_Object = MibScalar
syslogEmailFromAddress = _SyslogEmailFromAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 15),
    _SyslogEmailFromAddress_Type()
)
syslogEmailFromAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailFromAddress.setStatus("current")


class _SyslogEmailToAddress_Type(DisplayString):
    """Custom type syslogEmailToAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogEmailToAddress_Type.__name__ = "DisplayString"
_SyslogEmailToAddress_Object = MibScalar
syslogEmailToAddress = _SyslogEmailToAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 16),
    _SyslogEmailToAddress_Type()
)
syslogEmailToAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailToAddress.setStatus("current")


class _SyslogEmailUsername_Type(DisplayString):
    """Custom type syslogEmailUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SyslogEmailUsername_Type.__name__ = "DisplayString"
_SyslogEmailUsername_Object = MibScalar
syslogEmailUsername = _SyslogEmailUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 17),
    _SyslogEmailUsername_Type()
)
syslogEmailUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailUsername.setStatus("current")


class _SyslogEmailPassword_Type(DisplayString):
    """Custom type syslogEmailPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SyslogEmailPassword_Type.__name__ = "DisplayString"
_SyslogEmailPassword_Object = MibScalar
syslogEmailPassword = _SyslogEmailPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 18),
    _SyslogEmailPassword_Type()
)
syslogEmailPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailPassword.setStatus("current")


class _SyslogEmailPasswordEnc_Type(DisplayString):
    """Custom type syslogEmailPasswordEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SyslogEmailPasswordEnc_Type.__name__ = "DisplayString"
_SyslogEmailPasswordEnc_Object = MibScalar
syslogEmailPasswordEnc = _SyslogEmailPasswordEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 19),
    _SyslogEmailPasswordEnc_Type()
)
syslogEmailPasswordEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailPasswordEnc.setStatus("current")


class _SyslogEmailPort_Type(Integer32):
    """Custom type syslogEmailPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyslogEmailPort_Type.__name__ = "Integer32"
_SyslogEmailPort_Object = MibScalar
syslogEmailPort = _SyslogEmailPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 20),
    _SyslogEmailPort_Type()
)
syslogEmailPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEmailPort.setStatus("current")


class _SyslogPriServerPort_Type(Integer32):
    """Custom type syslogPriServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyslogPriServerPort_Type.__name__ = "Integer32"
_SyslogPriServerPort_Object = MibScalar
syslogPriServerPort = _SyslogPriServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 21),
    _SyslogPriServerPort_Type()
)
syslogPriServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogPriServerPort.setStatus("current")


class _SyslogSecServerPort_Type(Integer32):
    """Custom type syslogSecServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyslogSecServerPort_Type.__name__ = "Integer32"
_SyslogSecServerPort_Object = MibScalar
syslogSecServerPort = _SyslogSecServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 22),
    _SyslogSecServerPort_Type()
)
syslogSecServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSecServerPort.setStatus("current")


class _SyslogTerServerPort_Type(Integer32):
    """Custom type syslogTerServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyslogTerServerPort_Type.__name__ = "Integer32"
_SyslogTerServerPort_Object = MibScalar
syslogTerServerPort = _SyslogTerServerPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 23),
    _SyslogTerServerPort_Type()
)
syslogTerServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTerServerPort.setStatus("current")


class _SyslogStationFormat_Type(Integer32):
    """Custom type syslogStationFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("standard", 0),
          ("key-value", 1))
    )


_SyslogStationFormat_Type.__name__ = "Integer32"
_SyslogStationFormat_Object = MibScalar
syslogStationFormat = _SyslogStationFormat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 24),
    _SyslogStationFormat_Type()
)
syslogStationFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogStationFormat.setStatus("current")


class _SyslogTimeFormat_Type(Integer32):
    """Custom type syslogTimeFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("rfc3164", 0),
          ("rfc3339", 1))
    )


_SyslogTimeFormat_Type.__name__ = "Integer32"
_SyslogTimeFormat_Object = MibScalar
syslogTimeFormat = _SyslogTimeFormat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 25),
    _SyslogTimeFormat_Type()
)
syslogTimeFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTimeFormat.setStatus("current")


class _SyslogStationUrlLog_Type(Integer32):
    """Custom type syslogStationUrlLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SyslogStationUrlLog_Type.__name__ = "Integer32"
_SyslogStationUrlLog_Object = MibScalar
syslogStationUrlLog = _SyslogStationUrlLog_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 26),
    _SyslogStationUrlLog_Type()
)
syslogStationUrlLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogStationUrlLog.setStatus("current")
_System_ObjectIdentity = ObjectIdentity
system = _System_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28)
)


class _SystemHostname_Type(DisplayString):
    """Custom type systemHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_SystemHostname_Type.__name__ = "DisplayString"
_SystemHostname_Object = MibScalar
systemHostname = _SystemHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 1),
    _SystemHostname_Type()
)
systemHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemHostname.setStatus("current")


class _SystemLocation_Type(DisplayString):
    """Custom type systemLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SystemLocation_Type.__name__ = "DisplayString"
_SystemLocation_Object = MibScalar
systemLocation = _SystemLocation_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 2),
    _SystemLocation_Type()
)
systemLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemLocation.setStatus("current")


class _SystemContactName_Type(DisplayString):
    """Custom type systemContactName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SystemContactName_Type.__name__ = "DisplayString"
_SystemContactName_Object = MibScalar
systemContactName = _SystemContactName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 3),
    _SystemContactName_Type()
)
systemContactName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemContactName.setStatus("current")


class _SystemContactEmail_Type(DisplayString):
    """Custom type systemContactEmail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SystemContactEmail_Type.__name__ = "DisplayString"
_SystemContactEmail_Object = MibScalar
systemContactEmail = _SystemContactEmail_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 4),
    _SystemContactEmail_Type()
)
systemContactEmail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemContactEmail.setStatus("current")


class _SystemContactPhone_Type(DisplayString):
    """Custom type systemContactPhone based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SystemContactPhone_Type.__name__ = "DisplayString"
_SystemContactPhone_Object = MibScalar
systemContactPhone = _SystemContactPhone_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 5),
    _SystemContactPhone_Type()
)
systemContactPhone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemContactPhone.setStatus("current")


class _SystemTelnetEnable_Type(Integer32):
    """Custom type systemTelnetEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemTelnetEnable_Type.__name__ = "Integer32"
_SystemTelnetEnable_Object = MibScalar
systemTelnetEnable = _SystemTelnetEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 6),
    _SystemTelnetEnable_Type()
)
systemTelnetEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTelnetEnable.setStatus("current")


class _SystemTelnetTimeout_Type(Integer32):
    """Custom type systemTelnetTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 100000),
    )


_SystemTelnetTimeout_Type.__name__ = "Integer32"
_SystemTelnetTimeout_Object = MibScalar
systemTelnetTimeout = _SystemTelnetTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 7),
    _SystemTelnetTimeout_Type()
)
systemTelnetTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTelnetTimeout.setStatus("current")


class _SystemSshEnable_Type(Integer32):
    """Custom type systemSshEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemSshEnable_Type.__name__ = "Integer32"
_SystemSshEnable_Object = MibScalar
systemSshEnable = _SystemSshEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 8),
    _SystemSshEnable_Type()
)
systemSshEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSshEnable.setStatus("current")


class _SystemSshTimeout_Type(Integer32):
    """Custom type systemSshTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 100000),
    )


_SystemSshTimeout_Type.__name__ = "Integer32"
_SystemSshTimeout_Object = MibScalar
systemSshTimeout = _SystemSshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 9),
    _SystemSshTimeout_Type()
)
systemSshTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSshTimeout.setStatus("current")


class _SystemHttpsEnable_Type(Integer32):
    """Custom type systemHttpsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemHttpsEnable_Type.__name__ = "Integer32"
_SystemHttpsEnable_Object = MibScalar
systemHttpsEnable = _SystemHttpsEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 10),
    _SystemHttpsEnable_Type()
)
systemHttpsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemHttpsEnable.setStatus("current")


class _SystemHttpsTimeout_Type(Integer32):
    """Custom type systemHttpsTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 100000),
    )


_SystemHttpsTimeout_Type.__name__ = "Integer32"
_SystemHttpsTimeout_Object = MibScalar
systemHttpsTimeout = _SystemHttpsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 11),
    _SystemHttpsTimeout_Type()
)
systemHttpsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemHttpsTimeout.setStatus("current")


class _SystemReboot_Type(Integer32):
    """Custom type systemReboot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reboot", 1)
    )


_SystemReboot_Type.__name__ = "Integer32"
_SystemReboot_Object = MibScalar
systemReboot = _SystemReboot_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 12),
    _SystemReboot_Type()
)
systemReboot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemReboot.setStatus("current")


class _SystemReset_Type(Integer32):
    """Custom type systemReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_SystemReset_Type.__name__ = "Integer32"
_SystemReset_Object = MibScalar
systemReset = _SystemReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 13),
    _SystemReset_Type()
)
systemReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemReset.setStatus("current")


class _SystemSaveCfg_Type(Integer32):
    """Custom type systemSaveCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("save", 1)
    )


_SystemSaveCfg_Type.__name__ = "Integer32"
_SystemSaveCfg_Object = MibScalar
systemSaveCfg = _SystemSaveCfg_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 14),
    _SystemSaveCfg_Type()
)
systemSaveCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSaveCfg.setStatus("current")
_SystemUptime_Type = DisplayString
_SystemUptime_Object = MibScalar
systemUptime = _SystemUptime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 15),
    _SystemUptime_Type()
)
systemUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemUptime.setStatus("current")
_SystemArrayInfo_ObjectIdentity = ObjectIdentity
systemArrayInfo = _SystemArrayInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16)
)
_HardwareConfig_ObjectIdentity = ObjectIdentity
hardwareConfig = _HardwareConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1)
)
_ComponentTable_Object = MibTable
componentTable = _ComponentTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1)
)
if mibBuilder.loadTexts:
    componentTable.setStatus("current")
_ComponentEntry_Object = MibTableRow
componentEntry = _ComponentEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1)
)
componentEntry.setIndexNames(
    (0, "XIRRUS-MIB", "componentIndex"),
)
if mibBuilder.loadTexts:
    componentEntry.setStatus("current")
_ComponentIndex_Type = Integer32
_ComponentIndex_Object = MibTableColumn
componentIndex = _ComponentIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 1),
    _ComponentIndex_Type()
)
componentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    componentIndex.setStatus("current")
_ComponentName_Type = DisplayString
_ComponentName_Object = MibTableColumn
componentName = _ComponentName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 2),
    _ComponentName_Type()
)
componentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    componentName.setStatus("current")
_ComponentPart_Type = DisplayString
_ComponentPart_Object = MibTableColumn
componentPart = _ComponentPart_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 3),
    _ComponentPart_Type()
)
componentPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    componentPart.setStatus("current")
_ComponentSerial_Type = DisplayString
_ComponentSerial_Object = MibTableColumn
componentSerial = _ComponentSerial_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 4),
    _ComponentSerial_Type()
)
componentSerial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    componentSerial.setStatus("current")
_ComponentDate_Type = DisplayString
_ComponentDate_Object = MibTableColumn
componentDate = _ComponentDate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 5),
    _ComponentDate_Type()
)
componentDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    componentDate.setStatus("current")
_FpgaTable_Object = MibTable
fpgaTable = _FpgaTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2)
)
if mibBuilder.loadTexts:
    fpgaTable.setStatus("current")
_FpgaEntry_Object = MibTableRow
fpgaEntry = _FpgaEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1)
)
fpgaEntry.setIndexNames(
    (0, "XIRRUS-MIB", "fpgaIndex"),
)
if mibBuilder.loadTexts:
    fpgaEntry.setStatus("current")
_FpgaIndex_Type = Integer32
_FpgaIndex_Object = MibTableColumn
fpgaIndex = _FpgaIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 1),
    _FpgaIndex_Type()
)
fpgaIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fpgaIndex.setStatus("current")
_FpgaName_Type = DisplayString
_FpgaName_Object = MibTableColumn
fpgaName = _FpgaName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 2),
    _FpgaName_Type()
)
fpgaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fpgaName.setStatus("current")
_FpgaBootVersion_Type = DisplayString
_FpgaBootVersion_Object = MibTableColumn
fpgaBootVersion = _FpgaBootVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 3),
    _FpgaBootVersion_Type()
)
fpgaBootVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fpgaBootVersion.setStatus("current")
_FpgaSWVersion_Type = DisplayString
_FpgaSWVersion_Object = MibTableColumn
fpgaSWVersion = _FpgaSWVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 4),
    _FpgaSWVersion_Type()
)
fpgaSWVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fpgaSWVersion.setStatus("current")
_InterfaceMACAddressTable_Object = MibTable
interfaceMACAddressTable = _InterfaceMACAddressTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3)
)
if mibBuilder.loadTexts:
    interfaceMACAddressTable.setStatus("current")
_InterfaceMACAddressEntry_Object = MibTableRow
interfaceMACAddressEntry = _InterfaceMACAddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1)
)
interfaceMACAddressEntry.setIndexNames(
    (0, "XIRRUS-MIB", "interfaceMACAddressIndex"),
)
if mibBuilder.loadTexts:
    interfaceMACAddressEntry.setStatus("current")
_InterfaceMACAddressIndex_Type = Integer32
_InterfaceMACAddressIndex_Object = MibTableColumn
interfaceMACAddressIndex = _InterfaceMACAddressIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 1),
    _InterfaceMACAddressIndex_Type()
)
interfaceMACAddressIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    interfaceMACAddressIndex.setStatus("current")
_InterfaceName_Type = DisplayString
_InterfaceName_Object = MibTableColumn
interfaceName = _InterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 2),
    _InterfaceName_Type()
)
interfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceName.setStatus("current")
_InterfaceMACAddress_Type = DisplayString
_InterfaceMACAddress_Object = MibTableColumn
interfaceMACAddress = _InterfaceMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 3),
    _InterfaceMACAddress_Type()
)
interfaceMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceMACAddress.setStatus("current")
_ArrayModel_Type = DisplayString
_ArrayModel_Object = MibScalar
arrayModel = _ArrayModel_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 4),
    _ArrayModel_Type()
)
arrayModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arrayModel.setStatus("current")
_SoftwareConfig_ObjectIdentity = ObjectIdentity
softwareConfig = _SoftwareConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2)
)
_BootLoaderVersion_Type = DisplayString
_BootLoaderVersion_Object = MibScalar
bootLoaderVersion = _BootLoaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 1),
    _BootLoaderVersion_Type()
)
bootLoaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bootLoaderVersion.setStatus("current")
_IapDriverVersion_Type = DisplayString
_IapDriverVersion_Object = MibScalar
iapDriverVersion = _IapDriverVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 2),
    _IapDriverVersion_Type()
)
iapDriverVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iapDriverVersion.setStatus("current")
_SoftwareVersion_Type = DisplayString
_SoftwareVersion_Object = MibScalar
softwareVersion = _SoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 3),
    _SoftwareVersion_Type()
)
softwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    softwareVersion.setStatus("current")
_TimeThisBoot_Type = DisplayString
_TimeThisBoot_Object = MibScalar
timeThisBoot = _TimeThisBoot_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 4),
    _TimeThisBoot_Type()
)
timeThisBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timeThisBoot.setStatus("current")
_TimeLastBoot_Type = DisplayString
_TimeLastBoot_Object = MibScalar
timeLastBoot = _TimeLastBoot_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 5),
    _TimeLastBoot_Type()
)
timeLastBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timeLastBoot.setStatus("current")
_ScdFirmwareVersion_Type = DisplayString
_ScdFirmwareVersion_Object = MibScalar
scdFirmwareVersion = _ScdFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 6),
    _ScdFirmwareVersion_Type()
)
scdFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scdFirmwareVersion.setStatus("current")
_SystemMIBVersion_Type = DisplayString
_SystemMIBVersion_Object = MibScalar
systemMIBVersion = _SystemMIBVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 17),
    _SystemMIBVersion_Type()
)
systemMIBVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemMIBVersion.setStatus("current")


class _SystemGroupName_Type(DisplayString):
    """Custom type systemGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SystemGroupName_Type.__name__ = "DisplayString"
_SystemGroupName_Object = MibScalar
systemGroupName = _SystemGroupName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 18),
    _SystemGroupName_Type()
)
systemGroupName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemGroupName.setStatus("current")


class _SystemStandbyEnable_Type(Integer32):
    """Custom type systemStandbyEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemStandbyEnable_Type.__name__ = "Integer32"
_SystemStandbyEnable_Object = MibScalar
systemStandbyEnable = _SystemStandbyEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 19),
    _SystemStandbyEnable_Type()
)
systemStandbyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemStandbyEnable.setStatus("current")


class _SystemStandbyTarget_Type(DisplayString):
    """Custom type systemStandbyTarget based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(17, 17),
    )
    fixed_length = 17


_SystemStandbyTarget_Type.__name__ = "DisplayString"
_SystemStandbyTarget_Object = MibScalar
systemStandbyTarget = _SystemStandbyTarget_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 20),
    _SystemStandbyTarget_Type()
)
systemStandbyTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemStandbyTarget.setStatus("current")
_SystemTempTable_Object = MibTable
systemTempTable = _SystemTempTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21)
)
if mibBuilder.loadTexts:
    systemTempTable.setStatus("current")
_SystemTempEntry_Object = MibTableRow
systemTempEntry = _SystemTempEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1)
)
systemTempEntry.setIndexNames(
    (0, "XIRRUS-MIB", "systemTempIndex"),
)
if mibBuilder.loadTexts:
    systemTempEntry.setStatus("current")
_SystemTempIndex_Type = Integer32
_SystemTempIndex_Object = MibTableColumn
systemTempIndex = _SystemTempIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 1),
    _SystemTempIndex_Type()
)
systemTempIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    systemTempIndex.setStatus("current")
_SystemTempComponent_Type = DisplayString
_SystemTempComponent_Object = MibTableColumn
systemTempComponent = _SystemTempComponent_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 2),
    _SystemTempComponent_Type()
)
systemTempComponent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemTempComponent.setStatus("current")
_SystemTempCelsius_Type = Integer32
_SystemTempCelsius_Object = MibTableColumn
systemTempCelsius = _SystemTempCelsius_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 3),
    _SystemTempCelsius_Type()
)
systemTempCelsius.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemTempCelsius.setStatus("current")
_SystemTempFahrenheit_Type = Integer32
_SystemTempFahrenheit_Object = MibTableColumn
systemTempFahrenheit = _SystemTempFahrenheit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 4),
    _SystemTempFahrenheit_Type()
)
systemTempFahrenheit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemTempFahrenheit.setStatus("current")


class _SystemFipsMode_Type(Integer32):
    """Custom type systemFipsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemFipsMode_Type.__name__ = "Integer32"
_SystemFipsMode_Object = MibScalar
systemFipsMode = _SystemFipsMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 22),
    _SystemFipsMode_Type()
)
systemFipsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemFipsMode.setStatus("current")


class _SystemTelnetPort_Type(Integer32):
    """Custom type systemTelnetPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SystemTelnetPort_Type.__name__ = "Integer32"
_SystemTelnetPort_Object = MibScalar
systemTelnetPort = _SystemTelnetPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 23),
    _SystemTelnetPort_Type()
)
systemTelnetPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTelnetPort.setStatus("current")


class _SystemSshPort_Type(Integer32):
    """Custom type systemSshPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SystemSshPort_Type.__name__ = "Integer32"
_SystemSshPort_Object = MibScalar
systemSshPort = _SystemSshPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 24),
    _SystemSshPort_Type()
)
systemSshPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSshPort.setStatus("current")


class _SystemHttpsPort_Type(Integer32):
    """Custom type systemHttpsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SystemHttpsPort_Type.__name__ = "Integer32"
_SystemHttpsPort_Object = MibScalar
systemHttpsPort = _SystemHttpsPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 25),
    _SystemHttpsPort_Type()
)
systemHttpsPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemHttpsPort.setStatus("current")


class _SystemLicenseKey_Type(DisplayString):
    """Custom type systemLicenseKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(23, 23),
    )
    fixed_length = 23


_SystemLicenseKey_Type.__name__ = "DisplayString"
_SystemLicenseKey_Object = MibScalar
systemLicenseKey = _SystemLicenseKey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 26),
    _SystemLicenseKey_Type()
)
systemLicenseKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemLicenseKey.setStatus("current")
_SystemLicenseFeatures_Type = DisplayString
_SystemLicenseFeatures_Object = MibScalar
systemLicenseFeatures = _SystemLicenseFeatures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 27),
    _SystemLicenseFeatures_Type()
)
systemLicenseFeatures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemLicenseFeatures.setStatus("current")
_SystemRemoteServer_Type = IpAddress
_SystemRemoteServer_Object = MibScalar
systemRemoteServer = _SystemRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 28),
    _SystemRemoteServer_Type()
)
systemRemoteServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemRemoteServer.setStatus("current")


class _SystemRemoteImage_Type(DisplayString):
    """Custom type systemRemoteImage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SystemRemoteImage_Type.__name__ = "DisplayString"
_SystemRemoteImage_Object = MibScalar
systemRemoteImage = _SystemRemoteImage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 29),
    _SystemRemoteImage_Type()
)
systemRemoteImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemRemoteImage.setStatus("current")


class _SystemRemoteConfigFile_Type(DisplayString):
    """Custom type systemRemoteConfigFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SystemRemoteConfigFile_Type.__name__ = "DisplayString"
_SystemRemoteConfigFile_Object = MibScalar
systemRemoteConfigFile = _SystemRemoteConfigFile_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 30),
    _SystemRemoteConfigFile_Type()
)
systemRemoteConfigFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemRemoteConfigFile.setStatus("current")


class _SystemHttpsCertificate_Type(Integer32):
    """Custom type systemHttpsCertificate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("reset", 0),
          ("self", 1),
          ("xirrus", 2),
          ("new", 3))
    )


_SystemHttpsCertificate_Type.__name__ = "Integer32"
_SystemHttpsCertificate_Object = MibScalar
systemHttpsCertificate = _SystemHttpsCertificate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 31),
    _SystemHttpsCertificate_Type()
)
systemHttpsCertificate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemHttpsCertificate.setStatus("current")


class _SystemPCIAuditMode_Type(Integer32):
    """Custom type systemPCIAuditMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemPCIAuditMode_Type.__name__ = "Integer32"
_SystemPCIAuditMode_Object = MibScalar
systemPCIAuditMode = _SystemPCIAuditMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 32),
    _SystemPCIAuditMode_Type()
)
systemPCIAuditMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemPCIAuditMode.setStatus("current")


class _SystemNetworkAssurance_Type(Integer32):
    """Custom type systemNetworkAssurance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemNetworkAssurance_Type.__name__ = "Integer32"
_SystemNetworkAssurance_Object = MibScalar
systemNetworkAssurance = _SystemNetworkAssurance_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 33),
    _SystemNetworkAssurance_Type()
)
systemNetworkAssurance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemNetworkAssurance.setStatus("current")
_SystemLicenseVersion_Type = DisplayString
_SystemLicenseVersion_Object = MibScalar
systemLicenseVersion = _SystemLicenseVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 34),
    _SystemLicenseVersion_Type()
)
systemLicenseVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemLicenseVersion.setStatus("current")
_SystemLicenseExpDate_Type = DisplayString
_SystemLicenseExpDate_Object = MibScalar
systemLicenseExpDate = _SystemLicenseExpDate_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 35),
    _SystemLicenseExpDate_Type()
)
systemLicenseExpDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemLicenseExpDate.setStatus("current")
_LicenseFeatureTable_Object = MibTable
licenseFeatureTable = _LicenseFeatureTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36)
)
if mibBuilder.loadTexts:
    licenseFeatureTable.setStatus("current")
_LicenseFeatureEntry_Object = MibTableRow
licenseFeatureEntry = _LicenseFeatureEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1)
)
licenseFeatureEntry.setIndexNames(
    (0, "XIRRUS-MIB", "licenseFeatureIndex"),
)
if mibBuilder.loadTexts:
    licenseFeatureEntry.setStatus("current")
_LicenseFeatureIndex_Type = Integer32
_LicenseFeatureIndex_Object = MibTableColumn
licenseFeatureIndex = _LicenseFeatureIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 1),
    _LicenseFeatureIndex_Type()
)
licenseFeatureIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    licenseFeatureIndex.setStatus("current")
_LicenseFeatureName_Type = DisplayString
_LicenseFeatureName_Object = MibTableColumn
licenseFeatureName = _LicenseFeatureName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 2),
    _LicenseFeatureName_Type()
)
licenseFeatureName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseFeatureName.setStatus("current")


class _LicenseFeatureStatus_Type(Integer32):
    """Custom type licenseFeatureStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_LicenseFeatureStatus_Type.__name__ = "Integer32"
_LicenseFeatureStatus_Object = MibTableColumn
licenseFeatureStatus = _LicenseFeatureStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 3),
    _LicenseFeatureStatus_Type()
)
licenseFeatureStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseFeatureStatus.setStatus("current")
_LicenseFeatureDesc_Type = DisplayString
_LicenseFeatureDesc_Object = MibTableColumn
licenseFeatureDesc = _LicenseFeatureDesc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 4),
    _LicenseFeatureDesc_Type()
)
licenseFeatureDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    licenseFeatureDesc.setStatus("current")


class _SystemRDKMode_Type(Integer32):
    """Custom type systemRDKMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_SystemRDKMode_Type.__name__ = "Integer32"
_SystemRDKMode_Object = MibScalar
systemRDKMode = _SystemRDKMode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 37),
    _SystemRDKMode_Type()
)
systemRDKMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemRDKMode.setStatus("current")


class _SystemMaxAuthAttempts_Type(Integer32):
    """Custom type systemMaxAuthAttempts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SystemMaxAuthAttempts_Type.__name__ = "Integer32"
_SystemMaxAuthAttempts_Object = MibScalar
systemMaxAuthAttempts = _SystemMaxAuthAttempts_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 38),
    _SystemMaxAuthAttempts_Type()
)
systemMaxAuthAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemMaxAuthAttempts.setStatus("current")


class _SystemLoginReauthPeriod_Type(Integer32):
    """Custom type systemLoginReauthPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SystemLoginReauthPeriod_Type.__name__ = "Integer32"
_SystemLoginReauthPeriod_Object = MibScalar
systemLoginReauthPeriod = _SystemLoginReauthPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 39),
    _SystemLoginReauthPeriod_Type()
)
systemLoginReauthPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemLoginReauthPeriod.setStatus("current")


class _SystemPreLoginBanner_Type(OctetString):
    """Custom type systemPreLoginBanner based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_SystemPreLoginBanner_Type.__name__ = "OctetString"
_SystemPreLoginBanner_Object = MibScalar
systemPreLoginBanner = _SystemPreLoginBanner_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 40),
    _SystemPreLoginBanner_Type()
)
systemPreLoginBanner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemPreLoginBanner.setStatus("current")


class _SystemPostLoginBanner_Type(OctetString):
    """Custom type systemPostLoginBanner based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_SystemPostLoginBanner_Type.__name__ = "OctetString"
_SystemPostLoginBanner_Object = MibScalar
systemPostLoginBanner = _SystemPostLoginBanner_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 41),
    _SystemPostLoginBanner_Type()
)
systemPostLoginBanner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemPostLoginBanner.setStatus("current")
_SystemResetReason_Type = DisplayString
_SystemResetReason_Object = MibScalar
systemResetReason = _SystemResetReason_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 42),
    _SystemResetReason_Type()
)
systemResetReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemResetReason.setStatus("current")


class _SystemResetCode_Type(Integer32):
    """Custom type systemResetCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("reboot-req", 0),
          ("power-on", 1),
          ("power-brown-out", 2),
          ("scd-restart", 3),
          ("gpc", 4),
          ("unavailable", 5))
    )


_SystemResetCode_Type.__name__ = "Integer32"
_SystemResetCode_Object = MibScalar
systemResetCode = _SystemResetCode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 43),
    _SystemResetCode_Type()
)
systemResetCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemResetCode.setStatus("current")


class _SystemNetworkAssurancePeriod_Type(Integer32):
    """Custom type systemNetworkAssurancePeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 900),
    )


_SystemNetworkAssurancePeriod_Type.__name__ = "Integer32"
_SystemNetworkAssurancePeriod_Object = MibScalar
systemNetworkAssurancePeriod = _SystemNetworkAssurancePeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 44),
    _SystemNetworkAssurancePeriod_Type()
)
systemNetworkAssurancePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemNetworkAssurancePeriod.setStatus("current")


class _SystemLicenseProductType_Type(Integer32):
    """Custom type systemLicenseProductType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("array2x3", 1),
          ("array2x2", 2),
          ("array3x3", 3))
    )


_SystemLicenseProductType_Type.__name__ = "Integer32"
_SystemLicenseProductType_Object = MibScalar
systemLicenseProductType = _SystemLicenseProductType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 45),
    _SystemLicenseProductType_Type()
)
systemLicenseProductType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemLicenseProductType.setStatus("current")
_SystemLicenseMaxNumIAPs_Type = Integer32
_SystemLicenseMaxNumIAPs_Object = MibScalar
systemLicenseMaxNumIAPs = _SystemLicenseMaxNumIAPs_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 46),
    _SystemLicenseMaxNumIAPs_Type()
)
systemLicenseMaxNumIAPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemLicenseMaxNumIAPs.setStatus("current")


class _SystemCrashInfo_Type(OctetString):
    """Custom type systemCrashInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4096),
    )


_SystemCrashInfo_Type.__name__ = "OctetString"
_SystemCrashInfo_Object = MibScalar
systemCrashInfo = _SystemCrashInfo_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 47),
    _SystemCrashInfo_Type()
)
systemCrashInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemCrashInfo.setStatus("current")
_SystemCompassHeading_Type = Integer32
_SystemCompassHeading_Object = MibScalar
systemCompassHeading = _SystemCompassHeading_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 48),
    _SystemCompassHeading_Type()
)
systemCompassHeading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemCompassHeading.setStatus("current")


class _SystemXirconEnable_Type(Integer32):
    """Custom type systemXirconEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable-aos-only", 1),
          ("enable-boot-only", 2),
          ("enable-aos-boot", 3))
    )


_SystemXirconEnable_Type.__name__ = "Integer32"
_SystemXirconEnable_Object = MibScalar
systemXirconEnable = _SystemXirconEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 49),
    _SystemXirconEnable_Type()
)
systemXirconEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemXirconEnable.setStatus("current")


class _SystemXirconTimeout_Type(Integer32):
    """Custom type systemXirconTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 100000),
    )


_SystemXirconTimeout_Type.__name__ = "Integer32"
_SystemXirconTimeout_Object = MibScalar
systemXirconTimeout = _SystemXirconTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 50),
    _SystemXirconTimeout_Type()
)
systemXirconTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemXirconTimeout.setStatus("current")


class _SystemXirconPort_Type(Integer32):
    """Custom type systemXirconPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1025, 65535),
    )


_SystemXirconPort_Type.__name__ = "Integer32"
_SystemXirconPort_Object = MibScalar
systemXirconPort = _SystemXirconPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 51),
    _SystemXirconPort_Type()
)
systemXirconPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemXirconPort.setStatus("current")


class _SystemStpEnable_Type(Integer32):
    """Custom type systemStpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemStpEnable_Type.__name__ = "Integer32"
_SystemStpEnable_Object = MibScalar
systemStpEnable = _SystemStpEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 52),
    _SystemStpEnable_Type()
)
systemStpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemStpEnable.setStatus("current")
_SystemFanSpeed_Type = Integer32
_SystemFanSpeed_Object = MibScalar
systemFanSpeed = _SystemFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 53),
    _SystemFanSpeed_Type()
)
systemFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFanSpeed.setStatus("current")


class _SystemXmsControl_Type(Integer32):
    """Custom type systemXmsControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SystemXmsControl_Type.__name__ = "Integer32"
_SystemXmsControl_Object = MibScalar
systemXmsControl = _SystemXmsControl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 54),
    _SystemXmsControl_Type()
)
systemXmsControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemXmsControl.setStatus("current")


class _SystemActivation_Type(Integer32):
    """Custom type systemActivation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemActivation_Type.__name__ = "Integer32"
_SystemActivation_Object = MibScalar
systemActivation = _SystemActivation_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 55),
    _SystemActivation_Type()
)
systemActivation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemActivation.setStatus("current")


class _SystemActivationInterval_Type(Integer32):
    """Custom type systemActivationInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_SystemActivationInterval_Type.__name__ = "Integer32"
_SystemActivationInterval_Object = MibScalar
systemActivationInterval = _SystemActivationInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 56),
    _SystemActivationInterval_Type()
)
systemActivationInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemActivationInterval.setStatus("current")


class _SystemStatusLed_Type(Integer32):
    """Custom type systemStatusLed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SystemStatusLed_Type.__name__ = "Integer32"
_SystemStatusLed_Object = MibScalar
systemStatusLed = _SystemStatusLed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 57),
    _SystemStatusLed_Type()
)
systemStatusLed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemStatusLed.setStatus("current")
_Tunnel_ObjectIdentity = ObjectIdentity
tunnel = _Tunnel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29)
)
_TunnelTable_Object = MibTable
tunnelTable = _TunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1)
)
if mibBuilder.loadTexts:
    tunnelTable.setStatus("current")
_TunnelEntry_Object = MibTableRow
tunnelEntry = _TunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1)
)
tunnelEntry.setIndexNames(
    (0, "XIRRUS-MIB", "tunnelIndex"),
)
if mibBuilder.loadTexts:
    tunnelEntry.setStatus("current")
_TunnelIndex_Type = Integer32
_TunnelIndex_Object = MibTableColumn
tunnelIndex = _TunnelIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 1),
    _TunnelIndex_Type()
)
tunnelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tunnelIndex.setStatus("current")


class _TunnelName_Type(DisplayString):
    """Custom type tunnelName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_TunnelName_Type.__name__ = "DisplayString"
_TunnelName_Object = MibTableColumn
tunnelName = _TunnelName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 2),
    _TunnelName_Type()
)
tunnelName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelName.setStatus("current")


class _TunnelEnable_Type(Integer32):
    """Custom type tunnelEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TunnelEnable_Type.__name__ = "Integer32"
_TunnelEnable_Object = MibTableColumn
tunnelEnable = _TunnelEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 3),
    _TunnelEnable_Type()
)
tunnelEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelEnable.setStatus("current")


class _TunnelType_Type(Integer32):
    """Custom type tunnelType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("gre", 1))
    )


_TunnelType_Type.__name__ = "Integer32"
_TunnelType_Object = MibTableColumn
tunnelType = _TunnelType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 4),
    _TunnelType_Type()
)
tunnelType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelType.setStatus("current")
_TunnelLocalEndpoint_Type = IpAddress
_TunnelLocalEndpoint_Object = MibTableColumn
tunnelLocalEndpoint = _TunnelLocalEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 5),
    _TunnelLocalEndpoint_Type()
)
tunnelLocalEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelLocalEndpoint.setStatus("current")
_TunnelPriRemoteEndpoint_Type = IpAddress
_TunnelPriRemoteEndpoint_Object = MibTableColumn
tunnelPriRemoteEndpoint = _TunnelPriRemoteEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 6),
    _TunnelPriRemoteEndpoint_Type()
)
tunnelPriRemoteEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelPriRemoteEndpoint.setStatus("current")
_TunnelSecRemoteEndpoint_Type = IpAddress
_TunnelSecRemoteEndpoint_Object = MibTableColumn
tunnelSecRemoteEndpoint = _TunnelSecRemoteEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 7),
    _TunnelSecRemoteEndpoint_Type()
)
tunnelSecRemoteEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelSecRemoteEndpoint.setStatus("current")


class _TunnelMTU_Type(Integer32):
    """Custom type tunnelMTU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(68, 1732),
    )


_TunnelMTU_Type.__name__ = "Integer32"
_TunnelMTU_Object = MibTableColumn
tunnelMTU = _TunnelMTU_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 8),
    _TunnelMTU_Type()
)
tunnelMTU.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelMTU.setStatus("current")


class _TunnelSsids_Type(Integer32):
    """Custom type tunnelSsids based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TunnelSsids_Type.__name__ = "Integer32"
_TunnelSsids_Object = MibTableColumn
tunnelSsids = _TunnelSsids_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 9),
    _TunnelSsids_Type()
)
tunnelSsids.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelSsids.setStatus("current")


class _TunnelDhcpOption_Type(Integer32):
    """Custom type tunnelDhcpOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TunnelDhcpOption_Type.__name__ = "Integer32"
_TunnelDhcpOption_Object = MibTableColumn
tunnelDhcpOption = _TunnelDhcpOption_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 10),
    _TunnelDhcpOption_Type()
)
tunnelDhcpOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelDhcpOption.setStatus("current")


class _TunnelFailoverInterval_Type(Integer32):
    """Custom type tunnelFailoverInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 3600),
    )


_TunnelFailoverInterval_Type.__name__ = "Integer32"
_TunnelFailoverInterval_Object = MibTableColumn
tunnelFailoverInterval = _TunnelFailoverInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 11),
    _TunnelFailoverInterval_Type()
)
tunnelFailoverInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelFailoverInterval.setStatus("current")


class _TunnelFailoverNumFailures_Type(Integer32):
    """Custom type tunnelFailoverNumFailures based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 1000),
    )


_TunnelFailoverNumFailures_Type.__name__ = "Integer32"
_TunnelFailoverNumFailures_Object = MibTableColumn
tunnelFailoverNumFailures = _TunnelFailoverNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 12),
    _TunnelFailoverNumFailures_Type()
)
tunnelFailoverNumFailures.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelFailoverNumFailures.setStatus("current")
_TunnelRowStatus_Type = RowStatus
_TunnelRowStatus_Object = MibTableColumn
tunnelRowStatus = _TunnelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 13),
    _TunnelRowStatus_Type()
)
tunnelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelRowStatus.setStatus("current")


class _TunnelVlanList_Type(OctetString):
    """Custom type tunnelVlanList based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 320),
    )


_TunnelVlanList_Type.__name__ = "OctetString"
_TunnelVlanList_Object = MibTableColumn
tunnelVlanList = _TunnelVlanList_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 14),
    _TunnelVlanList_Type()
)
tunnelVlanList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tunnelVlanList.setStatus("current")


class _TunnelTableReset_Type(Integer32):
    """Custom type tunnelTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_TunnelTableReset_Type.__name__ = "Integer32"
_TunnelTableReset_Object = MibScalar
tunnelTableReset = _TunnelTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 2),
    _TunnelTableReset_Type()
)
tunnelTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelTableReset.setStatus("current")
_Vlan_ObjectIdentity = ObjectIdentity
vlan = _Vlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30)
)


class _VlanTableReset_Type(Integer32):
    """Custom type vlanTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VlanTableReset_Type.__name__ = "Integer32"
_VlanTableReset_Object = MibScalar
vlanTableReset = _VlanTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 1),
    _VlanTableReset_Type()
)
vlanTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTableReset.setStatus("current")
_VlanTable_Object = MibTable
vlanTable = _VlanTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2)
)
if mibBuilder.loadTexts:
    vlanTable.setStatus("current")
_VlanEntry_Object = MibTableRow
vlanEntry = _VlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1)
)
vlanEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanIndex"),
)
if mibBuilder.loadTexts:
    vlanEntry.setStatus("current")
_VlanIndex_Type = Integer32
_VlanIndex_Object = MibTableColumn
vlanIndex = _VlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 1),
    _VlanIndex_Type()
)
vlanIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanIndex.setStatus("current")


class _VlanName_Type(DisplayString):
    """Custom type vlanName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_VlanName_Type.__name__ = "DisplayString"
_VlanName_Object = MibTableColumn
vlanName = _VlanName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 2),
    _VlanName_Type()
)
vlanName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanName.setStatus("current")


class _VlanNumber_Type(Integer32):
    """Custom type vlanNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VlanNumber_Type.__name__ = "Integer32"
_VlanNumber_Object = MibTableColumn
vlanNumber = _VlanNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 3),
    _VlanNumber_Type()
)
vlanNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanNumber.setStatus("current")


class _VlanMgmt_Type(Integer32):
    """Custom type vlanMgmt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VlanMgmt_Type.__name__ = "Integer32"
_VlanMgmt_Object = MibTableColumn
vlanMgmt = _VlanMgmt_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 4),
    _VlanMgmt_Type()
)
vlanMgmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanMgmt.setStatus("current")


class _VlanDHCPBind_Type(Integer32):
    """Custom type vlanDHCPBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VlanDHCPBind_Type.__name__ = "Integer32"
_VlanDHCPBind_Object = MibTableColumn
vlanDHCPBind = _VlanDHCPBind_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 5),
    _VlanDHCPBind_Type()
)
vlanDHCPBind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanDHCPBind.setStatus("current")
_VlanIPAddress_Type = IpAddress
_VlanIPAddress_Object = MibTableColumn
vlanIPAddress = _VlanIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 6),
    _VlanIPAddress_Type()
)
vlanIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanIPAddress.setStatus("current")
_VlanIPMask_Type = IpAddress
_VlanIPMask_Object = MibTableColumn
vlanIPMask = _VlanIPMask_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 7),
    _VlanIPMask_Type()
)
vlanIPMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanIPMask.setStatus("current")
_VlanGateway_Type = IpAddress
_VlanGateway_Object = MibTableColumn
vlanGateway = _VlanGateway_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 8),
    _VlanGateway_Type()
)
vlanGateway.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanGateway.setStatus("current")
_VlanRowStatus_Type = RowStatus
_VlanRowStatus_Object = MibTableColumn
vlanRowStatus = _VlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 9),
    _VlanRowStatus_Type()
)
vlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanRowStatus.setStatus("current")


class _VlanTunnelServer_Type(DisplayString):
    """Custom type vlanTunnelServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VlanTunnelServer_Type.__name__ = "DisplayString"
_VlanTunnelServer_Object = MibTableColumn
vlanTunnelServer = _VlanTunnelServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 10),
    _VlanTunnelServer_Type()
)
vlanTunnelServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanTunnelServer.setStatus("current")


class _VlanTunnelSecret_Type(DisplayString):
    """Custom type vlanTunnelSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_VlanTunnelSecret_Type.__name__ = "DisplayString"
_VlanTunnelSecret_Object = MibTableColumn
vlanTunnelSecret = _VlanTunnelSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 11),
    _VlanTunnelSecret_Type()
)
vlanTunnelSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanTunnelSecret.setStatus("current")


class _VlanTunnelPort_Type(Integer32):
    """Custom type vlanTunnelPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VlanTunnelPort_Type.__name__ = "Integer32"
_VlanTunnelPort_Object = MibTableColumn
vlanTunnelPort = _VlanTunnelPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 12),
    _VlanTunnelPort_Type()
)
vlanTunnelPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanTunnelPort.setStatus("current")


class _VlanTunnelState_Type(Integer32):
    """Custom type vlanTunnelState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("not-connected", 0),
          ("connected", 1))
    )


_VlanTunnelState_Type.__name__ = "Integer32"
_VlanTunnelState_Object = MibTableColumn
vlanTunnelState = _VlanTunnelState_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 13),
    _VlanTunnelState_Type()
)
vlanTunnelState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanTunnelState.setStatus("current")


class _VlanTunnelSecretForm_Type(Integer32):
    """Custom type vlanTunnelSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_VlanTunnelSecretForm_Type.__name__ = "Integer32"
_VlanTunnelSecretForm_Object = MibTableColumn
vlanTunnelSecretForm = _VlanTunnelSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 14),
    _VlanTunnelSecretForm_Type()
)
vlanTunnelSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanTunnelSecretForm.setStatus("current")


class _VlanFastRoaming_Type(Integer32):
    """Custom type vlanFastRoaming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VlanFastRoaming_Type.__name__ = "Integer32"
_VlanFastRoaming_Object = MibTableColumn
vlanFastRoaming = _VlanFastRoaming_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 15),
    _VlanFastRoaming_Type()
)
vlanFastRoaming.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanFastRoaming.setStatus("current")
_SpanningTreeTable_Object = MibTable
spanningTreeTable = _SpanningTreeTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3)
)
if mibBuilder.loadTexts:
    spanningTreeTable.setStatus("current")
_SpanningTreeEntry_Object = MibTableRow
spanningTreeEntry = _SpanningTreeEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1)
)
spanningTreeEntry.setIndexNames(
    (0, "XIRRUS-MIB", "spanningTreeIndex"),
)
if mibBuilder.loadTexts:
    spanningTreeEntry.setStatus("current")
_SpanningTreeIndex_Type = Integer32
_SpanningTreeIndex_Object = MibTableColumn
spanningTreeIndex = _SpanningTreeIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 1),
    _SpanningTreeIndex_Type()
)
spanningTreeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    spanningTreeIndex.setStatus("current")
_SpanningTreeVlanName_Type = DisplayString
_SpanningTreeVlanName_Object = MibTableColumn
spanningTreeVlanName = _SpanningTreeVlanName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 2),
    _SpanningTreeVlanName_Type()
)
spanningTreeVlanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeVlanName.setStatus("current")
_SpanningTreeVlanNumber_Type = Integer32
_SpanningTreeVlanNumber_Object = MibTableColumn
spanningTreeVlanNumber = _SpanningTreeVlanNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 3),
    _SpanningTreeVlanNumber_Type()
)
spanningTreeVlanNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeVlanNumber.setStatus("current")
_SpanningTreeGigLinkState_Type = DisplayString
_SpanningTreeGigLinkState_Object = MibTableColumn
spanningTreeGigLinkState = _SpanningTreeGigLinkState_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 4),
    _SpanningTreeGigLinkState_Type()
)
spanningTreeGigLinkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeGigLinkState.setStatus("current")
_SpanningTreeWDSClientLink1State_Type = DisplayString
_SpanningTreeWDSClientLink1State_Object = MibTableColumn
spanningTreeWDSClientLink1State = _SpanningTreeWDSClientLink1State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 5),
    _SpanningTreeWDSClientLink1State_Type()
)
spanningTreeWDSClientLink1State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSClientLink1State.setStatus("current")
_SpanningTreeWDSClientLink2State_Type = DisplayString
_SpanningTreeWDSClientLink2State_Object = MibTableColumn
spanningTreeWDSClientLink2State = _SpanningTreeWDSClientLink2State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 6),
    _SpanningTreeWDSClientLink2State_Type()
)
spanningTreeWDSClientLink2State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSClientLink2State.setStatus("current")
_SpanningTreeWDSClientLink3State_Type = DisplayString
_SpanningTreeWDSClientLink3State_Object = MibTableColumn
spanningTreeWDSClientLink3State = _SpanningTreeWDSClientLink3State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 7),
    _SpanningTreeWDSClientLink3State_Type()
)
spanningTreeWDSClientLink3State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSClientLink3State.setStatus("current")
_SpanningTreeWDSClientLink4State_Type = DisplayString
_SpanningTreeWDSClientLink4State_Object = MibTableColumn
spanningTreeWDSClientLink4State = _SpanningTreeWDSClientLink4State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 8),
    _SpanningTreeWDSClientLink4State_Type()
)
spanningTreeWDSClientLink4State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSClientLink4State.setStatus("current")
_SpanningTreeWDSHostLink1State_Type = DisplayString
_SpanningTreeWDSHostLink1State_Object = MibTableColumn
spanningTreeWDSHostLink1State = _SpanningTreeWDSHostLink1State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 9),
    _SpanningTreeWDSHostLink1State_Type()
)
spanningTreeWDSHostLink1State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSHostLink1State.setStatus("current")
_SpanningTreeWDSHostLink2State_Type = DisplayString
_SpanningTreeWDSHostLink2State_Object = MibTableColumn
spanningTreeWDSHostLink2State = _SpanningTreeWDSHostLink2State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 10),
    _SpanningTreeWDSHostLink2State_Type()
)
spanningTreeWDSHostLink2State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSHostLink2State.setStatus("current")
_SpanningTreeWDSHostLink3State_Type = DisplayString
_SpanningTreeWDSHostLink3State_Object = MibTableColumn
spanningTreeWDSHostLink3State = _SpanningTreeWDSHostLink3State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 11),
    _SpanningTreeWDSHostLink3State_Type()
)
spanningTreeWDSHostLink3State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSHostLink3State.setStatus("current")
_SpanningTreeWDSHostLink4State_Type = DisplayString
_SpanningTreeWDSHostLink4State_Object = MibTableColumn
spanningTreeWDSHostLink4State = _SpanningTreeWDSHostLink4State_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 12),
    _SpanningTreeWDSHostLink4State_Type()
)
spanningTreeWDSHostLink4State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spanningTreeWDSHostLink4State.setStatus("current")


class _VlanDefaultNumber_Type(Integer32):
    """Custom type vlanDefaultNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VlanDefaultNumber_Type.__name__ = "Integer32"
_VlanDefaultNumber_Object = MibScalar
vlanDefaultNumber = _VlanDefaultNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 4),
    _VlanDefaultNumber_Type()
)
vlanDefaultNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanDefaultNumber.setStatus("current")


class _VlanNativeNumber_Type(Integer32):
    """Custom type vlanNativeNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VlanNativeNumber_Type.__name__ = "Integer32"
_VlanNativeNumber_Object = MibScalar
vlanNativeNumber = _VlanNativeNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 5),
    _VlanNativeNumber_Type()
)
vlanNativeNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanNativeNumber.setStatus("current")
_VlanUndefinedTable_Object = MibTable
vlanUndefinedTable = _VlanUndefinedTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6)
)
if mibBuilder.loadTexts:
    vlanUndefinedTable.setStatus("current")
_VlanUndefinedEntry_Object = MibTableRow
vlanUndefinedEntry = _VlanUndefinedEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1)
)
vlanUndefinedEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanUndefinedIndex"),
)
if mibBuilder.loadTexts:
    vlanUndefinedEntry.setStatus("current")
_VlanUndefinedIndex_Type = Integer32
_VlanUndefinedIndex_Object = MibTableColumn
vlanUndefinedIndex = _VlanUndefinedIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1, 1),
    _VlanUndefinedIndex_Type()
)
vlanUndefinedIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanUndefinedIndex.setStatus("current")
_VlanUndefinedNumber_Type = Integer32
_VlanUndefinedNumber_Object = MibTableColumn
vlanUndefinedNumber = _VlanUndefinedNumber_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1, 2),
    _VlanUndefinedNumber_Type()
)
vlanUndefinedNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanUndefinedNumber.setStatus("current")
_VlanUndefinedInfo_Type = DisplayString
_VlanUndefinedInfo_Object = MibScalar
vlanUndefinedInfo = _VlanUndefinedInfo_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 7),
    _VlanUndefinedInfo_Type()
)
vlanUndefinedInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanUndefinedInfo.setStatus("current")


class _VlanUndefinedClear_Type(Integer32):
    """Custom type vlanUndefinedClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_VlanUndefinedClear_Type.__name__ = "Integer32"
_VlanUndefinedClear_Object = MibScalar
vlanUndefinedClear = _VlanUndefinedClear_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 8),
    _VlanUndefinedClear_Type()
)
vlanUndefinedClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanUndefinedClear.setStatus("current")
_VlanPoolTable_Object = MibTable
vlanPoolTable = _VlanPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9)
)
if mibBuilder.loadTexts:
    vlanPoolTable.setStatus("current")
_VlanPoolEntry_Object = MibTableRow
vlanPoolEntry = _VlanPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1)
)
vlanPoolEntry.setIndexNames(
    (0, "XIRRUS-MIB", "vlanPoolIndex"),
)
if mibBuilder.loadTexts:
    vlanPoolEntry.setStatus("current")
_VlanPoolIndex_Type = Integer32
_VlanPoolIndex_Object = MibTableColumn
vlanPoolIndex = _VlanPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 1),
    _VlanPoolIndex_Type()
)
vlanPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanPoolIndex.setStatus("current")


class _VlanPoolName_Type(DisplayString):
    """Custom type vlanPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_VlanPoolName_Type.__name__ = "DisplayString"
_VlanPoolName_Object = MibTableColumn
vlanPoolName = _VlanPoolName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 2),
    _VlanPoolName_Type()
)
vlanPoolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanPoolName.setStatus("current")


class _VlanPoolListMember_Type(Integer32):
    """Custom type vlanPoolListMember based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VlanPoolListMember_Type.__name__ = "Integer32"
_VlanPoolListMember_Object = MibTableColumn
vlanPoolListMember = _VlanPoolListMember_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 3),
    _VlanPoolListMember_Type()
)
vlanPoolListMember.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanPoolListMember.setStatus("current")
_VlanPoolRowStatus_Type = RowStatus
_VlanPoolRowStatus_Object = MibTableColumn
vlanPoolRowStatus = _VlanPoolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 4),
    _VlanPoolRowStatus_Type()
)
vlanPoolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanPoolRowStatus.setStatus("current")


class _VlanPoolTableReset_Type(Integer32):
    """Custom type vlanPoolTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VlanPoolTableReset_Type.__name__ = "Integer32"
_VlanPoolTableReset_Object = MibScalar
vlanPoolTableReset = _VlanPoolTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 10),
    _VlanPoolTableReset_Type()
)
vlanPoolTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanPoolTableReset.setStatus("current")
_Cluster_ObjectIdentity = ObjectIdentity
cluster = _Cluster_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31)
)
_ClusterArrayTable_Object = MibTable
clusterArrayTable = _ClusterArrayTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1)
)
if mibBuilder.loadTexts:
    clusterArrayTable.setStatus("current")
_ClusterArrayEntry_Object = MibTableRow
clusterArrayEntry = _ClusterArrayEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1)
)
clusterArrayEntry.setIndexNames(
    (0, "XIRRUS-MIB", "clusterArrayIndex"),
)
if mibBuilder.loadTexts:
    clusterArrayEntry.setStatus("current")
_ClusterArrayIndex_Type = Integer32
_ClusterArrayIndex_Object = MibTableColumn
clusterArrayIndex = _ClusterArrayIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 1),
    _ClusterArrayIndex_Type()
)
clusterArrayIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    clusterArrayIndex.setStatus("current")


class _ClusterArrayHostname_Type(DisplayString):
    """Custom type clusterArrayHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_ClusterArrayHostname_Type.__name__ = "DisplayString"
_ClusterArrayHostname_Object = MibTableColumn
clusterArrayHostname = _ClusterArrayHostname_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 2),
    _ClusterArrayHostname_Type()
)
clusterArrayHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayHostname.setStatus("current")
_ClusterArrayIPAddress_Type = IpAddress
_ClusterArrayIPAddress_Object = MibTableColumn
clusterArrayIPAddress = _ClusterArrayIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 3),
    _ClusterArrayIPAddress_Type()
)
clusterArrayIPAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayIPAddress.setStatus("current")


class _ClusterArrayUsername_Type(DisplayString):
    """Custom type clusterArrayUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_ClusterArrayUsername_Type.__name__ = "DisplayString"
_ClusterArrayUsername_Object = MibTableColumn
clusterArrayUsername = _ClusterArrayUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 4),
    _ClusterArrayUsername_Type()
)
clusterArrayUsername.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayUsername.setStatus("current")


class _ClusterArrayPassword_Type(DisplayString):
    """Custom type clusterArrayPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_ClusterArrayPassword_Type.__name__ = "DisplayString"
_ClusterArrayPassword_Object = MibTableColumn
clusterArrayPassword = _ClusterArrayPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 5),
    _ClusterArrayPassword_Type()
)
clusterArrayPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayPassword.setStatus("current")


class _ClusterArrayPasswordForm_Type(Integer32):
    """Custom type clusterArrayPasswordForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_ClusterArrayPasswordForm_Type.__name__ = "Integer32"
_ClusterArrayPasswordForm_Object = MibTableColumn
clusterArrayPasswordForm = _ClusterArrayPasswordForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 6),
    _ClusterArrayPasswordForm_Type()
)
clusterArrayPasswordForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayPasswordForm.setStatus("current")


class _ClusterArrayCluster_Type(DisplayString):
    """Custom type clusterArrayCluster based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ClusterArrayCluster_Type.__name__ = "DisplayString"
_ClusterArrayCluster_Object = MibTableColumn
clusterArrayCluster = _ClusterArrayCluster_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 7),
    _ClusterArrayCluster_Type()
)
clusterArrayCluster.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayCluster.setStatus("current")
_ClusterArrayRowStatus_Type = RowStatus
_ClusterArrayRowStatus_Object = MibTableColumn
clusterArrayRowStatus = _ClusterArrayRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 8),
    _ClusterArrayRowStatus_Type()
)
clusterArrayRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    clusterArrayRowStatus.setStatus("current")


class _ClusterArrayTableReset_Type(Integer32):
    """Custom type clusterArrayTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_ClusterArrayTableReset_Type.__name__ = "Integer32"
_ClusterArrayTableReset_Object = MibScalar
clusterArrayTableReset = _ClusterArrayTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 2),
    _ClusterArrayTableReset_Type()
)
clusterArrayTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clusterArrayTableReset.setStatus("current")
_EnvCtrl_ObjectIdentity = ObjectIdentity
envCtrl = _EnvCtrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32)
)
_EnvCtrlTemperature_Type = Integer32
_EnvCtrlTemperature_Object = MibScalar
envCtrlTemperature = _EnvCtrlTemperature_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 1),
    _EnvCtrlTemperature_Type()
)
envCtrlTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlTemperature.setStatus("current")
_EnvCtrlHumidity_Type = Integer32
_EnvCtrlHumidity_Object = MibScalar
envCtrlHumidity = _EnvCtrlHumidity_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 2),
    _EnvCtrlHumidity_Type()
)
envCtrlHumidity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlHumidity.setStatus("current")
_EnvCtrlCoolRPM1_Type = Integer32
_EnvCtrlCoolRPM1_Object = MibScalar
envCtrlCoolRPM1 = _EnvCtrlCoolRPM1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 3),
    _EnvCtrlCoolRPM1_Type()
)
envCtrlCoolRPM1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlCoolRPM1.setStatus("current")
_EnvCtrlCoolRPM2_Type = Integer32
_EnvCtrlCoolRPM2_Object = MibScalar
envCtrlCoolRPM2 = _EnvCtrlCoolRPM2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 4),
    _EnvCtrlCoolRPM2_Type()
)
envCtrlCoolRPM2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlCoolRPM2.setStatus("current")
_EnvCtrlCoolRPM3_Type = Integer32
_EnvCtrlCoolRPM3_Object = MibScalar
envCtrlCoolRPM3 = _EnvCtrlCoolRPM3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 5),
    _EnvCtrlCoolRPM3_Type()
)
envCtrlCoolRPM3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlCoolRPM3.setStatus("current")
_EnvCtrlCoolRPM4_Type = Integer32
_EnvCtrlCoolRPM4_Object = MibScalar
envCtrlCoolRPM4 = _EnvCtrlCoolRPM4_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 6),
    _EnvCtrlCoolRPM4_Type()
)
envCtrlCoolRPM4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlCoolRPM4.setStatus("current")
_EnvCtrlHeatRPM1_Type = Integer32
_EnvCtrlHeatRPM1_Object = MibScalar
envCtrlHeatRPM1 = _EnvCtrlHeatRPM1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 7),
    _EnvCtrlHeatRPM1_Type()
)
envCtrlHeatRPM1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlHeatRPM1.setStatus("current")
_EnvCtrlHeatRPM2_Type = Integer32
_EnvCtrlHeatRPM2_Object = MibScalar
envCtrlHeatRPM2 = _EnvCtrlHeatRPM2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 8),
    _EnvCtrlHeatRPM2_Type()
)
envCtrlHeatRPM2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlHeatRPM2.setStatus("current")


class _EnvCtrlArrayOn_Type(Integer32):
    """Custom type envCtrlArrayOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_EnvCtrlArrayOn_Type.__name__ = "Integer32"
_EnvCtrlArrayOn_Object = MibScalar
envCtrlArrayOn = _EnvCtrlArrayOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 9),
    _EnvCtrlArrayOn_Type()
)
envCtrlArrayOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlArrayOn.setStatus("current")


class _EnvCtrlCoolOn_Type(Integer32):
    """Custom type envCtrlCoolOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_EnvCtrlCoolOn_Type.__name__ = "Integer32"
_EnvCtrlCoolOn_Object = MibScalar
envCtrlCoolOn = _EnvCtrlCoolOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 10),
    _EnvCtrlCoolOn_Type()
)
envCtrlCoolOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlCoolOn.setStatus("current")


class _EnvCtrlHeatOn_Type(Integer32):
    """Custom type envCtrlHeatOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_EnvCtrlHeatOn_Type.__name__ = "Integer32"
_EnvCtrlHeatOn_Object = MibScalar
envCtrlHeatOn = _EnvCtrlHeatOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 11),
    _EnvCtrlHeatOn_Type()
)
envCtrlHeatOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlHeatOn.setStatus("current")
_EnvCtrlSoftwareVersion_Type = DisplayString
_EnvCtrlSoftwareVersion_Object = MibScalar
envCtrlSoftwareVersion = _EnvCtrlSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 12),
    _EnvCtrlSoftwareVersion_Type()
)
envCtrlSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    envCtrlSoftwareVersion.setStatus("current")
_Location_ObjectIdentity = ObjectIdentity
location = _Location_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 33)
)


class _LocationReportingOn_Type(Integer32):
    """Custom type locationReportingOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LocationReportingOn_Type.__name__ = "Integer32"
_LocationReportingOn_Object = MibScalar
locationReportingOn = _LocationReportingOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 1),
    _LocationReportingOn_Type()
)
locationReportingOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    locationReportingOn.setStatus("current")


class _LocationReportingUrl_Type(DisplayString):
    """Custom type locationReportingUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_LocationReportingUrl_Type.__name__ = "DisplayString"
_LocationReportingUrl_Object = MibScalar
locationReportingUrl = _LocationReportingUrl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 2),
    _LocationReportingUrl_Type()
)
locationReportingUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    locationReportingUrl.setStatus("current")


class _LocationReportingKey_Type(DisplayString):
    """Custom type locationReportingKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 49),
    )


_LocationReportingKey_Type.__name__ = "DisplayString"
_LocationReportingKey_Object = MibScalar
locationReportingKey = _LocationReportingKey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 3),
    _LocationReportingKey_Type()
)
locationReportingKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    locationReportingKey.setStatus("current")


class _LocationReportingPeriod_Type(Integer32):
    """Custom type locationReportingPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15, 50000),
    )


_LocationReportingPeriod_Type.__name__ = "Integer32"
_LocationReportingPeriod_Object = MibScalar
locationReportingPeriod = _LocationReportingPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 4),
    _LocationReportingPeriod_Type()
)
locationReportingPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    locationReportingPeriod.setStatus("current")
_Group_ObjectIdentity = ObjectIdentity
group = _Group_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34)
)
_GroupTable_Object = MibTable
groupTable = _GroupTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1)
)
if mibBuilder.loadTexts:
    groupTable.setStatus("current")
_GroupEntry_Object = MibTableRow
groupEntry = _GroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1)
)
groupEntry.setIndexNames(
    (0, "XIRRUS-MIB", "groupIndex"),
)
if mibBuilder.loadTexts:
    groupEntry.setStatus("current")
_GroupIndex_Type = Integer32
_GroupIndex_Object = MibTableColumn
groupIndex = _GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 1),
    _GroupIndex_Type()
)
groupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    groupIndex.setStatus("current")


class _GroupName_Type(DisplayString):
    """Custom type groupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_GroupName_Type.__name__ = "DisplayString"
_GroupName_Object = MibTableColumn
groupName = _GroupName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 2),
    _GroupName_Type()
)
groupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupName.setStatus("current")


class _GroupRadiusFilterID_Type(DisplayString):
    """Custom type groupRadiusFilterID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GroupRadiusFilterID_Type.__name__ = "DisplayString"
_GroupRadiusFilterID_Object = MibTableColumn
groupRadiusFilterID = _GroupRadiusFilterID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 3),
    _GroupRadiusFilterID_Type()
)
groupRadiusFilterID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupRadiusFilterID.setStatus("current")


class _GroupEnable_Type(Integer32):
    """Custom type groupEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GroupEnable_Type.__name__ = "Integer32"
_GroupEnable_Object = MibTableColumn
groupEnable = _GroupEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 4),
    _GroupEnable_Type()
)
groupEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupEnable.setStatus("current")


class _GroupVlan_Type(Integer32):
    """Custom type groupVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GroupVlan_Type.__name__ = "Integer32"
_GroupVlan_Object = MibTableColumn
groupVlan = _GroupVlan_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 5),
    _GroupVlan_Type()
)
groupVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupVlan.setStatus("current")


class _GroupQOS_Type(Integer32):
    """Custom type groupQOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_GroupQOS_Type.__name__ = "Integer32"
_GroupQOS_Object = MibTableColumn
groupQOS = _GroupQOS_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 6),
    _GroupQOS_Type()
)
groupQOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupQOS.setStatus("current")


class _GroupDhcpPool_Type(DisplayString):
    """Custom type groupDhcpPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GroupDhcpPool_Type.__name__ = "DisplayString"
_GroupDhcpPool_Object = MibTableColumn
groupDhcpPool = _GroupDhcpPool_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 7),
    _GroupDhcpPool_Type()
)
groupDhcpPool.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDhcpPool.setStatus("current")


class _GroupFilterList_Type(DisplayString):
    """Custom type groupFilterList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GroupFilterList_Type.__name__ = "DisplayString"
_GroupFilterList_Object = MibTableColumn
groupFilterList = _GroupFilterList_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 8),
    _GroupFilterList_Type()
)
groupFilterList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupFilterList.setStatus("current")


class _GroupRoamingLayer_Type(Integer32):
    """Custom type groupRoamingLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("layer-2-only", 0),
          ("layer-2-and-3", 1),
          ("none", 2))
    )


_GroupRoamingLayer_Type.__name__ = "Integer32"
_GroupRoamingLayer_Object = MibTableColumn
groupRoamingLayer = _GroupRoamingLayer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 9),
    _GroupRoamingLayer_Type()
)
groupRoamingLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupRoamingLayer.setStatus("current")


class _GroupStationLimit_Type(Integer32):
    """Custom type groupStationLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3840),
    )


_GroupStationLimit_Type.__name__ = "Integer32"
_GroupStationLimit_Object = MibTableColumn
groupStationLimit = _GroupStationLimit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 10),
    _GroupStationLimit_Type()
)
groupStationLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupStationLimit.setStatus("current")


class _GroupTrafficLimit_Type(Integer32):
    """Custom type groupTrafficLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_GroupTrafficLimit_Type.__name__ = "Integer32"
_GroupTrafficLimit_Object = MibTableColumn
groupTrafficLimit = _GroupTrafficLimit_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 11),
    _GroupTrafficLimit_Type()
)
groupTrafficLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTrafficLimit.setStatus("current")


class _GroupTrafficLimitSta_Type(Integer32):
    """Custom type groupTrafficLimitSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000),
    )


_GroupTrafficLimitSta_Type.__name__ = "Integer32"
_GroupTrafficLimitSta_Object = MibTableColumn
groupTrafficLimitSta = _GroupTrafficLimitSta_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 12),
    _GroupTrafficLimitSta_Type()
)
groupTrafficLimitSta.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTrafficLimitSta.setStatus("current")


class _GroupTimeOn_Type(Integer32):
    """Custom type groupTimeOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_GroupTimeOn_Type.__name__ = "Integer32"
_GroupTimeOn_Object = MibTableColumn
groupTimeOn = _GroupTimeOn_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 13),
    _GroupTimeOn_Type()
)
groupTimeOn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTimeOn.setStatus("current")


class _GroupTimeOff_Type(Integer32):
    """Custom type groupTimeOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1439),
    )


_GroupTimeOff_Type.__name__ = "Integer32"
_GroupTimeOff_Object = MibTableColumn
groupTimeOff = _GroupTimeOff_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 14),
    _GroupTimeOff_Type()
)
groupTimeOff.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTimeOff.setStatus("current")


class _GroupDaysOnMon_Type(Integer32):
    """Custom type groupDaysOnMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnMon_Type.__name__ = "Integer32"
_GroupDaysOnMon_Object = MibTableColumn
groupDaysOnMon = _GroupDaysOnMon_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 15),
    _GroupDaysOnMon_Type()
)
groupDaysOnMon.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnMon.setStatus("current")


class _GroupDaysOnTue_Type(Integer32):
    """Custom type groupDaysOnTue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnTue_Type.__name__ = "Integer32"
_GroupDaysOnTue_Object = MibTableColumn
groupDaysOnTue = _GroupDaysOnTue_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 16),
    _GroupDaysOnTue_Type()
)
groupDaysOnTue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnTue.setStatus("current")


class _GroupDaysOnWed_Type(Integer32):
    """Custom type groupDaysOnWed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnWed_Type.__name__ = "Integer32"
_GroupDaysOnWed_Object = MibTableColumn
groupDaysOnWed = _GroupDaysOnWed_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 17),
    _GroupDaysOnWed_Type()
)
groupDaysOnWed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnWed.setStatus("current")


class _GroupDaysOnThu_Type(Integer32):
    """Custom type groupDaysOnThu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnThu_Type.__name__ = "Integer32"
_GroupDaysOnThu_Object = MibTableColumn
groupDaysOnThu = _GroupDaysOnThu_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 18),
    _GroupDaysOnThu_Type()
)
groupDaysOnThu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnThu.setStatus("current")


class _GroupDaysOnFri_Type(Integer32):
    """Custom type groupDaysOnFri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnFri_Type.__name__ = "Integer32"
_GroupDaysOnFri_Object = MibTableColumn
groupDaysOnFri = _GroupDaysOnFri_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 19),
    _GroupDaysOnFri_Type()
)
groupDaysOnFri.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnFri.setStatus("current")


class _GroupDaysOnSat_Type(Integer32):
    """Custom type groupDaysOnSat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnSat_Type.__name__ = "Integer32"
_GroupDaysOnSat_Object = MibTableColumn
groupDaysOnSat = _GroupDaysOnSat_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 20),
    _GroupDaysOnSat_Type()
)
groupDaysOnSat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnSat.setStatus("current")


class _GroupDaysOnSun_Type(Integer32):
    """Custom type groupDaysOnSun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_GroupDaysOnSun_Type.__name__ = "Integer32"
_GroupDaysOnSun_Object = MibTableColumn
groupDaysOnSun = _GroupDaysOnSun_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 21),
    _GroupDaysOnSun_Type()
)
groupDaysOnSun.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDaysOnSun.setStatus("current")


class _GroupWprEnable_Type(Integer32):
    """Custom type groupWprEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GroupWprEnable_Type.__name__ = "Integer32"
_GroupWprEnable_Object = MibTableColumn
groupWprEnable = _GroupWprEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 22),
    _GroupWprEnable_Type()
)
groupWprEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprEnable.setStatus("current")


class _GroupWprSplashEnable_Type(Integer32):
    """Custom type groupWprSplashEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GroupWprSplashEnable_Type.__name__ = "Integer32"
_GroupWprSplashEnable_Object = MibTableColumn
groupWprSplashEnable = _GroupWprSplashEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 23),
    _GroupWprSplashEnable_Type()
)
groupWprSplashEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprSplashEnable.setStatus("current")


class _GroupWprSplashTimeout_Type(Integer32):
    """Custom type groupWprSplashTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_GroupWprSplashTimeout_Type.__name__ = "Integer32"
_GroupWprSplashTimeout_Object = MibTableColumn
groupWprSplashTimeout = _GroupWprSplashTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 24),
    _GroupWprSplashTimeout_Type()
)
groupWprSplashTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprSplashTimeout.setStatus("current")


class _GroupWprLandingPage_Type(DisplayString):
    """Custom type groupWprLandingPage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_GroupWprLandingPage_Type.__name__ = "DisplayString"
_GroupWprLandingPage_Object = MibTableColumn
groupWprLandingPage = _GroupWprLandingPage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 25),
    _GroupWprLandingPage_Type()
)
groupWprLandingPage.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprLandingPage.setStatus("current")


class _GroupActive_Type(Integer32):
    """Custom type groupActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 0),
          ("active", 1))
    )


_GroupActive_Type.__name__ = "Integer32"
_GroupActive_Object = MibTableColumn
groupActive = _GroupActive_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 26),
    _GroupActive_Type()
)
groupActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    groupActive.setStatus("current")
_GroupRowStatus_Type = RowStatus
_GroupRowStatus_Object = MibTableColumn
groupRowStatus = _GroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 27),
    _GroupRowStatus_Type()
)
groupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupRowStatus.setStatus("current")


class _GroupWprBackground_Type(DisplayString):
    """Custom type groupWprBackground based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_GroupWprBackground_Type.__name__ = "DisplayString"
_GroupWprBackground_Object = MibTableColumn
groupWprBackground = _GroupWprBackground_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 28),
    _GroupWprBackground_Type()
)
groupWprBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupWprBackground.setStatus("current")


class _GroupWprLogoImage_Type(DisplayString):
    """Custom type groupWprLogoImage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_GroupWprLogoImage_Type.__name__ = "DisplayString"
_GroupWprLogoImage_Object = MibTableColumn
groupWprLogoImage = _GroupWprLogoImage_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 29),
    _GroupWprLogoImage_Type()
)
groupWprLogoImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupWprLogoImage.setStatus("current")


class _GroupWprHeaderText_Type(DisplayString):
    """Custom type groupWprHeaderText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_GroupWprHeaderText_Type.__name__ = "DisplayString"
_GroupWprHeaderText_Object = MibTableColumn
groupWprHeaderText = _GroupWprHeaderText_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 30),
    _GroupWprHeaderText_Type()
)
groupWprHeaderText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupWprHeaderText.setStatus("current")


class _GroupWprFooterText_Type(DisplayString):
    """Custom type groupWprFooterText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_GroupWprFooterText_Type.__name__ = "DisplayString"
_GroupWprFooterText_Object = MibTableColumn
groupWprFooterText = _GroupWprFooterText_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 31),
    _GroupWprFooterText_Type()
)
groupWprFooterText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupWprFooterText.setStatus("current")


class _GroupFallback_Type(Integer32):
    """Custom type groupFallback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("disable-group", 1))
    )


_GroupFallback_Type.__name__ = "Integer32"
_GroupFallback_Object = MibTableColumn
groupFallback = _GroupFallback_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 32),
    _GroupFallback_Type()
)
groupFallback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupFallback.setStatus("current")


class _GroupDeviceID_Type(DisplayString):
    """Custom type groupDeviceID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_GroupDeviceID_Type.__name__ = "DisplayString"
_GroupDeviceID_Object = MibTableColumn
groupDeviceID = _GroupDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 33),
    _GroupDeviceID_Type()
)
groupDeviceID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupDeviceID.setStatus("current")


class _GroupTrafficLimitKbps_Type(Integer32):
    """Custom type groupTrafficLimitKbps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4000000),
    )


_GroupTrafficLimitKbps_Type.__name__ = "Integer32"
_GroupTrafficLimitKbps_Object = MibTableColumn
groupTrafficLimitKbps = _GroupTrafficLimitKbps_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 34),
    _GroupTrafficLimitKbps_Type()
)
groupTrafficLimitKbps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTrafficLimitKbps.setStatus("current")


class _GroupTrafficLimitKbpsSta_Type(Integer32):
    """Custom type groupTrafficLimitKbpsSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 400000),
    )


_GroupTrafficLimitKbpsSta_Type.__name__ = "Integer32"
_GroupTrafficLimitKbpsSta_Object = MibTableColumn
groupTrafficLimitKbpsSta = _GroupTrafficLimitKbpsSta_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 35),
    _GroupTrafficLimitKbpsSta_Type()
)
groupTrafficLimitKbpsSta.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupTrafficLimitKbpsSta.setStatus("current")


class _GroupVlanPool_Type(DisplayString):
    """Custom type groupVlanPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GroupVlanPool_Type.__name__ = "DisplayString"
_GroupVlanPool_Object = MibTableColumn
groupVlanPool = _GroupVlanPool_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 36),
    _GroupVlanPool_Type()
)
groupVlanPool.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupVlanPool.setStatus("current")


class _GroupWprServerType_Type(Integer32):
    """Custom type groupWprServerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("external", 0),
          ("internal", 1))
    )


_GroupWprServerType_Type.__name__ = "Integer32"
_GroupWprServerType_Object = MibTableColumn
groupWprServerType = _GroupWprServerType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 37),
    _GroupWprServerType_Type()
)
groupWprServerType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprServerType.setStatus("current")


class _GroupWprUrl_Type(DisplayString):
    """Custom type groupWprUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_GroupWprUrl_Type.__name__ = "DisplayString"
_GroupWprUrl_Object = MibTableColumn
groupWprUrl = _GroupWprUrl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 38),
    _GroupWprUrl_Type()
)
groupWprUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprUrl.setStatus("current")


class _GroupWprSharedSecret_Type(DisplayString):
    """Custom type groupWprSharedSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_GroupWprSharedSecret_Type.__name__ = "DisplayString"
_GroupWprSharedSecret_Object = MibTableColumn
groupWprSharedSecret = _GroupWprSharedSecret_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 39),
    _GroupWprSharedSecret_Type()
)
groupWprSharedSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprSharedSecret.setStatus("current")


class _GroupWprSharedSecretForm_Type(Integer32):
    """Custom type groupWprSharedSecretForm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("clear", 0),
          ("encrypted", 1))
    )


_GroupWprSharedSecretForm_Type.__name__ = "Integer32"
_GroupWprSharedSecretForm_Object = MibTableColumn
groupWprSharedSecretForm = _GroupWprSharedSecretForm_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 40),
    _GroupWprSharedSecretForm_Type()
)
groupWprSharedSecretForm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprSharedSecretForm.setStatus("current")


class _GroupWprScreenType_Type(Integer32):
    """Custom type groupWprScreenType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("splash", 0),
          ("login", 1),
          ("none", 2))
    )


_GroupWprScreenType_Type.__name__ = "Integer32"
_GroupWprScreenType_Object = MibTableColumn
groupWprScreenType = _GroupWprScreenType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 41),
    _GroupWprScreenType_Type()
)
groupWprScreenType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprScreenType.setStatus("current")


class _GroupWprHttpsEnable_Type(Integer32):
    """Custom type groupWprHttpsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_GroupWprHttpsEnable_Type.__name__ = "Integer32"
_GroupWprHttpsEnable_Object = MibTableColumn
groupWprHttpsEnable = _GroupWprHttpsEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 42),
    _GroupWprHttpsEnable_Type()
)
groupWprHttpsEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprHttpsEnable.setStatus("current")


class _GroupWprAuthType_Type(Integer32):
    """Custom type groupWprAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("chap", 0),
          ("pap", 1),
          ("ms-chap", 2))
    )


_GroupWprAuthType_Type.__name__ = "Integer32"
_GroupWprAuthType_Object = MibTableColumn
groupWprAuthType = _GroupWprAuthType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 43),
    _GroupWprAuthType_Type()
)
groupWprAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprAuthType.setStatus("current")


class _GroupWprAuthTimeout_Type(Integer32):
    """Custom type groupWprAuthTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10080),
    )


_GroupWprAuthTimeout_Type.__name__ = "Integer32"
_GroupWprAuthTimeout_Object = MibTableColumn
groupWprAuthTimeout = _GroupWprAuthTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 44),
    _GroupWprAuthTimeout_Type()
)
groupWprAuthTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupWprAuthTimeout.setStatus("current")


class _GroupTableReset_Type(Integer32):
    """Custom type groupTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_GroupTableReset_Type.__name__ = "Integer32"
_GroupTableReset_Object = MibScalar
groupTableReset = _GroupTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 2),
    _GroupTableReset_Type()
)
groupTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupTableReset.setStatus("current")
_Mdm_ObjectIdentity = ObjectIdentity
mdm = _Mdm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35)
)


class _MdmAirWatchApiURL_Type(DisplayString):
    """Custom type mdmAirWatchApiURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_MdmAirWatchApiURL_Type.__name__ = "DisplayString"
_MdmAirWatchApiURL_Object = MibScalar
mdmAirWatchApiURL = _MdmAirWatchApiURL_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 1),
    _MdmAirWatchApiURL_Type()
)
mdmAirWatchApiURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiURL.setStatus("current")


class _MdmAirWatchApiKey_Type(DisplayString):
    """Custom type mdmAirWatchApiKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_MdmAirWatchApiKey_Type.__name__ = "DisplayString"
_MdmAirWatchApiKey_Object = MibScalar
mdmAirWatchApiKey = _MdmAirWatchApiKey_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 2),
    _MdmAirWatchApiKey_Type()
)
mdmAirWatchApiKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiKey.setStatus("current")


class _MdmAirWatchApiUsername_Type(DisplayString):
    """Custom type mdmAirWatchApiUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_MdmAirWatchApiUsername_Type.__name__ = "DisplayString"
_MdmAirWatchApiUsername_Object = MibScalar
mdmAirWatchApiUsername = _MdmAirWatchApiUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 3),
    _MdmAirWatchApiUsername_Type()
)
mdmAirWatchApiUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiUsername.setStatus("current")


class _MdmAirWatchApiPassword_Type(DisplayString):
    """Custom type mdmAirWatchApiPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_MdmAirWatchApiPassword_Type.__name__ = "DisplayString"
_MdmAirWatchApiPassword_Object = MibScalar
mdmAirWatchApiPassword = _MdmAirWatchApiPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 4),
    _MdmAirWatchApiPassword_Type()
)
mdmAirWatchApiPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiPassword.setStatus("current")


class _MdmAirWatchApiPasswordEnc_Type(DisplayString):
    """Custom type mdmAirWatchApiPasswordEnc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_MdmAirWatchApiPasswordEnc_Type.__name__ = "DisplayString"
_MdmAirWatchApiPasswordEnc_Object = MibScalar
mdmAirWatchApiPasswordEnc = _MdmAirWatchApiPasswordEnc_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 5),
    _MdmAirWatchApiPasswordEnc_Type()
)
mdmAirWatchApiPasswordEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiPasswordEnc.setStatus("current")


class _MdmAirWatchApiTimeout_Type(Integer32):
    """Custom type mdmAirWatchApiTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_MdmAirWatchApiTimeout_Type.__name__ = "Integer32"
_MdmAirWatchApiTimeout_Object = MibScalar
mdmAirWatchApiTimeout = _MdmAirWatchApiTimeout_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 6),
    _MdmAirWatchApiTimeout_Type()
)
mdmAirWatchApiTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiTimeout.setStatus("current")


class _MdmAirWatchApiPollPeriod_Type(Integer32):
    """Custom type mdmAirWatchApiPollPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_MdmAirWatchApiPollPeriod_Type.__name__ = "Integer32"
_MdmAirWatchApiPollPeriod_Object = MibScalar
mdmAirWatchApiPollPeriod = _MdmAirWatchApiPollPeriod_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 7),
    _MdmAirWatchApiPollPeriod_Type()
)
mdmAirWatchApiPollPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiPollPeriod.setStatus("current")


class _MdmAirWatchApiAccessError_Type(Integer32):
    """Custom type mdmAirWatchApiAccessError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("block", 0),
          ("allow", 1))
    )


_MdmAirWatchApiAccessError_Type.__name__ = "Integer32"
_MdmAirWatchApiAccessError_Object = MibScalar
mdmAirWatchApiAccessError = _MdmAirWatchApiAccessError_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 8),
    _MdmAirWatchApiAccessError_Type()
)
mdmAirWatchApiAccessError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchApiAccessError.setStatus("current")


class _MdmAirWatchRedirectURL_Type(DisplayString):
    """Custom type mdmAirWatchRedirectURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_MdmAirWatchRedirectURL_Type.__name__ = "DisplayString"
_MdmAirWatchRedirectURL_Object = MibScalar
mdmAirWatchRedirectURL = _MdmAirWatchRedirectURL_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 9),
    _MdmAirWatchRedirectURL_Type()
)
mdmAirWatchRedirectURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mdmAirWatchRedirectURL.setStatus("current")
_Netflow_ObjectIdentity = ObjectIdentity
netflow = _Netflow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 36)
)


class _NetflowEnable_Type(Integer32):
    """Custom type netflowEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("v5", 1),
          ("v9", 2),
          ("ipfix", 3))
    )


_NetflowEnable_Type.__name__ = "Integer32"
_NetflowEnable_Object = MibScalar
netflowEnable = _NetflowEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 1),
    _NetflowEnable_Type()
)
netflowEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netflowEnable.setStatus("current")


class _NetflowCollectorHost_Type(DisplayString):
    """Custom type netflowCollectorHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NetflowCollectorHost_Type.__name__ = "DisplayString"
_NetflowCollectorHost_Object = MibScalar
netflowCollectorHost = _NetflowCollectorHost_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 2),
    _NetflowCollectorHost_Type()
)
netflowCollectorHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netflowCollectorHost.setStatus("current")


class _NetflowCollectorPort_Type(Integer32):
    """Custom type netflowCollectorPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NetflowCollectorPort_Type.__name__ = "Integer32"
_NetflowCollectorPort_Object = MibScalar
netflowCollectorPort = _NetflowCollectorPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 3),
    _NetflowCollectorPort_Type()
)
netflowCollectorPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netflowCollectorPort.setStatus("current")
_WifiTag_ObjectIdentity = ObjectIdentity
wifiTag = _WifiTag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37)
)


class _WifiTagEnable_Type(Integer32):
    """Custom type wifiTagEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WifiTagEnable_Type.__name__ = "Integer32"
_WifiTagEnable_Object = MibScalar
wifiTagEnable = _WifiTagEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 1),
    _WifiTagEnable_Type()
)
wifiTagEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagEnable.setStatus("current")


class _WifiTagUdpPort_Type(Integer32):
    """Custom type wifiTagUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WifiTagUdpPort_Type.__name__ = "Integer32"
_WifiTagUdpPort_Object = MibScalar
wifiTagUdpPort = _WifiTagUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 2),
    _WifiTagUdpPort_Type()
)
wifiTagUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagUdpPort.setStatus("current")


class _WifiTagChannel1_Type(Integer32):
    """Custom type wifiTagChannel1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WifiTagChannel1_Type.__name__ = "Integer32"
_WifiTagChannel1_Object = MibScalar
wifiTagChannel1 = _WifiTagChannel1_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 3),
    _WifiTagChannel1_Type()
)
wifiTagChannel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagChannel1.setStatus("current")


class _WifiTagChannel2_Type(Integer32):
    """Custom type wifiTagChannel2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WifiTagChannel2_Type.__name__ = "Integer32"
_WifiTagChannel2_Object = MibScalar
wifiTagChannel2 = _WifiTagChannel2_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 4),
    _WifiTagChannel2_Type()
)
wifiTagChannel2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagChannel2.setStatus("current")


class _WifiTagChannel3_Type(Integer32):
    """Custom type wifiTagChannel3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WifiTagChannel3_Type.__name__ = "Integer32"
_WifiTagChannel3_Object = MibScalar
wifiTagChannel3 = _WifiTagChannel3_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 5),
    _WifiTagChannel3_Type()
)
wifiTagChannel3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagChannel3.setStatus("current")


class _WifiTagEkahauServer_Type(DisplayString):
    """Custom type wifiTagEkahauServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_WifiTagEkahauServer_Type.__name__ = "DisplayString"
_WifiTagEkahauServer_Object = MibScalar
wifiTagEkahauServer = _WifiTagEkahauServer_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 6),
    _WifiTagEkahauServer_Type()
)
wifiTagEkahauServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiTagEkahauServer.setStatus("current")
_Wpr_ObjectIdentity = ObjectIdentity
wpr = _Wpr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38)
)
_WprWhitelistSsidTable_Object = MibTable
wprWhitelistSsidTable = _WprWhitelistSsidTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1)
)
if mibBuilder.loadTexts:
    wprWhitelistSsidTable.setStatus("current")
_WprWhitelistSsidEntry_Object = MibTableRow
wprWhitelistSsidEntry = _WprWhitelistSsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1)
)
wprWhitelistSsidEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wprWhitelistSsidIndex"),
)
if mibBuilder.loadTexts:
    wprWhitelistSsidEntry.setStatus("current")
_WprWhitelistSsidIndex_Type = Integer32
_WprWhitelistSsidIndex_Object = MibTableColumn
wprWhitelistSsidIndex = _WprWhitelistSsidIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 1),
    _WprWhitelistSsidIndex_Type()
)
wprWhitelistSsidIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wprWhitelistSsidIndex.setStatus("current")


class _WprWhitelistSsidDomain_Type(DisplayString):
    """Custom type wprWhitelistSsidDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_WprWhitelistSsidDomain_Type.__name__ = "DisplayString"
_WprWhitelistSsidDomain_Object = MibTableColumn
wprWhitelistSsidDomain = _WprWhitelistSsidDomain_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 2),
    _WprWhitelistSsidDomain_Type()
)
wprWhitelistSsidDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistSsidDomain.setStatus("current")


class _WprWhitelistSsidName_Type(DisplayString):
    """Custom type wprWhitelistSsidName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WprWhitelistSsidName_Type.__name__ = "DisplayString"
_WprWhitelistSsidName_Object = MibTableColumn
wprWhitelistSsidName = _WprWhitelistSsidName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 3),
    _WprWhitelistSsidName_Type()
)
wprWhitelistSsidName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistSsidName.setStatus("current")
_WprWhitelistSsidRowStatus_Type = RowStatus
_WprWhitelistSsidRowStatus_Object = MibTableColumn
wprWhitelistSsidRowStatus = _WprWhitelistSsidRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 4),
    _WprWhitelistSsidRowStatus_Type()
)
wprWhitelistSsidRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistSsidRowStatus.setStatus("current")
_WprWhitelistGroupTable_Object = MibTable
wprWhitelistGroupTable = _WprWhitelistGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2)
)
if mibBuilder.loadTexts:
    wprWhitelistGroupTable.setStatus("current")
_WprWhitelistGroupEntry_Object = MibTableRow
wprWhitelistGroupEntry = _WprWhitelistGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1)
)
wprWhitelistGroupEntry.setIndexNames(
    (0, "XIRRUS-MIB", "wprWhitelistGroupIndex"),
)
if mibBuilder.loadTexts:
    wprWhitelistGroupEntry.setStatus("current")
_WprWhitelistGroupIndex_Type = Integer32
_WprWhitelistGroupIndex_Object = MibTableColumn
wprWhitelistGroupIndex = _WprWhitelistGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 1),
    _WprWhitelistGroupIndex_Type()
)
wprWhitelistGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wprWhitelistGroupIndex.setStatus("current")


class _WprWhitelistGroupDomain_Type(DisplayString):
    """Custom type wprWhitelistGroupDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_WprWhitelistGroupDomain_Type.__name__ = "DisplayString"
_WprWhitelistGroupDomain_Object = MibTableColumn
wprWhitelistGroupDomain = _WprWhitelistGroupDomain_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 2),
    _WprWhitelistGroupDomain_Type()
)
wprWhitelistGroupDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistGroupDomain.setStatus("current")


class _WprWhitelistGroupName_Type(DisplayString):
    """Custom type wprWhitelistGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WprWhitelistGroupName_Type.__name__ = "DisplayString"
_WprWhitelistGroupName_Object = MibTableColumn
wprWhitelistGroupName = _WprWhitelistGroupName_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 3),
    _WprWhitelistGroupName_Type()
)
wprWhitelistGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistGroupName.setStatus("current")
_WprWhitelistGroupRowStatus_Type = RowStatus
_WprWhitelistGroupRowStatus_Object = MibTableColumn
wprWhitelistGroupRowStatus = _WprWhitelistGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 4),
    _WprWhitelistGroupRowStatus_Type()
)
wprWhitelistGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wprWhitelistGroupRowStatus.setStatus("current")


class _WprWhitelistSsidTableReset_Type(DisplayString):
    """Custom type wprWhitelistSsidTableReset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WprWhitelistSsidTableReset_Type.__name__ = "DisplayString"
_WprWhitelistSsidTableReset_Object = MibScalar
wprWhitelistSsidTableReset = _WprWhitelistSsidTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 3),
    _WprWhitelistSsidTableReset_Type()
)
wprWhitelistSsidTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wprWhitelistSsidTableReset.setStatus("current")


class _WprWhitelistGroupTableReset_Type(DisplayString):
    """Custom type wprWhitelistGroupTableReset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WprWhitelistGroupTableReset_Type.__name__ = "DisplayString"
_WprWhitelistGroupTableReset_Object = MibScalar
wprWhitelistGroupTableReset = _WprWhitelistGroupTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 4),
    _WprWhitelistGroupTableReset_Type()
)
wprWhitelistGroupTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wprWhitelistGroupTableReset.setStatus("current")
_Oauth_ObjectIdentity = ObjectIdentity
oauth = _Oauth_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39)
)
_OauthTokenTable_Object = MibTable
oauthTokenTable = _OauthTokenTable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1)
)
if mibBuilder.loadTexts:
    oauthTokenTable.setStatus("current")
_OauthTokenEntry_Object = MibTableRow
oauthTokenEntry = _OauthTokenEntry_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1)
)
oauthTokenEntry.setIndexNames(
    (0, "XIRRUS-MIB", "oauthTokenIndex"),
)
if mibBuilder.loadTexts:
    oauthTokenEntry.setStatus("current")
_OauthTokenIndex_Type = Integer32
_OauthTokenIndex_Object = MibTableColumn
oauthTokenIndex = _OauthTokenIndex_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 1),
    _OauthTokenIndex_Type()
)
oauthTokenIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oauthTokenIndex.setStatus("current")


class _OauthTokenId_Type(DisplayString):
    """Custom type oauthTokenId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenId_Type.__name__ = "DisplayString"
_OauthTokenId_Object = MibTableColumn
oauthTokenId = _OauthTokenId_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 2),
    _OauthTokenId_Type()
)
oauthTokenId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenId.setStatus("current")


class _OauthTokenClientId_Type(DisplayString):
    """Custom type oauthTokenClientId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenClientId_Type.__name__ = "DisplayString"
_OauthTokenClientId_Object = MibTableColumn
oauthTokenClientId = _OauthTokenClientId_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 3),
    _OauthTokenClientId_Type()
)
oauthTokenClientId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenClientId.setStatus("current")


class _OauthTokenGrantType_Type(DisplayString):
    """Custom type oauthTokenGrantType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenGrantType_Type.__name__ = "DisplayString"
_OauthTokenGrantType_Object = MibTableColumn
oauthTokenGrantType = _OauthTokenGrantType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 4),
    _OauthTokenGrantType_Type()
)
oauthTokenGrantType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenGrantType.setStatus("current")
_OauthTokenExpiration_Type = Counter32
_OauthTokenExpiration_Object = MibTableColumn
oauthTokenExpiration = _OauthTokenExpiration_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 5),
    _OauthTokenExpiration_Type()
)
oauthTokenExpiration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenExpiration.setStatus("current")


class _OauthTokenUserAgent_Type(DisplayString):
    """Custom type oauthTokenUserAgent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenUserAgent_Type.__name__ = "DisplayString"
_OauthTokenUserAgent_Object = MibTableColumn
oauthTokenUserAgent = _OauthTokenUserAgent_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 6),
    _OauthTokenUserAgent_Type()
)
oauthTokenUserAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenUserAgent.setStatus("current")


class _OauthTokenScope_Type(DisplayString):
    """Custom type oauthTokenScope based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenScope_Type.__name__ = "DisplayString"
_OauthTokenScope_Object = MibTableColumn
oauthTokenScope = _OauthTokenScope_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 7),
    _OauthTokenScope_Type()
)
oauthTokenScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenScope.setStatus("current")


class _OauthTokenCode_Type(DisplayString):
    """Custom type oauthTokenCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenCode_Type.__name__ = "DisplayString"
_OauthTokenCode_Object = MibTableColumn
oauthTokenCode = _OauthTokenCode_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 8),
    _OauthTokenCode_Type()
)
oauthTokenCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenCode.setStatus("current")


class _OauthTokenType_Type(DisplayString):
    """Custom type oauthTokenType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_OauthTokenType_Type.__name__ = "DisplayString"
_OauthTokenType_Object = MibTableColumn
oauthTokenType = _OauthTokenType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 9),
    _OauthTokenType_Type()
)
oauthTokenType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oauthTokenType.setStatus("current")
_OauthTokenRowStatus_Type = RowStatus
_OauthTokenRowStatus_Object = MibTableColumn
oauthTokenRowStatus = _OauthTokenRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 10),
    _OauthTokenRowStatus_Type()
)
oauthTokenRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oauthTokenRowStatus.setStatus("current")


class _OauthTableReset_Type(Integer32):
    """Custom type oauthTableReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_OauthTableReset_Type.__name__ = "Integer32"
_OauthTableReset_Object = MibScalar
oauthTableReset = _OauthTableReset_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 2),
    _OauthTableReset_Type()
)
oauthTableReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oauthTableReset.setStatus("current")
_ProxyFwd_ObjectIdentity = ObjectIdentity
proxyFwd = _ProxyFwd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 40)
)


class _ProxyFwdProxyType_Type(Integer32):
    """Custom type proxyFwdProxyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("bluecoat", 1),
          ("netboxblue", 2))
    )


_ProxyFwdProxyType_Type.__name__ = "Integer32"
_ProxyFwdProxyType_Object = MibScalar
proxyFwdProxyType = _ProxyFwdProxyType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 1),
    _ProxyFwdProxyType_Type()
)
proxyFwdProxyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyFwdProxyType.setStatus("current")


class _ProxyFwdBlueCoatUrl_Type(DisplayString):
    """Custom type proxyFwdBlueCoatUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_ProxyFwdBlueCoatUrl_Type.__name__ = "DisplayString"
_ProxyFwdBlueCoatUrl_Object = MibScalar
proxyFwdBlueCoatUrl = _ProxyFwdBlueCoatUrl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 2),
    _ProxyFwdBlueCoatUrl_Type()
)
proxyFwdBlueCoatUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyFwdBlueCoatUrl.setStatus("current")


class _ProxyFwdNetBoxBlueUrl_Type(DisplayString):
    """Custom type proxyFwdNetBoxBlueUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_ProxyFwdNetBoxBlueUrl_Type.__name__ = "DisplayString"
_ProxyFwdNetBoxBlueUrl_Object = MibScalar
proxyFwdNetBoxBlueUrl = _ProxyFwdNetBoxBlueUrl_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 3),
    _ProxyFwdNetBoxBlueUrl_Type()
)
proxyFwdNetBoxBlueUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyFwdNetBoxBlueUrl.setStatus("current")
_ProxyMgmt_ObjectIdentity = ObjectIdentity
proxyMgmt = _ProxyMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41)
)


class _ProxyMgmtEnabled_Type(Integer32):
    """Custom type proxyMgmtEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ProxyMgmtEnabled_Type.__name__ = "Integer32"
_ProxyMgmtEnabled_Object = MibScalar
proxyMgmtEnabled = _ProxyMgmtEnabled_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 1),
    _ProxyMgmtEnabled_Type()
)
proxyMgmtEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtEnabled.setStatus("current")


class _ProxyMgmtCustom_Type(Integer32):
    """Custom type proxyMgmtCustom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ProxyMgmtCustom_Type.__name__ = "Integer32"
_ProxyMgmtCustom_Object = MibScalar
proxyMgmtCustom = _ProxyMgmtCustom_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 2),
    _ProxyMgmtCustom_Type()
)
proxyMgmtCustom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtCustom.setStatus("current")


class _ProxyMgmtHttpEnabled_Type(Integer32):
    """Custom type proxyMgmtHttpEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ProxyMgmtHttpEnabled_Type.__name__ = "Integer32"
_ProxyMgmtHttpEnabled_Object = MibScalar
proxyMgmtHttpEnabled = _ProxyMgmtHttpEnabled_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 3),
    _ProxyMgmtHttpEnabled_Type()
)
proxyMgmtHttpEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpEnabled.setStatus("current")
_ProxyMgmtHttpHost_Type = DisplayString
_ProxyMgmtHttpHost_Object = MibScalar
proxyMgmtHttpHost = _ProxyMgmtHttpHost_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 4),
    _ProxyMgmtHttpHost_Type()
)
proxyMgmtHttpHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpHost.setStatus("current")
_ProxyMgmtHttpPort_Type = Integer32
_ProxyMgmtHttpPort_Object = MibScalar
proxyMgmtHttpPort = _ProxyMgmtHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 5),
    _ProxyMgmtHttpPort_Type()
)
proxyMgmtHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpPort.setStatus("current")
_ProxyMgmtHttpUsername_Type = DisplayString
_ProxyMgmtHttpUsername_Object = MibScalar
proxyMgmtHttpUsername = _ProxyMgmtHttpUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 6),
    _ProxyMgmtHttpUsername_Type()
)
proxyMgmtHttpUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpUsername.setStatus("current")
_ProxyMgmtHttpPassword_Type = DisplayString
_ProxyMgmtHttpPassword_Object = MibScalar
proxyMgmtHttpPassword = _ProxyMgmtHttpPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 7),
    _ProxyMgmtHttpPassword_Type()
)
proxyMgmtHttpPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpPassword.setStatus("current")


class _ProxyMgmtHttpType_Type(Integer32):
    """Custom type proxyMgmtHttpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("http", 0)
    )


_ProxyMgmtHttpType_Type.__name__ = "Integer32"
_ProxyMgmtHttpType_Object = MibScalar
proxyMgmtHttpType = _ProxyMgmtHttpType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 8),
    _ProxyMgmtHttpType_Type()
)
proxyMgmtHttpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpType.setStatus("current")


class _ProxyMgmtHttpsEnabled_Type(Integer32):
    """Custom type proxyMgmtHttpsEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ProxyMgmtHttpsEnabled_Type.__name__ = "Integer32"
_ProxyMgmtHttpsEnabled_Object = MibScalar
proxyMgmtHttpsEnabled = _ProxyMgmtHttpsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 9),
    _ProxyMgmtHttpsEnabled_Type()
)
proxyMgmtHttpsEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsEnabled.setStatus("current")
_ProxyMgmtHttpsHost_Type = DisplayString
_ProxyMgmtHttpsHost_Object = MibScalar
proxyMgmtHttpsHost = _ProxyMgmtHttpsHost_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 10),
    _ProxyMgmtHttpsHost_Type()
)
proxyMgmtHttpsHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsHost.setStatus("current")
_ProxyMgmtHttpsPort_Type = Integer32
_ProxyMgmtHttpsPort_Object = MibScalar
proxyMgmtHttpsPort = _ProxyMgmtHttpsPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 11),
    _ProxyMgmtHttpsPort_Type()
)
proxyMgmtHttpsPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsPort.setStatus("current")
_ProxyMgmtHttpsUsername_Type = DisplayString
_ProxyMgmtHttpsUsername_Object = MibScalar
proxyMgmtHttpsUsername = _ProxyMgmtHttpsUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 12),
    _ProxyMgmtHttpsUsername_Type()
)
proxyMgmtHttpsUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsUsername.setStatus("current")
_ProxyMgmtHttpsPassword_Type = DisplayString
_ProxyMgmtHttpsPassword_Object = MibScalar
proxyMgmtHttpsPassword = _ProxyMgmtHttpsPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 13),
    _ProxyMgmtHttpsPassword_Type()
)
proxyMgmtHttpsPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsPassword.setStatus("current")


class _ProxyMgmtHttpsType_Type(Integer32):
    """Custom type proxyMgmtHttpsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("https", 1)
    )


_ProxyMgmtHttpsType_Type.__name__ = "Integer32"
_ProxyMgmtHttpsType_Object = MibScalar
proxyMgmtHttpsType = _ProxyMgmtHttpsType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 14),
    _ProxyMgmtHttpsType_Type()
)
proxyMgmtHttpsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtHttpsType.setStatus("current")


class _ProxyMgmtSocksEnabled_Type(Integer32):
    """Custom type proxyMgmtSocksEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ProxyMgmtSocksEnabled_Type.__name__ = "Integer32"
_ProxyMgmtSocksEnabled_Object = MibScalar
proxyMgmtSocksEnabled = _ProxyMgmtSocksEnabled_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 15),
    _ProxyMgmtSocksEnabled_Type()
)
proxyMgmtSocksEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksEnabled.setStatus("current")
_ProxyMgmtSocksIpAddr_Type = IpAddress
_ProxyMgmtSocksIpAddr_Object = MibScalar
proxyMgmtSocksIpAddr = _ProxyMgmtSocksIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 16),
    _ProxyMgmtSocksIpAddr_Type()
)
proxyMgmtSocksIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksIpAddr.setStatus("current")
_ProxyMgmtSocksPort_Type = Integer32
_ProxyMgmtSocksPort_Object = MibScalar
proxyMgmtSocksPort = _ProxyMgmtSocksPort_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 17),
    _ProxyMgmtSocksPort_Type()
)
proxyMgmtSocksPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksPort.setStatus("current")
_ProxyMgmtSocksUsername_Type = DisplayString
_ProxyMgmtSocksUsername_Object = MibScalar
proxyMgmtSocksUsername = _ProxyMgmtSocksUsername_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 18),
    _ProxyMgmtSocksUsername_Type()
)
proxyMgmtSocksUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksUsername.setStatus("current")
_ProxyMgmtSocksPassword_Type = DisplayString
_ProxyMgmtSocksPassword_Object = MibScalar
proxyMgmtSocksPassword = _ProxyMgmtSocksPassword_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 19),
    _ProxyMgmtSocksPassword_Type()
)
proxyMgmtSocksPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksPassword.setStatus("current")


class _ProxyMgmtSocksType_Type(Integer32):
    """Custom type proxyMgmtSocksType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("socks4", 2),
          ("socks5", 3))
    )


_ProxyMgmtSocksType_Type.__name__ = "Integer32"
_ProxyMgmtSocksType_Object = MibScalar
proxyMgmtSocksType = _ProxyMgmtSocksType_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 20),
    _ProxyMgmtSocksType_Type()
)
proxyMgmtSocksType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSocksType.setStatus("current")
_ProxyMgmtSubnet01_Type = IpAddress
_ProxyMgmtSubnet01_Object = MibScalar
proxyMgmtSubnet01 = _ProxyMgmtSubnet01_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 21),
    _ProxyMgmtSubnet01_Type()
)
proxyMgmtSubnet01.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet01.setStatus("current")
_ProxyMgmtMask01_Type = IpAddress
_ProxyMgmtMask01_Object = MibScalar
proxyMgmtMask01 = _ProxyMgmtMask01_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 22),
    _ProxyMgmtMask01_Type()
)
proxyMgmtMask01.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask01.setStatus("current")
_ProxyMgmtSubnet02_Type = IpAddress
_ProxyMgmtSubnet02_Object = MibScalar
proxyMgmtSubnet02 = _ProxyMgmtSubnet02_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 23),
    _ProxyMgmtSubnet02_Type()
)
proxyMgmtSubnet02.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet02.setStatus("current")
_ProxyMgmtMask02_Type = IpAddress
_ProxyMgmtMask02_Object = MibScalar
proxyMgmtMask02 = _ProxyMgmtMask02_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 24),
    _ProxyMgmtMask02_Type()
)
proxyMgmtMask02.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask02.setStatus("current")
_ProxyMgmtSubnet03_Type = IpAddress
_ProxyMgmtSubnet03_Object = MibScalar
proxyMgmtSubnet03 = _ProxyMgmtSubnet03_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 25),
    _ProxyMgmtSubnet03_Type()
)
proxyMgmtSubnet03.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet03.setStatus("current")
_ProxyMgmtMask03_Type = IpAddress
_ProxyMgmtMask03_Object = MibScalar
proxyMgmtMask03 = _ProxyMgmtMask03_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 26),
    _ProxyMgmtMask03_Type()
)
proxyMgmtMask03.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask03.setStatus("current")
_ProxyMgmtSubnet04_Type = IpAddress
_ProxyMgmtSubnet04_Object = MibScalar
proxyMgmtSubnet04 = _ProxyMgmtSubnet04_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 27),
    _ProxyMgmtSubnet04_Type()
)
proxyMgmtSubnet04.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet04.setStatus("current")
_ProxyMgmtMask04_Type = IpAddress
_ProxyMgmtMask04_Object = MibScalar
proxyMgmtMask04 = _ProxyMgmtMask04_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 28),
    _ProxyMgmtMask04_Type()
)
proxyMgmtMask04.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask04.setStatus("current")
_ProxyMgmtSubnet05_Type = IpAddress
_ProxyMgmtSubnet05_Object = MibScalar
proxyMgmtSubnet05 = _ProxyMgmtSubnet05_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 29),
    _ProxyMgmtSubnet05_Type()
)
proxyMgmtSubnet05.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet05.setStatus("current")
_ProxyMgmtMask05_Type = IpAddress
_ProxyMgmtMask05_Object = MibScalar
proxyMgmtMask05 = _ProxyMgmtMask05_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 30),
    _ProxyMgmtMask05_Type()
)
proxyMgmtMask05.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask05.setStatus("current")
_ProxyMgmtSubnet06_Type = IpAddress
_ProxyMgmtSubnet06_Object = MibScalar
proxyMgmtSubnet06 = _ProxyMgmtSubnet06_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 31),
    _ProxyMgmtSubnet06_Type()
)
proxyMgmtSubnet06.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet06.setStatus("current")
_ProxyMgmtMask06_Type = IpAddress
_ProxyMgmtMask06_Object = MibScalar
proxyMgmtMask06 = _ProxyMgmtMask06_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 32),
    _ProxyMgmtMask06_Type()
)
proxyMgmtMask06.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask06.setStatus("current")
_ProxyMgmtSubnet07_Type = IpAddress
_ProxyMgmtSubnet07_Object = MibScalar
proxyMgmtSubnet07 = _ProxyMgmtSubnet07_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 33),
    _ProxyMgmtSubnet07_Type()
)
proxyMgmtSubnet07.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet07.setStatus("current")
_ProxyMgmtMask07_Type = IpAddress
_ProxyMgmtMask07_Object = MibScalar
proxyMgmtMask07 = _ProxyMgmtMask07_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 34),
    _ProxyMgmtMask07_Type()
)
proxyMgmtMask07.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask07.setStatus("current")
_ProxyMgmtSubnet08_Type = IpAddress
_ProxyMgmtSubnet08_Object = MibScalar
proxyMgmtSubnet08 = _ProxyMgmtSubnet08_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 35),
    _ProxyMgmtSubnet08_Type()
)
proxyMgmtSubnet08.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet08.setStatus("current")
_ProxyMgmtMask08_Type = IpAddress
_ProxyMgmtMask08_Object = MibScalar
proxyMgmtMask08 = _ProxyMgmtMask08_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 36),
    _ProxyMgmtMask08_Type()
)
proxyMgmtMask08.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask08.setStatus("current")
_ProxyMgmtSubnet09_Type = IpAddress
_ProxyMgmtSubnet09_Object = MibScalar
proxyMgmtSubnet09 = _ProxyMgmtSubnet09_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 37),
    _ProxyMgmtSubnet09_Type()
)
proxyMgmtSubnet09.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet09.setStatus("current")
_ProxyMgmtMask09_Type = IpAddress
_ProxyMgmtMask09_Object = MibScalar
proxyMgmtMask09 = _ProxyMgmtMask09_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 38),
    _ProxyMgmtMask09_Type()
)
proxyMgmtMask09.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask09.setStatus("current")
_ProxyMgmtSubnet10_Type = IpAddress
_ProxyMgmtSubnet10_Object = MibScalar
proxyMgmtSubnet10 = _ProxyMgmtSubnet10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 39),
    _ProxyMgmtSubnet10_Type()
)
proxyMgmtSubnet10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtSubnet10.setStatus("current")
_ProxyMgmtMask10_Type = IpAddress
_ProxyMgmtMask10_Object = MibScalar
proxyMgmtMask10 = _ProxyMgmtMask10_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 40),
    _ProxyMgmtMask10_Type()
)
proxyMgmtMask10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyMgmtMask10.setStatus("current")
_Lldp_ObjectIdentity = ObjectIdentity
lldp = _Lldp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 42)
)


class _LldpEnable_Type(Integer32):
    """Custom type lldpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LldpEnable_Type.__name__ = "Integer32"
_LldpEnable_Object = MibScalar
lldpEnable = _LldpEnable_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 1),
    _LldpEnable_Type()
)
lldpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lldpEnable.setStatus("current")


class _LldpInterval_Type(Integer32):
    """Custom type lldpInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
    )


_LldpInterval_Type.__name__ = "Integer32"
_LldpInterval_Object = MibScalar
lldpInterval = _LldpInterval_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 2),
    _LldpInterval_Type()
)
lldpInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lldpInterval.setStatus("current")


class _LldpHoldTime_Type(Integer32):
    """Custom type lldpHoldTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 255),
    )


_LldpHoldTime_Type.__name__ = "Integer32"
_LldpHoldTime_Object = MibScalar
lldpHoldTime = _LldpHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 3),
    _LldpHoldTime_Type()
)
lldpHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lldpHoldTime.setStatus("current")


class _LldpRequestPower_Type(Integer32):
    """Custom type lldpRequestPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LldpRequestPower_Type.__name__ = "Integer32"
_LldpRequestPower_Object = MibScalar
lldpRequestPower = _LldpRequestPower_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 4),
    _LldpRequestPower_Type()
)
lldpRequestPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lldpRequestPower.setStatus("current")
_Position_ObjectIdentity = ObjectIdentity
position = _Position_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43)
)
_PositionInfoX_Type = DisplayString
_PositionInfoX_Object = MibScalar
positionInfoX = _PositionInfoX_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 1),
    _PositionInfoX_Type()
)
positionInfoX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoX.setStatus("current")
_PositionInfoY_Type = DisplayString
_PositionInfoY_Object = MibScalar
positionInfoY = _PositionInfoY_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 2),
    _PositionInfoY_Type()
)
positionInfoY.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoY.setStatus("current")
_PositionInfoZ_Type = DisplayString
_PositionInfoZ_Object = MibScalar
positionInfoZ = _PositionInfoZ_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 3),
    _PositionInfoZ_Type()
)
positionInfoZ.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoZ.setStatus("current")
_PositionInfoScale_Type = DisplayString
_PositionInfoScale_Object = MibScalar
positionInfoScale = _PositionInfoScale_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 4),
    _PositionInfoScale_Type()
)
positionInfoScale.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoScale.setStatus("current")
_PositionInfoAngle_Type = DisplayString
_PositionInfoAngle_Object = MibScalar
positionInfoAngle = _PositionInfoAngle_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 5),
    _PositionInfoAngle_Type()
)
positionInfoAngle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoAngle.setStatus("current")


class _PositionInfoMount_Type(Integer32):
    """Custom type positionInfoMount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("face-down", 0),
          ("face-up", 1))
    )


_PositionInfoMount_Type.__name__ = "Integer32"
_PositionInfoMount_Object = MibScalar
positionInfoMount = _PositionInfoMount_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 6),
    _PositionInfoMount_Type()
)
positionInfoMount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoMount.setStatus("current")


class _PositionInfoScope_Type(Integer32):
    """Custom type positionInfoScope based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("map", 0),
          ("global", 1))
    )


_PositionInfoScope_Type.__name__ = "Integer32"
_PositionInfoScope_Object = MibScalar
positionInfoScope = _PositionInfoScope_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 7),
    _PositionInfoScope_Type()
)
positionInfoScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoScope.setStatus("current")
_PositionInfoMap_Type = DisplayString
_PositionInfoMap_Object = MibScalar
positionInfoMap = _PositionInfoMap_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 8),
    _PositionInfoMap_Type()
)
positionInfoMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    positionInfoMap.setStatus("current")
_Traps_ObjectIdentity = ObjectIdentity
traps = _Traps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50)
)
_AdminTraps_ObjectIdentity = ObjectIdentity
adminTraps = _AdminTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1)
)
_StationTraps_ObjectIdentity = ObjectIdentity
stationTraps = _StationTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2)
)
_GeneralTraps_ObjectIdentity = ObjectIdentity
generalTraps = _GeneralTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3)
)
_EnvCtrlTraps_ObjectIdentity = ObjectIdentity
envCtrlTraps = _EnvCtrlTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4)
)
_IapTraps_ObjectIdentity = ObjectIdentity
iapTraps = _IapTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5)
)
_TrapObjects_ObjectIdentity = ObjectIdentity
trapObjects = _TrapObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 100)
)
_CfgModuleOID_Type = ObjectIdentifier
_CfgModuleOID_Object = MibScalar
cfgModuleOID = _CfgModuleOID_Object(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 100, 1),
    _CfgModuleOID_Type()
)
cfgModuleOID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    cfgModuleOID.setStatus("current")
_Xs3500Array_ObjectIdentity = ObjectIdentity
xs3500Array = _Xs3500Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 100)
)
_Xs3700Array_ObjectIdentity = ObjectIdentity
xs3700Array = _Xs3700Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 101)
)
_Xs3900Array_ObjectIdentity = ObjectIdentity
xs3900Array = _Xs3900Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 102)
)
_Xs3500_512Array_ObjectIdentity = ObjectIdentity
xs3500_512Array = _Xs3500_512Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 103)
)
_Xs3700_1GArray_ObjectIdentity = ObjectIdentity
xs3700_1GArray = _Xs3700_1GArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 104)
)
_Xs3900_1GArray_ObjectIdentity = ObjectIdentity
xs3900_1GArray = _Xs3900_1GArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 105)
)
_Xs4Array_ObjectIdentity = ObjectIdentity
xs4Array = _Xs4Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 106)
)
_Xs8Array_ObjectIdentity = ObjectIdentity
xs8Array = _Xs8Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 107)
)
_Xs16Array_ObjectIdentity = ObjectIdentity
xs16Array = _Xs16Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 108)
)
_Xn4Array_ObjectIdentity = ObjectIdentity
xn4Array = _Xn4Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 109)
)
_Xn8Array_ObjectIdentity = ObjectIdentity
xn8Array = _Xn8Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 110)
)
_Xn16Array_ObjectIdentity = ObjectIdentity
xn16Array = _Xn16Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 111)
)
_Xs12Array_ObjectIdentity = ObjectIdentity
xs12Array = _Xs12Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 112)
)
_Xn12Array_ObjectIdentity = ObjectIdentity
xn12Array = _Xn12Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 113)
)
_Xr4420Array_ObjectIdentity = ObjectIdentity
xr4420Array = _Xr4420Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 114)
)
_Xr4430Array_ObjectIdentity = ObjectIdentity
xr4430Array = _Xr4430Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 115)
)
_Xr4820Array_ObjectIdentity = ObjectIdentity
xr4820Array = _Xr4820Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 116)
)
_Xr4830Array_ObjectIdentity = ObjectIdentity
xr4830Array = _Xr4830Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 117)
)
_Xr6820Array_ObjectIdentity = ObjectIdentity
xr6820Array = _Xr6820Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 118)
)
_Xr6830Array_ObjectIdentity = ObjectIdentity
xr6830Array = _Xr6830Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 119)
)
_Xr7220Array_ObjectIdentity = ObjectIdentity
xr7220Array = _Xr7220Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 120)
)
_Xr7230Array_ObjectIdentity = ObjectIdentity
xr7230Array = _Xr7230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 121)
)
_Xr7620Array_ObjectIdentity = ObjectIdentity
xr7620Array = _Xr7620Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 122)
)
_Xr7630Array_ObjectIdentity = ObjectIdentity
xr7630Array = _Xr7630Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 123)
)
_Xr1220Array_ObjectIdentity = ObjectIdentity
xr1220Array = _Xr1220Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 124)
)
_Xr1230Array_ObjectIdentity = ObjectIdentity
xr1230Array = _Xr1230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 125)
)
_Xr2420Array_ObjectIdentity = ObjectIdentity
xr2420Array = _Xr2420Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 126)
)
_Xr2430Array_ObjectIdentity = ObjectIdentity
xr2430Array = _Xr2430Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 127)
)
_Xr2220Array_ObjectIdentity = ObjectIdentity
xr2220Array = _Xr2220Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 128)
)
_Xr2230Array_ObjectIdentity = ObjectIdentity
xr2230Array = _Xr2230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 129)
)
_Xr1120Array_ObjectIdentity = ObjectIdentity
xr1120Array = _Xr1120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 130)
)
_Xr1130Array_ObjectIdentity = ObjectIdentity
xr1130Array = _Xr1130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 131)
)
_Xr1120hArray_ObjectIdentity = ObjectIdentity
xr1120hArray = _Xr1120hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 132)
)
_Xr1130hArray_ObjectIdentity = ObjectIdentity
xr1130hArray = _Xr1130hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 133)
)
_Xr520hArray_ObjectIdentity = ObjectIdentity
xr520hArray = _Xr520hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 134)
)
_Xr1230hArray_ObjectIdentity = ObjectIdentity
xr1230hArray = _Xr1230hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 135)
)
_Xr2420hArray_ObjectIdentity = ObjectIdentity
xr2420hArray = _Xr2420hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 136)
)
_Xr2430hArray_ObjectIdentity = ObjectIdentity
xr2430hArray = _Xr2430hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 137)
)
_Xr2220hArray_ObjectIdentity = ObjectIdentity
xr2220hArray = _Xr2220hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 138)
)
_Xr2230hArray_ObjectIdentity = ObjectIdentity
xr2230hArray = _Xr2230hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 139)
)
_Xr520Array_ObjectIdentity = ObjectIdentity
xr520Array = _Xr520Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 142)
)
_Xr530Array_ObjectIdentity = ObjectIdentity
xr530Array = _Xr530Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 143)
)
_Xr1220hArray_ObjectIdentity = ObjectIdentity
xr1220hArray = _Xr1220hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 144)
)
_Xr530hArray_ObjectIdentity = ObjectIdentity
xr530hArray = _Xr530hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 145)
)
_Xr420hArray_ObjectIdentity = ObjectIdentity
xr420hArray = _Xr420hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 146)
)
_Xr430hArray_ObjectIdentity = ObjectIdentity
xr430hArray = _Xr430hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 147)
)
_Xr2425Array_ObjectIdentity = ObjectIdentity
xr2425Array = _Xr2425Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 148)
)
_Xr2435Array_ObjectIdentity = ObjectIdentity
xr2435Array = _Xr2435Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 149)
)
_Xr2425hArray_ObjectIdentity = ObjectIdentity
xr2425hArray = _Xr2425hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 150)
)
_Xr2225Array_ObjectIdentity = ObjectIdentity
xr2225Array = _Xr2225Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 151)
)
_Xr2235Array_ObjectIdentity = ObjectIdentity
xr2235Array = _Xr2235Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 152)
)
_Xr620Array_ObjectIdentity = ObjectIdentity
xr620Array = _Xr620Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 153)
)
_Xr620hArray_ObjectIdentity = ObjectIdentity
xr620hArray = _Xr620hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 154)
)
_Xr630Array_ObjectIdentity = ObjectIdentity
xr630Array = _Xr630Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 155)
)
_Xr2426Array_ObjectIdentity = ObjectIdentity
xr2426Array = _Xr2426Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 156)
)
_Xr2436Array_ObjectIdentity = ObjectIdentity
xr2436Array = _Xr2436Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 157)
)
_Xr2426hArray_ObjectIdentity = ObjectIdentity
xr2426hArray = _Xr2426hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 158)
)
_Xr2226Array_ObjectIdentity = ObjectIdentity
xr2226Array = _Xr2226Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 159)
)
_Xr2226hArray_ObjectIdentity = ObjectIdentity
xr2226hArray = _Xr2226hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 160)
)
_Xr2236Array_ObjectIdentity = ObjectIdentity
xr2236Array = _Xr2236Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 161)
)
_Xr630hArray_ObjectIdentity = ObjectIdentity
xr630hArray = _Xr630hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 162)
)
_Xr2225hArray_ObjectIdentity = ObjectIdentity
xr2225hArray = _Xr2225hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 163)
)
_Xr2235hArray_ObjectIdentity = ObjectIdentity
xr2235hArray = _Xr2235hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 164)
)
_Xr2236hArray_ObjectIdentity = ObjectIdentity
xr2236hArray = _Xr2236hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 165)
)
_Xr2435hArray_ObjectIdentity = ObjectIdentity
xr2435hArray = _Xr2435hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 166)
)
_Xr2436hArray_ObjectIdentity = ObjectIdentity
xr2436hArray = _Xr2436hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 167)
)
_Xr1126Array_ObjectIdentity = ObjectIdentity
xr1126Array = _Xr1126Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 168)
)
_Xr1136Array_ObjectIdentity = ObjectIdentity
xr1136Array = _Xr1136Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 169)
)
_Xr1226Array_ObjectIdentity = ObjectIdentity
xr1226Array = _Xr1226Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 170)
)
_Xr1236Array_ObjectIdentity = ObjectIdentity
xr1236Array = _Xr1236Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 171)
)
_Xr1126hArray_ObjectIdentity = ObjectIdentity
xr1126hArray = _Xr1126hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 172)
)
_Xr1136hArray_ObjectIdentity = ObjectIdentity
xr1136hArray = _Xr1136hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 173)
)
_Xr1226hArray_ObjectIdentity = ObjectIdentity
xr1226hArray = _Xr1226hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 174)
)
_Xr1236hArray_ObjectIdentity = ObjectIdentity
xr1236hArray = _Xr1236hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 175)
)
_Xr4426Array_ObjectIdentity = ObjectIdentity
xr4426Array = _Xr4426Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 176)
)
_Xr4436Array_ObjectIdentity = ObjectIdentity
xr4436Array = _Xr4436Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 177)
)
_Xr4826Array_ObjectIdentity = ObjectIdentity
xr4826Array = _Xr4826Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 178)
)
_Xr4836Array_ObjectIdentity = ObjectIdentity
xr4836Array = _Xr4836Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 179)
)
_Xr6826Array_ObjectIdentity = ObjectIdentity
xr6826Array = _Xr6826Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 180)
)
_Xr6836Array_ObjectIdentity = ObjectIdentity
xr6836Array = _Xr6836Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 181)
)
_Xr7226Array_ObjectIdentity = ObjectIdentity
xr7226Array = _Xr7226Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 182)
)
_Xr7236Array_ObjectIdentity = ObjectIdentity
xr7236Array = _Xr7236Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 183)
)
_Xr7626Array_ObjectIdentity = ObjectIdentity
xr7626Array = _Xr7626Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 184)
)
_Xr7636Array_ObjectIdentity = ObjectIdentity
xr7636Array = _Xr7636Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 185)
)
_Xd1_130Array_ObjectIdentity = ObjectIdentity
xd1_130Array = _Xd1_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 186)
)
_Xd2_130Array_ObjectIdentity = ObjectIdentity
xd2_130Array = _Xd2_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 187)
)
_Xd4_130Array_ObjectIdentity = ObjectIdentity
xd4_130Array = _Xd4_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 188)
)
_Xd8_130Array_ObjectIdentity = ObjectIdentity
xd8_130Array = _Xd8_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 189)
)
_Xh1_130Array_ObjectIdentity = ObjectIdentity
xh1_130Array = _Xh1_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 190)
)
_Xh2_130Array_ObjectIdentity = ObjectIdentity
xh2_130Array = _Xh2_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 191)
)
_Xh4_130Array_ObjectIdentity = ObjectIdentity
xh4_130Array = _Xh4_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 192)
)
_Xh8_130Array_ObjectIdentity = ObjectIdentity
xh8_130Array = _Xh8_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 193)
)
_Xd1_240Array_ObjectIdentity = ObjectIdentity
xd1_240Array = _Xd1_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 194)
)
_Xd2_240Array_ObjectIdentity = ObjectIdentity
xd2_240Array = _Xd2_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 195)
)
_Xd4_240Array_ObjectIdentity = ObjectIdentity
xd4_240Array = _Xd4_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 196)
)
_Xd8_240Array_ObjectIdentity = ObjectIdentity
xd8_240Array = _Xd8_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 197)
)
_Xh1_240Array_ObjectIdentity = ObjectIdentity
xh1_240Array = _Xh1_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 198)
)
_Xh2_240Array_ObjectIdentity = ObjectIdentity
xh2_240Array = _Xh2_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 199)
)
_Xh4_240Array_ObjectIdentity = ObjectIdentity
xh4_240Array = _Xh4_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 200)
)
_Xh8_240Array_ObjectIdentity = ObjectIdentity
xh8_240Array = _Xh8_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 201)
)
_Xd1_120Array_ObjectIdentity = ObjectIdentity
xd1_120Array = _Xd1_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 202)
)
_Xd2_120Array_ObjectIdentity = ObjectIdentity
xd2_120Array = _Xd2_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 203)
)
_Xd4_120Array_ObjectIdentity = ObjectIdentity
xd4_120Array = _Xd4_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 204)
)
_Xd8_120Array_ObjectIdentity = ObjectIdentity
xd8_120Array = _Xd8_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 205)
)
_Xh1_120Array_ObjectIdentity = ObjectIdentity
xh1_120Array = _Xh1_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 206)
)
_Xh2_120Array_ObjectIdentity = ObjectIdentity
xh2_120Array = _Xh2_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 207)
)
_Xh4_120Array_ObjectIdentity = ObjectIdentity
xh4_120Array = _Xh4_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 208)
)
_Xh8_120Array_ObjectIdentity = ObjectIdentity
xh8_120Array = _Xh8_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 209)
)
_Xr1147Array_ObjectIdentity = ObjectIdentity
xr1147Array = _Xr1147Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 210)
)
_Xr1247Array_ObjectIdentity = ObjectIdentity
xr1247Array = _Xr1247Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 211)
)
_Xr2247Array_ObjectIdentity = ObjectIdentity
xr2247Array = _Xr2247Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 212)
)
_Xr2447Array_ObjectIdentity = ObjectIdentity
xr2447Array = _Xr2447Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 213)
)
_Xr1147hArray_ObjectIdentity = ObjectIdentity
xr1147hArray = _Xr1147hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 214)
)
_Xr1247hArray_ObjectIdentity = ObjectIdentity
xr1247hArray = _Xr1247hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 215)
)
_Xr2247hArray_ObjectIdentity = ObjectIdentity
xr2247hArray = _Xr2247hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 216)
)
_Xr2447hArray_ObjectIdentity = ObjectIdentity
xr2447hArray = _Xr2447hArray_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 217)
)
_Xr4447Array_ObjectIdentity = ObjectIdentity
xr4447Array = _Xr4447Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 218)
)
_Xr4847Array_ObjectIdentity = ObjectIdentity
xr4847Array = _Xr4847Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 219)
)
_Xr6847Array_ObjectIdentity = ObjectIdentity
xr6847Array = _Xr6847Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 220)
)
_Xr7247Array_ObjectIdentity = ObjectIdentity
xr7247Array = _Xr7247Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 221)
)
_Xr7647Array_ObjectIdentity = ObjectIdentity
xr7647Array = _Xr7647Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 222)
)
_Xa1_120Array_ObjectIdentity = ObjectIdentity
xa1_120Array = _Xa1_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 223)
)
_Xa2_120Array_ObjectIdentity = ObjectIdentity
xa2_120Array = _Xa2_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 224)
)
_Xa4_120Array_ObjectIdentity = ObjectIdentity
xa4_120Array = _Xa4_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 225)
)
_Xa8_120Array_ObjectIdentity = ObjectIdentity
xa8_120Array = _Xa8_120Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 226)
)
_Xa1_130Array_ObjectIdentity = ObjectIdentity
xa1_130Array = _Xa1_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 227)
)
_Xa2_130Array_ObjectIdentity = ObjectIdentity
xa2_130Array = _Xa2_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 228)
)
_Xa4_130Array_ObjectIdentity = ObjectIdentity
xa4_130Array = _Xa4_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 229)
)
_Xa8_130Array_ObjectIdentity = ObjectIdentity
xa8_130Array = _Xa8_130Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 230)
)
_Xa1_240Array_ObjectIdentity = ObjectIdentity
xa1_240Array = _Xa1_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 231)
)
_Xa2_240Array_ObjectIdentity = ObjectIdentity
xa2_240Array = _Xa2_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 232)
)
_Xa4_240Array_ObjectIdentity = ObjectIdentity
xa4_240Array = _Xa4_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 233)
)
_Xa8_240Array_ObjectIdentity = ObjectIdentity
xa8_240Array = _Xa8_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 234)
)
_Xd1_230Array_ObjectIdentity = ObjectIdentity
xd1_230Array = _Xd1_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 235)
)
_Xd2_230Array_ObjectIdentity = ObjectIdentity
xd2_230Array = _Xd2_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 236)
)
_Xd3_230Array_ObjectIdentity = ObjectIdentity
xd3_230Array = _Xd3_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 237)
)
_Xd4_230Array_ObjectIdentity = ObjectIdentity
xd4_230Array = _Xd4_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 238)
)
_Xd8_230Array_ObjectIdentity = ObjectIdentity
xd8_230Array = _Xd8_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 239)
)
_Xh1_230Array_ObjectIdentity = ObjectIdentity
xh1_230Array = _Xh1_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 240)
)
_Xh2_230Array_ObjectIdentity = ObjectIdentity
xh2_230Array = _Xh2_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 241)
)
_Xh3_230Array_ObjectIdentity = ObjectIdentity
xh3_230Array = _Xh3_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 242)
)
_Xh4_230Array_ObjectIdentity = ObjectIdentity
xh4_230Array = _Xh4_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 243)
)
_Xh8_230Array_ObjectIdentity = ObjectIdentity
xh8_230Array = _Xh8_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 244)
)
_Xa1_230Array_ObjectIdentity = ObjectIdentity
xa1_230Array = _Xa1_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 245)
)
_Xa2_230Array_ObjectIdentity = ObjectIdentity
xa2_230Array = _Xa2_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 246)
)
_Xa3_230Array_ObjectIdentity = ObjectIdentity
xa3_230Array = _Xa3_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 247)
)
_Xa4_230Array_ObjectIdentity = ObjectIdentity
xa4_230Array = _Xa4_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 248)
)
_Xa8_230Array_ObjectIdentity = ObjectIdentity
xa8_230Array = _Xa8_230Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 249)
)
_Xa3_240Array_ObjectIdentity = ObjectIdentity
xa3_240Array = _Xa3_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 250)
)
_Xh3_240Array_ObjectIdentity = ObjectIdentity
xh3_240Array = _Xh3_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 251)
)
_Xd3_240Array_ObjectIdentity = ObjectIdentity
xd3_240Array = _Xd3_240Array_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 21013, 1, 252)
)

# Managed Objects groups


# Notification objects

adminLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1, 1)
)
adminLogin.setObjects(
    ("XIRRUS-MIB", "adminUsername")
)
if mibBuilder.loadTexts:
    adminLogin.setStatus(
        "current"
    )

adminLogout = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1, 2)
)
adminLogout.setObjects(
    ("XIRRUS-MIB", "adminUsername")
)
if mibBuilder.loadTexts:
    adminLogout.setStatus(
        "current"
    )

stationACLFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2, 1)
)
stationACLFailure.setObjects(
    ("XIRRUS-MIB", "stationAssociationMACAddress")
)
if mibBuilder.loadTexts:
    stationACLFailure.setStatus(
        "current"
    )

stationRadiusAuthFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2, 2)
)
stationRadiusAuthFailure.setObjects(
    ("XIRRUS-MIB", "stationAssociationMACAddress")
)
if mibBuilder.loadTexts:
    stationRadiusAuthFailure.setStatus(
        "current"
    )

resetArray = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 1)
)
if mibBuilder.loadTexts:
    resetArray.setStatus(
        "current"
    )

rebootArray = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 2)
)
if mibBuilder.loadTexts:
    rebootArray.setStatus(
        "current"
    )

softwareUploadFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 3)
)
if mibBuilder.loadTexts:
    softwareUploadFailure.setStatus(
        "current"
    )

softwareUploadSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 4)
)
if mibBuilder.loadTexts:
    softwareUploadSuccess.setStatus(
        "current"
    )

softwareUpgradeFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 5)
)
if mibBuilder.loadTexts:
    softwareUpgradeFailure.setStatus(
        "current"
    )

softwareUpgradeSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 6)
)
if mibBuilder.loadTexts:
    softwareUpgradeSuccess.setStatus(
        "current"
    )

dhcpRenewFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 7)
)
dhcpRenewFailure.setObjects(
    ("XIRRUS-MIB", "ethStatsIfaceName")
)
if mibBuilder.loadTexts:
    dhcpRenewFailure.setStatus(
        "current"
    )

cfgChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 8)
)
cfgChange.setObjects(
    ("XIRRUS-MIB", "cfgModuleOID")
)
if mibBuilder.loadTexts:
    cfgChange.setStatus(
        "current"
    )

keepAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 9)
)
keepAlive.setObjects(
    ("XIRRUS-MIB", "systemHostname")
)
if mibBuilder.loadTexts:
    keepAlive.setStatus(
        "current"
    )

encDoorOpened = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 10)
)
if mibBuilder.loadTexts:
    encDoorOpened.setStatus(
        "current"
    )

encDoorClosed = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 11)
)
if mibBuilder.loadTexts:
    encDoorClosed.setStatus(
        "current"
    )

flashPartitionCorrupt = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 12)
)
if mibBuilder.loadTexts:
    flashPartitionCorrupt.setStatus(
        "current"
    )

licenseUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 13)
)
if mibBuilder.loadTexts:
    licenseUpdate.setStatus(
        "current"
    )

radioMixInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 14)
)
if mibBuilder.loadTexts:
    radioMixInvalid.setStatus(
        "current"
    )

envCtrlTempOver = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 1)
)
if mibBuilder.loadTexts:
    envCtrlTempOver.setStatus(
        "current"
    )

envCtrlTempUnder = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 2)
)
if mibBuilder.loadTexts:
    envCtrlTempUnder.setStatus(
        "current"
    )

envCtrlHumidOver = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 3)
)
if mibBuilder.loadTexts:
    envCtrlHumidOver.setStatus(
        "current"
    )

envCtrlFanFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 4)
)
if mibBuilder.loadTexts:
    envCtrlFanFail.setStatus(
        "current"
    )

iapBeaconProbeFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 1)
)
iapBeaconProbeFailure.setObjects(
    ("XIRRUS-MIB", "iapStatsIfaceName")
)
if mibBuilder.loadTexts:
    iapBeaconProbeFailure.setStatus(
        "current"
    )

iapBeaconProbeFailurePhyReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 2)
)
iapBeaconProbeFailurePhyReset.setObjects(
    ("XIRRUS-MIB", "iapStatsIfaceName")
)
if mibBuilder.loadTexts:
    iapBeaconProbeFailurePhyReset.setStatus(
        "current"
    )

iapBeaconProbeFailureMacReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 3)
)
iapBeaconProbeFailureMacReset.setObjects(
    ("XIRRUS-MIB", "iapStatsIfaceName")
)
if mibBuilder.loadTexts:
    iapBeaconProbeFailureMacReset.setStatus(
        "current"
    )

iapBeaconProbeFailureArrayReboot = NotificationType(
    (1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 4)
)
iapBeaconProbeFailureArrayReboot.setObjects(
    ("XIRRUS-MIB", "iapStatsIfaceName")
)
if mibBuilder.loadTexts:
    iapBeaconProbeFailureArrayReboot.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "XIRRUS-MIB",
    **{"xirrus": xirrus,
       "products": products,
       "xmManage": xmManage,
       "xsArray": xsArray,
       "acl": acl,
       "aclEnable": aclEnable,
       "aclTable": aclTable,
       "aclEntry": aclEntry,
       "aclIndex": aclIndex,
       "aclMacAddress": aclMacAddress,
       "aclRowStatus": aclRowStatus,
       "aclTableReset": aclTableReset,
       "aclSsidTable": aclSsidTable,
       "aclSsidEntry": aclSsidEntry,
       "aclSsidIndex": aclSsidIndex,
       "aclSsidMacAddress": aclSsidMacAddress,
       "aclSsidName": aclSsidName,
       "aclSsidRowStatus": aclSsidRowStatus,
       "aclSsidTableReset": aclSsidTableReset,
       "admin": admin,
       "adminTable": adminTable,
       "adminEntry": adminEntry,
       "adminIndex": adminIndex,
       "adminUsername": adminUsername,
       "adminPassword": adminPassword,
       "adminPasswordForm": adminPasswordForm,
       "adminPrivilege": adminPrivilege,
       "adminRowStatus": adminRowStatus,
       "adminPrivilegeLevel": adminPrivilegeLevel,
       "adminTableReset": adminTableReset,
       "adminTableClear": adminTableClear,
       "adminRadius": adminRadius,
       "adminRadiusEnable": adminRadiusEnable,
       "adminRadiusPriServer": adminRadiusPriServer,
       "adminRadiusPriServerPort": adminRadiusPriServerPort,
       "adminRadiusPriServerSecret": adminRadiusPriServerSecret,
       "adminRadiusPriServerSecretEnc": adminRadiusPriServerSecretEnc,
       "adminRadiusSecServer": adminRadiusSecServer,
       "adminRadiusSecServerPort": adminRadiusSecServerPort,
       "adminRadiusSecServerSecret": adminRadiusSecServerSecret,
       "adminRadiusSecServerSecretEnc": adminRadiusSecServerSecretEnc,
       "adminRadiusTimeout": adminRadiusTimeout,
       "adminRadiusAuthType": adminRadiusAuthType,
       "adminHistoryTable": adminHistoryTable,
       "adminHistoryEntry": adminHistoryEntry,
       "adminHistoryIndex": adminHistoryIndex,
       "adminHistoryUsername": adminHistoryUsername,
       "adminHistoryIPAddress": adminHistoryIPAddress,
       "adminHistoryInterface": adminHistoryInterface,
       "adminHistoryLoginTime": adminHistoryLoginTime,
       "adminHistoryLogoutTime": adminHistoryLogoutTime,
       "adminPrivLevelTable": adminPrivLevelTable,
       "adminPrivLevelEntry": adminPrivLevelEntry,
       "adminPrivLevelNumber": adminPrivLevelNumber,
       "adminPrivLevelName": adminPrivLevelName,
       "adminPrivSectionTable": adminPrivSectionTable,
       "adminPrivSectionEntry": adminPrivSectionEntry,
       "adminPrivSectionIndex": adminPrivSectionIndex,
       "adminPrivSectionName": adminPrivSectionName,
       "adminPrivSectionLevel": adminPrivSectionLevel,
       "cdp": cdp,
       "cdpInfoTable": cdpInfoTable,
       "cdpInfoEntry": cdpInfoEntry,
       "cdpInfoIndex": cdpInfoIndex,
       "cdpInfoHostname": cdpInfoHostname,
       "cdpInfoIPAddress": cdpInfoIPAddress,
       "cdpInfoModel": cdpInfoModel,
       "cdpInfoInterface": cdpInfoInterface,
       "cdpInfoNativeVlan": cdpInfoNativeVlan,
       "cdpInfoCapabilities": cdpInfoCapabilities,
       "cdpInfoSoftware": cdpInfoSoftware,
       "cdpEnable": cdpEnable,
       "cdpInterval": cdpInterval,
       "cdpHoldTime": cdpHoldTime,
       "dateTime": dateTime,
       "dateTimeSet": dateTimeSet,
       "dateTimeZoneHours": dateTimeZoneHours,
       "dateTimeZoneMins": dateTimeZoneMins,
       "dateTimeDSTAdjust": dateTimeDSTAdjust,
       "ntp": ntp,
       "ntpEnable": ntpEnable,
       "ntpPrimary": ntpPrimary,
       "ntpSecondary": ntpSecondary,
       "ntpPrimaryAuthType": ntpPrimaryAuthType,
       "ntpPrimaryAuthKeyID": ntpPrimaryAuthKeyID,
       "ntpPrimaryAuthKey": ntpPrimaryAuthKey,
       "ntpPrimaryAuthKeyEnc": ntpPrimaryAuthKeyEnc,
       "ntpSecondaryAuthType": ntpSecondaryAuthType,
       "ntpSecondaryAuthKeyID": ntpSecondaryAuthKeyID,
       "ntpSecondaryAuthKey": ntpSecondaryAuthKey,
       "ntpSecondaryAuthKeyEnc": ntpSecondaryAuthKeyEnc,
       "dhcp": dhcp,
       "dhcpPoolTableReset": dhcpPoolTableReset,
       "dhcpPoolTable": dhcpPoolTable,
       "dhcpPoolEntry": dhcpPoolEntry,
       "dhcpPoolIndex": dhcpPoolIndex,
       "dhcpPoolName": dhcpPoolName,
       "dhcpPoolEnable": dhcpPoolEnable,
       "dhcpPoolRangeStartIP": dhcpPoolRangeStartIP,
       "dhcpPoolRangeEndIP": dhcpPoolRangeEndIP,
       "dhcpPoolDefaultLease": dhcpPoolDefaultLease,
       "dhcpPoolMaxLease": dhcpPoolMaxLease,
       "dhcpPoolMask": dhcpPoolMask,
       "dhcpPoolGateway": dhcpPoolGateway,
       "dhcpPoolDNSDomain": dhcpPoolDNSDomain,
       "dhcpPoolDNSServer1": dhcpPoolDNSServer1,
       "dhcpPoolDNSServer2": dhcpPoolDNSServer2,
       "dhcpPoolDNSServer3": dhcpPoolDNSServer3,
       "dhcpPoolNAT": dhcpPoolNAT,
       "dhcpPoolRowStatus": dhcpPoolRowStatus,
       "dns": dns,
       "dnsDomain": dnsDomain,
       "dnsSrv1": dnsSrv1,
       "dnsSrv2": dnsSrv2,
       "dnsSrv3": dnsSrv3,
       "dnsUseDhcp": dnsUseDhcp,
       "filter": filter,
       "filterMoveDown": filterMoveDown,
       "filterMoveUp": filterMoveUp,
       "filterTableReset": filterTableReset,
       "filterTable": filterTable,
       "filterEntry": filterEntry,
       "filterIndex": filterIndex,
       "filterName": filterName,
       "filterEnable": filterEnable,
       "filterType": filterType,
       "filterProtocol": filterProtocol,
       "filterPort": filterPort,
       "filterSrcType": filterSrcType,
       "filterSrcInvertSense": filterSrcInvertSense,
       "filterSrcSsid": filterSrcSsid,
       "filterSrcVlan": filterSrcVlan,
       "filterSrcIPAddress": filterSrcIPAddress,
       "filterSrcIPAddressMask": filterSrcIPAddressMask,
       "filterSrcMacAddress": filterSrcMacAddress,
       "filterSrcMacAddressMask": filterSrcMacAddressMask,
       "filterSrcIface": filterSrcIface,
       "filterDstType": filterDstType,
       "filterDstInvertSense": filterDstInvertSense,
       "filterDstSsid": filterDstSsid,
       "filterDstVlan": filterDstVlan,
       "filterDstIPAddress": filterDstIPAddress,
       "filterDstIPAddressMask": filterDstIPAddressMask,
       "filterDstMacAddress": filterDstMacAddress,
       "filterDstMacAddressMask": filterDstMacAddressMask,
       "filterDstIface": filterDstIface,
       "filterSetQOS": filterSetQOS,
       "filterSetVlan": filterSetVlan,
       "filterPriority": filterPriority,
       "filterRowStatus": filterRowStatus,
       "filterList": filterList,
       "filterPortRange": filterPortRange,
       "filterSrcGroup": filterSrcGroup,
       "filterDstGroup": filterDstGroup,
       "filterLog": filterLog,
       "filterPackets": filterPackets,
       "filterBytes": filterBytes,
       "filterApplication": filterApplication,
       "filterLayer": filterLayer,
       "filterSetDSCP": filterSetDSCP,
       "filterTrafficLimit": filterTrafficLimit,
       "filterTrafficLimitType": filterTrafficLimitType,
       "filterTimeOn": filterTimeOn,
       "filterTimeOff": filterTimeOff,
       "filterDays": filterDays,
       "filterSetIP": filterSetIP,
       "filterListTable": filterListTable,
       "filterListEntry": filterListEntry,
       "filterListIndex": filterListIndex,
       "filterListName": filterListName,
       "filterListEnable": filterListEnable,
       "filterListLength": filterListLength,
       "filterListReset": filterListReset,
       "filterListRowStatus": filterListRowStatus,
       "filterStateful": filterStateful,
       "filterTrackApps": filterTrackApps,
       "filterAppTable": filterAppTable,
       "filterAppEntry": filterAppEntry,
       "filterAppIndex": filterAppIndex,
       "filterAppGuid": filterAppGuid,
       "filterAppCategory": filterAppCategory,
       "filterAppDescription": filterAppDescription,
       "filterAppCatTable": filterAppCatTable,
       "filterAppCatEntry": filterAppCatEntry,
       "filterAppCatIndex": filterAppCatIndex,
       "filterAppCatGuid": filterAppCatGuid,
       "filterAppCatDescription": filterAppCatDescription,
       "filterAppListTable": filterAppListTable,
       "filterAppListEntry": filterAppListEntry,
       "filterAppListIndex": filterAppListIndex,
       "filterAppListGuid": filterAppListGuid,
       "filterAppListDesc": filterAppListDesc,
       "filterAppListRowStatus": filterAppListRowStatus,
       "appListMemberTable": appListMemberTable,
       "appListMemberEntry": appListMemberEntry,
       "appListMemberIndex": appListMemberIndex,
       "appListMemberGuid": appListMemberGuid,
       "appListMemberApp": appListMemberApp,
       "appListMemberRowStatus": appListMemberRowStatus,
       "interface": interface,
       "iap": iap,
       "iapTable": iapTable,
       "iapEntry": iapEntry,
       "iapIndex": iapIndex,
       "iapName": iapName,
       "iapMacAddress": iapMacAddress,
       "iapNumStations": iapNumStations,
       "iapEnable": iapEnable,
       "iapCellSize": iapCellSize,
       "iapTxPwr": iapTxPwr,
       "iapRxThreshold": iapRxThreshold,
       "iapChannel": iapChannel,
       "iapAntenna": iapAntenna,
       "iapDot11Mode": iapDot11Mode,
       "iapDescription": iapDescription,
       "iapWdsClientLink": iapWdsClientLink,
       "iapWdsHostLink": iapWdsHostLink,
       "iapChannelBondMode": iapChannelBondMode,
       "iapBondedChannel": iapBondedChannel,
       "iapMaxStationsHour": iapMaxStationsHour,
       "iapMaxStationsDay": iapMaxStationsDay,
       "iapMaxStationsWeek": iapMaxStationsWeek,
       "iapMaxStationsMonth": iapMaxStationsMonth,
       "iapMaxStationsYear": iapMaxStationsYear,
       "iapChannelMode": iapChannelMode,
       "iapWifiMode": iapWifiMode,
       "iapPresent": iapPresent,
       "iapWdsLinkDistance": iapWdsLinkDistance,
       "iapResetsMonitor": iapResetsMonitor,
       "iapResetsBeacon": iapResetsBeacon,
       "iapResetsPhy": iapResetsPhy,
       "iapResetsMac": iapResetsMac,
       "iapResetsSystem": iapResetsSystem,
       "iapSpatialStreams": iapSpatialStreams,
       "iapChannelBond80Mhz": iapChannelBond80Mhz,
       "iapBondedChannelList": iapBondedChannelList,
       "iapType": iapType,
       "iapChannelBond160Mhz": iapChannelBond160Mhz,
       "global": _pysmi_global,
       "globalIAPEnable": globalIAPEnable,
       "globalIAPCellSize": globalIAPCellSize,
       "globalIAPTxPwr": globalIAPTxPwr,
       "globalIAPRxThreshold": globalIAPRxThreshold,
       "globalIAPBeaconRate": globalIAPBeaconRate,
       "globalIAPBeaconDTIM": globalIAPBeaconDTIM,
       "globalIAPLongRetry": globalIAPLongRetry,
       "globalIAPShortRetry": globalIAPShortRetry,
       "globalIAPMaxStations": globalIAPMaxStations,
       "globalIAPInactiveTime": globalIAPInactiveTime,
       "globalIAPReauthPeriod": globalIAPReauthPeriod,
       "globalIAPSta2Sta": globalIAPSta2Sta,
       "globalMgmt": globalMgmt,
       "leds": leds,
       "ledsEnable": ledsEnable,
       "ledsActivityTable": ledsActivityTable,
       "ledsActivityEntry": ledsActivityEntry,
       "ledsActivityIndex": ledsActivityIndex,
       "ledsActivityPacketType": ledsActivityPacketType,
       "ledsActivityStatus": ledsActivityStatus,
       "autoChannel": autoChannel,
       "autoChannelEnable": autoChannelEnable,
       "autoChannelPowerUp": autoChannelPowerUp,
       "autoChannelSchedule": autoChannelSchedule,
       "rogueDetect": rogueDetect,
       "rogueDetectEnable": rogueDetectEnable,
       "rogueDetectSSIDTable": rogueDetectSSIDTable,
       "rogueDetectSSIDEntry": rogueDetectSSIDEntry,
       "rogueDetectSSIDIndex": rogueDetectSSIDIndex,
       "rogueDetectSSIDName": rogueDetectSSIDName,
       "rogueDetectSSIDStatus": rogueDetectSSIDStatus,
       "rogueDetectSSIDRowStatus": rogueDetectSSIDRowStatus,
       "rogueDetectSSIDMatch": rogueDetectSSIDMatch,
       "rogueDetectAPTable": rogueDetectAPTable,
       "rogueDetectAPEntry": rogueDetectAPEntry,
       "rogueDetectAPIndex": rogueDetectAPIndex,
       "rogueDetectAPStatus": rogueDetectAPStatus,
       "rogueDetectAPSSID": rogueDetectAPSSID,
       "rogueDetectAPBSSID": rogueDetectAPBSSID,
       "rogueDetectAPManufacturer": rogueDetectAPManufacturer,
       "rogueDetectAPChannel": rogueDetectAPChannel,
       "rogueDetectAPRSSI": rogueDetectAPRSSI,
       "rogueDetectAPSecurity": rogueDetectAPSecurity,
       "rogueDetectAPIPAddress": rogueDetectAPIPAddress,
       "rogueDetectAPTimeDiscovered": rogueDetectAPTimeDiscovered,
       "rogueDetectAPTimeLastActive": rogueDetectAPTimeLastActive,
       "rogueDetectAPType": rogueDetectAPType,
       "rogueDetectSSIDTableReset": rogueDetectSSIDTableReset,
       "rogueDetectAPOrigTable": rogueDetectAPOrigTable,
       "rogueDetectAPOrigTableEntry": rogueDetectAPOrigTableEntry,
       "rogueDetectAPOrigTableIndex": rogueDetectAPOrigTableIndex,
       "rogueDetectAPOrigTableSSID": rogueDetectAPOrigTableSSID,
       "rogueDetectAPOrigTableBSSID": rogueDetectAPOrigTableBSSID,
       "rogueDetectAPOrigTableManufacturer": rogueDetectAPOrigTableManufacturer,
       "rogueDetectAPOrigTableChannel": rogueDetectAPOrigTableChannel,
       "rogueDetectAPOrigTableBand": rogueDetectAPOrigTableBand,
       "rogueDetectAPOrigTableRSSI": rogueDetectAPOrigTableRSSI,
       "rogueDetectAPOrigTableSecurity": rogueDetectAPOrigTableSecurity,
       "rogueDetectAPOrigTableIPAddress": rogueDetectAPOrigTableIPAddress,
       "rogueDetectAPOrigTableTimeDiscovered": rogueDetectAPOrigTableTimeDiscovered,
       "rogueDetectAPOrigTableTimeLastActive": rogueDetectAPOrigTableTimeLastActive,
       "rogueDetectAPOrigTableActive": rogueDetectAPOrigTableActive,
       "rogueDetectAPOrigTableType": rogueDetectAPOrigTableType,
       "rogueDetectAutoBlockEnc": rogueDetectAutoBlockEnc,
       "rogueDetectAutoBlockRSSI": rogueDetectAutoBlockRSSI,
       "rogueDetectAutoBlockType": rogueDetectAutoBlockType,
       "rogueDetectAPOrigTablePeriod": rogueDetectAPOrigTablePeriod,
       "rogueDetectAutoBlockWhitelistTable": rogueDetectAutoBlockWhitelistTable,
       "rogueDetectAutoBlockWhitelistEntry": rogueDetectAutoBlockWhitelistEntry,
       "rogueDetectAutoBlockWhitelistIndex": rogueDetectAutoBlockWhitelistIndex,
       "rogueDetectAutoBlockWhitelistChannel": rogueDetectAutoBlockWhitelistChannel,
       "rogueDetectAutoBlockWhitelistRowStatus": rogueDetectAutoBlockWhitelistRowStatus,
       "rogueDetectAutoBlockWhitelistTableReset": rogueDetectAutoBlockWhitelistTableReset,
       "fastRoaming": fastRoaming,
       "fastRoamingEnable": fastRoamingEnable,
       "fastRoamingPeerMode": fastRoamingPeerMode,
       "fastRoamingTargetArrayTableReset": fastRoamingTargetArrayTableReset,
       "fastRoamingLayer": fastRoamingLayer,
       "fastRoamingTargetTable": fastRoamingTargetTable,
       "fastRoamingTargetEntry": fastRoamingTargetEntry,
       "fastRoamingTargetIndex": fastRoamingTargetIndex,
       "fastRoamingTargetType": fastRoamingTargetType,
       "fastRoamingTargetMacAddress": fastRoamingTargetMacAddress,
       "fastRoamingTargetIpAddress": fastRoamingTargetIpAddress,
       "fastRoamingTargetHostname": fastRoamingTargetHostname,
       "fastRoamingTargetRowStatus": fastRoamingTargetRowStatus,
       "globalLoadBalancing": globalLoadBalancing,
       "globalCountryCode": globalCountryCode,
       "globalSharpCell": globalSharpCell,
       "globalIAPMaxPhones": globalIAPMaxPhones,
       "globalNumStations": globalNumStations,
       "globalBroadcastRates": globalBroadcastRates,
       "autoCell": autoCell,
       "autoCellEnable": autoCellEnable,
       "autoCellOverlap": autoCellOverlap,
       "autoCellPeriod": autoCellPeriod,
       "autoCellMinTxPwr": autoCellMinTxPwr,
       "autoCellByChan": autoCellByChan,
       "globalPublicSafety": globalPublicSafety,
       "globalDot11hSupport": globalDot11hSupport,
       "globalLoopbackTest": globalLoopbackTest,
       "globalArpFilter": globalArpFilter,
       "globalIAPChannelReset": globalIAPChannelReset,
       "globalWfaMode": globalWfaMode,
       "globalMaxStations": globalMaxStations,
       "globalMulticastMode": globalMulticastMode,
       "ids": ids,
       "idsEventTable": idsEventTable,
       "idsEventEntry": idsEventEntry,
       "idsEventIndex": idsEventIndex,
       "idsEventId": idsEventId,
       "idsEventTime": idsEventTime,
       "idsEventTimestamp": idsEventTimestamp,
       "idsEventIAP": idsEventIAP,
       "idsEventChannel": idsEventChannel,
       "idsEventPeriod": idsEventPeriod,
       "idsEventCurPackets": idsEventCurPackets,
       "idsEventAvgPackets": idsEventAvgPackets,
       "idsEventMaxPackets": idsEventMaxPackets,
       "idsEventMacAddress": idsEventMacAddress,
       "idsEventSSID": idsEventSSID,
       "idsDosAttack": idsDosAttack,
       "idsBeaconFloodMode": idsBeaconFloodMode,
       "idsBeaconFloodThreshold": idsBeaconFloodThreshold,
       "idsBeaconFloodPeriod": idsBeaconFloodPeriod,
       "idsProbeReqFloodMode": idsProbeReqFloodMode,
       "idsProbeReqFloodThreshold": idsProbeReqFloodThreshold,
       "idsProbeReqFloodPeriod": idsProbeReqFloodPeriod,
       "idsAuthFloodMode": idsAuthFloodMode,
       "idsAuthFloodThreshold": idsAuthFloodThreshold,
       "idsAuthFloodPeriod": idsAuthFloodPeriod,
       "idsAssocFloodMode": idsAssocFloodMode,
       "idsAssocFloodThreshold": idsAssocFloodThreshold,
       "idsAssocFloodPeriod": idsAssocFloodPeriod,
       "idsDisassocFloodMode": idsDisassocFloodMode,
       "idsDisassocFloodThreshold": idsDisassocFloodThreshold,
       "idsDisassocFloodPeriod": idsDisassocFloodPeriod,
       "idsDeauthFloodMode": idsDeauthFloodMode,
       "idsDeauthFloodThreshold": idsDeauthFloodThreshold,
       "idsDeauthFloodPeriod": idsDeauthFloodPeriod,
       "idsEAPFloodMode": idsEAPFloodMode,
       "idsEAPFloodThreshold": idsEAPFloodThreshold,
       "idsEAPFloodPeriod": idsEAPFloodPeriod,
       "idsNullProbeRespEnable": idsNullProbeRespEnable,
       "idsNullProbeRespThreshold": idsNullProbeRespThreshold,
       "idsNullProbeRespPeriod": idsNullProbeRespPeriod,
       "idsMICErrorAttackEnable": idsMICErrorAttackEnable,
       "idsMICErrorAttackThreshold": idsMICErrorAttackThreshold,
       "idsMICErrorAttackPeriod": idsMICErrorAttackPeriod,
       "idsDisassocAttackEnable": idsDisassocAttackEnable,
       "idsDisassocAttackThreshold": idsDisassocAttackThreshold,
       "idsDisassocAttackPeriod": idsDisassocAttackPeriod,
       "idsDeauthAttackEnable": idsDeauthAttackEnable,
       "idsDeauthAttackThreshold": idsDeauthAttackThreshold,
       "idsDeauthAttackPeriod": idsDeauthAttackPeriod,
       "idsDurationAttackEnable": idsDurationAttackEnable,
       "idsDurationAttackThreshold": idsDurationAttackThreshold,
       "idsDurationAttackPeriod": idsDurationAttackPeriod,
       "idsDurationAttackNAV": idsDurationAttackNAV,
       "idsImpersonation": idsImpersonation,
       "idsAPImpersonationEnable": idsAPImpersonationEnable,
       "idsAPImpersonationThreshold": idsAPImpersonationThreshold,
       "idsAPImpersonationPeriod": idsAPImpersonationPeriod,
       "idsStationImpersonationEnable": idsStationImpersonationEnable,
       "idsStationImpersonationThreshold": idsStationImpersonationThreshold,
       "idsStationImpersonationPeriod": idsStationImpersonationPeriod,
       "idsSeqNumAnomalyMode": idsSeqNumAnomalyMode,
       "idsEvilTwinAttackEnable": idsEvilTwinAttackEnable,
       "idsSeqNumAnomalyGap": idsSeqNumAnomalyGap,
       "idsEventTablePeriod": idsEventTablePeriod,
       "globalAutoBandEnable": globalAutoBandEnable,
       "globalWmmPowerSave": globalWmmPowerSave,
       "globalDscpMappingMode": globalDscpMappingMode,
       "globalDscpMappingTable": globalDscpMappingTable,
       "globalDscpMappingEntry": globalDscpMappingEntry,
       "globalDscpMappingIndex": globalDscpMappingIndex,
       "globalDscpMappingDscp": globalDscpMappingDscp,
       "globalDscpMappingQos": globalDscpMappingQos,
       "globalMulticastExcludeTable": globalMulticastExcludeTable,
       "globalMulticastExcludeEntry": globalMulticastExcludeEntry,
       "globalMulticastExcludeIndex": globalMulticastExcludeIndex,
       "globalMulticastExcludeIpAddress": globalMulticastExcludeIpAddress,
       "globalMulticastExcludeRowStatus": globalMulticastExcludeRowStatus,
       "globalMulticastExcludeTableReset": globalMulticastExcludeTableReset,
       "rfMonitor": rfMonitor,
       "rfMonitorMode": rfMonitorMode,
       "rfMonitorTimeshareScanInterval": rfMonitorTimeshareScanInterval,
       "rfMonitorTimeshareStationThreshold": rfMonitorTimeshareStationThreshold,
       "rfMonitorTimeshareTrafficThreshold": rfMonitorTimeshareTrafficThreshold,
       "globalExtractStaInfoTable": globalExtractStaInfoTable,
       "globalExtractStaInfoEntry": globalExtractStaInfoEntry,
       "globalExtractStaInfoIndex": globalExtractStaInfoIndex,
       "globalExtractStaInfoType": globalExtractStaInfoType,
       "globalExtractStaInfoStatus": globalExtractStaInfoStatus,
       "globalStaAuthTimeout": globalStaAuthTimeout,
       "globalIPv6Filter": globalIPv6Filter,
       "globalMulticastForwardingTable": globalMulticastForwardingTable,
       "globalMulticastForwardingEntry": globalMulticastForwardingEntry,
       "globalMulticastForwardingIndex": globalMulticastForwardingIndex,
       "globalMulticastForwardingIpAddress": globalMulticastForwardingIpAddress,
       "globalMulticastForwardingRowStatus": globalMulticastForwardingRowStatus,
       "globalMulticastForwardingTableReset": globalMulticastForwardingTableReset,
       "globalMulticastVlanForwardingTable": globalMulticastVlanForwardingTable,
       "globalMulticastVlanForwardingEntry": globalMulticastVlanForwardingEntry,
       "globalMulticastVlanForwardingIndex": globalMulticastVlanForwardingIndex,
       "globalMulticastVlanForwardingVlanNumber": globalMulticastVlanForwardingVlanNumber,
       "globalMulticastVlanForwardingRowStatus": globalMulticastVlanForwardingRowStatus,
       "globalMulticastVlanForwardingTableReset": globalMulticastVlanForwardingTableReset,
       "globalMulticastDnsFilteringTable": globalMulticastDnsFilteringTable,
       "globalMulticastDnsFilteringEntry": globalMulticastDnsFilteringEntry,
       "globalMulticastDnsFilteringIndex": globalMulticastDnsFilteringIndex,
       "globalMulticastDnsFilteringName": globalMulticastDnsFilteringName,
       "globalMulticastDnsFilteringRowStatus": globalMulticastDnsFilteringRowStatus,
       "globalMulticastDnsFilteringTableReset": globalMulticastDnsFilteringTableReset,
       "globalDot11kSupport": globalDot11kSupport,
       "globalDot11wProtectedManagement": globalDot11wProtectedManagement,
       "globalExtractIpAddrDhcpPeriod": globalExtractIpAddrDhcpPeriod,
       "global11a": global11a,
       "global11aIAPEnable": global11aIAPEnable,
       "global11aIAPCellSize": global11aIAPCellSize,
       "global11aIAPTxPwr": global11aIAPTxPwr,
       "global11aIAPRxThreshold": global11aIAPRxThreshold,
       "global11aIAPAutoChannelEnable": global11aIAPAutoChannelEnable,
       "global11aIAPFragThreshold": global11aIAPFragThreshold,
       "global11aIAPRTSThreshold": global11aIAPRTSThreshold,
       "rates11a": rates11a,
       "rates11aSet": rates11aSet,
       "rates11aTable": rates11aTable,
       "rates11aEntry": rates11aEntry,
       "rates11aIndex": rates11aIndex,
       "rates11aRate": rates11aRate,
       "rates11aStatus": rates11aStatus,
       "global11aIAPAutoCellEnable": global11aIAPAutoCellEnable,
       "autoChannelList11a": autoChannelList11a,
       "autoChannelList11aSet": autoChannelList11aSet,
       "autoChannelList11aTable": autoChannelList11aTable,
       "autoChannelList11aEntry": autoChannelList11aEntry,
       "autoChannelList11aIndex": autoChannelList11aIndex,
       "autoChannelList11aChannel": autoChannelList11aChannel,
       "autoChannelList11aStatus": autoChannelList11aStatus,
       "global11aIAPChannelReset": global11aIAPChannelReset,
       "global11aIAPAutoCellOverlap": global11aIAPAutoCellOverlap,
       "global11aIAPAutoCellPeriod": global11aIAPAutoCellPeriod,
       "global11aIAPAutoCellMinTxPwr": global11aIAPAutoCellMinTxPwr,
       "global11aIAPMaxStations": global11aIAPMaxStations,
       "global11aIAPMaxIapStations": global11aIAPMaxIapStations,
       "global11aIAPAutoCellByChan": global11aIAPAutoCellByChan,
       "global11bg": global11bg,
       "global11bgIAPEnable": global11bgIAPEnable,
       "global11bgIAPCellSize": global11bgIAPCellSize,
       "global11bgIAPTxPwr": global11bgIAPTxPwr,
       "global11bgIAPRxThreshold": global11bgIAPRxThreshold,
       "global11bgIAPAutoChannelEnable": global11bgIAPAutoChannelEnable,
       "global11bgIAPFragThreshold": global11bgIAPFragThreshold,
       "global11bgIAPRTSThreshold": global11bgIAPRTSThreshold,
       "global11bgIAPgOnly": global11bgIAPgOnly,
       "global11bgIAPgProtect": global11bgIAPgProtect,
       "global11bgIAPPreamble": global11bgIAPPreamble,
       "global11bgIAPSlotTime": global11bgIAPSlotTime,
       "rates11bg": rates11bg,
       "rates11bgSet": rates11bgSet,
       "rates11bgTable": rates11bgTable,
       "rates11bgEntry": rates11bgEntry,
       "rates11bgIndex": rates11bgIndex,
       "rates11bgRate": rates11bgRate,
       "rates11bgStatus": rates11bgStatus,
       "global11bgIAPAutoCellEnable": global11bgIAPAutoCellEnable,
       "autoChannelList11bg": autoChannelList11bg,
       "autoChannelList11bgSet": autoChannelList11bgSet,
       "autoChannelList11bgTable": autoChannelList11bgTable,
       "autoChannelList11bgEntry": autoChannelList11bgEntry,
       "autoChannelList11bgIndex": autoChannelList11bgIndex,
       "autoChannelList11bgChannel": autoChannelList11bgChannel,
       "autoChannelList11bgStatus": autoChannelList11bgStatus,
       "global11bgIAPChannelReset": global11bgIAPChannelReset,
       "global11bgIAPAutoCellOverlap": global11bgIAPAutoCellOverlap,
       "global11bgIAPAutoCellPeriod": global11bgIAPAutoCellPeriod,
       "global11bgIAPAutoCellMinTxPwr": global11bgIAPAutoCellMinTxPwr,
       "global11bgIAPMaxStations": global11bgIAPMaxStations,
       "global11bgIAPMaxIapStations": global11bgIAPMaxIapStations,
       "global11bgIAPAutoCellByChan": global11bgIAPAutoCellByChan,
       "wds": wds,
       "wdsAutoChannel": wdsAutoChannel,
       "wdsClientLinkTableReset": wdsClientLinkTableReset,
       "wdsClientLinkTable": wdsClientLinkTable,
       "wdsClientLinkEntry": wdsClientLinkEntry,
       "wdsClientLinkIndex": wdsClientLinkIndex,
       "wdsClientLinkEnable": wdsClientLinkEnable,
       "wdsClientLinkMaxIAPs": wdsClientLinkMaxIAPs,
       "wdsClientLinkTarget": wdsClientLinkTarget,
       "wdsClientLinkSSID": wdsClientLinkSSID,
       "wdsClientLinkUsername": wdsClientLinkUsername,
       "wdsClientLinkPassword": wdsClientLinkPassword,
       "wdsClientLinkPasswordForm": wdsClientLinkPasswordForm,
       "wdsHostLinkTable": wdsHostLinkTable,
       "wdsHostLinkEntry": wdsHostLinkEntry,
       "wdsHostLinkIndex": wdsHostLinkIndex,
       "wdsHostLinkState": wdsHostLinkState,
       "wdsHostLinkNumIAPs": wdsHostLinkNumIAPs,
       "wdsHostLinkSource": wdsHostLinkSource,
       "wdsHostLinkSSID": wdsHostLinkSSID,
       "wdsAllowStations": wdsAllowStations,
       "wdsStpEnable": wdsStpEnable,
       "wdsRoamThreshold": wdsRoamThreshold,
       "wdsRoamAvgWeight": wdsRoamAvgWeight,
       "global11n": global11n,
       "global11nEnable": global11nEnable,
       "global11nTxChains": global11nTxChains,
       "global11nRxChains": global11nRxChains,
       "global11nGuardInterval": global11nGuardInterval,
       "global11nAutoBond": global11nAutoBond,
       "global11nBondedChannelWidth5GHz": global11nBondedChannelWidth5GHz,
       "global11nBondedChannelWidth2GHz": global11nBondedChannelWidth2GHz,
       "rates11n": rates11n,
       "rates11nSet": rates11nSet,
       "rates11nTable": rates11nTable,
       "rates11nEntry": rates11nEntry,
       "rates11nMCSIndex": rates11nMCSIndex,
       "rates11nMCSStatus": rates11nMCSStatus,
       "iapSsidToBssidMappingTable": iapSsidToBssidMappingTable,
       "iapSsidToBssidMappingEntry": iapSsidToBssidMappingEntry,
       "iapSsidToBssidMappingIndex": iapSsidToBssidMappingIndex,
       "iapSsidToBssidMappingIAP": iapSsidToBssidMappingIAP,
       "iapSsidToBssidMappingSSID": iapSsidToBssidMappingSSID,
       "iapSsidToBssidMappingBSSID": iapSsidToBssidMappingBSSID,
       "global11ac": global11ac,
       "global11acEnable": global11acEnable,
       "global11acGuardInterval": global11acGuardInterval,
       "global11acMaxMCS1SS": global11acMaxMCS1SS,
       "global11acMaxMCS2SS": global11acMaxMCS2SS,
       "global11acMaxMCS3SS": global11acMaxMCS3SS,
       "global11acMaxMCS4SS": global11acMaxMCS4SS,
       "global11acTxBeamForming": global11acTxBeamForming,
       "global11acMultiUserMimo": global11acMultiUserMimo,
       "global11acWave2Capability": global11acWave2Capability,
       "global11acAutoBond": global11acAutoBond,
       "ethernet": ethernet,
       "ethTable": ethTable,
       "ethEntry": ethEntry,
       "ethIndex": ethIndex,
       "ethName": ethName,
       "ethEnable": ethEnable,
       "ethDHCPBind": ethDHCPBind,
       "ethIPAddress": ethIPAddress,
       "ethIPMask": ethIPMask,
       "ethGateway": ethGateway,
       "ethAutoneg": ethAutoneg,
       "ethDuplex": ethDuplex,
       "ethSpeed": ethSpeed,
       "ethMTU": ethMTU,
       "ethMgmt": ethMgmt,
       "ethDefault": ethDefault,
       "ethPortMode": ethPortMode,
       "ethBond": ethBond,
       "ethLED": ethLED,
       "bondTable": bondTable,
       "bondEntry": bondEntry,
       "bondIndex": bondIndex,
       "bondName": bondName,
       "bondMode": bondMode,
       "bondMirror": bondMirror,
       "bondActiveVlans": bondActiveVlans,
       "console": console,
       "consoleBaud": consoleBaud,
       "consoleByteSize": consoleByteSize,
       "consoleParity": consoleParity,
       "consoleStopBits": consoleStopBits,
       "consoleTimeout": consoleTimeout,
       "consoleMgmt": consoleMgmt,
       "networkMap": networkMap,
       "neighborArrayTable": neighborArrayTable,
       "neighborArrayEntry": neighborArrayEntry,
       "neighborArrayIndex": neighborArrayIndex,
       "neighborArrayHostname": neighborArrayHostname,
       "neighborArrayLocation": neighborArrayLocation,
       "neighborArrayIPAddress": neighborArrayIPAddress,
       "neighborArrayModel": neighborArrayModel,
       "neighborArrayNumIAPsUp": neighborArrayNumIAPsUp,
       "neighborArrayNumSSIDs": neighborArrayNumSSIDs,
       "neighborArrayNumActiveSSIDs": neighborArrayNumActiveSSIDs,
       "neighborArrayNumStationsAssoc": neighborArrayNumStationsAssoc,
       "neighborArrayInRange": neighborArrayInRange,
       "neighborArrayFastRoam": neighborArrayFastRoam,
       "neighborArrayUptime": neighborArrayUptime,
       "radius": radius,
       "radiusEnable": radiusEnable,
       "radiusServerExternal": radiusServerExternal,
       "radiusPriServerIPAddress": radiusPriServerIPAddress,
       "radiusPriServerPort": radiusPriServerPort,
       "radiusPriServerSecret": radiusPriServerSecret,
       "radiusSecServerIPAddress": radiusSecServerIPAddress,
       "radiusSecServerPort": radiusSecServerPort,
       "radiusSecServerSecret": radiusSecServerSecret,
       "radiusTimeout": radiusTimeout,
       "radiusAcctEnable": radiusAcctEnable,
       "radiusAcctPriServerIPAddress": radiusAcctPriServerIPAddress,
       "radiusAcctPriServerPort": radiusAcctPriServerPort,
       "radiusAcctPriServerSecret": radiusAcctPriServerSecret,
       "radiusAcctSecServerIPAddress": radiusAcctSecServerIPAddress,
       "radiusAcctSecServerPort": radiusAcctSecServerPort,
       "radiusAcctSecServerSecret": radiusAcctSecServerSecret,
       "radiusAcctInterval": radiusAcctInterval,
       "radiusNasIdentifier": radiusNasIdentifier,
       "radiusPriServerHostname": radiusPriServerHostname,
       "radiusSecServerHostname": radiusSecServerHostname,
       "radiusAcctPriServerHostname": radiusAcctPriServerHostname,
       "radiusAcctSecServerHostname": radiusAcctSecServerHostname,
       "radiusPriServerSecretEnc": radiusPriServerSecretEnc,
       "radiusSecServerSecretEnc": radiusSecServerSecretEnc,
       "radiusAcctPriServerSecretEnc": radiusAcctPriServerSecretEnc,
       "radiusAcctSecServerSecretEnc": radiusAcctSecServerSecretEnc,
       "radiusDASPort": radiusDASPort,
       "radiusDASTimeWindow": radiusDASTimeWindow,
       "radiusDASEventTimestamp": radiusDASEventTimestamp,
       "radiusCalledStationIdFormat": radiusCalledStationIdFormat,
       "radiusStationMACFormat": radiusStationMACFormat,
       "radiusFailoverTimeout": radiusFailoverTimeout,
       "radiusServerInternal": radiusServerInternal,
       "radiusUserTable": radiusUserTable,
       "radiusUserEntry": radiusUserEntry,
       "radiusUserIndex": radiusUserIndex,
       "radiusUserID": radiusUserID,
       "radiusUserPassword": radiusUserPassword,
       "radiusUserSSID": radiusUserSSID,
       "radiusUserRowStatus": radiusUserRowStatus,
       "radiusUserGroup": radiusUserGroup,
       "radiusUserPasswordForm": radiusUserPasswordForm,
       "radiusUserTableReset": radiusUserTableReset,
       "radiusServerAD": radiusServerAD,
       "activeDirectoryUser": activeDirectoryUser,
       "activeDirectoryPassword": activeDirectoryPassword,
       "activeDirectoryDomainController": activeDirectoryDomainController,
       "activeDirectoryWorkgroup": activeDirectoryWorkgroup,
       "activeDirectoryRealm": activeDirectoryRealm,
       "activeDirectoryJoin": activeDirectoryJoin,
       "activeDirectoryLeave": activeDirectoryLeave,
       "roamAssist": roamAssist,
       "roamAssistEnable": roamAssistEnable,
       "roamAssistPeriod": roamAssistPeriod,
       "roamAssistThreshold": roamAssistThreshold,
       "roamAssistDataRate": roamAssistDataRate,
       "roamAssistDevices": roamAssistDevices,
       "security": security,
       "wep": wep,
       "wepDefaultKeyID": wepDefaultKeyID,
       "wepKeyTable": wepKeyTable,
       "wepKeyEntry": wepKeyEntry,
       "wepKeyNum": wepKeyNum,
       "wepKeySize": wepKeySize,
       "wepKeyString": wepKeyString,
       "wepKeyStringForm": wepKeyStringForm,
       "wpa": wpa,
       "wpaTKIP": wpaTKIP,
       "wpaAES": wpaAES,
       "wpaEAP": wpaEAP,
       "wpaPSK": wpaPSK,
       "wpaPassphrase": wpaPassphrase,
       "wpaRekey": wpaRekey,
       "wpaPassphraseEnc": wpaPassphraseEnc,
       "snmpAgent": snmpAgent,
       "snmpAgentEnable": snmpAgentEnable,
       "snmpAgentReadWriteCommunity": snmpAgentReadWriteCommunity,
       "snmpAgentTrapHost": snmpAgentTrapHost,
       "snmpAgentTrapPort": snmpAgentTrapPort,
       "snmpAgentTrapAuth": snmpAgentTrapAuth,
       "snmpAgentReadOnlyCommunity": snmpAgentReadOnlyCommunity,
       "snmpAgentTrapHost2": snmpAgentTrapHost2,
       "snmpAgentTrapPort2": snmpAgentTrapPort2,
       "snmpAgentTrapHost3": snmpAgentTrapHost3,
       "snmpAgentTrapPort3": snmpAgentTrapPort3,
       "snmpAgentTrapHost4": snmpAgentTrapHost4,
       "snmpAgentTrapPort4": snmpAgentTrapPort4,
       "snmpAgentV3Enable": snmpAgentV3Enable,
       "snmpAgentV3AuthType": snmpAgentV3AuthType,
       "snmpAgentV3PrivProtocol": snmpAgentV3PrivProtocol,
       "snmpAgentV3ReadWriteUser": snmpAgentV3ReadWriteUser,
       "snmpAgentV3ReadWriteUserAuthPassphrase": snmpAgentV3ReadWriteUserAuthPassphrase,
       "snmpAgentV3ReadWriteUserAuthPassphraseEnc": snmpAgentV3ReadWriteUserAuthPassphraseEnc,
       "snmpAgentV3ReadWriteUserPrivPassphrase": snmpAgentV3ReadWriteUserPrivPassphrase,
       "snmpAgentV3ReadWriteUserPrivPassphraseEnc": snmpAgentV3ReadWriteUserPrivPassphraseEnc,
       "snmpAgentV3ReadOnlyUser": snmpAgentV3ReadOnlyUser,
       "snmpAgentV3ReadOnlyUserAuthPassphrase": snmpAgentV3ReadOnlyUserAuthPassphrase,
       "snmpAgentV3ReadOnlyUserAuthPassphraseEnc": snmpAgentV3ReadOnlyUserAuthPassphraseEnc,
       "snmpAgentV3ReadOnlyUserPrivPassphrase": snmpAgentV3ReadOnlyUserPrivPassphrase,
       "snmpAgentV3ReadOnlyUserPrivPassphraseEnc": snmpAgentV3ReadOnlyUserPrivPassphraseEnc,
       "snmpAgentEngineID": snmpAgentEngineID,
       "snmpAgentRestart": snmpAgentRestart,
       "snmpAgentKeepAlive": snmpAgentKeepAlive,
       "snmpAgentReadWriteCommunityEnc": snmpAgentReadWriteCommunityEnc,
       "snmpAgentReadOnlyCommunityEnc": snmpAgentReadOnlyCommunityEnc,
       "ssid": ssid,
       "ssidTable": ssidTable,
       "ssidEntry": ssidEntry,
       "ssidIndex": ssidIndex,
       "ssidName": ssidName,
       "ssidBroadcast": ssidBroadcast,
       "ssidBand": ssidBand,
       "ssidQOS": ssidQOS,
       "ssidVlan": ssidVlan,
       "ssidDhcpPool": ssidDhcpPool,
       "ssidEncryption": ssidEncryption,
       "ssidDefaultSecurity": ssidDefaultSecurity,
       "ssidWepDefaultKeyID": ssidWepDefaultKeyID,
       "ssidWepKey1Size": ssidWepKey1Size,
       "ssidWepKey1String": ssidWepKey1String,
       "ssidWepKey2Size": ssidWepKey2Size,
       "ssidWepKey2String": ssidWepKey2String,
       "ssidWepKey3Size": ssidWepKey3Size,
       "ssidWepKey3String": ssidWepKey3String,
       "ssidWepKey4Size": ssidWepKey4Size,
       "ssidWepKey4String": ssidWepKey4String,
       "ssidWpaEAP": ssidWpaEAP,
       "ssidWpaPSK": ssidWpaPSK,
       "ssidWpaPassphrase": ssidWpaPassphrase,
       "ssidRadiusEnable": ssidRadiusEnable,
       "ssidRadiusPriServerIPAddress": ssidRadiusPriServerIPAddress,
       "ssidRadiusPriServerPort": ssidRadiusPriServerPort,
       "ssidRadiusPriServerSecret": ssidRadiusPriServerSecret,
       "ssidRadiusSecServerIPAddress": ssidRadiusSecServerIPAddress,
       "ssidRadiusSecServerPort": ssidRadiusSecServerPort,
       "ssidRadiusSecServerSecret": ssidRadiusSecServerSecret,
       "ssidRadiusTimeout": ssidRadiusTimeout,
       "ssidRadiusAcctEnable": ssidRadiusAcctEnable,
       "ssidRadiusAcctPriServerIPAddress": ssidRadiusAcctPriServerIPAddress,
       "ssidRadiusAcctPriServerPort": ssidRadiusAcctPriServerPort,
       "ssidRadiusAcctPriServerSecret": ssidRadiusAcctPriServerSecret,
       "ssidRadiusAcctSecServerIPAddress": ssidRadiusAcctSecServerIPAddress,
       "ssidRadiusAcctSecServerPort": ssidRadiusAcctSecServerPort,
       "ssidRadiusAcctSecServerSecret": ssidRadiusAcctSecServerSecret,
       "ssidRadiusAcctInterval": ssidRadiusAcctInterval,
       "ssidAuthentication": ssidAuthentication,
       "ssidRowStatus": ssidRowStatus,
       "ssidRoamingLayer": ssidRoamingLayer,
       "ssidRadiusPriServerHostname": ssidRadiusPriServerHostname,
       "ssidRadiusSecServerHostname": ssidRadiusSecServerHostname,
       "ssidRadiusAcctPriServerHostname": ssidRadiusAcctPriServerHostname,
       "ssidRadiusAcctSecServerHostname": ssidRadiusAcctSecServerHostname,
       "ssidWepKey1StringForm": ssidWepKey1StringForm,
       "ssidWepKey2StringForm": ssidWepKey2StringForm,
       "ssidWepKey3StringForm": ssidWepKey3StringForm,
       "ssidWepKey4StringForm": ssidWepKey4StringForm,
       "ssidWpaPassphraseForm": ssidWpaPassphraseForm,
       "ssidRadiusPriServerSecretForm": ssidRadiusPriServerSecretForm,
       "ssidRadiusSecServerSecretForm": ssidRadiusSecServerSecretForm,
       "ssidRadiusAcctPriServerSecretForm": ssidRadiusAcctPriServerSecretForm,
       "ssidRadiusAcctSecServerSecretForm": ssidRadiusAcctSecServerSecretForm,
       "ssidFilterList": ssidFilterList,
       "ssidWpaTKIP": ssidWpaTKIP,
       "ssidWpaAES": ssidWpaAES,
       "ssidActiveIAPs": ssidActiveIAPs,
       "ssidAclEnable": ssidAclEnable,
       "ssidFallback": ssidFallback,
       "ssidTunnel": ssidTunnel,
       "ssidMdmAuth": ssidMdmAuth,
       "ssidDhcpOption": ssidDhcpOption,
       "ssidWpaUPSKCacheTimeout": ssidWpaUPSKCacheTimeout,
       "ssidWpaUPSKServerConnError": ssidWpaUPSKServerConnError,
       "ssidVlanPool": ssidVlanPool,
       "ssidExpiration": ssidExpiration,
       "ssidDateOn": ssidDateOn,
       "ssidDateOff": ssidDateOff,
       "ssidRadiusFailoverTimeout": ssidRadiusFailoverTimeout,
       "ssidTableReset": ssidTableReset,
       "ssidTableClear": ssidTableClear,
       "ssidLimitsTable": ssidLimitsTable,
       "ssidLimitsEntry": ssidLimitsEntry,
       "ssidLimitsIndex": ssidLimitsIndex,
       "ssidLimitsSsidName": ssidLimitsSsidName,
       "ssidLimitsEnable": ssidLimitsEnable,
       "ssidLimitsTrafficLimit": ssidLimitsTrafficLimit,
       "ssidLimitsTrafficLimitSta": ssidLimitsTrafficLimitSta,
       "ssidLimitsTimeOn": ssidLimitsTimeOn,
       "ssidLimitsTimeOff": ssidLimitsTimeOff,
       "ssidLimitsDaysOnMon": ssidLimitsDaysOnMon,
       "ssidLimitsDaysOnTue": ssidLimitsDaysOnTue,
       "ssidLimitsDaysOnWed": ssidLimitsDaysOnWed,
       "ssidLimitsDaysOnThu": ssidLimitsDaysOnThu,
       "ssidLimitsDaysOnFri": ssidLimitsDaysOnFri,
       "ssidLimitsDaysOnSat": ssidLimitsDaysOnSat,
       "ssidLimitsDaysOnSun": ssidLimitsDaysOnSun,
       "ssidLimitsActive": ssidLimitsActive,
       "ssidLimitsStationLimit": ssidLimitsStationLimit,
       "ssidLimitsTrafficLimitKbps": ssidLimitsTrafficLimitKbps,
       "ssidLimitsTrafficLimitKbpsSta": ssidLimitsTrafficLimitKbpsSta,
       "ssidWprTable": ssidWprTable,
       "ssidWprEntry": ssidWprEntry,
       "ssidWprIndex": ssidWprIndex,
       "ssidWprSsidName": ssidWprSsidName,
       "ssidWprEnable": ssidWprEnable,
       "ssidWprServerType": ssidWprServerType,
       "ssidWprUrl": ssidWprUrl,
       "ssidWprSharedSecret": ssidWprSharedSecret,
       "ssidWprScreenType": ssidWprScreenType,
       "ssidWprScreenTimeout": ssidWprScreenTimeout,
       "ssidWprLandingPage": ssidWprLandingPage,
       "ssidWprSharedSecretForm": ssidWprSharedSecretForm,
       "ssidWprAuthType": ssidWprAuthType,
       "ssidWprHttpsEnable": ssidWprHttpsEnable,
       "ssidWprBackground": ssidWprBackground,
       "ssidWprLogoImage": ssidWprLogoImage,
       "ssidWprHeaderText": ssidWprHeaderText,
       "ssidWprFooterText": ssidWprFooterText,
       "ssidWprAuthTimeout": ssidWprAuthTimeout,
       "ssidWprHttpsPassthru": ssidWprHttpsPassthru,
       "ssidHoneypotWhitelistTable": ssidHoneypotWhitelistTable,
       "ssidHoneypotWhitelistEntry": ssidHoneypotWhitelistEntry,
       "ssidHoneypotWhitelistIndex": ssidHoneypotWhitelistIndex,
       "ssidHoneypotWhitelistSSID": ssidHoneypotWhitelistSSID,
       "ssidHoneypotWhitelistRowStatus": ssidHoneypotWhitelistRowStatus,
       "ssidHoneypotWhitelistTableReset": ssidHoneypotWhitelistTableReset,
       "ssidHoneypotBroadcastTable": ssidHoneypotBroadcastTable,
       "ssidHoneypotBroadcastEntry": ssidHoneypotBroadcastEntry,
       "ssidHoneypotBroadcastIndex": ssidHoneypotBroadcastIndex,
       "ssidHoneypotBroadcastSSID": ssidHoneypotBroadcastSSID,
       "ssidHoneypotBroadcastRowStatus": ssidHoneypotBroadcastRowStatus,
       "ssidHoneypotBroadcastTableReset": ssidHoneypotBroadcastTableReset,
       "stations": stations,
       "stationAssociationTable": stationAssociationTable,
       "stationAssociationEntry": stationAssociationEntry,
       "stationAssociationIndex": stationAssociationIndex,
       "stationAssociationMACAddress": stationAssociationMACAddress,
       "stationAssociationManufacturer": stationAssociationManufacturer,
       "stationAssociationIPAddress": stationAssociationIPAddress,
       "stationAssociationNetbiosName": stationAssociationNetbiosName,
       "stationAssociationIAP": stationAssociationIAP,
       "stationAssociationSSID": stationAssociationSSID,
       "stationAssociationVLAN": stationAssociationVLAN,
       "stationAssociationRSSI": stationAssociationRSSI,
       "stationAssociationTime": stationAssociationTime,
       "stationAssociationTxRate": stationAssociationTxRate,
       "stationAssociationRxRate": stationAssociationRxRate,
       "stationAssociationRSSIa1": stationAssociationRSSIa1,
       "stationAssociationRSSIa2": stationAssociationRSSIa2,
       "stationAssociationRSSIa3": stationAssociationRSSIa3,
       "stationAssociationRSSIa4": stationAssociationRSSIa4,
       "stationAssociationRSSIa5": stationAssociationRSSIa5,
       "stationAssociationRSSIa6": stationAssociationRSSIa6,
       "stationAssociationRSSIa7": stationAssociationRSSIa7,
       "stationAssociationRSSIa8": stationAssociationRSSIa8,
       "stationAssociationRSSIa9": stationAssociationRSSIa9,
       "stationAssociationRSSIa10": stationAssociationRSSIa10,
       "stationAssociationRSSIa11": stationAssociationRSSIa11,
       "stationAssociationRSSIa12": stationAssociationRSSIa12,
       "stationAssociationRSSIabg1": stationAssociationRSSIabg1,
       "stationAssociationRSSIabg2": stationAssociationRSSIabg2,
       "stationAssociationRSSIabg3": stationAssociationRSSIabg3,
       "stationAssociationRSSIabg4": stationAssociationRSSIabg4,
       "stationAssociationEncType": stationAssociationEncType,
       "stationAssociationCipher": stationAssociationCipher,
       "stationAssociationKeyMgmt": stationAssociationKeyMgmt,
       "stationAssociationBand": stationAssociationBand,
       "stationAssociationChannel": stationAssociationChannel,
       "stationAssociationMediaType": stationAssociationMediaType,
       "stationAssociationUserName": stationAssociationUserName,
       "stationAssociationTimeRSSIa1": stationAssociationTimeRSSIa1,
       "stationAssociationTimeRSSIa2": stationAssociationTimeRSSIa2,
       "stationAssociationTimeRSSIa3": stationAssociationTimeRSSIa3,
       "stationAssociationTimeRSSIa4": stationAssociationTimeRSSIa4,
       "stationAssociationTimeRSSIa5": stationAssociationTimeRSSIa5,
       "stationAssociationTimeRSSIa6": stationAssociationTimeRSSIa6,
       "stationAssociationTimeRSSIa7": stationAssociationTimeRSSIa7,
       "stationAssociationTimeRSSIa8": stationAssociationTimeRSSIa8,
       "stationAssociationTimeRSSIa9": stationAssociationTimeRSSIa9,
       "stationAssociationTimeRSSIa10": stationAssociationTimeRSSIa10,
       "stationAssociationTimeRSSIa11": stationAssociationTimeRSSIa11,
       "stationAssociationTimeRSSIa12": stationAssociationTimeRSSIa12,
       "stationAssociationTimeRSSIabg1": stationAssociationTimeRSSIabg1,
       "stationAssociationTimeRSSIabg2": stationAssociationTimeRSSIabg2,
       "stationAssociationTimeRSSIabg3": stationAssociationTimeRSSIabg3,
       "stationAssociationTimeRSSIabg4": stationAssociationTimeRSSIabg4,
       "stationAssociationHostname": stationAssociationHostname,
       "stationAssociationDeviceType": stationAssociationDeviceType,
       "stationAssociationDeviceClass": stationAssociationDeviceClass,
       "stationAssociationUserAgent": stationAssociationUserAgent,
       "stationAssociationDeviceSource": stationAssociationDeviceSource,
       "stationAssociationDeviceSourceIndex": stationAssociationDeviceSourceIndex,
       "stationAssociationOperatingMode": stationAssociationOperatingMode,
       "stationUnassociatedTable": stationUnassociatedTable,
       "stationUnassociatedEntry": stationUnassociatedEntry,
       "stationUnassociatedIndex": stationUnassociatedIndex,
       "stationUnassociatedMACAddress": stationUnassociatedMACAddress,
       "stationUnassociatedManufacturer": stationUnassociatedManufacturer,
       "stationUnassociatedNetbiosName": stationUnassociatedNetbiosName,
       "stationUnassociatedMediaType": stationUnassociatedMediaType,
       "stationUnassociatedTxRate": stationUnassociatedTxRate,
       "stationUnassociatedRxRate": stationUnassociatedRxRate,
       "stationUnassociatedRSSI": stationUnassociatedRSSI,
       "stationUnassociatedTime": stationUnassociatedTime,
       "stationUnassociatedRSSIa1": stationUnassociatedRSSIa1,
       "stationUnassociatedRSSIa2": stationUnassociatedRSSIa2,
       "stationUnassociatedRSSIa3": stationUnassociatedRSSIa3,
       "stationUnassociatedRSSIa4": stationUnassociatedRSSIa4,
       "stationUnassociatedRSSIa5": stationUnassociatedRSSIa5,
       "stationUnassociatedRSSIa6": stationUnassociatedRSSIa6,
       "stationUnassociatedRSSIa7": stationUnassociatedRSSIa7,
       "stationUnassociatedRSSIa8": stationUnassociatedRSSIa8,
       "stationUnassociatedRSSIa9": stationUnassociatedRSSIa9,
       "stationUnassociatedRSSIa10": stationUnassociatedRSSIa10,
       "stationUnassociatedRSSIa11": stationUnassociatedRSSIa11,
       "stationUnassociatedRSSIa12": stationUnassociatedRSSIa12,
       "stationUnassociatedRSSIabg1": stationUnassociatedRSSIabg1,
       "stationUnassociatedRSSIabg2": stationUnassociatedRSSIabg2,
       "stationUnassociatedRSSIabg3": stationUnassociatedRSSIabg3,
       "stationUnassociatedRSSIabg4": stationUnassociatedRSSIabg4,
       "stationUnassociatedTimeRSSIa1": stationUnassociatedTimeRSSIa1,
       "stationUnassociatedTimeRSSIa2": stationUnassociatedTimeRSSIa2,
       "stationUnassociatedTimeRSSIa3": stationUnassociatedTimeRSSIa3,
       "stationUnassociatedTimeRSSIa4": stationUnassociatedTimeRSSIa4,
       "stationUnassociatedTimeRSSIa5": stationUnassociatedTimeRSSIa5,
       "stationUnassociatedTimeRSSIa6": stationUnassociatedTimeRSSIa6,
       "stationUnassociatedTimeRSSIa7": stationUnassociatedTimeRSSIa7,
       "stationUnassociatedTimeRSSIa8": stationUnassociatedTimeRSSIa8,
       "stationUnassociatedTimeRSSIa9": stationUnassociatedTimeRSSIa9,
       "stationUnassociatedTimeRSSIa10": stationUnassociatedTimeRSSIa10,
       "stationUnassociatedTimeRSSIa11": stationUnassociatedTimeRSSIa11,
       "stationUnassociatedTimeRSSIa12": stationUnassociatedTimeRSSIa12,
       "stationUnassociatedTimeRSSIabg1": stationUnassociatedTimeRSSIabg1,
       "stationUnassociatedTimeRSSIabg2": stationUnassociatedTimeRSSIabg2,
       "stationUnassociatedTimeRSSIabg3": stationUnassociatedTimeRSSIabg3,
       "stationUnassociatedTimeRSSIabg4": stationUnassociatedTimeRSSIabg4,
       "stationDeauthMacAddress": stationDeauthMacAddress,
       "stationAssocTable": stationAssocTable,
       "stationAssocEntry": stationAssocEntry,
       "stationAssocMACAddress": stationAssocMACAddress,
       "stationAssocManufacturer": stationAssocManufacturer,
       "stationAssocIPAddress": stationAssocIPAddress,
       "stationAssocNetbiosName": stationAssocNetbiosName,
       "stationAssocIAP": stationAssocIAP,
       "stationAssocSSID": stationAssocSSID,
       "stationAssocVLAN": stationAssocVLAN,
       "stationAssocRSSI": stationAssocRSSI,
       "stationAssocTime": stationAssocTime,
       "stationAssocTxRate": stationAssocTxRate,
       "stationAssocRxRate": stationAssocRxRate,
       "stationAssocRSSIa1": stationAssocRSSIa1,
       "stationAssocRSSIa2": stationAssocRSSIa2,
       "stationAssocRSSIa3": stationAssocRSSIa3,
       "stationAssocRSSIa4": stationAssocRSSIa4,
       "stationAssocRSSIa5": stationAssocRSSIa5,
       "stationAssocRSSIa6": stationAssocRSSIa6,
       "stationAssocRSSIa7": stationAssocRSSIa7,
       "stationAssocRSSIa8": stationAssocRSSIa8,
       "stationAssocRSSIa9": stationAssocRSSIa9,
       "stationAssocRSSIa10": stationAssocRSSIa10,
       "stationAssocRSSIa11": stationAssocRSSIa11,
       "stationAssocRSSIa12": stationAssocRSSIa12,
       "stationAssocRSSIabg1": stationAssocRSSIabg1,
       "stationAssocRSSIabg2": stationAssocRSSIabg2,
       "stationAssocRSSIabg3": stationAssocRSSIabg3,
       "stationAssocRSSIabg4": stationAssocRSSIabg4,
       "stationAssocEncType": stationAssocEncType,
       "stationAssocCipher": stationAssocCipher,
       "stationAssocKeyMgmt": stationAssocKeyMgmt,
       "stationAssocBand": stationAssocBand,
       "stationAssocChannel": stationAssocChannel,
       "stationAssocMediaType": stationAssocMediaType,
       "stationAssocUserName": stationAssocUserName,
       "stationAssocTimeRSSIa1": stationAssocTimeRSSIa1,
       "stationAssocTimeRSSIa2": stationAssocTimeRSSIa2,
       "stationAssocTimeRSSIa3": stationAssocTimeRSSIa3,
       "stationAssocTimeRSSIa4": stationAssocTimeRSSIa4,
       "stationAssocTimeRSSIa5": stationAssocTimeRSSIa5,
       "stationAssocTimeRSSIa6": stationAssocTimeRSSIa6,
       "stationAssocTimeRSSIa7": stationAssocTimeRSSIa7,
       "stationAssocTimeRSSIa8": stationAssocTimeRSSIa8,
       "stationAssocTimeRSSIa9": stationAssocTimeRSSIa9,
       "stationAssocTimeRSSIa10": stationAssocTimeRSSIa10,
       "stationAssocTimeRSSIa11": stationAssocTimeRSSIa11,
       "stationAssocTimeRSSIa12": stationAssocTimeRSSIa12,
       "stationAssocTimeRSSIabg1": stationAssocTimeRSSIabg1,
       "stationAssocTimeRSSIabg2": stationAssocTimeRSSIabg2,
       "stationAssocTimeRSSIabg3": stationAssocTimeRSSIabg3,
       "stationAssocTimeRSSIabg4": stationAssocTimeRSSIabg4,
       "stationAssocHostname": stationAssocHostname,
       "stationAssocDeviceType": stationAssocDeviceType,
       "stationAssocDeviceClass": stationAssocDeviceClass,
       "stationAssocUserAgent": stationAssocUserAgent,
       "stationAssocDeviceSource": stationAssocDeviceSource,
       "stationAssocDeviceSourceIndex": stationAssocDeviceSourceIndex,
       "stationUnassocTable": stationUnassocTable,
       "stationUnassocEntry": stationUnassocEntry,
       "stationUnassocMACAddress": stationUnassocMACAddress,
       "stationUnassocManufacturer": stationUnassocManufacturer,
       "stationUnassocNetbiosName": stationUnassocNetbiosName,
       "stationUnassocMediaType": stationUnassocMediaType,
       "stationUnassocTxRate": stationUnassocTxRate,
       "stationUnassocRxRate": stationUnassocRxRate,
       "stationUnassocRSSI": stationUnassocRSSI,
       "stationUnassocTime": stationUnassocTime,
       "stationUnassocRSSIa1": stationUnassocRSSIa1,
       "stationUnassocRSSIa2": stationUnassocRSSIa2,
       "stationUnassocRSSIa3": stationUnassocRSSIa3,
       "stationUnassocRSSIa4": stationUnassocRSSIa4,
       "stationUnassocRSSIa5": stationUnassocRSSIa5,
       "stationUnassocRSSIa6": stationUnassocRSSIa6,
       "stationUnassocRSSIa7": stationUnassocRSSIa7,
       "stationUnassocRSSIa8": stationUnassocRSSIa8,
       "stationUnassocRSSIa9": stationUnassocRSSIa9,
       "stationUnassocRSSIa10": stationUnassocRSSIa10,
       "stationUnassocRSSIa11": stationUnassocRSSIa11,
       "stationUnassocRSSIa12": stationUnassocRSSIa12,
       "stationUnassocRSSIabg1": stationUnassocRSSIabg1,
       "stationUnassocRSSIabg2": stationUnassocRSSIabg2,
       "stationUnassocRSSIabg3": stationUnassocRSSIabg3,
       "stationUnassocRSSIabg4": stationUnassocRSSIabg4,
       "stationUnassocTimeRSSIa1": stationUnassocTimeRSSIa1,
       "stationUnassocTimeRSSIa2": stationUnassocTimeRSSIa2,
       "stationUnassocTimeRSSIa3": stationUnassocTimeRSSIa3,
       "stationUnassocTimeRSSIa4": stationUnassocTimeRSSIa4,
       "stationUnassocTimeRSSIa5": stationUnassocTimeRSSIa5,
       "stationUnassocTimeRSSIa6": stationUnassocTimeRSSIa6,
       "stationUnassocTimeRSSIa7": stationUnassocTimeRSSIa7,
       "stationUnassocTimeRSSIa8": stationUnassocTimeRSSIa8,
       "stationUnassocTimeRSSIa9": stationUnassocTimeRSSIa9,
       "stationUnassocTimeRSSIa10": stationUnassocTimeRSSIa10,
       "stationUnassocTimeRSSIa11": stationUnassocTimeRSSIa11,
       "stationUnassocTimeRSSIa12": stationUnassocTimeRSSIa12,
       "stationUnassocTimeRSSIabg1": stationUnassocTimeRSSIabg1,
       "stationUnassocTimeRSSIabg2": stationUnassocTimeRSSIabg2,
       "stationUnassocTimeRSSIabg3": stationUnassocTimeRSSIabg3,
       "stationUnassocTimeRSSIabg4": stationUnassocTimeRSSIabg4,
       "stationAssurance": stationAssurance,
       "stationAssuranceEnable": stationAssuranceEnable,
       "stationAssurancePeriod": stationAssurancePeriod,
       "stationAssuranceAssocTime": stationAssuranceAssocTime,
       "stationAssuranceAuthFailures": stationAssuranceAuthFailures,
       "stationAssuranceErrorRate": stationAssuranceErrorRate,
       "stationAssuranceRetryRate": stationAssuranceRetryRate,
       "stationAssuranceDataRate": stationAssuranceDataRate,
       "stationAssuranceRSSI": stationAssuranceRSSI,
       "stationAssuranceSNR": stationAssuranceSNR,
       "stationAssuranceDistance": stationAssuranceDistance,
       "stationAssuranceTable": stationAssuranceTable,
       "stationAssuranceEntry": stationAssuranceEntry,
       "staAssuranceIndex": staAssuranceIndex,
       "staAssuranceMACAddress": staAssuranceMACAddress,
       "staAssuranceIPAddress": staAssuranceIPAddress,
       "staAssuranceNetbiosName": staAssuranceNetbiosName,
       "staAssuranceManufacturer": staAssuranceManufacturer,
       "staAssuranceTime": staAssuranceTime,
       "staAssuranceTimestamp": staAssuranceTimestamp,
       "staAssuranceAssocTime": staAssuranceAssocTime,
       "staAssuranceAuthFailures": staAssuranceAuthFailures,
       "staAssuranceErrorRate": staAssuranceErrorRate,
       "staAssuranceRetryRate": staAssuranceRetryRate,
       "staAssuranceDataRate": staAssuranceDataRate,
       "staAssuranceRSSI": staAssuranceRSSI,
       "staAssuranceSNR": staAssuranceSNR,
       "staAssuranceDistance": staAssuranceDistance,
       "staAssuranceDeviceType": staAssuranceDeviceType,
       "staAssuranceDeviceClass": staAssuranceDeviceClass,
       "staAssuranceActiveAlarmTimestamp": staAssuranceActiveAlarmTimestamp,
       "staAssuranceActiveAlarmType": staAssuranceActiveAlarmType,
       "staAssuranceAssocTimeTimestamp": staAssuranceAssocTimeTimestamp,
       "staAssuranceAuthFailuresTimestamp": staAssuranceAuthFailuresTimestamp,
       "staAssuranceErrorRateTimestamp": staAssuranceErrorRateTimestamp,
       "staAssuranceRetryRateTimestamp": staAssuranceRetryRateTimestamp,
       "staAssuranceDataRateTimestamp": staAssuranceDataRateTimestamp,
       "staAssuranceRSSITimestamp": staAssuranceRSSITimestamp,
       "staAssuranceSNRTimestamp": staAssuranceSNRTimestamp,
       "staAssuranceDistanceTimestamp": staAssuranceDistanceTimestamp,
       "staAssuranceAssocTimeActive": staAssuranceAssocTimeActive,
       "staAssuranceAuthFailuresActive": staAssuranceAuthFailuresActive,
       "staAssuranceErrorRateActive": staAssuranceErrorRateActive,
       "staAssuranceRetryRateActive": staAssuranceRetryRateActive,
       "staAssuranceDataRateActive": staAssuranceDataRateActive,
       "staAssuranceRSSIActive": staAssuranceRSSIActive,
       "staAssuranceSNRActive": staAssuranceSNRActive,
       "staAssuranceDistanceActive": staAssuranceDistanceActive,
       "staAssuranceAlarmType": staAssuranceAlarmType,
       "stationAssurTable": stationAssurTable,
       "stationAssurEntry": stationAssurEntry,
       "staAssurMACAddress": staAssurMACAddress,
       "staAssurIPAddress": staAssurIPAddress,
       "staAssurNetbiosName": staAssurNetbiosName,
       "staAssurManufacturer": staAssurManufacturer,
       "staAssurTime": staAssurTime,
       "staAssurTimestamp": staAssurTimestamp,
       "staAssurAssocTime": staAssurAssocTime,
       "staAssurAuthFailures": staAssurAuthFailures,
       "staAssurErrorRate": staAssurErrorRate,
       "staAssurRetryRate": staAssurRetryRate,
       "staAssurDataRate": staAssurDataRate,
       "staAssurRSSI": staAssurRSSI,
       "staAssurSNR": staAssurSNR,
       "staAssurDistance": staAssurDistance,
       "staAssurDeviceType": staAssurDeviceType,
       "staAssurDeviceClass": staAssurDeviceClass,
       "staAssurActiveAlarmTimestamp": staAssurActiveAlarmTimestamp,
       "staAssurActiveAlarmType": staAssurActiveAlarmType,
       "staAssurAssocTimeTimestamp": staAssurAssocTimeTimestamp,
       "staAssurAuthFailuresTimestamp": staAssurAuthFailuresTimestamp,
       "staAssurErrorRateTimestamp": staAssurErrorRateTimestamp,
       "staAssurRetryRateTimestamp": staAssurRetryRateTimestamp,
       "staAssurDataRateTimestamp": staAssurDataRateTimestamp,
       "staAssurRSSITimestamp": staAssurRSSITimestamp,
       "staAssurSNRTimestamp": staAssurSNRTimestamp,
       "staAssurDistanceTimestamp": staAssurDistanceTimestamp,
       "staAssurAssocTimeActive": staAssurAssocTimeActive,
       "staAssurAuthFailuresActive": staAssurAuthFailuresActive,
       "staAssurErrorRateActive": staAssurErrorRateActive,
       "staAssurRetryRateActive": staAssurRetryRateActive,
       "staAssurDataRateActive": staAssurDataRateActive,
       "staAssurRSSIActive": staAssurRSSIActive,
       "staAssurSNRActive": staAssurSNRActive,
       "staAssurDistanceActive": staAssurDistanceActive,
       "staAssurAlarmType": staAssurAlarmType,
       "stationAssuranceTableClear": stationAssuranceTableClear,
       "stationAssuranceTablePeriod": stationAssuranceTablePeriod,
       "stationUnassociatedTablePeriod": stationUnassociatedTablePeriod,
       "stationLocTable": stationLocTable,
       "stationLocEntry": stationLocEntry,
       "stationLocMACAddress": stationLocMACAddress,
       "stationLocRSSI": stationLocRSSI,
       "stationLocPositionX": stationLocPositionX,
       "stationLocPositionY": stationLocPositionY,
       "stationLocPositionZ": stationLocPositionZ,
       "statistics": statistics,
       "ethStatsTable": ethStatsTable,
       "ethStatsEntry": ethStatsEntry,
       "ethStatsIndex": ethStatsIndex,
       "ethStatsIfaceName": ethStatsIfaceName,
       "ethStatsIfaceStatus": ethStatsIfaceStatus,
       "ethStatsIfaceLink": ethStatsIfaceLink,
       "ethStatsIfaceDuplex": ethStatsIfaceDuplex,
       "ethStatsIfaceSpeed": ethStatsIfaceSpeed,
       "ethStatsRxBytes": ethStatsRxBytes,
       "ethStatsRxPackets": ethStatsRxPackets,
       "ethStatsRxCompressed": ethStatsRxCompressed,
       "ethStatsRxMulticast": ethStatsRxMulticast,
       "ethStatsRxDropped": ethStatsRxDropped,
       "ethStatsRxFifoErrors": ethStatsRxFifoErrors,
       "ethStatsRxFrameErrors": ethStatsRxFrameErrors,
       "ethStatsRxTotalErrors": ethStatsRxTotalErrors,
       "ethStatsTxBytes": ethStatsTxBytes,
       "ethStatsTxPackets": ethStatsTxPackets,
       "ethStatsTxCompressed": ethStatsTxCompressed,
       "ethStatsTxCarrierErrors": ethStatsTxCarrierErrors,
       "ethStatsTxDropped": ethStatsTxDropped,
       "ethStatsTxFifoErrors": ethStatsTxFifoErrors,
       "ethStatsTxCollisions": ethStatsTxCollisions,
       "ethStatsTxTotalErrors": ethStatsTxTotalErrors,
       "ethStatsTimePeriod": ethStatsTimePeriod,
       "iapStatsTable": iapStatsTable,
       "iapStatsEntry": iapStatsEntry,
       "iapStatsIndex": iapStatsIndex,
       "iapStatsIfaceName": iapStatsIfaceName,
       "iapStatsRxBytes": iapStatsRxBytes,
       "iapStatsRxPackets": iapStatsRxPackets,
       "iapStatsRxUnicast": iapStatsRxUnicast,
       "iapStatsRxMulticast": iapStatsRxMulticast,
       "iapStatsRxBroadcast": iapStatsRxBroadcast,
       "iapStatsRxManagement": iapStatsRxManagement,
       "iapStatsRxBeacons": iapStatsRxBeacons,
       "iapStatsRxRTS": iapStatsRxRTS,
       "iapStatsRxCTS": iapStatsRxCTS,
       "iapStatsRxFragments": iapStatsRxFragments,
       "iapStatsRxTotalErrors": iapStatsRxTotalErrors,
       "iapStatsRxTotalRetries": iapStatsRxTotalRetries,
       "iapStatsRxDropped": iapStatsRxDropped,
       "iapStatsRxUnassociated": iapStatsRxUnassociated,
       "iapStatsRxCRCErrors": iapStatsRxCRCErrors,
       "iapStatsRxFragErrors": iapStatsRxFragErrors,
       "iapStatsRxEncErrors": iapStatsRxEncErrors,
       "iapStatsRxOverruns": iapStatsRxOverruns,
       "iapStatsRxDuplicates": iapStatsRxDuplicates,
       "iapStatsRxRate1Bytes": iapStatsRxRate1Bytes,
       "iapStatsRxRate1Packets": iapStatsRxRate1Packets,
       "iapStatsRxRate1Errors": iapStatsRxRate1Errors,
       "iapStatsRxRate1Retries": iapStatsRxRate1Retries,
       "iapStatsRxRate2Bytes": iapStatsRxRate2Bytes,
       "iapStatsRxRate2Packets": iapStatsRxRate2Packets,
       "iapStatsRxRate2Errors": iapStatsRxRate2Errors,
       "iapStatsRxRate2Retries": iapStatsRxRate2Retries,
       "iapStatsRxRate5Bytes": iapStatsRxRate5Bytes,
       "iapStatsRxRate5Packets": iapStatsRxRate5Packets,
       "iapStatsRxRate5Errors": iapStatsRxRate5Errors,
       "iapStatsRxRate5Retries": iapStatsRxRate5Retries,
       "iapStatsRxRate11Bytes": iapStatsRxRate11Bytes,
       "iapStatsRxRate11Packets": iapStatsRxRate11Packets,
       "iapStatsRxRate11Errors": iapStatsRxRate11Errors,
       "iapStatsRxRate11Retries": iapStatsRxRate11Retries,
       "iapStatsRxRate6Bytes": iapStatsRxRate6Bytes,
       "iapStatsRxRate6Packets": iapStatsRxRate6Packets,
       "iapStatsRxRate6Errors": iapStatsRxRate6Errors,
       "iapStatsRxRate6Retries": iapStatsRxRate6Retries,
       "iapStatsRxRate9Bytes": iapStatsRxRate9Bytes,
       "iapStatsRxRate9Packets": iapStatsRxRate9Packets,
       "iapStatsRxRate9Errors": iapStatsRxRate9Errors,
       "iapStatsRxRate9Retries": iapStatsRxRate9Retries,
       "iapStatsRxRate12Bytes": iapStatsRxRate12Bytes,
       "iapStatsRxRate12Packets": iapStatsRxRate12Packets,
       "iapStatsRxRate12Errors": iapStatsRxRate12Errors,
       "iapStatsRxRate12Retries": iapStatsRxRate12Retries,
       "iapStatsRxRate18Bytes": iapStatsRxRate18Bytes,
       "iapStatsRxRate18Packets": iapStatsRxRate18Packets,
       "iapStatsRxRate18Errors": iapStatsRxRate18Errors,
       "iapStatsRxRate18Retries": iapStatsRxRate18Retries,
       "iapStatsRxRate24Bytes": iapStatsRxRate24Bytes,
       "iapStatsRxRate24Packets": iapStatsRxRate24Packets,
       "iapStatsRxRate24Errors": iapStatsRxRate24Errors,
       "iapStatsRxRate24Retries": iapStatsRxRate24Retries,
       "iapStatsRxRate36Bytes": iapStatsRxRate36Bytes,
       "iapStatsRxRate36Packets": iapStatsRxRate36Packets,
       "iapStatsRxRate36Errors": iapStatsRxRate36Errors,
       "iapStatsRxRate36Retries": iapStatsRxRate36Retries,
       "iapStatsRxRate48Bytes": iapStatsRxRate48Bytes,
       "iapStatsRxRate48Packets": iapStatsRxRate48Packets,
       "iapStatsRxRate48Errors": iapStatsRxRate48Errors,
       "iapStatsRxRate48Retries": iapStatsRxRate48Retries,
       "iapStatsRxRate54Bytes": iapStatsRxRate54Bytes,
       "iapStatsRxRate54Packets": iapStatsRxRate54Packets,
       "iapStatsRxRate54Errors": iapStatsRxRate54Errors,
       "iapStatsRxRate54Retries": iapStatsRxRate54Retries,
       "iapStatsTxBytes": iapStatsTxBytes,
       "iapStatsTxPackets": iapStatsTxPackets,
       "iapStatsTxUnicast": iapStatsTxUnicast,
       "iapStatsTxMulticast": iapStatsTxMulticast,
       "iapStatsTxBroadcast": iapStatsTxBroadcast,
       "iapStatsTxManagement": iapStatsTxManagement,
       "iapStatsTxBeacons": iapStatsTxBeacons,
       "iapStatsTxRTS": iapStatsTxRTS,
       "iapStatsTxCTS": iapStatsTxCTS,
       "iapStatsTxFragments": iapStatsTxFragments,
       "iapStatsTxTotalErrors": iapStatsTxTotalErrors,
       "iapStatsTxTotalRetries": iapStatsTxTotalRetries,
       "iapStatsTxDropped": iapStatsTxDropped,
       "iapStatsTxUnassociated": iapStatsTxUnassociated,
       "iapStatsTxACKFailures": iapStatsTxACKFailures,
       "iapStatsTxRTSFailures": iapStatsTxRTSFailures,
       "iapStatsTxRTSRetries": iapStatsTxRTSRetries,
       "iapStatsTxSingleRetries": iapStatsTxSingleRetries,
       "iapStatsTxMultipleRetries": iapStatsTxMultipleRetries,
       "iapStatsTxRate1Bytes": iapStatsTxRate1Bytes,
       "iapStatsTxRate1Packets": iapStatsTxRate1Packets,
       "iapStatsTxRate1Errors": iapStatsTxRate1Errors,
       "iapStatsTxRate1Retries": iapStatsTxRate1Retries,
       "iapStatsTxRate2Bytes": iapStatsTxRate2Bytes,
       "iapStatsTxRate2Packets": iapStatsTxRate2Packets,
       "iapStatsTxRate2Errors": iapStatsTxRate2Errors,
       "iapStatsTxRate2Retries": iapStatsTxRate2Retries,
       "iapStatsTxRate5Bytes": iapStatsTxRate5Bytes,
       "iapStatsTxRate5Packets": iapStatsTxRate5Packets,
       "iapStatsTxRate5Errors": iapStatsTxRate5Errors,
       "iapStatsTxRate5Retries": iapStatsTxRate5Retries,
       "iapStatsTxRate11Bytes": iapStatsTxRate11Bytes,
       "iapStatsTxRate11Packets": iapStatsTxRate11Packets,
       "iapStatsTxRate11Errors": iapStatsTxRate11Errors,
       "iapStatsTxRate11Retries": iapStatsTxRate11Retries,
       "iapStatsTxRate6Bytes": iapStatsTxRate6Bytes,
       "iapStatsTxRate6Packets": iapStatsTxRate6Packets,
       "iapStatsTxRate6Errors": iapStatsTxRate6Errors,
       "iapStatsTxRate6Retries": iapStatsTxRate6Retries,
       "iapStatsTxRate9Bytes": iapStatsTxRate9Bytes,
       "iapStatsTxRate9Packets": iapStatsTxRate9Packets,
       "iapStatsTxRate9Errors": iapStatsTxRate9Errors,
       "iapStatsTxRate9Retries": iapStatsTxRate9Retries,
       "iapStatsTxRate12Bytes": iapStatsTxRate12Bytes,
       "iapStatsTxRate12Packets": iapStatsTxRate12Packets,
       "iapStatsTxRate12Errors": iapStatsTxRate12Errors,
       "iapStatsTxRate12Retries": iapStatsTxRate12Retries,
       "iapStatsTxRate18Bytes": iapStatsTxRate18Bytes,
       "iapStatsTxRate18Packets": iapStatsTxRate18Packets,
       "iapStatsTxRate18Errors": iapStatsTxRate18Errors,
       "iapStatsTxRate18Retries": iapStatsTxRate18Retries,
       "iapStatsTxRate24Bytes": iapStatsTxRate24Bytes,
       "iapStatsTxRate24Packets": iapStatsTxRate24Packets,
       "iapStatsTxRate24Errors": iapStatsTxRate24Errors,
       "iapStatsTxRate24Retries": iapStatsTxRate24Retries,
       "iapStatsTxRate36Bytes": iapStatsTxRate36Bytes,
       "iapStatsTxRate36Packets": iapStatsTxRate36Packets,
       "iapStatsTxRate36Errors": iapStatsTxRate36Errors,
       "iapStatsTxRate36Retries": iapStatsTxRate36Retries,
       "iapStatsTxRate48Bytes": iapStatsTxRate48Bytes,
       "iapStatsTxRate48Packets": iapStatsTxRate48Packets,
       "iapStatsTxRate48Errors": iapStatsTxRate48Errors,
       "iapStatsTxRate48Retries": iapStatsTxRate48Retries,
       "iapStatsTxRate54Bytes": iapStatsTxRate54Bytes,
       "iapStatsTxRate54Packets": iapStatsTxRate54Packets,
       "iapStatsTxRate54Errors": iapStatsTxRate54Errors,
       "iapStatsTxRate54Retries": iapStatsTxRate54Retries,
       "iapStatsTxUtilization": iapStatsTxUtilization,
       "iapStatsNoiseTotal": iapStatsNoiseTotal,
       "iapStatsNoiseDenominator": iapStatsNoiseDenominator,
       "iapStatsTimePeriod": iapStatsTimePeriod,
       "stationStatsTable": stationStatsTable,
       "stationStatsEntry": stationStatsEntry,
       "stationStatsIndex": stationStatsIndex,
       "stationStatsMACAddress": stationStatsMACAddress,
       "stationStatsRxBytes": stationStatsRxBytes,
       "stationStatsRxPackets": stationStatsRxPackets,
       "stationStatsRxErrors": stationStatsRxErrors,
       "stationStatsRxRetries": stationStatsRxRetries,
       "stationStatsRxRate1Bytes": stationStatsRxRate1Bytes,
       "stationStatsRxRate1Packets": stationStatsRxRate1Packets,
       "stationStatsRxRate1Errors": stationStatsRxRate1Errors,
       "stationStatsRxRate1Retries": stationStatsRxRate1Retries,
       "stationStatsRxRate2Bytes": stationStatsRxRate2Bytes,
       "stationStatsRxRate2Packets": stationStatsRxRate2Packets,
       "stationStatsRxRate2Errors": stationStatsRxRate2Errors,
       "stationStatsRxRate2Retries": stationStatsRxRate2Retries,
       "stationStatsRxRate5Bytes": stationStatsRxRate5Bytes,
       "stationStatsRxRate5Packets": stationStatsRxRate5Packets,
       "stationStatsRxRate5Errors": stationStatsRxRate5Errors,
       "stationStatsRxRate5Retries": stationStatsRxRate5Retries,
       "stationStatsRxRate11Bytes": stationStatsRxRate11Bytes,
       "stationStatsRxRate11Packets": stationStatsRxRate11Packets,
       "stationStatsRxRate11Errors": stationStatsRxRate11Errors,
       "stationStatsRxRate11Retries": stationStatsRxRate11Retries,
       "stationStatsRxRate6Bytes": stationStatsRxRate6Bytes,
       "stationStatsRxRate6Packets": stationStatsRxRate6Packets,
       "stationStatsRxRate6Errors": stationStatsRxRate6Errors,
       "stationStatsRxRate6Retries": stationStatsRxRate6Retries,
       "stationStatsRxRate9Bytes": stationStatsRxRate9Bytes,
       "stationStatsRxRate9Packets": stationStatsRxRate9Packets,
       "stationStatsRxRate9Errors": stationStatsRxRate9Errors,
       "stationStatsRxRate9Retries": stationStatsRxRate9Retries,
       "stationStatsRxRate12Bytes": stationStatsRxRate12Bytes,
       "stationStatsRxRate12Packets": stationStatsRxRate12Packets,
       "stationStatsRxRate12Errors": stationStatsRxRate12Errors,
       "stationStatsRxRate12Retries": stationStatsRxRate12Retries,
       "stationStatsRxRate18Bytes": stationStatsRxRate18Bytes,
       "stationStatsRxRate18Packets": stationStatsRxRate18Packets,
       "stationStatsRxRate18Errors": stationStatsRxRate18Errors,
       "stationStatsRxRate18Retries": stationStatsRxRate18Retries,
       "stationStatsRxRate24Bytes": stationStatsRxRate24Bytes,
       "stationStatsRxRate24Packets": stationStatsRxRate24Packets,
       "stationStatsRxRate24Errors": stationStatsRxRate24Errors,
       "stationStatsRxRate24Retries": stationStatsRxRate24Retries,
       "stationStatsRxRate36Bytes": stationStatsRxRate36Bytes,
       "stationStatsRxRate36Packets": stationStatsRxRate36Packets,
       "stationStatsRxRate36Errors": stationStatsRxRate36Errors,
       "stationStatsRxRate36Retries": stationStatsRxRate36Retries,
       "stationStatsRxRate48Bytes": stationStatsRxRate48Bytes,
       "stationStatsRxRate48Packets": stationStatsRxRate48Packets,
       "stationStatsRxRate48Errors": stationStatsRxRate48Errors,
       "stationStatsRxRate48Retries": stationStatsRxRate48Retries,
       "stationStatsRxRate54Bytes": stationStatsRxRate54Bytes,
       "stationStatsRxRate54Packets": stationStatsRxRate54Packets,
       "stationStatsRxRate54Errors": stationStatsRxRate54Errors,
       "stationStatsRxRate54Retries": stationStatsRxRate54Retries,
       "stationStatsTxBytes": stationStatsTxBytes,
       "stationStatsTxPackets": stationStatsTxPackets,
       "stationStatsTxErrors": stationStatsTxErrors,
       "stationStatsTxRetries": stationStatsTxRetries,
       "stationStatsTxRate1Bytes": stationStatsTxRate1Bytes,
       "stationStatsTxRate1Packets": stationStatsTxRate1Packets,
       "stationStatsTxRate1Errors": stationStatsTxRate1Errors,
       "stationStatsTxRate1Retries": stationStatsTxRate1Retries,
       "stationStatsTxRate2Bytes": stationStatsTxRate2Bytes,
       "stationStatsTxRate2Packets": stationStatsTxRate2Packets,
       "stationStatsTxRate2Errors": stationStatsTxRate2Errors,
       "stationStatsTxRate2Retries": stationStatsTxRate2Retries,
       "stationStatsTxRate5Bytes": stationStatsTxRate5Bytes,
       "stationStatsTxRate5Packets": stationStatsTxRate5Packets,
       "stationStatsTxRate5Errors": stationStatsTxRate5Errors,
       "stationStatsTxRate5Retries": stationStatsTxRate5Retries,
       "stationStatsTxRate11Bytes": stationStatsTxRate11Bytes,
       "stationStatsTxRate11Packets": stationStatsTxRate11Packets,
       "stationStatsTxRate11Errors": stationStatsTxRate11Errors,
       "stationStatsTxRate11Retries": stationStatsTxRate11Retries,
       "stationStatsTxRate6Bytes": stationStatsTxRate6Bytes,
       "stationStatsTxRate6Packets": stationStatsTxRate6Packets,
       "stationStatsTxRate6Errors": stationStatsTxRate6Errors,
       "stationStatsTxRate6Retries": stationStatsTxRate6Retries,
       "stationStatsTxRate9Bytes": stationStatsTxRate9Bytes,
       "stationStatsTxRate9Packets": stationStatsTxRate9Packets,
       "stationStatsTxRate9Errors": stationStatsTxRate9Errors,
       "stationStatsTxRate9Retries": stationStatsTxRate9Retries,
       "stationStatsTxRate12Bytes": stationStatsTxRate12Bytes,
       "stationStatsTxRate12Packets": stationStatsTxRate12Packets,
       "stationStatsTxRate12Errors": stationStatsTxRate12Errors,
       "stationStatsTxRate12Retries": stationStatsTxRate12Retries,
       "stationStatsTxRate18Bytes": stationStatsTxRate18Bytes,
       "stationStatsTxRate18Packets": stationStatsTxRate18Packets,
       "stationStatsTxRate18Errors": stationStatsTxRate18Errors,
       "stationStatsTxRate18Retries": stationStatsTxRate18Retries,
       "stationStatsTxRate24Bytes": stationStatsTxRate24Bytes,
       "stationStatsTxRate24Packets": stationStatsTxRate24Packets,
       "stationStatsTxRate24Errors": stationStatsTxRate24Errors,
       "stationStatsTxRate24Retries": stationStatsTxRate24Retries,
       "stationStatsTxRate36Bytes": stationStatsTxRate36Bytes,
       "stationStatsTxRate36Packets": stationStatsTxRate36Packets,
       "stationStatsTxRate36Errors": stationStatsTxRate36Errors,
       "stationStatsTxRate36Retries": stationStatsTxRate36Retries,
       "stationStatsTxRate48Bytes": stationStatsTxRate48Bytes,
       "stationStatsTxRate48Packets": stationStatsTxRate48Packets,
       "stationStatsTxRate48Errors": stationStatsTxRate48Errors,
       "stationStatsTxRate48Retries": stationStatsTxRate48Retries,
       "stationStatsTxRate54Bytes": stationStatsTxRate54Bytes,
       "stationStatsTxRate54Packets": stationStatsTxRate54Packets,
       "stationStatsTxRate54Errors": stationStatsTxRate54Errors,
       "stationStatsTxRate54Retries": stationStatsTxRate54Retries,
       "stationStatsTimePeriod": stationStatsTimePeriod,
       "vlanStatsTable": vlanStatsTable,
       "vlanStatsEntry": vlanStatsEntry,
       "vlanStatsIndex": vlanStatsIndex,
       "vlanStatsName": vlanStatsName,
       "vlanStatsNumber": vlanStatsNumber,
       "vlanStatsRxBytes": vlanStatsRxBytes,
       "vlanStatsRxPackets": vlanStatsRxPackets,
       "vlanStatsRxCompressed": vlanStatsRxCompressed,
       "vlanStatsRxMulticast": vlanStatsRxMulticast,
       "vlanStatsRxDropped": vlanStatsRxDropped,
       "vlanStatsRxFifoErrors": vlanStatsRxFifoErrors,
       "vlanStatsRxFrameErrors": vlanStatsRxFrameErrors,
       "vlanStatsRxTotalErrors": vlanStatsRxTotalErrors,
       "vlanStatsTxBytes": vlanStatsTxBytes,
       "vlanStatsTxPackets": vlanStatsTxPackets,
       "vlanStatsTxCompressed": vlanStatsTxCompressed,
       "vlanStatsTxCarrierErrors": vlanStatsTxCarrierErrors,
       "vlanStatsTxDropped": vlanStatsTxDropped,
       "vlanStatsTxFifoErrors": vlanStatsTxFifoErrors,
       "vlanStatsTxCollisions": vlanStatsTxCollisions,
       "vlanStatsTxTotalErrors": vlanStatsTxTotalErrors,
       "vlanStatsTimePeriod": vlanStatsTimePeriod,
       "wdsStatsTable": wdsStatsTable,
       "wdsStatsEntry": wdsStatsEntry,
       "wdsStatsIndex": wdsStatsIndex,
       "wdsStatsLinkName": wdsStatsLinkName,
       "wdsStatsRxBytes": wdsStatsRxBytes,
       "wdsStatsRxPackets": wdsStatsRxPackets,
       "wdsStatsRxErrors": wdsStatsRxErrors,
       "wdsStatsRxRetries": wdsStatsRxRetries,
       "wdsStatsRxRate1Bytes": wdsStatsRxRate1Bytes,
       "wdsStatsRxRate1Packets": wdsStatsRxRate1Packets,
       "wdsStatsRxRate1Errors": wdsStatsRxRate1Errors,
       "wdsStatsRxRate1Retries": wdsStatsRxRate1Retries,
       "wdsStatsRxRate2Bytes": wdsStatsRxRate2Bytes,
       "wdsStatsRxRate2Packets": wdsStatsRxRate2Packets,
       "wdsStatsRxRate2Errors": wdsStatsRxRate2Errors,
       "wdsStatsRxRate2Retries": wdsStatsRxRate2Retries,
       "wdsStatsRxRate5Bytes": wdsStatsRxRate5Bytes,
       "wdsStatsRxRate5Packets": wdsStatsRxRate5Packets,
       "wdsStatsRxRate5Errors": wdsStatsRxRate5Errors,
       "wdsStatsRxRate5Retries": wdsStatsRxRate5Retries,
       "wdsStatsRxRate11Bytes": wdsStatsRxRate11Bytes,
       "wdsStatsRxRate11Packets": wdsStatsRxRate11Packets,
       "wdsStatsRxRate11Errors": wdsStatsRxRate11Errors,
       "wdsStatsRxRate11Retries": wdsStatsRxRate11Retries,
       "wdsStatsRxRate6Bytes": wdsStatsRxRate6Bytes,
       "wdsStatsRxRate6Packets": wdsStatsRxRate6Packets,
       "wdsStatsRxRate6Errors": wdsStatsRxRate6Errors,
       "wdsStatsRxRate6Retries": wdsStatsRxRate6Retries,
       "wdsStatsRxRate9Bytes": wdsStatsRxRate9Bytes,
       "wdsStatsRxRate9Packets": wdsStatsRxRate9Packets,
       "wdsStatsRxRate9Errors": wdsStatsRxRate9Errors,
       "wdsStatsRxRate9Retries": wdsStatsRxRate9Retries,
       "wdsStatsRxRate12Bytes": wdsStatsRxRate12Bytes,
       "wdsStatsRxRate12Packets": wdsStatsRxRate12Packets,
       "wdsStatsRxRate12Errors": wdsStatsRxRate12Errors,
       "wdsStatsRxRate12Retries": wdsStatsRxRate12Retries,
       "wdsStatsRxRate18Bytes": wdsStatsRxRate18Bytes,
       "wdsStatsRxRate18Packets": wdsStatsRxRate18Packets,
       "wdsStatsRxRate18Errors": wdsStatsRxRate18Errors,
       "wdsStatsRxRate18Retries": wdsStatsRxRate18Retries,
       "wdsStatsRxRate24Bytes": wdsStatsRxRate24Bytes,
       "wdsStatsRxRate24Packets": wdsStatsRxRate24Packets,
       "wdsStatsRxRate24Errors": wdsStatsRxRate24Errors,
       "wdsStatsRxRate24Retries": wdsStatsRxRate24Retries,
       "wdsStatsRxRate36Bytes": wdsStatsRxRate36Bytes,
       "wdsStatsRxRate36Packets": wdsStatsRxRate36Packets,
       "wdsStatsRxRate36Errors": wdsStatsRxRate36Errors,
       "wdsStatsRxRate36Retries": wdsStatsRxRate36Retries,
       "wdsStatsRxRate48Bytes": wdsStatsRxRate48Bytes,
       "wdsStatsRxRate48Packets": wdsStatsRxRate48Packets,
       "wdsStatsRxRate48Errors": wdsStatsRxRate48Errors,
       "wdsStatsRxRate48Retries": wdsStatsRxRate48Retries,
       "wdsStatsRxRate54Bytes": wdsStatsRxRate54Bytes,
       "wdsStatsRxRate54Packets": wdsStatsRxRate54Packets,
       "wdsStatsRxRate54Errors": wdsStatsRxRate54Errors,
       "wdsStatsRxRate54Retries": wdsStatsRxRate54Retries,
       "wdsStatsTxBytes": wdsStatsTxBytes,
       "wdsStatsTxPackets": wdsStatsTxPackets,
       "wdsStatsTxErrors": wdsStatsTxErrors,
       "wdsStatsTxRetries": wdsStatsTxRetries,
       "wdsStatsTxRate1Bytes": wdsStatsTxRate1Bytes,
       "wdsStatsTxRate1Packets": wdsStatsTxRate1Packets,
       "wdsStatsTxRate1Errors": wdsStatsTxRate1Errors,
       "wdsStatsTxRate1Retries": wdsStatsTxRate1Retries,
       "wdsStatsTxRate2Bytes": wdsStatsTxRate2Bytes,
       "wdsStatsTxRate2Packets": wdsStatsTxRate2Packets,
       "wdsStatsTxRate2Errors": wdsStatsTxRate2Errors,
       "wdsStatsTxRate2Retries": wdsStatsTxRate2Retries,
       "wdsStatsTxRate5Bytes": wdsStatsTxRate5Bytes,
       "wdsStatsTxRate5Packets": wdsStatsTxRate5Packets,
       "wdsStatsTxRate5Errors": wdsStatsTxRate5Errors,
       "wdsStatsTxRate5Retries": wdsStatsTxRate5Retries,
       "wdsStatsTxRate11Bytes": wdsStatsTxRate11Bytes,
       "wdsStatsTxRate11Packets": wdsStatsTxRate11Packets,
       "wdsStatsTxRate11Errors": wdsStatsTxRate11Errors,
       "wdsStatsTxRate11Retries": wdsStatsTxRate11Retries,
       "wdsStatsTxRate6Bytes": wdsStatsTxRate6Bytes,
       "wdsStatsTxRate6Packets": wdsStatsTxRate6Packets,
       "wdsStatsTxRate6Errors": wdsStatsTxRate6Errors,
       "wdsStatsTxRate6Retries": wdsStatsTxRate6Retries,
       "wdsStatsTxRate9Bytes": wdsStatsTxRate9Bytes,
       "wdsStatsTxRate9Packets": wdsStatsTxRate9Packets,
       "wdsStatsTxRate9Errors": wdsStatsTxRate9Errors,
       "wdsStatsTxRate9Retries": wdsStatsTxRate9Retries,
       "wdsStatsTxRate12Bytes": wdsStatsTxRate12Bytes,
       "wdsStatsTxRate12Packets": wdsStatsTxRate12Packets,
       "wdsStatsTxRate12Errors": wdsStatsTxRate12Errors,
       "wdsStatsTxRate12Retries": wdsStatsTxRate12Retries,
       "wdsStatsTxRate18Bytes": wdsStatsTxRate18Bytes,
       "wdsStatsTxRate18Packets": wdsStatsTxRate18Packets,
       "wdsStatsTxRate18Errors": wdsStatsTxRate18Errors,
       "wdsStatsTxRate18Retries": wdsStatsTxRate18Retries,
       "wdsStatsTxRate24Bytes": wdsStatsTxRate24Bytes,
       "wdsStatsTxRate24Packets": wdsStatsTxRate24Packets,
       "wdsStatsTxRate24Errors": wdsStatsTxRate24Errors,
       "wdsStatsTxRate24Retries": wdsStatsTxRate24Retries,
       "wdsStatsTxRate36Bytes": wdsStatsTxRate36Bytes,
       "wdsStatsTxRate36Packets": wdsStatsTxRate36Packets,
       "wdsStatsTxRate36Errors": wdsStatsTxRate36Errors,
       "wdsStatsTxRate36Retries": wdsStatsTxRate36Retries,
       "wdsStatsTxRate48Bytes": wdsStatsTxRate48Bytes,
       "wdsStatsTxRate48Packets": wdsStatsTxRate48Packets,
       "wdsStatsTxRate48Errors": wdsStatsTxRate48Errors,
       "wdsStatsTxRate48Retries": wdsStatsTxRate48Retries,
       "wdsStatsTxRate54Bytes": wdsStatsTxRate54Bytes,
       "wdsStatsTxRate54Packets": wdsStatsTxRate54Packets,
       "wdsStatsTxRate54Errors": wdsStatsTxRate54Errors,
       "wdsStatsTxRate54Retries": wdsStatsTxRate54Retries,
       "spectrumAnalysisTable": spectrumAnalysisTable,
       "spectrumAnalysisEntry": spectrumAnalysisEntry,
       "spectrumAnalysisIndex": spectrumAnalysisIndex,
       "spectrumAnalysisChannel": spectrumAnalysisChannel,
       "spectrumAnalysisPackets": spectrumAnalysisPackets,
       "spectrumAnalysisBytes": spectrumAnalysisBytes,
       "spectrumAnalysisErrorRate": spectrumAnalysisErrorRate,
       "spectrumAnalysisAverageDataRate": spectrumAnalysisAverageDataRate,
       "spectrumAnalysisAverageRSSI": spectrumAnalysisAverageRSSI,
       "spectrumAnalysisSignalToNoiseRatio": spectrumAnalysisSignalToNoiseRatio,
       "spectrumAnalysisNoiseFloor": spectrumAnalysisNoiseFloor,
       "spectrumAnalysisDot11Busy": spectrumAnalysisDot11Busy,
       "spectrumAnalysisNoise": spectrumAnalysisNoise,
       "realtimeMonitorTable": realtimeMonitorTable,
       "realtimeMonitorEntry": realtimeMonitorEntry,
       "realtimeMonitorIndex": realtimeMonitorIndex,
       "realtimeMonitorIfaceName": realtimeMonitorIfaceName,
       "realtimeMonitorChannel": realtimeMonitorChannel,
       "realtimeMonitorPackets": realtimeMonitorPackets,
       "realtimeMonitorBytes": realtimeMonitorBytes,
       "realtimeMonitorErrorRate": realtimeMonitorErrorRate,
       "realtimeMonitorAverageDataRate": realtimeMonitorAverageDataRate,
       "realtimeMonitorAverageRSSI": realtimeMonitorAverageRSSI,
       "realtimeMonitorSignalToNoiseRatio": realtimeMonitorSignalToNoiseRatio,
       "realtimeMonitorNoiseFloor": realtimeMonitorNoiseFloor,
       "realtimeMonitorDot11Busy": realtimeMonitorDot11Busy,
       "realtimeMonitorNoise": realtimeMonitorNoise,
       "stationAppStatsTable": stationAppStatsTable,
       "stationAppStatsEntry": stationAppStatsEntry,
       "stationAppStatsIndex": stationAppStatsIndex,
       "stationAppStatsMACAddress": stationAppStatsMACAddress,
       "stationAppStatsGuid": stationAppStatsGuid,
       "stationAppStatsTxPackets": stationAppStatsTxPackets,
       "stationAppStatsRxPackets": stationAppStatsRxPackets,
       "stationAppStatsTxBytes": stationAppStatsTxBytes,
       "stationAppStatsRxBytes": stationAppStatsRxBytes,
       "stationAppStatsTimePeriod": stationAppStatsTimePeriod,
       "stationAppCatStatsTable": stationAppCatStatsTable,
       "stationAppCatStatsEntry": stationAppCatStatsEntry,
       "stationAppCatStatsIndex": stationAppCatStatsIndex,
       "stationAppCatStatsMACAddress": stationAppCatStatsMACAddress,
       "stationAppCatStatsGuid": stationAppCatStatsGuid,
       "stationAppCatStatsTxPackets": stationAppCatStatsTxPackets,
       "stationAppCatStatsRxPackets": stationAppCatStatsRxPackets,
       "stationAppCatStatsTxBytes": stationAppCatStatsTxBytes,
       "stationAppCatStatsRxBytes": stationAppCatStatsRxBytes,
       "stationAppCatStatsTimePeriod": stationAppCatStatsTimePeriod,
       "vlanMgmtAppStatsTable": vlanMgmtAppStatsTable,
       "vlanMgmtAppStatsEntry": vlanMgmtAppStatsEntry,
       "vlanMgmtAppStatsIndex": vlanMgmtAppStatsIndex,
       "vlanMgmtAppStatsVlan": vlanMgmtAppStatsVlan,
       "vlanMgmtAppStatsGuid": vlanMgmtAppStatsGuid,
       "vlanMgmtAppStatsTxPackets": vlanMgmtAppStatsTxPackets,
       "vlanMgmtAppStatsRxPackets": vlanMgmtAppStatsRxPackets,
       "vlanMgmtAppStatsTxBytes": vlanMgmtAppStatsTxBytes,
       "vlanMgmtAppStatsRxBytes": vlanMgmtAppStatsRxBytes,
       "vlanMgmtAppStatsTimePeriod": vlanMgmtAppStatsTimePeriod,
       "vlanMgmtAppCatStatsTable": vlanMgmtAppCatStatsTable,
       "vlanMgmtAppCatStatsEntry": vlanMgmtAppCatStatsEntry,
       "vlanMgmtAppCatStatsIndex": vlanMgmtAppCatStatsIndex,
       "vlanMgmtAppCatStatsVlan": vlanMgmtAppCatStatsVlan,
       "vlanMgmtAppCatStatsGuid": vlanMgmtAppCatStatsGuid,
       "vlanMgmtAppCatStatsTxPackets": vlanMgmtAppCatStatsTxPackets,
       "vlanMgmtAppCatStatsRxPackets": vlanMgmtAppCatStatsRxPackets,
       "vlanMgmtAppCatStatsTxBytes": vlanMgmtAppCatStatsTxBytes,
       "vlanMgmtAppCatStatsRxBytes": vlanMgmtAppCatStatsRxBytes,
       "vlanMgmtAppCatStatsTimePeriod": vlanMgmtAppCatStatsTimePeriod,
       "vlanStaAppStatsTable": vlanStaAppStatsTable,
       "vlanStaAppStatsEntry": vlanStaAppStatsEntry,
       "vlanStaAppStatsIndex": vlanStaAppStatsIndex,
       "vlanStaAppStatsVlan": vlanStaAppStatsVlan,
       "vlanStaAppStatsGuid": vlanStaAppStatsGuid,
       "vlanStaAppStatsTxPackets": vlanStaAppStatsTxPackets,
       "vlanStaAppStatsRxPackets": vlanStaAppStatsRxPackets,
       "vlanStaAppStatsTxBytes": vlanStaAppStatsTxBytes,
       "vlanStaAppStatsRxBytes": vlanStaAppStatsRxBytes,
       "vlanStaAppStatsTimePeriod": vlanStaAppStatsTimePeriod,
       "vlanStaAppCatStatsTable": vlanStaAppCatStatsTable,
       "vlanStaAppCatStatsEntry": vlanStaAppCatStatsEntry,
       "vlanStaAppCatStatsIndex": vlanStaAppCatStatsIndex,
       "vlanStaAppCatStatsVlan": vlanStaAppCatStatsVlan,
       "vlanStaAppCatStatsGuid": vlanStaAppCatStatsGuid,
       "vlanStaAppCatStatsTxPackets": vlanStaAppCatStatsTxPackets,
       "vlanStaAppCatStatsRxPackets": vlanStaAppCatStatsRxPackets,
       "vlanStaAppCatStatsTxBytes": vlanStaAppCatStatsTxBytes,
       "vlanStaAppCatStatsRxBytes": vlanStaAppCatStatsRxBytes,
       "vlanStaAppCatStatsTimePeriod": vlanStaAppCatStatsTimePeriod,
       "stationAppStatsTablePeriod": stationAppStatsTablePeriod,
       "stationAppStatsTableClear": stationAppStatsTableClear,
       "vlanStaAppStatsTablePeriod": vlanStaAppStatsTablePeriod,
       "vlanMgmtAppStatsTablePeriod": vlanMgmtAppStatsTablePeriod,
       "syslog": syslog,
       "syslogEnable": syslogEnable,
       "syslogLevel": syslogLevel,
       "syslogServer": syslogServer,
       "syslogConsole": syslogConsole,
       "syslogSize": syslogSize,
       "syslogTable": syslogTable,
       "syslogEntry": syslogEntry,
       "syslogIndex": syslogIndex,
       "syslogTimestamp": syslogTimestamp,
       "syslogPriority": syslogPriority,
       "syslogMessage": syslogMessage,
       "syslogSecServer": syslogSecServer,
       "syslogLevelConsole": syslogLevelConsole,
       "syslogLevelPriServer": syslogLevelPriServer,
       "syslogLevelSecServer": syslogLevelSecServer,
       "syslogTerServer": syslogTerServer,
       "syslogLevelTerServer": syslogLevelTerServer,
       "syslogEmailServer": syslogEmailServer,
       "syslogEmailLevel": syslogEmailLevel,
       "syslogEmailFromAddress": syslogEmailFromAddress,
       "syslogEmailToAddress": syslogEmailToAddress,
       "syslogEmailUsername": syslogEmailUsername,
       "syslogEmailPassword": syslogEmailPassword,
       "syslogEmailPasswordEnc": syslogEmailPasswordEnc,
       "syslogEmailPort": syslogEmailPort,
       "syslogPriServerPort": syslogPriServerPort,
       "syslogSecServerPort": syslogSecServerPort,
       "syslogTerServerPort": syslogTerServerPort,
       "syslogStationFormat": syslogStationFormat,
       "syslogTimeFormat": syslogTimeFormat,
       "syslogStationUrlLog": syslogStationUrlLog,
       "system": system,
       "systemHostname": systemHostname,
       "systemLocation": systemLocation,
       "systemContactName": systemContactName,
       "systemContactEmail": systemContactEmail,
       "systemContactPhone": systemContactPhone,
       "systemTelnetEnable": systemTelnetEnable,
       "systemTelnetTimeout": systemTelnetTimeout,
       "systemSshEnable": systemSshEnable,
       "systemSshTimeout": systemSshTimeout,
       "systemHttpsEnable": systemHttpsEnable,
       "systemHttpsTimeout": systemHttpsTimeout,
       "systemReboot": systemReboot,
       "systemReset": systemReset,
       "systemSaveCfg": systemSaveCfg,
       "systemUptime": systemUptime,
       "systemArrayInfo": systemArrayInfo,
       "hardwareConfig": hardwareConfig,
       "componentTable": componentTable,
       "componentEntry": componentEntry,
       "componentIndex": componentIndex,
       "componentName": componentName,
       "componentPart": componentPart,
       "componentSerial": componentSerial,
       "componentDate": componentDate,
       "fpgaTable": fpgaTable,
       "fpgaEntry": fpgaEntry,
       "fpgaIndex": fpgaIndex,
       "fpgaName": fpgaName,
       "fpgaBootVersion": fpgaBootVersion,
       "fpgaSWVersion": fpgaSWVersion,
       "interfaceMACAddressTable": interfaceMACAddressTable,
       "interfaceMACAddressEntry": interfaceMACAddressEntry,
       "interfaceMACAddressIndex": interfaceMACAddressIndex,
       "interfaceName": interfaceName,
       "interfaceMACAddress": interfaceMACAddress,
       "arrayModel": arrayModel,
       "softwareConfig": softwareConfig,
       "bootLoaderVersion": bootLoaderVersion,
       "iapDriverVersion": iapDriverVersion,
       "softwareVersion": softwareVersion,
       "timeThisBoot": timeThisBoot,
       "timeLastBoot": timeLastBoot,
       "scdFirmwareVersion": scdFirmwareVersion,
       "systemMIBVersion": systemMIBVersion,
       "systemGroupName": systemGroupName,
       "systemStandbyEnable": systemStandbyEnable,
       "systemStandbyTarget": systemStandbyTarget,
       "systemTempTable": systemTempTable,
       "systemTempEntry": systemTempEntry,
       "systemTempIndex": systemTempIndex,
       "systemTempComponent": systemTempComponent,
       "systemTempCelsius": systemTempCelsius,
       "systemTempFahrenheit": systemTempFahrenheit,
       "systemFipsMode": systemFipsMode,
       "systemTelnetPort": systemTelnetPort,
       "systemSshPort": systemSshPort,
       "systemHttpsPort": systemHttpsPort,
       "systemLicenseKey": systemLicenseKey,
       "systemLicenseFeatures": systemLicenseFeatures,
       "systemRemoteServer": systemRemoteServer,
       "systemRemoteImage": systemRemoteImage,
       "systemRemoteConfigFile": systemRemoteConfigFile,
       "systemHttpsCertificate": systemHttpsCertificate,
       "systemPCIAuditMode": systemPCIAuditMode,
       "systemNetworkAssurance": systemNetworkAssurance,
       "systemLicenseVersion": systemLicenseVersion,
       "systemLicenseExpDate": systemLicenseExpDate,
       "licenseFeatureTable": licenseFeatureTable,
       "licenseFeatureEntry": licenseFeatureEntry,
       "licenseFeatureIndex": licenseFeatureIndex,
       "licenseFeatureName": licenseFeatureName,
       "licenseFeatureStatus": licenseFeatureStatus,
       "licenseFeatureDesc": licenseFeatureDesc,
       "systemRDKMode": systemRDKMode,
       "systemMaxAuthAttempts": systemMaxAuthAttempts,
       "systemLoginReauthPeriod": systemLoginReauthPeriod,
       "systemPreLoginBanner": systemPreLoginBanner,
       "systemPostLoginBanner": systemPostLoginBanner,
       "systemResetReason": systemResetReason,
       "systemResetCode": systemResetCode,
       "systemNetworkAssurancePeriod": systemNetworkAssurancePeriod,
       "systemLicenseProductType": systemLicenseProductType,
       "systemLicenseMaxNumIAPs": systemLicenseMaxNumIAPs,
       "systemCrashInfo": systemCrashInfo,
       "systemCompassHeading": systemCompassHeading,
       "systemXirconEnable": systemXirconEnable,
       "systemXirconTimeout": systemXirconTimeout,
       "systemXirconPort": systemXirconPort,
       "systemStpEnable": systemStpEnable,
       "systemFanSpeed": systemFanSpeed,
       "systemXmsControl": systemXmsControl,
       "systemActivation": systemActivation,
       "systemActivationInterval": systemActivationInterval,
       "systemStatusLed": systemStatusLed,
       "tunnel": tunnel,
       "tunnelTable": tunnelTable,
       "tunnelEntry": tunnelEntry,
       "tunnelIndex": tunnelIndex,
       "tunnelName": tunnelName,
       "tunnelEnable": tunnelEnable,
       "tunnelType": tunnelType,
       "tunnelLocalEndpoint": tunnelLocalEndpoint,
       "tunnelPriRemoteEndpoint": tunnelPriRemoteEndpoint,
       "tunnelSecRemoteEndpoint": tunnelSecRemoteEndpoint,
       "tunnelMTU": tunnelMTU,
       "tunnelSsids": tunnelSsids,
       "tunnelDhcpOption": tunnelDhcpOption,
       "tunnelFailoverInterval": tunnelFailoverInterval,
       "tunnelFailoverNumFailures": tunnelFailoverNumFailures,
       "tunnelRowStatus": tunnelRowStatus,
       "tunnelVlanList": tunnelVlanList,
       "tunnelTableReset": tunnelTableReset,
       "vlan": vlan,
       "vlanTableReset": vlanTableReset,
       "vlanTable": vlanTable,
       "vlanEntry": vlanEntry,
       "vlanIndex": vlanIndex,
       "vlanName": vlanName,
       "vlanNumber": vlanNumber,
       "vlanMgmt": vlanMgmt,
       "vlanDHCPBind": vlanDHCPBind,
       "vlanIPAddress": vlanIPAddress,
       "vlanIPMask": vlanIPMask,
       "vlanGateway": vlanGateway,
       "vlanRowStatus": vlanRowStatus,
       "vlanTunnelServer": vlanTunnelServer,
       "vlanTunnelSecret": vlanTunnelSecret,
       "vlanTunnelPort": vlanTunnelPort,
       "vlanTunnelState": vlanTunnelState,
       "vlanTunnelSecretForm": vlanTunnelSecretForm,
       "vlanFastRoaming": vlanFastRoaming,
       "spanningTreeTable": spanningTreeTable,
       "spanningTreeEntry": spanningTreeEntry,
       "spanningTreeIndex": spanningTreeIndex,
       "spanningTreeVlanName": spanningTreeVlanName,
       "spanningTreeVlanNumber": spanningTreeVlanNumber,
       "spanningTreeGigLinkState": spanningTreeGigLinkState,
       "spanningTreeWDSClientLink1State": spanningTreeWDSClientLink1State,
       "spanningTreeWDSClientLink2State": spanningTreeWDSClientLink2State,
       "spanningTreeWDSClientLink3State": spanningTreeWDSClientLink3State,
       "spanningTreeWDSClientLink4State": spanningTreeWDSClientLink4State,
       "spanningTreeWDSHostLink1State": spanningTreeWDSHostLink1State,
       "spanningTreeWDSHostLink2State": spanningTreeWDSHostLink2State,
       "spanningTreeWDSHostLink3State": spanningTreeWDSHostLink3State,
       "spanningTreeWDSHostLink4State": spanningTreeWDSHostLink4State,
       "vlanDefaultNumber": vlanDefaultNumber,
       "vlanNativeNumber": vlanNativeNumber,
       "vlanUndefinedTable": vlanUndefinedTable,
       "vlanUndefinedEntry": vlanUndefinedEntry,
       "vlanUndefinedIndex": vlanUndefinedIndex,
       "vlanUndefinedNumber": vlanUndefinedNumber,
       "vlanUndefinedInfo": vlanUndefinedInfo,
       "vlanUndefinedClear": vlanUndefinedClear,
       "vlanPoolTable": vlanPoolTable,
       "vlanPoolEntry": vlanPoolEntry,
       "vlanPoolIndex": vlanPoolIndex,
       "vlanPoolName": vlanPoolName,
       "vlanPoolListMember": vlanPoolListMember,
       "vlanPoolRowStatus": vlanPoolRowStatus,
       "vlanPoolTableReset": vlanPoolTableReset,
       "cluster": cluster,
       "clusterArrayTable": clusterArrayTable,
       "clusterArrayEntry": clusterArrayEntry,
       "clusterArrayIndex": clusterArrayIndex,
       "clusterArrayHostname": clusterArrayHostname,
       "clusterArrayIPAddress": clusterArrayIPAddress,
       "clusterArrayUsername": clusterArrayUsername,
       "clusterArrayPassword": clusterArrayPassword,
       "clusterArrayPasswordForm": clusterArrayPasswordForm,
       "clusterArrayCluster": clusterArrayCluster,
       "clusterArrayRowStatus": clusterArrayRowStatus,
       "clusterArrayTableReset": clusterArrayTableReset,
       "envCtrl": envCtrl,
       "envCtrlTemperature": envCtrlTemperature,
       "envCtrlHumidity": envCtrlHumidity,
       "envCtrlCoolRPM1": envCtrlCoolRPM1,
       "envCtrlCoolRPM2": envCtrlCoolRPM2,
       "envCtrlCoolRPM3": envCtrlCoolRPM3,
       "envCtrlCoolRPM4": envCtrlCoolRPM4,
       "envCtrlHeatRPM1": envCtrlHeatRPM1,
       "envCtrlHeatRPM2": envCtrlHeatRPM2,
       "envCtrlArrayOn": envCtrlArrayOn,
       "envCtrlCoolOn": envCtrlCoolOn,
       "envCtrlHeatOn": envCtrlHeatOn,
       "envCtrlSoftwareVersion": envCtrlSoftwareVersion,
       "location": location,
       "locationReportingOn": locationReportingOn,
       "locationReportingUrl": locationReportingUrl,
       "locationReportingKey": locationReportingKey,
       "locationReportingPeriod": locationReportingPeriod,
       "group": group,
       "groupTable": groupTable,
       "groupEntry": groupEntry,
       "groupIndex": groupIndex,
       "groupName": groupName,
       "groupRadiusFilterID": groupRadiusFilterID,
       "groupEnable": groupEnable,
       "groupVlan": groupVlan,
       "groupQOS": groupQOS,
       "groupDhcpPool": groupDhcpPool,
       "groupFilterList": groupFilterList,
       "groupRoamingLayer": groupRoamingLayer,
       "groupStationLimit": groupStationLimit,
       "groupTrafficLimit": groupTrafficLimit,
       "groupTrafficLimitSta": groupTrafficLimitSta,
       "groupTimeOn": groupTimeOn,
       "groupTimeOff": groupTimeOff,
       "groupDaysOnMon": groupDaysOnMon,
       "groupDaysOnTue": groupDaysOnTue,
       "groupDaysOnWed": groupDaysOnWed,
       "groupDaysOnThu": groupDaysOnThu,
       "groupDaysOnFri": groupDaysOnFri,
       "groupDaysOnSat": groupDaysOnSat,
       "groupDaysOnSun": groupDaysOnSun,
       "groupWprEnable": groupWprEnable,
       "groupWprSplashEnable": groupWprSplashEnable,
       "groupWprSplashTimeout": groupWprSplashTimeout,
       "groupWprLandingPage": groupWprLandingPage,
       "groupActive": groupActive,
       "groupRowStatus": groupRowStatus,
       "groupWprBackground": groupWprBackground,
       "groupWprLogoImage": groupWprLogoImage,
       "groupWprHeaderText": groupWprHeaderText,
       "groupWprFooterText": groupWprFooterText,
       "groupFallback": groupFallback,
       "groupDeviceID": groupDeviceID,
       "groupTrafficLimitKbps": groupTrafficLimitKbps,
       "groupTrafficLimitKbpsSta": groupTrafficLimitKbpsSta,
       "groupVlanPool": groupVlanPool,
       "groupWprServerType": groupWprServerType,
       "groupWprUrl": groupWprUrl,
       "groupWprSharedSecret": groupWprSharedSecret,
       "groupWprSharedSecretForm": groupWprSharedSecretForm,
       "groupWprScreenType": groupWprScreenType,
       "groupWprHttpsEnable": groupWprHttpsEnable,
       "groupWprAuthType": groupWprAuthType,
       "groupWprAuthTimeout": groupWprAuthTimeout,
       "groupTableReset": groupTableReset,
       "mdm": mdm,
       "mdmAirWatchApiURL": mdmAirWatchApiURL,
       "mdmAirWatchApiKey": mdmAirWatchApiKey,
       "mdmAirWatchApiUsername": mdmAirWatchApiUsername,
       "mdmAirWatchApiPassword": mdmAirWatchApiPassword,
       "mdmAirWatchApiPasswordEnc": mdmAirWatchApiPasswordEnc,
       "mdmAirWatchApiTimeout": mdmAirWatchApiTimeout,
       "mdmAirWatchApiPollPeriod": mdmAirWatchApiPollPeriod,
       "mdmAirWatchApiAccessError": mdmAirWatchApiAccessError,
       "mdmAirWatchRedirectURL": mdmAirWatchRedirectURL,
       "netflow": netflow,
       "netflowEnable": netflowEnable,
       "netflowCollectorHost": netflowCollectorHost,
       "netflowCollectorPort": netflowCollectorPort,
       "wifiTag": wifiTag,
       "wifiTagEnable": wifiTagEnable,
       "wifiTagUdpPort": wifiTagUdpPort,
       "wifiTagChannel1": wifiTagChannel1,
       "wifiTagChannel2": wifiTagChannel2,
       "wifiTagChannel3": wifiTagChannel3,
       "wifiTagEkahauServer": wifiTagEkahauServer,
       "wpr": wpr,
       "wprWhitelistSsidTable": wprWhitelistSsidTable,
       "wprWhitelistSsidEntry": wprWhitelistSsidEntry,
       "wprWhitelistSsidIndex": wprWhitelistSsidIndex,
       "wprWhitelistSsidDomain": wprWhitelistSsidDomain,
       "wprWhitelistSsidName": wprWhitelistSsidName,
       "wprWhitelistSsidRowStatus": wprWhitelistSsidRowStatus,
       "wprWhitelistGroupTable": wprWhitelistGroupTable,
       "wprWhitelistGroupEntry": wprWhitelistGroupEntry,
       "wprWhitelistGroupIndex": wprWhitelistGroupIndex,
       "wprWhitelistGroupDomain": wprWhitelistGroupDomain,
       "wprWhitelistGroupName": wprWhitelistGroupName,
       "wprWhitelistGroupRowStatus": wprWhitelistGroupRowStatus,
       "wprWhitelistSsidTableReset": wprWhitelistSsidTableReset,
       "wprWhitelistGroupTableReset": wprWhitelistGroupTableReset,
       "oauth": oauth,
       "oauthTokenTable": oauthTokenTable,
       "oauthTokenEntry": oauthTokenEntry,
       "oauthTokenIndex": oauthTokenIndex,
       "oauthTokenId": oauthTokenId,
       "oauthTokenClientId": oauthTokenClientId,
       "oauthTokenGrantType": oauthTokenGrantType,
       "oauthTokenExpiration": oauthTokenExpiration,
       "oauthTokenUserAgent": oauthTokenUserAgent,
       "oauthTokenScope": oauthTokenScope,
       "oauthTokenCode": oauthTokenCode,
       "oauthTokenType": oauthTokenType,
       "oauthTokenRowStatus": oauthTokenRowStatus,
       "oauthTableReset": oauthTableReset,
       "proxyFwd": proxyFwd,
       "proxyFwdProxyType": proxyFwdProxyType,
       "proxyFwdBlueCoatUrl": proxyFwdBlueCoatUrl,
       "proxyFwdNetBoxBlueUrl": proxyFwdNetBoxBlueUrl,
       "proxyMgmt": proxyMgmt,
       "proxyMgmtEnabled": proxyMgmtEnabled,
       "proxyMgmtCustom": proxyMgmtCustom,
       "proxyMgmtHttpEnabled": proxyMgmtHttpEnabled,
       "proxyMgmtHttpHost": proxyMgmtHttpHost,
       "proxyMgmtHttpPort": proxyMgmtHttpPort,
       "proxyMgmtHttpUsername": proxyMgmtHttpUsername,
       "proxyMgmtHttpPassword": proxyMgmtHttpPassword,
       "proxyMgmtHttpType": proxyMgmtHttpType,
       "proxyMgmtHttpsEnabled": proxyMgmtHttpsEnabled,
       "proxyMgmtHttpsHost": proxyMgmtHttpsHost,
       "proxyMgmtHttpsPort": proxyMgmtHttpsPort,
       "proxyMgmtHttpsUsername": proxyMgmtHttpsUsername,
       "proxyMgmtHttpsPassword": proxyMgmtHttpsPassword,
       "proxyMgmtHttpsType": proxyMgmtHttpsType,
       "proxyMgmtSocksEnabled": proxyMgmtSocksEnabled,
       "proxyMgmtSocksIpAddr": proxyMgmtSocksIpAddr,
       "proxyMgmtSocksPort": proxyMgmtSocksPort,
       "proxyMgmtSocksUsername": proxyMgmtSocksUsername,
       "proxyMgmtSocksPassword": proxyMgmtSocksPassword,
       "proxyMgmtSocksType": proxyMgmtSocksType,
       "proxyMgmtSubnet01": proxyMgmtSubnet01,
       "proxyMgmtMask01": proxyMgmtMask01,
       "proxyMgmtSubnet02": proxyMgmtSubnet02,
       "proxyMgmtMask02": proxyMgmtMask02,
       "proxyMgmtSubnet03": proxyMgmtSubnet03,
       "proxyMgmtMask03": proxyMgmtMask03,
       "proxyMgmtSubnet04": proxyMgmtSubnet04,
       "proxyMgmtMask04": proxyMgmtMask04,
       "proxyMgmtSubnet05": proxyMgmtSubnet05,
       "proxyMgmtMask05": proxyMgmtMask05,
       "proxyMgmtSubnet06": proxyMgmtSubnet06,
       "proxyMgmtMask06": proxyMgmtMask06,
       "proxyMgmtSubnet07": proxyMgmtSubnet07,
       "proxyMgmtMask07": proxyMgmtMask07,
       "proxyMgmtSubnet08": proxyMgmtSubnet08,
       "proxyMgmtMask08": proxyMgmtMask08,
       "proxyMgmtSubnet09": proxyMgmtSubnet09,
       "proxyMgmtMask09": proxyMgmtMask09,
       "proxyMgmtSubnet10": proxyMgmtSubnet10,
       "proxyMgmtMask10": proxyMgmtMask10,
       "lldp": lldp,
       "lldpEnable": lldpEnable,
       "lldpInterval": lldpInterval,
       "lldpHoldTime": lldpHoldTime,
       "lldpRequestPower": lldpRequestPower,
       "position": position,
       "positionInfoX": positionInfoX,
       "positionInfoY": positionInfoY,
       "positionInfoZ": positionInfoZ,
       "positionInfoScale": positionInfoScale,
       "positionInfoAngle": positionInfoAngle,
       "positionInfoMount": positionInfoMount,
       "positionInfoScope": positionInfoScope,
       "positionInfoMap": positionInfoMap,
       "traps": traps,
       "adminTraps": adminTraps,
       "adminLogin": adminLogin,
       "adminLogout": adminLogout,
       "stationTraps": stationTraps,
       "stationACLFailure": stationACLFailure,
       "stationRadiusAuthFailure": stationRadiusAuthFailure,
       "generalTraps": generalTraps,
       "resetArray": resetArray,
       "rebootArray": rebootArray,
       "softwareUploadFailure": softwareUploadFailure,
       "softwareUploadSuccess": softwareUploadSuccess,
       "softwareUpgradeFailure": softwareUpgradeFailure,
       "softwareUpgradeSuccess": softwareUpgradeSuccess,
       "dhcpRenewFailure": dhcpRenewFailure,
       "cfgChange": cfgChange,
       "keepAlive": keepAlive,
       "encDoorOpened": encDoorOpened,
       "encDoorClosed": encDoorClosed,
       "flashPartitionCorrupt": flashPartitionCorrupt,
       "licenseUpdate": licenseUpdate,
       "radioMixInvalid": radioMixInvalid,
       "envCtrlTraps": envCtrlTraps,
       "envCtrlTempOver": envCtrlTempOver,
       "envCtrlTempUnder": envCtrlTempUnder,
       "envCtrlHumidOver": envCtrlHumidOver,
       "envCtrlFanFail": envCtrlFanFail,
       "iapTraps": iapTraps,
       "iapBeaconProbeFailure": iapBeaconProbeFailure,
       "iapBeaconProbeFailurePhyReset": iapBeaconProbeFailurePhyReset,
       "iapBeaconProbeFailureMacReset": iapBeaconProbeFailureMacReset,
       "iapBeaconProbeFailureArrayReboot": iapBeaconProbeFailureArrayReboot,
       "trapObjects": trapObjects,
       "cfgModuleOID": cfgModuleOID,
       "xs3500Array": xs3500Array,
       "xs3700Array": xs3700Array,
       "xs3900Array": xs3900Array,
       "xs3500-512Array": xs3500_512Array,
       "xs3700-1GArray": xs3700_1GArray,
       "xs3900-1GArray": xs3900_1GArray,
       "xs4Array": xs4Array,
       "xs8Array": xs8Array,
       "xs16Array": xs16Array,
       "xn4Array": xn4Array,
       "xn8Array": xn8Array,
       "xn16Array": xn16Array,
       "xs12Array": xs12Array,
       "xn12Array": xn12Array,
       "xr4420Array": xr4420Array,
       "xr4430Array": xr4430Array,
       "xr4820Array": xr4820Array,
       "xr4830Array": xr4830Array,
       "xr6820Array": xr6820Array,
       "xr6830Array": xr6830Array,
       "xr7220Array": xr7220Array,
       "xr7230Array": xr7230Array,
       "xr7620Array": xr7620Array,
       "xr7630Array": xr7630Array,
       "xr1220Array": xr1220Array,
       "xr1230Array": xr1230Array,
       "xr2420Array": xr2420Array,
       "xr2430Array": xr2430Array,
       "xr2220Array": xr2220Array,
       "xr2230Array": xr2230Array,
       "xr1120Array": xr1120Array,
       "xr1130Array": xr1130Array,
       "xr1120hArray": xr1120hArray,
       "xr1130hArray": xr1130hArray,
       "xr520hArray": xr520hArray,
       "xr1230hArray": xr1230hArray,
       "xr2420hArray": xr2420hArray,
       "xr2430hArray": xr2430hArray,
       "xr2220hArray": xr2220hArray,
       "xr2230hArray": xr2230hArray,
       "xr520Array": xr520Array,
       "xr530Array": xr530Array,
       "xr1220hArray": xr1220hArray,
       "xr530hArray": xr530hArray,
       "xr420hArray": xr420hArray,
       "xr430hArray": xr430hArray,
       "xr2425Array": xr2425Array,
       "xr2435Array": xr2435Array,
       "xr2425hArray": xr2425hArray,
       "xr2225Array": xr2225Array,
       "xr2235Array": xr2235Array,
       "xr620Array": xr620Array,
       "xr620hArray": xr620hArray,
       "xr630Array": xr630Array,
       "xr2426Array": xr2426Array,
       "xr2436Array": xr2436Array,
       "xr2426hArray": xr2426hArray,
       "xr2226Array": xr2226Array,
       "xr2226hArray": xr2226hArray,
       "xr2236Array": xr2236Array,
       "xr630hArray": xr630hArray,
       "xr2225hArray": xr2225hArray,
       "xr2235hArray": xr2235hArray,
       "xr2236hArray": xr2236hArray,
       "xr2435hArray": xr2435hArray,
       "xr2436hArray": xr2436hArray,
       "xr1126Array": xr1126Array,
       "xr1136Array": xr1136Array,
       "xr1226Array": xr1226Array,
       "xr1236Array": xr1236Array,
       "xr1126hArray": xr1126hArray,
       "xr1136hArray": xr1136hArray,
       "xr1226hArray": xr1226hArray,
       "xr1236hArray": xr1236hArray,
       "xr4426Array": xr4426Array,
       "xr4436Array": xr4436Array,
       "xr4826Array": xr4826Array,
       "xr4836Array": xr4836Array,
       "xr6826Array": xr6826Array,
       "xr6836Array": xr6836Array,
       "xr7226Array": xr7226Array,
       "xr7236Array": xr7236Array,
       "xr7626Array": xr7626Array,
       "xr7636Array": xr7636Array,
       "xd1-130Array": xd1_130Array,
       "xd2-130Array": xd2_130Array,
       "xd4-130Array": xd4_130Array,
       "xd8-130Array": xd8_130Array,
       "xh1-130Array": xh1_130Array,
       "xh2-130Array": xh2_130Array,
       "xh4-130Array": xh4_130Array,
       "xh8-130Array": xh8_130Array,
       "xd1-240Array": xd1_240Array,
       "xd2-240Array": xd2_240Array,
       "xd4-240Array": xd4_240Array,
       "xd8-240Array": xd8_240Array,
       "xh1-240Array": xh1_240Array,
       "xh2-240Array": xh2_240Array,
       "xh4-240Array": xh4_240Array,
       "xh8-240Array": xh8_240Array,
       "xd1-120Array": xd1_120Array,
       "xd2-120Array": xd2_120Array,
       "xd4-120Array": xd4_120Array,
       "xd8-120Array": xd8_120Array,
       "xh1-120Array": xh1_120Array,
       "xh2-120Array": xh2_120Array,
       "xh4-120Array": xh4_120Array,
       "xh8-120Array": xh8_120Array,
       "xr1147Array": xr1147Array,
       "xr1247Array": xr1247Array,
       "xr2247Array": xr2247Array,
       "xr2447Array": xr2447Array,
       "xr1147hArray": xr1147hArray,
       "xr1247hArray": xr1247hArray,
       "xr2247hArray": xr2247hArray,
       "xr2447hArray": xr2447hArray,
       "xr4447Array": xr4447Array,
       "xr4847Array": xr4847Array,
       "xr6847Array": xr6847Array,
       "xr7247Array": xr7247Array,
       "xr7647Array": xr7647Array,
       "xa1-120Array": xa1_120Array,
       "xa2-120Array": xa2_120Array,
       "xa4-120Array": xa4_120Array,
       "xa8-120Array": xa8_120Array,
       "xa1-130Array": xa1_130Array,
       "xa2-130Array": xa2_130Array,
       "xa4-130Array": xa4_130Array,
       "xa8-130Array": xa8_130Array,
       "xa1-240Array": xa1_240Array,
       "xa2-240Array": xa2_240Array,
       "xa4-240Array": xa4_240Array,
       "xa8-240Array": xa8_240Array,
       "xd1-230Array": xd1_230Array,
       "xd2-230Array": xd2_230Array,
       "xd3-230Array": xd3_230Array,
       "xd4-230Array": xd4_230Array,
       "xd8-230Array": xd8_230Array,
       "xh1-230Array": xh1_230Array,
       "xh2-230Array": xh2_230Array,
       "xh3-230Array": xh3_230Array,
       "xh4-230Array": xh4_230Array,
       "xh8-230Array": xh8_230Array,
       "xa1-230Array": xa1_230Array,
       "xa2-230Array": xa2_230Array,
       "xa3-230Array": xa3_230Array,
       "xa4-230Array": xa4_230Array,
       "xa8-230Array": xa8_230Array,
       "xa3-240Array": xa3_240Array,
       "xh3-240Array": xh3_240Array,
       "xd3-240Array": xd3_240Array}
)
