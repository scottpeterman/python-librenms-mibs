# SNMP MIB module (TIMETRA-SAP-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\nokia\TIMETRA-SAP-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 12:14:11 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(AtmTrafficDescrParamIndex,
 AtmVcIdentifier,
 AtmVpIdentifier) = mibBuilder.importSymbols(
    "ATM-TC-MIB",
    "AtmTrafficDescrParamIndex",
    "AtmVcIdentifier",
    "AtmVpIdentifier")

(InterfaceIndexOrZero,) = mibBuilder.importSymbols(
    "IF-MIB",
    "InterfaceIndexOrZero")

(InetAddress,
 InetAddressIPv6,
 InetAddressPrefixLength,
 InetAddressType) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressIPv6",
    "InetAddressPrefixLength",
    "InetAddressType")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention",
    "TimeStamp",
    "TruthValue")

(TmnxEsaIdOrZero,
 TmnxEsaVmIdOrZero,
 TmnxHwIndexOrZero,
 tmnxCardSlotNum,
 tmnxChassisIndex,
 tmnxFPNum) = mibBuilder.importSymbols(
    "TIMETRA-CHASSIS-MIB",
    "TmnxEsaIdOrZero",
    "TmnxEsaVmIdOrZero",
    "TmnxHwIndexOrZero",
    "tmnxCardSlotNum",
    "tmnxChassisIndex",
    "tmnxFPNum")

(TConfigOrVsdFilterID,
 TFilterID) = mibBuilder.importSymbols(
    "TIMETRA-FILTER-MIB",
    "TConfigOrVsdFilterID",
    "TFilterID")

(timetraSRMIBModules,) = mibBuilder.importSymbols(
    "TIMETRA-GLOBAL-MIB",
    "timetraSRMIBModules")

(tmnxPortCemStatsReportAlarm,) = mibBuilder.importSymbols(
    "TIMETRA-PORT-MIB",
    "tmnxPortCemStatsReportAlarm")

(TmnxMcFrClassIndex,
 tQosPolicerLevel,
 tSapEgrPolicerId,
 tSapIngPolicerId,
 tSchedulerPolicyName,
 tVirtualSchedulerName) = mibBuilder.importSymbols(
    "TIMETRA-QOS-MIB",
    "TmnxMcFrClassIndex",
    "tQosPolicerLevel",
    "tSapEgrPolicerId",
    "tSapIngPolicerId",
    "tSchedulerPolicyName",
    "tVirtualSchedulerName")

(BridgeId,
 CemSapEcid,
 CemSapReportAlarm,
 ConfigStatus,
 L2ptProtocols,
 MstiInstanceIdOrZero,
 MvplsPruneState,
 ServObjDesc,
 ServObjName,
 ServShcvOperState,
 ServType,
 StpExceptionCondition,
 StpPortRole,
 StpProtocol,
 TQosQueueAttribute,
 TSapEgrQueueId,
 TSapIngQueueId,
 TStpPortState,
 TVirtSchedAttribute,
 TdmOptionsCasTrunkFraming,
 TlsBpduTranslation,
 TlsLimitMacMove,
 TlsLimitMacMoveLevel,
 VpnId,
 custId,
 hostConnectivityChAddr,
 hostConnectivityCiAddr,
 hostConnectivityCiAddrType,
 protectedMacForNotify,
 staticHostDynamicMacConflict,
 staticHostDynamicMacIpAddress,
 svcDhcpClientLease,
 svcDhcpCoAError,
 svcDhcpLseStateNewChAddr,
 svcDhcpLseStateNewCiAddr,
 svcDhcpLseStateOldChAddr,
 svcDhcpLseStateOldCiAddr,
 svcDhcpLseStatePopulateError,
 svcDhcpPacketProblem,
 svcDhcpProxyError,
 svcDhcpSubAuthError,
 svcId,
 svcOperGrpName,
 svcTlsBackboneVplsSvcId,
 svcTlsMacMoveMaxRate,
 svcVpnId,
 tlsDHCPClientLease,
 tlsDhcpLseStateNewChAddr,
 tlsDhcpLseStateNewCiAddr,
 tlsDhcpLseStateOldChAddr,
 tlsDhcpLseStateOldCiAddr,
 tlsDhcpPacketProblem,
 tlsFdbBackboneDstMac,
 tlsFdbEvpnMplsEthSegId,
 tlsFdbEvpnMplsLabel,
 tlsFdbEvpnMplsTEPAddr,
 tlsFdbEvpnMplsTEPAddrType,
 tlsFdbType,
 tlsMstiInstanceId,
 tmnxCustomerBridgeId,
 tmnxCustomerRootBridgeId,
 tmnxOtherBridgeId,
 tmnxServConformance,
 tmnxServNotifications,
 tmnxServObjs,
 tstpTraps) = mibBuilder.importSymbols(
    "TIMETRA-SERV-MIB",
    "BridgeId",
    "CemSapEcid",
    "CemSapReportAlarm",
    "ConfigStatus",
    "L2ptProtocols",
    "MstiInstanceIdOrZero",
    "MvplsPruneState",
    "ServObjDesc",
    "ServObjName",
    "ServShcvOperState",
    "ServType",
    "StpExceptionCondition",
    "StpPortRole",
    "StpProtocol",
    "TQosQueueAttribute",
    "TSapEgrQueueId",
    "TSapIngQueueId",
    "TStpPortState",
    "TVirtSchedAttribute",
    "TdmOptionsCasTrunkFraming",
    "TlsBpduTranslation",
    "TlsLimitMacMove",
    "TlsLimitMacMoveLevel",
    "VpnId",
    "custId",
    "hostConnectivityChAddr",
    "hostConnectivityCiAddr",
    "hostConnectivityCiAddrType",
    "protectedMacForNotify",
    "staticHostDynamicMacConflict",
    "staticHostDynamicMacIpAddress",
    "svcDhcpClientLease",
    "svcDhcpCoAError",
    "svcDhcpLseStateNewChAddr",
    "svcDhcpLseStateNewCiAddr",
    "svcDhcpLseStateOldChAddr",
    "svcDhcpLseStateOldCiAddr",
    "svcDhcpLseStatePopulateError",
    "svcDhcpPacketProblem",
    "svcDhcpProxyError",
    "svcDhcpSubAuthError",
    "svcId",
    "svcOperGrpName",
    "svcTlsBackboneVplsSvcId",
    "svcTlsMacMoveMaxRate",
    "svcVpnId",
    "tlsDHCPClientLease",
    "tlsDhcpLseStateNewChAddr",
    "tlsDhcpLseStateNewCiAddr",
    "tlsDhcpLseStateOldChAddr",
    "tlsDhcpLseStateOldCiAddr",
    "tlsDhcpPacketProblem",
    "tlsFdbBackboneDstMac",
    "tlsFdbEvpnMplsEthSegId",
    "tlsFdbEvpnMplsLabel",
    "tlsFdbEvpnMplsTEPAddr",
    "tlsFdbEvpnMplsTEPAddrType",
    "tlsFdbType",
    "tlsMstiInstanceId",
    "tmnxCustomerBridgeId",
    "tmnxCustomerRootBridgeId",
    "tmnxOtherBridgeId",
    "tmnxServConformance",
    "tmnxServNotifications",
    "tmnxServObjs",
    "tstpTraps")

(DateAndTimeOrEmpty,
 QTag,
 QTagFullRangeOrNone,
 ServiceAdminStatus,
 ServiceOperStatus,
 SvcISID,
 TAdaptationRule,
 TBurstLimit,
 TBurstPercentOrDefault,
 TBurstSize,
 TBurstSizeBytes,
 TCIRPercentOverride,
 TCpmProtPolicyID,
 TCpmProtPolicyIDOrDefault,
 TDSCPNameOrEmpty,
 TEgrHsmdaPerPacketOffsetOvr,
 TEgrPolicerId,
 TEgressHsmdaCounterId,
 TEgressHsmdaQueueId,
 TEgressPerPacketOffsetOvr,
 TEgressPolicerId,
 TEgressQueueId,
 TFCSet,
 THPolCIRRateOverride,
 THPolPIRRateOverride,
 THPolVirtualScheCIRRate,
 THPolVirtualSchePIRRate,
 THSMDABurstSizeBytesOverride,
 THsmdaCIRKRateOverride,
 THsmdaPIRKRateOverride,
 THsmdaWrrWeightOverride,
 TIngHsmdaPerPacketOffsetOvr,
 TIngPolicerId,
 TIngressHsmdaCounterId,
 TIngressHsmdaQueueId,
 TIngressPolicerId,
 TIngressQueueId,
 TItemDescription,
 TItemLongDescription,
 TLNamedItemOrEmpty,
 TNamedItem,
 TNamedItemOrEmpty,
 TPIRPercentOverride,
 TPerPacketOffsetOvr,
 TPlcrBurstSizeBytesOverride,
 TPolicerBurstSizeBytesOverride,
 TPolicyStatementNameOrEmpty,
 TPortSchedulerAggRateLimitPIR,
 TPortSchedulerPIR,
 TQosQGrpInstanceIDorZero,
 TQosQueueCIRRate,
 TQosQueuePIRRate,
 TSapEgrEncapGroupActionType,
 TSapEgrEncapGroupType,
 TSapEgrEncapGrpQosPolicyIdOrZero,
 TSapEgressPolicyID,
 TSapIngressPolicyID,
 TTmplPolicyID,
 TWeight,
 TmnxActionType,
 TmnxAdminState,
 TmnxAncpStringOrZero,
 TmnxAuthAlgorithm,
 TmnxBsxAarpIdOrZero,
 TmnxBsxAarpServiceRefType,
 TmnxBsxTransPrefPolicyIdOrZero,
 TmnxBsxTransitIpPolicyIdOrZero,
 TmnxCustId,
 TmnxDefInterDestIdSource,
 TmnxDefSubIdSource,
 TmnxDistCpuProtActionDuration,
 TmnxDistCpuProtProtocolId,
 TmnxDistCpuProtState,
 TmnxEgrPolicerStatMode,
 TmnxEgrPolicerStatModeOverride,
 TmnxEnabledDisabled,
 TmnxEncapVal,
 TmnxEncrAlgorithm,
 TmnxEvpnMHEthSegStatus,
 TmnxHigh32,
 TmnxIPsecDirection,
 TmnxIPsecKeyingType,
 TmnxISID,
 TmnxIgmpVersion,
 TmnxIkePolicyDHGroupOrZero,
 TmnxIngPolicerStatMode,
 TmnxIngPolicerStatModeOverride,
 TmnxIsidMFibStatus,
 TmnxL2tpTunnelGroupNameOrEmpty,
 TmnxLagPerLinkHashClass,
 TmnxLagPerLinkHashWeight,
 TmnxLinkMapProfileIdOrZero,
 TmnxLow32,
 TmnxManagedRouteStatus,
 TmnxOperState,
 TmnxPortID,
 TmnxQosRateHigh32,
 TmnxQosRateLow32,
 TmnxRipListenerStatus,
 TmnxSapAASubScope,
 TmnxServId,
 TmnxSubIdentStringOrEmpty,
 TmnxSubShcvAction,
 TmnxSubShcvInterval,
 TmnxSubShcvRetryCount,
 TmnxSubShcvRetryTimeout,
 TmnxVRtrID,
 TmnxVRtrIDOrZero,
 TmnxVcIdOrNone,
 TmnxVeId) = mibBuilder.importSymbols(
    "TIMETRA-TC-MIB",
    "DateAndTimeOrEmpty",
    "QTag",
    "QTagFullRangeOrNone",
    "ServiceAdminStatus",
    "ServiceOperStatus",
    "SvcISID",
    "TAdaptationRule",
    "TBurstLimit",
    "TBurstPercentOrDefault",
    "TBurstSize",
    "TBurstSizeBytes",
    "TCIRPercentOverride",
    "TCpmProtPolicyID",
    "TCpmProtPolicyIDOrDefault",
    "TDSCPNameOrEmpty",
    "TEgrHsmdaPerPacketOffsetOvr",
    "TEgrPolicerId",
    "TEgressHsmdaCounterId",
    "TEgressHsmdaQueueId",
    "TEgressPerPacketOffsetOvr",
    "TEgressPolicerId",
    "TEgressQueueId",
    "TFCSet",
    "THPolCIRRateOverride",
    "THPolPIRRateOverride",
    "THPolVirtualScheCIRRate",
    "THPolVirtualSchePIRRate",
    "THSMDABurstSizeBytesOverride",
    "THsmdaCIRKRateOverride",
    "THsmdaPIRKRateOverride",
    "THsmdaWrrWeightOverride",
    "TIngHsmdaPerPacketOffsetOvr",
    "TIngPolicerId",
    "TIngressHsmdaCounterId",
    "TIngressHsmdaQueueId",
    "TIngressPolicerId",
    "TIngressQueueId",
    "TItemDescription",
    "TItemLongDescription",
    "TLNamedItemOrEmpty",
    "TNamedItem",
    "TNamedItemOrEmpty",
    "TPIRPercentOverride",
    "TPerPacketOffsetOvr",
    "TPlcrBurstSizeBytesOverride",
    "TPolicerBurstSizeBytesOverride",
    "TPolicyStatementNameOrEmpty",
    "TPortSchedulerAggRateLimitPIR",
    "TPortSchedulerPIR",
    "TQosQGrpInstanceIDorZero",
    "TQosQueueCIRRate",
    "TQosQueuePIRRate",
    "TSapEgrEncapGroupActionType",
    "TSapEgrEncapGroupType",
    "TSapEgrEncapGrpQosPolicyIdOrZero",
    "TSapEgressPolicyID",
    "TSapIngressPolicyID",
    "TTmplPolicyID",
    "TWeight",
    "TmnxActionType",
    "TmnxAdminState",
    "TmnxAncpStringOrZero",
    "TmnxAuthAlgorithm",
    "TmnxBsxAarpIdOrZero",
    "TmnxBsxAarpServiceRefType",
    "TmnxBsxTransPrefPolicyIdOrZero",
    "TmnxBsxTransitIpPolicyIdOrZero",
    "TmnxCustId",
    "TmnxDefInterDestIdSource",
    "TmnxDefSubIdSource",
    "TmnxDistCpuProtActionDuration",
    "TmnxDistCpuProtProtocolId",
    "TmnxDistCpuProtState",
    "TmnxEgrPolicerStatMode",
    "TmnxEgrPolicerStatModeOverride",
    "TmnxEnabledDisabled",
    "TmnxEncapVal",
    "TmnxEncrAlgorithm",
    "TmnxEvpnMHEthSegStatus",
    "TmnxHigh32",
    "TmnxIPsecDirection",
    "TmnxIPsecKeyingType",
    "TmnxISID",
    "TmnxIgmpVersion",
    "TmnxIkePolicyDHGroupOrZero",
    "TmnxIngPolicerStatMode",
    "TmnxIngPolicerStatModeOverride",
    "TmnxIsidMFibStatus",
    "TmnxL2tpTunnelGroupNameOrEmpty",
    "TmnxLagPerLinkHashClass",
    "TmnxLagPerLinkHashWeight",
    "TmnxLinkMapProfileIdOrZero",
    "TmnxLow32",
    "TmnxManagedRouteStatus",
    "TmnxOperState",
    "TmnxPortID",
    "TmnxQosRateHigh32",
    "TmnxQosRateLow32",
    "TmnxRipListenerStatus",
    "TmnxSapAASubScope",
    "TmnxServId",
    "TmnxSubIdentStringOrEmpty",
    "TmnxSubShcvAction",
    "TmnxSubShcvInterval",
    "TmnxSubShcvRetryCount",
    "TmnxSubShcvRetryTimeout",
    "TmnxVRtrID",
    "TmnxVRtrIDOrZero",
    "TmnxVcIdOrNone",
    "TmnxVeId")


# MODULE-IDENTITY

timetraSvcSapMIBModule = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 55)
)
if mibBuilder.loadTexts:
    timetraSvcSapMIBModule.setRevisions(
        ("2022-01-20 00:00",
         "2019-03-20 00:00",
         "2017-03-20 00:00",
         "2015-02-20 00:00",
         "2014-02-20 00:00",
         "2014-01-01 00:00",
         "2011-02-01 00:00",
         "2009-02-28 00:00",
         "2008-07-01 00:00",
         "2007-10-01 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class TmnxSapAtmEncapsulation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              7,
              8,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("vcMultiplexRoutedProtocol", 1),
          ("vcMultiplexBridgedProtocol8023", 2),
          ("llcSnapRoutedProtocol", 7),
          ("multiprotocolFrameRelaySscs", 8),
          ("unknown", 10),
          ("llcSnapBridgedProtocol8023", 11),
          ("vcMultiplexPpp", 12),
          ("llcNlpidPpp", 13),
          ("auto", 14))
    )



class TmnxSapSubscriberLimit(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 131071),
    )



class TmnxVlanGroupId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )



class TmnxSapInstStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 1),
          ("complete", 2),
          ("inProgress", 3),
          ("failed", 4))
    )



class TmnxSapQtagManipulationAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("preserve", 1),
          ("pushOuter", 2),
          ("popOuter", 3),
          ("replaceOuter", 4),
          ("popOuterAndInner", 5),
          ("popOuterAndReplaceInner", 6),
          ("replaceOuterAndInner", 7),
          ("pushOuterAndInner", 8),
          ("replaceAndPushOuter", 9))
    )



class TmnxIpTunnelOperState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 1),
          ("inService", 2),
          ("outOfService", 3),
          ("transition", 4),
          ("limited", 5))
    )



# MIB Managed Objects in the order of their OIDs

_TmnxSapConformance_ObjectIdentity = ObjectIdentity
tmnxSapConformance = _TmnxSapConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3)
)
_TmnxSapCompliances_ObjectIdentity = ObjectIdentity
tmnxSapCompliances = _TmnxSapCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1)
)
_TmnxSapGroups_ObjectIdentity = ObjectIdentity
tmnxSapGroups = _TmnxSapGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2)
)
_TmnxDCSapCompliances_ObjectIdentity = ObjectIdentity
tmnxDCSapCompliances = _TmnxDCSapCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 3)
)
_TmnxDCSapGroups_ObjectIdentity = ObjectIdentity
tmnxDCSapGroups = _TmnxDCSapGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 4)
)
_TmnxMgSapCompliances_ObjectIdentity = ObjectIdentity
tmnxMgSapCompliances = _TmnxMgSapCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 5)
)
_TmnxMgSapGroups_ObjectIdentity = ObjectIdentity
tmnxMgSapGroups = _TmnxMgSapGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 6)
)
_TmnxSapObjs_ObjectIdentity = ObjectIdentity
tmnxSapObjs = _TmnxSapObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3)
)
_SapNumEntries_Type = Integer32
_SapNumEntries_Object = MibScalar
sapNumEntries = _SapNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 1),
    _SapNumEntries_Type()
)
sapNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapNumEntries.setStatus("current")
_SapBaseInfoTable_Object = MibTable
sapBaseInfoTable = _SapBaseInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2)
)
if mibBuilder.loadTexts:
    sapBaseInfoTable.setStatus("current")
_SapBaseInfoEntry_Object = MibTableRow
sapBaseInfoEntry = _SapBaseInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1)
)
sapBaseInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapBaseInfoEntry.setStatus("current")
_SapPortId_Type = TmnxPortID
_SapPortId_Object = MibTableColumn
sapPortId = _SapPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 1),
    _SapPortId_Type()
)
sapPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortId.setStatus("current")
_SapEncapValue_Type = TmnxEncapVal
_SapEncapValue_Object = MibTableColumn
sapEncapValue = _SapEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 2),
    _SapEncapValue_Type()
)
sapEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEncapValue.setStatus("current")
_SapRowStatus_Type = RowStatus
_SapRowStatus_Object = MibTableColumn
sapRowStatus = _SapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 3),
    _SapRowStatus_Type()
)
sapRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapRowStatus.setStatus("current")
_SapType_Type = ServType
_SapType_Object = MibTableColumn
sapType = _SapType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 4),
    _SapType_Type()
)
sapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapType.setStatus("current")


class _SapDescription_Type(TItemLongDescription):
    """Custom type sapDescription based on TItemLongDescription"""
    defaultValue = OctetString("")

    subtypeSpec = TItemLongDescription.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 160),
    )


_SapDescription_Type.__name__ = "TItemLongDescription"
_SapDescription_Object = MibTableColumn
sapDescription = _SapDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 5),
    _SapDescription_Type()
)
sapDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDescription.setStatus("current")


class _SapAdminStatus_Type(ServiceAdminStatus):
    """Custom type sapAdminStatus based on ServiceAdminStatus"""
    defaultValue = 1


_SapAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SapAdminStatus_Object = MibTableColumn
sapAdminStatus = _SapAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 6),
    _SapAdminStatus_Type()
)
sapAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAdminStatus.setStatus("current")


class _SapOperStatus_Type(Integer32):
    """Custom type sapOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("ingressQosMismatch", 3),
          ("egressQosMismatch", 4),
          ("portMtuTooSmall", 5),
          ("svcAdminDown", 6),
          ("iesIfAdminDown", 7))
    )


_SapOperStatus_Type.__name__ = "Integer32"
_SapOperStatus_Object = MibTableColumn
sapOperStatus = _SapOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 7),
    _SapOperStatus_Type()
)
sapOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapOperStatus.setStatus("current")


class _SapIngressQosPolicyId_Type(TSapIngressPolicyID):
    """Custom type sapIngressQosPolicyId based on TSapIngressPolicyID"""
    defaultValue = 1


_SapIngressQosPolicyId_Type.__name__ = "TSapIngressPolicyID"
_SapIngressQosPolicyId_Object = MibTableColumn
sapIngressQosPolicyId = _SapIngressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 8),
    _SapIngressQosPolicyId_Type()
)
sapIngressQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressQosPolicyId.setStatus("current")


class _SapIngressMacFilterId_Type(TConfigOrVsdFilterID):
    """Custom type sapIngressMacFilterId based on TConfigOrVsdFilterID"""
    defaultValue = 0


_SapIngressMacFilterId_Type.__name__ = "TConfigOrVsdFilterID"
_SapIngressMacFilterId_Object = MibTableColumn
sapIngressMacFilterId = _SapIngressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 9),
    _SapIngressMacFilterId_Type()
)
sapIngressMacFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressMacFilterId.setStatus("current")


class _SapIngressIpFilterId_Type(TConfigOrVsdFilterID):
    """Custom type sapIngressIpFilterId based on TConfigOrVsdFilterID"""
    defaultValue = 0


_SapIngressIpFilterId_Type.__name__ = "TConfigOrVsdFilterID"
_SapIngressIpFilterId_Object = MibTableColumn
sapIngressIpFilterId = _SapIngressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 10),
    _SapIngressIpFilterId_Type()
)
sapIngressIpFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIpFilterId.setStatus("current")


class _SapEgressQosPolicyId_Type(TSapEgressPolicyID):
    """Custom type sapEgressQosPolicyId based on TSapEgressPolicyID"""
    defaultValue = 1


_SapEgressQosPolicyId_Type.__name__ = "TSapEgressPolicyID"
_SapEgressQosPolicyId_Object = MibTableColumn
sapEgressQosPolicyId = _SapEgressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 11),
    _SapEgressQosPolicyId_Type()
)
sapEgressQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressQosPolicyId.setStatus("current")


class _SapEgressMacFilterId_Type(TFilterID):
    """Custom type sapEgressMacFilterId based on TFilterID"""
    defaultValue = 0


_SapEgressMacFilterId_Type.__name__ = "TFilterID"
_SapEgressMacFilterId_Object = MibTableColumn
sapEgressMacFilterId = _SapEgressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 12),
    _SapEgressMacFilterId_Type()
)
sapEgressMacFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressMacFilterId.setStatus("current")


class _SapEgressIpFilterId_Type(TFilterID):
    """Custom type sapEgressIpFilterId based on TFilterID"""
    defaultValue = 0


_SapEgressIpFilterId_Type.__name__ = "TFilterID"
_SapEgressIpFilterId_Object = MibTableColumn
sapEgressIpFilterId = _SapEgressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 13),
    _SapEgressIpFilterId_Type()
)
sapEgressIpFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressIpFilterId.setStatus("current")


class _SapMirrorStatus_Type(Integer32):
    """Custom type sapMirrorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ingress", 1),
          ("egress", 2),
          ("ingressAndEgress", 3),
          ("disabled", 4))
    )


_SapMirrorStatus_Type.__name__ = "Integer32"
_SapMirrorStatus_Object = MibTableColumn
sapMirrorStatus = _SapMirrorStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 14),
    _SapMirrorStatus_Type()
)
sapMirrorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapMirrorStatus.setStatus("current")
_SapIesIfIndex_Type = InterfaceIndexOrZero
_SapIesIfIndex_Object = MibTableColumn
sapIesIfIndex = _SapIesIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 15),
    _SapIesIfIndex_Type()
)
sapIesIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIesIfIndex.setStatus("current")
_SapLastMgmtChange_Type = TimeStamp
_SapLastMgmtChange_Object = MibTableColumn
sapLastMgmtChange = _SapLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 16),
    _SapLastMgmtChange_Type()
)
sapLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLastMgmtChange.setStatus("current")


class _SapCollectAcctStats_Type(TruthValue):
    """Custom type sapCollectAcctStats based on TruthValue"""
    defaultValue = 2


_SapCollectAcctStats_Type.__name__ = "TruthValue"
_SapCollectAcctStats_Object = MibTableColumn
sapCollectAcctStats = _SapCollectAcctStats_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 17),
    _SapCollectAcctStats_Type()
)
sapCollectAcctStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCollectAcctStats.setStatus("current")


class _SapAccountingPolicyId_Type(Unsigned32):
    """Custom type sapAccountingPolicyId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_SapAccountingPolicyId_Type.__name__ = "Unsigned32"
_SapAccountingPolicyId_Object = MibTableColumn
sapAccountingPolicyId = _SapAccountingPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 18),
    _SapAccountingPolicyId_Type()
)
sapAccountingPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAccountingPolicyId.setStatus("current")
_SapVpnId_Type = VpnId
_SapVpnId_Object = MibTableColumn
sapVpnId = _SapVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 19),
    _SapVpnId_Type()
)
sapVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapVpnId.setStatus("current")
_SapCustId_Type = TmnxCustId
_SapCustId_Object = MibTableColumn
sapCustId = _SapCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 20),
    _SapCustId_Type()
)
sapCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCustId.setStatus("current")


class _SapCustMultSvcSite_Type(ServObjName):
    """Custom type sapCustMultSvcSite based on ServObjName"""
    defaultValue = OctetString("")


_SapCustMultSvcSite_Type.__name__ = "ServObjName"
_SapCustMultSvcSite_Object = MibTableColumn
sapCustMultSvcSite = _SapCustMultSvcSite_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 21),
    _SapCustMultSvcSite_Type()
)
sapCustMultSvcSite.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCustMultSvcSite.setStatus("current")


class _SapIngressQosSchedulerPolicy_Type(ServObjName):
    """Custom type sapIngressQosSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapIngressQosSchedulerPolicy_Type.__name__ = "ServObjName"
_SapIngressQosSchedulerPolicy_Object = MibTableColumn
sapIngressQosSchedulerPolicy = _SapIngressQosSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 22),
    _SapIngressQosSchedulerPolicy_Type()
)
sapIngressQosSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressQosSchedulerPolicy.setStatus("current")


class _SapEgressQosSchedulerPolicy_Type(ServObjName):
    """Custom type sapEgressQosSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapEgressQosSchedulerPolicy_Type.__name__ = "ServObjName"
_SapEgressQosSchedulerPolicy_Object = MibTableColumn
sapEgressQosSchedulerPolicy = _SapEgressQosSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 23),
    _SapEgressQosSchedulerPolicy_Type()
)
sapEgressQosSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressQosSchedulerPolicy.setStatus("current")


class _SapSplitHorizonGrp_Type(ServObjName):
    """Custom type sapSplitHorizonGrp based on ServObjName"""
    defaultValue = OctetString("")


_SapSplitHorizonGrp_Type.__name__ = "ServObjName"
_SapSplitHorizonGrp_Object = MibTableColumn
sapSplitHorizonGrp = _SapSplitHorizonGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 24),
    _SapSplitHorizonGrp_Type()
)
sapSplitHorizonGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSplitHorizonGrp.setStatus("current")


class _SapIngressSharedQueuePolicy_Type(ServObjName):
    """Custom type sapIngressSharedQueuePolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapIngressSharedQueuePolicy_Type.__name__ = "ServObjName"
_SapIngressSharedQueuePolicy_Object = MibTableColumn
sapIngressSharedQueuePolicy = _SapIngressSharedQueuePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 25),
    _SapIngressSharedQueuePolicy_Type()
)
sapIngressSharedQueuePolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressSharedQueuePolicy.setStatus("current")


class _SapIngressMatchQinQDot1PBits_Type(Integer32):
    """Custom type sapIngressMatchQinQDot1PBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("top", 2),
          ("bottom", 3))
    )


_SapIngressMatchQinQDot1PBits_Type.__name__ = "Integer32"
_SapIngressMatchQinQDot1PBits_Object = MibTableColumn
sapIngressMatchQinQDot1PBits = _SapIngressMatchQinQDot1PBits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 26),
    _SapIngressMatchQinQDot1PBits_Type()
)
sapIngressMatchQinQDot1PBits.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressMatchQinQDot1PBits.setStatus("current")


class _SapOperFlags_Type(Bits):
    """Custom type sapOperFlags based on Bits"""
    namedValues = NamedValues(
        *(("sapAdminDown", 0),
          ("svcAdminDown", 1),
          ("iesIfAdminDown", 2),
          ("portOperDown", 3),
          ("portMtuTooSmall", 4),
          ("l2OperDown", 5),
          ("ingressQosMismatch", 6),
          ("egressQosMismatch", 7),
          ("relearnLimitExceeded", 8),
          ("recProtSrcMac", 9),
          ("subIfAdminDown", 10),
          ("sapIpipeNoCeIpAddr", 11),
          ("reserved12", 12),
          ("reserved13", 13),
          ("sapParamMismatch", 14),
          ("sapCemNoEcidOrMacAddr", 15),
          ("sapStandbyForMcRing", 16),
          ("sapSvcMtuTooSmall", 17),
          ("ingressNamedPoolMismatch", 18),
          ("egressNamedPoolMismatch", 19),
          ("ipMirrorNoMacAddr", 20),
          ("sapEpipeNoRingNode", 21),
          ("mcStandby", 22),
          ("mhStandby", 23),
          ("oamDownMepFault", 24),
          ("oamUpMepFault", 25),
          ("ethTunTagMisconfig", 26),
          ("ingressPolicerMismatch", 27),
          ("egressPolicerMismatch", 28),
          ("sapTlsNoRingNode", 29),
          ("ethRingPathBlocked", 30),
          ("oamTunnelMepFault", 31),
          ("operGrpDown", 32),
          ("portBouncing", 33),
          ("sapEgressHQosMgmtMismatch", 34),
          ("evpnP2mpConflict", 35),
          ("l2tpv3TunnelDown", 36),
          ("labelStackLimitExceeded", 37),
          ("sapIngQGrpRedirMismatch", 38),
          ("sapEgrQGrpRedirMismatch", 39))
    )

_SapOperFlags_Type.__name__ = "Bits"
_SapOperFlags_Object = MibTableColumn
sapOperFlags = _SapOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 27),
    _SapOperFlags_Type()
)
sapOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapOperFlags.setStatus("obsolete")
_SapLastStatusChange_Type = TimeStamp
_SapLastStatusChange_Object = MibTableColumn
sapLastStatusChange = _SapLastStatusChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 28),
    _SapLastStatusChange_Type()
)
sapLastStatusChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLastStatusChange.setStatus("current")


class _SapAntiSpoofing_Type(Integer32):
    """Custom type sapAntiSpoofing based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("sourceIpAddr", 1),
          ("sourceMacAddr", 2),
          ("sourceIpAndMacAddr", 3),
          ("nextHopIpAndMacAddr", 4))
    )


_SapAntiSpoofing_Type.__name__ = "Integer32"
_SapAntiSpoofing_Object = MibTableColumn
sapAntiSpoofing = _SapAntiSpoofing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 29),
    _SapAntiSpoofing_Type()
)
sapAntiSpoofing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAntiSpoofing.setStatus("current")


class _SapIngressIpv6FilterId_Type(TConfigOrVsdFilterID):
    """Custom type sapIngressIpv6FilterId based on TConfigOrVsdFilterID"""
    defaultValue = 0


_SapIngressIpv6FilterId_Type.__name__ = "TConfigOrVsdFilterID"
_SapIngressIpv6FilterId_Object = MibTableColumn
sapIngressIpv6FilterId = _SapIngressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 30),
    _SapIngressIpv6FilterId_Type()
)
sapIngressIpv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIpv6FilterId.setStatus("current")


class _SapEgressIpv6FilterId_Type(TFilterID):
    """Custom type sapEgressIpv6FilterId based on TFilterID"""
    defaultValue = 0


_SapEgressIpv6FilterId_Type.__name__ = "TFilterID"
_SapEgressIpv6FilterId_Object = MibTableColumn
sapEgressIpv6FilterId = _SapEgressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 31),
    _SapEgressIpv6FilterId_Type()
)
sapEgressIpv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressIpv6FilterId.setStatus("current")


class _SapTodSuite_Type(TNamedItemOrEmpty):
    """Custom type sapTodSuite based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapTodSuite_Type.__name__ = "TNamedItemOrEmpty"
_SapTodSuite_Object = MibTableColumn
sapTodSuite = _SapTodSuite_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 32),
    _SapTodSuite_Type()
)
sapTodSuite.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTodSuite.setStatus("obsolete")


class _SapIngUseMultipointShared_Type(TruthValue):
    """Custom type sapIngUseMultipointShared based on TruthValue"""
    defaultValue = 2


_SapIngUseMultipointShared_Type.__name__ = "TruthValue"
_SapIngUseMultipointShared_Object = MibTableColumn
sapIngUseMultipointShared = _SapIngUseMultipointShared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 33),
    _SapIngUseMultipointShared_Type()
)
sapIngUseMultipointShared.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngUseMultipointShared.setStatus("current")


class _SapEgressQinQMarkTopOnly_Type(TruthValue):
    """Custom type sapEgressQinQMarkTopOnly based on TruthValue"""
    defaultValue = 2


_SapEgressQinQMarkTopOnly_Type.__name__ = "TruthValue"
_SapEgressQinQMarkTopOnly_Object = MibTableColumn
sapEgressQinQMarkTopOnly = _SapEgressQinQMarkTopOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 34),
    _SapEgressQinQMarkTopOnly_Type()
)
sapEgressQinQMarkTopOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressQinQMarkTopOnly.setStatus("current")


class _SapEgressAggRateLimit_Type(TPortSchedulerAggRateLimitPIR):
    """Custom type sapEgressAggRateLimit based on TPortSchedulerAggRateLimitPIR"""
    defaultValue = -1


_SapEgressAggRateLimit_Type.__name__ = "TPortSchedulerAggRateLimitPIR"
_SapEgressAggRateLimit_Object = MibTableColumn
sapEgressAggRateLimit = _SapEgressAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 35),
    _SapEgressAggRateLimit_Type()
)
sapEgressAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgressAggRateLimit.setUnits("kilobps")


class _SapEndPoint_Type(ServObjName):
    """Custom type sapEndPoint based on ServObjName"""
    defaultValue = OctetString("")


_SapEndPoint_Type.__name__ = "ServObjName"
_SapEndPoint_Object = MibTableColumn
sapEndPoint = _SapEndPoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 36),
    _SapEndPoint_Type()
)
sapEndPoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEndPoint.setStatus("current")


class _SapIngressVlanTranslation_Type(Integer32):
    """Custom type sapIngressVlanTranslation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("vlanId", 2),
          ("copyOuter", 3))
    )


_SapIngressVlanTranslation_Type.__name__ = "Integer32"
_SapIngressVlanTranslation_Object = MibTableColumn
sapIngressVlanTranslation = _SapIngressVlanTranslation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 37),
    _SapIngressVlanTranslation_Type()
)
sapIngressVlanTranslation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressVlanTranslation.setStatus("current")


class _SapIngressVlanTranslationId_Type(Integer32):
    """Custom type sapIngressVlanTranslationId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 4094),
    )


_SapIngressVlanTranslationId_Type.__name__ = "Integer32"
_SapIngressVlanTranslationId_Object = MibTableColumn
sapIngressVlanTranslationId = _SapIngressVlanTranslationId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 38),
    _SapIngressVlanTranslationId_Type()
)
sapIngressVlanTranslationId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressVlanTranslationId.setStatus("current")


class _SapSubType_Type(Integer32):
    """Custom type sapSubType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("regular", 0),
          ("capture", 1),
          ("managed", 2),
          ("video", 3),
          ("internal", 4))
    )


_SapSubType_Type.__name__ = "Integer32"
_SapSubType_Object = MibTableColumn
sapSubType = _SapSubType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 39),
    _SapSubType_Type()
)
sapSubType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubType.setStatus("current")
_SapCpmProtPolicyId_Type = TCpmProtPolicyID
_SapCpmProtPolicyId_Object = MibTableColumn
sapCpmProtPolicyId = _SapCpmProtPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 40),
    _SapCpmProtPolicyId_Type()
)
sapCpmProtPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCpmProtPolicyId.setStatus("current")


class _SapCpmProtMonitorMac_Type(TruthValue):
    """Custom type sapCpmProtMonitorMac based on TruthValue"""
    defaultValue = 2


_SapCpmProtMonitorMac_Type.__name__ = "TruthValue"
_SapCpmProtMonitorMac_Object = MibTableColumn
sapCpmProtMonitorMac = _SapCpmProtMonitorMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 41),
    _SapCpmProtMonitorMac_Type()
)
sapCpmProtMonitorMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCpmProtMonitorMac.setStatus("current")


class _SapEgressFrameBasedAccounting_Type(TruthValue):
    """Custom type sapEgressFrameBasedAccounting based on TruthValue"""
    defaultValue = 2


_SapEgressFrameBasedAccounting_Type.__name__ = "TruthValue"
_SapEgressFrameBasedAccounting_Object = MibTableColumn
sapEgressFrameBasedAccounting = _SapEgressFrameBasedAccounting_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 42),
    _SapEgressFrameBasedAccounting_Type()
)
sapEgressFrameBasedAccounting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressFrameBasedAccounting.setStatus("current")


class _SapIngressAggRateLimit_Type(TPortSchedulerPIR):
    """Custom type sapIngressAggRateLimit based on TPortSchedulerPIR"""
    defaultValue = -1


_SapIngressAggRateLimit_Type.__name__ = "TPortSchedulerPIR"
_SapIngressAggRateLimit_Object = MibTableColumn
sapIngressAggRateLimit = _SapIngressAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 43),
    _SapIngressAggRateLimit_Type()
)
sapIngressAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngressAggRateLimit.setUnits("kilobps")


class _SapEgressHsmdaShaperOverride_Type(TNamedItemOrEmpty):
    """Custom type sapEgressHsmdaShaperOverride based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgressHsmdaShaperOverride_Type.__name__ = "TNamedItemOrEmpty"
_SapEgressHsmdaShaperOverride_Object = MibTableColumn
sapEgressHsmdaShaperOverride = _SapEgressHsmdaShaperOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 44),
    _SapEgressHsmdaShaperOverride_Type()
)
sapEgressHsmdaShaperOverride.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressHsmdaShaperOverride.setStatus("obsolete")


class _SapIngressHsmdaPacketOffOvr_Type(TIngHsmdaPerPacketOffsetOvr):
    """Custom type sapIngressHsmdaPacketOffOvr based on TIngHsmdaPerPacketOffsetOvr"""
    defaultValue = -128


_SapIngressHsmdaPacketOffOvr_Type.__name__ = "TIngHsmdaPerPacketOffsetOvr"
_SapIngressHsmdaPacketOffOvr_Object = MibTableColumn
sapIngressHsmdaPacketOffOvr = _SapIngressHsmdaPacketOffOvr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 45),
    _SapIngressHsmdaPacketOffOvr_Type()
)
sapIngressHsmdaPacketOffOvr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressHsmdaPacketOffOvr.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngressHsmdaPacketOffOvr.setUnits("bytes")


class _SapEgressHsmdaPacketOffOverride_Type(TEgrHsmdaPerPacketOffsetOvr):
    """Custom type sapEgressHsmdaPacketOffOverride based on TEgrHsmdaPerPacketOffsetOvr"""
    defaultValue = -128


_SapEgressHsmdaPacketOffOverride_Type.__name__ = "TEgrHsmdaPerPacketOffsetOvr"
_SapEgressHsmdaPacketOffOverride_Object = MibTableColumn
sapEgressHsmdaPacketOffOverride = _SapEgressHsmdaPacketOffOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 46),
    _SapEgressHsmdaPacketOffOverride_Type()
)
sapEgressHsmdaPacketOffOverride.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressHsmdaPacketOffOverride.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgressHsmdaPacketOffOverride.setUnits("bytes")


class _SapCallingStationId_Type(DisplayString):
    """Custom type sapCallingStationId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SapCallingStationId_Type.__name__ = "DisplayString"
_SapCallingStationId_Object = MibTableColumn
sapCallingStationId = _SapCallingStationId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 47),
    _SapCallingStationId_Type()
)
sapCallingStationId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCallingStationId.setStatus("current")


class _SapIsaAaApplicationProfile_Type(ServObjName):
    """Custom type sapIsaAaApplicationProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapIsaAaApplicationProfile_Type.__name__ = "ServObjName"
_SapIsaAaApplicationProfile_Object = MibTableColumn
sapIsaAaApplicationProfile = _SapIsaAaApplicationProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 48),
    _SapIsaAaApplicationProfile_Type()
)
sapIsaAaApplicationProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIsaAaApplicationProfile.setStatus("current")


class _SapIngPolicerPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapIngPolicerPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapIngPolicerPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapIngPolicerPolicy_Object = MibTableColumn
sapIngPolicerPolicy = _SapIngPolicerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 49),
    _SapIngPolicerPolicy_Type()
)
sapIngPolicerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPolicerPolicy.setStatus("current")


class _SapEgrPolicerPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapEgrPolicerPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapEgrPolicerPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrPolicerPolicy_Object = MibTableColumn
sapEgrPolicerPolicy = _SapEgrPolicerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 50),
    _SapEgrPolicerPolicy_Type()
)
sapEgrPolicerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPolicerPolicy.setStatus("current")
_SapTmplUsed_Type = TNamedItemOrEmpty
_SapTmplUsed_Object = MibTableColumn
sapTmplUsed = _SapTmplUsed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 51),
    _SapTmplUsed_Type()
)
sapTmplUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplUsed.setStatus("current")


class _SapEthRingIndex_Type(Unsigned32):
    """Custom type sapEthRingIndex based on Unsigned32"""
    defaultValue = 0


_SapEthRingIndex_Type.__name__ = "Unsigned32"
_SapEthRingIndex_Object = MibTableColumn
sapEthRingIndex = _SapEthRingIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 52),
    _SapEthRingIndex_Type()
)
sapEthRingIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthRingIndex.setStatus("current")


class _SapIngressFlowspec_Type(TruthValue):
    """Custom type sapIngressFlowspec based on TruthValue"""
    defaultValue = 2


_SapIngressFlowspec_Type.__name__ = "TruthValue"
_SapIngressFlowspec_Object = MibTableColumn
sapIngressFlowspec = _SapIngressFlowspec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 53),
    _SapIngressFlowspec_Type()
)
sapIngressFlowspec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressFlowspec.setStatus("obsolete")


class _SapCpmProtEthCfmMonitorFlags_Type(Bits):
    """Custom type sapCpmProtEthCfmMonitorFlags based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("ethCfmMonitor", 0),
          ("ethCfmMonitorAggregate", 1),
          ("ethCfmMonitorCommittedAccessRate", 2))
    )

_SapCpmProtEthCfmMonitorFlags_Type.__name__ = "Bits"
_SapCpmProtEthCfmMonitorFlags_Object = MibTableColumn
sapCpmProtEthCfmMonitorFlags = _SapCpmProtEthCfmMonitorFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 54),
    _SapCpmProtEthCfmMonitorFlags_Type()
)
sapCpmProtEthCfmMonitorFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCpmProtEthCfmMonitorFlags.setStatus("current")


class _SapTransitIpPolicyId_Type(TmnxBsxTransitIpPolicyIdOrZero):
    """Custom type sapTransitIpPolicyId based on TmnxBsxTransitIpPolicyIdOrZero"""
    defaultValue = 0


_SapTransitIpPolicyId_Type.__name__ = "TmnxBsxTransitIpPolicyIdOrZero"
_SapTransitIpPolicyId_Object = MibTableColumn
sapTransitIpPolicyId = _SapTransitIpPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 55),
    _SapTransitIpPolicyId_Type()
)
sapTransitIpPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTransitIpPolicyId.setStatus("current")


class _SapOperGrp_Type(TNamedItemOrEmpty):
    """Custom type sapOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SapOperGrp_Object = MibTableColumn
sapOperGrp = _SapOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 56),
    _SapOperGrp_Type()
)
sapOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapOperGrp.setStatus("current")


class _SapMonitorOperGrp_Type(TNamedItemOrEmpty):
    """Custom type sapMonitorOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapMonitorOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SapMonitorOperGrp_Object = MibTableColumn
sapMonitorOperGrp = _SapMonitorOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 57),
    _SapMonitorOperGrp_Type()
)
sapMonitorOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapMonitorOperGrp.setStatus("current")


class _SapEgressHsmdaWrrPolicyOvr_Type(TNamedItemOrEmpty):
    """Custom type sapEgressHsmdaWrrPolicyOvr based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgressHsmdaWrrPolicyOvr_Type.__name__ = "TNamedItemOrEmpty"
_SapEgressHsmdaWrrPolicyOvr_Object = MibTableColumn
sapEgressHsmdaWrrPolicyOvr = _SapEgressHsmdaWrrPolicyOvr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 58),
    _SapEgressHsmdaWrrPolicyOvr_Type()
)
sapEgressHsmdaWrrPolicyOvr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressHsmdaWrrPolicyOvr.setStatus("obsolete")


class _SapTransitPrefixPolicyId_Type(TmnxBsxTransPrefPolicyIdOrZero):
    """Custom type sapTransitPrefixPolicyId based on TmnxBsxTransPrefPolicyIdOrZero"""
    defaultValue = 0


_SapTransitPrefixPolicyId_Type.__name__ = "TmnxBsxTransPrefPolicyIdOrZero"
_SapTransitPrefixPolicyId_Object = MibTableColumn
sapTransitPrefixPolicyId = _SapTransitPrefixPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 59),
    _SapTransitPrefixPolicyId_Type()
)
sapTransitPrefixPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTransitPrefixPolicyId.setStatus("current")


class _SapCpmProtMonitorIP_Type(TruthValue):
    """Custom type sapCpmProtMonitorIP based on TruthValue"""
    defaultValue = 2


_SapCpmProtMonitorIP_Type.__name__ = "TruthValue"
_SapCpmProtMonitorIP_Object = MibTableColumn
sapCpmProtMonitorIP = _SapCpmProtMonitorIP_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 60),
    _SapCpmProtMonitorIP_Type()
)
sapCpmProtMonitorIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCpmProtMonitorIP.setStatus("current")


class _SapHostsAdminState_Type(ServiceAdminStatus):
    """Custom type sapHostsAdminState based on ServiceAdminStatus"""
    defaultValue = 1


_SapHostsAdminState_Type.__name__ = "ServiceAdminStatus"
_SapHostsAdminState_Object = MibTableColumn
sapHostsAdminState = _SapHostsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 61),
    _SapHostsAdminState_Type()
)
sapHostsAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapHostsAdminState.setStatus("current")


class _SapHostLockoutPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapHostLockoutPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapHostLockoutPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapHostLockoutPolicy_Object = MibTableColumn
sapHostLockoutPolicy = _SapHostLockoutPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 62),
    _SapHostLockoutPolicy_Type()
)
sapHostLockoutPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapHostLockoutPolicy.setStatus("current")


class _SapAarpId_Type(TmnxBsxAarpIdOrZero):
    """Custom type sapAarpId based on TmnxBsxAarpIdOrZero"""
    defaultValue = 0


_SapAarpId_Type.__name__ = "TmnxBsxAarpIdOrZero"
_SapAarpId_Object = MibTableColumn
sapAarpId = _SapAarpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 63),
    _SapAarpId_Type()
)
sapAarpId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAarpId.setStatus("current")


class _SapIngressFPQGrp_Type(TNamedItemOrEmpty):
    """Custom type sapIngressFPQGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapIngressFPQGrp_Type.__name__ = "TNamedItemOrEmpty"
_SapIngressFPQGrp_Object = MibTableColumn
sapIngressFPQGrp = _SapIngressFPQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 64),
    _SapIngressFPQGrp_Type()
)
sapIngressFPQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressFPQGrp.setStatus("current")


class _SapIngressFPQGrpInstanceId_Type(TQosQGrpInstanceIDorZero):
    """Custom type sapIngressFPQGrpInstanceId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_SapIngressFPQGrpInstanceId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_SapIngressFPQGrpInstanceId_Object = MibTableColumn
sapIngressFPQGrpInstanceId = _SapIngressFPQGrpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 65),
    _SapIngressFPQGrpInstanceId_Type()
)
sapIngressFPQGrpInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressFPQGrpInstanceId.setStatus("current")


class _SapAarpServRefType_Type(TmnxBsxAarpServiceRefType):
    """Custom type sapAarpServRefType based on TmnxBsxAarpServiceRefType"""
    defaultValue = 0


_SapAarpServRefType_Type.__name__ = "TmnxBsxAarpServiceRefType"
_SapAarpServRefType_Object = MibTableColumn
sapAarpServRefType = _SapAarpServRefType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 66),
    _SapAarpServRefType_Type()
)
sapAarpServRefType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAarpServRefType.setStatus("current")
_SapSiteName_Type = TNamedItemOrEmpty
_SapSiteName_Object = MibTableColumn
sapSiteName = _SapSiteName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 67),
    _SapSiteName_Type()
)
sapSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapSiteName.setStatus("current")


class _SapIgnoreOperDown_Type(TruthValue):
    """Custom type sapIgnoreOperDown based on TruthValue"""
    defaultValue = 2


_SapIgnoreOperDown_Type.__name__ = "TruthValue"
_SapIgnoreOperDown_Object = MibTableColumn
sapIgnoreOperDown = _SapIgnoreOperDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 68),
    _SapIgnoreOperDown_Type()
)
sapIgnoreOperDown.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIgnoreOperDown.setStatus("current")


class _SapLagLinkMapProfile_Type(TmnxLinkMapProfileIdOrZero):
    """Custom type sapLagLinkMapProfile based on TmnxLinkMapProfileIdOrZero"""
    defaultValue = 0


_SapLagLinkMapProfile_Type.__name__ = "TmnxLinkMapProfileIdOrZero"
_SapLagLinkMapProfile_Object = MibTableColumn
sapLagLinkMapProfile = _SapLagLinkMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 69),
    _SapLagLinkMapProfile_Type()
)
sapLagLinkMapProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapLagLinkMapProfile.setStatus("current")


class _SapIngressIPv6Flowspec_Type(TruthValue):
    """Custom type sapIngressIPv6Flowspec based on TruthValue"""
    defaultValue = 2


_SapIngressIPv6Flowspec_Type.__name__ = "TruthValue"
_SapIngressIPv6Flowspec_Object = MibTableColumn
sapIngressIPv6Flowspec = _SapIngressIPv6Flowspec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 70),
    _SapIngressIPv6Flowspec_Type()
)
sapIngressIPv6Flowspec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIPv6Flowspec.setStatus("obsolete")


class _SapEgressPortQGrp_Type(TNamedItemOrEmpty):
    """Custom type sapEgressPortQGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapEgressPortQGrp_Type.__name__ = "TNamedItemOrEmpty"
_SapEgressPortQGrp_Object = MibTableColumn
sapEgressPortQGrp = _SapEgressPortQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 71),
    _SapEgressPortQGrp_Type()
)
sapEgressPortQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressPortQGrp.setStatus("current")


class _SapEgressPortQGrpInstanceId_Type(TQosQGrpInstanceIDorZero):
    """Custom type sapEgressPortQGrpInstanceId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_SapEgressPortQGrpInstanceId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_SapEgressPortQGrpInstanceId_Object = MibTableColumn
sapEgressPortQGrpInstanceId = _SapEgressPortQGrpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 72),
    _SapEgressPortQGrpInstanceId_Type()
)
sapEgressPortQGrpInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressPortQGrpInstanceId.setStatus("current")


class _SapEtreeRootLeafTag_Type(TruthValue):
    """Custom type sapEtreeRootLeafTag based on TruthValue"""
    defaultValue = 2


_SapEtreeRootLeafTag_Type.__name__ = "TruthValue"
_SapEtreeRootLeafTag_Object = MibTableColumn
sapEtreeRootLeafTag = _SapEtreeRootLeafTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 74),
    _SapEtreeRootLeafTag_Type()
)
sapEtreeRootLeafTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEtreeRootLeafTag.setStatus("current")


class _SapEtreeLeafTag_Type(Integer32):
    """Custom type sapEtreeLeafTag based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4094),
    )


_SapEtreeLeafTag_Type.__name__ = "Integer32"
_SapEtreeLeafTag_Object = MibTableColumn
sapEtreeLeafTag = _SapEtreeLeafTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 75),
    _SapEtreeLeafTag_Type()
)
sapEtreeLeafTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEtreeLeafTag.setStatus("current")


class _SapEtreeLeafAc_Type(TruthValue):
    """Custom type sapEtreeLeafAc based on TruthValue"""
    defaultValue = 2


_SapEtreeLeafAc_Type.__name__ = "TruthValue"
_SapEtreeLeafAc_Object = MibTableColumn
sapEtreeLeafAc = _SapEtreeLeafAc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 76),
    _SapEtreeLeafAc_Type()
)
sapEtreeLeafAc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEtreeLeafAc.setStatus("current")


class _SapEgressAggRateLUB_Type(TruthValue):
    """Custom type sapEgressAggRateLUB based on TruthValue"""
    defaultValue = 2


_SapEgressAggRateLUB_Type.__name__ = "TruthValue"
_SapEgressAggRateLUB_Object = MibTableColumn
sapEgressAggRateLUB = _SapEgressAggRateLUB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 77),
    _SapEgressAggRateLUB_Type()
)
sapEgressAggRateLUB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressAggRateLUB.setStatus("current")


class _SapEgressAggRateLmtHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgressAggRateLmtHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgressAggRateLmtHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgressAggRateLmtHi_Object = MibTableColumn
sapEgressAggRateLmtHi = _SapEgressAggRateLmtHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 79),
    _SapEgressAggRateLmtHi_Type()
)
sapEgressAggRateLmtHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressAggRateLmtHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgressAggRateLmtHi.setUnits("kilobps")


class _SapEgressAggRateLmt_Type(TmnxQosRateLow32):
    """Custom type sapEgressAggRateLmt based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapEgressAggRateLmt_Type.__name__ = "TmnxQosRateLow32"
_SapEgressAggRateLmt_Object = MibTableColumn
sapEgressAggRateLmt = _SapEgressAggRateLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 80),
    _SapEgressAggRateLmt_Type()
)
sapEgressAggRateLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressAggRateLmt.setStatus("current")
if mibBuilder.loadTexts:
    sapEgressAggRateLmt.setUnits("kilobps")


class _SapMulticastSource_Type(TruthValue):
    """Custom type sapMulticastSource based on TruthValue"""
    defaultValue = 2


_SapMulticastSource_Type.__name__ = "TruthValue"
_SapMulticastSource_Object = MibTableColumn
sapMulticastSource = _SapMulticastSource_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 2, 1, 81),
    _SapMulticastSource_Type()
)
sapMulticastSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapMulticastSource.setStatus("current")
_SapTlsInfoTable_Object = MibTable
sapTlsInfoTable = _SapTlsInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3)
)
if mibBuilder.loadTexts:
    sapTlsInfoTable.setStatus("current")
_SapTlsInfoEntry_Object = MibTableRow
sapTlsInfoEntry = _SapTlsInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1)
)
sapTlsInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsInfoEntry.setStatus("current")


class _SapTlsStpAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type sapTlsStpAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTlsStpAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsStpAdminStatus_Object = MibTableColumn
sapTlsStpAdminStatus = _SapTlsStpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 1),
    _SapTlsStpAdminStatus_Type()
)
sapTlsStpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpAdminStatus.setStatus("current")


class _SapTlsStpPriority_Type(Integer32):
    """Custom type sapTlsStpPriority based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapTlsStpPriority_Type.__name__ = "Integer32"
_SapTlsStpPriority_Object = MibTableColumn
sapTlsStpPriority = _SapTlsStpPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 2),
    _SapTlsStpPriority_Type()
)
sapTlsStpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpPriority.setStatus("current")


class _SapTlsStpPortNum_Type(Integer32):
    """Custom type sapTlsStpPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_SapTlsStpPortNum_Type.__name__ = "Integer32"
_SapTlsStpPortNum_Object = MibTableColumn
sapTlsStpPortNum = _SapTlsStpPortNum_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 3),
    _SapTlsStpPortNum_Type()
)
sapTlsStpPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpPortNum.setStatus("current")


class _SapTlsStpPathCost_Type(Integer32):
    """Custom type sapTlsStpPathCost based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000000),
    )


_SapTlsStpPathCost_Type.__name__ = "Integer32"
_SapTlsStpPathCost_Object = MibTableColumn
sapTlsStpPathCost = _SapTlsStpPathCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 4),
    _SapTlsStpPathCost_Type()
)
sapTlsStpPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpPathCost.setStatus("current")


class _SapTlsStpRapidStart_Type(TmnxEnabledDisabled):
    """Custom type sapTlsStpRapidStart based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsStpRapidStart_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsStpRapidStart_Object = MibTableColumn
sapTlsStpRapidStart = _SapTlsStpRapidStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 5),
    _SapTlsStpRapidStart_Type()
)
sapTlsStpRapidStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpRapidStart.setStatus("current")


class _SapTlsStpBpduEncap_Type(Integer32):
    """Custom type sapTlsStpBpduEncap based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("dot1d", 2),
          ("pvst", 3))
    )


_SapTlsStpBpduEncap_Type.__name__ = "Integer32"
_SapTlsStpBpduEncap_Object = MibTableColumn
sapTlsStpBpduEncap = _SapTlsStpBpduEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 6),
    _SapTlsStpBpduEncap_Type()
)
sapTlsStpBpduEncap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpBpduEncap.setStatus("current")
_SapTlsStpPortState_Type = TStpPortState
_SapTlsStpPortState_Object = MibTableColumn
sapTlsStpPortState = _SapTlsStpPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 7),
    _SapTlsStpPortState_Type()
)
sapTlsStpPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpPortState.setStatus("current")
_SapTlsStpDesignatedBridge_Type = BridgeId
_SapTlsStpDesignatedBridge_Object = MibTableColumn
sapTlsStpDesignatedBridge = _SapTlsStpDesignatedBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 8),
    _SapTlsStpDesignatedBridge_Type()
)
sapTlsStpDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpDesignatedBridge.setStatus("current")
_SapTlsStpDesignatedPort_Type = Integer32
_SapTlsStpDesignatedPort_Object = MibTableColumn
sapTlsStpDesignatedPort = _SapTlsStpDesignatedPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 9),
    _SapTlsStpDesignatedPort_Type()
)
sapTlsStpDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpDesignatedPort.setStatus("current")
_SapTlsStpForwardTransitions_Type = Gauge32
_SapTlsStpForwardTransitions_Object = MibTableColumn
sapTlsStpForwardTransitions = _SapTlsStpForwardTransitions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 10),
    _SapTlsStpForwardTransitions_Type()
)
sapTlsStpForwardTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpForwardTransitions.setStatus("current")
_SapTlsStpInConfigBpdus_Type = Gauge32
_SapTlsStpInConfigBpdus_Object = MibTableColumn
sapTlsStpInConfigBpdus = _SapTlsStpInConfigBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 11),
    _SapTlsStpInConfigBpdus_Type()
)
sapTlsStpInConfigBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInConfigBpdus.setStatus("current")
_SapTlsStpInTcnBpdus_Type = Gauge32
_SapTlsStpInTcnBpdus_Object = MibTableColumn
sapTlsStpInTcnBpdus = _SapTlsStpInTcnBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 12),
    _SapTlsStpInTcnBpdus_Type()
)
sapTlsStpInTcnBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInTcnBpdus.setStatus("current")
_SapTlsStpInBadBpdus_Type = Gauge32
_SapTlsStpInBadBpdus_Object = MibTableColumn
sapTlsStpInBadBpdus = _SapTlsStpInBadBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 13),
    _SapTlsStpInBadBpdus_Type()
)
sapTlsStpInBadBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInBadBpdus.setStatus("current")
_SapTlsStpOutConfigBpdus_Type = Gauge32
_SapTlsStpOutConfigBpdus_Object = MibTableColumn
sapTlsStpOutConfigBpdus = _SapTlsStpOutConfigBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 14),
    _SapTlsStpOutConfigBpdus_Type()
)
sapTlsStpOutConfigBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOutConfigBpdus.setStatus("current")
_SapTlsStpOutTcnBpdus_Type = Gauge32
_SapTlsStpOutTcnBpdus_Object = MibTableColumn
sapTlsStpOutTcnBpdus = _SapTlsStpOutTcnBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 15),
    _SapTlsStpOutTcnBpdus_Type()
)
sapTlsStpOutTcnBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOutTcnBpdus.setStatus("current")


class _SapTlsStpOperBpduEncap_Type(Integer32):
    """Custom type sapTlsStpOperBpduEncap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("dot1d", 2),
          ("pvst", 3))
    )


_SapTlsStpOperBpduEncap_Type.__name__ = "Integer32"
_SapTlsStpOperBpduEncap_Object = MibTableColumn
sapTlsStpOperBpduEncap = _SapTlsStpOperBpduEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 16),
    _SapTlsStpOperBpduEncap_Type()
)
sapTlsStpOperBpduEncap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOperBpduEncap.setStatus("current")
_SapTlsVpnId_Type = VpnId
_SapTlsVpnId_Object = MibTableColumn
sapTlsVpnId = _SapTlsVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 17),
    _SapTlsVpnId_Type()
)
sapTlsVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsVpnId.setStatus("current")
_SapTlsCustId_Type = TmnxCustId
_SapTlsCustId_Object = MibTableColumn
sapTlsCustId = _SapTlsCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 18),
    _SapTlsCustId_Type()
)
sapTlsCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsCustId.setStatus("current")


class _SapTlsMacAddressLimit_Type(Integer32):
    """Custom type sapTlsMacAddressLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_SapTlsMacAddressLimit_Type.__name__ = "Integer32"
_SapTlsMacAddressLimit_Object = MibTableColumn
sapTlsMacAddressLimit = _SapTlsMacAddressLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 19),
    _SapTlsMacAddressLimit_Type()
)
sapTlsMacAddressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMacAddressLimit.setStatus("current")
_SapTlsNumMacAddresses_Type = Integer32
_SapTlsNumMacAddresses_Object = MibTableColumn
sapTlsNumMacAddresses = _SapTlsNumMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 20),
    _SapTlsNumMacAddresses_Type()
)
sapTlsNumMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsNumMacAddresses.setStatus("current")
_SapTlsNumStaticMacAddresses_Type = Integer32
_SapTlsNumStaticMacAddresses_Object = MibTableColumn
sapTlsNumStaticMacAddresses = _SapTlsNumStaticMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 21),
    _SapTlsNumStaticMacAddresses_Type()
)
sapTlsNumStaticMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsNumStaticMacAddresses.setStatus("current")


class _SapTlsMacLearning_Type(TmnxEnabledDisabled):
    """Custom type sapTlsMacLearning based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTlsMacLearning_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsMacLearning_Object = MibTableColumn
sapTlsMacLearning = _SapTlsMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 22),
    _SapTlsMacLearning_Type()
)
sapTlsMacLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMacLearning.setStatus("current")


class _SapTlsMacAgeing_Type(TmnxEnabledDisabled):
    """Custom type sapTlsMacAgeing based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTlsMacAgeing_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsMacAgeing_Object = MibTableColumn
sapTlsMacAgeing = _SapTlsMacAgeing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 23),
    _SapTlsMacAgeing_Type()
)
sapTlsMacAgeing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMacAgeing.setStatus("current")
_SapTlsStpOperEdge_Type = TruthValue
_SapTlsStpOperEdge_Object = MibTableColumn
sapTlsStpOperEdge = _SapTlsStpOperEdge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 24),
    _SapTlsStpOperEdge_Type()
)
sapTlsStpOperEdge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOperEdge.setStatus("current")


class _SapTlsStpAdminPointToPoint_Type(Integer32):
    """Custom type sapTlsStpAdminPointToPoint based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("forceTrue", 0),
          ("forceFalse", 1))
    )


_SapTlsStpAdminPointToPoint_Type.__name__ = "Integer32"
_SapTlsStpAdminPointToPoint_Object = MibTableColumn
sapTlsStpAdminPointToPoint = _SapTlsStpAdminPointToPoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 25),
    _SapTlsStpAdminPointToPoint_Type()
)
sapTlsStpAdminPointToPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpAdminPointToPoint.setStatus("current")
_SapTlsStpPortRole_Type = StpPortRole
_SapTlsStpPortRole_Object = MibTableColumn
sapTlsStpPortRole = _SapTlsStpPortRole_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 26),
    _SapTlsStpPortRole_Type()
)
sapTlsStpPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpPortRole.setStatus("current")


class _SapTlsStpAutoEdge_Type(TmnxEnabledDisabled):
    """Custom type sapTlsStpAutoEdge based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTlsStpAutoEdge_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsStpAutoEdge_Object = MibTableColumn
sapTlsStpAutoEdge = _SapTlsStpAutoEdge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 27),
    _SapTlsStpAutoEdge_Type()
)
sapTlsStpAutoEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpAutoEdge.setStatus("current")
_SapTlsStpOperProtocol_Type = StpProtocol
_SapTlsStpOperProtocol_Object = MibTableColumn
sapTlsStpOperProtocol = _SapTlsStpOperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 28),
    _SapTlsStpOperProtocol_Type()
)
sapTlsStpOperProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOperProtocol.setStatus("current")
_SapTlsStpInRstBpdus_Type = Gauge32
_SapTlsStpInRstBpdus_Object = MibTableColumn
sapTlsStpInRstBpdus = _SapTlsStpInRstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 29),
    _SapTlsStpInRstBpdus_Type()
)
sapTlsStpInRstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInRstBpdus.setStatus("current")
_SapTlsStpOutRstBpdus_Type = Gauge32
_SapTlsStpOutRstBpdus_Object = MibTableColumn
sapTlsStpOutRstBpdus = _SapTlsStpOutRstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 30),
    _SapTlsStpOutRstBpdus_Type()
)
sapTlsStpOutRstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOutRstBpdus.setStatus("current")


class _SapTlsLimitMacMove_Type(TlsLimitMacMove):
    """Custom type sapTlsLimitMacMove based on TlsLimitMacMove"""
    defaultValue = 1


_SapTlsLimitMacMove_Type.__name__ = "TlsLimitMacMove"
_SapTlsLimitMacMove_Object = MibTableColumn
sapTlsLimitMacMove = _SapTlsLimitMacMove_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 31),
    _SapTlsLimitMacMove_Type()
)
sapTlsLimitMacMove.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsLimitMacMove.setStatus("current")


class _SapTlsDhcpSnooping_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcpSnooping based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcpSnooping_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcpSnooping_Object = MibTableColumn
sapTlsDhcpSnooping = _SapTlsDhcpSnooping_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 32),
    _SapTlsDhcpSnooping_Type()
)
sapTlsDhcpSnooping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpSnooping.setStatus("obsolete")
_SapTlsMacPinning_Type = TmnxEnabledDisabled
_SapTlsMacPinning_Object = MibTableColumn
sapTlsMacPinning = _SapTlsMacPinning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 33),
    _SapTlsMacPinning_Type()
)
sapTlsMacPinning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMacPinning.setStatus("current")


class _SapTlsDiscardUnknownSource_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDiscardUnknownSource based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDiscardUnknownSource_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDiscardUnknownSource_Object = MibTableColumn
sapTlsDiscardUnknownSource = _SapTlsDiscardUnknownSource_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 34),
    _SapTlsDiscardUnknownSource_Type()
)
sapTlsDiscardUnknownSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDiscardUnknownSource.setStatus("current")
_SapTlsMvplsPruneState_Type = MvplsPruneState
_SapTlsMvplsPruneState_Object = MibTableColumn
sapTlsMvplsPruneState = _SapTlsMvplsPruneState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 35),
    _SapTlsMvplsPruneState_Type()
)
sapTlsMvplsPruneState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvplsPruneState.setStatus("current")
_SapTlsMvplsMgmtService_Type = TmnxServId
_SapTlsMvplsMgmtService_Object = MibTableColumn
sapTlsMvplsMgmtService = _SapTlsMvplsMgmtService_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 36),
    _SapTlsMvplsMgmtService_Type()
)
sapTlsMvplsMgmtService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvplsMgmtService.setStatus("current")
_SapTlsMvplsMgmtPortId_Type = TmnxPortID
_SapTlsMvplsMgmtPortId_Object = MibTableColumn
sapTlsMvplsMgmtPortId = _SapTlsMvplsMgmtPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 37),
    _SapTlsMvplsMgmtPortId_Type()
)
sapTlsMvplsMgmtPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvplsMgmtPortId.setStatus("current")
_SapTlsMvplsMgmtEncapValue_Type = TmnxEncapVal
_SapTlsMvplsMgmtEncapValue_Object = MibTableColumn
sapTlsMvplsMgmtEncapValue = _SapTlsMvplsMgmtEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 38),
    _SapTlsMvplsMgmtEncapValue_Type()
)
sapTlsMvplsMgmtEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvplsMgmtEncapValue.setStatus("current")


class _SapTlsArpReplyAgent_Type(Integer32):
    """Custom type sapTlsArpReplyAgent based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("enabledWithSubscrIdent", 3))
    )


_SapTlsArpReplyAgent_Type.__name__ = "Integer32"
_SapTlsArpReplyAgent_Object = MibTableColumn
sapTlsArpReplyAgent = _SapTlsArpReplyAgent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 39),
    _SapTlsArpReplyAgent_Type()
)
sapTlsArpReplyAgent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsArpReplyAgent.setStatus("current")
_SapTlsStpException_Type = StpExceptionCondition
_SapTlsStpException_Object = MibTableColumn
sapTlsStpException = _SapTlsStpException_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 40),
    _SapTlsStpException_Type()
)
sapTlsStpException.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpException.setStatus("current")


class _SapTlsAuthenticationPolicy_Type(TPolicyStatementNameOrEmpty):
    """Custom type sapTlsAuthenticationPolicy based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SapTlsAuthenticationPolicy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SapTlsAuthenticationPolicy_Object = MibTableColumn
sapTlsAuthenticationPolicy = _SapTlsAuthenticationPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 41),
    _SapTlsAuthenticationPolicy_Type()
)
sapTlsAuthenticationPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsAuthenticationPolicy.setStatus("current")


class _SapTlsL2ptTermination_Type(TmnxEnabledDisabled):
    """Custom type sapTlsL2ptTermination based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsL2ptTermination_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsL2ptTermination_Object = MibTableColumn
sapTlsL2ptTermination = _SapTlsL2ptTermination_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 42),
    _SapTlsL2ptTermination_Type()
)
sapTlsL2ptTermination.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsL2ptTermination.setStatus("current")


class _SapTlsBpduTranslation_Type(TlsBpduTranslation):
    """Custom type sapTlsBpduTranslation based on TlsBpduTranslation"""
    defaultValue = 2


_SapTlsBpduTranslation_Type.__name__ = "TlsBpduTranslation"
_SapTlsBpduTranslation_Object = MibTableColumn
sapTlsBpduTranslation = _SapTlsBpduTranslation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 43),
    _SapTlsBpduTranslation_Type()
)
sapTlsBpduTranslation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsBpduTranslation.setStatus("current")


class _SapTlsStpRootGuard_Type(TruthValue):
    """Custom type sapTlsStpRootGuard based on TruthValue"""
    defaultValue = 2


_SapTlsStpRootGuard_Type.__name__ = "TruthValue"
_SapTlsStpRootGuard_Object = MibTableColumn
sapTlsStpRootGuard = _SapTlsStpRootGuard_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 44),
    _SapTlsStpRootGuard_Type()
)
sapTlsStpRootGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsStpRootGuard.setStatus("current")
_SapTlsStpInsideRegion_Type = TruthValue
_SapTlsStpInsideRegion_Object = MibTableColumn
sapTlsStpInsideRegion = _SapTlsStpInsideRegion_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 45),
    _SapTlsStpInsideRegion_Type()
)
sapTlsStpInsideRegion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInsideRegion.setStatus("current")


class _SapTlsEgressMcastGroup_Type(TNamedItemOrEmpty):
    """Custom type sapTlsEgressMcastGroup based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsEgressMcastGroup_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsEgressMcastGroup_Object = MibTableColumn
sapTlsEgressMcastGroup = _SapTlsEgressMcastGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 46),
    _SapTlsEgressMcastGroup_Type()
)
sapTlsEgressMcastGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsEgressMcastGroup.setStatus("obsolete")
_SapTlsStpInMstBpdus_Type = Gauge32
_SapTlsStpInMstBpdus_Object = MibTableColumn
sapTlsStpInMstBpdus = _SapTlsStpInMstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 47),
    _SapTlsStpInMstBpdus_Type()
)
sapTlsStpInMstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpInMstBpdus.setStatus("current")
_SapTlsStpOutMstBpdus_Type = Gauge32
_SapTlsStpOutMstBpdus_Object = MibTableColumn
sapTlsStpOutMstBpdus = _SapTlsStpOutMstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 48),
    _SapTlsStpOutMstBpdus_Type()
)
sapTlsStpOutMstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpOutMstBpdus.setStatus("current")


class _SapTlsRestProtSrcMac_Type(TruthValue):
    """Custom type sapTlsRestProtSrcMac based on TruthValue"""
    defaultValue = 2


_SapTlsRestProtSrcMac_Type.__name__ = "TruthValue"
_SapTlsRestProtSrcMac_Object = MibTableColumn
sapTlsRestProtSrcMac = _SapTlsRestProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 49),
    _SapTlsRestProtSrcMac_Type()
)
sapTlsRestProtSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsRestProtSrcMac.setStatus("current")


class _SapTlsRestUnprotDstMac_Type(TruthValue):
    """Custom type sapTlsRestUnprotDstMac based on TruthValue"""
    defaultValue = 2


_SapTlsRestUnprotDstMac_Type.__name__ = "TruthValue"
_SapTlsRestUnprotDstMac_Object = MibTableColumn
sapTlsRestUnprotDstMac = _SapTlsRestUnprotDstMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 50),
    _SapTlsRestUnprotDstMac_Type()
)
sapTlsRestUnprotDstMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsRestUnprotDstMac.setStatus("current")
_SapTlsStpRxdDesigBridge_Type = BridgeId
_SapTlsStpRxdDesigBridge_Object = MibTableColumn
sapTlsStpRxdDesigBridge = _SapTlsStpRxdDesigBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 51),
    _SapTlsStpRxdDesigBridge_Type()
)
sapTlsStpRxdDesigBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpRxdDesigBridge.setStatus("current")
_SapTlsStpRootGuardViolation_Type = TruthValue
_SapTlsStpRootGuardViolation_Object = MibTableColumn
sapTlsStpRootGuardViolation = _SapTlsStpRootGuardViolation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 52),
    _SapTlsStpRootGuardViolation_Type()
)
sapTlsStpRootGuardViolation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStpRootGuardViolation.setStatus("current")


class _SapTlsShcvAction_Type(TmnxSubShcvAction):
    """Custom type sapTlsShcvAction based on TmnxSubShcvAction"""
    defaultValue = 1


_SapTlsShcvAction_Type.__name__ = "TmnxSubShcvAction"
_SapTlsShcvAction_Object = MibTableColumn
sapTlsShcvAction = _SapTlsShcvAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 53),
    _SapTlsShcvAction_Type()
)
sapTlsShcvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvAction.setStatus("current")
_SapTlsShcvSrcIp_Type = IpAddress
_SapTlsShcvSrcIp_Object = MibTableColumn
sapTlsShcvSrcIp = _SapTlsShcvSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 54),
    _SapTlsShcvSrcIp_Type()
)
sapTlsShcvSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvSrcIp.setStatus("current")
_SapTlsShcvSrcMac_Type = MacAddress
_SapTlsShcvSrcMac_Object = MibTableColumn
sapTlsShcvSrcMac = _SapTlsShcvSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 55),
    _SapTlsShcvSrcMac_Type()
)
sapTlsShcvSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvSrcMac.setStatus("current")


class _SapTlsShcvInterval_Type(TmnxSubShcvInterval):
    """Custom type sapTlsShcvInterval based on TmnxSubShcvInterval"""
    defaultValue = 0


_SapTlsShcvInterval_Type.__name__ = "TmnxSubShcvInterval"
_SapTlsShcvInterval_Object = MibTableColumn
sapTlsShcvInterval = _SapTlsShcvInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 56),
    _SapTlsShcvInterval_Type()
)
sapTlsShcvInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvInterval.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsShcvInterval.setUnits("minutes")
_SapTlsMvplsMgmtMsti_Type = MstiInstanceIdOrZero
_SapTlsMvplsMgmtMsti_Object = MibTableColumn
sapTlsMvplsMgmtMsti = _SapTlsMvplsMgmtMsti_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 57),
    _SapTlsMvplsMgmtMsti_Type()
)
sapTlsMvplsMgmtMsti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvplsMgmtMsti.setStatus("current")
_SapTlsMacMoveNextUpTime_Type = Unsigned32
_SapTlsMacMoveNextUpTime_Object = MibTableColumn
sapTlsMacMoveNextUpTime = _SapTlsMacMoveNextUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 58),
    _SapTlsMacMoveNextUpTime_Type()
)
sapTlsMacMoveNextUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMacMoveNextUpTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsMacMoveNextUpTime.setUnits("seconds")
_SapTlsMacMoveRateExcdLeft_Type = Unsigned32
_SapTlsMacMoveRateExcdLeft_Object = MibTableColumn
sapTlsMacMoveRateExcdLeft = _SapTlsMacMoveRateExcdLeft_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 59),
    _SapTlsMacMoveRateExcdLeft_Type()
)
sapTlsMacMoveRateExcdLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMacMoveRateExcdLeft.setStatus("current")


class _SapTlsRestProtSrcMacAction_Type(Integer32):
    """Custom type sapTlsRestProtSrcMacAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("alarm-only", 2),
          ("discardFrame", 3))
    )


_SapTlsRestProtSrcMacAction_Type.__name__ = "Integer32"
_SapTlsRestProtSrcMacAction_Object = MibTableColumn
sapTlsRestProtSrcMacAction = _SapTlsRestProtSrcMacAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 60),
    _SapTlsRestProtSrcMacAction_Type()
)
sapTlsRestProtSrcMacAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsRestProtSrcMacAction.setStatus("current")


class _SapTlsL2ptForceBoundary_Type(TruthValue):
    """Custom type sapTlsL2ptForceBoundary based on TruthValue"""
    defaultValue = 2


_SapTlsL2ptForceBoundary_Type.__name__ = "TruthValue"
_SapTlsL2ptForceBoundary_Object = MibTableColumn
sapTlsL2ptForceBoundary = _SapTlsL2ptForceBoundary_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 61),
    _SapTlsL2ptForceBoundary_Type()
)
sapTlsL2ptForceBoundary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsL2ptForceBoundary.setStatus("current")


class _SapTlsLimitMacMoveLevel_Type(TlsLimitMacMoveLevel):
    """Custom type sapTlsLimitMacMoveLevel based on TlsLimitMacMoveLevel"""
    defaultValue = 3


_SapTlsLimitMacMoveLevel_Type.__name__ = "TlsLimitMacMoveLevel"
_SapTlsLimitMacMoveLevel_Object = MibTableColumn
sapTlsLimitMacMoveLevel = _SapTlsLimitMacMoveLevel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 62),
    _SapTlsLimitMacMoveLevel_Type()
)
sapTlsLimitMacMoveLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsLimitMacMoveLevel.setStatus("current")


class _SapTlsBpduTransOper_Type(Integer32):
    """Custom type sapTlsBpduTransOper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 1),
          ("disabled", 2),
          ("pvst", 3),
          ("stp", 4),
          ("pvst-rw", 5))
    )


_SapTlsBpduTransOper_Type.__name__ = "Integer32"
_SapTlsBpduTransOper_Object = MibTableColumn
sapTlsBpduTransOper = _SapTlsBpduTransOper_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 63),
    _SapTlsBpduTransOper_Type()
)
sapTlsBpduTransOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsBpduTransOper.setStatus("current")


class _SapTlsDefMsapPolicy_Type(TPolicyStatementNameOrEmpty):
    """Custom type sapTlsDefMsapPolicy based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_SapTlsDefMsapPolicy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SapTlsDefMsapPolicy_Object = MibTableColumn
sapTlsDefMsapPolicy = _SapTlsDefMsapPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 64),
    _SapTlsDefMsapPolicy_Type()
)
sapTlsDefMsapPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDefMsapPolicy.setStatus("current")


class _SapTlsL2ptProtocols_Type(L2ptProtocols):
    """Custom type sapTlsL2ptProtocols based on L2ptProtocols"""
    defaultBinValue = "1"


_SapTlsL2ptProtocols_Type.__name__ = "L2ptProtocols"
_SapTlsL2ptProtocols_Object = MibTableColumn
sapTlsL2ptProtocols = _SapTlsL2ptProtocols_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 65),
    _SapTlsL2ptProtocols_Type()
)
sapTlsL2ptProtocols.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsL2ptProtocols.setStatus("current")


class _SapTlsL2ptForceProtocols_Type(L2ptProtocols):
    """Custom type sapTlsL2ptForceProtocols based on L2ptProtocols"""
    defaultBinValue = "1"


_SapTlsL2ptForceProtocols_Type.__name__ = "L2ptProtocols"
_SapTlsL2ptForceProtocols_Object = MibTableColumn
sapTlsL2ptForceProtocols = _SapTlsL2ptForceProtocols_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 66),
    _SapTlsL2ptForceProtocols_Type()
)
sapTlsL2ptForceProtocols.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsL2ptForceProtocols.setStatus("current")


class _SapTlsPppoeMsapTrigger_Type(TruthValue):
    """Custom type sapTlsPppoeMsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsPppoeMsapTrigger_Type.__name__ = "TruthValue"
_SapTlsPppoeMsapTrigger_Object = MibTableColumn
sapTlsPppoeMsapTrigger = _SapTlsPppoeMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 67),
    _SapTlsPppoeMsapTrigger_Type()
)
sapTlsPppoeMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppoeMsapTrigger.setStatus("current")


class _SapTlsDhcpMsapTrigger_Type(TruthValue):
    """Custom type sapTlsDhcpMsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsDhcpMsapTrigger_Type.__name__ = "TruthValue"
_SapTlsDhcpMsapTrigger_Object = MibTableColumn
sapTlsDhcpMsapTrigger = _SapTlsDhcpMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 68),
    _SapTlsDhcpMsapTrigger_Type()
)
sapTlsDhcpMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpMsapTrigger.setStatus("current")


class _SapTlsMrpJoinTime_Type(Unsigned32):
    """Custom type sapTlsMrpJoinTime based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SapTlsMrpJoinTime_Type.__name__ = "Unsigned32"
_SapTlsMrpJoinTime_Object = MibTableColumn
sapTlsMrpJoinTime = _SapTlsMrpJoinTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 69),
    _SapTlsMrpJoinTime_Type()
)
sapTlsMrpJoinTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpJoinTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsMrpJoinTime.setUnits("deciseconds")


class _SapTlsMrpLeaveTime_Type(Unsigned32):
    """Custom type sapTlsMrpLeaveTime based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 60),
    )


_SapTlsMrpLeaveTime_Type.__name__ = "Unsigned32"
_SapTlsMrpLeaveTime_Object = MibTableColumn
sapTlsMrpLeaveTime = _SapTlsMrpLeaveTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 70),
    _SapTlsMrpLeaveTime_Type()
)
sapTlsMrpLeaveTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpLeaveTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsMrpLeaveTime.setUnits("deciseconds")


class _SapTlsMrpLeaveAllTime_Type(Unsigned32):
    """Custom type sapTlsMrpLeaveAllTime based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_SapTlsMrpLeaveAllTime_Type.__name__ = "Unsigned32"
_SapTlsMrpLeaveAllTime_Object = MibTableColumn
sapTlsMrpLeaveAllTime = _SapTlsMrpLeaveAllTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 71),
    _SapTlsMrpLeaveAllTime_Type()
)
sapTlsMrpLeaveAllTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpLeaveAllTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsMrpLeaveAllTime.setUnits("deciseconds")


class _SapTlsMrpPeriodicTime_Type(Unsigned32):
    """Custom type sapTlsMrpPeriodicTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100),
    )


_SapTlsMrpPeriodicTime_Type.__name__ = "Unsigned32"
_SapTlsMrpPeriodicTime_Object = MibTableColumn
sapTlsMrpPeriodicTime = _SapTlsMrpPeriodicTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 72),
    _SapTlsMrpPeriodicTime_Type()
)
sapTlsMrpPeriodicTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpPeriodicTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsMrpPeriodicTime.setUnits("deciseconds")


class _SapTlsMrpPeriodicEnabled_Type(TruthValue):
    """Custom type sapTlsMrpPeriodicEnabled based on TruthValue"""
    defaultValue = 2


_SapTlsMrpPeriodicEnabled_Type.__name__ = "TruthValue"
_SapTlsMrpPeriodicEnabled_Object = MibTableColumn
sapTlsMrpPeriodicEnabled = _SapTlsMrpPeriodicEnabled_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 73),
    _SapTlsMrpPeriodicEnabled_Type()
)
sapTlsMrpPeriodicEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpPeriodicEnabled.setStatus("current")


class _SapTlsPppoePolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTlsPppoePolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsPppoePolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsPppoePolicy_Object = MibTableColumn
sapTlsPppoePolicy = _SapTlsPppoePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 74),
    _SapTlsPppoePolicy_Type()
)
sapTlsPppoePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppoePolicy.setStatus("current")


class _SapTlsArpMsapTrigger_Type(TruthValue):
    """Custom type sapTlsArpMsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsArpMsapTrigger_Type.__name__ = "TruthValue"
_SapTlsArpMsapTrigger_Object = MibTableColumn
sapTlsArpMsapTrigger = _SapTlsArpMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 75),
    _SapTlsArpMsapTrigger_Type()
)
sapTlsArpMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsArpMsapTrigger.setStatus("current")


class _SapTlsDefMsapService_Type(TmnxServId):
    """Custom type sapTlsDefMsapService based on TmnxServId"""
    defaultValue = 0


_SapTlsDefMsapService_Type.__name__ = "TmnxServId"
_SapTlsDefMsapService_Object = MibTableColumn
sapTlsDefMsapService = _SapTlsDefMsapService_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 76),
    _SapTlsDefMsapService_Type()
)
sapTlsDefMsapService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDefMsapService.setStatus("current")


class _SapTlsDefMsapGroupIf_Type(TNamedItemOrEmpty):
    """Custom type sapTlsDefMsapGroupIf based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsDefMsapGroupIf_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsDefMsapGroupIf_Object = MibTableColumn
sapTlsDefMsapGroupIf = _SapTlsDefMsapGroupIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 77),
    _SapTlsDefMsapGroupIf_Type()
)
sapTlsDefMsapGroupIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDefMsapGroupIf.setStatus("current")


class _SapTlsMrpPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTlsMrpPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsMrpPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsMrpPolicy_Object = MibTableColumn
sapTlsMrpPolicy = _SapTlsMrpPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 78),
    _SapTlsMrpPolicy_Type()
)
sapTlsMrpPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMrpPolicy.setStatus("current")
_SapTlsSiteName_Type = TNamedItemOrEmpty
_SapTlsSiteName_Object = MibTableColumn
sapTlsSiteName = _SapTlsSiteName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 79),
    _SapTlsSiteName_Type()
)
sapTlsSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsSiteName.setStatus("current")


class _SapTlsDhcp6MsapTrigger_Type(TruthValue):
    """Custom type sapTlsDhcp6MsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsDhcp6MsapTrigger_Type.__name__ = "TruthValue"
_SapTlsDhcp6MsapTrigger_Object = MibTableColumn
sapTlsDhcp6MsapTrigger = _SapTlsDhcp6MsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 80),
    _SapTlsDhcp6MsapTrigger_Type()
)
sapTlsDhcp6MsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6MsapTrigger.setStatus("current")


class _SapTlsShcvRetryTimeout_Type(TmnxSubShcvRetryTimeout):
    """Custom type sapTlsShcvRetryTimeout based on TmnxSubShcvRetryTimeout"""
    defaultValue = 10


_SapTlsShcvRetryTimeout_Type.__name__ = "TmnxSubShcvRetryTimeout"
_SapTlsShcvRetryTimeout_Object = MibTableColumn
sapTlsShcvRetryTimeout = _SapTlsShcvRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 81),
    _SapTlsShcvRetryTimeout_Type()
)
sapTlsShcvRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvRetryTimeout.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsShcvRetryTimeout.setUnits("seconds")


class _SapTlsShcvRetryCount_Type(TmnxSubShcvRetryCount):
    """Custom type sapTlsShcvRetryCount based on TmnxSubShcvRetryCount"""
    defaultValue = 2


_SapTlsShcvRetryCount_Type.__name__ = "TmnxSubShcvRetryCount"
_SapTlsShcvRetryCount_Object = MibTableColumn
sapTlsShcvRetryCount = _SapTlsShcvRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 82),
    _SapTlsShcvRetryCount_Type()
)
sapTlsShcvRetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvRetryCount.setStatus("current")
_SapTlsDataSapInstStatus_Type = TmnxSapInstStatus
_SapTlsDataSapInstStatus_Object = MibTableColumn
sapTlsDataSapInstStatus = _SapTlsDataSapInstStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 83),
    _SapTlsDataSapInstStatus_Type()
)
sapTlsDataSapInstStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDataSapInstStatus.setStatus("current")
_SapTlsDataSapInstLastErr_Type = DisplayString
_SapTlsDataSapInstLastErr_Object = MibTableColumn
sapTlsDataSapInstLastErr = _SapTlsDataSapInstLastErr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 84),
    _SapTlsDataSapInstLastErr_Type()
)
sapTlsDataSapInstLastErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDataSapInstLastErr.setStatus("current")


class _SapTlsMvrpAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type sapTlsMvrpAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsMvrpAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsMvrpAdminStatus_Object = MibTableColumn
sapTlsMvrpAdminStatus = _SapTlsMvrpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 85),
    _SapTlsMvrpAdminStatus_Type()
)
sapTlsMvrpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMvrpAdminStatus.setStatus("current")
_SapTlsMvrpOperStatus_Type = TmnxEnabledDisabled
_SapTlsMvrpOperStatus_Object = MibTableColumn
sapTlsMvrpOperStatus = _SapTlsMvrpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 86),
    _SapTlsMvrpOperStatus_Type()
)
sapTlsMvrpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvrpOperStatus.setStatus("current")
_SapTlsInTcBitBpdus_Type = Counter32
_SapTlsInTcBitBpdus_Object = MibTableColumn
sapTlsInTcBitBpdus = _SapTlsInTcBitBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 87),
    _SapTlsInTcBitBpdus_Type()
)
sapTlsInTcBitBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsInTcBitBpdus.setStatus("current")
_SapTlsOutTcBitBpdus_Type = Counter32
_SapTlsOutTcBitBpdus_Object = MibTableColumn
sapTlsOutTcBitBpdus = _SapTlsOutTcBitBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 88),
    _SapTlsOutTcBitBpdus_Type()
)
sapTlsOutTcBitBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsOutTcBitBpdus.setStatus("current")


class _SapTlsPppMsapTrigger_Type(TruthValue):
    """Custom type sapTlsPppMsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsPppMsapTrigger_Type.__name__ = "TruthValue"
_SapTlsPppMsapTrigger_Object = MibTableColumn
sapTlsPppMsapTrigger = _SapTlsPppMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 89),
    _SapTlsPppMsapTrigger_Type()
)
sapTlsPppMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppMsapTrigger.setStatus("current")


class _SapTlsPppPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTlsPppPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsPppPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsPppPolicy_Object = MibTableColumn
sapTlsPppPolicy = _SapTlsPppPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 90),
    _SapTlsPppPolicy_Type()
)
sapTlsPppPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppPolicy.setStatus("current")


class _SapTlsTrackSrrpInst_Type(Unsigned32):
    """Custom type sapTlsTrackSrrpInst based on Unsigned32"""
    defaultValue = 0


_SapTlsTrackSrrpInst_Type.__name__ = "Unsigned32"
_SapTlsTrackSrrpInst_Object = MibTableColumn
sapTlsTrackSrrpInst = _SapTlsTrackSrrpInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 91),
    _SapTlsTrackSrrpInst_Type()
)
sapTlsTrackSrrpInst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsTrackSrrpInst.setStatus("current")


class _SapTlsPppUserDb_Type(TNamedItemOrEmpty):
    """Custom type sapTlsPppUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsPppUserDb_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsPppUserDb_Object = MibTableColumn
sapTlsPppUserDb = _SapTlsPppUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 92),
    _SapTlsPppUserDb_Type()
)
sapTlsPppUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppUserDb.setStatus("current")


class _SapTlsPppoeUserDb_Type(TNamedItemOrEmpty):
    """Custom type sapTlsPppoeUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsPppoeUserDb_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsPppoeUserDb_Object = MibTableColumn
sapTlsPppoeUserDb = _SapTlsPppoeUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 93),
    _SapTlsPppoeUserDb_Type()
)
sapTlsPppoeUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsPppoeUserDb.setStatus("current")


class _SapTlsDhcpUserDb_Type(TNamedItemOrEmpty):
    """Custom type sapTlsDhcpUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsDhcpUserDb_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsDhcpUserDb_Object = MibTableColumn
sapTlsDhcpUserDb = _SapTlsDhcpUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 94),
    _SapTlsDhcpUserDb_Type()
)
sapTlsDhcpUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpUserDb.setStatus("current")


class _SapTlsAutoLearnMacProtect_Type(TruthValue):
    """Custom type sapTlsAutoLearnMacProtect based on TruthValue"""
    defaultValue = 2


_SapTlsAutoLearnMacProtect_Type.__name__ = "TruthValue"
_SapTlsAutoLearnMacProtect_Object = MibTableColumn
sapTlsAutoLearnMacProtect = _SapTlsAutoLearnMacProtect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 95),
    _SapTlsAutoLearnMacProtect_Type()
)
sapTlsAutoLearnMacProtect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsAutoLearnMacProtect.setStatus("current")


class _SapTlsDhcp6UserDb_Type(TNamedItemOrEmpty):
    """Custom type sapTlsDhcp6UserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsDhcp6UserDb_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsDhcp6UserDb_Object = MibTableColumn
sapTlsDhcp6UserDb = _SapTlsDhcp6UserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 96),
    _SapTlsDhcp6UserDb_Type()
)
sapTlsDhcp6UserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6UserDb.setStatus("current")


class _SapTlsShcvPolicyIpv4_Type(TNamedItemOrEmpty):
    """Custom type sapTlsShcvPolicyIpv4 based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsShcvPolicyIpv4_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsShcvPolicyIpv4_Object = MibTableColumn
sapTlsShcvPolicyIpv4 = _SapTlsShcvPolicyIpv4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 98),
    _SapTlsShcvPolicyIpv4_Type()
)
sapTlsShcvPolicyIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsShcvPolicyIpv4.setStatus("current")


class _SapTlsDataMsapTrigger_Type(TruthValue):
    """Custom type sapTlsDataMsapTrigger based on TruthValue"""
    defaultValue = 2


_SapTlsDataMsapTrigger_Type.__name__ = "TruthValue"
_SapTlsDataMsapTrigger_Object = MibTableColumn
sapTlsDataMsapTrigger = _SapTlsDataMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 99),
    _SapTlsDataMsapTrigger_Type()
)
sapTlsDataMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDataMsapTrigger.setStatus("current")
_SapTlsRestProtSrcMacOper_Type = TruthValue
_SapTlsRestProtSrcMacOper_Object = MibTableColumn
sapTlsRestProtSrcMacOper = _SapTlsRestProtSrcMacOper_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 100),
    _SapTlsRestProtSrcMacOper_Type()
)
sapTlsRestProtSrcMacOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsRestProtSrcMacOper.setStatus("current")


class _SapTlsRestProtSrcMacOperAct_Type(Integer32):
    """Custom type sapTlsRestProtSrcMacOperAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("alarm-only", 2),
          ("discardFrame", 3))
    )


_SapTlsRestProtSrcMacOperAct_Type.__name__ = "Integer32"
_SapTlsRestProtSrcMacOperAct_Object = MibTableColumn
sapTlsRestProtSrcMacOperAct = _SapTlsRestProtSrcMacOperAct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 101),
    _SapTlsRestProtSrcMacOperAct_Type()
)
sapTlsRestProtSrcMacOperAct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsRestProtSrcMacOperAct.setStatus("current")
_SapTlsLastMgmtChange_Type = TimeStamp
_SapTlsLastMgmtChange_Object = MibTableColumn
sapTlsLastMgmtChange = _SapTlsLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 3, 1, 102),
    _SapTlsLastMgmtChange_Type()
)
sapTlsLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsLastMgmtChange.setStatus("current")
_SapAtmInfoTable_Object = MibTable
sapAtmInfoTable = _SapAtmInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4)
)
if mibBuilder.loadTexts:
    sapAtmInfoTable.setStatus("current")
_SapAtmInfoEntry_Object = MibTableRow
sapAtmInfoEntry = _SapAtmInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1)
)
sapAtmInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapAtmInfoEntry.setStatus("current")
_SapAtmEncapsulation_Type = TmnxSapAtmEncapsulation
_SapAtmEncapsulation_Object = MibTableColumn
sapAtmEncapsulation = _SapAtmEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 1),
    _SapAtmEncapsulation_Type()
)
sapAtmEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmEncapsulation.setStatus("current")


class _SapAtmIngressTrafficDescIndex_Type(AtmTrafficDescrParamIndex):
    """Custom type sapAtmIngressTrafficDescIndex based on AtmTrafficDescrParamIndex"""
    defaultValue = 1

    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SapAtmIngressTrafficDescIndex_Type.__name__ = "AtmTrafficDescrParamIndex"
_SapAtmIngressTrafficDescIndex_Object = MibTableColumn
sapAtmIngressTrafficDescIndex = _SapAtmIngressTrafficDescIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 2),
    _SapAtmIngressTrafficDescIndex_Type()
)
sapAtmIngressTrafficDescIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmIngressTrafficDescIndex.setStatus("current")


class _SapAtmEgressTrafficDescIndex_Type(AtmTrafficDescrParamIndex):
    """Custom type sapAtmEgressTrafficDescIndex based on AtmTrafficDescrParamIndex"""
    defaultValue = 1

    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_SapAtmEgressTrafficDescIndex_Type.__name__ = "AtmTrafficDescrParamIndex"
_SapAtmEgressTrafficDescIndex_Object = MibTableColumn
sapAtmEgressTrafficDescIndex = _SapAtmEgressTrafficDescIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 3),
    _SapAtmEgressTrafficDescIndex_Type()
)
sapAtmEgressTrafficDescIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmEgressTrafficDescIndex.setStatus("current")


class _SapAtmOamAlarmCellHandling_Type(ServiceAdminStatus):
    """Custom type sapAtmOamAlarmCellHandling based on ServiceAdminStatus"""
    defaultValue = 1


_SapAtmOamAlarmCellHandling_Type.__name__ = "ServiceAdminStatus"
_SapAtmOamAlarmCellHandling_Object = MibTableColumn
sapAtmOamAlarmCellHandling = _SapAtmOamAlarmCellHandling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 4),
    _SapAtmOamAlarmCellHandling_Type()
)
sapAtmOamAlarmCellHandling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmOamAlarmCellHandling.setStatus("current")


class _SapAtmOamTerminate_Type(ServiceAdminStatus):
    """Custom type sapAtmOamTerminate based on ServiceAdminStatus"""
    defaultValue = 2


_SapAtmOamTerminate_Type.__name__ = "ServiceAdminStatus"
_SapAtmOamTerminate_Object = MibTableColumn
sapAtmOamTerminate = _SapAtmOamTerminate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 5),
    _SapAtmOamTerminate_Type()
)
sapAtmOamTerminate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmOamTerminate.setStatus("current")


class _SapAtmOamPeriodicLoopback_Type(ServiceAdminStatus):
    """Custom type sapAtmOamPeriodicLoopback based on ServiceAdminStatus"""
    defaultValue = 2


_SapAtmOamPeriodicLoopback_Type.__name__ = "ServiceAdminStatus"
_SapAtmOamPeriodicLoopback_Object = MibTableColumn
sapAtmOamPeriodicLoopback = _SapAtmOamPeriodicLoopback_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 6),
    _SapAtmOamPeriodicLoopback_Type()
)
sapAtmOamPeriodicLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmOamPeriodicLoopback.setStatus("current")


class _SapAtmLLFAdminStatus_Type(ServiceAdminStatus):
    """Custom type sapAtmLLFAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SapAtmLLFAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SapAtmLLFAdminStatus_Object = MibTableColumn
sapAtmLLFAdminStatus = _SapAtmLLFAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 7),
    _SapAtmLLFAdminStatus_Type()
)
sapAtmLLFAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapAtmLLFAdminStatus.setStatus("current")


class _SapAtmLLFOperStatus_Type(Integer32):
    """Custom type sapAtmLLFOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fault", 1),
          ("clear", 2))
    )


_SapAtmLLFOperStatus_Type.__name__ = "Integer32"
_SapAtmLLFOperStatus_Object = MibTableColumn
sapAtmLLFOperStatus = _SapAtmLLFOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 8),
    _SapAtmLLFOperStatus_Type()
)
sapAtmLLFOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmLLFOperStatus.setStatus("current")
_SapAtmSubPppIndex_Type = Unsigned32
_SapAtmSubPppIndex_Object = MibTableColumn
sapAtmSubPppIndex = _SapAtmSubPppIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 10),
    _SapAtmSubPppIndex_Type()
)
sapAtmSubPppIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmSubPppIndex.setStatus("current")
_SapAtmDetectedEncapsulation_Type = TmnxSapAtmEncapsulation
_SapAtmDetectedEncapsulation_Object = MibTableColumn
sapAtmDetectedEncapsulation = _SapAtmDetectedEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 11),
    _SapAtmDetectedEncapsulation_Type()
)
sapAtmDetectedEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmDetectedEncapsulation.setStatus("current")


class _SapAtmIngressTrafficDescIndexOvr_Type(AtmTrafficDescrParamIndex):
    """Custom type sapAtmIngressTrafficDescIndexOvr based on AtmTrafficDescrParamIndex"""
    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1000),
    )


_SapAtmIngressTrafficDescIndexOvr_Type.__name__ = "AtmTrafficDescrParamIndex"
_SapAtmIngressTrafficDescIndexOvr_Object = MibTableColumn
sapAtmIngressTrafficDescIndexOvr = _SapAtmIngressTrafficDescIndexOvr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 12),
    _SapAtmIngressTrafficDescIndexOvr_Type()
)
sapAtmIngressTrafficDescIndexOvr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmIngressTrafficDescIndexOvr.setStatus("current")


class _SapAtmEgressTrafficDescIndexOvr_Type(AtmTrafficDescrParamIndex):
    """Custom type sapAtmEgressTrafficDescIndexOvr based on AtmTrafficDescrParamIndex"""
    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1000),
    )


_SapAtmEgressTrafficDescIndexOvr_Type.__name__ = "AtmTrafficDescrParamIndex"
_SapAtmEgressTrafficDescIndexOvr_Object = MibTableColumn
sapAtmEgressTrafficDescIndexOvr = _SapAtmEgressTrafficDescIndexOvr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 4, 1, 13),
    _SapAtmEgressTrafficDescIndexOvr_Type()
)
sapAtmEgressTrafficDescIndexOvr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmEgressTrafficDescIndexOvr.setStatus("current")
_SapBaseStatsTable_Object = MibTable
sapBaseStatsTable = _SapBaseStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6)
)
if mibBuilder.loadTexts:
    sapBaseStatsTable.setStatus("current")
_SapBaseStatsEntry_Object = MibTableRow
sapBaseStatsEntry = _SapBaseStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1)
)
sapBaseStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapBaseStatsEntry.setStatus("current")
_SapBaseStatsIngressPchipDroppedPackets_Type = Counter64
_SapBaseStatsIngressPchipDroppedPackets_Object = MibTableColumn
sapBaseStatsIngressPchipDroppedPackets = _SapBaseStatsIngressPchipDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 1),
    _SapBaseStatsIngressPchipDroppedPackets_Type()
)
sapBaseStatsIngressPchipDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipDroppedPackets.setStatus("current")
_SapBaseStatsIngressPchipDroppedOctets_Type = Counter64
_SapBaseStatsIngressPchipDroppedOctets_Object = MibTableColumn
sapBaseStatsIngressPchipDroppedOctets = _SapBaseStatsIngressPchipDroppedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 2),
    _SapBaseStatsIngressPchipDroppedOctets_Type()
)
sapBaseStatsIngressPchipDroppedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipDroppedOctets.setStatus("current")
_SapBaseStatsIngressPchipOfferedHiPrioPackets_Type = Counter64
_SapBaseStatsIngressPchipOfferedHiPrioPackets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedHiPrioPackets = _SapBaseStatsIngressPchipOfferedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 3),
    _SapBaseStatsIngressPchipOfferedHiPrioPackets_Type()
)
sapBaseStatsIngressPchipOfferedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedHiPrioPackets.setStatus("current")
_SapBaseStatsIngressPchipOfferedHiPrioOctets_Type = Counter64
_SapBaseStatsIngressPchipOfferedHiPrioOctets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedHiPrioOctets = _SapBaseStatsIngressPchipOfferedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 4),
    _SapBaseStatsIngressPchipOfferedHiPrioOctets_Type()
)
sapBaseStatsIngressPchipOfferedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedHiPrioOctets.setStatus("current")
_SapBaseStatsIngressPchipOfferedLoPrioPackets_Type = Counter64
_SapBaseStatsIngressPchipOfferedLoPrioPackets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedLoPrioPackets = _SapBaseStatsIngressPchipOfferedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 5),
    _SapBaseStatsIngressPchipOfferedLoPrioPackets_Type()
)
sapBaseStatsIngressPchipOfferedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedLoPrioPackets.setStatus("current")
_SapBaseStatsIngressPchipOfferedLoPrioOctets_Type = Counter64
_SapBaseStatsIngressPchipOfferedLoPrioOctets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedLoPrioOctets = _SapBaseStatsIngressPchipOfferedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 6),
    _SapBaseStatsIngressPchipOfferedLoPrioOctets_Type()
)
sapBaseStatsIngressPchipOfferedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedLoPrioOctets.setStatus("current")
_SapBaseStatsIngressQchipDroppedHiPrioPackets_Type = Counter64
_SapBaseStatsIngressQchipDroppedHiPrioPackets_Object = MibTableColumn
sapBaseStatsIngressQchipDroppedHiPrioPackets = _SapBaseStatsIngressQchipDroppedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 7),
    _SapBaseStatsIngressQchipDroppedHiPrioPackets_Type()
)
sapBaseStatsIngressQchipDroppedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipDroppedHiPrioPackets.setStatus("current")
_SapBaseStatsIngressQchipDroppedHiPrioOctets_Type = Counter64
_SapBaseStatsIngressQchipDroppedHiPrioOctets_Object = MibTableColumn
sapBaseStatsIngressQchipDroppedHiPrioOctets = _SapBaseStatsIngressQchipDroppedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 8),
    _SapBaseStatsIngressQchipDroppedHiPrioOctets_Type()
)
sapBaseStatsIngressQchipDroppedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipDroppedHiPrioOctets.setStatus("current")
_SapBaseStatsIngressQchipDroppedLoPrioPackets_Type = Counter64
_SapBaseStatsIngressQchipDroppedLoPrioPackets_Object = MibTableColumn
sapBaseStatsIngressQchipDroppedLoPrioPackets = _SapBaseStatsIngressQchipDroppedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 9),
    _SapBaseStatsIngressQchipDroppedLoPrioPackets_Type()
)
sapBaseStatsIngressQchipDroppedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipDroppedLoPrioPackets.setStatus("current")
_SapBaseStatsIngressQchipDroppedLoPrioOctets_Type = Counter64
_SapBaseStatsIngressQchipDroppedLoPrioOctets_Object = MibTableColumn
sapBaseStatsIngressQchipDroppedLoPrioOctets = _SapBaseStatsIngressQchipDroppedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 10),
    _SapBaseStatsIngressQchipDroppedLoPrioOctets_Type()
)
sapBaseStatsIngressQchipDroppedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipDroppedLoPrioOctets.setStatus("current")
_SapBaseStatsIngressQchipForwardedInProfPackets_Type = Counter64
_SapBaseStatsIngressQchipForwardedInProfPackets_Object = MibTableColumn
sapBaseStatsIngressQchipForwardedInProfPackets = _SapBaseStatsIngressQchipForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 11),
    _SapBaseStatsIngressQchipForwardedInProfPackets_Type()
)
sapBaseStatsIngressQchipForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipForwardedInProfPackets.setStatus("current")
_SapBaseStatsIngressQchipForwardedInProfOctets_Type = Counter64
_SapBaseStatsIngressQchipForwardedInProfOctets_Object = MibTableColumn
sapBaseStatsIngressQchipForwardedInProfOctets = _SapBaseStatsIngressQchipForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 12),
    _SapBaseStatsIngressQchipForwardedInProfOctets_Type()
)
sapBaseStatsIngressQchipForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipForwardedInProfOctets.setStatus("current")
_SapBaseStatsIngressQchipForwardedOutProfPackets_Type = Counter64
_SapBaseStatsIngressQchipForwardedOutProfPackets_Object = MibTableColumn
sapBaseStatsIngressQchipForwardedOutProfPackets = _SapBaseStatsIngressQchipForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 13),
    _SapBaseStatsIngressQchipForwardedOutProfPackets_Type()
)
sapBaseStatsIngressQchipForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipForwardedOutProfPackets.setStatus("current")
_SapBaseStatsIngressQchipForwardedOutProfOctets_Type = Counter64
_SapBaseStatsIngressQchipForwardedOutProfOctets_Object = MibTableColumn
sapBaseStatsIngressQchipForwardedOutProfOctets = _SapBaseStatsIngressQchipForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 14),
    _SapBaseStatsIngressQchipForwardedOutProfOctets_Type()
)
sapBaseStatsIngressQchipForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressQchipForwardedOutProfOctets.setStatus("current")
_SapBaseStatsEgressQchipDroppedInProfPackets_Type = Counter64
_SapBaseStatsEgressQchipDroppedInProfPackets_Object = MibTableColumn
sapBaseStatsEgressQchipDroppedInProfPackets = _SapBaseStatsEgressQchipDroppedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 15),
    _SapBaseStatsEgressQchipDroppedInProfPackets_Type()
)
sapBaseStatsEgressQchipDroppedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipDroppedInProfPackets.setStatus("current")
_SapBaseStatsEgressQchipDroppedInProfOctets_Type = Counter64
_SapBaseStatsEgressQchipDroppedInProfOctets_Object = MibTableColumn
sapBaseStatsEgressQchipDroppedInProfOctets = _SapBaseStatsEgressQchipDroppedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 16),
    _SapBaseStatsEgressQchipDroppedInProfOctets_Type()
)
sapBaseStatsEgressQchipDroppedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipDroppedInProfOctets.setStatus("current")
_SapBaseStatsEgressQchipDroppedOutProfPackets_Type = Counter64
_SapBaseStatsEgressQchipDroppedOutProfPackets_Object = MibTableColumn
sapBaseStatsEgressQchipDroppedOutProfPackets = _SapBaseStatsEgressQchipDroppedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 17),
    _SapBaseStatsEgressQchipDroppedOutProfPackets_Type()
)
sapBaseStatsEgressQchipDroppedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipDroppedOutProfPackets.setStatus("current")
_SapBaseStatsEgressQchipDroppedOutProfOctets_Type = Counter64
_SapBaseStatsEgressQchipDroppedOutProfOctets_Object = MibTableColumn
sapBaseStatsEgressQchipDroppedOutProfOctets = _SapBaseStatsEgressQchipDroppedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 18),
    _SapBaseStatsEgressQchipDroppedOutProfOctets_Type()
)
sapBaseStatsEgressQchipDroppedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipDroppedOutProfOctets.setStatus("current")
_SapBaseStatsEgressQchipForwardedInProfPackets_Type = Counter64
_SapBaseStatsEgressQchipForwardedInProfPackets_Object = MibTableColumn
sapBaseStatsEgressQchipForwardedInProfPackets = _SapBaseStatsEgressQchipForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 19),
    _SapBaseStatsEgressQchipForwardedInProfPackets_Type()
)
sapBaseStatsEgressQchipForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipForwardedInProfPackets.setStatus("current")
_SapBaseStatsEgressQchipForwardedInProfOctets_Type = Counter64
_SapBaseStatsEgressQchipForwardedInProfOctets_Object = MibTableColumn
sapBaseStatsEgressQchipForwardedInProfOctets = _SapBaseStatsEgressQchipForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 20),
    _SapBaseStatsEgressQchipForwardedInProfOctets_Type()
)
sapBaseStatsEgressQchipForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipForwardedInProfOctets.setStatus("current")
_SapBaseStatsEgressQchipForwardedOutProfPackets_Type = Counter64
_SapBaseStatsEgressQchipForwardedOutProfPackets_Object = MibTableColumn
sapBaseStatsEgressQchipForwardedOutProfPackets = _SapBaseStatsEgressQchipForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 21),
    _SapBaseStatsEgressQchipForwardedOutProfPackets_Type()
)
sapBaseStatsEgressQchipForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipForwardedOutProfPackets.setStatus("current")
_SapBaseStatsEgressQchipForwardedOutProfOctets_Type = Counter64
_SapBaseStatsEgressQchipForwardedOutProfOctets_Object = MibTableColumn
sapBaseStatsEgressQchipForwardedOutProfOctets = _SapBaseStatsEgressQchipForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 22),
    _SapBaseStatsEgressQchipForwardedOutProfOctets_Type()
)
sapBaseStatsEgressQchipForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgressQchipForwardedOutProfOctets.setStatus("current")
_SapBaseStatsCustId_Type = TmnxCustId
_SapBaseStatsCustId_Object = MibTableColumn
sapBaseStatsCustId = _SapBaseStatsCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 23),
    _SapBaseStatsCustId_Type()
)
sapBaseStatsCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsCustId.setStatus("current")
_SapBaseStatsIngressPchipOfferedUncoloredPackets_Type = Counter64
_SapBaseStatsIngressPchipOfferedUncoloredPackets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedUncoloredPackets = _SapBaseStatsIngressPchipOfferedUncoloredPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 24),
    _SapBaseStatsIngressPchipOfferedUncoloredPackets_Type()
)
sapBaseStatsIngressPchipOfferedUncoloredPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedUncoloredPackets.setStatus("current")
_SapBaseStatsIngressPchipOfferedUncoloredOctets_Type = Counter64
_SapBaseStatsIngressPchipOfferedUncoloredOctets_Object = MibTableColumn
sapBaseStatsIngressPchipOfferedUncoloredOctets = _SapBaseStatsIngressPchipOfferedUncoloredOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 25),
    _SapBaseStatsIngressPchipOfferedUncoloredOctets_Type()
)
sapBaseStatsIngressPchipOfferedUncoloredOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressPchipOfferedUncoloredOctets.setStatus("current")
_SapBaseStatsAuthenticationPktsDiscarded_Type = Counter32
_SapBaseStatsAuthenticationPktsDiscarded_Object = MibTableColumn
sapBaseStatsAuthenticationPktsDiscarded = _SapBaseStatsAuthenticationPktsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 26),
    _SapBaseStatsAuthenticationPktsDiscarded_Type()
)
sapBaseStatsAuthenticationPktsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsAuthenticationPktsDiscarded.setStatus("current")
_SapBaseStatsAuthenticationPktsSuccess_Type = Counter32
_SapBaseStatsAuthenticationPktsSuccess_Object = MibTableColumn
sapBaseStatsAuthenticationPktsSuccess = _SapBaseStatsAuthenticationPktsSuccess_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 27),
    _SapBaseStatsAuthenticationPktsSuccess_Type()
)
sapBaseStatsAuthenticationPktsSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsAuthenticationPktsSuccess.setStatus("current")
_SapBaseStatsLastClearedTime_Type = TimeStamp
_SapBaseStatsLastClearedTime_Object = MibTableColumn
sapBaseStatsLastClearedTime = _SapBaseStatsLastClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 28),
    _SapBaseStatsLastClearedTime_Type()
)
sapBaseStatsLastClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsLastClearedTime.setStatus("current")
_SapBaseStatsIngressCPMPackets_Type = Counter64
_SapBaseStatsIngressCPMPackets_Object = MibTableColumn
sapBaseStatsIngressCPMPackets = _SapBaseStatsIngressCPMPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 29),
    _SapBaseStatsIngressCPMPackets_Type()
)
sapBaseStatsIngressCPMPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMPackets.setStatus("current")
_SapBaseStatsIngressCPMPacketsHi_Type = Counter32
_SapBaseStatsIngressCPMPacketsHi_Object = MibTableColumn
sapBaseStatsIngressCPMPacketsHi = _SapBaseStatsIngressCPMPacketsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 30),
    _SapBaseStatsIngressCPMPacketsHi_Type()
)
sapBaseStatsIngressCPMPacketsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMPacketsHi.setStatus("current")
_SapBaseStatsIngressCPMPacketsLo_Type = Counter32
_SapBaseStatsIngressCPMPacketsLo_Object = MibTableColumn
sapBaseStatsIngressCPMPacketsLo = _SapBaseStatsIngressCPMPacketsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 31),
    _SapBaseStatsIngressCPMPacketsLo_Type()
)
sapBaseStatsIngressCPMPacketsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMPacketsLo.setStatus("current")
_SapBaseStatsIngressCPMOctets_Type = Counter64
_SapBaseStatsIngressCPMOctets_Object = MibTableColumn
sapBaseStatsIngressCPMOctets = _SapBaseStatsIngressCPMOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 32),
    _SapBaseStatsIngressCPMOctets_Type()
)
sapBaseStatsIngressCPMOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMOctets.setStatus("current")
_SapBaseStatsIngressCPMOctetsHi_Type = Counter32
_SapBaseStatsIngressCPMOctetsHi_Object = MibTableColumn
sapBaseStatsIngressCPMOctetsHi = _SapBaseStatsIngressCPMOctetsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 33),
    _SapBaseStatsIngressCPMOctetsHi_Type()
)
sapBaseStatsIngressCPMOctetsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMOctetsHi.setStatus("current")
_SapBaseStatsIngressCPMOctetsLo_Type = Counter32
_SapBaseStatsIngressCPMOctetsLo_Object = MibTableColumn
sapBaseStatsIngressCPMOctetsLo = _SapBaseStatsIngressCPMOctetsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 34),
    _SapBaseStatsIngressCPMOctetsLo_Type()
)
sapBaseStatsIngressCPMOctetsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngressCPMOctetsLo.setStatus("current")
_SapBaseStatsIngPchipRcvdValidPkt_Type = Counter64
_SapBaseStatsIngPchipRcvdValidPkt_Object = MibTableColumn
sapBaseStatsIngPchipRcvdValidPkt = _SapBaseStatsIngPchipRcvdValidPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 35),
    _SapBaseStatsIngPchipRcvdValidPkt_Type()
)
sapBaseStatsIngPchipRcvdValidPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngPchipRcvdValidPkt.setStatus("current")
_SapBaseStatsIngPchipRcvdValidOct_Type = Counter64
_SapBaseStatsIngPchipRcvdValidOct_Object = MibTableColumn
sapBaseStatsIngPchipRcvdValidOct = _SapBaseStatsIngPchipRcvdValidOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 36),
    _SapBaseStatsIngPchipRcvdValidOct_Type()
)
sapBaseStatsIngPchipRcvdValidOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngPchipRcvdValidOct.setStatus("current")
_SapBaseStatsIngAggregateOffPkts_Type = Counter64
_SapBaseStatsIngAggregateOffPkts_Object = MibTableColumn
sapBaseStatsIngAggregateOffPkts = _SapBaseStatsIngAggregateOffPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 37),
    _SapBaseStatsIngAggregateOffPkts_Type()
)
sapBaseStatsIngAggregateOffPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateOffPkts.setStatus("current")
_SapBaseStatsIngAggregateOffOcts_Type = Counter64
_SapBaseStatsIngAggregateOffOcts_Object = MibTableColumn
sapBaseStatsIngAggregateOffOcts = _SapBaseStatsIngAggregateOffOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 38),
    _SapBaseStatsIngAggregateOffOcts_Type()
)
sapBaseStatsIngAggregateOffOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateOffOcts.setStatus("current")
_SapBaseStatsIngAggregateFwdPkts_Type = Counter64
_SapBaseStatsIngAggregateFwdPkts_Object = MibTableColumn
sapBaseStatsIngAggregateFwdPkts = _SapBaseStatsIngAggregateFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 39),
    _SapBaseStatsIngAggregateFwdPkts_Type()
)
sapBaseStatsIngAggregateFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateFwdPkts.setStatus("current")
_SapBaseStatsIngAggregateFwdOcts_Type = Counter64
_SapBaseStatsIngAggregateFwdOcts_Object = MibTableColumn
sapBaseStatsIngAggregateFwdOcts = _SapBaseStatsIngAggregateFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 40),
    _SapBaseStatsIngAggregateFwdOcts_Type()
)
sapBaseStatsIngAggregateFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateFwdOcts.setStatus("current")
_SapBaseStatsEgrAggregateFwdPkts_Type = Counter64
_SapBaseStatsEgrAggregateFwdPkts_Object = MibTableColumn
sapBaseStatsEgrAggregateFwdPkts = _SapBaseStatsEgrAggregateFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 41),
    _SapBaseStatsEgrAggregateFwdPkts_Type()
)
sapBaseStatsEgrAggregateFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgrAggregateFwdPkts.setStatus("current")
_SapBaseStatsEgrAggregateFwdOcts_Type = Counter64
_SapBaseStatsEgrAggregateFwdOcts_Object = MibTableColumn
sapBaseStatsEgrAggregateFwdOcts = _SapBaseStatsEgrAggregateFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 42),
    _SapBaseStatsEgrAggregateFwdOcts_Type()
)
sapBaseStatsEgrAggregateFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgrAggregateFwdOcts.setStatus("current")
_SapBaseStatsIngAggregateDropPkts_Type = Counter64
_SapBaseStatsIngAggregateDropPkts_Object = MibTableColumn
sapBaseStatsIngAggregateDropPkts = _SapBaseStatsIngAggregateDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 43),
    _SapBaseStatsIngAggregateDropPkts_Type()
)
sapBaseStatsIngAggregateDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateDropPkts.setStatus("current")
_SapBaseStatsIngAggregateDropOcts_Type = Counter64
_SapBaseStatsIngAggregateDropOcts_Object = MibTableColumn
sapBaseStatsIngAggregateDropOcts = _SapBaseStatsIngAggregateDropOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 44),
    _SapBaseStatsIngAggregateDropOcts_Type()
)
sapBaseStatsIngAggregateDropOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsIngAggregateDropOcts.setStatus("current")
_SapBaseStatsEgrAggregateDropPkts_Type = Counter64
_SapBaseStatsEgrAggregateDropPkts_Object = MibTableColumn
sapBaseStatsEgrAggregateDropPkts = _SapBaseStatsEgrAggregateDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 45),
    _SapBaseStatsEgrAggregateDropPkts_Type()
)
sapBaseStatsEgrAggregateDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgrAggregateDropPkts.setStatus("current")
_SapBaseStatsEgrAggregateDropOcts_Type = Counter64
_SapBaseStatsEgrAggregateDropOcts_Object = MibTableColumn
sapBaseStatsEgrAggregateDropOcts = _SapBaseStatsEgrAggregateDropOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 6, 1, 46),
    _SapBaseStatsEgrAggregateDropOcts_Type()
)
sapBaseStatsEgrAggregateDropOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseStatsEgrAggregateDropOcts.setStatus("current")
_SapIngQosQueueStatsTable_Object = MibTable
sapIngQosQueueStatsTable = _SapIngQosQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7)
)
if mibBuilder.loadTexts:
    sapIngQosQueueStatsTable.setStatus("current")
_SapIngQosQueueStatsEntry_Object = MibTableRow
sapIngQosQueueStatsEntry = _SapIngQosQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1)
)
sapIngQosQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosQueueId"),
)
if mibBuilder.loadTexts:
    sapIngQosQueueStatsEntry.setStatus("current")
_SapIngQosQueueId_Type = TSapIngQueueId
_SapIngQosQueueId_Object = MibTableColumn
sapIngQosQueueId = _SapIngQosQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 1),
    _SapIngQosQueueId_Type()
)
sapIngQosQueueId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueId.setStatus("current")
_SapIngQosQueueStatsOfferedHiPrioPackets_Type = Counter64
_SapIngQosQueueStatsOfferedHiPrioPackets_Object = MibTableColumn
sapIngQosQueueStatsOfferedHiPrioPackets = _SapIngQosQueueStatsOfferedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 2),
    _SapIngQosQueueStatsOfferedHiPrioPackets_Type()
)
sapIngQosQueueStatsOfferedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsOfferedHiPrioPackets.setStatus("current")
_SapIngQosQueueStatsDroppedHiPrioPackets_Type = Counter64
_SapIngQosQueueStatsDroppedHiPrioPackets_Object = MibTableColumn
sapIngQosQueueStatsDroppedHiPrioPackets = _SapIngQosQueueStatsDroppedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 3),
    _SapIngQosQueueStatsDroppedHiPrioPackets_Type()
)
sapIngQosQueueStatsDroppedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsDroppedHiPrioPackets.setStatus("current")
_SapIngQosQueueStatsOfferedLoPrioPackets_Type = Counter64
_SapIngQosQueueStatsOfferedLoPrioPackets_Object = MibTableColumn
sapIngQosQueueStatsOfferedLoPrioPackets = _SapIngQosQueueStatsOfferedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 4),
    _SapIngQosQueueStatsOfferedLoPrioPackets_Type()
)
sapIngQosQueueStatsOfferedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsOfferedLoPrioPackets.setStatus("current")
_SapIngQosQueueStatsDroppedLoPrioPackets_Type = Counter64
_SapIngQosQueueStatsDroppedLoPrioPackets_Object = MibTableColumn
sapIngQosQueueStatsDroppedLoPrioPackets = _SapIngQosQueueStatsDroppedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 5),
    _SapIngQosQueueStatsDroppedLoPrioPackets_Type()
)
sapIngQosQueueStatsDroppedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsDroppedLoPrioPackets.setStatus("current")
_SapIngQosQueueStatsOfferedHiPrioOctets_Type = Counter64
_SapIngQosQueueStatsOfferedHiPrioOctets_Object = MibTableColumn
sapIngQosQueueStatsOfferedHiPrioOctets = _SapIngQosQueueStatsOfferedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 6),
    _SapIngQosQueueStatsOfferedHiPrioOctets_Type()
)
sapIngQosQueueStatsOfferedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsOfferedHiPrioOctets.setStatus("current")
_SapIngQosQueueStatsDroppedHiPrioOctets_Type = Counter64
_SapIngQosQueueStatsDroppedHiPrioOctets_Object = MibTableColumn
sapIngQosQueueStatsDroppedHiPrioOctets = _SapIngQosQueueStatsDroppedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 7),
    _SapIngQosQueueStatsDroppedHiPrioOctets_Type()
)
sapIngQosQueueStatsDroppedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsDroppedHiPrioOctets.setStatus("current")
_SapIngQosQueueStatsOfferedLoPrioOctets_Type = Counter64
_SapIngQosQueueStatsOfferedLoPrioOctets_Object = MibTableColumn
sapIngQosQueueStatsOfferedLoPrioOctets = _SapIngQosQueueStatsOfferedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 8),
    _SapIngQosQueueStatsOfferedLoPrioOctets_Type()
)
sapIngQosQueueStatsOfferedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsOfferedLoPrioOctets.setStatus("current")
_SapIngQosQueueStatsDroppedLoPrioOctets_Type = Counter64
_SapIngQosQueueStatsDroppedLoPrioOctets_Object = MibTableColumn
sapIngQosQueueStatsDroppedLoPrioOctets = _SapIngQosQueueStatsDroppedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 9),
    _SapIngQosQueueStatsDroppedLoPrioOctets_Type()
)
sapIngQosQueueStatsDroppedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsDroppedLoPrioOctets.setStatus("current")
_SapIngQosQueueStatsForwardedInProfPackets_Type = Counter64
_SapIngQosQueueStatsForwardedInProfPackets_Object = MibTableColumn
sapIngQosQueueStatsForwardedInProfPackets = _SapIngQosQueueStatsForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 10),
    _SapIngQosQueueStatsForwardedInProfPackets_Type()
)
sapIngQosQueueStatsForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsForwardedInProfPackets.setStatus("current")
_SapIngQosQueueStatsForwardedOutProfPackets_Type = Counter64
_SapIngQosQueueStatsForwardedOutProfPackets_Object = MibTableColumn
sapIngQosQueueStatsForwardedOutProfPackets = _SapIngQosQueueStatsForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 11),
    _SapIngQosQueueStatsForwardedOutProfPackets_Type()
)
sapIngQosQueueStatsForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsForwardedOutProfPackets.setStatus("current")
_SapIngQosQueueStatsForwardedInProfOctets_Type = Counter64
_SapIngQosQueueStatsForwardedInProfOctets_Object = MibTableColumn
sapIngQosQueueStatsForwardedInProfOctets = _SapIngQosQueueStatsForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 12),
    _SapIngQosQueueStatsForwardedInProfOctets_Type()
)
sapIngQosQueueStatsForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsForwardedInProfOctets.setStatus("current")
_SapIngQosQueueStatsForwardedOutProfOctets_Type = Counter64
_SapIngQosQueueStatsForwardedOutProfOctets_Object = MibTableColumn
sapIngQosQueueStatsForwardedOutProfOctets = _SapIngQosQueueStatsForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 13),
    _SapIngQosQueueStatsForwardedOutProfOctets_Type()
)
sapIngQosQueueStatsForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsForwardedOutProfOctets.setStatus("current")
_SapIngQosCustId_Type = TmnxCustId
_SapIngQosCustId_Object = MibTableColumn
sapIngQosCustId = _SapIngQosCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 14),
    _SapIngQosCustId_Type()
)
sapIngQosCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosCustId.setStatus("current")
_SapIngQosQueueStatsUncoloredPacketsOffered_Type = Counter64
_SapIngQosQueueStatsUncoloredPacketsOffered_Object = MibTableColumn
sapIngQosQueueStatsUncoloredPacketsOffered = _SapIngQosQueueStatsUncoloredPacketsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 15),
    _SapIngQosQueueStatsUncoloredPacketsOffered_Type()
)
sapIngQosQueueStatsUncoloredPacketsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsUncoloredPacketsOffered.setStatus("current")
_SapIngQosQueueStatsUncoloredOctetsOffered_Type = Counter64
_SapIngQosQueueStatsUncoloredOctetsOffered_Object = MibTableColumn
sapIngQosQueueStatsUncoloredOctetsOffered = _SapIngQosQueueStatsUncoloredOctetsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 7, 1, 16),
    _SapIngQosQueueStatsUncoloredOctetsOffered_Type()
)
sapIngQosQueueStatsUncoloredOctetsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueStatsUncoloredOctetsOffered.setStatus("current")
_SapEgrQosQueueStatsTable_Object = MibTable
sapEgrQosQueueStatsTable = _SapEgrQosQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8)
)
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsTable.setStatus("current")
_SapEgrQosQueueStatsEntry_Object = MibTableRow
sapEgrQosQueueStatsEntry = _SapEgrQosQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1)
)
sapEgrQosQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsEntry.setStatus("current")
_SapEgrQosQueueId_Type = TSapEgrQueueId
_SapEgrQosQueueId_Object = MibTableColumn
sapEgrQosQueueId = _SapEgrQosQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 1),
    _SapEgrQosQueueId_Type()
)
sapEgrQosQueueId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueId.setStatus("current")
_SapEgrQosQueueStatsForwardedInProfPackets_Type = Counter64
_SapEgrQosQueueStatsForwardedInProfPackets_Object = MibTableColumn
sapEgrQosQueueStatsForwardedInProfPackets = _SapEgrQosQueueStatsForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 2),
    _SapEgrQosQueueStatsForwardedInProfPackets_Type()
)
sapEgrQosQueueStatsForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsForwardedInProfPackets.setStatus("current")
_SapEgrQosQueueStatsDroppedInProfPackets_Type = Counter64
_SapEgrQosQueueStatsDroppedInProfPackets_Object = MibTableColumn
sapEgrQosQueueStatsDroppedInProfPackets = _SapEgrQosQueueStatsDroppedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 3),
    _SapEgrQosQueueStatsDroppedInProfPackets_Type()
)
sapEgrQosQueueStatsDroppedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsDroppedInProfPackets.setStatus("current")
_SapEgrQosQueueStatsForwardedOutProfPackets_Type = Counter64
_SapEgrQosQueueStatsForwardedOutProfPackets_Object = MibTableColumn
sapEgrQosQueueStatsForwardedOutProfPackets = _SapEgrQosQueueStatsForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 4),
    _SapEgrQosQueueStatsForwardedOutProfPackets_Type()
)
sapEgrQosQueueStatsForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsForwardedOutProfPackets.setStatus("current")
_SapEgrQosQueueStatsDroppedOutProfPackets_Type = Counter64
_SapEgrQosQueueStatsDroppedOutProfPackets_Object = MibTableColumn
sapEgrQosQueueStatsDroppedOutProfPackets = _SapEgrQosQueueStatsDroppedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 5),
    _SapEgrQosQueueStatsDroppedOutProfPackets_Type()
)
sapEgrQosQueueStatsDroppedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsDroppedOutProfPackets.setStatus("current")
_SapEgrQosQueueStatsForwardedInProfOctets_Type = Counter64
_SapEgrQosQueueStatsForwardedInProfOctets_Object = MibTableColumn
sapEgrQosQueueStatsForwardedInProfOctets = _SapEgrQosQueueStatsForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 6),
    _SapEgrQosQueueStatsForwardedInProfOctets_Type()
)
sapEgrQosQueueStatsForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsForwardedInProfOctets.setStatus("current")
_SapEgrQosQueueStatsDroppedInProfOctets_Type = Counter64
_SapEgrQosQueueStatsDroppedInProfOctets_Object = MibTableColumn
sapEgrQosQueueStatsDroppedInProfOctets = _SapEgrQosQueueStatsDroppedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 7),
    _SapEgrQosQueueStatsDroppedInProfOctets_Type()
)
sapEgrQosQueueStatsDroppedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsDroppedInProfOctets.setStatus("current")
_SapEgrQosQueueStatsForwardedOutProfOctets_Type = Counter64
_SapEgrQosQueueStatsForwardedOutProfOctets_Object = MibTableColumn
sapEgrQosQueueStatsForwardedOutProfOctets = _SapEgrQosQueueStatsForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 8),
    _SapEgrQosQueueStatsForwardedOutProfOctets_Type()
)
sapEgrQosQueueStatsForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsForwardedOutProfOctets.setStatus("current")
_SapEgrQosQueueStatsDroppedOutProfOctets_Type = Counter64
_SapEgrQosQueueStatsDroppedOutProfOctets_Object = MibTableColumn
sapEgrQosQueueStatsDroppedOutProfOctets = _SapEgrQosQueueStatsDroppedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 9),
    _SapEgrQosQueueStatsDroppedOutProfOctets_Type()
)
sapEgrQosQueueStatsDroppedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueStatsDroppedOutProfOctets.setStatus("current")
_SapEgrQosCustId_Type = TmnxCustId
_SapEgrQosCustId_Object = MibTableColumn
sapEgrQosCustId = _SapEgrQosCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 10),
    _SapEgrQosCustId_Type()
)
sapEgrQosCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosCustId.setStatus("current")
_SapEgrQosQStatsFwdExdProfPkts_Type = Counter64
_SapEgrQosQStatsFwdExdProfPkts_Object = MibTableColumn
sapEgrQosQStatsFwdExdProfPkts = _SapEgrQosQStatsFwdExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 11),
    _SapEgrQosQStatsFwdExdProfPkts_Type()
)
sapEgrQosQStatsFwdExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdExdProfPkts.setStatus("current")
_SapEgrQosQStatsDrpExdProfPkts_Type = Counter64
_SapEgrQosQStatsDrpExdProfPkts_Object = MibTableColumn
sapEgrQosQStatsDrpExdProfPkts = _SapEgrQosQStatsDrpExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 12),
    _SapEgrQosQStatsDrpExdProfPkts_Type()
)
sapEgrQosQStatsDrpExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpExdProfPkts.setStatus("current")
_SapEgrQosQStatsFwdExdProfOcts_Type = Counter64
_SapEgrQosQStatsFwdExdProfOcts_Object = MibTableColumn
sapEgrQosQStatsFwdExdProfOcts = _SapEgrQosQStatsFwdExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 13),
    _SapEgrQosQStatsFwdExdProfOcts_Type()
)
sapEgrQosQStatsFwdExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdExdProfOcts.setStatus("current")
_SapEgrQosQStatsDrpExdProfOcts_Type = Counter64
_SapEgrQosQStatsDrpExdProfOcts_Object = MibTableColumn
sapEgrQosQStatsDrpExdProfOcts = _SapEgrQosQStatsDrpExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 14),
    _SapEgrQosQStatsDrpExdProfOcts_Type()
)
sapEgrQosQStatsDrpExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpExdProfOcts.setStatus("current")
_SapEgrQosQStatsFwdInPlusProfPkts_Type = Counter64
_SapEgrQosQStatsFwdInPlusProfPkts_Object = MibTableColumn
sapEgrQosQStatsFwdInPlusProfPkts = _SapEgrQosQStatsFwdInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 15),
    _SapEgrQosQStatsFwdInPlusProfPkts_Type()
)
sapEgrQosQStatsFwdInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdInPlusProfPkts.setStatus("current")
_SapEgrQosQStatsDrpInPlusProfPkts_Type = Counter64
_SapEgrQosQStatsDrpInPlusProfPkts_Object = MibTableColumn
sapEgrQosQStatsDrpInPlusProfPkts = _SapEgrQosQStatsDrpInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 16),
    _SapEgrQosQStatsDrpInPlusProfPkts_Type()
)
sapEgrQosQStatsDrpInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpInPlusProfPkts.setStatus("current")
_SapEgrQosQStatsFwdInPlusProfOcts_Type = Counter64
_SapEgrQosQStatsFwdInPlusProfOcts_Object = MibTableColumn
sapEgrQosQStatsFwdInPlusProfOcts = _SapEgrQosQStatsFwdInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 17),
    _SapEgrQosQStatsFwdInPlusProfOcts_Type()
)
sapEgrQosQStatsFwdInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdInPlusProfOcts.setStatus("current")
_SapEgrQosQStatsDrpInPlusProfOcts_Type = Counter64
_SapEgrQosQStatsDrpInPlusProfOcts_Object = MibTableColumn
sapEgrQosQStatsDrpInPlusProfOcts = _SapEgrQosQStatsDrpInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 18),
    _SapEgrQosQStatsDrpInPlusProfOcts_Type()
)
sapEgrQosQStatsDrpInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpInPlusProfOcts.setStatus("current")
_SapEgrQosQStatsFwdPkts_Type = Counter64
_SapEgrQosQStatsFwdPkts_Object = MibTableColumn
sapEgrQosQStatsFwdPkts = _SapEgrQosQStatsFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 19),
    _SapEgrQosQStatsFwdPkts_Type()
)
sapEgrQosQStatsFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdPkts.setStatus("current")
_SapEgrQosQStatsDrpPkts_Type = Counter64
_SapEgrQosQStatsDrpPkts_Object = MibTableColumn
sapEgrQosQStatsDrpPkts = _SapEgrQosQStatsDrpPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 20),
    _SapEgrQosQStatsDrpPkts_Type()
)
sapEgrQosQStatsDrpPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpPkts.setStatus("current")
_SapEgrQosQStatsFwdOcts_Type = Counter64
_SapEgrQosQStatsFwdOcts_Object = MibTableColumn
sapEgrQosQStatsFwdOcts = _SapEgrQosQStatsFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 21),
    _SapEgrQosQStatsFwdOcts_Type()
)
sapEgrQosQStatsFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsFwdOcts.setStatus("current")
_SapEgrQosQStatsDrpOcts_Type = Counter64
_SapEgrQosQStatsDrpOcts_Object = MibTableColumn
sapEgrQosQStatsDrpOcts = _SapEgrQosQStatsDrpOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 8, 1, 22),
    _SapEgrQosQStatsDrpOcts_Type()
)
sapEgrQosQStatsDrpOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQStatsDrpOcts.setStatus("current")
_SapIngQosSchedStatsTable_Object = MibTable
sapIngQosSchedStatsTable = _SapIngQosSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9)
)
if mibBuilder.loadTexts:
    sapIngQosSchedStatsTable.setStatus("current")
_SapIngQosSchedStatsEntry_Object = MibTableRow
sapIngQosSchedStatsEntry = _SapIngQosSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9, 1)
)
sapIngQosSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (1, "TIMETRA-SAP-MIB", "sapIngQosSchedName"),
)
if mibBuilder.loadTexts:
    sapIngQosSchedStatsEntry.setStatus("current")
_SapIngQosSchedName_Type = TNamedItem
_SapIngQosSchedName_Object = MibTableColumn
sapIngQosSchedName = _SapIngQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9, 1, 1),
    _SapIngQosSchedName_Type()
)
sapIngQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosSchedName.setStatus("current")
_SapIngQosSchedStatsForwardedPackets_Type = Counter64
_SapIngQosSchedStatsForwardedPackets_Object = MibTableColumn
sapIngQosSchedStatsForwardedPackets = _SapIngQosSchedStatsForwardedPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9, 1, 2),
    _SapIngQosSchedStatsForwardedPackets_Type()
)
sapIngQosSchedStatsForwardedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosSchedStatsForwardedPackets.setStatus("current")
_SapIngQosSchedStatsForwardedOctets_Type = Counter64
_SapIngQosSchedStatsForwardedOctets_Object = MibTableColumn
sapIngQosSchedStatsForwardedOctets = _SapIngQosSchedStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9, 1, 3),
    _SapIngQosSchedStatsForwardedOctets_Type()
)
sapIngQosSchedStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosSchedStatsForwardedOctets.setStatus("current")
_SapIngQosSchedCustId_Type = TmnxCustId
_SapIngQosSchedCustId_Object = MibTableColumn
sapIngQosSchedCustId = _SapIngQosSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 9, 1, 4),
    _SapIngQosSchedCustId_Type()
)
sapIngQosSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosSchedCustId.setStatus("current")
_SapEgrQosSchedStatsTable_Object = MibTable
sapEgrQosSchedStatsTable = _SapEgrQosSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10)
)
if mibBuilder.loadTexts:
    sapEgrQosSchedStatsTable.setStatus("current")
_SapEgrQosSchedStatsEntry_Object = MibTableRow
sapEgrQosSchedStatsEntry = _SapEgrQosSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10, 1)
)
sapEgrQosSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (1, "TIMETRA-SAP-MIB", "sapEgrQosSchedName"),
)
if mibBuilder.loadTexts:
    sapEgrQosSchedStatsEntry.setStatus("current")
_SapEgrQosSchedName_Type = TNamedItem
_SapEgrQosSchedName_Object = MibTableColumn
sapEgrQosSchedName = _SapEgrQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10, 1, 1),
    _SapEgrQosSchedName_Type()
)
sapEgrQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosSchedName.setStatus("current")
_SapEgrQosSchedStatsForwardedPackets_Type = Counter64
_SapEgrQosSchedStatsForwardedPackets_Object = MibTableColumn
sapEgrQosSchedStatsForwardedPackets = _SapEgrQosSchedStatsForwardedPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10, 1, 2),
    _SapEgrQosSchedStatsForwardedPackets_Type()
)
sapEgrQosSchedStatsForwardedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosSchedStatsForwardedPackets.setStatus("current")
_SapEgrQosSchedStatsForwardedOctets_Type = Counter64
_SapEgrQosSchedStatsForwardedOctets_Object = MibTableColumn
sapEgrQosSchedStatsForwardedOctets = _SapEgrQosSchedStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10, 1, 3),
    _SapEgrQosSchedStatsForwardedOctets_Type()
)
sapEgrQosSchedStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosSchedStatsForwardedOctets.setStatus("current")
_SapEgrQosSchedCustId_Type = TmnxCustId
_SapEgrQosSchedCustId_Object = MibTableColumn
sapEgrQosSchedCustId = _SapEgrQosSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 10, 1, 4),
    _SapEgrQosSchedCustId_Type()
)
sapEgrQosSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosSchedCustId.setStatus("current")
_SapTlsManagedVlanListTable_Object = MibTable
sapTlsManagedVlanListTable = _SapTlsManagedVlanListTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 11)
)
if mibBuilder.loadTexts:
    sapTlsManagedVlanListTable.setStatus("current")
_SapTlsManagedVlanListEntry_Object = MibTableRow
sapTlsManagedVlanListEntry = _SapTlsManagedVlanListEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 11, 1)
)
sapTlsManagedVlanListEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsMvplsMinVlanTag"),
    (0, "TIMETRA-SAP-MIB", "sapTlsMvplsMaxVlanTag"),
)
if mibBuilder.loadTexts:
    sapTlsManagedVlanListEntry.setStatus("current")


class _SapTlsMvplsMinVlanTag_Type(Unsigned32):
    """Custom type sapTlsMvplsMinVlanTag based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_SapTlsMvplsMinVlanTag_Type.__name__ = "Unsigned32"
_SapTlsMvplsMinVlanTag_Object = MibTableColumn
sapTlsMvplsMinVlanTag = _SapTlsMvplsMinVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 11, 1, 1),
    _SapTlsMvplsMinVlanTag_Type()
)
sapTlsMvplsMinVlanTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsMvplsMinVlanTag.setStatus("current")


class _SapTlsMvplsMaxVlanTag_Type(Unsigned32):
    """Custom type sapTlsMvplsMaxVlanTag based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_SapTlsMvplsMaxVlanTag_Type.__name__ = "Unsigned32"
_SapTlsMvplsMaxVlanTag_Object = MibTableColumn
sapTlsMvplsMaxVlanTag = _SapTlsMvplsMaxVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 11, 1, 2),
    _SapTlsMvplsMaxVlanTag_Type()
)
sapTlsMvplsMaxVlanTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsMvplsMaxVlanTag.setStatus("current")
_SapTlsMvplsRowStatus_Type = RowStatus
_SapTlsMvplsRowStatus_Object = MibTableColumn
sapTlsMvplsRowStatus = _SapTlsMvplsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 11, 1, 3),
    _SapTlsMvplsRowStatus_Type()
)
sapTlsMvplsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsMvplsRowStatus.setStatus("current")
_SapAntiSpoofTable_Object = MibTable
sapAntiSpoofTable = _SapAntiSpoofTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 12)
)
if mibBuilder.loadTexts:
    sapAntiSpoofTable.setStatus("obsolete")
_SapAntiSpoofEntry_Object = MibTableRow
sapAntiSpoofEntry = _SapAntiSpoofEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 12, 1)
)
sapAntiSpoofEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapAntiSpoofIpAddress"),
    (0, "TIMETRA-SAP-MIB", "sapAntiSpoofMacAddress"),
)
if mibBuilder.loadTexts:
    sapAntiSpoofEntry.setStatus("obsolete")
_SapAntiSpoofIpAddress_Type = IpAddress
_SapAntiSpoofIpAddress_Object = MibTableColumn
sapAntiSpoofIpAddress = _SapAntiSpoofIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 12, 1, 1),
    _SapAntiSpoofIpAddress_Type()
)
sapAntiSpoofIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAntiSpoofIpAddress.setStatus("obsolete")
_SapAntiSpoofMacAddress_Type = MacAddress
_SapAntiSpoofMacAddress_Object = MibTableColumn
sapAntiSpoofMacAddress = _SapAntiSpoofMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 12, 1, 2),
    _SapAntiSpoofMacAddress_Type()
)
sapAntiSpoofMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAntiSpoofMacAddress.setStatus("obsolete")
_SapStaticHostTable_Object = MibTable
sapStaticHostTable = _SapStaticHostTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13)
)
if mibBuilder.loadTexts:
    sapStaticHostTable.setStatus("current")
_SapStaticHostEntry_Object = MibTableRow
sapStaticHostEntry = _SapStaticHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1)
)
sapStaticHostEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostIpAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostMacAddress"),
)
if mibBuilder.loadTexts:
    sapStaticHostEntry.setStatus("current")
_SapStaticHostRowStatus_Type = RowStatus
_SapStaticHostRowStatus_Object = MibTableColumn
sapStaticHostRowStatus = _SapStaticHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 1),
    _SapStaticHostRowStatus_Type()
)
sapStaticHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostRowStatus.setStatus("current")
_SapStaticHostIpAddress_Type = IpAddress
_SapStaticHostIpAddress_Object = MibTableColumn
sapStaticHostIpAddress = _SapStaticHostIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 2),
    _SapStaticHostIpAddress_Type()
)
sapStaticHostIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStaticHostIpAddress.setStatus("current")
_SapStaticHostMacAddress_Type = MacAddress
_SapStaticHostMacAddress_Object = MibTableColumn
sapStaticHostMacAddress = _SapStaticHostMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 3),
    _SapStaticHostMacAddress_Type()
)
sapStaticHostMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStaticHostMacAddress.setStatus("current")


class _SapStaticHostSubscrIdent_Type(TmnxSubIdentStringOrEmpty):
    """Custom type sapStaticHostSubscrIdent based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SapStaticHostSubscrIdent_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SapStaticHostSubscrIdent_Object = MibTableColumn
sapStaticHostSubscrIdent = _SapStaticHostSubscrIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 4),
    _SapStaticHostSubscrIdent_Type()
)
sapStaticHostSubscrIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostSubscrIdent.setStatus("current")


class _SapStaticHostSubProfile_Type(ServObjName):
    """Custom type sapStaticHostSubProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStaticHostSubProfile_Type.__name__ = "ServObjName"
_SapStaticHostSubProfile_Object = MibTableColumn
sapStaticHostSubProfile = _SapStaticHostSubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 5),
    _SapStaticHostSubProfile_Type()
)
sapStaticHostSubProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostSubProfile.setStatus("current")


class _SapStaticHostSlaProfile_Type(ServObjName):
    """Custom type sapStaticHostSlaProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStaticHostSlaProfile_Type.__name__ = "ServObjName"
_SapStaticHostSlaProfile_Object = MibTableColumn
sapStaticHostSlaProfile = _SapStaticHostSlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 6),
    _SapStaticHostSlaProfile_Type()
)
sapStaticHostSlaProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostSlaProfile.setStatus("current")


class _SapStaticHostShcvOperState_Type(Integer32):
    """Custom type sapStaticHostShcvOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("undefined", 2),
          ("down", 3),
          ("up", 4))
    )


_SapStaticHostShcvOperState_Type.__name__ = "Integer32"
_SapStaticHostShcvOperState_Object = MibTableColumn
sapStaticHostShcvOperState = _SapStaticHostShcvOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 7),
    _SapStaticHostShcvOperState_Type()
)
sapStaticHostShcvOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostShcvOperState.setStatus("current")
_SapStaticHostShcvChecks_Type = Unsigned32
_SapStaticHostShcvChecks_Object = MibTableColumn
sapStaticHostShcvChecks = _SapStaticHostShcvChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 8),
    _SapStaticHostShcvChecks_Type()
)
sapStaticHostShcvChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostShcvChecks.setStatus("current")
_SapStaticHostShcvReplies_Type = Unsigned32
_SapStaticHostShcvReplies_Object = MibTableColumn
sapStaticHostShcvReplies = _SapStaticHostShcvReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 9),
    _SapStaticHostShcvReplies_Type()
)
sapStaticHostShcvReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostShcvReplies.setStatus("current")
_SapStaticHostShcvReplyTime_Type = TimeStamp
_SapStaticHostShcvReplyTime_Object = MibTableColumn
sapStaticHostShcvReplyTime = _SapStaticHostShcvReplyTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 10),
    _SapStaticHostShcvReplyTime_Type()
)
sapStaticHostShcvReplyTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostShcvReplyTime.setStatus("current")
_SapStaticHostDynMacAddress_Type = MacAddress
_SapStaticHostDynMacAddress_Object = MibTableColumn
sapStaticHostDynMacAddress = _SapStaticHostDynMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 11),
    _SapStaticHostDynMacAddress_Type()
)
sapStaticHostDynMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostDynMacAddress.setStatus("current")
_SapStaticHostRetailerSvcId_Type = TmnxServId
_SapStaticHostRetailerSvcId_Object = MibTableColumn
sapStaticHostRetailerSvcId = _SapStaticHostRetailerSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 12),
    _SapStaticHostRetailerSvcId_Type()
)
sapStaticHostRetailerSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostRetailerSvcId.setStatus("current")
_SapStaticHostRetailerIf_Type = InterfaceIndexOrZero
_SapStaticHostRetailerIf_Object = MibTableColumn
sapStaticHostRetailerIf = _SapStaticHostRetailerIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 13),
    _SapStaticHostRetailerIf_Type()
)
sapStaticHostRetailerIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostRetailerIf.setStatus("current")
_SapStaticHostFwdingState_Type = TmnxOperState
_SapStaticHostFwdingState_Object = MibTableColumn
sapStaticHostFwdingState = _SapStaticHostFwdingState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 14),
    _SapStaticHostFwdingState_Type()
)
sapStaticHostFwdingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostFwdingState.setStatus("current")


class _SapStaticHostAncpString_Type(TmnxAncpStringOrZero):
    """Custom type sapStaticHostAncpString based on TmnxAncpStringOrZero"""
    defaultValue = OctetString("")


_SapStaticHostAncpString_Type.__name__ = "TmnxAncpStringOrZero"
_SapStaticHostAncpString_Object = MibTableColumn
sapStaticHostAncpString = _SapStaticHostAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 15),
    _SapStaticHostAncpString_Type()
)
sapStaticHostAncpString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostAncpString.setStatus("current")


class _SapStaticHostSubIdIsSapId_Type(TruthValue):
    """Custom type sapStaticHostSubIdIsSapId based on TruthValue"""
    defaultValue = 2


_SapStaticHostSubIdIsSapId_Type.__name__ = "TruthValue"
_SapStaticHostSubIdIsSapId_Object = MibTableColumn
sapStaticHostSubIdIsSapId = _SapStaticHostSubIdIsSapId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 16),
    _SapStaticHostSubIdIsSapId_Type()
)
sapStaticHostSubIdIsSapId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostSubIdIsSapId.setStatus("current")


class _SapStaticHostAppProfile_Type(ServObjName):
    """Custom type sapStaticHostAppProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStaticHostAppProfile_Type.__name__ = "ServObjName"
_SapStaticHostAppProfile_Object = MibTableColumn
sapStaticHostAppProfile = _SapStaticHostAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 17),
    _SapStaticHostAppProfile_Type()
)
sapStaticHostAppProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostAppProfile.setStatus("current")


class _SapStaticHostIntermediateDestId_Type(DisplayString):
    """Custom type sapStaticHostIntermediateDestId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapStaticHostIntermediateDestId_Type.__name__ = "DisplayString"
_SapStaticHostIntermediateDestId_Object = MibTableColumn
sapStaticHostIntermediateDestId = _SapStaticHostIntermediateDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 18),
    _SapStaticHostIntermediateDestId_Type()
)
sapStaticHostIntermediateDestId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostIntermediateDestId.setStatus("current")


class _SapStaticHostAdminStatus_Type(ServiceAdminStatus):
    """Custom type sapStaticHostAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SapStaticHostAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SapStaticHostAdminStatus_Object = MibTableColumn
sapStaticHostAdminStatus = _SapStaticHostAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 19),
    _SapStaticHostAdminStatus_Type()
)
sapStaticHostAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostAdminStatus.setStatus("current")


class _SapStaticHostFilterProfile_Type(TNamedItemOrEmpty):
    """Custom type sapStaticHostFilterProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapStaticHostFilterProfile_Type.__name__ = "TNamedItemOrEmpty"
_SapStaticHostFilterProfile_Object = MibTableColumn
sapStaticHostFilterProfile = _SapStaticHostFilterProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 20),
    _SapStaticHostFilterProfile_Type()
)
sapStaticHostFilterProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostFilterProfile.setStatus("current")


class _SapStaticHostAdminRetailSvcId_Type(TmnxServId):
    """Custom type sapStaticHostAdminRetailSvcId based on TmnxServId"""
    defaultValue = 0


_SapStaticHostAdminRetailSvcId_Type.__name__ = "TmnxServId"
_SapStaticHostAdminRetailSvcId_Object = MibTableColumn
sapStaticHostAdminRetailSvcId = _SapStaticHostAdminRetailSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 21),
    _SapStaticHostAdminRetailSvcId_Type()
)
sapStaticHostAdminRetailSvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostAdminRetailSvcId.setStatus("current")


class _SapStaticHostRipPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapStaticHostRipPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapStaticHostRipPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapStaticHostRipPolicy_Object = MibTableColumn
sapStaticHostRipPolicy = _SapStaticHostRipPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 22),
    _SapStaticHostRipPolicy_Type()
)
sapStaticHostRipPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostRipPolicy.setStatus("current")


class _SapStatHostAppProfileScope_Type(TmnxSapAASubScope):
    """Custom type sapStatHostAppProfileScope based on TmnxSapAASubScope"""
    defaultValue = 1


_SapStatHostAppProfileScope_Type.__name__ = "TmnxSapAASubScope"
_SapStatHostAppProfileScope_Object = MibTableColumn
sapStatHostAppProfileScope = _SapStatHostAppProfileScope_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 13, 1, 23),
    _SapStatHostAppProfileScope_Type()
)
sapStatHostAppProfileScope.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHostAppProfileScope.setStatus("current")
_SapTlsDhcpInfoTable_Object = MibTable
sapTlsDhcpInfoTable = _SapTlsDhcpInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14)
)
if mibBuilder.loadTexts:
    sapTlsDhcpInfoTable.setStatus("current")
_SapTlsDhcpInfoEntry_Object = MibTableRow
sapTlsDhcpInfoEntry = _SapTlsDhcpInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1)
)
sapTlsDhcpInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsDhcpInfoEntry.setStatus("current")


class _SapTlsDhcpAdminState_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcpAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcpAdminState_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcpAdminState_Object = MibTableColumn
sapTlsDhcpAdminState = _SapTlsDhcpAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 1),
    _SapTlsDhcpAdminState_Type()
)
sapTlsDhcpAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpAdminState.setStatus("current")


class _SapTlsDhcpDescription_Type(ServObjDesc):
    """Custom type sapTlsDhcpDescription based on ServObjDesc"""
    defaultHexValue = ""


_SapTlsDhcpDescription_Type.__name__ = "ServObjDesc"
_SapTlsDhcpDescription_Object = MibTableColumn
sapTlsDhcpDescription = _SapTlsDhcpDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 2),
    _SapTlsDhcpDescription_Type()
)
sapTlsDhcpDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpDescription.setStatus("current")


class _SapTlsDhcpSnoop_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcpSnoop based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcpSnoop_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcpSnoop_Object = MibTableColumn
sapTlsDhcpSnoop = _SapTlsDhcpSnoop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 3),
    _SapTlsDhcpSnoop_Type()
)
sapTlsDhcpSnoop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpSnoop.setStatus("current")


class _SapTlsDhcpLeasePopulate_Type(Unsigned32):
    """Custom type sapTlsDhcpLeasePopulate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 131071),
    )


_SapTlsDhcpLeasePopulate_Type.__name__ = "Unsigned32"
_SapTlsDhcpLeasePopulate_Object = MibTableColumn
sapTlsDhcpLeasePopulate = _SapTlsDhcpLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 4),
    _SapTlsDhcpLeasePopulate_Type()
)
sapTlsDhcpLeasePopulate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpLeasePopulate.setStatus("current")


class _SapTlsDhcpOperLeasePopulate_Type(Unsigned32):
    """Custom type sapTlsDhcpOperLeasePopulate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 131071),
    )


_SapTlsDhcpOperLeasePopulate_Type.__name__ = "Unsigned32"
_SapTlsDhcpOperLeasePopulate_Object = MibTableColumn
sapTlsDhcpOperLeasePopulate = _SapTlsDhcpOperLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 5),
    _SapTlsDhcpOperLeasePopulate_Type()
)
sapTlsDhcpOperLeasePopulate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpOperLeasePopulate.setStatus("current")


class _SapTlsDhcpInfoAction_Type(Integer32):
    """Custom type sapTlsDhcpInfoAction based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("replace", 1),
          ("drop", 2),
          ("keep", 3))
    )


_SapTlsDhcpInfoAction_Type.__name__ = "Integer32"
_SapTlsDhcpInfoAction_Object = MibTableColumn
sapTlsDhcpInfoAction = _SapTlsDhcpInfoAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 6),
    _SapTlsDhcpInfoAction_Type()
)
sapTlsDhcpInfoAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpInfoAction.setStatus("current")


class _SapTlsDhcpCircuitId_Type(Integer32):
    """Custom type sapTlsDhcpCircuitId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("asciiTuple", 1),
          ("vlanAsciiTuple", 2),
          ("circuitIdHex", 3))
    )


_SapTlsDhcpCircuitId_Type.__name__ = "Integer32"
_SapTlsDhcpCircuitId_Object = MibTableColumn
sapTlsDhcpCircuitId = _SapTlsDhcpCircuitId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 7),
    _SapTlsDhcpCircuitId_Type()
)
sapTlsDhcpCircuitId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpCircuitId.setStatus("current")


class _SapTlsDhcpRemoteId_Type(Integer32):
    """Custom type sapTlsDhcpRemoteId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("mac", 2),
          ("remoteIdString", 3),
          ("remoteIdHex", 4))
    )


_SapTlsDhcpRemoteId_Type.__name__ = "Integer32"
_SapTlsDhcpRemoteId_Object = MibTableColumn
sapTlsDhcpRemoteId = _SapTlsDhcpRemoteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 8),
    _SapTlsDhcpRemoteId_Type()
)
sapTlsDhcpRemoteId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpRemoteId.setStatus("current")


class _SapTlsDhcpRemoteIdString_Type(DisplayString):
    """Custom type sapTlsDhcpRemoteIdString based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapTlsDhcpRemoteIdString_Type.__name__ = "DisplayString"
_SapTlsDhcpRemoteIdString_Object = MibTableColumn
sapTlsDhcpRemoteIdString = _SapTlsDhcpRemoteIdString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 9),
    _SapTlsDhcpRemoteIdString_Type()
)
sapTlsDhcpRemoteIdString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpRemoteIdString.setStatus("current")


class _SapTlsDhcpProxyAdminState_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcpProxyAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcpProxyAdminState_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcpProxyAdminState_Object = MibTableColumn
sapTlsDhcpProxyAdminState = _SapTlsDhcpProxyAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 10),
    _SapTlsDhcpProxyAdminState_Type()
)
sapTlsDhcpProxyAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpProxyAdminState.setStatus("current")


class _SapTlsDhcpProxyServerAddr_Type(IpAddress):
    """Custom type sapTlsDhcpProxyServerAddr based on IpAddress"""
    defaultHexValue = "00000000"


_SapTlsDhcpProxyServerAddr_Type.__name__ = "IpAddress"
_SapTlsDhcpProxyServerAddr_Object = MibTableColumn
sapTlsDhcpProxyServerAddr = _SapTlsDhcpProxyServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 11),
    _SapTlsDhcpProxyServerAddr_Type()
)
sapTlsDhcpProxyServerAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpProxyServerAddr.setStatus("current")


class _SapTlsDhcpProxyLeaseTime_Type(Unsigned32):
    """Custom type sapTlsDhcpProxyLeaseTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(300, 315446399),
    )


_SapTlsDhcpProxyLeaseTime_Type.__name__ = "Unsigned32"
_SapTlsDhcpProxyLeaseTime_Object = MibTableColumn
sapTlsDhcpProxyLeaseTime = _SapTlsDhcpProxyLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 12),
    _SapTlsDhcpProxyLeaseTime_Type()
)
sapTlsDhcpProxyLeaseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpProxyLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsDhcpProxyLeaseTime.setUnits("seconds")


class _SapTlsDhcpProxyLTRadiusOverride_Type(TruthValue):
    """Custom type sapTlsDhcpProxyLTRadiusOverride based on TruthValue"""
    defaultValue = 2


_SapTlsDhcpProxyLTRadiusOverride_Type.__name__ = "TruthValue"
_SapTlsDhcpProxyLTRadiusOverride_Object = MibTableColumn
sapTlsDhcpProxyLTRadiusOverride = _SapTlsDhcpProxyLTRadiusOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 13),
    _SapTlsDhcpProxyLTRadiusOverride_Type()
)
sapTlsDhcpProxyLTRadiusOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpProxyLTRadiusOverride.setStatus("current")


class _SapTlsDhcpVendorIncludeOptions_Type(Bits):
    """Custom type sapTlsDhcpVendorIncludeOptions based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("systemId", 0),
          ("clientMac", 1),
          ("serviceId", 2),
          ("sapId", 3))
    )

_SapTlsDhcpVendorIncludeOptions_Type.__name__ = "Bits"
_SapTlsDhcpVendorIncludeOptions_Object = MibTableColumn
sapTlsDhcpVendorIncludeOptions = _SapTlsDhcpVendorIncludeOptions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 14),
    _SapTlsDhcpVendorIncludeOptions_Type()
)
sapTlsDhcpVendorIncludeOptions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpVendorIncludeOptions.setStatus("current")


class _SapTlsDhcpVendorOptionString_Type(DisplayString):
    """Custom type sapTlsDhcpVendorOptionString based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapTlsDhcpVendorOptionString_Type.__name__ = "DisplayString"
_SapTlsDhcpVendorOptionString_Object = MibTableColumn
sapTlsDhcpVendorOptionString = _SapTlsDhcpVendorOptionString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 15),
    _SapTlsDhcpVendorOptionString_Type()
)
sapTlsDhcpVendorOptionString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpVendorOptionString.setStatus("current")


class _SapTlsDhcpRemoteIdHex_Type(OctetString):
    """Custom type sapTlsDhcpRemoteIdHex based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapTlsDhcpRemoteIdHex_Type.__name__ = "OctetString"
_SapTlsDhcpRemoteIdHex_Object = MibTableColumn
sapTlsDhcpRemoteIdHex = _SapTlsDhcpRemoteIdHex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 16),
    _SapTlsDhcpRemoteIdHex_Type()
)
sapTlsDhcpRemoteIdHex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpRemoteIdHex.setStatus("current")


class _SapTlsDhcpCircuitIdHex_Type(OctetString):
    """Custom type sapTlsDhcpCircuitIdHex based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapTlsDhcpCircuitIdHex_Type.__name__ = "OctetString"
_SapTlsDhcpCircuitIdHex_Object = MibTableColumn
sapTlsDhcpCircuitIdHex = _SapTlsDhcpCircuitIdHex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 14, 1, 17),
    _SapTlsDhcpCircuitIdHex_Type()
)
sapTlsDhcpCircuitIdHex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcpCircuitIdHex.setStatus("current")
_SapTlsDhcpStatsTable_Object = MibTable
sapTlsDhcpStatsTable = _SapTlsDhcpStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15)
)
if mibBuilder.loadTexts:
    sapTlsDhcpStatsTable.setStatus("current")
_SapTlsDhcpStatsEntry_Object = MibTableRow
sapTlsDhcpStatsEntry = _SapTlsDhcpStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1)
)
sapTlsDhcpStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsDhcpStatsEntry.setStatus("current")
_SapTlsDhcpStatsClntSnoopdPckts_Type = Counter32
_SapTlsDhcpStatsClntSnoopdPckts_Object = MibTableColumn
sapTlsDhcpStatsClntSnoopdPckts = _SapTlsDhcpStatsClntSnoopdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 1),
    _SapTlsDhcpStatsClntSnoopdPckts_Type()
)
sapTlsDhcpStatsClntSnoopdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntSnoopdPckts.setStatus("current")
_SapTlsDhcpStatsSrvrSnoopdPckts_Type = Counter32
_SapTlsDhcpStatsSrvrSnoopdPckts_Object = MibTableColumn
sapTlsDhcpStatsSrvrSnoopdPckts = _SapTlsDhcpStatsSrvrSnoopdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 2),
    _SapTlsDhcpStatsSrvrSnoopdPckts_Type()
)
sapTlsDhcpStatsSrvrSnoopdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsSrvrSnoopdPckts.setStatus("current")
_SapTlsDhcpStatsClntForwdPckts_Type = Counter32
_SapTlsDhcpStatsClntForwdPckts_Object = MibTableColumn
sapTlsDhcpStatsClntForwdPckts = _SapTlsDhcpStatsClntForwdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 3),
    _SapTlsDhcpStatsClntForwdPckts_Type()
)
sapTlsDhcpStatsClntForwdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntForwdPckts.setStatus("current")
_SapTlsDhcpStatsSrvrForwdPckts_Type = Counter32
_SapTlsDhcpStatsSrvrForwdPckts_Object = MibTableColumn
sapTlsDhcpStatsSrvrForwdPckts = _SapTlsDhcpStatsSrvrForwdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 4),
    _SapTlsDhcpStatsSrvrForwdPckts_Type()
)
sapTlsDhcpStatsSrvrForwdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsSrvrForwdPckts.setStatus("current")
_SapTlsDhcpStatsClntDropdPckts_Type = Counter32
_SapTlsDhcpStatsClntDropdPckts_Object = MibTableColumn
sapTlsDhcpStatsClntDropdPckts = _SapTlsDhcpStatsClntDropdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 5),
    _SapTlsDhcpStatsClntDropdPckts_Type()
)
sapTlsDhcpStatsClntDropdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntDropdPckts.setStatus("current")
_SapTlsDhcpStatsSrvrDropdPckts_Type = Counter32
_SapTlsDhcpStatsSrvrDropdPckts_Object = MibTableColumn
sapTlsDhcpStatsSrvrDropdPckts = _SapTlsDhcpStatsSrvrDropdPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 6),
    _SapTlsDhcpStatsSrvrDropdPckts_Type()
)
sapTlsDhcpStatsSrvrDropdPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsSrvrDropdPckts.setStatus("current")
_SapTlsDhcpStatsClntProxRadPckts_Type = Counter32
_SapTlsDhcpStatsClntProxRadPckts_Object = MibTableColumn
sapTlsDhcpStatsClntProxRadPckts = _SapTlsDhcpStatsClntProxRadPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 7),
    _SapTlsDhcpStatsClntProxRadPckts_Type()
)
sapTlsDhcpStatsClntProxRadPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntProxRadPckts.setStatus("current")
_SapTlsDhcpStatsClntProxLSPckts_Type = Counter32
_SapTlsDhcpStatsClntProxLSPckts_Object = MibTableColumn
sapTlsDhcpStatsClntProxLSPckts = _SapTlsDhcpStatsClntProxLSPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 8),
    _SapTlsDhcpStatsClntProxLSPckts_Type()
)
sapTlsDhcpStatsClntProxLSPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntProxLSPckts.setStatus("current")
_SapTlsDhcpStatsGenReleasePckts_Type = Counter32
_SapTlsDhcpStatsGenReleasePckts_Object = MibTableColumn
sapTlsDhcpStatsGenReleasePckts = _SapTlsDhcpStatsGenReleasePckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 9),
    _SapTlsDhcpStatsGenReleasePckts_Type()
)
sapTlsDhcpStatsGenReleasePckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsGenReleasePckts.setStatus("current")
_SapTlsDhcpStatsGenForceRenPckts_Type = Counter32
_SapTlsDhcpStatsGenForceRenPckts_Object = MibTableColumn
sapTlsDhcpStatsGenForceRenPckts = _SapTlsDhcpStatsGenForceRenPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 10),
    _SapTlsDhcpStatsGenForceRenPckts_Type()
)
sapTlsDhcpStatsGenForceRenPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsGenForceRenPckts.setStatus("current")
_SapTlsDhcpStatsClntProxUDBPckts_Type = Counter32
_SapTlsDhcpStatsClntProxUDBPckts_Object = MibTableColumn
sapTlsDhcpStatsClntProxUDBPckts = _SapTlsDhcpStatsClntProxUDBPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 11),
    _SapTlsDhcpStatsClntProxUDBPckts_Type()
)
sapTlsDhcpStatsClntProxUDBPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntProxUDBPckts.setStatus("current")
_SapTlsDhcpStatsClntProxNqPckts_Type = Counter32
_SapTlsDhcpStatsClntProxNqPckts_Object = MibTableColumn
sapTlsDhcpStatsClntProxNqPckts = _SapTlsDhcpStatsClntProxNqPckts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 15, 1, 12),
    _SapTlsDhcpStatsClntProxNqPckts_Type()
)
sapTlsDhcpStatsClntProxNqPckts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpStatsClntProxNqPckts.setStatus("current")
_SapTlsDhcpLeaseStateTable_Object = MibTable
sapTlsDhcpLeaseStateTable = _SapTlsDhcpLeaseStateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16)
)
if mibBuilder.loadTexts:
    sapTlsDhcpLeaseStateTable.setStatus("obsolete")
_SapTlsDhcpLeaseStateEntry_Object = MibTableRow
sapTlsDhcpLeaseStateEntry = _SapTlsDhcpLeaseStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1)
)
sapTlsDhcpLeaseStateEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsDhcpLseStateCiAddr"),
    (0, "TIMETRA-SAP-MIB", "sapTlsDhcpLseStateChAddr"),
)
if mibBuilder.loadTexts:
    sapTlsDhcpLeaseStateEntry.setStatus("obsolete")
_SapTlsDhcpLseStateCiAddr_Type = IpAddress
_SapTlsDhcpLseStateCiAddr_Object = MibTableColumn
sapTlsDhcpLseStateCiAddr = _SapTlsDhcpLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1, 1),
    _SapTlsDhcpLseStateCiAddr_Type()
)
sapTlsDhcpLseStateCiAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsDhcpLseStateCiAddr.setStatus("obsolete")
_SapTlsDhcpLseStateChAddr_Type = MacAddress
_SapTlsDhcpLseStateChAddr_Object = MibTableColumn
sapTlsDhcpLseStateChAddr = _SapTlsDhcpLseStateChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1, 2),
    _SapTlsDhcpLseStateChAddr_Type()
)
sapTlsDhcpLseStateChAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsDhcpLseStateChAddr.setStatus("obsolete")
_SapTlsDhcpLseStateRemainLseTime_Type = Unsigned32
_SapTlsDhcpLseStateRemainLseTime_Object = MibTableColumn
sapTlsDhcpLseStateRemainLseTime = _SapTlsDhcpLseStateRemainLseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1, 3),
    _SapTlsDhcpLseStateRemainLseTime_Type()
)
sapTlsDhcpLseStateRemainLseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpLseStateRemainLseTime.setStatus("obsolete")
_SapTlsDhcpLseStateOption82_Type = OctetString
_SapTlsDhcpLseStateOption82_Object = MibTableColumn
sapTlsDhcpLseStateOption82 = _SapTlsDhcpLseStateOption82_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1, 4),
    _SapTlsDhcpLseStateOption82_Type()
)
sapTlsDhcpLseStateOption82.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpLseStateOption82.setStatus("obsolete")
_SapTlsDhcpLseStatePersistKey_Type = Unsigned32
_SapTlsDhcpLseStatePersistKey_Object = MibTableColumn
sapTlsDhcpLseStatePersistKey = _SapTlsDhcpLseStatePersistKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 16, 1, 5),
    _SapTlsDhcpLseStatePersistKey_Type()
)
sapTlsDhcpLseStatePersistKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsDhcpLseStatePersistKey.setStatus("obsolete")
_SapPortIdIngQosSchedStatsTable_Object = MibTable
sapPortIdIngQosSchedStatsTable = _SapPortIdIngQosSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17)
)
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedStatsTable.setStatus("current")
_SapPortIdIngQosSchedStatsEntry_Object = MibTableRow
sapPortIdIngQosSchedStatsEntry = _SapPortIdIngQosSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1)
)
sapPortIdIngQosSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdIngQosSchedName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdIngPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedStatsEntry.setStatus("current")
_SapPortIdIngQosSchedName_Type = TNamedItem
_SapPortIdIngQosSchedName_Object = MibTableColumn
sapPortIdIngQosSchedName = _SapPortIdIngQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1, 1),
    _SapPortIdIngQosSchedName_Type()
)
sapPortIdIngQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedName.setStatus("current")
_SapPortIdIngPortId_Type = TmnxPortID
_SapPortIdIngPortId_Object = MibTableColumn
sapPortIdIngPortId = _SapPortIdIngPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1, 2),
    _SapPortIdIngPortId_Type()
)
sapPortIdIngPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdIngPortId.setStatus("current")
_SapPortIdIngQosSchedFwdPkts_Type = Counter64
_SapPortIdIngQosSchedFwdPkts_Object = MibTableColumn
sapPortIdIngQosSchedFwdPkts = _SapPortIdIngQosSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1, 3),
    _SapPortIdIngQosSchedFwdPkts_Type()
)
sapPortIdIngQosSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedFwdPkts.setStatus("current")
_SapPortIdIngQosSchedFwdOctets_Type = Counter64
_SapPortIdIngQosSchedFwdOctets_Object = MibTableColumn
sapPortIdIngQosSchedFwdOctets = _SapPortIdIngQosSchedFwdOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1, 4),
    _SapPortIdIngQosSchedFwdOctets_Type()
)
sapPortIdIngQosSchedFwdOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedFwdOctets.setStatus("current")
_SapPortIdIngQosSchedCustId_Type = TmnxCustId
_SapPortIdIngQosSchedCustId_Object = MibTableColumn
sapPortIdIngQosSchedCustId = _SapPortIdIngQosSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 17, 1, 5),
    _SapPortIdIngQosSchedCustId_Type()
)
sapPortIdIngQosSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosSchedCustId.setStatus("current")
_SapPortIdEgrQosSchedStatsTable_Object = MibTable
sapPortIdEgrQosSchedStatsTable = _SapPortIdEgrQosSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18)
)
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedStatsTable.setStatus("current")
_SapPortIdEgrQosSchedStatsEntry_Object = MibTableRow
sapPortIdEgrQosSchedStatsEntry = _SapPortIdEgrQosSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1)
)
sapPortIdEgrQosSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrQosSchedName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedStatsEntry.setStatus("current")
_SapPortIdEgrQosSchedName_Type = TNamedItem
_SapPortIdEgrQosSchedName_Object = MibTableColumn
sapPortIdEgrQosSchedName = _SapPortIdEgrQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1, 1),
    _SapPortIdEgrQosSchedName_Type()
)
sapPortIdEgrQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedName.setStatus("current")
_SapPortIdEgrPortId_Type = TmnxPortID
_SapPortIdEgrPortId_Object = MibTableColumn
sapPortIdEgrPortId = _SapPortIdEgrPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1, 2),
    _SapPortIdEgrPortId_Type()
)
sapPortIdEgrPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdEgrPortId.setStatus("current")
_SapPortIdEgrQosSchedFwdPkts_Type = Counter64
_SapPortIdEgrQosSchedFwdPkts_Object = MibTableColumn
sapPortIdEgrQosSchedFwdPkts = _SapPortIdEgrQosSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1, 3),
    _SapPortIdEgrQosSchedFwdPkts_Type()
)
sapPortIdEgrQosSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedFwdPkts.setStatus("current")
_SapPortIdEgrQosSchedFwdOctets_Type = Counter64
_SapPortIdEgrQosSchedFwdOctets_Object = MibTableColumn
sapPortIdEgrQosSchedFwdOctets = _SapPortIdEgrQosSchedFwdOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1, 4),
    _SapPortIdEgrQosSchedFwdOctets_Type()
)
sapPortIdEgrQosSchedFwdOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedFwdOctets.setStatus("current")
_SapPortIdEgrQosSchedCustId_Type = TmnxCustId
_SapPortIdEgrQosSchedCustId_Object = MibTableColumn
sapPortIdEgrQosSchedCustId = _SapPortIdEgrQosSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 18, 1, 5),
    _SapPortIdEgrQosSchedCustId_Type()
)
sapPortIdEgrQosSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosSchedCustId.setStatus("current")
_SapIngQosQueueInfoTable_Object = MibTable
sapIngQosQueueInfoTable = _SapIngQosQueueInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19)
)
if mibBuilder.loadTexts:
    sapIngQosQueueInfoTable.setStatus("current")
_SapIngQosQueueInfoEntry_Object = MibTableRow
sapIngQosQueueInfoEntry = _SapIngQosQueueInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1)
)
sapIngQosQueueInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosQId"),
)
if mibBuilder.loadTexts:
    sapIngQosQueueInfoEntry.setStatus("current")
_SapIngQosQId_Type = TIngressQueueId
_SapIngQosQId_Object = MibTableColumn
sapIngQosQId = _SapIngQosQId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 1),
    _SapIngQosQId_Type()
)
sapIngQosQId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosQId.setStatus("current")
_SapIngQosQRowStatus_Type = RowStatus
_SapIngQosQRowStatus_Object = MibTableColumn
sapIngQosQRowStatus = _SapIngQosQRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 2),
    _SapIngQosQRowStatus_Type()
)
sapIngQosQRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQRowStatus.setStatus("current")
_SapIngQosQLastMgmtChange_Type = TimeStamp
_SapIngQosQLastMgmtChange_Object = MibTableColumn
sapIngQosQLastMgmtChange = _SapIngQosQLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 3),
    _SapIngQosQLastMgmtChange_Type()
)
sapIngQosQLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQLastMgmtChange.setStatus("current")
_SapIngQosQOverrideFlags_Type = TQosQueueAttribute
_SapIngQosQOverrideFlags_Object = MibTableColumn
sapIngQosQOverrideFlags = _SapIngQosQOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 4),
    _SapIngQosQOverrideFlags_Type()
)
sapIngQosQOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQOverrideFlags.setStatus("current")


class _SapIngQosQCBS_Type(TBurstSize):
    """Custom type sapIngQosQCBS based on TBurstSize"""
    defaultValue = -1


_SapIngQosQCBS_Type.__name__ = "TBurstSize"
_SapIngQosQCBS_Object = MibTableColumn
sapIngQosQCBS = _SapIngQosQCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 5),
    _SapIngQosQCBS_Type()
)
sapIngQosQCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQCBS.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQCBS.setUnits("kilobytes")


class _SapIngQosQMBS_Type(TBurstSize):
    """Custom type sapIngQosQMBS based on TBurstSize"""
    defaultValue = -1


_SapIngQosQMBS_Type.__name__ = "TBurstSize"
_SapIngQosQMBS_Object = MibTableColumn
sapIngQosQMBS = _SapIngQosQMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 6),
    _SapIngQosQMBS_Type()
)
sapIngQosQMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQMBS.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosQMBS.setUnits("kilobytes")


class _SapIngQosQHiPrioOnly_Type(TBurstPercentOrDefault):
    """Custom type sapIngQosQHiPrioOnly based on TBurstPercentOrDefault"""
    defaultValue = -1


_SapIngQosQHiPrioOnly_Type.__name__ = "TBurstPercentOrDefault"
_SapIngQosQHiPrioOnly_Object = MibTableColumn
sapIngQosQHiPrioOnly = _SapIngQosQHiPrioOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 7),
    _SapIngQosQHiPrioOnly_Type()
)
sapIngQosQHiPrioOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQHiPrioOnly.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosQHiPrioOnly.setUnits("percent")


class _SapIngQosQCIRAdaptation_Type(TAdaptationRule):
    """Custom type sapIngQosQCIRAdaptation based on TAdaptationRule"""
    defaultValue = 3


_SapIngQosQCIRAdaptation_Type.__name__ = "TAdaptationRule"
_SapIngQosQCIRAdaptation_Object = MibTableColumn
sapIngQosQCIRAdaptation = _SapIngQosQCIRAdaptation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 8),
    _SapIngQosQCIRAdaptation_Type()
)
sapIngQosQCIRAdaptation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQCIRAdaptation.setStatus("current")


class _SapIngQosQPIRAdaptation_Type(TAdaptationRule):
    """Custom type sapIngQosQPIRAdaptation based on TAdaptationRule"""
    defaultValue = 3


_SapIngQosQPIRAdaptation_Type.__name__ = "TAdaptationRule"
_SapIngQosQPIRAdaptation_Object = MibTableColumn
sapIngQosQPIRAdaptation = _SapIngQosQPIRAdaptation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 9),
    _SapIngQosQPIRAdaptation_Type()
)
sapIngQosQPIRAdaptation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQPIRAdaptation.setStatus("current")


class _SapIngQosQAdminPIR_Type(TQosQueuePIRRate):
    """Custom type sapIngQosQAdminPIR based on TQosQueuePIRRate"""
    defaultValue = -1


_SapIngQosQAdminPIR_Type.__name__ = "TQosQueuePIRRate"
_SapIngQosQAdminPIR_Object = MibTableColumn
sapIngQosQAdminPIR = _SapIngQosQAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 10),
    _SapIngQosQAdminPIR_Type()
)
sapIngQosQAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIR.setUnits("kilo bits per second")


class _SapIngQosQAdminCIR_Type(TQosQueueCIRRate):
    """Custom type sapIngQosQAdminCIR based on TQosQueueCIRRate"""
    defaultValue = -1


_SapIngQosQAdminCIR_Type.__name__ = "TQosQueueCIRRate"
_SapIngQosQAdminCIR_Object = MibTableColumn
sapIngQosQAdminCIR = _SapIngQosQAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 11),
    _SapIngQosQAdminCIR_Type()
)
sapIngQosQAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIR.setUnits("kilo bits per second")


class _SapIngQosQMBSBytes_Type(TBurstSizeBytes):
    """Custom type sapIngQosQMBSBytes based on TBurstSizeBytes"""
    defaultValue = -1


_SapIngQosQMBSBytes_Type.__name__ = "TBurstSizeBytes"
_SapIngQosQMBSBytes_Object = MibTableColumn
sapIngQosQMBSBytes = _SapIngQosQMBSBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 12),
    _SapIngQosQMBSBytes_Type()
)
sapIngQosQMBSBytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQMBSBytes.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQMBSBytes.setUnits("bytes")


class _SapIngQosQWeight_Type(TWeight):
    """Custom type sapIngQosQWeight based on TWeight"""
    defaultValue = 1


_SapIngQosQWeight_Type.__name__ = "TWeight"
_SapIngQosQWeight_Object = MibTableColumn
sapIngQosQWeight = _SapIngQosQWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 13),
    _SapIngQosQWeight_Type()
)
sapIngQosQWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQWeight.setStatus("current")


class _SapIngQosQCIRWeight_Type(TWeight):
    """Custom type sapIngQosQCIRWeight based on TWeight"""
    defaultValue = 1


_SapIngQosQCIRWeight_Type.__name__ = "TWeight"
_SapIngQosQCIRWeight_Object = MibTableColumn
sapIngQosQCIRWeight = _SapIngQosQCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 14),
    _SapIngQosQCIRWeight_Type()
)
sapIngQosQCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQCIRWeight.setStatus("current")


class _SapIngQosQAdminPIRPercent_Type(Unsigned32):
    """Custom type sapIngQosQAdminPIRPercent based on Unsigned32"""
    defaultValue = 10000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_SapIngQosQAdminPIRPercent_Type.__name__ = "Unsigned32"
_SapIngQosQAdminPIRPercent_Object = MibTableColumn
sapIngQosQAdminPIRPercent = _SapIngQosQAdminPIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 15),
    _SapIngQosQAdminPIRPercent_Type()
)
sapIngQosQAdminPIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRPercent.setUnits("centipercent")


class _SapIngQosQAdminCIRPercent_Type(Unsigned32):
    """Custom type sapIngQosQAdminCIRPercent based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQAdminCIRPercent_Type.__name__ = "Unsigned32"
_SapIngQosQAdminCIRPercent_Object = MibTableColumn
sapIngQosQAdminCIRPercent = _SapIngQosQAdminCIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 16),
    _SapIngQosQAdminCIRPercent_Type()
)
sapIngQosQAdminCIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRPercent.setUnits("centipercent")


class _SapIngQosQMonitorDepth_Type(TruthValue):
    """Custom type sapIngQosQMonitorDepth based on TruthValue"""
    defaultValue = 2


_SapIngQosQMonitorDepth_Type.__name__ = "TruthValue"
_SapIngQosQMonitorDepth_Object = MibTableColumn
sapIngQosQMonitorDepth = _SapIngQosQMonitorDepth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 17),
    _SapIngQosQMonitorDepth_Type()
)
sapIngQosQMonitorDepth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQMonitorDepth.setStatus("obsolete")


class _SapIngQosQDrpTailLowReductnMbs_Type(TBurstPercentOrDefault):
    """Custom type sapIngQosQDrpTailLowReductnMbs based on TBurstPercentOrDefault"""
    defaultValue = -1


_SapIngQosQDrpTailLowReductnMbs_Type.__name__ = "TBurstPercentOrDefault"
_SapIngQosQDrpTailLowReductnMbs_Object = MibTableColumn
sapIngQosQDrpTailLowReductnMbs = _SapIngQosQDrpTailLowReductnMbs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 18),
    _SapIngQosQDrpTailLowReductnMbs_Type()
)
sapIngQosQDrpTailLowReductnMbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQDrpTailLowReductnMbs.setStatus("current")


class _SapIngQosQAdminPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngQosQAdminPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngQosQAdminPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngQosQAdminPIRHi_Object = MibTableColumn
sapIngQosQAdminPIRHi = _SapIngQosQAdminPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 19),
    _SapIngQosQAdminPIRHi_Type()
)
sapIngQosQAdminPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRHi.setUnits("kilo bits per second")


class _SapIngQosQAdminPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngQosQAdminPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapIngQosQAdminPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngQosQAdminPIRLo_Object = MibTableColumn
sapIngQosQAdminPIRLo = _SapIngQosQAdminPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 20),
    _SapIngQosQAdminPIRLo_Type()
)
sapIngQosQAdminPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminPIRLo.setUnits("kilo bits per second")


class _SapIngQosQAdminCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngQosQAdminCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 0


_SapIngQosQAdminCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngQosQAdminCIRHi_Object = MibTableColumn
sapIngQosQAdminCIRHi = _SapIngQosQAdminCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 21),
    _SapIngQosQAdminCIRHi_Type()
)
sapIngQosQAdminCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRHi.setUnits("kilo bits per second")


class _SapIngQosQAdminCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngQosQAdminCIRLo based on TmnxQosRateLow32"""
    defaultValue = 0


_SapIngQosQAdminCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngQosQAdminCIRLo_Object = MibTableColumn
sapIngQosQAdminCIRLo = _SapIngQosQAdminCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 22),
    _SapIngQosQAdminCIRLo_Type()
)
sapIngQosQAdminCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQAdminCIRLo.setUnits("kilo bits per second")


class _SapIngQosQMonitorQueueDepth_Type(TruthValue):
    """Custom type sapIngQosQMonitorQueueDepth based on TruthValue"""
    defaultValue = 2


_SapIngQosQMonitorQueueDepth_Type.__name__ = "TruthValue"
_SapIngQosQMonitorQueueDepth_Object = MibTableColumn
sapIngQosQMonitorQueueDepth = _SapIngQosQMonitorQueueDepth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 23),
    _SapIngQosQMonitorQueueDepth_Type()
)
sapIngQosQMonitorQueueDepth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQMonitorQueueDepth.setStatus("current")


class _SapIngQosQFastPolling_Type(TruthValue):
    """Custom type sapIngQosQFastPolling based on TruthValue"""
    defaultValue = 2


_SapIngQosQFastPolling_Type.__name__ = "TruthValue"
_SapIngQosQFastPolling_Object = MibTableColumn
sapIngQosQFastPolling = _SapIngQosQFastPolling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 19, 1, 24),
    _SapIngQosQFastPolling_Type()
)
sapIngQosQFastPolling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosQFastPolling.setStatus("current")
_SapEgrQosQueueInfoTable_Object = MibTable
sapEgrQosQueueInfoTable = _SapEgrQosQueueInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20)
)
if mibBuilder.loadTexts:
    sapEgrQosQueueInfoTable.setStatus("current")
_SapEgrQosQueueInfoEntry_Object = MibTableRow
sapEgrQosQueueInfoEntry = _SapEgrQosQueueInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1)
)
sapEgrQosQueueInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosQId"),
)
if mibBuilder.loadTexts:
    sapEgrQosQueueInfoEntry.setStatus("current")
_SapEgrQosQId_Type = TEgressQueueId
_SapEgrQosQId_Object = MibTableColumn
sapEgrQosQId = _SapEgrQosQId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 1),
    _SapEgrQosQId_Type()
)
sapEgrQosQId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosQId.setStatus("current")
_SapEgrQosQRowStatus_Type = RowStatus
_SapEgrQosQRowStatus_Object = MibTableColumn
sapEgrQosQRowStatus = _SapEgrQosQRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 2),
    _SapEgrQosQRowStatus_Type()
)
sapEgrQosQRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQRowStatus.setStatus("current")
_SapEgrQosQLastMgmtChange_Type = TimeStamp
_SapEgrQosQLastMgmtChange_Object = MibTableColumn
sapEgrQosQLastMgmtChange = _SapEgrQosQLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 3),
    _SapEgrQosQLastMgmtChange_Type()
)
sapEgrQosQLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQLastMgmtChange.setStatus("current")
_SapEgrQosQOverrideFlags_Type = TQosQueueAttribute
_SapEgrQosQOverrideFlags_Object = MibTableColumn
sapEgrQosQOverrideFlags = _SapEgrQosQOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 4),
    _SapEgrQosQOverrideFlags_Type()
)
sapEgrQosQOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQOverrideFlags.setStatus("current")


class _SapEgrQosQCBS_Type(TBurstSize):
    """Custom type sapEgrQosQCBS based on TBurstSize"""
    defaultValue = -1


_SapEgrQosQCBS_Type.__name__ = "TBurstSize"
_SapEgrQosQCBS_Object = MibTableColumn
sapEgrQosQCBS = _SapEgrQosQCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 5),
    _SapEgrQosQCBS_Type()
)
sapEgrQosQCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQCBS.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQCBS.setUnits("kilobytes")


class _SapEgrQosQMBS_Type(TBurstSize):
    """Custom type sapEgrQosQMBS based on TBurstSize"""
    defaultValue = -1


_SapEgrQosQMBS_Type.__name__ = "TBurstSize"
_SapEgrQosQMBS_Object = MibTableColumn
sapEgrQosQMBS = _SapEgrQosQMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 6),
    _SapEgrQosQMBS_Type()
)
sapEgrQosQMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQMBS.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosQMBS.setUnits("kilobytes")


class _SapEgrQosQHiPrioOnly_Type(TBurstPercentOrDefault):
    """Custom type sapEgrQosQHiPrioOnly based on TBurstPercentOrDefault"""
    defaultValue = -1


_SapEgrQosQHiPrioOnly_Type.__name__ = "TBurstPercentOrDefault"
_SapEgrQosQHiPrioOnly_Object = MibTableColumn
sapEgrQosQHiPrioOnly = _SapEgrQosQHiPrioOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 7),
    _SapEgrQosQHiPrioOnly_Type()
)
sapEgrQosQHiPrioOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQHiPrioOnly.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosQHiPrioOnly.setUnits("percent")


class _SapEgrQosQCIRAdaptation_Type(TAdaptationRule):
    """Custom type sapEgrQosQCIRAdaptation based on TAdaptationRule"""
    defaultValue = 3


_SapEgrQosQCIRAdaptation_Type.__name__ = "TAdaptationRule"
_SapEgrQosQCIRAdaptation_Object = MibTableColumn
sapEgrQosQCIRAdaptation = _SapEgrQosQCIRAdaptation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 8),
    _SapEgrQosQCIRAdaptation_Type()
)
sapEgrQosQCIRAdaptation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQCIRAdaptation.setStatus("current")


class _SapEgrQosQPIRAdaptation_Type(TAdaptationRule):
    """Custom type sapEgrQosQPIRAdaptation based on TAdaptationRule"""
    defaultValue = 3


_SapEgrQosQPIRAdaptation_Type.__name__ = "TAdaptationRule"
_SapEgrQosQPIRAdaptation_Object = MibTableColumn
sapEgrQosQPIRAdaptation = _SapEgrQosQPIRAdaptation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 9),
    _SapEgrQosQPIRAdaptation_Type()
)
sapEgrQosQPIRAdaptation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQPIRAdaptation.setStatus("current")


class _SapEgrQosQAdminPIR_Type(TQosQueuePIRRate):
    """Custom type sapEgrQosQAdminPIR based on TQosQueuePIRRate"""
    defaultValue = -1


_SapEgrQosQAdminPIR_Type.__name__ = "TQosQueuePIRRate"
_SapEgrQosQAdminPIR_Object = MibTableColumn
sapEgrQosQAdminPIR = _SapEgrQosQAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 10),
    _SapEgrQosQAdminPIR_Type()
)
sapEgrQosQAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIR.setUnits("kilo bits per second")


class _SapEgrQosQAdminCIR_Type(TQosQueueCIRRate):
    """Custom type sapEgrQosQAdminCIR based on TQosQueueCIRRate"""
    defaultValue = -1


_SapEgrQosQAdminCIR_Type.__name__ = "TQosQueueCIRRate"
_SapEgrQosQAdminCIR_Object = MibTableColumn
sapEgrQosQAdminCIR = _SapEgrQosQAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 11),
    _SapEgrQosQAdminCIR_Type()
)
sapEgrQosQAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIR.setUnits("kilo bits per second")


class _SapEgrQosQAvgOverhead_Type(Unsigned32):
    """Custom type sapEgrQosQAvgOverhead based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQAvgOverhead_Type.__name__ = "Unsigned32"
_SapEgrQosQAvgOverhead_Object = MibTableColumn
sapEgrQosQAvgOverhead = _SapEgrQosQAvgOverhead_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 12),
    _SapEgrQosQAvgOverhead_Type()
)
sapEgrQosQAvgOverhead.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAvgOverhead.setStatus("current")


class _SapEgrQosQMBSBytes_Type(TBurstSizeBytes):
    """Custom type sapEgrQosQMBSBytes based on TBurstSizeBytes"""
    defaultValue = -1


_SapEgrQosQMBSBytes_Type.__name__ = "TBurstSizeBytes"
_SapEgrQosQMBSBytes_Object = MibTableColumn
sapEgrQosQMBSBytes = _SapEgrQosQMBSBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 13),
    _SapEgrQosQMBSBytes_Type()
)
sapEgrQosQMBSBytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQMBSBytes.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQMBSBytes.setUnits("bytes")


class _SapEgrQosQWeight_Type(TWeight):
    """Custom type sapEgrQosQWeight based on TWeight"""
    defaultValue = 1


_SapEgrQosQWeight_Type.__name__ = "TWeight"
_SapEgrQosQWeight_Object = MibTableColumn
sapEgrQosQWeight = _SapEgrQosQWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 14),
    _SapEgrQosQWeight_Type()
)
sapEgrQosQWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQWeight.setStatus("current")


class _SapEgrQosQCIRWeight_Type(TWeight):
    """Custom type sapEgrQosQCIRWeight based on TWeight"""
    defaultValue = 1


_SapEgrQosQCIRWeight_Type.__name__ = "TWeight"
_SapEgrQosQCIRWeight_Object = MibTableColumn
sapEgrQosQCIRWeight = _SapEgrQosQCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 15),
    _SapEgrQosQCIRWeight_Type()
)
sapEgrQosQCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQCIRWeight.setStatus("current")


class _SapEgrQosQAdminPIRPercent_Type(Unsigned32):
    """Custom type sapEgrQosQAdminPIRPercent based on Unsigned32"""
    defaultValue = 10000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_SapEgrQosQAdminPIRPercent_Type.__name__ = "Unsigned32"
_SapEgrQosQAdminPIRPercent_Object = MibTableColumn
sapEgrQosQAdminPIRPercent = _SapEgrQosQAdminPIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 16),
    _SapEgrQosQAdminPIRPercent_Type()
)
sapEgrQosQAdminPIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRPercent.setUnits("centipercent")


class _SapEgrQosQAdminCIRPercent_Type(Unsigned32):
    """Custom type sapEgrQosQAdminCIRPercent based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQAdminCIRPercent_Type.__name__ = "Unsigned32"
_SapEgrQosQAdminCIRPercent_Object = MibTableColumn
sapEgrQosQAdminCIRPercent = _SapEgrQosQAdminCIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 17),
    _SapEgrQosQAdminCIRPercent_Type()
)
sapEgrQosQAdminCIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRPercent.setUnits("centipercent")


class _SapEgrQosQMonitorDepth_Type(TruthValue):
    """Custom type sapEgrQosQMonitorDepth based on TruthValue"""
    defaultValue = 2


_SapEgrQosQMonitorDepth_Type.__name__ = "TruthValue"
_SapEgrQosQMonitorDepth_Object = MibTableColumn
sapEgrQosQMonitorDepth = _SapEgrQosQMonitorDepth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 18),
    _SapEgrQosQMonitorDepth_Type()
)
sapEgrQosQMonitorDepth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQMonitorDepth.setStatus("obsolete")


class _SapEgrQosQDrpTailLowReductnMbs_Type(TBurstPercentOrDefault):
    """Custom type sapEgrQosQDrpTailLowReductnMbs based on TBurstPercentOrDefault"""
    defaultValue = -1


_SapEgrQosQDrpTailLowReductnMbs_Type.__name__ = "TBurstPercentOrDefault"
_SapEgrQosQDrpTailLowReductnMbs_Object = MibTableColumn
sapEgrQosQDrpTailLowReductnMbs = _SapEgrQosQDrpTailLowReductnMbs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 19),
    _SapEgrQosQDrpTailLowReductnMbs_Type()
)
sapEgrQosQDrpTailLowReductnMbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQDrpTailLowReductnMbs.setStatus("current")


class _SapEgrQosQAdminPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrQosQAdminPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrQosQAdminPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrQosQAdminPIRHi_Object = MibTableColumn
sapEgrQosQAdminPIRHi = _SapEgrQosQAdminPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 20),
    _SapEgrQosQAdminPIRHi_Type()
)
sapEgrQosQAdminPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRHi.setUnits("kilo bits per second")


class _SapEgrQosQAdminPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrQosQAdminPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapEgrQosQAdminPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrQosQAdminPIRLo_Object = MibTableColumn
sapEgrQosQAdminPIRLo = _SapEgrQosQAdminPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 21),
    _SapEgrQosQAdminPIRLo_Type()
)
sapEgrQosQAdminPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminPIRLo.setUnits("kilo bits per second")


class _SapEgrQosQAdminCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrQosQAdminCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 0


_SapEgrQosQAdminCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrQosQAdminCIRHi_Object = MibTableColumn
sapEgrQosQAdminCIRHi = _SapEgrQosQAdminCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 22),
    _SapEgrQosQAdminCIRHi_Type()
)
sapEgrQosQAdminCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRHi.setUnits("kilo bits per second")


class _SapEgrQosQAdminCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrQosQAdminCIRLo based on TmnxQosRateLow32"""
    defaultValue = 0


_SapEgrQosQAdminCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrQosQAdminCIRLo_Object = MibTableColumn
sapEgrQosQAdminCIRLo = _SapEgrQosQAdminCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 23),
    _SapEgrQosQAdminCIRLo_Type()
)
sapEgrQosQAdminCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQAdminCIRLo.setUnits("kilo bits per second")


class _SapEgrQosQHsWrrWeight_Type(Unsigned32):
    """Custom type sapEgrQosQHsWrrWeight based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_SapEgrQosQHsWrrWeight_Type.__name__ = "Unsigned32"
_SapEgrQosQHsWrrWeight_Object = MibTableColumn
sapEgrQosQHsWrrWeight = _SapEgrQosQHsWrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 24),
    _SapEgrQosQHsWrrWeight_Type()
)
sapEgrQosQHsWrrWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQHsWrrWeight.setStatus("current")


class _SapEgrQosQHsClassWeight_Type(Unsigned32):
    """Custom type sapEgrQosQHsClassWeight based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
    )


_SapEgrQosQHsClassWeight_Type.__name__ = "Unsigned32"
_SapEgrQosQHsClassWeight_Object = MibTableColumn
sapEgrQosQHsClassWeight = _SapEgrQosQHsClassWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 25),
    _SapEgrQosQHsClassWeight_Type()
)
sapEgrQosQHsClassWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQHsClassWeight.setStatus("current")


class _SapEgrQosQHsWredQSlopePlcy_Type(TNamedItemOrEmpty):
    """Custom type sapEgrQosQHsWredQSlopePlcy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgrQosQHsWredQSlopePlcy_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrQosQHsWredQSlopePlcy_Object = MibTableColumn
sapEgrQosQHsWredQSlopePlcy = _SapEgrQosQHsWredQSlopePlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 26),
    _SapEgrQosQHsWredQSlopePlcy_Type()
)
sapEgrQosQHsWredQSlopePlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQHsWredQSlopePlcy.setStatus("current")


class _SapEgrQosQBurstLimit_Type(TBurstLimit):
    """Custom type sapEgrQosQBurstLimit based on TBurstLimit"""
    defaultValue = -1


_SapEgrQosQBurstLimit_Type.__name__ = "TBurstLimit"
_SapEgrQosQBurstLimit_Object = MibTableColumn
sapEgrQosQBurstLimit = _SapEgrQosQBurstLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 27),
    _SapEgrQosQBurstLimit_Type()
)
sapEgrQosQBurstLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQBurstLimit.setStatus("current")


class _SapEgrQosQMonitorQueueDepth_Type(TruthValue):
    """Custom type sapEgrQosQMonitorQueueDepth based on TruthValue"""
    defaultValue = 2


_SapEgrQosQMonitorQueueDepth_Type.__name__ = "TruthValue"
_SapEgrQosQMonitorQueueDepth_Object = MibTableColumn
sapEgrQosQMonitorQueueDepth = _SapEgrQosQMonitorQueueDepth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 28),
    _SapEgrQosQMonitorQueueDepth_Type()
)
sapEgrQosQMonitorQueueDepth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQMonitorQueueDepth.setStatus("current")


class _SapEgrQosQFastPolling_Type(TruthValue):
    """Custom type sapEgrQosQFastPolling based on TruthValue"""
    defaultValue = 2


_SapEgrQosQFastPolling_Type.__name__ = "TruthValue"
_SapEgrQosQFastPolling_Object = MibTableColumn
sapEgrQosQFastPolling = _SapEgrQosQFastPolling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 29),
    _SapEgrQosQFastPolling_Type()
)
sapEgrQosQFastPolling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQFastPolling.setStatus("current")


class _SapEgrQosQViolationThreshold_Type(Unsigned32):
    """Custom type sapEgrQosQViolationThreshold based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 9999),
    )


_SapEgrQosQViolationThreshold_Type.__name__ = "Unsigned32"
_SapEgrQosQViolationThreshold_Object = MibTableColumn
sapEgrQosQViolationThreshold = _SapEgrQosQViolationThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 20, 1, 30),
    _SapEgrQosQViolationThreshold_Type()
)
sapEgrQosQViolationThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQViolationThreshold.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQViolationThreshold.setUnits("centipercent")
_SapIngQosSchedInfoTable_Object = MibTable
sapIngQosSchedInfoTable = _SapIngQosSchedInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21)
)
if mibBuilder.loadTexts:
    sapIngQosSchedInfoTable.setStatus("current")
_SapIngQosSchedInfoEntry_Object = MibTableRow
sapIngQosSchedInfoEntry = _SapIngQosSchedInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1)
)
sapIngQosSchedInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (1, "TIMETRA-SAP-MIB", "sapIngQosSName"),
)
if mibBuilder.loadTexts:
    sapIngQosSchedInfoEntry.setStatus("current")
_SapIngQosSName_Type = TNamedItem
_SapIngQosSName_Object = MibTableColumn
sapIngQosSName = _SapIngQosSName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 1),
    _SapIngQosSName_Type()
)
sapIngQosSName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosSName.setStatus("current")
_SapIngQosSRowStatus_Type = RowStatus
_SapIngQosSRowStatus_Object = MibTableColumn
sapIngQosSRowStatus = _SapIngQosSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 2),
    _SapIngQosSRowStatus_Type()
)
sapIngQosSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSRowStatus.setStatus("current")
_SapIngQosSLastMgmtChange_Type = TimeStamp
_SapIngQosSLastMgmtChange_Object = MibTableColumn
sapIngQosSLastMgmtChange = _SapIngQosSLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 3),
    _SapIngQosSLastMgmtChange_Type()
)
sapIngQosSLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosSLastMgmtChange.setStatus("current")
_SapIngQosSOverrideFlags_Type = TVirtSchedAttribute
_SapIngQosSOverrideFlags_Object = MibTableColumn
sapIngQosSOverrideFlags = _SapIngQosSOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 4),
    _SapIngQosSOverrideFlags_Type()
)
sapIngQosSOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSOverrideFlags.setStatus("current")


class _SapIngQosSPIR_Type(THPolVirtualSchePIRRate):
    """Custom type sapIngQosSPIR based on THPolVirtualSchePIRRate"""
    defaultValue = -1


_SapIngQosSPIR_Type.__name__ = "THPolVirtualSchePIRRate"
_SapIngQosSPIR_Object = MibTableColumn
sapIngQosSPIR = _SapIngQosSPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 5),
    _SapIngQosSPIR_Type()
)
sapIngQosSPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosSPIR.setUnits("kilo bits per second")


class _SapIngQosSCIR_Type(THPolVirtualScheCIRRate):
    """Custom type sapIngQosSCIR based on THPolVirtualScheCIRRate"""
    defaultValue = -1


_SapIngQosSCIR_Type.__name__ = "THPolVirtualScheCIRRate"
_SapIngQosSCIR_Object = MibTableColumn
sapIngQosSCIR = _SapIngQosSCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 6),
    _SapIngQosSCIR_Type()
)
sapIngQosSCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosSCIR.setUnits("kilo bits per second")


class _SapIngQosSSummedCIR_Type(TruthValue):
    """Custom type sapIngQosSSummedCIR based on TruthValue"""
    defaultValue = 1


_SapIngQosSSummedCIR_Type.__name__ = "TruthValue"
_SapIngQosSSummedCIR_Object = MibTableColumn
sapIngQosSSummedCIR = _SapIngQosSSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 7),
    _SapIngQosSSummedCIR_Type()
)
sapIngQosSSummedCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSSummedCIR.setStatus("current")


class _SapIngQosSPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngQosSPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngQosSPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngQosSPIRHi_Object = MibTableColumn
sapIngQosSPIRHi = _SapIngQosSPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 8),
    _SapIngQosSPIRHi_Type()
)
sapIngQosSPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosSPIRHi.setUnits("kilobps")


class _SapIngQosSPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngQosSPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapIngQosSPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngQosSPIRLo_Object = MibTableColumn
sapIngQosSPIRLo = _SapIngQosSPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 9),
    _SapIngQosSPIRLo_Type()
)
sapIngQosSPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosSPIRLo.setUnits("kilobps")


class _SapIngQosSCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngQosSCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngQosSCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngQosSCIRHi_Object = MibTableColumn
sapIngQosSCIRHi = _SapIngQosSCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 10),
    _SapIngQosSCIRHi_Type()
)
sapIngQosSCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosSCIRHi.setUnits("kilobps")


class _SapIngQosSCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngQosSCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapIngQosSCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngQosSCIRLo_Object = MibTableColumn
sapIngQosSCIRLo = _SapIngQosSCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 11),
    _SapIngQosSCIRLo_Type()
)
sapIngQosSCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosSCIRLo.setUnits("kilobps")


class _SapIngQosSParentWeight_Type(TWeight):
    """Custom type sapIngQosSParentWeight based on TWeight"""
    defaultValue = 1


_SapIngQosSParentWeight_Type.__name__ = "TWeight"
_SapIngQosSParentWeight_Object = MibTableColumn
sapIngQosSParentWeight = _SapIngQosSParentWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 12),
    _SapIngQosSParentWeight_Type()
)
sapIngQosSParentWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSParentWeight.setStatus("current")


class _SapIngQosSParentCIRWeight_Type(TWeight):
    """Custom type sapIngQosSParentCIRWeight based on TWeight"""
    defaultValue = 1


_SapIngQosSParentCIRWeight_Type.__name__ = "TWeight"
_SapIngQosSParentCIRWeight_Object = MibTableColumn
sapIngQosSParentCIRWeight = _SapIngQosSParentCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 21, 1, 13),
    _SapIngQosSParentCIRWeight_Type()
)
sapIngQosSParentCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosSParentCIRWeight.setStatus("current")
_SapEgrQosSchedInfoTable_Object = MibTable
sapEgrQosSchedInfoTable = _SapEgrQosSchedInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22)
)
if mibBuilder.loadTexts:
    sapEgrQosSchedInfoTable.setStatus("current")
_SapEgrQosSchedInfoEntry_Object = MibTableRow
sapEgrQosSchedInfoEntry = _SapEgrQosSchedInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1)
)
sapEgrQosSchedInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (1, "TIMETRA-SAP-MIB", "sapEgrQosSName"),
)
if mibBuilder.loadTexts:
    sapEgrQosSchedInfoEntry.setStatus("current")
_SapEgrQosSName_Type = TNamedItem
_SapEgrQosSName_Object = MibTableColumn
sapEgrQosSName = _SapEgrQosSName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 1),
    _SapEgrQosSName_Type()
)
sapEgrQosSName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosSName.setStatus("current")
_SapEgrQosSRowStatus_Type = RowStatus
_SapEgrQosSRowStatus_Object = MibTableColumn
sapEgrQosSRowStatus = _SapEgrQosSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 2),
    _SapEgrQosSRowStatus_Type()
)
sapEgrQosSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSRowStatus.setStatus("current")
_SapEgrQosSLastMgmtChange_Type = TimeStamp
_SapEgrQosSLastMgmtChange_Object = MibTableColumn
sapEgrQosSLastMgmtChange = _SapEgrQosSLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 3),
    _SapEgrQosSLastMgmtChange_Type()
)
sapEgrQosSLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosSLastMgmtChange.setStatus("current")
_SapEgrQosSOverrideFlags_Type = TVirtSchedAttribute
_SapEgrQosSOverrideFlags_Object = MibTableColumn
sapEgrQosSOverrideFlags = _SapEgrQosSOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 4),
    _SapEgrQosSOverrideFlags_Type()
)
sapEgrQosSOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSOverrideFlags.setStatus("current")


class _SapEgrQosSPIR_Type(THPolVirtualSchePIRRate):
    """Custom type sapEgrQosSPIR based on THPolVirtualSchePIRRate"""
    defaultValue = -1


_SapEgrQosSPIR_Type.__name__ = "THPolVirtualSchePIRRate"
_SapEgrQosSPIR_Object = MibTableColumn
sapEgrQosSPIR = _SapEgrQosSPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 5),
    _SapEgrQosSPIR_Type()
)
sapEgrQosSPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosSPIR.setUnits("kilo bits per second")


class _SapEgrQosSCIR_Type(THPolVirtualScheCIRRate):
    """Custom type sapEgrQosSCIR based on THPolVirtualScheCIRRate"""
    defaultValue = -1


_SapEgrQosSCIR_Type.__name__ = "THPolVirtualScheCIRRate"
_SapEgrQosSCIR_Object = MibTableColumn
sapEgrQosSCIR = _SapEgrQosSCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 6),
    _SapEgrQosSCIR_Type()
)
sapEgrQosSCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosSCIR.setUnits("kilo bits per second")


class _SapEgrQosSSummedCIR_Type(TruthValue):
    """Custom type sapEgrQosSSummedCIR based on TruthValue"""
    defaultValue = 1


_SapEgrQosSSummedCIR_Type.__name__ = "TruthValue"
_SapEgrQosSSummedCIR_Object = MibTableColumn
sapEgrQosSSummedCIR = _SapEgrQosSSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 7),
    _SapEgrQosSSummedCIR_Type()
)
sapEgrQosSSummedCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSSummedCIR.setStatus("current")


class _SapEgrQosSPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrQosSPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrQosSPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrQosSPIRHi_Object = MibTableColumn
sapEgrQosSPIRHi = _SapEgrQosSPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 8),
    _SapEgrQosSPIRHi_Type()
)
sapEgrQosSPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosSPIRHi.setUnits("kilobps")


class _SapEgrQosSPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrQosSPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapEgrQosSPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrQosSPIRLo_Object = MibTableColumn
sapEgrQosSPIRLo = _SapEgrQosSPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 9),
    _SapEgrQosSPIRLo_Type()
)
sapEgrQosSPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosSPIRLo.setUnits("kilobps")


class _SapEgrQosSCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrQosSCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrQosSCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrQosSCIRHi_Object = MibTableColumn
sapEgrQosSCIRHi = _SapEgrQosSCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 10),
    _SapEgrQosSCIRHi_Type()
)
sapEgrQosSCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosSCIRHi.setUnits("kilobps")


class _SapEgrQosSCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrQosSCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapEgrQosSCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrQosSCIRLo_Object = MibTableColumn
sapEgrQosSCIRLo = _SapEgrQosSCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 11),
    _SapEgrQosSCIRLo_Type()
)
sapEgrQosSCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosSCIRLo.setUnits("kilobps")


class _SapEgrQosSParentWeight_Type(TWeight):
    """Custom type sapEgrQosSParentWeight based on TWeight"""
    defaultValue = 1


_SapEgrQosSParentWeight_Type.__name__ = "TWeight"
_SapEgrQosSParentWeight_Object = MibTableColumn
sapEgrQosSParentWeight = _SapEgrQosSParentWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 12),
    _SapEgrQosSParentWeight_Type()
)
sapEgrQosSParentWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSParentWeight.setStatus("current")


class _SapEgrQosSParentCIRWeight_Type(TWeight):
    """Custom type sapEgrQosSParentCIRWeight based on TWeight"""
    defaultValue = 1


_SapEgrQosSParentCIRWeight_Type.__name__ = "TWeight"
_SapEgrQosSParentCIRWeight_Object = MibTableColumn
sapEgrQosSParentCIRWeight = _SapEgrQosSParentCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 22, 1, 13),
    _SapEgrQosSParentCIRWeight_Type()
)
sapEgrQosSParentCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosSParentCIRWeight.setStatus("current")
_SapSubMgmtInfoTable_Object = MibTable
sapSubMgmtInfoTable = _SapSubMgmtInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23)
)
if mibBuilder.loadTexts:
    sapSubMgmtInfoTable.setStatus("current")
_SapSubMgmtInfoEntry_Object = MibTableRow
sapSubMgmtInfoEntry = _SapSubMgmtInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1)
)
sapSubMgmtInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapSubMgmtInfoEntry.setStatus("current")


class _SapSubMgmtAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type sapSubMgmtAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapSubMgmtAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_SapSubMgmtAdminStatus_Object = MibTableColumn
sapSubMgmtAdminStatus = _SapSubMgmtAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 1),
    _SapSubMgmtAdminStatus_Type()
)
sapSubMgmtAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtAdminStatus.setStatus("current")


class _SapSubMgmtDefSubProfile_Type(ServObjName):
    """Custom type sapSubMgmtDefSubProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtDefSubProfile_Type.__name__ = "ServObjName"
_SapSubMgmtDefSubProfile_Object = MibTableColumn
sapSubMgmtDefSubProfile = _SapSubMgmtDefSubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 2),
    _SapSubMgmtDefSubProfile_Type()
)
sapSubMgmtDefSubProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefSubProfile.setStatus("current")


class _SapSubMgmtDefSlaProfile_Type(ServObjName):
    """Custom type sapSubMgmtDefSlaProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtDefSlaProfile_Type.__name__ = "ServObjName"
_SapSubMgmtDefSlaProfile_Object = MibTableColumn
sapSubMgmtDefSlaProfile = _SapSubMgmtDefSlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 3),
    _SapSubMgmtDefSlaProfile_Type()
)
sapSubMgmtDefSlaProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefSlaProfile.setStatus("current")


class _SapSubMgmtSubIdentPolicy_Type(ServObjName):
    """Custom type sapSubMgmtSubIdentPolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtSubIdentPolicy_Type.__name__ = "ServObjName"
_SapSubMgmtSubIdentPolicy_Object = MibTableColumn
sapSubMgmtSubIdentPolicy = _SapSubMgmtSubIdentPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 4),
    _SapSubMgmtSubIdentPolicy_Type()
)
sapSubMgmtSubIdentPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtSubIdentPolicy.setStatus("current")


class _SapSubMgmtSubscriberLimit_Type(TmnxSapSubscriberLimit):
    """Custom type sapSubMgmtSubscriberLimit based on TmnxSapSubscriberLimit"""
    defaultValue = 1


_SapSubMgmtSubscriberLimit_Type.__name__ = "TmnxSapSubscriberLimit"
_SapSubMgmtSubscriberLimit_Object = MibTableColumn
sapSubMgmtSubscriberLimit = _SapSubMgmtSubscriberLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 5),
    _SapSubMgmtSubscriberLimit_Type()
)
sapSubMgmtSubscriberLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtSubscriberLimit.setStatus("current")


class _SapSubMgmtProfiledTrafficOnly_Type(TruthValue):
    """Custom type sapSubMgmtProfiledTrafficOnly based on TruthValue"""
    defaultValue = 2


_SapSubMgmtProfiledTrafficOnly_Type.__name__ = "TruthValue"
_SapSubMgmtProfiledTrafficOnly_Object = MibTableColumn
sapSubMgmtProfiledTrafficOnly = _SapSubMgmtProfiledTrafficOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 6),
    _SapSubMgmtProfiledTrafficOnly_Type()
)
sapSubMgmtProfiledTrafficOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtProfiledTrafficOnly.setStatus("current")


class _SapSubMgmtNonSubTrafficSubIdent_Type(TmnxSubIdentStringOrEmpty):
    """Custom type sapSubMgmtNonSubTrafficSubIdent based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SapSubMgmtNonSubTrafficSubIdent_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SapSubMgmtNonSubTrafficSubIdent_Object = MibTableColumn
sapSubMgmtNonSubTrafficSubIdent = _SapSubMgmtNonSubTrafficSubIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 7),
    _SapSubMgmtNonSubTrafficSubIdent_Type()
)
sapSubMgmtNonSubTrafficSubIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtNonSubTrafficSubIdent.setStatus("current")


class _SapSubMgmtNonSubTrafficSubProf_Type(ServObjName):
    """Custom type sapSubMgmtNonSubTrafficSubProf based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtNonSubTrafficSubProf_Type.__name__ = "ServObjName"
_SapSubMgmtNonSubTrafficSubProf_Object = MibTableColumn
sapSubMgmtNonSubTrafficSubProf = _SapSubMgmtNonSubTrafficSubProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 8),
    _SapSubMgmtNonSubTrafficSubProf_Type()
)
sapSubMgmtNonSubTrafficSubProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtNonSubTrafficSubProf.setStatus("current")


class _SapSubMgmtNonSubTrafficSlaProf_Type(ServObjName):
    """Custom type sapSubMgmtNonSubTrafficSlaProf based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtNonSubTrafficSlaProf_Type.__name__ = "ServObjName"
_SapSubMgmtNonSubTrafficSlaProf_Object = MibTableColumn
sapSubMgmtNonSubTrafficSlaProf = _SapSubMgmtNonSubTrafficSlaProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 9),
    _SapSubMgmtNonSubTrafficSlaProf_Type()
)
sapSubMgmtNonSubTrafficSlaProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtNonSubTrafficSlaProf.setStatus("current")


class _SapSubMgmtMacDaHashing_Type(TruthValue):
    """Custom type sapSubMgmtMacDaHashing based on TruthValue"""
    defaultValue = 2


_SapSubMgmtMacDaHashing_Type.__name__ = "TruthValue"
_SapSubMgmtMacDaHashing_Object = MibTableColumn
sapSubMgmtMacDaHashing = _SapSubMgmtMacDaHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 10),
    _SapSubMgmtMacDaHashing_Type()
)
sapSubMgmtMacDaHashing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtMacDaHashing.setStatus("current")


class _SapSubMgmtDefSubIdent_Type(TmnxDefSubIdSource):
    """Custom type sapSubMgmtDefSubIdent based on TmnxDefSubIdSource"""
    defaultValue = 2


_SapSubMgmtDefSubIdent_Type.__name__ = "TmnxDefSubIdSource"
_SapSubMgmtDefSubIdent_Object = MibTableColumn
sapSubMgmtDefSubIdent = _SapSubMgmtDefSubIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 11),
    _SapSubMgmtDefSubIdent_Type()
)
sapSubMgmtDefSubIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefSubIdent.setStatus("current")


class _SapSubMgmtDefSubIdentString_Type(TmnxSubIdentStringOrEmpty):
    """Custom type sapSubMgmtDefSubIdentString based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SapSubMgmtDefSubIdentString_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SapSubMgmtDefSubIdentString_Object = MibTableColumn
sapSubMgmtDefSubIdentString = _SapSubMgmtDefSubIdentString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 12),
    _SapSubMgmtDefSubIdentString_Type()
)
sapSubMgmtDefSubIdentString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefSubIdentString.setStatus("current")


class _SapSubMgmtDefAppProfile_Type(ServObjName):
    """Custom type sapSubMgmtDefAppProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtDefAppProfile_Type.__name__ = "ServObjName"
_SapSubMgmtDefAppProfile_Object = MibTableColumn
sapSubMgmtDefAppProfile = _SapSubMgmtDefAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 13),
    _SapSubMgmtDefAppProfile_Type()
)
sapSubMgmtDefAppProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefAppProfile.setStatus("current")


class _SapSubMgmtNonSubTrafficAppProf_Type(ServObjName):
    """Custom type sapSubMgmtNonSubTrafficAppProf based on ServObjName"""
    defaultValue = OctetString("")


_SapSubMgmtNonSubTrafficAppProf_Type.__name__ = "ServObjName"
_SapSubMgmtNonSubTrafficAppProf_Object = MibTableColumn
sapSubMgmtNonSubTrafficAppProf = _SapSubMgmtNonSubTrafficAppProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 14),
    _SapSubMgmtNonSubTrafficAppProf_Type()
)
sapSubMgmtNonSubTrafficAppProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtNonSubTrafficAppProf.setStatus("current")


class _SapSubMgmtDefInterDestId_Type(TmnxDefInterDestIdSource):
    """Custom type sapSubMgmtDefInterDestId based on TmnxDefInterDestIdSource"""
    defaultValue = 1


_SapSubMgmtDefInterDestId_Type.__name__ = "TmnxDefInterDestIdSource"
_SapSubMgmtDefInterDestId_Object = MibTableColumn
sapSubMgmtDefInterDestId = _SapSubMgmtDefInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 15),
    _SapSubMgmtDefInterDestId_Type()
)
sapSubMgmtDefInterDestId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefInterDestId.setStatus("current")


class _SapSubMgmtDefInterDestIdString_Type(DisplayString):
    """Custom type sapSubMgmtDefInterDestIdString based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapSubMgmtDefInterDestIdString_Type.__name__ = "DisplayString"
_SapSubMgmtDefInterDestIdString_Object = MibTableColumn
sapSubMgmtDefInterDestIdString = _SapSubMgmtDefInterDestIdString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 16),
    _SapSubMgmtDefInterDestIdString_Type()
)
sapSubMgmtDefInterDestIdString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefInterDestIdString.setStatus("current")


class _SapSubMgmtDefFilterProfile_Type(TNamedItemOrEmpty):
    """Custom type sapSubMgmtDefFilterProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapSubMgmtDefFilterProfile_Type.__name__ = "TNamedItemOrEmpty"
_SapSubMgmtDefFilterProfile_Object = MibTableColumn
sapSubMgmtDefFilterProfile = _SapSubMgmtDefFilterProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 23, 1, 17),
    _SapSubMgmtDefFilterProfile_Type()
)
sapSubMgmtDefFilterProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapSubMgmtDefFilterProfile.setStatus("current")
_SapTlsMstiTable_Object = MibTable
sapTlsMstiTable = _SapTlsMstiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24)
)
if mibBuilder.loadTexts:
    sapTlsMstiTable.setStatus("current")
_SapTlsMstiEntry_Object = MibTableRow
sapTlsMstiEntry = _SapTlsMstiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1)
)
sapTlsMstiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiInstanceId"),
)
if mibBuilder.loadTexts:
    sapTlsMstiEntry.setStatus("current")


class _SapTlsMstiPriority_Type(Integer32):
    """Custom type sapTlsMstiPriority based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapTlsMstiPriority_Type.__name__ = "Integer32"
_SapTlsMstiPriority_Object = MibTableColumn
sapTlsMstiPriority = _SapTlsMstiPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 1),
    _SapTlsMstiPriority_Type()
)
sapTlsMstiPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMstiPriority.setStatus("current")


class _SapTlsMstiPathCost_Type(Integer32):
    """Custom type sapTlsMstiPathCost based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000000),
    )


_SapTlsMstiPathCost_Type.__name__ = "Integer32"
_SapTlsMstiPathCost_Object = MibTableColumn
sapTlsMstiPathCost = _SapTlsMstiPathCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 2),
    _SapTlsMstiPathCost_Type()
)
sapTlsMstiPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsMstiPathCost.setStatus("current")
_SapTlsMstiLastMgmtChange_Type = TimeStamp
_SapTlsMstiLastMgmtChange_Object = MibTableColumn
sapTlsMstiLastMgmtChange = _SapTlsMstiLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 3),
    _SapTlsMstiLastMgmtChange_Type()
)
sapTlsMstiLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMstiLastMgmtChange.setStatus("current")
_SapTlsMstiPortRole_Type = StpPortRole
_SapTlsMstiPortRole_Object = MibTableColumn
sapTlsMstiPortRole = _SapTlsMstiPortRole_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 4),
    _SapTlsMstiPortRole_Type()
)
sapTlsMstiPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMstiPortRole.setStatus("current")
_SapTlsMstiPortState_Type = TStpPortState
_SapTlsMstiPortState_Object = MibTableColumn
sapTlsMstiPortState = _SapTlsMstiPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 5),
    _SapTlsMstiPortState_Type()
)
sapTlsMstiPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMstiPortState.setStatus("current")
_SapTlsMstiDesignatedBridge_Type = BridgeId
_SapTlsMstiDesignatedBridge_Object = MibTableColumn
sapTlsMstiDesignatedBridge = _SapTlsMstiDesignatedBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 6),
    _SapTlsMstiDesignatedBridge_Type()
)
sapTlsMstiDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMstiDesignatedBridge.setStatus("current")
_SapTlsMstiDesignatedPort_Type = Integer32
_SapTlsMstiDesignatedPort_Object = MibTableColumn
sapTlsMstiDesignatedPort = _SapTlsMstiDesignatedPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 24, 1, 7),
    _SapTlsMstiDesignatedPort_Type()
)
sapTlsMstiDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMstiDesignatedPort.setStatus("current")
_SapIpipeInfoTable_Object = MibTable
sapIpipeInfoTable = _SapIpipeInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25)
)
if mibBuilder.loadTexts:
    sapIpipeInfoTable.setStatus("current")
_SapIpipeInfoEntry_Object = MibTableRow
sapIpipeInfoEntry = _SapIpipeInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1)
)
sapIpipeInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapIpipeInfoEntry.setStatus("current")
_SapIpipeCeInetAddressType_Type = InetAddressType
_SapIpipeCeInetAddressType_Object = MibTableColumn
sapIpipeCeInetAddressType = _SapIpipeCeInetAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 1),
    _SapIpipeCeInetAddressType_Type()
)
sapIpipeCeInetAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIpipeCeInetAddressType.setStatus("current")


class _SapIpipeCeInetAddress_Type(InetAddress):
    """Custom type sapIpipeCeInetAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SapIpipeCeInetAddress_Type.__name__ = "InetAddress"
_SapIpipeCeInetAddress_Object = MibTableColumn
sapIpipeCeInetAddress = _SapIpipeCeInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 2),
    _SapIpipeCeInetAddress_Type()
)
sapIpipeCeInetAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIpipeCeInetAddress.setStatus("current")


class _SapIpipeMacRefreshInterval_Type(Unsigned32):
    """Custom type sapIpipeMacRefreshInterval based on Unsigned32"""
    defaultValue = 14400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SapIpipeMacRefreshInterval_Type.__name__ = "Unsigned32"
_SapIpipeMacRefreshInterval_Object = MibTableColumn
sapIpipeMacRefreshInterval = _SapIpipeMacRefreshInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 3),
    _SapIpipeMacRefreshInterval_Type()
)
sapIpipeMacRefreshInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIpipeMacRefreshInterval.setStatus("current")
if mibBuilder.loadTexts:
    sapIpipeMacRefreshInterval.setUnits("seconds")


class _SapIpipeMacAddress_Type(MacAddress):
    """Custom type sapIpipeMacAddress based on MacAddress"""
    defaultHexValue = "000000000000"


_SapIpipeMacAddress_Type.__name__ = "MacAddress"
_SapIpipeMacAddress_Object = MibTableColumn
sapIpipeMacAddress = _SapIpipeMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 4),
    _SapIpipeMacAddress_Type()
)
sapIpipeMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIpipeMacAddress.setStatus("current")
_SapIpipeArpedMacAddress_Type = MacAddress
_SapIpipeArpedMacAddress_Object = MibTableColumn
sapIpipeArpedMacAddress = _SapIpipeArpedMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 5),
    _SapIpipeArpedMacAddress_Type()
)
sapIpipeArpedMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeArpedMacAddress.setStatus("current")


class _SapIpipeArpedMacAddressTimeout_Type(Unsigned32):
    """Custom type sapIpipeArpedMacAddressTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SapIpipeArpedMacAddressTimeout_Type.__name__ = "Unsigned32"
_SapIpipeArpedMacAddressTimeout_Object = MibTableColumn
sapIpipeArpedMacAddressTimeout = _SapIpipeArpedMacAddressTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 6),
    _SapIpipeArpedMacAddressTimeout_Type()
)
sapIpipeArpedMacAddressTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeArpedMacAddressTimeout.setStatus("current")
_SapIpipeDiscoveredCeInetAddrType_Type = InetAddressType
_SapIpipeDiscoveredCeInetAddrType_Object = MibTableColumn
sapIpipeDiscoveredCeInetAddrType = _SapIpipeDiscoveredCeInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 7),
    _SapIpipeDiscoveredCeInetAddrType_Type()
)
sapIpipeDiscoveredCeInetAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeDiscoveredCeInetAddrType.setStatus("current")


class _SapIpipeDiscoveredCeInetAddr_Type(InetAddress):
    """Custom type sapIpipeDiscoveredCeInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SapIpipeDiscoveredCeInetAddr_Type.__name__ = "InetAddress"
_SapIpipeDiscoveredCeInetAddr_Object = MibTableColumn
sapIpipeDiscoveredCeInetAddr = _SapIpipeDiscoveredCeInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 8),
    _SapIpipeDiscoveredCeInetAddr_Type()
)
sapIpipeDiscoveredCeInetAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeDiscoveredCeInetAddr.setStatus("current")


class _SapIpipeUseBroadcastMac_Type(TruthValue):
    """Custom type sapIpipeUseBroadcastMac based on TruthValue"""
    defaultValue = 2


_SapIpipeUseBroadcastMac_Type.__name__ = "TruthValue"
_SapIpipeUseBroadcastMac_Object = MibTableColumn
sapIpipeUseBroadcastMac = _SapIpipeUseBroadcastMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 9),
    _SapIpipeUseBroadcastMac_Type()
)
sapIpipeUseBroadcastMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIpipeUseBroadcastMac.setStatus("current")
_SapIpipeUsingBroadcastMac_Type = TruthValue
_SapIpipeUsingBroadcastMac_Object = MibTableColumn
sapIpipeUsingBroadcastMac = _SapIpipeUsingBroadcastMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 10),
    _SapIpipeUsingBroadcastMac_Type()
)
sapIpipeUsingBroadcastMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeUsingBroadcastMac.setStatus("current")


class _SapIpipeIpv6LinkLocalCeInetAddr_Type(InetAddress):
    """Custom type sapIpipeIpv6LinkLocalCeInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SapIpipeIpv6LinkLocalCeInetAddr_Type.__name__ = "InetAddress"
_SapIpipeIpv6LinkLocalCeInetAddr_Object = MibTableColumn
sapIpipeIpv6LinkLocalCeInetAddr = _SapIpipeIpv6LinkLocalCeInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 11),
    _SapIpipeIpv6LinkLocalCeInetAddr_Type()
)
sapIpipeIpv6LinkLocalCeInetAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeIpv6LinkLocalCeInetAddr.setStatus("current")


class _SapIpipeIpv6GlobalCeInetAddr_Type(InetAddress):
    """Custom type sapIpipeIpv6GlobalCeInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SapIpipeIpv6GlobalCeInetAddr_Type.__name__ = "InetAddress"
_SapIpipeIpv6GlobalCeInetAddr_Object = MibTableColumn
sapIpipeIpv6GlobalCeInetAddr = _SapIpipeIpv6GlobalCeInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 12),
    _SapIpipeIpv6GlobalCeInetAddr_Type()
)
sapIpipeIpv6GlobalCeInetAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeIpv6GlobalCeInetAddr.setStatus("current")
_SapIpipeIpv6DiscoveredMacAddress_Type = MacAddress
_SapIpipeIpv6DiscoveredMacAddress_Object = MibTableColumn
sapIpipeIpv6DiscoveredMacAddress = _SapIpipeIpv6DiscoveredMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 13),
    _SapIpipeIpv6DiscoveredMacAddress_Type()
)
sapIpipeIpv6DiscoveredMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeIpv6DiscoveredMacAddress.setStatus("current")
_SapIpipeLegacyFaultNotification_Type = TruthValue
_SapIpipeLegacyFaultNotification_Object = MibTableColumn
sapIpipeLegacyFaultNotification = _SapIpipeLegacyFaultNotification_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 14),
    _SapIpipeLegacyFaultNotification_Type()
)
sapIpipeLegacyFaultNotification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeLegacyFaultNotification.setStatus("current")
_SapIpipeRemainRecoveryTimer_Type = Unsigned32
_SapIpipeRemainRecoveryTimer_Object = MibTableColumn
sapIpipeRemainRecoveryTimer = _SapIpipeRemainRecoveryTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 25, 1, 15),
    _SapIpipeRemainRecoveryTimer_Type()
)
sapIpipeRemainRecoveryTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpipeRemainRecoveryTimer.setStatus("current")
if mibBuilder.loadTexts:
    sapIpipeRemainRecoveryTimer.setUnits("deciseconds")
_SapTodMonitorTable_Object = MibTable
sapTodMonitorTable = _SapTodMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26)
)
if mibBuilder.loadTexts:
    sapTodMonitorTable.setStatus("obsolete")
_SapTodMonitorEntry_Object = MibTableRow
sapTodMonitorEntry = _SapTodMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1)
)
sapTodMonitorEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTodMonitorEntry.setStatus("obsolete")
_SapCurrentIngressIpFilterId_Type = TFilterID
_SapCurrentIngressIpFilterId_Object = MibTableColumn
sapCurrentIngressIpFilterId = _SapCurrentIngressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 1),
    _SapCurrentIngressIpFilterId_Type()
)
sapCurrentIngressIpFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentIngressIpFilterId.setStatus("obsolete")
_SapCurrentIngressIpv6FilterId_Type = TFilterID
_SapCurrentIngressIpv6FilterId_Object = MibTableColumn
sapCurrentIngressIpv6FilterId = _SapCurrentIngressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 2),
    _SapCurrentIngressIpv6FilterId_Type()
)
sapCurrentIngressIpv6FilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentIngressIpv6FilterId.setStatus("obsolete")
_SapCurrentIngressMacFilterId_Type = TFilterID
_SapCurrentIngressMacFilterId_Object = MibTableColumn
sapCurrentIngressMacFilterId = _SapCurrentIngressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 3),
    _SapCurrentIngressMacFilterId_Type()
)
sapCurrentIngressMacFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentIngressMacFilterId.setStatus("obsolete")
_SapCurrentIngressQosPolicyId_Type = TSapIngressPolicyID
_SapCurrentIngressQosPolicyId_Object = MibTableColumn
sapCurrentIngressQosPolicyId = _SapCurrentIngressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 4),
    _SapCurrentIngressQosPolicyId_Type()
)
sapCurrentIngressQosPolicyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentIngressQosPolicyId.setStatus("obsolete")
_SapCurrentIngressQosSchedPlcy_Type = ServObjName
_SapCurrentIngressQosSchedPlcy_Object = MibTableColumn
sapCurrentIngressQosSchedPlcy = _SapCurrentIngressQosSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 5),
    _SapCurrentIngressQosSchedPlcy_Type()
)
sapCurrentIngressQosSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentIngressQosSchedPlcy.setStatus("obsolete")
_SapCurrentEgressIpFilterId_Type = TFilterID
_SapCurrentEgressIpFilterId_Object = MibTableColumn
sapCurrentEgressIpFilterId = _SapCurrentEgressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 6),
    _SapCurrentEgressIpFilterId_Type()
)
sapCurrentEgressIpFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentEgressIpFilterId.setStatus("obsolete")
_SapCurrentEgressIpv6FilterId_Type = TFilterID
_SapCurrentEgressIpv6FilterId_Object = MibTableColumn
sapCurrentEgressIpv6FilterId = _SapCurrentEgressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 7),
    _SapCurrentEgressIpv6FilterId_Type()
)
sapCurrentEgressIpv6FilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentEgressIpv6FilterId.setStatus("obsolete")
_SapCurrentEgressMacFilterId_Type = TFilterID
_SapCurrentEgressMacFilterId_Object = MibTableColumn
sapCurrentEgressMacFilterId = _SapCurrentEgressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 8),
    _SapCurrentEgressMacFilterId_Type()
)
sapCurrentEgressMacFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentEgressMacFilterId.setStatus("obsolete")
_SapCurrentEgressQosPolicyId_Type = TSapEgressPolicyID
_SapCurrentEgressQosPolicyId_Object = MibTableColumn
sapCurrentEgressQosPolicyId = _SapCurrentEgressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 9),
    _SapCurrentEgressQosPolicyId_Type()
)
sapCurrentEgressQosPolicyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentEgressQosPolicyId.setStatus("obsolete")
_SapCurrentEgressQosSchedPlcy_Type = ServObjName
_SapCurrentEgressQosSchedPlcy_Object = MibTableColumn
sapCurrentEgressQosSchedPlcy = _SapCurrentEgressQosSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 10),
    _SapCurrentEgressQosSchedPlcy_Type()
)
sapCurrentEgressQosSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCurrentEgressQosSchedPlcy.setStatus("obsolete")
_SapIntendedIngressIpFilterId_Type = TFilterID
_SapIntendedIngressIpFilterId_Object = MibTableColumn
sapIntendedIngressIpFilterId = _SapIntendedIngressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 11),
    _SapIntendedIngressIpFilterId_Type()
)
sapIntendedIngressIpFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedIngressIpFilterId.setStatus("obsolete")
_SapIntendedIngressIpv6FilterId_Type = TFilterID
_SapIntendedIngressIpv6FilterId_Object = MibTableColumn
sapIntendedIngressIpv6FilterId = _SapIntendedIngressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 12),
    _SapIntendedIngressIpv6FilterId_Type()
)
sapIntendedIngressIpv6FilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedIngressIpv6FilterId.setStatus("obsolete")
_SapIntendedIngressMacFilterId_Type = TFilterID
_SapIntendedIngressMacFilterId_Object = MibTableColumn
sapIntendedIngressMacFilterId = _SapIntendedIngressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 13),
    _SapIntendedIngressMacFilterId_Type()
)
sapIntendedIngressMacFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedIngressMacFilterId.setStatus("obsolete")
_SapIntendedIngressQosPolicyId_Type = TSapIngressPolicyID
_SapIntendedIngressQosPolicyId_Object = MibTableColumn
sapIntendedIngressQosPolicyId = _SapIntendedIngressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 14),
    _SapIntendedIngressQosPolicyId_Type()
)
sapIntendedIngressQosPolicyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedIngressQosPolicyId.setStatus("obsolete")
_SapIntendedIngressQosSchedPlcy_Type = ServObjName
_SapIntendedIngressQosSchedPlcy_Object = MibTableColumn
sapIntendedIngressQosSchedPlcy = _SapIntendedIngressQosSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 15),
    _SapIntendedIngressQosSchedPlcy_Type()
)
sapIntendedIngressQosSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedIngressQosSchedPlcy.setStatus("obsolete")
_SapIntendedEgressIpFilterId_Type = TFilterID
_SapIntendedEgressIpFilterId_Object = MibTableColumn
sapIntendedEgressIpFilterId = _SapIntendedEgressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 16),
    _SapIntendedEgressIpFilterId_Type()
)
sapIntendedEgressIpFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedEgressIpFilterId.setStatus("obsolete")
_SapIntendedEgressIpv6FilterId_Type = TFilterID
_SapIntendedEgressIpv6FilterId_Object = MibTableColumn
sapIntendedEgressIpv6FilterId = _SapIntendedEgressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 17),
    _SapIntendedEgressIpv6FilterId_Type()
)
sapIntendedEgressIpv6FilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedEgressIpv6FilterId.setStatus("obsolete")
_SapIntendedEgressMacFilterId_Type = TFilterID
_SapIntendedEgressMacFilterId_Object = MibTableColumn
sapIntendedEgressMacFilterId = _SapIntendedEgressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 18),
    _SapIntendedEgressMacFilterId_Type()
)
sapIntendedEgressMacFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedEgressMacFilterId.setStatus("obsolete")
_SapIntendedEgressQosPolicyId_Type = TSapEgressPolicyID
_SapIntendedEgressQosPolicyId_Object = MibTableColumn
sapIntendedEgressQosPolicyId = _SapIntendedEgressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 19),
    _SapIntendedEgressQosPolicyId_Type()
)
sapIntendedEgressQosPolicyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedEgressQosPolicyId.setStatus("obsolete")
_SapIntendedEgressQosSchedPlcy_Type = ServObjName
_SapIntendedEgressQosSchedPlcy_Object = MibTableColumn
sapIntendedEgressQosSchedPlcy = _SapIntendedEgressQosSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 26, 1, 20),
    _SapIntendedEgressQosSchedPlcy_Type()
)
sapIntendedEgressQosSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIntendedEgressQosSchedPlcy.setStatus("obsolete")
_SapIngrQosPlcyStatsTable_Object = MibTable
sapIngrQosPlcyStatsTable = _SapIngrQosPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27)
)
if mibBuilder.loadTexts:
    sapIngrQosPlcyStatsTable.setStatus("obsolete")
_SapIngrQosPlcyStatsEntry_Object = MibTableRow
sapIngrQosPlcyStatsEntry = _SapIngrQosPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1)
)
sapIngrQosPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIgQosPlcyId"),
)
if mibBuilder.loadTexts:
    sapIngrQosPlcyStatsEntry.setStatus("obsolete")
_SapIgQosPlcyId_Type = TSapIngressPolicyID
_SapIgQosPlcyId_Object = MibTableColumn
sapIgQosPlcyId = _SapIgQosPlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 1),
    _SapIgQosPlcyId_Type()
)
sapIgQosPlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIgQosPlcyId.setStatus("obsolete")
_SapIgQosPlcyDroppedHiPrioPackets_Type = Counter64
_SapIgQosPlcyDroppedHiPrioPackets_Object = MibTableColumn
sapIgQosPlcyDroppedHiPrioPackets = _SapIgQosPlcyDroppedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 2),
    _SapIgQosPlcyDroppedHiPrioPackets_Type()
)
sapIgQosPlcyDroppedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyDroppedHiPrioPackets.setStatus("obsolete")
_SapIgQosPlcyDroppedHiPrioOctets_Type = Counter64
_SapIgQosPlcyDroppedHiPrioOctets_Object = MibTableColumn
sapIgQosPlcyDroppedHiPrioOctets = _SapIgQosPlcyDroppedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 3),
    _SapIgQosPlcyDroppedHiPrioOctets_Type()
)
sapIgQosPlcyDroppedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyDroppedHiPrioOctets.setStatus("obsolete")
_SapIgQosPlcyDroppedLoPrioPackets_Type = Counter64
_SapIgQosPlcyDroppedLoPrioPackets_Object = MibTableColumn
sapIgQosPlcyDroppedLoPrioPackets = _SapIgQosPlcyDroppedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 4),
    _SapIgQosPlcyDroppedLoPrioPackets_Type()
)
sapIgQosPlcyDroppedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyDroppedLoPrioPackets.setStatus("obsolete")
_SapIgQosPlcyDroppedLoPrioOctets_Type = Counter64
_SapIgQosPlcyDroppedLoPrioOctets_Object = MibTableColumn
sapIgQosPlcyDroppedLoPrioOctets = _SapIgQosPlcyDroppedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 5),
    _SapIgQosPlcyDroppedLoPrioOctets_Type()
)
sapIgQosPlcyDroppedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyDroppedLoPrioOctets.setStatus("obsolete")
_SapIgQosPlcyForwardedInProfPackets_Type = Counter64
_SapIgQosPlcyForwardedInProfPackets_Object = MibTableColumn
sapIgQosPlcyForwardedInProfPackets = _SapIgQosPlcyForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 6),
    _SapIgQosPlcyForwardedInProfPackets_Type()
)
sapIgQosPlcyForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyForwardedInProfPackets.setStatus("obsolete")
_SapIgQosPlcyForwardedInProfOctets_Type = Counter64
_SapIgQosPlcyForwardedInProfOctets_Object = MibTableColumn
sapIgQosPlcyForwardedInProfOctets = _SapIgQosPlcyForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 7),
    _SapIgQosPlcyForwardedInProfOctets_Type()
)
sapIgQosPlcyForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyForwardedInProfOctets.setStatus("obsolete")
_SapIgQosPlcyForwardedOutProfPackets_Type = Counter64
_SapIgQosPlcyForwardedOutProfPackets_Object = MibTableColumn
sapIgQosPlcyForwardedOutProfPackets = _SapIgQosPlcyForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 8),
    _SapIgQosPlcyForwardedOutProfPackets_Type()
)
sapIgQosPlcyForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyForwardedOutProfPackets.setStatus("obsolete")
_SapIgQosPlcyForwardedOutProfOctets_Type = Counter64
_SapIgQosPlcyForwardedOutProfOctets_Object = MibTableColumn
sapIgQosPlcyForwardedOutProfOctets = _SapIgQosPlcyForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 27, 1, 9),
    _SapIgQosPlcyForwardedOutProfOctets_Type()
)
sapIgQosPlcyForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyForwardedOutProfOctets.setStatus("obsolete")
_SapEgrQosPlcyStatsTable_Object = MibTable
sapEgrQosPlcyStatsTable = _SapEgrQosPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28)
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyStatsTable.setStatus("obsolete")
_SapEgrQosPlcyStatsEntry_Object = MibTableRow
sapEgrQosPlcyStatsEntry = _SapEgrQosPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1)
)
sapEgrQosPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgQosPlcyId"),
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyStatsEntry.setStatus("obsolete")
_SapEgQosPlcyId_Type = TSapEgressPolicyID
_SapEgQosPlcyId_Object = MibTableColumn
sapEgQosPlcyId = _SapEgQosPlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 1),
    _SapEgQosPlcyId_Type()
)
sapEgQosPlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgQosPlcyId.setStatus("obsolete")
_SapEgQosPlcyDroppedInProfPackets_Type = Counter64
_SapEgQosPlcyDroppedInProfPackets_Object = MibTableColumn
sapEgQosPlcyDroppedInProfPackets = _SapEgQosPlcyDroppedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 2),
    _SapEgQosPlcyDroppedInProfPackets_Type()
)
sapEgQosPlcyDroppedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyDroppedInProfPackets.setStatus("obsolete")
_SapEgQosPlcyDroppedInProfOctets_Type = Counter64
_SapEgQosPlcyDroppedInProfOctets_Object = MibTableColumn
sapEgQosPlcyDroppedInProfOctets = _SapEgQosPlcyDroppedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 3),
    _SapEgQosPlcyDroppedInProfOctets_Type()
)
sapEgQosPlcyDroppedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyDroppedInProfOctets.setStatus("obsolete")
_SapEgQosPlcyDroppedOutProfPackets_Type = Counter64
_SapEgQosPlcyDroppedOutProfPackets_Object = MibTableColumn
sapEgQosPlcyDroppedOutProfPackets = _SapEgQosPlcyDroppedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 4),
    _SapEgQosPlcyDroppedOutProfPackets_Type()
)
sapEgQosPlcyDroppedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyDroppedOutProfPackets.setStatus("obsolete")
_SapEgQosPlcyDroppedOutProfOctets_Type = Counter64
_SapEgQosPlcyDroppedOutProfOctets_Object = MibTableColumn
sapEgQosPlcyDroppedOutProfOctets = _SapEgQosPlcyDroppedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 5),
    _SapEgQosPlcyDroppedOutProfOctets_Type()
)
sapEgQosPlcyDroppedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyDroppedOutProfOctets.setStatus("obsolete")
_SapEgQosPlcyForwardedInProfPackets_Type = Counter64
_SapEgQosPlcyForwardedInProfPackets_Object = MibTableColumn
sapEgQosPlcyForwardedInProfPackets = _SapEgQosPlcyForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 6),
    _SapEgQosPlcyForwardedInProfPackets_Type()
)
sapEgQosPlcyForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyForwardedInProfPackets.setStatus("obsolete")
_SapEgQosPlcyForwardedInProfOctets_Type = Counter64
_SapEgQosPlcyForwardedInProfOctets_Object = MibTableColumn
sapEgQosPlcyForwardedInProfOctets = _SapEgQosPlcyForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 7),
    _SapEgQosPlcyForwardedInProfOctets_Type()
)
sapEgQosPlcyForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyForwardedInProfOctets.setStatus("obsolete")
_SapEgQosPlcyForwardedOutProfPackets_Type = Counter64
_SapEgQosPlcyForwardedOutProfPackets_Object = MibTableColumn
sapEgQosPlcyForwardedOutProfPackets = _SapEgQosPlcyForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 8),
    _SapEgQosPlcyForwardedOutProfPackets_Type()
)
sapEgQosPlcyForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyForwardedOutProfPackets.setStatus("obsolete")
_SapEgQosPlcyForwardedOutProfOctets_Type = Counter64
_SapEgQosPlcyForwardedOutProfOctets_Object = MibTableColumn
sapEgQosPlcyForwardedOutProfOctets = _SapEgQosPlcyForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 28, 1, 9),
    _SapEgQosPlcyForwardedOutProfOctets_Type()
)
sapEgQosPlcyForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyForwardedOutProfOctets.setStatus("obsolete")
_SapIngQosPlcyQueueStatsTable_Object = MibTable
sapIngQosPlcyQueueStatsTable = _SapIngQosPlcyQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29)
)
if mibBuilder.loadTexts:
    sapIngQosPlcyQueueStatsTable.setStatus("obsolete")
_SapIngQosPlcyQueueStatsEntry_Object = MibTableRow
sapIngQosPlcyQueueStatsEntry = _SapIngQosPlcyQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1)
)
sapIngQosPlcyQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIgQosPlcyQueuePlcyId"),
    (0, "TIMETRA-SAP-MIB", "sapIgQosPlcyQueueId"),
)
if mibBuilder.loadTexts:
    sapIngQosPlcyQueueStatsEntry.setStatus("obsolete")
_SapIgQosPlcyQueuePlcyId_Type = TSapIngressPolicyID
_SapIgQosPlcyQueuePlcyId_Object = MibTableColumn
sapIgQosPlcyQueuePlcyId = _SapIgQosPlcyQueuePlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 1),
    _SapIgQosPlcyQueuePlcyId_Type()
)
sapIgQosPlcyQueuePlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueuePlcyId.setStatus("obsolete")
_SapIgQosPlcyQueueId_Type = TSapIngQueueId
_SapIgQosPlcyQueueId_Object = MibTableColumn
sapIgQosPlcyQueueId = _SapIgQosPlcyQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 2),
    _SapIgQosPlcyQueueId_Type()
)
sapIgQosPlcyQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueId.setStatus("obsolete")
_SapIgQosPlcyQueueStatsOfferedHiPrioPackets_Type = Counter64
_SapIgQosPlcyQueueStatsOfferedHiPrioPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsOfferedHiPrioPackets = _SapIgQosPlcyQueueStatsOfferedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 3),
    _SapIgQosPlcyQueueStatsOfferedHiPrioPackets_Type()
)
sapIgQosPlcyQueueStatsOfferedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsOfferedHiPrioPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsDroppedHiPrioPackets_Type = Counter64
_SapIgQosPlcyQueueStatsDroppedHiPrioPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsDroppedHiPrioPackets = _SapIgQosPlcyQueueStatsDroppedHiPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 4),
    _SapIgQosPlcyQueueStatsDroppedHiPrioPackets_Type()
)
sapIgQosPlcyQueueStatsDroppedHiPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsDroppedHiPrioPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsOfferedLoPrioPackets_Type = Counter64
_SapIgQosPlcyQueueStatsOfferedLoPrioPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsOfferedLoPrioPackets = _SapIgQosPlcyQueueStatsOfferedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 5),
    _SapIgQosPlcyQueueStatsOfferedLoPrioPackets_Type()
)
sapIgQosPlcyQueueStatsOfferedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsOfferedLoPrioPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsDroppedLoPrioPackets_Type = Counter64
_SapIgQosPlcyQueueStatsDroppedLoPrioPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsDroppedLoPrioPackets = _SapIgQosPlcyQueueStatsDroppedLoPrioPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 6),
    _SapIgQosPlcyQueueStatsDroppedLoPrioPackets_Type()
)
sapIgQosPlcyQueueStatsDroppedLoPrioPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsDroppedLoPrioPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsOfferedHiPrioOctets_Type = Counter64
_SapIgQosPlcyQueueStatsOfferedHiPrioOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsOfferedHiPrioOctets = _SapIgQosPlcyQueueStatsOfferedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 7),
    _SapIgQosPlcyQueueStatsOfferedHiPrioOctets_Type()
)
sapIgQosPlcyQueueStatsOfferedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsOfferedHiPrioOctets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsDroppedHiPrioOctets_Type = Counter64
_SapIgQosPlcyQueueStatsDroppedHiPrioOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsDroppedHiPrioOctets = _SapIgQosPlcyQueueStatsDroppedHiPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 8),
    _SapIgQosPlcyQueueStatsDroppedHiPrioOctets_Type()
)
sapIgQosPlcyQueueStatsDroppedHiPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsDroppedHiPrioOctets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsOfferedLoPrioOctets_Type = Counter64
_SapIgQosPlcyQueueStatsOfferedLoPrioOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsOfferedLoPrioOctets = _SapIgQosPlcyQueueStatsOfferedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 9),
    _SapIgQosPlcyQueueStatsOfferedLoPrioOctets_Type()
)
sapIgQosPlcyQueueStatsOfferedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsOfferedLoPrioOctets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsDroppedLoPrioOctets_Type = Counter64
_SapIgQosPlcyQueueStatsDroppedLoPrioOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsDroppedLoPrioOctets = _SapIgQosPlcyQueueStatsDroppedLoPrioOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 10),
    _SapIgQosPlcyQueueStatsDroppedLoPrioOctets_Type()
)
sapIgQosPlcyQueueStatsDroppedLoPrioOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsDroppedLoPrioOctets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsForwardedInProfPackets_Type = Counter64
_SapIgQosPlcyQueueStatsForwardedInProfPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsForwardedInProfPackets = _SapIgQosPlcyQueueStatsForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 11),
    _SapIgQosPlcyQueueStatsForwardedInProfPackets_Type()
)
sapIgQosPlcyQueueStatsForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsForwardedInProfPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsForwardedOutProfPackets_Type = Counter64
_SapIgQosPlcyQueueStatsForwardedOutProfPackets_Object = MibTableColumn
sapIgQosPlcyQueueStatsForwardedOutProfPackets = _SapIgQosPlcyQueueStatsForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 12),
    _SapIgQosPlcyQueueStatsForwardedOutProfPackets_Type()
)
sapIgQosPlcyQueueStatsForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsForwardedOutProfPackets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsForwardedInProfOctets_Type = Counter64
_SapIgQosPlcyQueueStatsForwardedInProfOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsForwardedInProfOctets = _SapIgQosPlcyQueueStatsForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 13),
    _SapIgQosPlcyQueueStatsForwardedInProfOctets_Type()
)
sapIgQosPlcyQueueStatsForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsForwardedInProfOctets.setStatus("obsolete")
_SapIgQosPlcyQueueStatsForwardedOutProfOctets_Type = Counter64
_SapIgQosPlcyQueueStatsForwardedOutProfOctets_Object = MibTableColumn
sapIgQosPlcyQueueStatsForwardedOutProfOctets = _SapIgQosPlcyQueueStatsForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 14),
    _SapIgQosPlcyQueueStatsForwardedOutProfOctets_Type()
)
sapIgQosPlcyQueueStatsForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsForwardedOutProfOctets.setStatus("obsolete")
_SapIgQosPlcyQueueCustId_Type = TmnxCustId
_SapIgQosPlcyQueueCustId_Object = MibTableColumn
sapIgQosPlcyQueueCustId = _SapIgQosPlcyQueueCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 15),
    _SapIgQosPlcyQueueCustId_Type()
)
sapIgQosPlcyQueueCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueCustId.setStatus("obsolete")
_SapIgQosPlcyQueueStatsUncoloredPacketsOffered_Type = Counter64
_SapIgQosPlcyQueueStatsUncoloredPacketsOffered_Object = MibTableColumn
sapIgQosPlcyQueueStatsUncoloredPacketsOffered = _SapIgQosPlcyQueueStatsUncoloredPacketsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 16),
    _SapIgQosPlcyQueueStatsUncoloredPacketsOffered_Type()
)
sapIgQosPlcyQueueStatsUncoloredPacketsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsUncoloredPacketsOffered.setStatus("obsolete")
_SapIgQosPlcyQueueStatsUncoloredOctetsOffered_Type = Counter64
_SapIgQosPlcyQueueStatsUncoloredOctetsOffered_Object = MibTableColumn
sapIgQosPlcyQueueStatsUncoloredOctetsOffered = _SapIgQosPlcyQueueStatsUncoloredOctetsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 29, 1, 17),
    _SapIgQosPlcyQueueStatsUncoloredOctetsOffered_Type()
)
sapIgQosPlcyQueueStatsUncoloredOctetsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyQueueStatsUncoloredOctetsOffered.setStatus("obsolete")
_SapEgrQosPlcyQueueStatsTable_Object = MibTable
sapEgrQosPlcyQueueStatsTable = _SapEgrQosPlcyQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30)
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyQueueStatsTable.setStatus("obsolete")
_SapEgrQosPlcyQueueStatsEntry_Object = MibTableRow
sapEgrQosPlcyQueueStatsEntry = _SapEgrQosPlcyQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1)
)
sapEgrQosPlcyQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgQosPlcyQueuePlcyId"),
    (0, "TIMETRA-SAP-MIB", "sapEgQosPlcyQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyQueueStatsEntry.setStatus("obsolete")
_SapEgQosPlcyQueuePlcyId_Type = TSapEgressPolicyID
_SapEgQosPlcyQueuePlcyId_Object = MibTableColumn
sapEgQosPlcyQueuePlcyId = _SapEgQosPlcyQueuePlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 1),
    _SapEgQosPlcyQueuePlcyId_Type()
)
sapEgQosPlcyQueuePlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueuePlcyId.setStatus("obsolete")
_SapEgQosPlcyQueueId_Type = TSapEgrQueueId
_SapEgQosPlcyQueueId_Object = MibTableColumn
sapEgQosPlcyQueueId = _SapEgQosPlcyQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 2),
    _SapEgQosPlcyQueueId_Type()
)
sapEgQosPlcyQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueId.setStatus("obsolete")
_SapEgQosPlcyQueueStatsForwardedInProfPackets_Type = Counter64
_SapEgQosPlcyQueueStatsForwardedInProfPackets_Object = MibTableColumn
sapEgQosPlcyQueueStatsForwardedInProfPackets = _SapEgQosPlcyQueueStatsForwardedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 3),
    _SapEgQosPlcyQueueStatsForwardedInProfPackets_Type()
)
sapEgQosPlcyQueueStatsForwardedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsForwardedInProfPackets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsDroppedInProfPackets_Type = Counter64
_SapEgQosPlcyQueueStatsDroppedInProfPackets_Object = MibTableColumn
sapEgQosPlcyQueueStatsDroppedInProfPackets = _SapEgQosPlcyQueueStatsDroppedInProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 4),
    _SapEgQosPlcyQueueStatsDroppedInProfPackets_Type()
)
sapEgQosPlcyQueueStatsDroppedInProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsDroppedInProfPackets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsForwardedOutProfPackets_Type = Counter64
_SapEgQosPlcyQueueStatsForwardedOutProfPackets_Object = MibTableColumn
sapEgQosPlcyQueueStatsForwardedOutProfPackets = _SapEgQosPlcyQueueStatsForwardedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 5),
    _SapEgQosPlcyQueueStatsForwardedOutProfPackets_Type()
)
sapEgQosPlcyQueueStatsForwardedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsForwardedOutProfPackets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsDroppedOutProfPackets_Type = Counter64
_SapEgQosPlcyQueueStatsDroppedOutProfPackets_Object = MibTableColumn
sapEgQosPlcyQueueStatsDroppedOutProfPackets = _SapEgQosPlcyQueueStatsDroppedOutProfPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 6),
    _SapEgQosPlcyQueueStatsDroppedOutProfPackets_Type()
)
sapEgQosPlcyQueueStatsDroppedOutProfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsDroppedOutProfPackets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsForwardedInProfOctets_Type = Counter64
_SapEgQosPlcyQueueStatsForwardedInProfOctets_Object = MibTableColumn
sapEgQosPlcyQueueStatsForwardedInProfOctets = _SapEgQosPlcyQueueStatsForwardedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 7),
    _SapEgQosPlcyQueueStatsForwardedInProfOctets_Type()
)
sapEgQosPlcyQueueStatsForwardedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsForwardedInProfOctets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsDroppedInProfOctets_Type = Counter64
_SapEgQosPlcyQueueStatsDroppedInProfOctets_Object = MibTableColumn
sapEgQosPlcyQueueStatsDroppedInProfOctets = _SapEgQosPlcyQueueStatsDroppedInProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 8),
    _SapEgQosPlcyQueueStatsDroppedInProfOctets_Type()
)
sapEgQosPlcyQueueStatsDroppedInProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsDroppedInProfOctets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsForwardedOutProfOctets_Type = Counter64
_SapEgQosPlcyQueueStatsForwardedOutProfOctets_Object = MibTableColumn
sapEgQosPlcyQueueStatsForwardedOutProfOctets = _SapEgQosPlcyQueueStatsForwardedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 9),
    _SapEgQosPlcyQueueStatsForwardedOutProfOctets_Type()
)
sapEgQosPlcyQueueStatsForwardedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsForwardedOutProfOctets.setStatus("obsolete")
_SapEgQosPlcyQueueStatsDroppedOutProfOctets_Type = Counter64
_SapEgQosPlcyQueueStatsDroppedOutProfOctets_Object = MibTableColumn
sapEgQosPlcyQueueStatsDroppedOutProfOctets = _SapEgQosPlcyQueueStatsDroppedOutProfOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 10),
    _SapEgQosPlcyQueueStatsDroppedOutProfOctets_Type()
)
sapEgQosPlcyQueueStatsDroppedOutProfOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueStatsDroppedOutProfOctets.setStatus("obsolete")
_SapEgQosPlcyQueueCustId_Type = TmnxCustId
_SapEgQosPlcyQueueCustId_Object = MibTableColumn
sapEgQosPlcyQueueCustId = _SapEgQosPlcyQueueCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 30, 1, 11),
    _SapEgQosPlcyQueueCustId_Type()
)
sapEgQosPlcyQueueCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyQueueCustId.setStatus("obsolete")
_SapDhcpInfoTable_Object = MibTable
sapDhcpInfoTable = _SapDhcpInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 31)
)
if mibBuilder.loadTexts:
    sapDhcpInfoTable.setStatus("current")
_SapDhcpInfoEntry_Object = MibTableRow
sapDhcpInfoEntry = _SapDhcpInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 31, 1)
)
sapDhcpInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapDhcpInfoEntry.setStatus("current")
_SapDhcpOperLeasePopulate_Type = Unsigned32
_SapDhcpOperLeasePopulate_Object = MibTableColumn
sapDhcpOperLeasePopulate = _SapDhcpOperLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 31, 1, 1),
    _SapDhcpOperLeasePopulate_Type()
)
sapDhcpOperLeasePopulate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDhcpOperLeasePopulate.setStatus("current")
_SapIngSchedPlcyStatsTable_Object = MibTable
sapIngSchedPlcyStatsTable = _SapIngSchedPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 32)
)
if mibBuilder.loadTexts:
    sapIngSchedPlcyStatsTable.setStatus("obsolete")
_SapIngSchedPlcyStatsEntry_Object = MibTableRow
sapIngSchedPlcyStatsEntry = _SapIngSchedPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 32, 1)
)
sapIngSchedPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (1, "TIMETRA-SAP-MIB", "sapIngQosSchedName"),
)
if mibBuilder.loadTexts:
    sapIngSchedPlcyStatsEntry.setStatus("obsolete")
_SapIngSchedPlcyStatsFwdPkt_Type = Counter64
_SapIngSchedPlcyStatsFwdPkt_Object = MibTableColumn
sapIngSchedPlcyStatsFwdPkt = _SapIngSchedPlcyStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 32, 1, 1),
    _SapIngSchedPlcyStatsFwdPkt_Type()
)
sapIngSchedPlcyStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngSchedPlcyStatsFwdPkt.setStatus("obsolete")
_SapIngSchedPlcyStatsFwdOct_Type = Counter64
_SapIngSchedPlcyStatsFwdOct_Object = MibTableColumn
sapIngSchedPlcyStatsFwdOct = _SapIngSchedPlcyStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 32, 1, 2),
    _SapIngSchedPlcyStatsFwdOct_Type()
)
sapIngSchedPlcyStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngSchedPlcyStatsFwdOct.setStatus("obsolete")
_SapEgrSchedPlcyStatsTable_Object = MibTable
sapEgrSchedPlcyStatsTable = _SapEgrSchedPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 33)
)
if mibBuilder.loadTexts:
    sapEgrSchedPlcyStatsTable.setStatus("obsolete")
_SapEgrSchedPlcyStatsEntry_Object = MibTableRow
sapEgrSchedPlcyStatsEntry = _SapEgrSchedPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 33, 1)
)
sapEgrSchedPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (1, "TIMETRA-SAP-MIB", "sapEgrQosSchedName"),
)
if mibBuilder.loadTexts:
    sapEgrSchedPlcyStatsEntry.setStatus("obsolete")
_SapEgrSchedPlcyStatsFwdPkt_Type = Counter64
_SapEgrSchedPlcyStatsFwdPkt_Object = MibTableColumn
sapEgrSchedPlcyStatsFwdPkt = _SapEgrSchedPlcyStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 33, 1, 1),
    _SapEgrSchedPlcyStatsFwdPkt_Type()
)
sapEgrSchedPlcyStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrSchedPlcyStatsFwdPkt.setStatus("obsolete")
_SapEgrSchedPlcyStatsFwdOct_Type = Counter64
_SapEgrSchedPlcyStatsFwdOct_Object = MibTableColumn
sapEgrSchedPlcyStatsFwdOct = _SapEgrSchedPlcyStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 33, 1, 2),
    _SapEgrSchedPlcyStatsFwdOct_Type()
)
sapEgrSchedPlcyStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrSchedPlcyStatsFwdOct.setStatus("obsolete")
_SapIngSchedPlcyPortStatsTable_Object = MibTable
sapIngSchedPlcyPortStatsTable = _SapIngSchedPlcyPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 34)
)
if mibBuilder.loadTexts:
    sapIngSchedPlcyPortStatsTable.setStatus("obsolete")
_SapIngSchedPlcyPortStatsEntry_Object = MibTableRow
sapIngSchedPlcyPortStatsEntry = _SapIngSchedPlcyPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 34, 1)
)
sapIngSchedPlcyPortStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (0, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdIngPortId"),
)
if mibBuilder.loadTexts:
    sapIngSchedPlcyPortStatsEntry.setStatus("obsolete")
_SapIngSchedPlcyPortStatsPort_Type = TmnxPortID
_SapIngSchedPlcyPortStatsPort_Object = MibTableColumn
sapIngSchedPlcyPortStatsPort = _SapIngSchedPlcyPortStatsPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 34, 1, 1),
    _SapIngSchedPlcyPortStatsPort_Type()
)
sapIngSchedPlcyPortStatsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngSchedPlcyPortStatsPort.setStatus("obsolete")
_SapIngSchedPlcyPortStatsFwdPkt_Type = Counter64
_SapIngSchedPlcyPortStatsFwdPkt_Object = MibTableColumn
sapIngSchedPlcyPortStatsFwdPkt = _SapIngSchedPlcyPortStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 34, 1, 2),
    _SapIngSchedPlcyPortStatsFwdPkt_Type()
)
sapIngSchedPlcyPortStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngSchedPlcyPortStatsFwdPkt.setStatus("obsolete")
_SapIngSchedPlcyPortStatsFwdOct_Type = Counter64
_SapIngSchedPlcyPortStatsFwdOct_Object = MibTableColumn
sapIngSchedPlcyPortStatsFwdOct = _SapIngSchedPlcyPortStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 34, 1, 3),
    _SapIngSchedPlcyPortStatsFwdOct_Type()
)
sapIngSchedPlcyPortStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngSchedPlcyPortStatsFwdOct.setStatus("obsolete")
_SapEgrSchedPlcyPortStatsTable_Object = MibTable
sapEgrSchedPlcyPortStatsTable = _SapEgrSchedPlcyPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 35)
)
if mibBuilder.loadTexts:
    sapEgrSchedPlcyPortStatsTable.setStatus("obsolete")
_SapEgrSchedPlcyPortStatsEntry_Object = MibTableRow
sapEgrSchedPlcyPortStatsEntry = _SapEgrSchedPlcyPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 35, 1)
)
sapEgrSchedPlcyPortStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (0, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrPortId"),
)
if mibBuilder.loadTexts:
    sapEgrSchedPlcyPortStatsEntry.setStatus("obsolete")
_SapEgrSchedPlcyPortStatsPort_Type = TmnxPortID
_SapEgrSchedPlcyPortStatsPort_Object = MibTableColumn
sapEgrSchedPlcyPortStatsPort = _SapEgrSchedPlcyPortStatsPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 35, 1, 1),
    _SapEgrSchedPlcyPortStatsPort_Type()
)
sapEgrSchedPlcyPortStatsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrSchedPlcyPortStatsPort.setStatus("obsolete")
_SapEgrSchedPlcyPortStatsFwdPkt_Type = Counter64
_SapEgrSchedPlcyPortStatsFwdPkt_Object = MibTableColumn
sapEgrSchedPlcyPortStatsFwdPkt = _SapEgrSchedPlcyPortStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 35, 1, 2),
    _SapEgrSchedPlcyPortStatsFwdPkt_Type()
)
sapEgrSchedPlcyPortStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrSchedPlcyPortStatsFwdPkt.setStatus("obsolete")
_SapEgrSchedPlcyPortStatsFwdOct_Type = Counter64
_SapEgrSchedPlcyPortStatsFwdOct_Object = MibTableColumn
sapEgrSchedPlcyPortStatsFwdOct = _SapEgrSchedPlcyPortStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 35, 1, 3),
    _SapEgrSchedPlcyPortStatsFwdOct_Type()
)
sapEgrSchedPlcyPortStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrSchedPlcyPortStatsFwdOct.setStatus("obsolete")
_SapCemInfoTable_Object = MibTable
sapCemInfoTable = _SapCemInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40)
)
if mibBuilder.loadTexts:
    sapCemInfoTable.setStatus("current")
_SapCemInfoEntry_Object = MibTableRow
sapCemInfoEntry = _SapCemInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1)
)
sapCemInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapCemInfoEntry.setStatus("current")
_SapCemLastMgmtChange_Type = TimeStamp
_SapCemLastMgmtChange_Object = MibTableColumn
sapCemLastMgmtChange = _SapCemLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 1),
    _SapCemLastMgmtChange_Type()
)
sapCemLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemLastMgmtChange.setStatus("current")


class _SapCemEndpointType_Type(Integer32):
    """Custom type sapCemEndpointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("unstructuredE1", 1),
          ("unstructuredT1", 2),
          ("unstructuredE3", 3),
          ("unstructuredT3", 4),
          ("nxDS0", 5),
          ("nxDS0WithCas", 6))
    )


_SapCemEndpointType_Type.__name__ = "Integer32"
_SapCemEndpointType_Object = MibTableColumn
sapCemEndpointType = _SapCemEndpointType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 2),
    _SapCemEndpointType_Type()
)
sapCemEndpointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemEndpointType.setStatus("current")


class _SapCemBitrate_Type(Unsigned32):
    """Custom type sapCemBitrate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 699),
    )


_SapCemBitrate_Type.__name__ = "Unsigned32"
_SapCemBitrate_Object = MibTableColumn
sapCemBitrate = _SapCemBitrate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 3),
    _SapCemBitrate_Type()
)
sapCemBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemBitrate.setStatus("current")
if mibBuilder.loadTexts:
    sapCemBitrate.setUnits("sixty-four kilobps")
_SapCemCasTrunkFraming_Type = TdmOptionsCasTrunkFraming
_SapCemCasTrunkFraming_Object = MibTableColumn
sapCemCasTrunkFraming = _SapCemCasTrunkFraming_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 4),
    _SapCemCasTrunkFraming_Type()
)
sapCemCasTrunkFraming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemCasTrunkFraming.setStatus("current")


class _SapCemPayloadSize_Type(Unsigned32):
    """Custom type sapCemPayloadSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(16, 2048),
    )


_SapCemPayloadSize_Type.__name__ = "Unsigned32"
_SapCemPayloadSize_Object = MibTableColumn
sapCemPayloadSize = _SapCemPayloadSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 5),
    _SapCemPayloadSize_Type()
)
sapCemPayloadSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemPayloadSize.setStatus("current")
if mibBuilder.loadTexts:
    sapCemPayloadSize.setUnits("bytes")


class _SapCemJitterBuffer_Type(Unsigned32):
    """Custom type sapCemJitterBuffer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 250),
    )


_SapCemJitterBuffer_Type.__name__ = "Unsigned32"
_SapCemJitterBuffer_Object = MibTableColumn
sapCemJitterBuffer = _SapCemJitterBuffer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 6),
    _SapCemJitterBuffer_Type()
)
sapCemJitterBuffer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemJitterBuffer.setStatus("current")
if mibBuilder.loadTexts:
    sapCemJitterBuffer.setUnits("milliseconds")


class _SapCemUseRtpHeader_Type(TruthValue):
    """Custom type sapCemUseRtpHeader based on TruthValue"""
    defaultValue = 2


_SapCemUseRtpHeader_Type.__name__ = "TruthValue"
_SapCemUseRtpHeader_Object = MibTableColumn
sapCemUseRtpHeader = _SapCemUseRtpHeader_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 7),
    _SapCemUseRtpHeader_Type()
)
sapCemUseRtpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemUseRtpHeader.setStatus("current")
_SapCemDifferential_Type = TruthValue
_SapCemDifferential_Object = MibTableColumn
sapCemDifferential = _SapCemDifferential_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 8),
    _SapCemDifferential_Type()
)
sapCemDifferential.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemDifferential.setStatus("current")
_SapCemTimestampFreq_Type = Unsigned32
_SapCemTimestampFreq_Object = MibTableColumn
sapCemTimestampFreq = _SapCemTimestampFreq_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 9),
    _SapCemTimestampFreq_Type()
)
sapCemTimestampFreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemTimestampFreq.setStatus("current")
if mibBuilder.loadTexts:
    sapCemTimestampFreq.setUnits("8 KHz")


class _SapCemReportAlarm_Type(CemSapReportAlarm):
    """Custom type sapCemReportAlarm based on CemSapReportAlarm"""
    defaultBinValue = "011111"


_SapCemReportAlarm_Type.__name__ = "CemSapReportAlarm"
_SapCemReportAlarm_Object = MibTableColumn
sapCemReportAlarm = _SapCemReportAlarm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 10),
    _SapCemReportAlarm_Type()
)
sapCemReportAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemReportAlarm.setStatus("current")
_SapCemReportAlarmStatus_Type = CemSapReportAlarm
_SapCemReportAlarmStatus_Object = MibTableColumn
sapCemReportAlarmStatus = _SapCemReportAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 11),
    _SapCemReportAlarmStatus_Type()
)
sapCemReportAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemReportAlarmStatus.setStatus("current")


class _SapCemLocalEcid_Type(CemSapEcid):
    """Custom type sapCemLocalEcid based on CemSapEcid"""
    defaultValue = 0


_SapCemLocalEcid_Type.__name__ = "CemSapEcid"
_SapCemLocalEcid_Object = MibTableColumn
sapCemLocalEcid = _SapCemLocalEcid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 12),
    _SapCemLocalEcid_Type()
)
sapCemLocalEcid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemLocalEcid.setStatus("current")


class _SapCemRemoteMacAddr_Type(MacAddress):
    """Custom type sapCemRemoteMacAddr based on MacAddress"""
    defaultHexValue = "000000000000"


_SapCemRemoteMacAddr_Type.__name__ = "MacAddress"
_SapCemRemoteMacAddr_Object = MibTableColumn
sapCemRemoteMacAddr = _SapCemRemoteMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 13),
    _SapCemRemoteMacAddr_Type()
)
sapCemRemoteMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemRemoteMacAddr.setStatus("current")


class _SapCemRemoteEcid_Type(CemSapEcid):
    """Custom type sapCemRemoteEcid based on CemSapEcid"""
    defaultValue = 0


_SapCemRemoteEcid_Type.__name__ = "CemSapEcid"
_SapCemRemoteEcid_Object = MibTableColumn
sapCemRemoteEcid = _SapCemRemoteEcid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 14),
    _SapCemRemoteEcid_Type()
)
sapCemRemoteEcid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapCemRemoteEcid.setStatus("current")
_SapCemJitterBufPackets_Type = Unsigned32
_SapCemJitterBufPackets_Object = MibTableColumn
sapCemJitterBufPackets = _SapCemJitterBufPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 15),
    _SapCemJitterBufPackets_Type()
)
sapCemJitterBufPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemJitterBufPackets.setStatus("current")
if mibBuilder.loadTexts:
    sapCemJitterBufPackets.setUnits("packets")
_SapCemPlayoutBufPacketsThreshold_Type = Unsigned32
_SapCemPlayoutBufPacketsThreshold_Object = MibTableColumn
sapCemPlayoutBufPacketsThreshold = _SapCemPlayoutBufPacketsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 40, 1, 16),
    _SapCemPlayoutBufPacketsThreshold_Type()
)
sapCemPlayoutBufPacketsThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemPlayoutBufPacketsThreshold.setStatus("current")
if mibBuilder.loadTexts:
    sapCemPlayoutBufPacketsThreshold.setUnits("packets")
_SapCemStatsTable_Object = MibTable
sapCemStatsTable = _SapCemStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41)
)
if mibBuilder.loadTexts:
    sapCemStatsTable.setStatus("current")
_SapCemStatsEntry_Object = MibTableRow
sapCemStatsEntry = _SapCemStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1)
)
sapCemStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapCemStatsEntry.setStatus("current")
_SapCemStatsIngressForwardedPkts_Type = Counter32
_SapCemStatsIngressForwardedPkts_Object = MibTableColumn
sapCemStatsIngressForwardedPkts = _SapCemStatsIngressForwardedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 1),
    _SapCemStatsIngressForwardedPkts_Type()
)
sapCemStatsIngressForwardedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsIngressForwardedPkts.setStatus("current")
_SapCemStatsIngressDroppedPkts_Type = Counter32
_SapCemStatsIngressDroppedPkts_Object = MibTableColumn
sapCemStatsIngressDroppedPkts = _SapCemStatsIngressDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 2),
    _SapCemStatsIngressDroppedPkts_Type()
)
sapCemStatsIngressDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsIngressDroppedPkts.setStatus("current")
_SapCemStatsEgressForwardedPkts_Type = Counter32
_SapCemStatsEgressForwardedPkts_Object = MibTableColumn
sapCemStatsEgressForwardedPkts = _SapCemStatsEgressForwardedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 3),
    _SapCemStatsEgressForwardedPkts_Type()
)
sapCemStatsEgressForwardedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressForwardedPkts.setStatus("current")
_SapCemStatsEgressDroppedPkts_Type = Counter32
_SapCemStatsEgressDroppedPkts_Object = MibTableColumn
sapCemStatsEgressDroppedPkts = _SapCemStatsEgressDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 4),
    _SapCemStatsEgressDroppedPkts_Type()
)
sapCemStatsEgressDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressDroppedPkts.setStatus("current")
_SapCemStatsEgressMissingPkts_Type = Counter32
_SapCemStatsEgressMissingPkts_Object = MibTableColumn
sapCemStatsEgressMissingPkts = _SapCemStatsEgressMissingPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 5),
    _SapCemStatsEgressMissingPkts_Type()
)
sapCemStatsEgressMissingPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressMissingPkts.setStatus("current")
_SapCemStatsEgressPktsReOrder_Type = Counter32
_SapCemStatsEgressPktsReOrder_Object = MibTableColumn
sapCemStatsEgressPktsReOrder = _SapCemStatsEgressPktsReOrder_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 6),
    _SapCemStatsEgressPktsReOrder_Type()
)
sapCemStatsEgressPktsReOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressPktsReOrder.setStatus("current")
_SapCemStatsEgressJtrBfrUnderruns_Type = Counter32
_SapCemStatsEgressJtrBfrUnderruns_Object = MibTableColumn
sapCemStatsEgressJtrBfrUnderruns = _SapCemStatsEgressJtrBfrUnderruns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 7),
    _SapCemStatsEgressJtrBfrUnderruns_Type()
)
sapCemStatsEgressJtrBfrUnderruns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressJtrBfrUnderruns.setStatus("current")
_SapCemStatsEgressJtrBfrOverruns_Type = Counter32
_SapCemStatsEgressJtrBfrOverruns_Object = MibTableColumn
sapCemStatsEgressJtrBfrOverruns = _SapCemStatsEgressJtrBfrOverruns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 8),
    _SapCemStatsEgressJtrBfrOverruns_Type()
)
sapCemStatsEgressJtrBfrOverruns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressJtrBfrOverruns.setStatus("current")
_SapCemStatsEgressMisOrderDropped_Type = Counter32
_SapCemStatsEgressMisOrderDropped_Object = MibTableColumn
sapCemStatsEgressMisOrderDropped = _SapCemStatsEgressMisOrderDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 9),
    _SapCemStatsEgressMisOrderDropped_Type()
)
sapCemStatsEgressMisOrderDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressMisOrderDropped.setStatus("current")
_SapCemStatsEgressMalformedPkts_Type = Counter32
_SapCemStatsEgressMalformedPkts_Object = MibTableColumn
sapCemStatsEgressMalformedPkts = _SapCemStatsEgressMalformedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 10),
    _SapCemStatsEgressMalformedPkts_Type()
)
sapCemStatsEgressMalformedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressMalformedPkts.setStatus("current")
_SapCemStatsEgressLBitDropped_Type = Counter32
_SapCemStatsEgressLBitDropped_Object = MibTableColumn
sapCemStatsEgressLBitDropped = _SapCemStatsEgressLBitDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 11),
    _SapCemStatsEgressLBitDropped_Type()
)
sapCemStatsEgressLBitDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressLBitDropped.setStatus("current")
_SapCemStatsEgressMultipleDropped_Type = Counter32
_SapCemStatsEgressMultipleDropped_Object = MibTableColumn
sapCemStatsEgressMultipleDropped = _SapCemStatsEgressMultipleDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 12),
    _SapCemStatsEgressMultipleDropped_Type()
)
sapCemStatsEgressMultipleDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressMultipleDropped.setStatus("current")
_SapCemStatsEgressESs_Type = Counter32
_SapCemStatsEgressESs_Object = MibTableColumn
sapCemStatsEgressESs = _SapCemStatsEgressESs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 13),
    _SapCemStatsEgressESs_Type()
)
sapCemStatsEgressESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressESs.setStatus("current")
_SapCemStatsEgressSESs_Type = Counter32
_SapCemStatsEgressSESs_Object = MibTableColumn
sapCemStatsEgressSESs = _SapCemStatsEgressSESs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 14),
    _SapCemStatsEgressSESs_Type()
)
sapCemStatsEgressSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressSESs.setStatus("current")
_SapCemStatsEgressUASs_Type = Counter32
_SapCemStatsEgressUASs_Object = MibTableColumn
sapCemStatsEgressUASs = _SapCemStatsEgressUASs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 15),
    _SapCemStatsEgressUASs_Type()
)
sapCemStatsEgressUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressUASs.setStatus("current")
_SapCemStatsEgressFailureCounts_Type = Counter32
_SapCemStatsEgressFailureCounts_Object = MibTableColumn
sapCemStatsEgressFailureCounts = _SapCemStatsEgressFailureCounts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 16),
    _SapCemStatsEgressFailureCounts_Type()
)
sapCemStatsEgressFailureCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressFailureCounts.setStatus("current")
_SapCemStatsEgressUnderrunCounts_Type = Counter32
_SapCemStatsEgressUnderrunCounts_Object = MibTableColumn
sapCemStatsEgressUnderrunCounts = _SapCemStatsEgressUnderrunCounts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 17),
    _SapCemStatsEgressUnderrunCounts_Type()
)
sapCemStatsEgressUnderrunCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressUnderrunCounts.setStatus("current")
_SapCemStatsEgressOverrunCounts_Type = Counter32
_SapCemStatsEgressOverrunCounts_Object = MibTableColumn
sapCemStatsEgressOverrunCounts = _SapCemStatsEgressOverrunCounts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 18),
    _SapCemStatsEgressOverrunCounts_Type()
)
sapCemStatsEgressOverrunCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressOverrunCounts.setStatus("current")
_SapCemStatsEgressJtrBfrDepth_Type = Gauge32
_SapCemStatsEgressJtrBfrDepth_Object = MibTableColumn
sapCemStatsEgressJtrBfrDepth = _SapCemStatsEgressJtrBfrDepth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 41, 1, 19),
    _SapCemStatsEgressJtrBfrDepth_Type()
)
sapCemStatsEgressJtrBfrDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapCemStatsEgressJtrBfrDepth.setStatus("current")
_SapTlsL2ptStatsTable_Object = MibTable
sapTlsL2ptStatsTable = _SapTlsL2ptStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42)
)
if mibBuilder.loadTexts:
    sapTlsL2ptStatsTable.setStatus("current")
_SapTlsL2ptStatsEntry_Object = MibTableRow
sapTlsL2ptStatsEntry = _SapTlsL2ptStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1)
)
sapTlsL2ptStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsL2ptStatsEntry.setStatus("current")
_SapTlsL2ptStatsLastClearedTime_Type = TimeStamp
_SapTlsL2ptStatsLastClearedTime_Object = MibTableColumn
sapTlsL2ptStatsLastClearedTime = _SapTlsL2ptStatsLastClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 1),
    _SapTlsL2ptStatsLastClearedTime_Type()
)
sapTlsL2ptStatsLastClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsLastClearedTime.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpConfigBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpConfigBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx = _SapTlsL2ptStatsL2ptEncapStpConfigBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 2),
    _SapTlsL2ptStatsL2ptEncapStpConfigBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpConfigBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpConfigBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx = _SapTlsL2ptStatsL2ptEncapStpConfigBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 3),
    _SapTlsL2ptStatsL2ptEncapStpConfigBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpRstBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpRstBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpRstBpdusRx = _SapTlsL2ptStatsL2ptEncapStpRstBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 4),
    _SapTlsL2ptStatsL2ptEncapStpRstBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapStpRstBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpRstBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpRstBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpRstBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpRstBpdusTx = _SapTlsL2ptStatsL2ptEncapStpRstBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 5),
    _SapTlsL2ptStatsL2ptEncapStpRstBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapStpRstBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpRstBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpTcnBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpTcnBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx = _SapTlsL2ptStatsL2ptEncapStpTcnBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 6),
    _SapTlsL2ptStatsL2ptEncapStpTcnBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapStpTcnBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapStpTcnBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx = _SapTlsL2ptStatsL2ptEncapStpTcnBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 7),
    _SapTlsL2ptStatsL2ptEncapStpTcnBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx = _SapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 8),
    _SapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx = _SapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 9),
    _SapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstRstBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstRstBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx = _SapTlsL2ptStatsL2ptEncapPvstRstBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 10),
    _SapTlsL2ptStatsL2ptEncapPvstRstBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstRstBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstRstBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx = _SapTlsL2ptStatsL2ptEncapPvstRstBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 11),
    _SapTlsL2ptStatsL2ptEncapPvstRstBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx = _SapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 12),
    _SapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx = _SapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 13),
    _SapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx.setStatus("current")
_SapTlsL2ptStatsStpConfigBpdusRx_Type = Counter32
_SapTlsL2ptStatsStpConfigBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsStpConfigBpdusRx = _SapTlsL2ptStatsStpConfigBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 14),
    _SapTlsL2ptStatsStpConfigBpdusRx_Type()
)
sapTlsL2ptStatsStpConfigBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpConfigBpdusRx.setStatus("current")
_SapTlsL2ptStatsStpConfigBpdusTx_Type = Counter32
_SapTlsL2ptStatsStpConfigBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsStpConfigBpdusTx = _SapTlsL2ptStatsStpConfigBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 15),
    _SapTlsL2ptStatsStpConfigBpdusTx_Type()
)
sapTlsL2ptStatsStpConfigBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpConfigBpdusTx.setStatus("current")
_SapTlsL2ptStatsStpRstBpdusRx_Type = Counter32
_SapTlsL2ptStatsStpRstBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsStpRstBpdusRx = _SapTlsL2ptStatsStpRstBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 16),
    _SapTlsL2ptStatsStpRstBpdusRx_Type()
)
sapTlsL2ptStatsStpRstBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpRstBpdusRx.setStatus("current")
_SapTlsL2ptStatsStpRstBpdusTx_Type = Counter32
_SapTlsL2ptStatsStpRstBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsStpRstBpdusTx = _SapTlsL2ptStatsStpRstBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 17),
    _SapTlsL2ptStatsStpRstBpdusTx_Type()
)
sapTlsL2ptStatsStpRstBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpRstBpdusTx.setStatus("current")
_SapTlsL2ptStatsStpTcnBpdusRx_Type = Counter32
_SapTlsL2ptStatsStpTcnBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsStpTcnBpdusRx = _SapTlsL2ptStatsStpTcnBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 18),
    _SapTlsL2ptStatsStpTcnBpdusRx_Type()
)
sapTlsL2ptStatsStpTcnBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpTcnBpdusRx.setStatus("current")
_SapTlsL2ptStatsStpTcnBpdusTx_Type = Counter32
_SapTlsL2ptStatsStpTcnBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsStpTcnBpdusTx = _SapTlsL2ptStatsStpTcnBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 19),
    _SapTlsL2ptStatsStpTcnBpdusTx_Type()
)
sapTlsL2ptStatsStpTcnBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsStpTcnBpdusTx.setStatus("current")
_SapTlsL2ptStatsPvstConfigBpdusRx_Type = Counter32
_SapTlsL2ptStatsPvstConfigBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsPvstConfigBpdusRx = _SapTlsL2ptStatsPvstConfigBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 20),
    _SapTlsL2ptStatsPvstConfigBpdusRx_Type()
)
sapTlsL2ptStatsPvstConfigBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstConfigBpdusRx.setStatus("current")
_SapTlsL2ptStatsPvstConfigBpdusTx_Type = Counter32
_SapTlsL2ptStatsPvstConfigBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsPvstConfigBpdusTx = _SapTlsL2ptStatsPvstConfigBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 21),
    _SapTlsL2ptStatsPvstConfigBpdusTx_Type()
)
sapTlsL2ptStatsPvstConfigBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstConfigBpdusTx.setStatus("current")
_SapTlsL2ptStatsPvstRstBpdusRx_Type = Counter32
_SapTlsL2ptStatsPvstRstBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsPvstRstBpdusRx = _SapTlsL2ptStatsPvstRstBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 22),
    _SapTlsL2ptStatsPvstRstBpdusRx_Type()
)
sapTlsL2ptStatsPvstRstBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstRstBpdusRx.setStatus("current")
_SapTlsL2ptStatsPvstRstBpdusTx_Type = Counter32
_SapTlsL2ptStatsPvstRstBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsPvstRstBpdusTx = _SapTlsL2ptStatsPvstRstBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 23),
    _SapTlsL2ptStatsPvstRstBpdusTx_Type()
)
sapTlsL2ptStatsPvstRstBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstRstBpdusTx.setStatus("current")
_SapTlsL2ptStatsPvstTcnBpdusRx_Type = Counter32
_SapTlsL2ptStatsPvstTcnBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsPvstTcnBpdusRx = _SapTlsL2ptStatsPvstTcnBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 24),
    _SapTlsL2ptStatsPvstTcnBpdusRx_Type()
)
sapTlsL2ptStatsPvstTcnBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstTcnBpdusRx.setStatus("current")
_SapTlsL2ptStatsPvstTcnBpdusTx_Type = Counter32
_SapTlsL2ptStatsPvstTcnBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsPvstTcnBpdusTx = _SapTlsL2ptStatsPvstTcnBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 25),
    _SapTlsL2ptStatsPvstTcnBpdusTx_Type()
)
sapTlsL2ptStatsPvstTcnBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPvstTcnBpdusTx.setStatus("current")
_SapTlsL2ptStatsOtherBpdusRx_Type = Counter32
_SapTlsL2ptStatsOtherBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsOtherBpdusRx = _SapTlsL2ptStatsOtherBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 26),
    _SapTlsL2ptStatsOtherBpdusRx_Type()
)
sapTlsL2ptStatsOtherBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherBpdusRx.setStatus("current")
_SapTlsL2ptStatsOtherBpdusTx_Type = Counter32
_SapTlsL2ptStatsOtherBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsOtherBpdusTx = _SapTlsL2ptStatsOtherBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 27),
    _SapTlsL2ptStatsOtherBpdusTx_Type()
)
sapTlsL2ptStatsOtherBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherBpdusTx.setStatus("current")
_SapTlsL2ptStatsOtherL2ptBpdusRx_Type = Counter32
_SapTlsL2ptStatsOtherL2ptBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsOtherL2ptBpdusRx = _SapTlsL2ptStatsOtherL2ptBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 28),
    _SapTlsL2ptStatsOtherL2ptBpdusRx_Type()
)
sapTlsL2ptStatsOtherL2ptBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherL2ptBpdusRx.setStatus("current")
_SapTlsL2ptStatsOtherL2ptBpdusTx_Type = Counter32
_SapTlsL2ptStatsOtherL2ptBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsOtherL2ptBpdusTx = _SapTlsL2ptStatsOtherL2ptBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 29),
    _SapTlsL2ptStatsOtherL2ptBpdusTx_Type()
)
sapTlsL2ptStatsOtherL2ptBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherL2ptBpdusTx.setStatus("current")
_SapTlsL2ptStatsOtherInvalidBpdusRx_Type = Counter32
_SapTlsL2ptStatsOtherInvalidBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsOtherInvalidBpdusRx = _SapTlsL2ptStatsOtherInvalidBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 30),
    _SapTlsL2ptStatsOtherInvalidBpdusRx_Type()
)
sapTlsL2ptStatsOtherInvalidBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherInvalidBpdusRx.setStatus("current")
_SapTlsL2ptStatsOtherInvalidBpdusTx_Type = Counter32
_SapTlsL2ptStatsOtherInvalidBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsOtherInvalidBpdusTx = _SapTlsL2ptStatsOtherInvalidBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 31),
    _SapTlsL2ptStatsOtherInvalidBpdusTx_Type()
)
sapTlsL2ptStatsOtherInvalidBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsOtherInvalidBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapCdpBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapCdpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapCdpBpdusRx = _SapTlsL2ptStatsL2ptEncapCdpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 32),
    _SapTlsL2ptStatsL2ptEncapCdpBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapCdpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapCdpBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapCdpBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapCdpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapCdpBpdusTx = _SapTlsL2ptStatsL2ptEncapCdpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 33),
    _SapTlsL2ptStatsL2ptEncapCdpBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapCdpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapCdpBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapVtpBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapVtpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapVtpBpdusRx = _SapTlsL2ptStatsL2ptEncapVtpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 34),
    _SapTlsL2ptStatsL2ptEncapVtpBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapVtpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapVtpBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapVtpBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapVtpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapVtpBpdusTx = _SapTlsL2ptStatsL2ptEncapVtpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 35),
    _SapTlsL2ptStatsL2ptEncapVtpBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapVtpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapVtpBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapDtpBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapDtpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapDtpBpdusRx = _SapTlsL2ptStatsL2ptEncapDtpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 36),
    _SapTlsL2ptStatsL2ptEncapDtpBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapDtpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapDtpBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapDtpBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapDtpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapDtpBpdusTx = _SapTlsL2ptStatsL2ptEncapDtpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 37),
    _SapTlsL2ptStatsL2ptEncapDtpBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapDtpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapDtpBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPagpBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPagpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPagpBpdusRx = _SapTlsL2ptStatsL2ptEncapPagpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 38),
    _SapTlsL2ptStatsL2ptEncapPagpBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapPagpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPagpBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapPagpBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapPagpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapPagpBpdusTx = _SapTlsL2ptStatsL2ptEncapPagpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 39),
    _SapTlsL2ptStatsL2ptEncapPagpBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapPagpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapPagpBpdusTx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapUdldBpdusRx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapUdldBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapUdldBpdusRx = _SapTlsL2ptStatsL2ptEncapUdldBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 40),
    _SapTlsL2ptStatsL2ptEncapUdldBpdusRx_Type()
)
sapTlsL2ptStatsL2ptEncapUdldBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapUdldBpdusRx.setStatus("current")
_SapTlsL2ptStatsL2ptEncapUdldBpdusTx_Type = Counter32
_SapTlsL2ptStatsL2ptEncapUdldBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsL2ptEncapUdldBpdusTx = _SapTlsL2ptStatsL2ptEncapUdldBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 41),
    _SapTlsL2ptStatsL2ptEncapUdldBpdusTx_Type()
)
sapTlsL2ptStatsL2ptEncapUdldBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsL2ptEncapUdldBpdusTx.setStatus("current")
_SapTlsL2ptStatsCdpBpdusRx_Type = Counter32
_SapTlsL2ptStatsCdpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsCdpBpdusRx = _SapTlsL2ptStatsCdpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 42),
    _SapTlsL2ptStatsCdpBpdusRx_Type()
)
sapTlsL2ptStatsCdpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsCdpBpdusRx.setStatus("current")
_SapTlsL2ptStatsCdpBpdusTx_Type = Counter32
_SapTlsL2ptStatsCdpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsCdpBpdusTx = _SapTlsL2ptStatsCdpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 43),
    _SapTlsL2ptStatsCdpBpdusTx_Type()
)
sapTlsL2ptStatsCdpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsCdpBpdusTx.setStatus("current")
_SapTlsL2ptStatsVtpBpdusRx_Type = Counter32
_SapTlsL2ptStatsVtpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsVtpBpdusRx = _SapTlsL2ptStatsVtpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 44),
    _SapTlsL2ptStatsVtpBpdusRx_Type()
)
sapTlsL2ptStatsVtpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsVtpBpdusRx.setStatus("current")
_SapTlsL2ptStatsVtpBpdusTx_Type = Counter32
_SapTlsL2ptStatsVtpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsVtpBpdusTx = _SapTlsL2ptStatsVtpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 45),
    _SapTlsL2ptStatsVtpBpdusTx_Type()
)
sapTlsL2ptStatsVtpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsVtpBpdusTx.setStatus("current")
_SapTlsL2ptStatsDtpBpdusRx_Type = Counter32
_SapTlsL2ptStatsDtpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsDtpBpdusRx = _SapTlsL2ptStatsDtpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 46),
    _SapTlsL2ptStatsDtpBpdusRx_Type()
)
sapTlsL2ptStatsDtpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsDtpBpdusRx.setStatus("current")
_SapTlsL2ptStatsDtpBpdusTx_Type = Counter32
_SapTlsL2ptStatsDtpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsDtpBpdusTx = _SapTlsL2ptStatsDtpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 47),
    _SapTlsL2ptStatsDtpBpdusTx_Type()
)
sapTlsL2ptStatsDtpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsDtpBpdusTx.setStatus("current")
_SapTlsL2ptStatsPagpBpdusRx_Type = Counter32
_SapTlsL2ptStatsPagpBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsPagpBpdusRx = _SapTlsL2ptStatsPagpBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 48),
    _SapTlsL2ptStatsPagpBpdusRx_Type()
)
sapTlsL2ptStatsPagpBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPagpBpdusRx.setStatus("current")
_SapTlsL2ptStatsPagpBpdusTx_Type = Counter32
_SapTlsL2ptStatsPagpBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsPagpBpdusTx = _SapTlsL2ptStatsPagpBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 49),
    _SapTlsL2ptStatsPagpBpdusTx_Type()
)
sapTlsL2ptStatsPagpBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsPagpBpdusTx.setStatus("current")
_SapTlsL2ptStatsUdldBpdusRx_Type = Counter32
_SapTlsL2ptStatsUdldBpdusRx_Object = MibTableColumn
sapTlsL2ptStatsUdldBpdusRx = _SapTlsL2ptStatsUdldBpdusRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 50),
    _SapTlsL2ptStatsUdldBpdusRx_Type()
)
sapTlsL2ptStatsUdldBpdusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsUdldBpdusRx.setStatus("current")
_SapTlsL2ptStatsUdldBpdusTx_Type = Counter32
_SapTlsL2ptStatsUdldBpdusTx_Object = MibTableColumn
sapTlsL2ptStatsUdldBpdusTx = _SapTlsL2ptStatsUdldBpdusTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 42, 1, 51),
    _SapTlsL2ptStatsUdldBpdusTx_Type()
)
sapTlsL2ptStatsUdldBpdusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsL2ptStatsUdldBpdusTx.setStatus("current")
_SapEthernetInfoTable_Object = MibTable
sapEthernetInfoTable = _SapEthernetInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 43)
)
if mibBuilder.loadTexts:
    sapEthernetInfoTable.setStatus("current")
_SapEthernetInfoEntry_Object = MibTableRow
sapEthernetInfoEntry = _SapEthernetInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 43, 1)
)
sapEthernetInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapEthernetInfoEntry.setStatus("current")


class _SapEthernetLLFAdminStatus_Type(ServiceAdminStatus):
    """Custom type sapEthernetLLFAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SapEthernetLLFAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SapEthernetLLFAdminStatus_Object = MibTableColumn
sapEthernetLLFAdminStatus = _SapEthernetLLFAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 43, 1, 1),
    _SapEthernetLLFAdminStatus_Type()
)
sapEthernetLLFAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthernetLLFAdminStatus.setStatus("current")


class _SapEthernetLLFOperStatus_Type(Integer32):
    """Custom type sapEthernetLLFOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fault", 1),
          ("clear", 2))
    )


_SapEthernetLLFOperStatus_Type.__name__ = "Integer32"
_SapEthernetLLFOperStatus_Object = MibTableColumn
sapEthernetLLFOperStatus = _SapEthernetLLFOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 43, 1, 2),
    _SapEthernetLLFOperStatus_Type()
)
sapEthernetLLFOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEthernetLLFOperStatus.setStatus("current")
_MsapPlcyTable_Object = MibTable
msapPlcyTable = _MsapPlcyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44)
)
if mibBuilder.loadTexts:
    msapPlcyTable.setStatus("current")
_MsapPlcyEntry_Object = MibTableRow
msapPlcyEntry = _MsapPlcyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1)
)
msapPlcyEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "msapPlcyName"),
)
if mibBuilder.loadTexts:
    msapPlcyEntry.setStatus("current")
_MsapPlcyName_Type = TNamedItem
_MsapPlcyName_Object = MibTableColumn
msapPlcyName = _MsapPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 1),
    _MsapPlcyName_Type()
)
msapPlcyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msapPlcyName.setStatus("current")
_MsapPlcyRowStatus_Type = RowStatus
_MsapPlcyRowStatus_Object = MibTableColumn
msapPlcyRowStatus = _MsapPlcyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 2),
    _MsapPlcyRowStatus_Type()
)
msapPlcyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyRowStatus.setStatus("current")
_MsapPlcyLastChanged_Type = TimeStamp
_MsapPlcyLastChanged_Object = MibTableColumn
msapPlcyLastChanged = _MsapPlcyLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 3),
    _MsapPlcyLastChanged_Type()
)
msapPlcyLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapPlcyLastChanged.setStatus("current")


class _MsapPlcyDescription_Type(TItemDescription):
    """Custom type msapPlcyDescription based on TItemDescription"""
    defaultValue = OctetString("")


_MsapPlcyDescription_Type.__name__ = "TItemDescription"
_MsapPlcyDescription_Object = MibTableColumn
msapPlcyDescription = _MsapPlcyDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 4),
    _MsapPlcyDescription_Type()
)
msapPlcyDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyDescription.setStatus("current")


class _MsapPlcyCpmProtPolicyId_Type(TCpmProtPolicyID):
    """Custom type msapPlcyCpmProtPolicyId based on TCpmProtPolicyID"""
    defaultValue = 254


_MsapPlcyCpmProtPolicyId_Type.__name__ = "TCpmProtPolicyID"
_MsapPlcyCpmProtPolicyId_Object = MibTableColumn
msapPlcyCpmProtPolicyId = _MsapPlcyCpmProtPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 5),
    _MsapPlcyCpmProtPolicyId_Type()
)
msapPlcyCpmProtPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyCpmProtPolicyId.setStatus("current")


class _MsapPlcyCpmProtMonitorMac_Type(TruthValue):
    """Custom type msapPlcyCpmProtMonitorMac based on TruthValue"""
    defaultValue = 2


_MsapPlcyCpmProtMonitorMac_Type.__name__ = "TruthValue"
_MsapPlcyCpmProtMonitorMac_Object = MibTableColumn
msapPlcyCpmProtMonitorMac = _MsapPlcyCpmProtMonitorMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 6),
    _MsapPlcyCpmProtMonitorMac_Type()
)
msapPlcyCpmProtMonitorMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyCpmProtMonitorMac.setStatus("current")


class _MsapPlcySubMgmtDefSubId_Type(TmnxDefSubIdSource):
    """Custom type msapPlcySubMgmtDefSubId based on TmnxDefSubIdSource"""
    defaultValue = 2


_MsapPlcySubMgmtDefSubId_Type.__name__ = "TmnxDefSubIdSource"
_MsapPlcySubMgmtDefSubId_Object = MibTableColumn
msapPlcySubMgmtDefSubId = _MsapPlcySubMgmtDefSubId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 7),
    _MsapPlcySubMgmtDefSubId_Type()
)
msapPlcySubMgmtDefSubId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefSubId.setStatus("current")


class _MsapPlcySubMgmtDefSubIdStr_Type(TLNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefSubIdStr based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefSubIdStr_Type.__name__ = "TLNamedItemOrEmpty"
_MsapPlcySubMgmtDefSubIdStr_Object = MibTableColumn
msapPlcySubMgmtDefSubIdStr = _MsapPlcySubMgmtDefSubIdStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 8),
    _MsapPlcySubMgmtDefSubIdStr_Type()
)
msapPlcySubMgmtDefSubIdStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefSubIdStr.setStatus("current")


class _MsapPlcySubMgmtDefSubProfile_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefSubProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefSubProfile_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtDefSubProfile_Object = MibTableColumn
msapPlcySubMgmtDefSubProfile = _MsapPlcySubMgmtDefSubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 9),
    _MsapPlcySubMgmtDefSubProfile_Type()
)
msapPlcySubMgmtDefSubProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefSubProfile.setStatus("current")


class _MsapPlcySubMgmtDefSlaProfile_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefSlaProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefSlaProfile_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtDefSlaProfile_Object = MibTableColumn
msapPlcySubMgmtDefSlaProfile = _MsapPlcySubMgmtDefSlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 10),
    _MsapPlcySubMgmtDefSlaProfile_Type()
)
msapPlcySubMgmtDefSlaProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefSlaProfile.setStatus("current")


class _MsapPlcySubMgmtDefAppProfile_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefAppProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefAppProfile_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtDefAppProfile_Object = MibTableColumn
msapPlcySubMgmtDefAppProfile = _MsapPlcySubMgmtDefAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 11),
    _MsapPlcySubMgmtDefAppProfile_Type()
)
msapPlcySubMgmtDefAppProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefAppProfile.setStatus("current")


class _MsapPlcySubMgmtSubIdPlcy_Type(TPolicyStatementNameOrEmpty):
    """Custom type msapPlcySubMgmtSubIdPlcy based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtSubIdPlcy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_MsapPlcySubMgmtSubIdPlcy_Object = MibTableColumn
msapPlcySubMgmtSubIdPlcy = _MsapPlcySubMgmtSubIdPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 12),
    _MsapPlcySubMgmtSubIdPlcy_Type()
)
msapPlcySubMgmtSubIdPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtSubIdPlcy.setStatus("current")


class _MsapPlcySubMgmtSubscriberLimit_Type(TmnxSapSubscriberLimit):
    """Custom type msapPlcySubMgmtSubscriberLimit based on TmnxSapSubscriberLimit"""
    defaultValue = 1


_MsapPlcySubMgmtSubscriberLimit_Type.__name__ = "TmnxSapSubscriberLimit"
_MsapPlcySubMgmtSubscriberLimit_Object = MibTableColumn
msapPlcySubMgmtSubscriberLimit = _MsapPlcySubMgmtSubscriberLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 13),
    _MsapPlcySubMgmtSubscriberLimit_Type()
)
msapPlcySubMgmtSubscriberLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtSubscriberLimit.setStatus("current")


class _MsapPlcySubMgmtProfiledTrafOnly_Type(TruthValue):
    """Custom type msapPlcySubMgmtProfiledTrafOnly based on TruthValue"""
    defaultValue = 2


_MsapPlcySubMgmtProfiledTrafOnly_Type.__name__ = "TruthValue"
_MsapPlcySubMgmtProfiledTrafOnly_Object = MibTableColumn
msapPlcySubMgmtProfiledTrafOnly = _MsapPlcySubMgmtProfiledTrafOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 14),
    _MsapPlcySubMgmtProfiledTrafOnly_Type()
)
msapPlcySubMgmtProfiledTrafOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtProfiledTrafOnly.setStatus("current")


class _MsapPlcySubMgmtNonSubTrafSubId_Type(TLNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtNonSubTrafSubId based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtNonSubTrafSubId_Type.__name__ = "TLNamedItemOrEmpty"
_MsapPlcySubMgmtNonSubTrafSubId_Object = MibTableColumn
msapPlcySubMgmtNonSubTrafSubId = _MsapPlcySubMgmtNonSubTrafSubId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 15),
    _MsapPlcySubMgmtNonSubTrafSubId_Type()
)
msapPlcySubMgmtNonSubTrafSubId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtNonSubTrafSubId.setStatus("current")


class _MsapPlcySubMgmtNonSubTrafSubProf_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtNonSubTrafSubProf based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtNonSubTrafSubProf_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtNonSubTrafSubProf_Object = MibTableColumn
msapPlcySubMgmtNonSubTrafSubProf = _MsapPlcySubMgmtNonSubTrafSubProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 16),
    _MsapPlcySubMgmtNonSubTrafSubProf_Type()
)
msapPlcySubMgmtNonSubTrafSubProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtNonSubTrafSubProf.setStatus("current")


class _MsapPlcySubMgmtNonSubTrafSlaProf_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtNonSubTrafSlaProf based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtNonSubTrafSlaProf_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtNonSubTrafSlaProf_Object = MibTableColumn
msapPlcySubMgmtNonSubTrafSlaProf = _MsapPlcySubMgmtNonSubTrafSlaProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 17),
    _MsapPlcySubMgmtNonSubTrafSlaProf_Type()
)
msapPlcySubMgmtNonSubTrafSlaProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtNonSubTrafSlaProf.setStatus("current")


class _MsapPlcySubMgmtNonSubTrafAppProf_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtNonSubTrafAppProf based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtNonSubTrafAppProf_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtNonSubTrafAppProf_Object = MibTableColumn
msapPlcySubMgmtNonSubTrafAppProf = _MsapPlcySubMgmtNonSubTrafAppProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 18),
    _MsapPlcySubMgmtNonSubTrafAppProf_Type()
)
msapPlcySubMgmtNonSubTrafAppProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtNonSubTrafAppProf.setStatus("current")
_MsapPlcyAssociatedMsaps_Type = Counter32
_MsapPlcyAssociatedMsaps_Object = MibTableColumn
msapPlcyAssociatedMsaps = _MsapPlcyAssociatedMsaps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 19),
    _MsapPlcyAssociatedMsaps_Type()
)
msapPlcyAssociatedMsaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapPlcyAssociatedMsaps.setStatus("current")


class _MsapPlcySubMgmtDefInterDestId_Type(TmnxDefInterDestIdSource):
    """Custom type msapPlcySubMgmtDefInterDestId based on TmnxDefInterDestIdSource"""
    defaultValue = 1


_MsapPlcySubMgmtDefInterDestId_Type.__name__ = "TmnxDefInterDestIdSource"
_MsapPlcySubMgmtDefInterDestId_Object = MibTableColumn
msapPlcySubMgmtDefInterDestId = _MsapPlcySubMgmtDefInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 20),
    _MsapPlcySubMgmtDefInterDestId_Type()
)
msapPlcySubMgmtDefInterDestId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefInterDestId.setStatus("current")


class _MsapPlcySubMgmtDefInterDestIdStr_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefInterDestIdStr based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefInterDestIdStr_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtDefInterDestIdStr_Object = MibTableColumn
msapPlcySubMgmtDefInterDestIdStr = _MsapPlcySubMgmtDefInterDestIdStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 21),
    _MsapPlcySubMgmtDefInterDestIdStr_Type()
)
msapPlcySubMgmtDefInterDestIdStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefInterDestIdStr.setStatus("current")


class _MsapPlcyIgmpTrkExpiryTime_Type(Unsigned32):
    """Custom type msapPlcyIgmpTrkExpiryTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 65535),
    )


_MsapPlcyIgmpTrkExpiryTime_Type.__name__ = "Unsigned32"
_MsapPlcyIgmpTrkExpiryTime_Object = MibTableColumn
msapPlcyIgmpTrkExpiryTime = _MsapPlcyIgmpTrkExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 22),
    _MsapPlcyIgmpTrkExpiryTime_Type()
)
msapPlcyIgmpTrkExpiryTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkExpiryTime.setStatus("current")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkExpiryTime.setUnits("seconds")


class _MsapPlcyIgmpTrkImportPlcy_Type(TPolicyStatementNameOrEmpty):
    """Custom type msapPlcyIgmpTrkImportPlcy based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcyIgmpTrkImportPlcy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_MsapPlcyIgmpTrkImportPlcy_Object = MibTableColumn
msapPlcyIgmpTrkImportPlcy = _MsapPlcyIgmpTrkImportPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 23),
    _MsapPlcyIgmpTrkImportPlcy_Type()
)
msapPlcyIgmpTrkImportPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkImportPlcy.setStatus("current")


class _MsapPlcyIgmpTrkMaxNbrGrps_Type(Unsigned32):
    """Custom type msapPlcyIgmpTrkMaxNbrGrps based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16000),
    )


_MsapPlcyIgmpTrkMaxNbrGrps_Type.__name__ = "Unsigned32"
_MsapPlcyIgmpTrkMaxNbrGrps_Object = MibTableColumn
msapPlcyIgmpTrkMaxNbrGrps = _MsapPlcyIgmpTrkMaxNbrGrps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 24),
    _MsapPlcyIgmpTrkMaxNbrGrps_Type()
)
msapPlcyIgmpTrkMaxNbrGrps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkMaxNbrGrps.setStatus("current")


class _MsapPlcyIgmpTrkMaxNbrSrcs_Type(Unsigned32):
    """Custom type msapPlcyIgmpTrkMaxNbrSrcs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_MsapPlcyIgmpTrkMaxNbrSrcs_Type.__name__ = "Unsigned32"
_MsapPlcyIgmpTrkMaxNbrSrcs_Object = MibTableColumn
msapPlcyIgmpTrkMaxNbrSrcs = _MsapPlcyIgmpTrkMaxNbrSrcs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 25),
    _MsapPlcyIgmpTrkMaxNbrSrcs_Type()
)
msapPlcyIgmpTrkMaxNbrSrcs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkMaxNbrSrcs.setStatus("current")


class _MsapPlcySubMgmtDefFilterProfile_Type(TNamedItemOrEmpty):
    """Custom type msapPlcySubMgmtDefFilterProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapPlcySubMgmtDefFilterProfile_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcySubMgmtDefFilterProfile_Object = MibTableColumn
msapPlcySubMgmtDefFilterProfile = _MsapPlcySubMgmtDefFilterProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 26),
    _MsapPlcySubMgmtDefFilterProfile_Type()
)
msapPlcySubMgmtDefFilterProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySubMgmtDefFilterProfile.setStatus("current")


class _MsapPlcyLagLinkMapProfile_Type(TmnxLinkMapProfileIdOrZero):
    """Custom type msapPlcyLagLinkMapProfile based on TmnxLinkMapProfileIdOrZero"""
    defaultValue = 0


_MsapPlcyLagLinkMapProfile_Type.__name__ = "TmnxLinkMapProfileIdOrZero"
_MsapPlcyLagLinkMapProfile_Object = MibTableColumn
msapPlcyLagLinkMapProfile = _MsapPlcyLagLinkMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 27),
    _MsapPlcyLagLinkMapProfile_Type()
)
msapPlcyLagLinkMapProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyLagLinkMapProfile.setStatus("current")


class _MsapPlcyIgmpTrkMaxNbrGrpSrcs_Type(Unsigned32):
    """Custom type msapPlcyIgmpTrkMaxNbrGrpSrcs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32000),
    )


_MsapPlcyIgmpTrkMaxNbrGrpSrcs_Type.__name__ = "Unsigned32"
_MsapPlcyIgmpTrkMaxNbrGrpSrcs_Object = MibTableColumn
msapPlcyIgmpTrkMaxNbrGrpSrcs = _MsapPlcyIgmpTrkMaxNbrGrpSrcs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 28),
    _MsapPlcyIgmpTrkMaxNbrGrpSrcs_Type()
)
msapPlcyIgmpTrkMaxNbrGrpSrcs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyIgmpTrkMaxNbrGrpSrcs.setStatus("current")


class _MsapPlcyDCpuProtPolicy_Type(TNamedItemOrEmpty):
    """Custom type msapPlcyDCpuProtPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_MsapPlcyDCpuProtPolicy_Type.__name__ = "TNamedItemOrEmpty"
_MsapPlcyDCpuProtPolicy_Object = MibTableColumn
msapPlcyDCpuProtPolicy = _MsapPlcyDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 29),
    _MsapPlcyDCpuProtPolicy_Type()
)
msapPlcyDCpuProtPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyDCpuProtPolicy.setStatus("current")


class _MsapPlcyCpmProtMonitorIP_Type(TruthValue):
    """Custom type msapPlcyCpmProtMonitorIP based on TruthValue"""
    defaultValue = 2


_MsapPlcyCpmProtMonitorIP_Type.__name__ = "TruthValue"
_MsapPlcyCpmProtMonitorIP_Object = MibTableColumn
msapPlcyCpmProtMonitorIP = _MsapPlcyCpmProtMonitorIP_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 30),
    _MsapPlcyCpmProtMonitorIP_Type()
)
msapPlcyCpmProtMonitorIP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyCpmProtMonitorIP.setStatus("current")


class _MsapPlcySticky_Type(TruthValue):
    """Custom type msapPlcySticky based on TruthValue"""
    defaultValue = 2


_MsapPlcySticky_Type.__name__ = "TruthValue"
_MsapPlcySticky_Object = MibTableColumn
msapPlcySticky = _MsapPlcySticky_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 33),
    _MsapPlcySticky_Type()
)
msapPlcySticky.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcySticky.setStatus("current")


class _MsapPlcyStickyTimeout_Type(Unsigned32):
    """Custom type msapPlcyStickyTimeout based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 604800),
    )


_MsapPlcyStickyTimeout_Type.__name__ = "Unsigned32"
_MsapPlcyStickyTimeout_Object = MibTableColumn
msapPlcyStickyTimeout = _MsapPlcyStickyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 44, 1, 34),
    _MsapPlcyStickyTimeout_Type()
)
msapPlcyStickyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapPlcyStickyTimeout.setStatus("current")
if mibBuilder.loadTexts:
    msapPlcyStickyTimeout.setUnits("seconds")
_MsapTlsPlcyTable_Object = MibTable
msapTlsPlcyTable = _MsapTlsPlcyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45)
)
if mibBuilder.loadTexts:
    msapTlsPlcyTable.setStatus("current")
_MsapTlsPlcyEntry_Object = MibTableRow
msapTlsPlcyEntry = _MsapTlsPlcyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1)
)
if mibBuilder.loadTexts:
    msapTlsPlcyEntry.setStatus("current")
_MsapTlsPlcyLastChanged_Type = TimeStamp
_MsapTlsPlcyLastChanged_Object = MibTableColumn
msapTlsPlcyLastChanged = _MsapTlsPlcyLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 1),
    _MsapTlsPlcyLastChanged_Type()
)
msapTlsPlcyLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapTlsPlcyLastChanged.setStatus("current")


class _MsapTlsPlcySplitHorizonGrp_Type(TNamedItemOrEmpty):
    """Custom type msapTlsPlcySplitHorizonGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcySplitHorizonGrp_Type.__name__ = "TNamedItemOrEmpty"
_MsapTlsPlcySplitHorizonGrp_Object = MibTableColumn
msapTlsPlcySplitHorizonGrp = _MsapTlsPlcySplitHorizonGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 2),
    _MsapTlsPlcySplitHorizonGrp_Type()
)
msapTlsPlcySplitHorizonGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcySplitHorizonGrp.setStatus("current")


class _MsapTlsPlcyArpReplyAgent_Type(Integer32):
    """Custom type msapTlsPlcyArpReplyAgent based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("enabledWithSubscrIdent", 3))
    )


_MsapTlsPlcyArpReplyAgent_Type.__name__ = "Integer32"
_MsapTlsPlcyArpReplyAgent_Object = MibTableColumn
msapTlsPlcyArpReplyAgent = _MsapTlsPlcyArpReplyAgent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 3),
    _MsapTlsPlcyArpReplyAgent_Type()
)
msapTlsPlcyArpReplyAgent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyArpReplyAgent.setStatus("current")


class _MsapTlsPlcySubMgmtMacDaHashing_Type(TruthValue):
    """Custom type msapTlsPlcySubMgmtMacDaHashing based on TruthValue"""
    defaultValue = 2


_MsapTlsPlcySubMgmtMacDaHashing_Type.__name__ = "TruthValue"
_MsapTlsPlcySubMgmtMacDaHashing_Object = MibTableColumn
msapTlsPlcySubMgmtMacDaHashing = _MsapTlsPlcySubMgmtMacDaHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 4),
    _MsapTlsPlcySubMgmtMacDaHashing_Type()
)
msapTlsPlcySubMgmtMacDaHashing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcySubMgmtMacDaHashing.setStatus("current")


class _MsapTlsPlcyDhcpLeasePopulate_Type(Unsigned32):
    """Custom type msapTlsPlcyDhcpLeasePopulate based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_MsapTlsPlcyDhcpLeasePopulate_Type.__name__ = "Unsigned32"
_MsapTlsPlcyDhcpLeasePopulate_Object = MibTableColumn
msapTlsPlcyDhcpLeasePopulate = _MsapTlsPlcyDhcpLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 5),
    _MsapTlsPlcyDhcpLeasePopulate_Type()
)
msapTlsPlcyDhcpLeasePopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpLeasePopulate.setStatus("current")


class _MsapTlsPlcyDhcpPrxyAdminState_Type(TmnxEnabledDisabled):
    """Custom type msapTlsPlcyDhcpPrxyAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_MsapTlsPlcyDhcpPrxyAdminState_Type.__name__ = "TmnxEnabledDisabled"
_MsapTlsPlcyDhcpPrxyAdminState_Object = MibTableColumn
msapTlsPlcyDhcpPrxyAdminState = _MsapTlsPlcyDhcpPrxyAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 6),
    _MsapTlsPlcyDhcpPrxyAdminState_Type()
)
msapTlsPlcyDhcpPrxyAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyAdminState.setStatus("current")


class _MsapTlsPlcyDhcpPrxyServAddrType_Type(InetAddressType):
    """Custom type msapTlsPlcyDhcpPrxyServAddrType based on InetAddressType"""
    defaultValue = 0


_MsapTlsPlcyDhcpPrxyServAddrType_Type.__name__ = "InetAddressType"
_MsapTlsPlcyDhcpPrxyServAddrType_Object = MibTableColumn
msapTlsPlcyDhcpPrxyServAddrType = _MsapTlsPlcyDhcpPrxyServAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 7),
    _MsapTlsPlcyDhcpPrxyServAddrType_Type()
)
msapTlsPlcyDhcpPrxyServAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyServAddrType.setStatus("current")


class _MsapTlsPlcyDhcpPrxyServAddr_Type(InetAddress):
    """Custom type msapTlsPlcyDhcpPrxyServAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_MsapTlsPlcyDhcpPrxyServAddr_Type.__name__ = "InetAddress"
_MsapTlsPlcyDhcpPrxyServAddr_Object = MibTableColumn
msapTlsPlcyDhcpPrxyServAddr = _MsapTlsPlcyDhcpPrxyServAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 8),
    _MsapTlsPlcyDhcpPrxyServAddr_Type()
)
msapTlsPlcyDhcpPrxyServAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyServAddr.setStatus("current")


class _MsapTlsPlcyDhcpPrxyLeaseTime_Type(Unsigned32):
    """Custom type msapTlsPlcyDhcpPrxyLeaseTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(300, 315446399),
    )


_MsapTlsPlcyDhcpPrxyLeaseTime_Type.__name__ = "Unsigned32"
_MsapTlsPlcyDhcpPrxyLeaseTime_Object = MibTableColumn
msapTlsPlcyDhcpPrxyLeaseTime = _MsapTlsPlcyDhcpPrxyLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 9),
    _MsapTlsPlcyDhcpPrxyLeaseTime_Type()
)
msapTlsPlcyDhcpPrxyLeaseTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyLeaseTime.setUnits("seconds")


class _MsapTlsPlcyDhcpPrxyLTRadOverride_Type(TruthValue):
    """Custom type msapTlsPlcyDhcpPrxyLTRadOverride based on TruthValue"""
    defaultValue = 2


_MsapTlsPlcyDhcpPrxyLTRadOverride_Type.__name__ = "TruthValue"
_MsapTlsPlcyDhcpPrxyLTRadOverride_Object = MibTableColumn
msapTlsPlcyDhcpPrxyLTRadOverride = _MsapTlsPlcyDhcpPrxyLTRadOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 10),
    _MsapTlsPlcyDhcpPrxyLTRadOverride_Type()
)
msapTlsPlcyDhcpPrxyLTRadOverride.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpPrxyLTRadOverride.setStatus("current")


class _MsapTlsPlcyDhcpInfoAction_Type(Integer32):
    """Custom type msapTlsPlcyDhcpInfoAction based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("replace", 1),
          ("drop", 2),
          ("keep", 3))
    )


_MsapTlsPlcyDhcpInfoAction_Type.__name__ = "Integer32"
_MsapTlsPlcyDhcpInfoAction_Object = MibTableColumn
msapTlsPlcyDhcpInfoAction = _MsapTlsPlcyDhcpInfoAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 11),
    _MsapTlsPlcyDhcpInfoAction_Type()
)
msapTlsPlcyDhcpInfoAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpInfoAction.setStatus("current")


class _MsapTlsPlcyDhcpCircuitId_Type(Integer32):
    """Custom type msapTlsPlcyDhcpCircuitId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("asciiTuple", 1),
          ("vlanAsciiTuple", 2))
    )


_MsapTlsPlcyDhcpCircuitId_Type.__name__ = "Integer32"
_MsapTlsPlcyDhcpCircuitId_Object = MibTableColumn
msapTlsPlcyDhcpCircuitId = _MsapTlsPlcyDhcpCircuitId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 12),
    _MsapTlsPlcyDhcpCircuitId_Type()
)
msapTlsPlcyDhcpCircuitId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpCircuitId.setStatus("current")


class _MsapTlsPlcyDhcpRemoteId_Type(Integer32):
    """Custom type msapTlsPlcyDhcpRemoteId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("mac", 2),
          ("remote-id", 3))
    )


_MsapTlsPlcyDhcpRemoteId_Type.__name__ = "Integer32"
_MsapTlsPlcyDhcpRemoteId_Object = MibTableColumn
msapTlsPlcyDhcpRemoteId = _MsapTlsPlcyDhcpRemoteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 13),
    _MsapTlsPlcyDhcpRemoteId_Type()
)
msapTlsPlcyDhcpRemoteId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpRemoteId.setStatus("current")


class _MsapTlsPlcyDhcpRemoteIdString_Type(TNamedItemOrEmpty):
    """Custom type msapTlsPlcyDhcpRemoteIdString based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyDhcpRemoteIdString_Type.__name__ = "TNamedItemOrEmpty"
_MsapTlsPlcyDhcpRemoteIdString_Object = MibTableColumn
msapTlsPlcyDhcpRemoteIdString = _MsapTlsPlcyDhcpRemoteIdString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 14),
    _MsapTlsPlcyDhcpRemoteIdString_Type()
)
msapTlsPlcyDhcpRemoteIdString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpRemoteIdString.setStatus("current")


class _MsapTlsPlcyDhcpVendorInclOpts_Type(Bits):
    """Custom type msapTlsPlcyDhcpVendorInclOpts based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("systemId", 0),
          ("clientMac", 1),
          ("serviceId", 2),
          ("sapId", 3))
    )

_MsapTlsPlcyDhcpVendorInclOpts_Type.__name__ = "Bits"
_MsapTlsPlcyDhcpVendorInclOpts_Object = MibTableColumn
msapTlsPlcyDhcpVendorInclOpts = _MsapTlsPlcyDhcpVendorInclOpts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 15),
    _MsapTlsPlcyDhcpVendorInclOpts_Type()
)
msapTlsPlcyDhcpVendorInclOpts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpVendorInclOpts.setStatus("current")


class _MsapTlsPlcyDhcpVendorOptStr_Type(TNamedItemOrEmpty):
    """Custom type msapTlsPlcyDhcpVendorOptStr based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyDhcpVendorOptStr_Type.__name__ = "TNamedItemOrEmpty"
_MsapTlsPlcyDhcpVendorOptStr_Object = MibTableColumn
msapTlsPlcyDhcpVendorOptStr = _MsapTlsPlcyDhcpVendorOptStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 16),
    _MsapTlsPlcyDhcpVendorOptStr_Type()
)
msapTlsPlcyDhcpVendorOptStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyDhcpVendorOptStr.setStatus("current")


class _MsapTlsPlcyEgressMcastGroup_Type(TNamedItemOrEmpty):
    """Custom type msapTlsPlcyEgressMcastGroup based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyEgressMcastGroup_Type.__name__ = "TNamedItemOrEmpty"
_MsapTlsPlcyEgressMcastGroup_Object = MibTableColumn
msapTlsPlcyEgressMcastGroup = _MsapTlsPlcyEgressMcastGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 17),
    _MsapTlsPlcyEgressMcastGroup_Type()
)
msapTlsPlcyEgressMcastGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyEgressMcastGroup.setStatus("obsolete")


class _MsapTlsPlcyIgmpSnpgImportPlcy_Type(TPolicyStatementNameOrEmpty):
    """Custom type msapTlsPlcyIgmpSnpgImportPlcy based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyIgmpSnpgImportPlcy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_MsapTlsPlcyIgmpSnpgImportPlcy_Object = MibTableColumn
msapTlsPlcyIgmpSnpgImportPlcy = _MsapTlsPlcyIgmpSnpgImportPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 18),
    _MsapTlsPlcyIgmpSnpgImportPlcy_Type()
)
msapTlsPlcyIgmpSnpgImportPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgImportPlcy.setStatus("current")


class _MsapTlsPlcyIgmpSnpgFastLeave_Type(TmnxEnabledDisabled):
    """Custom type msapTlsPlcyIgmpSnpgFastLeave based on TmnxEnabledDisabled"""
    defaultValue = 2


_MsapTlsPlcyIgmpSnpgFastLeave_Type.__name__ = "TmnxEnabledDisabled"
_MsapTlsPlcyIgmpSnpgFastLeave_Object = MibTableColumn
msapTlsPlcyIgmpSnpgFastLeave = _MsapTlsPlcyIgmpSnpgFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 19),
    _MsapTlsPlcyIgmpSnpgFastLeave_Type()
)
msapTlsPlcyIgmpSnpgFastLeave.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgFastLeave.setStatus("current")


class _MsapTlsPlcyIgmpSnpgSendQueries_Type(TmnxEnabledDisabled):
    """Custom type msapTlsPlcyIgmpSnpgSendQueries based on TmnxEnabledDisabled"""
    defaultValue = 2


_MsapTlsPlcyIgmpSnpgSendQueries_Type.__name__ = "TmnxEnabledDisabled"
_MsapTlsPlcyIgmpSnpgSendQueries_Object = MibTableColumn
msapTlsPlcyIgmpSnpgSendQueries = _MsapTlsPlcyIgmpSnpgSendQueries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 20),
    _MsapTlsPlcyIgmpSnpgSendQueries_Type()
)
msapTlsPlcyIgmpSnpgSendQueries.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgSendQueries.setStatus("current")


class _MsapTlsPlcyIgmpSnpgGenQueryIntv_Type(Unsigned32):
    """Custom type msapTlsPlcyIgmpSnpgGenQueryIntv based on Unsigned32"""
    defaultValue = 125

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_MsapTlsPlcyIgmpSnpgGenQueryIntv_Type.__name__ = "Unsigned32"
_MsapTlsPlcyIgmpSnpgGenQueryIntv_Object = MibTableColumn
msapTlsPlcyIgmpSnpgGenQueryIntv = _MsapTlsPlcyIgmpSnpgGenQueryIntv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 21),
    _MsapTlsPlcyIgmpSnpgGenQueryIntv_Type()
)
msapTlsPlcyIgmpSnpgGenQueryIntv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgGenQueryIntv.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgGenQueryIntv.setUnits("seconds")


class _MsapTlsPlcyIgmpSnpgQueryRespIntv_Type(Unsigned32):
    """Custom type msapTlsPlcyIgmpSnpgQueryRespIntv based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_MsapTlsPlcyIgmpSnpgQueryRespIntv_Type.__name__ = "Unsigned32"
_MsapTlsPlcyIgmpSnpgQueryRespIntv_Object = MibTableColumn
msapTlsPlcyIgmpSnpgQueryRespIntv = _MsapTlsPlcyIgmpSnpgQueryRespIntv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 22),
    _MsapTlsPlcyIgmpSnpgQueryRespIntv_Type()
)
msapTlsPlcyIgmpSnpgQueryRespIntv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgQueryRespIntv.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgQueryRespIntv.setUnits("seconds")


class _MsapTlsPlcyIgmpSnpgRobustCount_Type(Unsigned32):
    """Custom type msapTlsPlcyIgmpSnpgRobustCount based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_MsapTlsPlcyIgmpSnpgRobustCount_Type.__name__ = "Unsigned32"
_MsapTlsPlcyIgmpSnpgRobustCount_Object = MibTableColumn
msapTlsPlcyIgmpSnpgRobustCount = _MsapTlsPlcyIgmpSnpgRobustCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 23),
    _MsapTlsPlcyIgmpSnpgRobustCount_Type()
)
msapTlsPlcyIgmpSnpgRobustCount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgRobustCount.setStatus("current")


class _MsapTlsPlcyIgmpSnpgLastMembIntvl_Type(Unsigned32):
    """Custom type msapTlsPlcyIgmpSnpgLastMembIntvl based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 50),
    )


_MsapTlsPlcyIgmpSnpgLastMembIntvl_Type.__name__ = "Unsigned32"
_MsapTlsPlcyIgmpSnpgLastMembIntvl_Object = MibTableColumn
msapTlsPlcyIgmpSnpgLastMembIntvl = _MsapTlsPlcyIgmpSnpgLastMembIntvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 24),
    _MsapTlsPlcyIgmpSnpgLastMembIntvl_Type()
)
msapTlsPlcyIgmpSnpgLastMembIntvl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgLastMembIntvl.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgLastMembIntvl.setUnits("deciseconds")


class _MsapTlsPlcyIgmpSnpgMaxNbrGrps_Type(Unsigned32):
    """Custom type msapTlsPlcyIgmpSnpgMaxNbrGrps based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16000),
    )


_MsapTlsPlcyIgmpSnpgMaxNbrGrps_Type.__name__ = "Unsigned32"
_MsapTlsPlcyIgmpSnpgMaxNbrGrps_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMaxNbrGrps = _MsapTlsPlcyIgmpSnpgMaxNbrGrps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 25),
    _MsapTlsPlcyIgmpSnpgMaxNbrGrps_Type()
)
msapTlsPlcyIgmpSnpgMaxNbrGrps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMaxNbrGrps.setStatus("current")


class _MsapTlsPlcyIgmpSnpgMvrFromVplsId_Type(TmnxServId):
    """Custom type msapTlsPlcyIgmpSnpgMvrFromVplsId based on TmnxServId"""
    defaultValue = 0


_MsapTlsPlcyIgmpSnpgMvrFromVplsId_Type.__name__ = "TmnxServId"
_MsapTlsPlcyIgmpSnpgMvrFromVplsId_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMvrFromVplsId = _MsapTlsPlcyIgmpSnpgMvrFromVplsId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 26),
    _MsapTlsPlcyIgmpSnpgMvrFromVplsId_Type()
)
msapTlsPlcyIgmpSnpgMvrFromVplsId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMvrFromVplsId.setStatus("current")


class _MsapTlsPlcyIgmpSnpgVersion_Type(TmnxIgmpVersion):
    """Custom type msapTlsPlcyIgmpSnpgVersion based on TmnxIgmpVersion"""
    defaultValue = 3


_MsapTlsPlcyIgmpSnpgVersion_Type.__name__ = "TmnxIgmpVersion"
_MsapTlsPlcyIgmpSnpgVersion_Object = MibTableColumn
msapTlsPlcyIgmpSnpgVersion = _MsapTlsPlcyIgmpSnpgVersion_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 27),
    _MsapTlsPlcyIgmpSnpgVersion_Type()
)
msapTlsPlcyIgmpSnpgVersion.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgVersion.setStatus("current")


class _MsapTlsPlcyIgmpSnpgMcacPlcyName_Type(TPolicyStatementNameOrEmpty):
    """Custom type msapTlsPlcyIgmpSnpgMcacPlcyName based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyIgmpSnpgMcacPlcyName_Type.__name__ = "TPolicyStatementNameOrEmpty"
_MsapTlsPlcyIgmpSnpgMcacPlcyName_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMcacPlcyName = _MsapTlsPlcyIgmpSnpgMcacPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 28),
    _MsapTlsPlcyIgmpSnpgMcacPlcyName_Type()
)
msapTlsPlcyIgmpSnpgMcacPlcyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacPlcyName.setStatus("current")


class _MsapTlsPlcyIgmpSnpgMcacUncnstBW_Type(Integer32):
    """Custom type msapTlsPlcyIgmpSnpgMcacUncnstBW based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 2147483647),
    )


_MsapTlsPlcyIgmpSnpgMcacUncnstBW_Type.__name__ = "Integer32"
_MsapTlsPlcyIgmpSnpgMcacUncnstBW_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMcacUncnstBW = _MsapTlsPlcyIgmpSnpgMcacUncnstBW_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 29),
    _MsapTlsPlcyIgmpSnpgMcacUncnstBW_Type()
)
msapTlsPlcyIgmpSnpgMcacUncnstBW.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacUncnstBW.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacUncnstBW.setUnits("kilobps")


class _MsapTlsPlcyIgmpSnpgMcacPrRsvMnBW_Type(Integer32):
    """Custom type msapTlsPlcyIgmpSnpgMcacPrRsvMnBW based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 2147483647),
    )


_MsapTlsPlcyIgmpSnpgMcacPrRsvMnBW_Type.__name__ = "Integer32"
_MsapTlsPlcyIgmpSnpgMcacPrRsvMnBW_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMcacPrRsvMnBW = _MsapTlsPlcyIgmpSnpgMcacPrRsvMnBW_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 30),
    _MsapTlsPlcyIgmpSnpgMcacPrRsvMnBW_Type()
)
msapTlsPlcyIgmpSnpgMcacPrRsvMnBW.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacPrRsvMnBW.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacPrRsvMnBW.setUnits("kilobps")


class _MsapTlsPlcyArpHostMaxNumHosts_Type(Unsigned32):
    """Custom type msapTlsPlcyArpHostMaxNumHosts based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_MsapTlsPlcyArpHostMaxNumHosts_Type.__name__ = "Unsigned32"
_MsapTlsPlcyArpHostMaxNumHosts_Object = MibTableColumn
msapTlsPlcyArpHostMaxNumHosts = _MsapTlsPlcyArpHostMaxNumHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 31),
    _MsapTlsPlcyArpHostMaxNumHosts_Type()
)
msapTlsPlcyArpHostMaxNumHosts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyArpHostMaxNumHosts.setStatus("current")


class _MsapTlsPlcyArpHostMinAuthIntvl_Type(Unsigned32):
    """Custom type msapTlsPlcyArpHostMinAuthIntvl based on Unsigned32"""
    defaultValue = 15

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6000),
    )


_MsapTlsPlcyArpHostMinAuthIntvl_Type.__name__ = "Unsigned32"
_MsapTlsPlcyArpHostMinAuthIntvl_Object = MibTableColumn
msapTlsPlcyArpHostMinAuthIntvl = _MsapTlsPlcyArpHostMinAuthIntvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 32),
    _MsapTlsPlcyArpHostMinAuthIntvl_Type()
)
msapTlsPlcyArpHostMinAuthIntvl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyArpHostMinAuthIntvl.setStatus("current")
if mibBuilder.loadTexts:
    msapTlsPlcyArpHostMinAuthIntvl.setUnits("minutes")


class _MsapTlsPlcyIgmpSnpgMcacUsePortWt_Type(TruthValue):
    """Custom type msapTlsPlcyIgmpSnpgMcacUsePortWt based on TruthValue"""
    defaultValue = 2


_MsapTlsPlcyIgmpSnpgMcacUsePortWt_Type.__name__ = "TruthValue"
_MsapTlsPlcyIgmpSnpgMcacUsePortWt_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMcacUsePortWt = _MsapTlsPlcyIgmpSnpgMcacUsePortWt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 33),
    _MsapTlsPlcyIgmpSnpgMcacUsePortWt_Type()
)
msapTlsPlcyIgmpSnpgMcacUsePortWt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcacUsePortWt.setStatus("current")


class _MsapTlsPlcyIngQosPolicyId_Type(TSapIngressPolicyID):
    """Custom type msapTlsPlcyIngQosPolicyId based on TSapIngressPolicyID"""
    defaultValue = 1


_MsapTlsPlcyIngQosPolicyId_Type.__name__ = "TSapIngressPolicyID"
_MsapTlsPlcyIngQosPolicyId_Object = MibTableColumn
msapTlsPlcyIngQosPolicyId = _MsapTlsPlcyIngQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 34),
    _MsapTlsPlcyIngQosPolicyId_Type()
)
msapTlsPlcyIngQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIngQosPolicyId.setStatus("current")


class _MsapTlsPlcyIngQosQueueingType_Type(Integer32):
    """Custom type msapTlsPlcyIngQosQueueingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("multipointShared", 1),
          ("serviceQueueing", 2))
    )


_MsapTlsPlcyIngQosQueueingType_Type.__name__ = "Integer32"
_MsapTlsPlcyIngQosQueueingType_Object = MibTableColumn
msapTlsPlcyIngQosQueueingType = _MsapTlsPlcyIngQosQueueingType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 35),
    _MsapTlsPlcyIngQosQueueingType_Type()
)
msapTlsPlcyIngQosQueueingType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIngQosQueueingType.setStatus("current")


class _MsapTlsPlcyIgmpSnpgMcIfPlcyName_Type(TPolicyStatementNameOrEmpty):
    """Custom type msapTlsPlcyIgmpSnpgMcIfPlcyName based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_MsapTlsPlcyIgmpSnpgMcIfPlcyName_Type.__name__ = "TPolicyStatementNameOrEmpty"
_MsapTlsPlcyIgmpSnpgMcIfPlcyName_Object = MibTableColumn
msapTlsPlcyIgmpSnpgMcIfPlcyName = _MsapTlsPlcyIgmpSnpgMcIfPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 36),
    _MsapTlsPlcyIgmpSnpgMcIfPlcyName_Type()
)
msapTlsPlcyIgmpSnpgMcIfPlcyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyIgmpSnpgMcIfPlcyName.setStatus("current")


class _MsapTlsPlcyEgrQosPolicyId_Type(TSapEgressPolicyID):
    """Custom type msapTlsPlcyEgrQosPolicyId based on TSapEgressPolicyID"""
    defaultValue = 1


_MsapTlsPlcyEgrQosPolicyId_Type.__name__ = "TSapEgressPolicyID"
_MsapTlsPlcyEgrQosPolicyId_Object = MibTableColumn
msapTlsPlcyEgrQosPolicyId = _MsapTlsPlcyEgrQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 45, 1, 37),
    _MsapTlsPlcyEgrQosPolicyId_Type()
)
msapTlsPlcyEgrQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapTlsPlcyEgrQosPolicyId.setStatus("current")
_MsapIgmpSnpgMcacLevelTable_Object = MibTable
msapIgmpSnpgMcacLevelTable = _MsapIgmpSnpgMcacLevelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46)
)
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelTable.setStatus("current")
_MsapIgmpSnpgMcacLevelEntry_Object = MibTableRow
msapIgmpSnpgMcacLevelEntry = _MsapIgmpSnpgMcacLevelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46, 1)
)
msapIgmpSnpgMcacLevelEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "msapPlcyName"),
    (0, "TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelId"),
)
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelEntry.setStatus("current")


class _MsapIgmpSnpgMcacLevelId_Type(Unsigned32):
    """Custom type msapIgmpSnpgMcacLevelId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_MsapIgmpSnpgMcacLevelId_Type.__name__ = "Unsigned32"
_MsapIgmpSnpgMcacLevelId_Object = MibTableColumn
msapIgmpSnpgMcacLevelId = _MsapIgmpSnpgMcacLevelId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46, 1, 1),
    _MsapIgmpSnpgMcacLevelId_Type()
)
msapIgmpSnpgMcacLevelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelId.setStatus("current")
_MsapIgmpSnpgMcacLevelRowStatus_Type = RowStatus
_MsapIgmpSnpgMcacLevelRowStatus_Object = MibTableColumn
msapIgmpSnpgMcacLevelRowStatus = _MsapIgmpSnpgMcacLevelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46, 1, 2),
    _MsapIgmpSnpgMcacLevelRowStatus_Type()
)
msapIgmpSnpgMcacLevelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelRowStatus.setStatus("current")
_MsapIgmpSnpgMcacLevelLastChanged_Type = TimeStamp
_MsapIgmpSnpgMcacLevelLastChanged_Object = MibTableColumn
msapIgmpSnpgMcacLevelLastChanged = _MsapIgmpSnpgMcacLevelLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46, 1, 3),
    _MsapIgmpSnpgMcacLevelLastChanged_Type()
)
msapIgmpSnpgMcacLevelLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelLastChanged.setStatus("current")


class _MsapIgmpSnpgMcacLevelBW_Type(Unsigned32):
    """Custom type msapIgmpSnpgMcacLevelBW based on Unsigned32"""
    defaultValue = 1


_MsapIgmpSnpgMcacLevelBW_Type.__name__ = "Unsigned32"
_MsapIgmpSnpgMcacLevelBW_Object = MibTableColumn
msapIgmpSnpgMcacLevelBW = _MsapIgmpSnpgMcacLevelBW_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 46, 1, 4),
    _MsapIgmpSnpgMcacLevelBW_Type()
)
msapIgmpSnpgMcacLevelBW.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelBW.setStatus("current")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLevelBW.setUnits("kilobps")
_MsapIgmpSnpgMcacLagTable_Object = MibTable
msapIgmpSnpgMcacLagTable = _MsapIgmpSnpgMcacLagTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47)
)
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagTable.setStatus("current")
_MsapIgmpSnpgMcacLagEntry_Object = MibTableRow
msapIgmpSnpgMcacLagEntry = _MsapIgmpSnpgMcacLagEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47, 1)
)
msapIgmpSnpgMcacLagEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "msapPlcyName"),
    (0, "TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagPortsDown"),
)
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagEntry.setStatus("current")


class _MsapIgmpSnpgMcacLagPortsDown_Type(Unsigned32):
    """Custom type msapIgmpSnpgMcacLagPortsDown based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_MsapIgmpSnpgMcacLagPortsDown_Type.__name__ = "Unsigned32"
_MsapIgmpSnpgMcacLagPortsDown_Object = MibTableColumn
msapIgmpSnpgMcacLagPortsDown = _MsapIgmpSnpgMcacLagPortsDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47, 1, 1),
    _MsapIgmpSnpgMcacLagPortsDown_Type()
)
msapIgmpSnpgMcacLagPortsDown.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagPortsDown.setStatus("current")
_MsapIgmpSnpgMcacLagRowStatus_Type = RowStatus
_MsapIgmpSnpgMcacLagRowStatus_Object = MibTableColumn
msapIgmpSnpgMcacLagRowStatus = _MsapIgmpSnpgMcacLagRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47, 1, 2),
    _MsapIgmpSnpgMcacLagRowStatus_Type()
)
msapIgmpSnpgMcacLagRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagRowStatus.setStatus("current")
_MsapIgmpSnpgMcacLagLastChanged_Type = TimeStamp
_MsapIgmpSnpgMcacLagLastChanged_Object = MibTableColumn
msapIgmpSnpgMcacLagLastChanged = _MsapIgmpSnpgMcacLagLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47, 1, 3),
    _MsapIgmpSnpgMcacLagLastChanged_Type()
)
msapIgmpSnpgMcacLagLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagLastChanged.setStatus("current")


class _MsapIgmpSnpgMcacLagLevel_Type(Unsigned32):
    """Custom type msapIgmpSnpgMcacLagLevel based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_MsapIgmpSnpgMcacLagLevel_Type.__name__ = "Unsigned32"
_MsapIgmpSnpgMcacLagLevel_Object = MibTableColumn
msapIgmpSnpgMcacLagLevel = _MsapIgmpSnpgMcacLagLevel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 47, 1, 4),
    _MsapIgmpSnpgMcacLagLevel_Type()
)
msapIgmpSnpgMcacLagLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagLevel.setStatus("current")
_MsapInfoTable_Object = MibTable
msapInfoTable = _MsapInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48)
)
if mibBuilder.loadTexts:
    msapInfoTable.setStatus("current")
_MsapInfoEntry_Object = MibTableRow
msapInfoEntry = _MsapInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1)
)
msapInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    msapInfoEntry.setStatus("current")
_MsapInfoCreationSapPortEncapVal_Type = TmnxEncapVal
_MsapInfoCreationSapPortEncapVal_Object = MibTableColumn
msapInfoCreationSapPortEncapVal = _MsapInfoCreationSapPortEncapVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 1),
    _MsapInfoCreationSapPortEncapVal_Type()
)
msapInfoCreationSapPortEncapVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoCreationSapPortEncapVal.setStatus("current")
_MsapInfoCreationPlcyName_Type = TNamedItem
_MsapInfoCreationPlcyName_Object = MibTableColumn
msapInfoCreationPlcyName = _MsapInfoCreationPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 2),
    _MsapInfoCreationPlcyName_Type()
)
msapInfoCreationPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoCreationPlcyName.setStatus("current")


class _MsapInfoReEvalPolicy_Type(TmnxActionType):
    """Custom type msapInfoReEvalPolicy based on TmnxActionType"""
    defaultValue = 2


_MsapInfoReEvalPolicy_Type.__name__ = "TmnxActionType"
_MsapInfoReEvalPolicy_Object = MibTableColumn
msapInfoReEvalPolicy = _MsapInfoReEvalPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 3),
    _MsapInfoReEvalPolicy_Type()
)
msapInfoReEvalPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msapInfoReEvalPolicy.setStatus("current")
_MsapInfoLastChanged_Type = TimeStamp
_MsapInfoLastChanged_Object = MibTableColumn
msapInfoLastChanged = _MsapInfoLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 4),
    _MsapInfoLastChanged_Type()
)
msapInfoLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoLastChanged.setStatus("current")
_MsapInfoIsIdle_Type = TruthValue
_MsapInfoIsIdle_Object = MibTableColumn
msapInfoIsIdle = _MsapInfoIsIdle_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 5),
    _MsapInfoIsIdle_Type()
)
msapInfoIsIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoIsIdle.setStatus("current")
_MsapInfoIsSticky_Type = TruthValue
_MsapInfoIsSticky_Object = MibTableColumn
msapInfoIsSticky = _MsapInfoIsSticky_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 6),
    _MsapInfoIsSticky_Type()
)
msapInfoIsSticky.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoIsSticky.setStatus("current")
_MsapInfoStickyExpiryTime_Type = DateAndTimeOrEmpty
_MsapInfoStickyExpiryTime_Object = MibTableColumn
msapInfoStickyExpiryTime = _MsapInfoStickyExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 48, 1, 7),
    _MsapInfoStickyExpiryTime_Type()
)
msapInfoStickyExpiryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoStickyExpiryTime.setStatus("current")
_MsapCaptureSapStatsTable_Object = MibTable
msapCaptureSapStatsTable = _MsapCaptureSapStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49)
)
if mibBuilder.loadTexts:
    msapCaptureSapStatsTable.setStatus("current")
_MsapCaptureSapStatsEntry_Object = MibTableRow
msapCaptureSapStatsEntry = _MsapCaptureSapStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49, 1)
)
msapCaptureSapStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "msapCaptureSapStatsTriggerType"),
)
if mibBuilder.loadTexts:
    msapCaptureSapStatsEntry.setStatus("current")


class _MsapCaptureSapStatsTriggerType_Type(Integer32):
    """Custom type msapCaptureSapStatsTriggerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 1),
          ("pppoe", 2),
          ("arp", 3),
          ("dhcp6", 4),
          ("ppp", 5),
          ("rtrsol", 6),
          ("data", 7))
    )


_MsapCaptureSapStatsTriggerType_Type.__name__ = "Integer32"
_MsapCaptureSapStatsTriggerType_Object = MibTableColumn
msapCaptureSapStatsTriggerType = _MsapCaptureSapStatsTriggerType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49, 1, 1),
    _MsapCaptureSapStatsTriggerType_Type()
)
msapCaptureSapStatsTriggerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msapCaptureSapStatsTriggerType.setStatus("current")
_MsapCaptureSapStatsPktsRecvd_Type = Counter32
_MsapCaptureSapStatsPktsRecvd_Object = MibTableColumn
msapCaptureSapStatsPktsRecvd = _MsapCaptureSapStatsPktsRecvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49, 1, 2),
    _MsapCaptureSapStatsPktsRecvd_Type()
)
msapCaptureSapStatsPktsRecvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapCaptureSapStatsPktsRecvd.setStatus("current")
_MsapCaptureSapStatsPktsRedirect_Type = Counter32
_MsapCaptureSapStatsPktsRedirect_Object = MibTableColumn
msapCaptureSapStatsPktsRedirect = _MsapCaptureSapStatsPktsRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49, 1, 3),
    _MsapCaptureSapStatsPktsRedirect_Type()
)
msapCaptureSapStatsPktsRedirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapCaptureSapStatsPktsRedirect.setStatus("current")
_MsapCaptureSapStatsPktsDropped_Type = Counter32
_MsapCaptureSapStatsPktsDropped_Object = MibTableColumn
msapCaptureSapStatsPktsDropped = _MsapCaptureSapStatsPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 49, 1, 4),
    _MsapCaptureSapStatsPktsDropped_Type()
)
msapCaptureSapStatsPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapCaptureSapStatsPktsDropped.setStatus("current")
_SapTlsMrpTable_Object = MibTable
sapTlsMrpTable = _SapTlsMrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50)
)
if mibBuilder.loadTexts:
    sapTlsMrpTable.setStatus("current")
_SapTlsMrpEntry_Object = MibTableRow
sapTlsMrpEntry = _SapTlsMrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1)
)
sapTlsMrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsMrpEntry.setStatus("current")
_SapTlsMrpRxPdus_Type = Counter32
_SapTlsMrpRxPdus_Object = MibTableColumn
sapTlsMrpRxPdus = _SapTlsMrpRxPdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 1),
    _SapTlsMrpRxPdus_Type()
)
sapTlsMrpRxPdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxPdus.setStatus("current")
_SapTlsMrpDroppedPdus_Type = Counter32
_SapTlsMrpDroppedPdus_Object = MibTableColumn
sapTlsMrpDroppedPdus = _SapTlsMrpDroppedPdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 2),
    _SapTlsMrpDroppedPdus_Type()
)
sapTlsMrpDroppedPdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpDroppedPdus.setStatus("current")
_SapTlsMrpTxPdus_Type = Counter32
_SapTlsMrpTxPdus_Object = MibTableColumn
sapTlsMrpTxPdus = _SapTlsMrpTxPdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 3),
    _SapTlsMrpTxPdus_Type()
)
sapTlsMrpTxPdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxPdus.setStatus("current")
_SapTlsMrpRxNewEvent_Type = Counter32
_SapTlsMrpRxNewEvent_Object = MibTableColumn
sapTlsMrpRxNewEvent = _SapTlsMrpRxNewEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 4),
    _SapTlsMrpRxNewEvent_Type()
)
sapTlsMrpRxNewEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxNewEvent.setStatus("current")
_SapTlsMrpRxJoinInEvent_Type = Counter32
_SapTlsMrpRxJoinInEvent_Object = MibTableColumn
sapTlsMrpRxJoinInEvent = _SapTlsMrpRxJoinInEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 5),
    _SapTlsMrpRxJoinInEvent_Type()
)
sapTlsMrpRxJoinInEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxJoinInEvent.setStatus("current")
_SapTlsMrpRxInEvent_Type = Counter32
_SapTlsMrpRxInEvent_Object = MibTableColumn
sapTlsMrpRxInEvent = _SapTlsMrpRxInEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 6),
    _SapTlsMrpRxInEvent_Type()
)
sapTlsMrpRxInEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxInEvent.setStatus("current")
_SapTlsMrpRxJoinEmptyEvent_Type = Counter32
_SapTlsMrpRxJoinEmptyEvent_Object = MibTableColumn
sapTlsMrpRxJoinEmptyEvent = _SapTlsMrpRxJoinEmptyEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 7),
    _SapTlsMrpRxJoinEmptyEvent_Type()
)
sapTlsMrpRxJoinEmptyEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxJoinEmptyEvent.setStatus("current")
_SapTlsMrpRxEmptyEvent_Type = Counter32
_SapTlsMrpRxEmptyEvent_Object = MibTableColumn
sapTlsMrpRxEmptyEvent = _SapTlsMrpRxEmptyEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 8),
    _SapTlsMrpRxEmptyEvent_Type()
)
sapTlsMrpRxEmptyEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxEmptyEvent.setStatus("current")
_SapTlsMrpRxLeaveEvent_Type = Counter32
_SapTlsMrpRxLeaveEvent_Object = MibTableColumn
sapTlsMrpRxLeaveEvent = _SapTlsMrpRxLeaveEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 9),
    _SapTlsMrpRxLeaveEvent_Type()
)
sapTlsMrpRxLeaveEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpRxLeaveEvent.setStatus("current")
_SapTlsMrpTxNewEvent_Type = Counter32
_SapTlsMrpTxNewEvent_Object = MibTableColumn
sapTlsMrpTxNewEvent = _SapTlsMrpTxNewEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 10),
    _SapTlsMrpTxNewEvent_Type()
)
sapTlsMrpTxNewEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxNewEvent.setStatus("current")
_SapTlsMrpTxJoinInEvent_Type = Counter32
_SapTlsMrpTxJoinInEvent_Object = MibTableColumn
sapTlsMrpTxJoinInEvent = _SapTlsMrpTxJoinInEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 11),
    _SapTlsMrpTxJoinInEvent_Type()
)
sapTlsMrpTxJoinInEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxJoinInEvent.setStatus("current")
_SapTlsMrpTxInEvent_Type = Counter32
_SapTlsMrpTxInEvent_Object = MibTableColumn
sapTlsMrpTxInEvent = _SapTlsMrpTxInEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 12),
    _SapTlsMrpTxInEvent_Type()
)
sapTlsMrpTxInEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxInEvent.setStatus("current")
_SapTlsMrpTxJoinEmptyEvent_Type = Counter32
_SapTlsMrpTxJoinEmptyEvent_Object = MibTableColumn
sapTlsMrpTxJoinEmptyEvent = _SapTlsMrpTxJoinEmptyEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 13),
    _SapTlsMrpTxJoinEmptyEvent_Type()
)
sapTlsMrpTxJoinEmptyEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxJoinEmptyEvent.setStatus("current")
_SapTlsMrpTxEmptyEvent_Type = Counter32
_SapTlsMrpTxEmptyEvent_Object = MibTableColumn
sapTlsMrpTxEmptyEvent = _SapTlsMrpTxEmptyEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 14),
    _SapTlsMrpTxEmptyEvent_Type()
)
sapTlsMrpTxEmptyEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxEmptyEvent.setStatus("current")
_SapTlsMrpTxLeaveEvent_Type = Counter32
_SapTlsMrpTxLeaveEvent_Object = MibTableColumn
sapTlsMrpTxLeaveEvent = _SapTlsMrpTxLeaveEvent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 50, 1, 15),
    _SapTlsMrpTxLeaveEvent_Type()
)
sapTlsMrpTxLeaveEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMrpTxLeaveEvent.setStatus("current")
_SapTlsMmrpTable_Object = MibTable
sapTlsMmrpTable = _SapTlsMmrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51)
)
if mibBuilder.loadTexts:
    sapTlsMmrpTable.setStatus("current")
_SapTlsMmrpEntry_Object = MibTableRow
sapTlsMmrpEntry = _SapTlsMmrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51, 1)
)
sapTlsMmrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsMmrpMacAddr"),
)
if mibBuilder.loadTexts:
    sapTlsMmrpEntry.setStatus("current")
_SapTlsMmrpMacAddr_Type = MacAddress
_SapTlsMmrpMacAddr_Object = MibTableColumn
sapTlsMmrpMacAddr = _SapTlsMmrpMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51, 1, 1),
    _SapTlsMmrpMacAddr_Type()
)
sapTlsMmrpMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsMmrpMacAddr.setStatus("current")
_SapTlsMmrpDeclared_Type = TruthValue
_SapTlsMmrpDeclared_Object = MibTableColumn
sapTlsMmrpDeclared = _SapTlsMmrpDeclared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51, 1, 2),
    _SapTlsMmrpDeclared_Type()
)
sapTlsMmrpDeclared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMmrpDeclared.setStatus("current")
_SapTlsMmrpRegistered_Type = TruthValue
_SapTlsMmrpRegistered_Object = MibTableColumn
sapTlsMmrpRegistered = _SapTlsMmrpRegistered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51, 1, 3),
    _SapTlsMmrpRegistered_Type()
)
sapTlsMmrpRegistered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMmrpRegistered.setStatus("current")
_SapTlsMmrpEndStation_Type = TruthValue
_SapTlsMmrpEndStation_Object = MibTableColumn
sapTlsMmrpEndStation = _SapTlsMmrpEndStation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 51, 1, 4),
    _SapTlsMmrpEndStation_Type()
)
sapTlsMmrpEndStation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMmrpEndStation.setStatus("current")
_SapIngQosHsmdaQueueTable_Object = MibTable
sapIngQosHsmdaQueueTable = _SapIngQosHsmdaQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52)
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueTable.setStatus("obsolete")
_SapIngQosHsmdaQueueEntry_Object = MibTableRow
sapIngQosHsmdaQueueEntry = _SapIngQosHsmdaQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1)
)
sapIngQosHsmdaQueueEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueId"),
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueEntry.setStatus("obsolete")
_SapIngQosHsmdaQueueId_Type = TIngressHsmdaQueueId
_SapIngQosHsmdaQueueId_Object = MibTableColumn
sapIngQosHsmdaQueueId = _SapIngQosHsmdaQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 1),
    _SapIngQosHsmdaQueueId_Type()
)
sapIngQosHsmdaQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueId.setStatus("obsolete")
_SapIngQosHsmdaQueueRowStatus_Type = RowStatus
_SapIngQosHsmdaQueueRowStatus_Object = MibTableColumn
sapIngQosHsmdaQueueRowStatus = _SapIngQosHsmdaQueueRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 2),
    _SapIngQosHsmdaQueueRowStatus_Type()
)
sapIngQosHsmdaQueueRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueRowStatus.setStatus("obsolete")
_SapIngQosHsmdaQueueLastChanged_Type = TimeStamp
_SapIngQosHsmdaQueueLastChanged_Object = MibTableColumn
sapIngQosHsmdaQueueLastChanged = _SapIngQosHsmdaQueueLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 3),
    _SapIngQosHsmdaQueueLastChanged_Type()
)
sapIngQosHsmdaQueueLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueLastChanged.setStatus("obsolete")


class _SapIngQosHsmdaQueueAdminPIR_Type(THsmdaPIRKRateOverride):
    """Custom type sapIngQosHsmdaQueueAdminPIR based on THsmdaPIRKRateOverride"""
    defaultValue = -2


_SapIngQosHsmdaQueueAdminPIR_Type.__name__ = "THsmdaPIRKRateOverride"
_SapIngQosHsmdaQueueAdminPIR_Object = MibTableColumn
sapIngQosHsmdaQueueAdminPIR = _SapIngQosHsmdaQueueAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 4),
    _SapIngQosHsmdaQueueAdminPIR_Type()
)
sapIngQosHsmdaQueueAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueAdminPIR.setUnits("kilobps")


class _SapIngQosHsmdaQueueAdminCIR_Type(THsmdaCIRKRateOverride):
    """Custom type sapIngQosHsmdaQueueAdminCIR based on THsmdaCIRKRateOverride"""
    defaultValue = -2


_SapIngQosHsmdaQueueAdminCIR_Type.__name__ = "THsmdaCIRKRateOverride"
_SapIngQosHsmdaQueueAdminCIR_Object = MibTableColumn
sapIngQosHsmdaQueueAdminCIR = _SapIngQosHsmdaQueueAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 5),
    _SapIngQosHsmdaQueueAdminCIR_Type()
)
sapIngQosHsmdaQueueAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueAdminCIR.setUnits("kilobps")


class _SapIngQosHsmdaQueueSlopePolicy_Type(TNamedItemOrEmpty):
    """Custom type sapIngQosHsmdaQueueSlopePolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapIngQosHsmdaQueueSlopePolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapIngQosHsmdaQueueSlopePolicy_Object = MibTableColumn
sapIngQosHsmdaQueueSlopePolicy = _SapIngQosHsmdaQueueSlopePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 52, 1, 6),
    _SapIngQosHsmdaQueueSlopePolicy_Type()
)
sapIngQosHsmdaQueueSlopePolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueSlopePolicy.setStatus("obsolete")
_SapIngQosHsmdaQueueStatsTable_Object = MibTable
sapIngQosHsmdaQueueStatsTable = _SapIngQosHsmdaQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53)
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueStatsTable.setStatus("obsolete")
_SapIngQosHsmdaQueueStatsEntry_Object = MibTableRow
sapIngQosHsmdaQueueStatsEntry = _SapIngQosHsmdaQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1)
)
sapIngQosHsmdaQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueId"),
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaQueueStatsEntry.setStatus("obsolete")
_SapIngHsmdaQStatCustId_Type = TmnxCustId
_SapIngHsmdaQStatCustId_Object = MibTableColumn
sapIngHsmdaQStatCustId = _SapIngHsmdaQStatCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 1),
    _SapIngHsmdaQStatCustId_Type()
)
sapIngHsmdaQStatCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatCustId.setStatus("obsolete")
_SapIngHsmdaQStatHiPktsDropped_Type = Counter64
_SapIngHsmdaQStatHiPktsDropped_Object = MibTableColumn
sapIngHsmdaQStatHiPktsDropped = _SapIngHsmdaQStatHiPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 2),
    _SapIngHsmdaQStatHiPktsDropped_Type()
)
sapIngHsmdaQStatHiPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatHiPktsDropped.setStatus("obsolete")
_SapIngHsmdaQStatLoPktsDropped_Type = Counter64
_SapIngHsmdaQStatLoPktsDropped_Object = MibTableColumn
sapIngHsmdaQStatLoPktsDropped = _SapIngHsmdaQStatLoPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 3),
    _SapIngHsmdaQStatLoPktsDropped_Type()
)
sapIngHsmdaQStatLoPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatLoPktsDropped.setStatus("obsolete")
_SapIngHsmdaQStatHiOctsDropped_Type = Counter64
_SapIngHsmdaQStatHiOctsDropped_Object = MibTableColumn
sapIngHsmdaQStatHiOctsDropped = _SapIngHsmdaQStatHiOctsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 4),
    _SapIngHsmdaQStatHiOctsDropped_Type()
)
sapIngHsmdaQStatHiOctsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatHiOctsDropped.setStatus("obsolete")
_SapIngHsmdaQStatLoOctsDropped_Type = Counter64
_SapIngHsmdaQStatLoOctsDropped_Object = MibTableColumn
sapIngHsmdaQStatLoOctsDropped = _SapIngHsmdaQStatLoOctsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 5),
    _SapIngHsmdaQStatLoOctsDropped_Type()
)
sapIngHsmdaQStatLoOctsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatLoOctsDropped.setStatus("obsolete")
_SapIngHsmdaQStatInProfPktsFwd_Type = Counter64
_SapIngHsmdaQStatInProfPktsFwd_Object = MibTableColumn
sapIngHsmdaQStatInProfPktsFwd = _SapIngHsmdaQStatInProfPktsFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 6),
    _SapIngHsmdaQStatInProfPktsFwd_Type()
)
sapIngHsmdaQStatInProfPktsFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatInProfPktsFwd.setStatus("obsolete")
_SapIngHsmdaQStatOutProfPktsFwd_Type = Counter64
_SapIngHsmdaQStatOutProfPktsFwd_Object = MibTableColumn
sapIngHsmdaQStatOutProfPktsFwd = _SapIngHsmdaQStatOutProfPktsFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 7),
    _SapIngHsmdaQStatOutProfPktsFwd_Type()
)
sapIngHsmdaQStatOutProfPktsFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatOutProfPktsFwd.setStatus("obsolete")
_SapIngHsmdaQStatInProfOctsFwd_Type = Counter64
_SapIngHsmdaQStatInProfOctsFwd_Object = MibTableColumn
sapIngHsmdaQStatInProfOctsFwd = _SapIngHsmdaQStatInProfOctsFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 8),
    _SapIngHsmdaQStatInProfOctsFwd_Type()
)
sapIngHsmdaQStatInProfOctsFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatInProfOctsFwd.setStatus("obsolete")
_SapIngHsmdaQStatOutProfOctsFwd_Type = Counter64
_SapIngHsmdaQStatOutProfOctsFwd_Object = MibTableColumn
sapIngHsmdaQStatOutProfOctsFwd = _SapIngHsmdaQStatOutProfOctsFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 9),
    _SapIngHsmdaQStatOutProfOctsFwd_Type()
)
sapIngHsmdaQStatOutProfOctsFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatOutProfOctsFwd.setStatus("obsolete")
_SapIngHsmdaQStatAllPktsOffered_Type = Counter64
_SapIngHsmdaQStatAllPktsOffered_Object = MibTableColumn
sapIngHsmdaQStatAllPktsOffered = _SapIngHsmdaQStatAllPktsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 10),
    _SapIngHsmdaQStatAllPktsOffered_Type()
)
sapIngHsmdaQStatAllPktsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatAllPktsOffered.setStatus("obsolete")
_SapIngHsmdaQStatAllOctsOffered_Type = Counter64
_SapIngHsmdaQStatAllOctsOffered_Object = MibTableColumn
sapIngHsmdaQStatAllOctsOffered = _SapIngHsmdaQStatAllOctsOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 53, 1, 11),
    _SapIngHsmdaQStatAllOctsOffered_Type()
)
sapIngHsmdaQStatAllOctsOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaQStatAllOctsOffered.setStatus("obsolete")
_SapIngQosHsmdaCntrStatsTable_Object = MibTable
sapIngQosHsmdaCntrStatsTable = _SapIngQosHsmdaCntrStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54)
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaCntrStatsTable.setStatus("obsolete")
_SapIngQosHsmdaCntrStatsEntry_Object = MibTableRow
sapIngQosHsmdaCntrStatsEntry = _SapIngQosHsmdaCntrStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1)
)
sapIngQosHsmdaCntrStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngHsmdaCntrStCntrId"),
)
if mibBuilder.loadTexts:
    sapIngQosHsmdaCntrStatsEntry.setStatus("obsolete")
_SapIngHsmdaCntrStCntrId_Type = TIngressHsmdaCounterId
_SapIngHsmdaCntrStCntrId_Object = MibTableColumn
sapIngHsmdaCntrStCntrId = _SapIngHsmdaCntrStCntrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 1),
    _SapIngHsmdaCntrStCntrId_Type()
)
sapIngHsmdaCntrStCntrId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStCntrId.setStatus("obsolete")
_SapIngHsmdaCntrStCustId_Type = TmnxCustId
_SapIngHsmdaCntrStCustId_Object = MibTableColumn
sapIngHsmdaCntrStCustId = _SapIngHsmdaCntrStCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 2),
    _SapIngHsmdaCntrStCustId_Type()
)
sapIngHsmdaCntrStCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStCustId.setStatus("obsolete")
_SapIngHsmdaCntrStHiPktDrop_Type = Counter64
_SapIngHsmdaCntrStHiPktDrop_Object = MibTableColumn
sapIngHsmdaCntrStHiPktDrop = _SapIngHsmdaCntrStHiPktDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 3),
    _SapIngHsmdaCntrStHiPktDrop_Type()
)
sapIngHsmdaCntrStHiPktDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStHiPktDrop.setStatus("obsolete")
_SapIngHsmdaCntrStLoPktDrop_Type = Counter64
_SapIngHsmdaCntrStLoPktDrop_Object = MibTableColumn
sapIngHsmdaCntrStLoPktDrop = _SapIngHsmdaCntrStLoPktDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 4),
    _SapIngHsmdaCntrStLoPktDrop_Type()
)
sapIngHsmdaCntrStLoPktDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStLoPktDrop.setStatus("obsolete")
_SapIngHsmdaCntrStHiOctDrop_Type = Counter64
_SapIngHsmdaCntrStHiOctDrop_Object = MibTableColumn
sapIngHsmdaCntrStHiOctDrop = _SapIngHsmdaCntrStHiOctDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 5),
    _SapIngHsmdaCntrStHiOctDrop_Type()
)
sapIngHsmdaCntrStHiOctDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStHiOctDrop.setStatus("obsolete")
_SapIngHsmdaCntrStLoOctDrop_Type = Counter64
_SapIngHsmdaCntrStLoOctDrop_Object = MibTableColumn
sapIngHsmdaCntrStLoOctDrop = _SapIngHsmdaCntrStLoOctDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 6),
    _SapIngHsmdaCntrStLoOctDrop_Type()
)
sapIngHsmdaCntrStLoOctDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStLoOctDrop.setStatus("obsolete")
_SapIngHsmdaCntrStInProfPktFwd_Type = Counter64
_SapIngHsmdaCntrStInProfPktFwd_Object = MibTableColumn
sapIngHsmdaCntrStInProfPktFwd = _SapIngHsmdaCntrStInProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 7),
    _SapIngHsmdaCntrStInProfPktFwd_Type()
)
sapIngHsmdaCntrStInProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStInProfPktFwd.setStatus("obsolete")
_SapIngHsmdaCntrStOutProfPktFwd_Type = Counter64
_SapIngHsmdaCntrStOutProfPktFwd_Object = MibTableColumn
sapIngHsmdaCntrStOutProfPktFwd = _SapIngHsmdaCntrStOutProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 8),
    _SapIngHsmdaCntrStOutProfPktFwd_Type()
)
sapIngHsmdaCntrStOutProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStOutProfPktFwd.setStatus("obsolete")
_SapIngHsmdaCntrStInProfOctFwd_Type = Counter64
_SapIngHsmdaCntrStInProfOctFwd_Object = MibTableColumn
sapIngHsmdaCntrStInProfOctFwd = _SapIngHsmdaCntrStInProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 9),
    _SapIngHsmdaCntrStInProfOctFwd_Type()
)
sapIngHsmdaCntrStInProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStInProfOctFwd.setStatus("obsolete")
_SapIngHsmdaCntrStOutProfOctFwd_Type = Counter64
_SapIngHsmdaCntrStOutProfOctFwd_Object = MibTableColumn
sapIngHsmdaCntrStOutProfOctFwd = _SapIngHsmdaCntrStOutProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 10),
    _SapIngHsmdaCntrStOutProfOctFwd_Type()
)
sapIngHsmdaCntrStOutProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStOutProfOctFwd.setStatus("obsolete")
_SapIngHsmdaCntrStAllPktOffered_Type = Counter64
_SapIngHsmdaCntrStAllPktOffered_Object = MibTableColumn
sapIngHsmdaCntrStAllPktOffered = _SapIngHsmdaCntrStAllPktOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 11),
    _SapIngHsmdaCntrStAllPktOffered_Type()
)
sapIngHsmdaCntrStAllPktOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStAllPktOffered.setStatus("obsolete")
_SapIngHsmdaCntrStAllOctOffered_Type = Counter64
_SapIngHsmdaCntrStAllOctOffered_Object = MibTableColumn
sapIngHsmdaCntrStAllOctOffered = _SapIngHsmdaCntrStAllOctOffered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 54, 1, 12),
    _SapIngHsmdaCntrStAllOctOffered_Type()
)
sapIngHsmdaCntrStAllOctOffered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngHsmdaCntrStAllOctOffered.setStatus("obsolete")
_SapEgrQosHsmdaQueueTable_Object = MibTable
sapEgrQosHsmdaQueueTable = _SapEgrQosHsmdaQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55)
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueTable.setStatus("obsolete")
_SapEgrQosHsmdaQueueEntry_Object = MibTableRow
sapEgrQosHsmdaQueueEntry = _SapEgrQosHsmdaQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1)
)
sapEgrQosHsmdaQueueEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueEntry.setStatus("current")
_SapEgrQosHsmdaQueueId_Type = TEgressHsmdaQueueId
_SapEgrQosHsmdaQueueId_Object = MibTableColumn
sapEgrQosHsmdaQueueId = _SapEgrQosHsmdaQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 1),
    _SapEgrQosHsmdaQueueId_Type()
)
sapEgrQosHsmdaQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueId.setStatus("current")
_SapEgrQosHsmdaQueueRowStatus_Type = RowStatus
_SapEgrQosHsmdaQueueRowStatus_Object = MibTableColumn
sapEgrQosHsmdaQueueRowStatus = _SapEgrQosHsmdaQueueRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 2),
    _SapEgrQosHsmdaQueueRowStatus_Type()
)
sapEgrQosHsmdaQueueRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueRowStatus.setStatus("obsolete")
_SapEgrQosHsmdaQueueLastChanged_Type = TimeStamp
_SapEgrQosHsmdaQueueLastChanged_Object = MibTableColumn
sapEgrQosHsmdaQueueLastChanged = _SapEgrQosHsmdaQueueLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 3),
    _SapEgrQosHsmdaQueueLastChanged_Type()
)
sapEgrQosHsmdaQueueLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueLastChanged.setStatus("obsolete")


class _SapEgrQosHsmdaQueueAdminPIR_Type(THsmdaPIRKRateOverride):
    """Custom type sapEgrQosHsmdaQueueAdminPIR based on THsmdaPIRKRateOverride"""
    defaultValue = -2


_SapEgrQosHsmdaQueueAdminPIR_Type.__name__ = "THsmdaPIRKRateOverride"
_SapEgrQosHsmdaQueueAdminPIR_Object = MibTableColumn
sapEgrQosHsmdaQueueAdminPIR = _SapEgrQosHsmdaQueueAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 4),
    _SapEgrQosHsmdaQueueAdminPIR_Type()
)
sapEgrQosHsmdaQueueAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueAdminPIR.setUnits("kilobps")


class _SapEgrQosHsmdaQueueAdminCIR_Type(THsmdaCIRKRateOverride):
    """Custom type sapEgrQosHsmdaQueueAdminCIR based on THsmdaCIRKRateOverride"""
    defaultValue = -2


_SapEgrQosHsmdaQueueAdminCIR_Type.__name__ = "THsmdaCIRKRateOverride"
_SapEgrQosHsmdaQueueAdminCIR_Object = MibTableColumn
sapEgrQosHsmdaQueueAdminCIR = _SapEgrQosHsmdaQueueAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 5),
    _SapEgrQosHsmdaQueueAdminCIR_Type()
)
sapEgrQosHsmdaQueueAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueAdminCIR.setUnits("kilobps")


class _SapEgrQosHsmdaQueueSlopePolicy_Type(TNamedItemOrEmpty):
    """Custom type sapEgrQosHsmdaQueueSlopePolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgrQosHsmdaQueueSlopePolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrQosHsmdaQueueSlopePolicy_Object = MibTableColumn
sapEgrQosHsmdaQueueSlopePolicy = _SapEgrQosHsmdaQueueSlopePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 6),
    _SapEgrQosHsmdaQueueSlopePolicy_Type()
)
sapEgrQosHsmdaQueueSlopePolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueSlopePolicy.setStatus("obsolete")


class _SapEgrQosHsmdaQueueWrrWeight_Type(THsmdaWrrWeightOverride):
    """Custom type sapEgrQosHsmdaQueueWrrWeight based on THsmdaWrrWeightOverride"""
    defaultValue = -2


_SapEgrQosHsmdaQueueWrrWeight_Type.__name__ = "THsmdaWrrWeightOverride"
_SapEgrQosHsmdaQueueWrrWeight_Object = MibTableColumn
sapEgrQosHsmdaQueueWrrWeight = _SapEgrQosHsmdaQueueWrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 7),
    _SapEgrQosHsmdaQueueWrrWeight_Type()
)
sapEgrQosHsmdaQueueWrrWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueWrrWeight.setStatus("obsolete")


class _SapEgrQosHsmdaQueueMBS_Type(THSMDABurstSizeBytesOverride):
    """Custom type sapEgrQosHsmdaQueueMBS based on THSMDABurstSizeBytesOverride"""
    defaultValue = -2


_SapEgrQosHsmdaQueueMBS_Type.__name__ = "THSMDABurstSizeBytesOverride"
_SapEgrQosHsmdaQueueMBS_Object = MibTableColumn
sapEgrQosHsmdaQueueMBS = _SapEgrQosHsmdaQueueMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 55, 1, 8),
    _SapEgrQosHsmdaQueueMBS_Type()
)
sapEgrQosHsmdaQueueMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueMBS.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueMBS.setUnits("bytes")
_SapEgrQosHsmdaQueueStatsTable_Object = MibTable
sapEgrQosHsmdaQueueStatsTable = _SapEgrQosHsmdaQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56)
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueStatsTable.setStatus("obsolete")
_SapEgrQosHsmdaQueueStatsEntry_Object = MibTableRow
sapEgrQosHsmdaQueueStatsEntry = _SapEgrQosHsmdaQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1)
)
sapEgrQosHsmdaQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaQueueStatsEntry.setStatus("current")
_SapEgrHsmdaQStatCustId_Type = TmnxCustId
_SapEgrHsmdaQStatCustId_Object = MibTableColumn
sapEgrHsmdaQStatCustId = _SapEgrHsmdaQStatCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 1),
    _SapEgrHsmdaQStatCustId_Type()
)
sapEgrHsmdaQStatCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatCustId.setStatus("obsolete")
_SapEgrHsmdaQStatInProfPktFwd_Type = Counter64
_SapEgrHsmdaQStatInProfPktFwd_Object = MibTableColumn
sapEgrHsmdaQStatInProfPktFwd = _SapEgrHsmdaQStatInProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 2),
    _SapEgrHsmdaQStatInProfPktFwd_Type()
)
sapEgrHsmdaQStatInProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatInProfPktFwd.setStatus("obsolete")
_SapEgrHsmdaQStatInProfPktDropd_Type = Counter64
_SapEgrHsmdaQStatInProfPktDropd_Object = MibTableColumn
sapEgrHsmdaQStatInProfPktDropd = _SapEgrHsmdaQStatInProfPktDropd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 3),
    _SapEgrHsmdaQStatInProfPktDropd_Type()
)
sapEgrHsmdaQStatInProfPktDropd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatInProfPktDropd.setStatus("obsolete")
_SapEgrHsmdaQStatOutProfPktFwd_Type = Counter64
_SapEgrHsmdaQStatOutProfPktFwd_Object = MibTableColumn
sapEgrHsmdaQStatOutProfPktFwd = _SapEgrHsmdaQStatOutProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 4),
    _SapEgrHsmdaQStatOutProfPktFwd_Type()
)
sapEgrHsmdaQStatOutProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatOutProfPktFwd.setStatus("obsolete")
_SapEgrHsmdaQStatOutProfPktDropd_Type = Counter64
_SapEgrHsmdaQStatOutProfPktDropd_Object = MibTableColumn
sapEgrHsmdaQStatOutProfPktDropd = _SapEgrHsmdaQStatOutProfPktDropd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 5),
    _SapEgrHsmdaQStatOutProfPktDropd_Type()
)
sapEgrHsmdaQStatOutProfPktDropd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatOutProfPktDropd.setStatus("obsolete")
_SapEgrHsmdaQStatInProfOctFwd_Type = Counter64
_SapEgrHsmdaQStatInProfOctFwd_Object = MibTableColumn
sapEgrHsmdaQStatInProfOctFwd = _SapEgrHsmdaQStatInProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 6),
    _SapEgrHsmdaQStatInProfOctFwd_Type()
)
sapEgrHsmdaQStatInProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatInProfOctFwd.setStatus("obsolete")
_SapEgrHsmdaQStatInProfOctDropd_Type = Counter64
_SapEgrHsmdaQStatInProfOctDropd_Object = MibTableColumn
sapEgrHsmdaQStatInProfOctDropd = _SapEgrHsmdaQStatInProfOctDropd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 7),
    _SapEgrHsmdaQStatInProfOctDropd_Type()
)
sapEgrHsmdaQStatInProfOctDropd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatInProfOctDropd.setStatus("obsolete")
_SapEgrHsmdaQStatOutProfOctFwd_Type = Counter64
_SapEgrHsmdaQStatOutProfOctFwd_Object = MibTableColumn
sapEgrHsmdaQStatOutProfOctFwd = _SapEgrHsmdaQStatOutProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 8),
    _SapEgrHsmdaQStatOutProfOctFwd_Type()
)
sapEgrHsmdaQStatOutProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatOutProfOctFwd.setStatus("obsolete")
_SapEgrHsmdaQStatOutProfOctDropd_Type = Counter64
_SapEgrHsmdaQStatOutProfOctDropd_Object = MibTableColumn
sapEgrHsmdaQStatOutProfOctDropd = _SapEgrHsmdaQStatOutProfOctDropd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 56, 1, 9),
    _SapEgrHsmdaQStatOutProfOctDropd_Type()
)
sapEgrHsmdaQStatOutProfOctDropd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaQStatOutProfOctDropd.setStatus("obsolete")
_SapEgrQosHsmdaCntrStatsTable_Object = MibTable
sapEgrQosHsmdaCntrStatsTable = _SapEgrQosHsmdaCntrStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57)
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaCntrStatsTable.setStatus("obsolete")
_SapEgrQosHsmdaCntrStatsEntry_Object = MibTableRow
sapEgrQosHsmdaCntrStatsEntry = _SapEgrQosHsmdaCntrStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1)
)
sapEgrQosHsmdaCntrStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStCntrId"),
)
if mibBuilder.loadTexts:
    sapEgrQosHsmdaCntrStatsEntry.setStatus("current")
_SapEgrHsmdaCntrStCntrId_Type = TEgressHsmdaCounterId
_SapEgrHsmdaCntrStCntrId_Object = MibTableColumn
sapEgrHsmdaCntrStCntrId = _SapEgrHsmdaCntrStCntrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 1),
    _SapEgrHsmdaCntrStCntrId_Type()
)
sapEgrHsmdaCntrStCntrId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStCntrId.setStatus("obsolete")
_SapEgrHsmdaCntrStCustId_Type = TmnxCustId
_SapEgrHsmdaCntrStCustId_Object = MibTableColumn
sapEgrHsmdaCntrStCustId = _SapEgrHsmdaCntrStCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 2),
    _SapEgrHsmdaCntrStCustId_Type()
)
sapEgrHsmdaCntrStCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStCustId.setStatus("obsolete")
_SapEgrHsmdaCntrStInProfPktFwd_Type = Counter64
_SapEgrHsmdaCntrStInProfPktFwd_Object = MibTableColumn
sapEgrHsmdaCntrStInProfPktFwd = _SapEgrHsmdaCntrStInProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 3),
    _SapEgrHsmdaCntrStInProfPktFwd_Type()
)
sapEgrHsmdaCntrStInProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStInProfPktFwd.setStatus("obsolete")
_SapEgrHsmdaCntrStInProfPktDrop_Type = Counter64
_SapEgrHsmdaCntrStInProfPktDrop_Object = MibTableColumn
sapEgrHsmdaCntrStInProfPktDrop = _SapEgrHsmdaCntrStInProfPktDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 4),
    _SapEgrHsmdaCntrStInProfPktDrop_Type()
)
sapEgrHsmdaCntrStInProfPktDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStInProfPktDrop.setStatus("obsolete")
_SapEgrHsmdaCntrStOutProfPktFwd_Type = Counter64
_SapEgrHsmdaCntrStOutProfPktFwd_Object = MibTableColumn
sapEgrHsmdaCntrStOutProfPktFwd = _SapEgrHsmdaCntrStOutProfPktFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 5),
    _SapEgrHsmdaCntrStOutProfPktFwd_Type()
)
sapEgrHsmdaCntrStOutProfPktFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStOutProfPktFwd.setStatus("obsolete")
_SapEgrHsmdaCntrStOutProfPktDrop_Type = Counter64
_SapEgrHsmdaCntrStOutProfPktDrop_Object = MibTableColumn
sapEgrHsmdaCntrStOutProfPktDrop = _SapEgrHsmdaCntrStOutProfPktDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 6),
    _SapEgrHsmdaCntrStOutProfPktDrop_Type()
)
sapEgrHsmdaCntrStOutProfPktDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStOutProfPktDrop.setStatus("obsolete")
_SapEgrHsmdaCntrStInProfOctFwd_Type = Counter64
_SapEgrHsmdaCntrStInProfOctFwd_Object = MibTableColumn
sapEgrHsmdaCntrStInProfOctFwd = _SapEgrHsmdaCntrStInProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 7),
    _SapEgrHsmdaCntrStInProfOctFwd_Type()
)
sapEgrHsmdaCntrStInProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStInProfOctFwd.setStatus("obsolete")
_SapEgrHsmdaCntrStInProfOctDrop_Type = Counter64
_SapEgrHsmdaCntrStInProfOctDrop_Object = MibTableColumn
sapEgrHsmdaCntrStInProfOctDrop = _SapEgrHsmdaCntrStInProfOctDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 8),
    _SapEgrHsmdaCntrStInProfOctDrop_Type()
)
sapEgrHsmdaCntrStInProfOctDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStInProfOctDrop.setStatus("obsolete")
_SapEgrHsmdaCntrStOutProfOctFwd_Type = Counter64
_SapEgrHsmdaCntrStOutProfOctFwd_Object = MibTableColumn
sapEgrHsmdaCntrStOutProfOctFwd = _SapEgrHsmdaCntrStOutProfOctFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 9),
    _SapEgrHsmdaCntrStOutProfOctFwd_Type()
)
sapEgrHsmdaCntrStOutProfOctFwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStOutProfOctFwd.setStatus("obsolete")
_SapEgrHsmdaCntrStOutProfOctDrop_Type = Counter64
_SapEgrHsmdaCntrStOutProfOctDrop_Object = MibTableColumn
sapEgrHsmdaCntrStOutProfOctDrop = _SapEgrHsmdaCntrStOutProfOctDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 57, 1, 10),
    _SapEgrHsmdaCntrStOutProfOctDrop_Type()
)
sapEgrHsmdaCntrStOutProfOctDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrHsmdaCntrStOutProfOctDrop.setStatus("obsolete")
_MsapL3PlcyTable_Object = MibTable
msapL3PlcyTable = _MsapL3PlcyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58)
)
if mibBuilder.loadTexts:
    msapL3PlcyTable.setStatus("current")
_MsapL3PlcyEntry_Object = MibTableRow
msapL3PlcyEntry = _MsapL3PlcyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1)
)
if mibBuilder.loadTexts:
    msapL3PlcyEntry.setStatus("current")
_MsapL3PlcyLastChanged_Type = TimeStamp
_MsapL3PlcyLastChanged_Object = MibTableColumn
msapL3PlcyLastChanged = _MsapL3PlcyLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1, 1),
    _MsapL3PlcyLastChanged_Type()
)
msapL3PlcyLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapL3PlcyLastChanged.setStatus("current")


class _MsapL3PlcyAntiSpoof_Type(Integer32):
    """Custom type msapL3PlcyAntiSpoof based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("sourceIpAndMacAddr", 3),
          ("nextHopIpAndMacAddr", 4))
    )


_MsapL3PlcyAntiSpoof_Type.__name__ = "Integer32"
_MsapL3PlcyAntiSpoof_Object = MibTableColumn
msapL3PlcyAntiSpoof = _MsapL3PlcyAntiSpoof_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1, 2),
    _MsapL3PlcyAntiSpoof_Type()
)
msapL3PlcyAntiSpoof.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapL3PlcyAntiSpoof.setStatus("current")


class _MsapL3PlcyIngQosPolicyId_Type(TSapIngressPolicyID):
    """Custom type msapL3PlcyIngQosPolicyId based on TSapIngressPolicyID"""
    defaultValue = 1


_MsapL3PlcyIngQosPolicyId_Type.__name__ = "TSapIngressPolicyID"
_MsapL3PlcyIngQosPolicyId_Object = MibTableColumn
msapL3PlcyIngQosPolicyId = _MsapL3PlcyIngQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1, 3),
    _MsapL3PlcyIngQosPolicyId_Type()
)
msapL3PlcyIngQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapL3PlcyIngQosPolicyId.setStatus("current")


class _MsapL3PlcyIngQosQueueingType_Type(Integer32):
    """Custom type msapL3PlcyIngQosQueueingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sharedQueueing", 1),
          ("serviceQueueing", 2))
    )


_MsapL3PlcyIngQosQueueingType_Type.__name__ = "Integer32"
_MsapL3PlcyIngQosQueueingType_Object = MibTableColumn
msapL3PlcyIngQosQueueingType = _MsapL3PlcyIngQosQueueingType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1, 4),
    _MsapL3PlcyIngQosQueueingType_Type()
)
msapL3PlcyIngQosQueueingType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapL3PlcyIngQosQueueingType.setStatus("current")


class _MsapL3PlcyEgrQosPolicyId_Type(TSapEgressPolicyID):
    """Custom type msapL3PlcyEgrQosPolicyId based on TSapEgressPolicyID"""
    defaultValue = 1


_MsapL3PlcyEgrQosPolicyId_Type.__name__ = "TSapEgressPolicyID"
_MsapL3PlcyEgrQosPolicyId_Object = MibTableColumn
msapL3PlcyEgrQosPolicyId = _MsapL3PlcyEgrQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 58, 1, 5),
    _MsapL3PlcyEgrQosPolicyId_Type()
)
msapL3PlcyEgrQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapL3PlcyEgrQosPolicyId.setStatus("current")
_MsapPlcyTblLastChgd_Type = TimeStamp
_MsapPlcyTblLastChgd_Object = MibScalar
msapPlcyTblLastChgd = _MsapPlcyTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 59),
    _MsapPlcyTblLastChgd_Type()
)
msapPlcyTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapPlcyTblLastChgd.setStatus("current")
_MsapTlsPlcyTblLastChgd_Type = TimeStamp
_MsapTlsPlcyTblLastChgd_Object = MibScalar
msapTlsPlcyTblLastChgd = _MsapTlsPlcyTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 60),
    _MsapTlsPlcyTblLastChgd_Type()
)
msapTlsPlcyTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapTlsPlcyTblLastChgd.setStatus("current")
_MsapIgmpSnpgMcacLvlTblLastChgd_Type = TimeStamp
_MsapIgmpSnpgMcacLvlTblLastChgd_Object = MibScalar
msapIgmpSnpgMcacLvlTblLastChgd = _MsapIgmpSnpgMcacLvlTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 61),
    _MsapIgmpSnpgMcacLvlTblLastChgd_Type()
)
msapIgmpSnpgMcacLvlTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLvlTblLastChgd.setStatus("current")
_MsapIgmpSnpgMcacLagTblLastChgd_Type = TimeStamp
_MsapIgmpSnpgMcacLagTblLastChgd_Object = MibScalar
msapIgmpSnpgMcacLagTblLastChgd = _MsapIgmpSnpgMcacLagTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 62),
    _MsapIgmpSnpgMcacLagTblLastChgd_Type()
)
msapIgmpSnpgMcacLagTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapIgmpSnpgMcacLagTblLastChgd.setStatus("current")
_MsapInfoTblLastChgd_Type = TimeStamp
_MsapInfoTblLastChgd_Object = MibScalar
msapInfoTblLastChgd = _MsapInfoTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 63),
    _MsapInfoTblLastChgd_Type()
)
msapInfoTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapInfoTblLastChgd.setStatus("current")
_MsapL3PlcyTblLastChgd_Type = TimeStamp
_MsapL3PlcyTblLastChgd_Object = MibScalar
msapL3PlcyTblLastChgd = _MsapL3PlcyTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 64),
    _MsapL3PlcyTblLastChgd_Type()
)
msapL3PlcyTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapL3PlcyTblLastChgd.setStatus("current")
_SapStaticHostMRtTblLastChgd_Type = TimeStamp
_SapStaticHostMRtTblLastChgd_Object = MibScalar
sapStaticHostMRtTblLastChgd = _SapStaticHostMRtTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 65),
    _SapStaticHostMRtTblLastChgd_Type()
)
sapStaticHostMRtTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostMRtTblLastChgd.setStatus("current")
_SapStaticHostMRtTable_Object = MibTable
sapStaticHostMRtTable = _SapStaticHostMRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66)
)
if mibBuilder.loadTexts:
    sapStaticHostMRtTable.setStatus("current")
_SapStaticHostMRtEntry_Object = MibTableRow
sapStaticHostMRtEntry = _SapStaticHostMRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1)
)
sapStaticHostMRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostIpAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostMacAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostMRtAddrType"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostMRtAddr"),
    (0, "TIMETRA-SAP-MIB", "sapStaticHostMRtPrefixLen"),
)
if mibBuilder.loadTexts:
    sapStaticHostMRtEntry.setStatus("current")
_SapStaticHostMRtAddrType_Type = InetAddressType
_SapStaticHostMRtAddrType_Object = MibTableColumn
sapStaticHostMRtAddrType = _SapStaticHostMRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 1),
    _SapStaticHostMRtAddrType_Type()
)
sapStaticHostMRtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStaticHostMRtAddrType.setStatus("current")


class _SapStaticHostMRtAddr_Type(InetAddress):
    """Custom type sapStaticHostMRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapStaticHostMRtAddr_Type.__name__ = "InetAddress"
_SapStaticHostMRtAddr_Object = MibTableColumn
sapStaticHostMRtAddr = _SapStaticHostMRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 2),
    _SapStaticHostMRtAddr_Type()
)
sapStaticHostMRtAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStaticHostMRtAddr.setStatus("current")


class _SapStaticHostMRtPrefixLen_Type(InetAddressPrefixLength):
    """Custom type sapStaticHostMRtPrefixLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_SapStaticHostMRtPrefixLen_Type.__name__ = "InetAddressPrefixLength"
_SapStaticHostMRtPrefixLen_Object = MibTableColumn
sapStaticHostMRtPrefixLen = _SapStaticHostMRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 3),
    _SapStaticHostMRtPrefixLen_Type()
)
sapStaticHostMRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStaticHostMRtPrefixLen.setStatus("current")
_SapStaticHostMRtRowStatus_Type = RowStatus
_SapStaticHostMRtRowStatus_Object = MibTableColumn
sapStaticHostMRtRowStatus = _SapStaticHostMRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 4),
    _SapStaticHostMRtRowStatus_Type()
)
sapStaticHostMRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostMRtRowStatus.setStatus("current")
_SapStaticHostMRtLastMgmtChange_Type = TimeStamp
_SapStaticHostMRtLastMgmtChange_Object = MibTableColumn
sapStaticHostMRtLastMgmtChange = _SapStaticHostMRtLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 5),
    _SapStaticHostMRtLastMgmtChange_Type()
)
sapStaticHostMRtLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostMRtLastMgmtChange.setStatus("current")
_SapStaticHostMRtStatus_Type = TmnxManagedRouteStatus
_SapStaticHostMRtStatus_Object = MibTableColumn
sapStaticHostMRtStatus = _SapStaticHostMRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 6),
    _SapStaticHostMRtStatus_Type()
)
sapStaticHostMRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostMRtStatus.setStatus("current")


class _SapStaticHostMRtMetric_Type(Unsigned32):
    """Custom type sapStaticHostMRtMetric based on Unsigned32"""
    defaultValue = 0


_SapStaticHostMRtMetric_Type.__name__ = "Unsigned32"
_SapStaticHostMRtMetric_Object = MibTableColumn
sapStaticHostMRtMetric = _SapStaticHostMRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 7),
    _SapStaticHostMRtMetric_Type()
)
sapStaticHostMRtMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostMRtMetric.setStatus("current")


class _SapStaticHostMRtPreference_Type(Unsigned32):
    """Custom type sapStaticHostMRtPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapStaticHostMRtPreference_Type.__name__ = "Unsigned32"
_SapStaticHostMRtPreference_Object = MibTableColumn
sapStaticHostMRtPreference = _SapStaticHostMRtPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 8),
    _SapStaticHostMRtPreference_Type()
)
sapStaticHostMRtPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostMRtPreference.setStatus("current")


class _SapStaticHostMRtTag_Type(Unsigned32):
    """Custom type sapStaticHostMRtTag based on Unsigned32"""
    defaultValue = 0


_SapStaticHostMRtTag_Type.__name__ = "Unsigned32"
_SapStaticHostMRtTag_Object = MibTableColumn
sapStaticHostMRtTag = _SapStaticHostMRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 66, 1, 9),
    _SapStaticHostMRtTag_Type()
)
sapStaticHostMRtTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStaticHostMRtTag.setStatus("current")
_SapTlsArpHostTableLastMgmtChange_Type = TimeStamp
_SapTlsArpHostTableLastMgmtChange_Object = MibScalar
sapTlsArpHostTableLastMgmtChange = _SapTlsArpHostTableLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 67),
    _SapTlsArpHostTableLastMgmtChange_Type()
)
sapTlsArpHostTableLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsArpHostTableLastMgmtChange.setStatus("current")
_SapTlsArpHostTable_Object = MibTable
sapTlsArpHostTable = _SapTlsArpHostTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68)
)
if mibBuilder.loadTexts:
    sapTlsArpHostTable.setStatus("current")
_SapTlsArpHostEntry_Object = MibTableRow
sapTlsArpHostEntry = _SapTlsArpHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68, 1)
)
sapTlsArpHostEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsArpHostEntry.setStatus("current")
_SapTlsArpHostLastMgmtChange_Type = TimeStamp
_SapTlsArpHostLastMgmtChange_Object = MibTableColumn
sapTlsArpHostLastMgmtChange = _SapTlsArpHostLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68, 1, 1),
    _SapTlsArpHostLastMgmtChange_Type()
)
sapTlsArpHostLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsArpHostLastMgmtChange.setStatus("current")


class _SapTlsArpHostAdminState_Type(TmnxAdminState):
    """Custom type sapTlsArpHostAdminState based on TmnxAdminState"""
    defaultValue = 3


_SapTlsArpHostAdminState_Type.__name__ = "TmnxAdminState"
_SapTlsArpHostAdminState_Object = MibTableColumn
sapTlsArpHostAdminState = _SapTlsArpHostAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68, 1, 2),
    _SapTlsArpHostAdminState_Type()
)
sapTlsArpHostAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsArpHostAdminState.setStatus("current")


class _SapTlsArpHostMaxNumHosts_Type(Unsigned32):
    """Custom type sapTlsArpHostMaxNumHosts based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_SapTlsArpHostMaxNumHosts_Type.__name__ = "Unsigned32"
_SapTlsArpHostMaxNumHosts_Object = MibTableColumn
sapTlsArpHostMaxNumHosts = _SapTlsArpHostMaxNumHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68, 1, 3),
    _SapTlsArpHostMaxNumHosts_Type()
)
sapTlsArpHostMaxNumHosts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsArpHostMaxNumHosts.setStatus("current")


class _SapTlsArpHostMinAuthIntvl_Type(Unsigned32):
    """Custom type sapTlsArpHostMinAuthIntvl based on Unsigned32"""
    defaultValue = 15

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6000),
    )


_SapTlsArpHostMinAuthIntvl_Type.__name__ = "Unsigned32"
_SapTlsArpHostMinAuthIntvl_Object = MibTableColumn
sapTlsArpHostMinAuthIntvl = _SapTlsArpHostMinAuthIntvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 68, 1, 4),
    _SapTlsArpHostMinAuthIntvl_Type()
)
sapTlsArpHostMinAuthIntvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsArpHostMinAuthIntvl.setStatus("current")
if mibBuilder.loadTexts:
    sapTlsArpHostMinAuthIntvl.setUnits("minutes")
_SapIgmpTrkTableLastMgmtChange_Type = TimeStamp
_SapIgmpTrkTableLastMgmtChange_Object = MibScalar
sapIgmpTrkTableLastMgmtChange = _SapIgmpTrkTableLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 69),
    _SapIgmpTrkTableLastMgmtChange_Type()
)
sapIgmpTrkTableLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgmpTrkTableLastMgmtChange.setStatus("current")
_SapIgmpTrkTable_Object = MibTable
sapIgmpTrkTable = _SapIgmpTrkTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70)
)
if mibBuilder.loadTexts:
    sapIgmpTrkTable.setStatus("current")
_SapIgmpTrkEntry_Object = MibTableRow
sapIgmpTrkEntry = _SapIgmpTrkEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1)
)
sapIgmpTrkEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapIgmpTrkEntry.setStatus("current")
_SapIgmpTrkLastMgmtChange_Type = TimeStamp
_SapIgmpTrkLastMgmtChange_Object = MibTableColumn
sapIgmpTrkLastMgmtChange = _SapIgmpTrkLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 1),
    _SapIgmpTrkLastMgmtChange_Type()
)
sapIgmpTrkLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgmpTrkLastMgmtChange.setStatus("current")


class _SapIgmpTrkExpiryTime_Type(Unsigned32):
    """Custom type sapIgmpTrkExpiryTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 65535),
    )


_SapIgmpTrkExpiryTime_Type.__name__ = "Unsigned32"
_SapIgmpTrkExpiryTime_Object = MibTableColumn
sapIgmpTrkExpiryTime = _SapIgmpTrkExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 2),
    _SapIgmpTrkExpiryTime_Type()
)
sapIgmpTrkExpiryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkExpiryTime.setStatus("current")
if mibBuilder.loadTexts:
    sapIgmpTrkExpiryTime.setUnits("seconds")


class _SapIgmpTrkImportPlcy_Type(TPolicyStatementNameOrEmpty):
    """Custom type sapIgmpTrkImportPlcy based on TPolicyStatementNameOrEmpty"""
    defaultValue = OctetString("")


_SapIgmpTrkImportPlcy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SapIgmpTrkImportPlcy_Object = MibTableColumn
sapIgmpTrkImportPlcy = _SapIgmpTrkImportPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 3),
    _SapIgmpTrkImportPlcy_Type()
)
sapIgmpTrkImportPlcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkImportPlcy.setStatus("current")


class _SapIgmpTrkMaxNbrGrps_Type(Unsigned32):
    """Custom type sapIgmpTrkMaxNbrGrps based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16000),
    )


_SapIgmpTrkMaxNbrGrps_Type.__name__ = "Unsigned32"
_SapIgmpTrkMaxNbrGrps_Object = MibTableColumn
sapIgmpTrkMaxNbrGrps = _SapIgmpTrkMaxNbrGrps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 4),
    _SapIgmpTrkMaxNbrGrps_Type()
)
sapIgmpTrkMaxNbrGrps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkMaxNbrGrps.setStatus("current")
_SapIgmpTrkNbrGrps_Type = Gauge32
_SapIgmpTrkNbrGrps_Object = MibTableColumn
sapIgmpTrkNbrGrps = _SapIgmpTrkNbrGrps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 5),
    _SapIgmpTrkNbrGrps_Type()
)
sapIgmpTrkNbrGrps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgmpTrkNbrGrps.setStatus("current")


class _SapIgmpTrkMaxNbrSrcs_Type(Unsigned32):
    """Custom type sapIgmpTrkMaxNbrSrcs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_SapIgmpTrkMaxNbrSrcs_Type.__name__ = "Unsigned32"
_SapIgmpTrkMaxNbrSrcs_Object = MibTableColumn
sapIgmpTrkMaxNbrSrcs = _SapIgmpTrkMaxNbrSrcs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 6),
    _SapIgmpTrkMaxNbrSrcs_Type()
)
sapIgmpTrkMaxNbrSrcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkMaxNbrSrcs.setStatus("current")


class _SapIgmpTrkDisRtrAlertChk_Type(TruthValue):
    """Custom type sapIgmpTrkDisRtrAlertChk based on TruthValue"""
    defaultValue = 2


_SapIgmpTrkDisRtrAlertChk_Type.__name__ = "TruthValue"
_SapIgmpTrkDisRtrAlertChk_Object = MibTableColumn
sapIgmpTrkDisRtrAlertChk = _SapIgmpTrkDisRtrAlertChk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 7),
    _SapIgmpTrkDisRtrAlertChk_Type()
)
sapIgmpTrkDisRtrAlertChk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkDisRtrAlertChk.setStatus("current")


class _SapIgmpTrkMaxNbrGrpSrcs_Type(Unsigned32):
    """Custom type sapIgmpTrkMaxNbrGrpSrcs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32000),
    )


_SapIgmpTrkMaxNbrGrpSrcs_Type.__name__ = "Unsigned32"
_SapIgmpTrkMaxNbrGrpSrcs_Object = MibTableColumn
sapIgmpTrkMaxNbrGrpSrcs = _SapIgmpTrkMaxNbrGrpSrcs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 70, 1, 8),
    _SapIgmpTrkMaxNbrGrpSrcs_Type()
)
sapIgmpTrkMaxNbrGrpSrcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapIgmpTrkMaxNbrGrpSrcs.setStatus("current")
_SapFrInfoTable_Object = MibTable
sapFrInfoTable = _SapFrInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 71)
)
if mibBuilder.loadTexts:
    sapFrInfoTable.setStatus("current")
_SapFrInfoEntry_Object = MibTableRow
sapFrInfoEntry = _SapFrInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 71, 1)
)
sapFrInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapFrInfoEntry.setStatus("current")


class _SapFrInfoFrf12Mode_Type(TmnxEnabledDisabled):
    """Custom type sapFrInfoFrf12Mode based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapFrInfoFrf12Mode_Type.__name__ = "TmnxEnabledDisabled"
_SapFrInfoFrf12Mode_Object = MibTableColumn
sapFrInfoFrf12Mode = _SapFrInfoFrf12Mode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 71, 1, 1),
    _SapFrInfoFrf12Mode_Type()
)
sapFrInfoFrf12Mode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFrInfoFrf12Mode.setStatus("current")


class _SapFrInfoSchedulingClass_Type(TmnxMcFrClassIndex):
    """Custom type sapFrInfoSchedulingClass based on TmnxMcFrClassIndex"""
    defaultValue = 3


_SapFrInfoSchedulingClass_Type.__name__ = "TmnxMcFrClassIndex"
_SapFrInfoSchedulingClass_Object = MibTableColumn
sapFrInfoSchedulingClass = _SapFrInfoSchedulingClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 71, 1, 2),
    _SapFrInfoSchedulingClass_Type()
)
sapFrInfoSchedulingClass.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFrInfoSchedulingClass.setStatus("current")
_SapFrInfoLastChanged_Type = TimeStamp
_SapFrInfoLastChanged_Object = MibTableColumn
sapFrInfoLastChanged = _SapFrInfoLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 71, 1, 3),
    _SapFrInfoLastChanged_Type()
)
sapFrInfoLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapFrInfoLastChanged.setStatus("current")
_SapFrf12InfoTable_Object = MibTable
sapFrf12InfoTable = _SapFrf12InfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 74)
)
if mibBuilder.loadTexts:
    sapFrf12InfoTable.setStatus("current")
_SapFrf12InfoEntry_Object = MibTableRow
sapFrf12InfoEntry = _SapFrf12InfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 74, 1)
)
sapFrf12InfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapFrf12InfoEntry.setStatus("current")


class _SapFrf12InfoFragmentThreshold_Type(Unsigned32):
    """Custom type sapFrf12InfoFragmentThreshold based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 512),
    )


_SapFrf12InfoFragmentThreshold_Type.__name__ = "Unsigned32"
_SapFrf12InfoFragmentThreshold_Object = MibTableColumn
sapFrf12InfoFragmentThreshold = _SapFrf12InfoFragmentThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 74, 1, 1),
    _SapFrf12InfoFragmentThreshold_Type()
)
sapFrf12InfoFragmentThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFrf12InfoFragmentThreshold.setStatus("current")
_SapFrf12InfoLastChanged_Type = TimeStamp
_SapFrf12InfoLastChanged_Object = MibTableColumn
sapFrf12InfoLastChanged = _SapFrf12InfoLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 74, 1, 2),
    _SapFrf12InfoLastChanged_Type()
)
sapFrf12InfoLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapFrf12InfoLastChanged.setStatus("current")


class _SapFrf12InfoInterleave_Type(TmnxEnabledDisabled):
    """Custom type sapFrf12InfoInterleave based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapFrf12InfoInterleave_Type.__name__ = "TmnxEnabledDisabled"
_SapFrf12InfoInterleave_Object = MibTableColumn
sapFrf12InfoInterleave = _SapFrf12InfoInterleave_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 74, 1, 3),
    _SapFrf12InfoInterleave_Type()
)
sapFrf12InfoInterleave.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFrf12InfoInterleave.setStatus("current")
_SapArpHostStatTable_Object = MibTable
sapArpHostStatTable = _SapArpHostStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75)
)
if mibBuilder.loadTexts:
    sapArpHostStatTable.setStatus("current")
_SapArpHostStatEntry_Object = MibTableRow
sapArpHostStatEntry = _SapArpHostStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1)
)
sapArpHostStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapArpHostStatEntry.setStatus("current")
_SapArpHostStatLastClearedTime_Type = TimeStamp
_SapArpHostStatLastClearedTime_Object = MibTableColumn
sapArpHostStatLastClearedTime = _SapArpHostStatLastClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 1),
    _SapArpHostStatLastClearedTime_Type()
)
sapArpHostStatLastClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatLastClearedTime.setStatus("current")
_SapArpHostStatNumHosts_Type = Gauge32
_SapArpHostStatNumHosts_Object = MibTableColumn
sapArpHostStatNumHosts = _SapArpHostStatNumHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 2),
    _SapArpHostStatNumHosts_Type()
)
sapArpHostStatNumHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumHosts.setStatus("current")
_SapArpHostStatTriggersRx_Type = Counter32
_SapArpHostStatTriggersRx_Object = MibTableColumn
sapArpHostStatTriggersRx = _SapArpHostStatTriggersRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 3),
    _SapArpHostStatTriggersRx_Type()
)
sapArpHostStatTriggersRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatTriggersRx.setStatus("current")
_SapArpHostStatTriggersIgnored_Type = Counter32
_SapArpHostStatTriggersIgnored_Object = MibTableColumn
sapArpHostStatTriggersIgnored = _SapArpHostStatTriggersIgnored_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 4),
    _SapArpHostStatTriggersIgnored_Type()
)
sapArpHostStatTriggersIgnored.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatTriggersIgnored.setStatus("current")
_SapArpHostStatTrigIgnQFull_Type = Counter32
_SapArpHostStatTrigIgnQFull_Object = MibTableColumn
sapArpHostStatTrigIgnQFull = _SapArpHostStatTrigIgnQFull_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 5),
    _SapArpHostStatTrigIgnQFull_Type()
)
sapArpHostStatTrigIgnQFull.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatTrigIgnQFull.setStatus("current")
_SapArpHostStatNumForcedVerif_Type = Counter32
_SapArpHostStatNumForcedVerif_Object = MibTableColumn
sapArpHostStatNumForcedVerif = _SapArpHostStatNumForcedVerif_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 6),
    _SapArpHostStatNumForcedVerif_Type()
)
sapArpHostStatNumForcedVerif.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumForcedVerif.setStatus("current")
_SapArpHostStatNumCreated_Type = Counter32
_SapArpHostStatNumCreated_Object = MibTableColumn
sapArpHostStatNumCreated = _SapArpHostStatNumCreated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 7),
    _SapArpHostStatNumCreated_Type()
)
sapArpHostStatNumCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumCreated.setStatus("current")
_SapArpHostStatNumDeleted_Type = Counter32
_SapArpHostStatNumDeleted_Object = MibTableColumn
sapArpHostStatNumDeleted = _SapArpHostStatNumDeleted_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 8),
    _SapArpHostStatNumDeleted_Type()
)
sapArpHostStatNumDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumDeleted.setStatus("current")
_SapArpHostStatNumUpdated_Type = Counter32
_SapArpHostStatNumUpdated_Object = MibTableColumn
sapArpHostStatNumUpdated = _SapArpHostStatNumUpdated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 9),
    _SapArpHostStatNumUpdated_Type()
)
sapArpHostStatNumUpdated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumUpdated.setStatus("current")
_SapArpHostStatNumAuthReq_Type = Counter32
_SapArpHostStatNumAuthReq_Object = MibTableColumn
sapArpHostStatNumAuthReq = _SapArpHostStatNumAuthReq_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 75, 1, 10),
    _SapArpHostStatNumAuthReq_Type()
)
sapArpHostStatNumAuthReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapArpHostStatNumAuthReq.setStatus("current")
_SapPbbTable_Object = MibTable
sapPbbTable = _SapPbbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76)
)
if mibBuilder.loadTexts:
    sapPbbTable.setStatus("current")
_SapPbbEntry_Object = MibTableRow
sapPbbEntry = _SapPbbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1)
)
sapPbbEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "sapPbbSvcIdIVpls"),
    (0, "TIMETRA-SAP-MIB", "sapPbbSvcIdBVpls"),
    (0, "TIMETRA-SAP-MIB", "sapPbbPortId"),
    (0, "TIMETRA-SAP-MIB", "sapPbbEncapValue"),
)
if mibBuilder.loadTexts:
    sapPbbEntry.setStatus("current")
_SapPbbSvcIdIVpls_Type = TmnxServId
_SapPbbSvcIdIVpls_Object = MibTableColumn
sapPbbSvcIdIVpls = _SapPbbSvcIdIVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 1),
    _SapPbbSvcIdIVpls_Type()
)
sapPbbSvcIdIVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPbbSvcIdIVpls.setStatus("current")
_SapPbbSvcIdBVpls_Type = TmnxServId
_SapPbbSvcIdBVpls_Object = MibTableColumn
sapPbbSvcIdBVpls = _SapPbbSvcIdBVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 2),
    _SapPbbSvcIdBVpls_Type()
)
sapPbbSvcIdBVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPbbSvcIdBVpls.setStatus("current")
_SapPbbPortId_Type = TmnxPortID
_SapPbbPortId_Object = MibTableColumn
sapPbbPortId = _SapPbbPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 3),
    _SapPbbPortId_Type()
)
sapPbbPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPbbPortId.setStatus("current")
_SapPbbEncapValue_Type = TmnxEncapVal
_SapPbbEncapValue_Object = MibTableColumn
sapPbbEncapValue = _SapPbbEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 4),
    _SapPbbEncapValue_Type()
)
sapPbbEncapValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPbbEncapValue.setStatus("current")
_SapPbbRowStatus_Type = RowStatus
_SapPbbRowStatus_Object = MibTableColumn
sapPbbRowStatus = _SapPbbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 5),
    _SapPbbRowStatus_Type()
)
sapPbbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapPbbRowStatus.setStatus("current")
_SapPbbLastMgmtChange_Type = TimeStamp
_SapPbbLastMgmtChange_Object = MibTableColumn
sapPbbLastMgmtChange = _SapPbbLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 6),
    _SapPbbLastMgmtChange_Type()
)
sapPbbLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPbbLastMgmtChange.setStatus("current")


class _SapPbbIgmpSnpgMRouter_Type(TruthValue):
    """Custom type sapPbbIgmpSnpgMRouter based on TruthValue"""
    defaultValue = 2


_SapPbbIgmpSnpgMRouter_Type.__name__ = "TruthValue"
_SapPbbIgmpSnpgMRouter_Object = MibTableColumn
sapPbbIgmpSnpgMRouter = _SapPbbIgmpSnpgMRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 7),
    _SapPbbIgmpSnpgMRouter_Type()
)
sapPbbIgmpSnpgMRouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapPbbIgmpSnpgMRouter.setStatus("current")


class _SapPbbMldSnpgMRouter_Type(TruthValue):
    """Custom type sapPbbMldSnpgMRouter based on TruthValue"""
    defaultValue = 2


_SapPbbMldSnpgMRouter_Type.__name__ = "TruthValue"
_SapPbbMldSnpgMRouter_Object = MibTableColumn
sapPbbMldSnpgMRouter = _SapPbbMldSnpgMRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 76, 1, 8),
    _SapPbbMldSnpgMRouter_Type()
)
sapPbbMldSnpgMRouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapPbbMldSnpgMRouter.setStatus("current")
_SapFPropBMacAddrTblLastChgd_Type = TimeStamp
_SapFPropBMacAddrTblLastChgd_Object = MibScalar
sapFPropBMacAddrTblLastChgd = _SapFPropBMacAddrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 77),
    _SapFPropBMacAddrTblLastChgd_Type()
)
sapFPropBMacAddrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapFPropBMacAddrTblLastChgd.setStatus("current")
_SapFPropBMacAddrTable_Object = MibTable
sapFPropBMacAddrTable = _SapFPropBMacAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 78)
)
if mibBuilder.loadTexts:
    sapFPropBMacAddrTable.setStatus("current")
_SapFPropBMacAddrEntry_Object = MibTableRow
sapFPropBMacAddrEntry = _SapFPropBMacAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 78, 1)
)
sapFPropBMacAddrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapFPropBMacAddrMacNameOrAddrTag"),
    (0, "TIMETRA-SAP-MIB", "sapFPropBMacAddrMacNameOrAddr"),
)
if mibBuilder.loadTexts:
    sapFPropBMacAddrEntry.setStatus("current")


class _SapFPropBMacAddrMacNameOrAddrTag_Type(Integer32):
    """Custom type sapFPropBMacAddrMacNameOrAddrTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("macName", 1),
          ("macAddr", 2))
    )


_SapFPropBMacAddrMacNameOrAddrTag_Type.__name__ = "Integer32"
_SapFPropBMacAddrMacNameOrAddrTag_Object = MibTableColumn
sapFPropBMacAddrMacNameOrAddrTag = _SapFPropBMacAddrMacNameOrAddrTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 78, 1, 1),
    _SapFPropBMacAddrMacNameOrAddrTag_Type()
)
sapFPropBMacAddrMacNameOrAddrTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapFPropBMacAddrMacNameOrAddrTag.setStatus("current")
_SapFPropBMacAddrMacNameOrAddr_Type = TNamedItem
_SapFPropBMacAddrMacNameOrAddr_Object = MibTableColumn
sapFPropBMacAddrMacNameOrAddr = _SapFPropBMacAddrMacNameOrAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 78, 1, 2),
    _SapFPropBMacAddrMacNameOrAddr_Type()
)
sapFPropBMacAddrMacNameOrAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapFPropBMacAddrMacNameOrAddr.setStatus("current")
_SapFPropBMacAddrRowStatus_Type = RowStatus
_SapFPropBMacAddrRowStatus_Object = MibTableColumn
sapFPropBMacAddrRowStatus = _SapFPropBMacAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 78, 1, 3),
    _SapFPropBMacAddrRowStatus_Type()
)
sapFPropBMacAddrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFPropBMacAddrRowStatus.setStatus("current")
_SapIpv6HostInfoTable_Object = MibTable
sapIpv6HostInfoTable = _SapIpv6HostInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79)
)
if mibBuilder.loadTexts:
    sapIpv6HostInfoTable.setStatus("current")
_SapIpv6HostInfoEntry_Object = MibTableRow
sapIpv6HostInfoEntry = _SapIpv6HostInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1)
)
sapIpv6HostInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapIpv6HostInfoEntry.setStatus("current")
_SapIpv6HostInfoIpoeDhcp6Hosts_Type = Unsigned32
_SapIpv6HostInfoIpoeDhcp6Hosts_Object = MibTableColumn
sapIpv6HostInfoIpoeDhcp6Hosts = _SapIpv6HostInfoIpoeDhcp6Hosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1, 1),
    _SapIpv6HostInfoIpoeDhcp6Hosts_Type()
)
sapIpv6HostInfoIpoeDhcp6Hosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpv6HostInfoIpoeDhcp6Hosts.setStatus("current")
_SapIpv6HostInfoPppDhcp6Hosts_Type = Unsigned32
_SapIpv6HostInfoPppDhcp6Hosts_Object = MibTableColumn
sapIpv6HostInfoPppDhcp6Hosts = _SapIpv6HostInfoPppDhcp6Hosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1, 2),
    _SapIpv6HostInfoPppDhcp6Hosts_Type()
)
sapIpv6HostInfoPppDhcp6Hosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpv6HostInfoPppDhcp6Hosts.setStatus("current")
_SapIpv6HostInfoPppSLAACHosts_Type = Unsigned32
_SapIpv6HostInfoPppSLAACHosts_Object = MibTableColumn
sapIpv6HostInfoPppSLAACHosts = _SapIpv6HostInfoPppSLAACHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1, 3),
    _SapIpv6HostInfoPppSLAACHosts_Type()
)
sapIpv6HostInfoPppSLAACHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpv6HostInfoPppSLAACHosts.setStatus("current")
_SapIpv6HostInfoIpoeSLAACHosts_Type = Unsigned32
_SapIpv6HostInfoIpoeSLAACHosts_Object = MibTableColumn
sapIpv6HostInfoIpoeSLAACHosts = _SapIpv6HostInfoIpoeSLAACHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1, 4),
    _SapIpv6HostInfoIpoeSLAACHosts_Type()
)
sapIpv6HostInfoIpoeSLAACHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpv6HostInfoIpoeSLAACHosts.setStatus("current")
_SapIpv6HostInfoStaticHostsUp_Type = Unsigned32
_SapIpv6HostInfoStaticHostsUp_Object = MibTableColumn
sapIpv6HostInfoStaticHostsUp = _SapIpv6HostInfoStaticHostsUp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 79, 1, 5),
    _SapIpv6HostInfoStaticHostsUp_Type()
)
sapIpv6HostInfoStaticHostsUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIpv6HostInfoStaticHostsUp.setStatus("current")
_SapIngPlcrCtrlOvrTblLastChgd_Type = TimeStamp
_SapIngPlcrCtrlOvrTblLastChgd_Object = MibScalar
sapIngPlcrCtrlOvrTblLastChgd = _SapIngPlcrCtrlOvrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 80),
    _SapIngPlcrCtrlOvrTblLastChgd_Type()
)
sapIngPlcrCtrlOvrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrTblLastChgd.setStatus("current")
_SapIngPlcrCtrlOvrTable_Object = MibTable
sapIngPlcrCtrlOvrTable = _SapIngPlcrCtrlOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81)
)
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrTable.setStatus("current")
_SapIngPlcrCtrlOvrEntry_Object = MibTableRow
sapIngPlcrCtrlOvrEntry = _SapIngPlcrCtrlOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1)
)
sapIngPlcrCtrlOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrEntry.setStatus("current")
_SapIngPlcrCtrlOvrRowStatus_Type = RowStatus
_SapIngPlcrCtrlOvrRowStatus_Object = MibTableColumn
sapIngPlcrCtrlOvrRowStatus = _SapIngPlcrCtrlOvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 1),
    _SapIngPlcrCtrlOvrRowStatus_Type()
)
sapIngPlcrCtrlOvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrRowStatus.setStatus("current")
_SapIngPlcrCtrlOvrLastChgd_Type = TimeStamp
_SapIngPlcrCtrlOvrLastChgd_Object = MibTableColumn
sapIngPlcrCtrlOvrLastChgd = _SapIngPlcrCtrlOvrLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 2),
    _SapIngPlcrCtrlOvrLastChgd_Type()
)
sapIngPlcrCtrlOvrLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLastChgd.setStatus("current")


class _SapIngPlcrCtrlOvrMaxRate_Type(THPolPIRRateOverride):
    """Custom type sapIngPlcrCtrlOvrMaxRate based on THPolPIRRateOverride"""
    defaultValue = -2


_SapIngPlcrCtrlOvrMaxRate_Type.__name__ = "THPolPIRRateOverride"
_SapIngPlcrCtrlOvrMaxRate_Object = MibTableColumn
sapIngPlcrCtrlOvrMaxRate = _SapIngPlcrCtrlOvrMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 3),
    _SapIngPlcrCtrlOvrMaxRate_Type()
)
sapIngPlcrCtrlOvrMaxRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRate.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRate.setUnits("kilobps")


class _SapIngPlcrCtrlOvrMinMBSSep_Type(TPlcrBurstSizeBytesOverride):
    """Custom type sapIngPlcrCtrlOvrMinMBSSep based on TPlcrBurstSizeBytesOverride"""
    defaultValue = -2


_SapIngPlcrCtrlOvrMinMBSSep_Type.__name__ = "TPlcrBurstSizeBytesOverride"
_SapIngPlcrCtrlOvrMinMBSSep_Object = MibTableColumn
sapIngPlcrCtrlOvrMinMBSSep = _SapIngPlcrCtrlOvrMinMBSSep_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 4),
    _SapIngPlcrCtrlOvrMinMBSSep_Type()
)
sapIngPlcrCtrlOvrMinMBSSep.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMinMBSSep.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMinMBSSep.setUnits("bytes")


class _SapIngPlcrCtrlOvrMaxRateHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngPlcrCtrlOvrMaxRateHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngPlcrCtrlOvrMaxRateHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngPlcrCtrlOvrMaxRateHi_Object = MibTableColumn
sapIngPlcrCtrlOvrMaxRateHi = _SapIngPlcrCtrlOvrMaxRateHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 5),
    _SapIngPlcrCtrlOvrMaxRateHi_Type()
)
sapIngPlcrCtrlOvrMaxRateHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRateHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRateHi.setUnits("kilobps")


class _SapIngPlcrCtrlOvrMaxRateLo_Type(TmnxQosRateLow32):
    """Custom type sapIngPlcrCtrlOvrMaxRateLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapIngPlcrCtrlOvrMaxRateLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngPlcrCtrlOvrMaxRateLo_Object = MibTableColumn
sapIngPlcrCtrlOvrMaxRateLo = _SapIngPlcrCtrlOvrMaxRateLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 81, 1, 6),
    _SapIngPlcrCtrlOvrMaxRateLo_Type()
)
sapIngPlcrCtrlOvrMaxRateLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRateLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrMaxRateLo.setUnits("kilobps")
_SapIngPlcrCtrlOvrLvlTblLastChgd_Type = TimeStamp
_SapIngPlcrCtrlOvrLvlTblLastChgd_Object = MibScalar
sapIngPlcrCtrlOvrLvlTblLastChgd = _SapIngPlcrCtrlOvrLvlTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 82),
    _SapIngPlcrCtrlOvrLvlTblLastChgd_Type()
)
sapIngPlcrCtrlOvrLvlTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlTblLastChgd.setStatus("current")
_SapIngPlcrCtrlOvrLvlTable_Object = MibTable
sapIngPlcrCtrlOvrLvlTable = _SapIngPlcrCtrlOvrLvlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 83)
)
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlTable.setStatus("current")
_SapIngPlcrCtrlOvrLvlEntry_Object = MibTableRow
sapIngPlcrCtrlOvrLvlEntry = _SapIngPlcrCtrlOvrLvlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 83, 1)
)
sapIngPlcrCtrlOvrLvlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tQosPolicerLevel"),
)
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlEntry.setStatus("current")
_SapIngPlcrCtrlOvrLvlLastChgd_Type = TimeStamp
_SapIngPlcrCtrlOvrLvlLastChgd_Object = MibTableColumn
sapIngPlcrCtrlOvrLvlLastChgd = _SapIngPlcrCtrlOvrLvlLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 83, 1, 1),
    _SapIngPlcrCtrlOvrLvlLastChgd_Type()
)
sapIngPlcrCtrlOvrLvlLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlLastChgd.setStatus("current")


class _SapIngPlcrCtrlOvrLvlMBS_Type(TPlcrBurstSizeBytesOverride):
    """Custom type sapIngPlcrCtrlOvrLvlMBS based on TPlcrBurstSizeBytesOverride"""
    defaultValue = -2


_SapIngPlcrCtrlOvrLvlMBS_Type.__name__ = "TPlcrBurstSizeBytesOverride"
_SapIngPlcrCtrlOvrLvlMBS_Object = MibTableColumn
sapIngPlcrCtrlOvrLvlMBS = _SapIngPlcrCtrlOvrLvlMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 83, 1, 2),
    _SapIngPlcrCtrlOvrLvlMBS_Type()
)
sapIngPlcrCtrlOvrLvlMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlMBS.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrCtrlOvrLvlMBS.setUnits("bytes")
_SapIngPlcrOvrTblLastChgd_Type = TimeStamp
_SapIngPlcrOvrTblLastChgd_Object = MibScalar
sapIngPlcrOvrTblLastChgd = _SapIngPlcrOvrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 86),
    _SapIngPlcrOvrTblLastChgd_Type()
)
sapIngPlcrOvrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrOvrTblLastChgd.setStatus("current")
_SapIngPlcrOvrTable_Object = MibTable
sapIngPlcrOvrTable = _SapIngPlcrOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87)
)
if mibBuilder.loadTexts:
    sapIngPlcrOvrTable.setStatus("current")
_SapIngPlcrOvrEntry_Object = MibTableRow
sapIngPlcrOvrEntry = _SapIngPlcrOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1)
)
sapIngPlcrOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSapIngPolicerId"),
)
if mibBuilder.loadTexts:
    sapIngPlcrOvrEntry.setStatus("current")
_SapIngPlcrOvrRowStatus_Type = RowStatus
_SapIngPlcrOvrRowStatus_Object = MibTableColumn
sapIngPlcrOvrRowStatus = _SapIngPlcrOvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 1),
    _SapIngPlcrOvrRowStatus_Type()
)
sapIngPlcrOvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrRowStatus.setStatus("current")
_SapIngPlcrOvrLastChgd_Type = TimeStamp
_SapIngPlcrOvrLastChgd_Object = MibTableColumn
sapIngPlcrOvrLastChgd = _SapIngPlcrOvrLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 2),
    _SapIngPlcrOvrLastChgd_Type()
)
sapIngPlcrOvrLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngPlcrOvrLastChgd.setStatus("current")


class _SapIngPlcrOvrAdminPIR_Type(THPolPIRRateOverride):
    """Custom type sapIngPlcrOvrAdminPIR based on THPolPIRRateOverride"""
    defaultValue = -2


_SapIngPlcrOvrAdminPIR_Type.__name__ = "THPolPIRRateOverride"
_SapIngPlcrOvrAdminPIR_Object = MibTableColumn
sapIngPlcrOvrAdminPIR = _SapIngPlcrOvrAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 3),
    _SapIngPlcrOvrAdminPIR_Type()
)
sapIngPlcrOvrAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIR.setUnits("kilobps")


class _SapIngPlcrOvrAdminCIR_Type(THPolCIRRateOverride):
    """Custom type sapIngPlcrOvrAdminCIR based on THPolCIRRateOverride"""
    defaultValue = -2


_SapIngPlcrOvrAdminCIR_Type.__name__ = "THPolCIRRateOverride"
_SapIngPlcrOvrAdminCIR_Object = MibTableColumn
sapIngPlcrOvrAdminCIR = _SapIngPlcrOvrAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 4),
    _SapIngPlcrOvrAdminCIR_Type()
)
sapIngPlcrOvrAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIR.setUnits("kilobps")


class _SapIngPlcrOvrStatMode_Type(TmnxIngPolicerStatModeOverride):
    """Custom type sapIngPlcrOvrStatMode based on TmnxIngPolicerStatModeOverride"""
    defaultValue = -1


_SapIngPlcrOvrStatMode_Type.__name__ = "TmnxIngPolicerStatModeOverride"
_SapIngPlcrOvrStatMode_Object = MibTableColumn
sapIngPlcrOvrStatMode = _SapIngPlcrOvrStatMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 5),
    _SapIngPlcrOvrStatMode_Type()
)
sapIngPlcrOvrStatMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrStatMode.setStatus("current")


class _SapIngPlcrOvrMBS_Type(TPolicerBurstSizeBytesOverride):
    """Custom type sapIngPlcrOvrMBS based on TPolicerBurstSizeBytesOverride"""
    defaultValue = -2


_SapIngPlcrOvrMBS_Type.__name__ = "TPolicerBurstSizeBytesOverride"
_SapIngPlcrOvrMBS_Object = MibTableColumn
sapIngPlcrOvrMBS = _SapIngPlcrOvrMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 6),
    _SapIngPlcrOvrMBS_Type()
)
sapIngPlcrOvrMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrMBS.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrMBS.setUnits("bytes")


class _SapIngPlcrOvrPktOffset_Type(TPerPacketOffsetOvr):
    """Custom type sapIngPlcrOvrPktOffset based on TPerPacketOffsetOvr"""
    defaultValue = -128


_SapIngPlcrOvrPktOffset_Type.__name__ = "TPerPacketOffsetOvr"
_SapIngPlcrOvrPktOffset_Object = MibTableColumn
sapIngPlcrOvrPktOffset = _SapIngPlcrOvrPktOffset_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 7),
    _SapIngPlcrOvrPktOffset_Type()
)
sapIngPlcrOvrPktOffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrPktOffset.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrPktOffset.setUnits("bytes")


class _SapIngPlcrOvrCBS_Type(TPolicerBurstSizeBytesOverride):
    """Custom type sapIngPlcrOvrCBS based on TPolicerBurstSizeBytesOverride"""
    defaultValue = -2


_SapIngPlcrOvrCBS_Type.__name__ = "TPolicerBurstSizeBytesOverride"
_SapIngPlcrOvrCBS_Object = MibTableColumn
sapIngPlcrOvrCBS = _SapIngPlcrOvrCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 8),
    _SapIngPlcrOvrCBS_Type()
)
sapIngPlcrOvrCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrCBS.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrCBS.setUnits("bytes")


class _SapIngPlcrOvrAdminPIRPercent_Type(TPIRPercentOverride):
    """Custom type sapIngPlcrOvrAdminPIRPercent based on TPIRPercentOverride"""
    defaultValue = -2


_SapIngPlcrOvrAdminPIRPercent_Type.__name__ = "TPIRPercentOverride"
_SapIngPlcrOvrAdminPIRPercent_Object = MibTableColumn
sapIngPlcrOvrAdminPIRPercent = _SapIngPlcrOvrAdminPIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 9),
    _SapIngPlcrOvrAdminPIRPercent_Type()
)
sapIngPlcrOvrAdminPIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRPercent.setUnits("centipercent")


class _SapIngPlcrOvrAdminCIRPercent_Type(TCIRPercentOverride):
    """Custom type sapIngPlcrOvrAdminCIRPercent based on TCIRPercentOverride"""
    defaultValue = -2


_SapIngPlcrOvrAdminCIRPercent_Type.__name__ = "TCIRPercentOverride"
_SapIngPlcrOvrAdminCIRPercent_Object = MibTableColumn
sapIngPlcrOvrAdminCIRPercent = _SapIngPlcrOvrAdminCIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 10),
    _SapIngPlcrOvrAdminCIRPercent_Type()
)
sapIngPlcrOvrAdminCIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRPercent.setUnits("centipercent")


class _SapIngPlcrOvrAdminPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngPlcrOvrAdminPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngPlcrOvrAdminPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngPlcrOvrAdminPIRHi_Object = MibTableColumn
sapIngPlcrOvrAdminPIRHi = _SapIngPlcrOvrAdminPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 11),
    _SapIngPlcrOvrAdminPIRHi_Type()
)
sapIngPlcrOvrAdminPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRHi.setUnits("kilobps")


class _SapIngPlcrOvrAdminPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngPlcrOvrAdminPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapIngPlcrOvrAdminPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngPlcrOvrAdminPIRLo_Object = MibTableColumn
sapIngPlcrOvrAdminPIRLo = _SapIngPlcrOvrAdminPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 12),
    _SapIngPlcrOvrAdminPIRLo_Type()
)
sapIngPlcrOvrAdminPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminPIRLo.setUnits("kilobps")


class _SapIngPlcrOvrAdminCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapIngPlcrOvrAdminCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapIngPlcrOvrAdminCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapIngPlcrOvrAdminCIRHi_Object = MibTableColumn
sapIngPlcrOvrAdminCIRHi = _SapIngPlcrOvrAdminCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 13),
    _SapIngPlcrOvrAdminCIRHi_Type()
)
sapIngPlcrOvrAdminCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRHi.setUnits("kilobps")


class _SapIngPlcrOvrAdminCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapIngPlcrOvrAdminCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapIngPlcrOvrAdminCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapIngPlcrOvrAdminCIRLo_Object = MibTableColumn
sapIngPlcrOvrAdminCIRLo = _SapIngPlcrOvrAdminCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 87, 1, 14),
    _SapIngPlcrOvrAdminCIRLo_Type()
)
sapIngPlcrOvrAdminCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngPlcrOvrAdminCIRLo.setUnits("kilobps")
_SapEgrPlcrCtrlOvrTblLastChgd_Type = TimeStamp
_SapEgrPlcrCtrlOvrTblLastChgd_Object = MibScalar
sapEgrPlcrCtrlOvrTblLastChgd = _SapEgrPlcrCtrlOvrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 88),
    _SapEgrPlcrCtrlOvrTblLastChgd_Type()
)
sapEgrPlcrCtrlOvrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrTblLastChgd.setStatus("current")
_SapEgrPlcrCtrlOvrTable_Object = MibTable
sapEgrPlcrCtrlOvrTable = _SapEgrPlcrCtrlOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89)
)
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrTable.setStatus("current")
_SapEgrPlcrCtrlOvrEntry_Object = MibTableRow
sapEgrPlcrCtrlOvrEntry = _SapEgrPlcrCtrlOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1)
)
sapEgrPlcrCtrlOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrEntry.setStatus("current")
_SapEgrPlcrCtrlOvrRowStatus_Type = RowStatus
_SapEgrPlcrCtrlOvrRowStatus_Object = MibTableColumn
sapEgrPlcrCtrlOvrRowStatus = _SapEgrPlcrCtrlOvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 1),
    _SapEgrPlcrCtrlOvrRowStatus_Type()
)
sapEgrPlcrCtrlOvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrRowStatus.setStatus("current")
_SapEgrPlcrCtrlOvrLastChgd_Type = TimeStamp
_SapEgrPlcrCtrlOvrLastChgd_Object = MibTableColumn
sapEgrPlcrCtrlOvrLastChgd = _SapEgrPlcrCtrlOvrLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 2),
    _SapEgrPlcrCtrlOvrLastChgd_Type()
)
sapEgrPlcrCtrlOvrLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLastChgd.setStatus("current")


class _SapEgrPlcrCtrlOvrMaxRate_Type(THPolPIRRateOverride):
    """Custom type sapEgrPlcrCtrlOvrMaxRate based on THPolPIRRateOverride"""
    defaultValue = -2


_SapEgrPlcrCtrlOvrMaxRate_Type.__name__ = "THPolPIRRateOverride"
_SapEgrPlcrCtrlOvrMaxRate_Object = MibTableColumn
sapEgrPlcrCtrlOvrMaxRate = _SapEgrPlcrCtrlOvrMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 3),
    _SapEgrPlcrCtrlOvrMaxRate_Type()
)
sapEgrPlcrCtrlOvrMaxRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRate.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRate.setUnits("kilobps")


class _SapEgrPlcrCtrlOvrMinMBSSep_Type(TPlcrBurstSizeBytesOverride):
    """Custom type sapEgrPlcrCtrlOvrMinMBSSep based on TPlcrBurstSizeBytesOverride"""
    defaultValue = -2


_SapEgrPlcrCtrlOvrMinMBSSep_Type.__name__ = "TPlcrBurstSizeBytesOverride"
_SapEgrPlcrCtrlOvrMinMBSSep_Object = MibTableColumn
sapEgrPlcrCtrlOvrMinMBSSep = _SapEgrPlcrCtrlOvrMinMBSSep_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 4),
    _SapEgrPlcrCtrlOvrMinMBSSep_Type()
)
sapEgrPlcrCtrlOvrMinMBSSep.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMinMBSSep.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMinMBSSep.setUnits("bytes")


class _SapEgrPlcrCtrlOvrMaxRateHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrPlcrCtrlOvrMaxRateHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrPlcrCtrlOvrMaxRateHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrPlcrCtrlOvrMaxRateHi_Object = MibTableColumn
sapEgrPlcrCtrlOvrMaxRateHi = _SapEgrPlcrCtrlOvrMaxRateHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 5),
    _SapEgrPlcrCtrlOvrMaxRateHi_Type()
)
sapEgrPlcrCtrlOvrMaxRateHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRateHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRateHi.setUnits("kilobps")


class _SapEgrPlcrCtrlOvrMaxRateLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrPlcrCtrlOvrMaxRateLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapEgrPlcrCtrlOvrMaxRateLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrPlcrCtrlOvrMaxRateLo_Object = MibTableColumn
sapEgrPlcrCtrlOvrMaxRateLo = _SapEgrPlcrCtrlOvrMaxRateLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 89, 1, 6),
    _SapEgrPlcrCtrlOvrMaxRateLo_Type()
)
sapEgrPlcrCtrlOvrMaxRateLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRateLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrMaxRateLo.setUnits("kilobps")
_SapEgrPlcrCtrlOvrLvlTblLastChgd_Type = TimeStamp
_SapEgrPlcrCtrlOvrLvlTblLastChgd_Object = MibScalar
sapEgrPlcrCtrlOvrLvlTblLastChgd = _SapEgrPlcrCtrlOvrLvlTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 90),
    _SapEgrPlcrCtrlOvrLvlTblLastChgd_Type()
)
sapEgrPlcrCtrlOvrLvlTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlTblLastChgd.setStatus("current")
_SapEgrPlcrCtrlOvrLvlTable_Object = MibTable
sapEgrPlcrCtrlOvrLvlTable = _SapEgrPlcrCtrlOvrLvlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 91)
)
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlTable.setStatus("current")
_SapEgrPlcrCtrlOvrLvlEntry_Object = MibTableRow
sapEgrPlcrCtrlOvrLvlEntry = _SapEgrPlcrCtrlOvrLvlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 91, 1)
)
sapEgrPlcrCtrlOvrLvlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tQosPolicerLevel"),
)
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlEntry.setStatus("current")
_SapEgrPlcrCtrlOvrLvlLastChgd_Type = TimeStamp
_SapEgrPlcrCtrlOvrLvlLastChgd_Object = MibTableColumn
sapEgrPlcrCtrlOvrLvlLastChgd = _SapEgrPlcrCtrlOvrLvlLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 91, 1, 1),
    _SapEgrPlcrCtrlOvrLvlLastChgd_Type()
)
sapEgrPlcrCtrlOvrLvlLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlLastChgd.setStatus("current")


class _SapEgrPlcrCtrlOvrLvlMBS_Type(TPlcrBurstSizeBytesOverride):
    """Custom type sapEgrPlcrCtrlOvrLvlMBS based on TPlcrBurstSizeBytesOverride"""
    defaultValue = -2


_SapEgrPlcrCtrlOvrLvlMBS_Type.__name__ = "TPlcrBurstSizeBytesOverride"
_SapEgrPlcrCtrlOvrLvlMBS_Object = MibTableColumn
sapEgrPlcrCtrlOvrLvlMBS = _SapEgrPlcrCtrlOvrLvlMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 91, 1, 2),
    _SapEgrPlcrCtrlOvrLvlMBS_Type()
)
sapEgrPlcrCtrlOvrLvlMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlMBS.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrCtrlOvrLvlMBS.setUnits("bytes")
_SapEgrPlcrOvrTblLastChgd_Type = TimeStamp
_SapEgrPlcrOvrTblLastChgd_Object = MibScalar
sapEgrPlcrOvrTblLastChgd = _SapEgrPlcrOvrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 94),
    _SapEgrPlcrOvrTblLastChgd_Type()
)
sapEgrPlcrOvrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrTblLastChgd.setStatus("current")
_SapEgrPlcrOvrTable_Object = MibTable
sapEgrPlcrOvrTable = _SapEgrPlcrOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95)
)
if mibBuilder.loadTexts:
    sapEgrPlcrOvrTable.setStatus("current")
_SapEgrPlcrOvrEntry_Object = MibTableRow
sapEgrPlcrOvrEntry = _SapEgrPlcrOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1)
)
sapEgrPlcrOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-QOS-MIB", "tSapEgrPolicerId"),
)
if mibBuilder.loadTexts:
    sapEgrPlcrOvrEntry.setStatus("current")
_SapEgrPlcrOvrRowStatus_Type = RowStatus
_SapEgrPlcrOvrRowStatus_Object = MibTableColumn
sapEgrPlcrOvrRowStatus = _SapEgrPlcrOvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 1),
    _SapEgrPlcrOvrRowStatus_Type()
)
sapEgrPlcrOvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrRowStatus.setStatus("current")
_SapEgrPlcrOvrLastChgd_Type = TimeStamp
_SapEgrPlcrOvrLastChgd_Object = MibTableColumn
sapEgrPlcrOvrLastChgd = _SapEgrPlcrOvrLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 2),
    _SapEgrPlcrOvrLastChgd_Type()
)
sapEgrPlcrOvrLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrLastChgd.setStatus("current")


class _SapEgrPlcrOvrAdminPIR_Type(THPolPIRRateOverride):
    """Custom type sapEgrPlcrOvrAdminPIR based on THPolPIRRateOverride"""
    defaultValue = -2


_SapEgrPlcrOvrAdminPIR_Type.__name__ = "THPolPIRRateOverride"
_SapEgrPlcrOvrAdminPIR_Object = MibTableColumn
sapEgrPlcrOvrAdminPIR = _SapEgrPlcrOvrAdminPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 3),
    _SapEgrPlcrOvrAdminPIR_Type()
)
sapEgrPlcrOvrAdminPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIR.setUnits("kilobps")


class _SapEgrPlcrOvrAdminCIR_Type(THPolCIRRateOverride):
    """Custom type sapEgrPlcrOvrAdminCIR based on THPolCIRRateOverride"""
    defaultValue = -2


_SapEgrPlcrOvrAdminCIR_Type.__name__ = "THPolCIRRateOverride"
_SapEgrPlcrOvrAdminCIR_Object = MibTableColumn
sapEgrPlcrOvrAdminCIR = _SapEgrPlcrOvrAdminCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 4),
    _SapEgrPlcrOvrAdminCIR_Type()
)
sapEgrPlcrOvrAdminCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIR.setUnits("kilobps")


class _SapEgrPlcrOvrStatMode_Type(TmnxEgrPolicerStatModeOverride):
    """Custom type sapEgrPlcrOvrStatMode based on TmnxEgrPolicerStatModeOverride"""
    defaultValue = -1


_SapEgrPlcrOvrStatMode_Type.__name__ = "TmnxEgrPolicerStatModeOverride"
_SapEgrPlcrOvrStatMode_Object = MibTableColumn
sapEgrPlcrOvrStatMode = _SapEgrPlcrOvrStatMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 5),
    _SapEgrPlcrOvrStatMode_Type()
)
sapEgrPlcrOvrStatMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrStatMode.setStatus("current")


class _SapEgrPlcrOvrMBS_Type(TPolicerBurstSizeBytesOverride):
    """Custom type sapEgrPlcrOvrMBS based on TPolicerBurstSizeBytesOverride"""
    defaultValue = -2


_SapEgrPlcrOvrMBS_Type.__name__ = "TPolicerBurstSizeBytesOverride"
_SapEgrPlcrOvrMBS_Object = MibTableColumn
sapEgrPlcrOvrMBS = _SapEgrPlcrOvrMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 6),
    _SapEgrPlcrOvrMBS_Type()
)
sapEgrPlcrOvrMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrMBS.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrMBS.setUnits("bytes")


class _SapEgrPlcrOvrPktOffset_Type(TEgressPerPacketOffsetOvr):
    """Custom type sapEgrPlcrOvrPktOffset based on TEgressPerPacketOffsetOvr"""
    defaultValue = -128


_SapEgrPlcrOvrPktOffset_Type.__name__ = "TEgressPerPacketOffsetOvr"
_SapEgrPlcrOvrPktOffset_Object = MibTableColumn
sapEgrPlcrOvrPktOffset = _SapEgrPlcrOvrPktOffset_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 7),
    _SapEgrPlcrOvrPktOffset_Type()
)
sapEgrPlcrOvrPktOffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrPktOffset.setStatus("current")


class _SapEgrPlcrOvrCBS_Type(TPolicerBurstSizeBytesOverride):
    """Custom type sapEgrPlcrOvrCBS based on TPolicerBurstSizeBytesOverride"""
    defaultValue = -2


_SapEgrPlcrOvrCBS_Type.__name__ = "TPolicerBurstSizeBytesOverride"
_SapEgrPlcrOvrCBS_Object = MibTableColumn
sapEgrPlcrOvrCBS = _SapEgrPlcrOvrCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 8),
    _SapEgrPlcrOvrCBS_Type()
)
sapEgrPlcrOvrCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrCBS.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrCBS.setUnits("bytes")


class _SapEgrPlcrOvrAdminPIRPercent_Type(TPIRPercentOverride):
    """Custom type sapEgrPlcrOvrAdminPIRPercent based on TPIRPercentOverride"""
    defaultValue = -2


_SapEgrPlcrOvrAdminPIRPercent_Type.__name__ = "TPIRPercentOverride"
_SapEgrPlcrOvrAdminPIRPercent_Object = MibTableColumn
sapEgrPlcrOvrAdminPIRPercent = _SapEgrPlcrOvrAdminPIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 9),
    _SapEgrPlcrOvrAdminPIRPercent_Type()
)
sapEgrPlcrOvrAdminPIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRPercent.setUnits("centipercent")


class _SapEgrPlcrOvrAdminCIRPercent_Type(TCIRPercentOverride):
    """Custom type sapEgrPlcrOvrAdminCIRPercent based on TCIRPercentOverride"""
    defaultValue = -2


_SapEgrPlcrOvrAdminCIRPercent_Type.__name__ = "TCIRPercentOverride"
_SapEgrPlcrOvrAdminCIRPercent_Object = MibTableColumn
sapEgrPlcrOvrAdminCIRPercent = _SapEgrPlcrOvrAdminCIRPercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 10),
    _SapEgrPlcrOvrAdminCIRPercent_Type()
)
sapEgrPlcrOvrAdminCIRPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRPercent.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRPercent.setUnits("centipercent")


class _SapEgrPlcrOvrAdminPIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrPlcrOvrAdminPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrPlcrOvrAdminPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrPlcrOvrAdminPIRHi_Object = MibTableColumn
sapEgrPlcrOvrAdminPIRHi = _SapEgrPlcrOvrAdminPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 11),
    _SapEgrPlcrOvrAdminPIRHi_Type()
)
sapEgrPlcrOvrAdminPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRHi.setUnits("kilobps")


class _SapEgrPlcrOvrAdminPIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrPlcrOvrAdminPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapEgrPlcrOvrAdminPIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrPlcrOvrAdminPIRLo_Object = MibTableColumn
sapEgrPlcrOvrAdminPIRLo = _SapEgrPlcrOvrAdminPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 12),
    _SapEgrPlcrOvrAdminPIRLo_Type()
)
sapEgrPlcrOvrAdminPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminPIRLo.setUnits("kilobps")


class _SapEgrPlcrOvrAdminCIRHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrPlcrOvrAdminCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrPlcrOvrAdminCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrPlcrOvrAdminCIRHi_Object = MibTableColumn
sapEgrPlcrOvrAdminCIRHi = _SapEgrPlcrOvrAdminCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 13),
    _SapEgrPlcrOvrAdminCIRHi_Type()
)
sapEgrPlcrOvrAdminCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRHi.setUnits("kilobps")


class _SapEgrPlcrOvrAdminCIRLo_Type(TmnxQosRateLow32):
    """Custom type sapEgrPlcrOvrAdminCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967294


_SapEgrPlcrOvrAdminCIRLo_Type.__name__ = "TmnxQosRateLow32"
_SapEgrPlcrOvrAdminCIRLo_Object = MibTableColumn
sapEgrPlcrOvrAdminCIRLo = _SapEgrPlcrOvrAdminCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 95, 1, 14),
    _SapEgrPlcrOvrAdminCIRLo_Type()
)
sapEgrPlcrOvrAdminCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrPlcrOvrAdminCIRLo.setUnits("kilobps")
_SapIngQosPolicerStatsTable_Object = MibTable
sapIngQosPolicerStatsTable = _SapIngQosPolicerStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96)
)
if mibBuilder.loadTexts:
    sapIngQosPolicerStatsTable.setStatus("current")
_SapIngQosPolicerStatsEntry_Object = MibTableRow
sapIngQosPolicerStatsEntry = _SapIngQosPolicerStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1)
)
sapIngQosPolicerStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosPStatsPolId"),
)
if mibBuilder.loadTexts:
    sapIngQosPolicerStatsEntry.setStatus("current")
_SapIngQosPStatsPolId_Type = TIngressPolicerId
_SapIngQosPStatsPolId_Object = MibTableColumn
sapIngQosPStatsPolId = _SapIngQosPStatsPolId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 1),
    _SapIngQosPStatsPolId_Type()
)
sapIngQosPStatsPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosPStatsPolId.setStatus("current")
_SapIngQosPStatsCustId_Type = TmnxCustId
_SapIngQosPStatsCustId_Object = MibTableColumn
sapIngQosPStatsCustId = _SapIngQosPStatsCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 2),
    _SapIngQosPStatsCustId_Type()
)
sapIngQosPStatsCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsCustId.setStatus("current")
_SapIngQosPStatsMode_Type = TmnxIngPolicerStatMode
_SapIngQosPStatsMode_Object = MibTableColumn
sapIngQosPStatsMode = _SapIngQosPStatsMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 3),
    _SapIngQosPStatsMode_Type()
)
sapIngQosPStatsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsMode.setStatus("current")
_SapIngQosPStatsOffHiPrioPkts_Type = Counter64
_SapIngQosPStatsOffHiPrioPkts_Object = MibTableColumn
sapIngQosPStatsOffHiPrioPkts = _SapIngQosPStatsOffHiPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 4),
    _SapIngQosPStatsOffHiPrioPkts_Type()
)
sapIngQosPStatsOffHiPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioPkts.setStatus("current")
_SapIngQosPStatsOffHiPrioPktsLo_Type = Counter32
_SapIngQosPStatsOffHiPrioPktsLo_Object = MibTableColumn
sapIngQosPStatsOffHiPrioPktsLo = _SapIngQosPStatsOffHiPrioPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 5),
    _SapIngQosPStatsOffHiPrioPktsLo_Type()
)
sapIngQosPStatsOffHiPrioPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioPktsLo.setStatus("current")
_SapIngQosPStatsOffHiPrioPktsHi_Type = Counter32
_SapIngQosPStatsOffHiPrioPktsHi_Object = MibTableColumn
sapIngQosPStatsOffHiPrioPktsHi = _SapIngQosPStatsOffHiPrioPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 6),
    _SapIngQosPStatsOffHiPrioPktsHi_Type()
)
sapIngQosPStatsOffHiPrioPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioPktsHi.setStatus("current")
_SapIngQosPStatsDrpHiPrioPkts_Type = Counter64
_SapIngQosPStatsDrpHiPrioPkts_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioPkts = _SapIngQosPStatsDrpHiPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 7),
    _SapIngQosPStatsDrpHiPrioPkts_Type()
)
sapIngQosPStatsDrpHiPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioPkts.setStatus("current")
_SapIngQosPStatsDrpHiPrioPktsLo_Type = Counter32
_SapIngQosPStatsDrpHiPrioPktsLo_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioPktsLo = _SapIngQosPStatsDrpHiPrioPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 8),
    _SapIngQosPStatsDrpHiPrioPktsLo_Type()
)
sapIngQosPStatsDrpHiPrioPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioPktsLo.setStatus("current")
_SapIngQosPStatsDrpHiPrioPktsHi_Type = Counter32
_SapIngQosPStatsDrpHiPrioPktsHi_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioPktsHi = _SapIngQosPStatsDrpHiPrioPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 9),
    _SapIngQosPStatsDrpHiPrioPktsHi_Type()
)
sapIngQosPStatsDrpHiPrioPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioPktsHi.setStatus("current")
_SapIngQosPStatsOffLoPrioPkts_Type = Counter64
_SapIngQosPStatsOffLoPrioPkts_Object = MibTableColumn
sapIngQosPStatsOffLoPrioPkts = _SapIngQosPStatsOffLoPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 10),
    _SapIngQosPStatsOffLoPrioPkts_Type()
)
sapIngQosPStatsOffLoPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioPkts.setStatus("current")
_SapIngQosPStatsOffLoPrioPktsLo_Type = Counter32
_SapIngQosPStatsOffLoPrioPktsLo_Object = MibTableColumn
sapIngQosPStatsOffLoPrioPktsLo = _SapIngQosPStatsOffLoPrioPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 11),
    _SapIngQosPStatsOffLoPrioPktsLo_Type()
)
sapIngQosPStatsOffLoPrioPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioPktsLo.setStatus("current")
_SapIngQosPStatsOffLoPrioPktsHi_Type = Counter32
_SapIngQosPStatsOffLoPrioPktsHi_Object = MibTableColumn
sapIngQosPStatsOffLoPrioPktsHi = _SapIngQosPStatsOffLoPrioPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 12),
    _SapIngQosPStatsOffLoPrioPktsHi_Type()
)
sapIngQosPStatsOffLoPrioPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioPktsHi.setStatus("current")
_SapIngQosPStatsDrpLoPrioPkts_Type = Counter64
_SapIngQosPStatsDrpLoPrioPkts_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioPkts = _SapIngQosPStatsDrpLoPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 13),
    _SapIngQosPStatsDrpLoPrioPkts_Type()
)
sapIngQosPStatsDrpLoPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioPkts.setStatus("current")
_SapIngQosPStatsDrpLoPrioPktsLo_Type = Counter32
_SapIngQosPStatsDrpLoPrioPktsLo_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioPktsLo = _SapIngQosPStatsDrpLoPrioPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 14),
    _SapIngQosPStatsDrpLoPrioPktsLo_Type()
)
sapIngQosPStatsDrpLoPrioPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioPktsLo.setStatus("current")
_SapIngQosPStatsDrpLoPrioPktsHi_Type = Counter32
_SapIngQosPStatsDrpLoPrioPktsHi_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioPktsHi = _SapIngQosPStatsDrpLoPrioPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 15),
    _SapIngQosPStatsDrpLoPrioPktsHi_Type()
)
sapIngQosPStatsDrpLoPrioPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioPktsHi.setStatus("current")
_SapIngQosPStatsOffHiPrioOcts_Type = Counter64
_SapIngQosPStatsOffHiPrioOcts_Object = MibTableColumn
sapIngQosPStatsOffHiPrioOcts = _SapIngQosPStatsOffHiPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 16),
    _SapIngQosPStatsOffHiPrioOcts_Type()
)
sapIngQosPStatsOffHiPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioOcts.setStatus("current")
_SapIngQosPStatsOffHiPrioOctsLo_Type = Counter32
_SapIngQosPStatsOffHiPrioOctsLo_Object = MibTableColumn
sapIngQosPStatsOffHiPrioOctsLo = _SapIngQosPStatsOffHiPrioOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 17),
    _SapIngQosPStatsOffHiPrioOctsLo_Type()
)
sapIngQosPStatsOffHiPrioOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioOctsLo.setStatus("current")
_SapIngQosPStatsOffHiPrioOctsHi_Type = Counter32
_SapIngQosPStatsOffHiPrioOctsHi_Object = MibTableColumn
sapIngQosPStatsOffHiPrioOctsHi = _SapIngQosPStatsOffHiPrioOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 18),
    _SapIngQosPStatsOffHiPrioOctsHi_Type()
)
sapIngQosPStatsOffHiPrioOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffHiPrioOctsHi.setStatus("current")
_SapIngQosPStatsDrpHiPrioOcts_Type = Counter64
_SapIngQosPStatsDrpHiPrioOcts_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioOcts = _SapIngQosPStatsDrpHiPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 19),
    _SapIngQosPStatsDrpHiPrioOcts_Type()
)
sapIngQosPStatsDrpHiPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioOcts.setStatus("current")
_SapIngQosPStatsDrpHiPrioOctsLo_Type = Counter32
_SapIngQosPStatsDrpHiPrioOctsLo_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioOctsLo = _SapIngQosPStatsDrpHiPrioOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 20),
    _SapIngQosPStatsDrpHiPrioOctsLo_Type()
)
sapIngQosPStatsDrpHiPrioOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioOctsLo.setStatus("current")
_SapIngQosPStatsDrpHiPrioOctsHi_Type = Counter32
_SapIngQosPStatsDrpHiPrioOctsHi_Object = MibTableColumn
sapIngQosPStatsDrpHiPrioOctsHi = _SapIngQosPStatsDrpHiPrioOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 21),
    _SapIngQosPStatsDrpHiPrioOctsHi_Type()
)
sapIngQosPStatsDrpHiPrioOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpHiPrioOctsHi.setStatus("current")
_SapIngQosPStatsOffLoPrioOcts_Type = Counter64
_SapIngQosPStatsOffLoPrioOcts_Object = MibTableColumn
sapIngQosPStatsOffLoPrioOcts = _SapIngQosPStatsOffLoPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 22),
    _SapIngQosPStatsOffLoPrioOcts_Type()
)
sapIngQosPStatsOffLoPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioOcts.setStatus("current")
_SapIngQosPStatsOffLoPrioOctsLo_Type = Counter32
_SapIngQosPStatsOffLoPrioOctsLo_Object = MibTableColumn
sapIngQosPStatsOffLoPrioOctsLo = _SapIngQosPStatsOffLoPrioOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 23),
    _SapIngQosPStatsOffLoPrioOctsLo_Type()
)
sapIngQosPStatsOffLoPrioOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioOctsLo.setStatus("current")
_SapIngQosPStatsOffLoPrioOctsHi_Type = Counter32
_SapIngQosPStatsOffLoPrioOctsHi_Object = MibTableColumn
sapIngQosPStatsOffLoPrioOctsHi = _SapIngQosPStatsOffLoPrioOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 24),
    _SapIngQosPStatsOffLoPrioOctsHi_Type()
)
sapIngQosPStatsOffLoPrioOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsOffLoPrioOctsHi.setStatus("current")
_SapIngQosPStatsDrpLoPrioOcts_Type = Counter64
_SapIngQosPStatsDrpLoPrioOcts_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioOcts = _SapIngQosPStatsDrpLoPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 25),
    _SapIngQosPStatsDrpLoPrioOcts_Type()
)
sapIngQosPStatsDrpLoPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioOcts.setStatus("current")
_SapIngQosPStatsDrpLoPrioOctsLo_Type = Counter32
_SapIngQosPStatsDrpLoPrioOctsLo_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioOctsLo = _SapIngQosPStatsDrpLoPrioOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 26),
    _SapIngQosPStatsDrpLoPrioOctsLo_Type()
)
sapIngQosPStatsDrpLoPrioOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioOctsLo.setStatus("current")
_SapIngQosPStatsDrpLoPrioOctsHi_Type = Counter32
_SapIngQosPStatsDrpLoPrioOctsHi_Object = MibTableColumn
sapIngQosPStatsDrpLoPrioOctsHi = _SapIngQosPStatsDrpLoPrioOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 27),
    _SapIngQosPStatsDrpLoPrioOctsHi_Type()
)
sapIngQosPStatsDrpLoPrioOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpLoPrioOctsHi.setStatus("current")
_SapIngQosPStatsFwdInProfPkts_Type = Counter64
_SapIngQosPStatsFwdInProfPkts_Object = MibTableColumn
sapIngQosPStatsFwdInProfPkts = _SapIngQosPStatsFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 28),
    _SapIngQosPStatsFwdInProfPkts_Type()
)
sapIngQosPStatsFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfPkts.setStatus("current")
_SapIngQosPStatsFwdInProfPktsLo_Type = Counter32
_SapIngQosPStatsFwdInProfPktsLo_Object = MibTableColumn
sapIngQosPStatsFwdInProfPktsLo = _SapIngQosPStatsFwdInProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 29),
    _SapIngQosPStatsFwdInProfPktsLo_Type()
)
sapIngQosPStatsFwdInProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfPktsLo.setStatus("current")
_SapIngQosPStatsFwdInProfPktsHi_Type = Counter32
_SapIngQosPStatsFwdInProfPktsHi_Object = MibTableColumn
sapIngQosPStatsFwdInProfPktsHi = _SapIngQosPStatsFwdInProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 30),
    _SapIngQosPStatsFwdInProfPktsHi_Type()
)
sapIngQosPStatsFwdInProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfPktsHi.setStatus("current")
_SapIngQosPStatsFwdOutProfPkts_Type = Counter64
_SapIngQosPStatsFwdOutProfPkts_Object = MibTableColumn
sapIngQosPStatsFwdOutProfPkts = _SapIngQosPStatsFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 31),
    _SapIngQosPStatsFwdOutProfPkts_Type()
)
sapIngQosPStatsFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfPkts.setStatus("current")
_SapIngQosPStatsFwdOutProfPktsLo_Type = Counter32
_SapIngQosPStatsFwdOutProfPktsLo_Object = MibTableColumn
sapIngQosPStatsFwdOutProfPktsLo = _SapIngQosPStatsFwdOutProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 32),
    _SapIngQosPStatsFwdOutProfPktsLo_Type()
)
sapIngQosPStatsFwdOutProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfPktsLo.setStatus("current")
_SapIngQosPStatsFwdOutProfPktsHi_Type = Counter32
_SapIngQosPStatsFwdOutProfPktsHi_Object = MibTableColumn
sapIngQosPStatsFwdOutProfPktsHi = _SapIngQosPStatsFwdOutProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 33),
    _SapIngQosPStatsFwdOutProfPktsHi_Type()
)
sapIngQosPStatsFwdOutProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfPktsHi.setStatus("current")
_SapIngQosPStatsFwdInProfOcts_Type = Counter64
_SapIngQosPStatsFwdInProfOcts_Object = MibTableColumn
sapIngQosPStatsFwdInProfOcts = _SapIngQosPStatsFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 34),
    _SapIngQosPStatsFwdInProfOcts_Type()
)
sapIngQosPStatsFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfOcts.setStatus("current")
_SapIngQosPStatsFwdInProfOctsLo_Type = Counter32
_SapIngQosPStatsFwdInProfOctsLo_Object = MibTableColumn
sapIngQosPStatsFwdInProfOctsLo = _SapIngQosPStatsFwdInProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 35),
    _SapIngQosPStatsFwdInProfOctsLo_Type()
)
sapIngQosPStatsFwdInProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfOctsLo.setStatus("current")
_SapIngQosPStatsFwdInProfOctsHi_Type = Counter32
_SapIngQosPStatsFwdInProfOctsHi_Object = MibTableColumn
sapIngQosPStatsFwdInProfOctsHi = _SapIngQosPStatsFwdInProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 36),
    _SapIngQosPStatsFwdInProfOctsHi_Type()
)
sapIngQosPStatsFwdInProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdInProfOctsHi.setStatus("current")
_SapIngQosPStatsFwdOutProfOcts_Type = Counter64
_SapIngQosPStatsFwdOutProfOcts_Object = MibTableColumn
sapIngQosPStatsFwdOutProfOcts = _SapIngQosPStatsFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 37),
    _SapIngQosPStatsFwdOutProfOcts_Type()
)
sapIngQosPStatsFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfOcts.setStatus("current")
_SapIngQosPStatsFwdOutProfOctsLo_Type = Counter32
_SapIngQosPStatsFwdOutProfOctsLo_Object = MibTableColumn
sapIngQosPStatsFwdOutProfOctsLo = _SapIngQosPStatsFwdOutProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 38),
    _SapIngQosPStatsFwdOutProfOctsLo_Type()
)
sapIngQosPStatsFwdOutProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfOctsLo.setStatus("current")
_SapIngQosPStatsFwdOutProfOctsHi_Type = Counter32
_SapIngQosPStatsFwdOutProfOctsHi_Object = MibTableColumn
sapIngQosPStatsFwdOutProfOctsHi = _SapIngQosPStatsFwdOutProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 39),
    _SapIngQosPStatsFwdOutProfOctsHi_Type()
)
sapIngQosPStatsFwdOutProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsFwdOutProfOctsHi.setStatus("current")
_SapIngQosPStatsUncolPktsOff_Type = Counter64
_SapIngQosPStatsUncolPktsOff_Object = MibTableColumn
sapIngQosPStatsUncolPktsOff = _SapIngQosPStatsUncolPktsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 40),
    _SapIngQosPStatsUncolPktsOff_Type()
)
sapIngQosPStatsUncolPktsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolPktsOff.setStatus("current")
_SapIngQosPStatsUncolPktsOffLo_Type = Counter32
_SapIngQosPStatsUncolPktsOffLo_Object = MibTableColumn
sapIngQosPStatsUncolPktsOffLo = _SapIngQosPStatsUncolPktsOffLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 41),
    _SapIngQosPStatsUncolPktsOffLo_Type()
)
sapIngQosPStatsUncolPktsOffLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolPktsOffLo.setStatus("current")
_SapIngQosPStatsUncolPktsOffHi_Type = Counter32
_SapIngQosPStatsUncolPktsOffHi_Object = MibTableColumn
sapIngQosPStatsUncolPktsOffHi = _SapIngQosPStatsUncolPktsOffHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 42),
    _SapIngQosPStatsUncolPktsOffHi_Type()
)
sapIngQosPStatsUncolPktsOffHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolPktsOffHi.setStatus("current")
_SapIngQosPStatsUncolOctsOff_Type = Counter64
_SapIngQosPStatsUncolOctsOff_Object = MibTableColumn
sapIngQosPStatsUncolOctsOff = _SapIngQosPStatsUncolOctsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 43),
    _SapIngQosPStatsUncolOctsOff_Type()
)
sapIngQosPStatsUncolOctsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolOctsOff.setStatus("current")
_SapIngQosPStatsUncolOctsOffLo_Type = Counter32
_SapIngQosPStatsUncolOctsOffLo_Object = MibTableColumn
sapIngQosPStatsUncolOctsOffLo = _SapIngQosPStatsUncolOctsOffLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 44),
    _SapIngQosPStatsUncolOctsOffLo_Type()
)
sapIngQosPStatsUncolOctsOffLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolOctsOffLo.setStatus("current")
_SapIngQosPStatsUncolOctsOffHi_Type = Counter32
_SapIngQosPStatsUncolOctsOffHi_Object = MibTableColumn
sapIngQosPStatsUncolOctsOffHi = _SapIngQosPStatsUncolOctsOffHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 45),
    _SapIngQosPStatsUncolOctsOffHi_Type()
)
sapIngQosPStatsUncolOctsOffHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsUncolOctsOffHi.setStatus("current")
_SapIngQosPStatsDrpExdProfPkts_Type = Counter64
_SapIngQosPStatsDrpExdProfPkts_Object = MibTableColumn
sapIngQosPStatsDrpExdProfPkts = _SapIngQosPStatsDrpExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 46),
    _SapIngQosPStatsDrpExdProfPkts_Type()
)
sapIngQosPStatsDrpExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpExdProfPkts.setStatus("current")
_SapIngQosPStatsDrpExdProfOcts_Type = Counter64
_SapIngQosPStatsDrpExdProfOcts_Object = MibTableColumn
sapIngQosPStatsDrpExdProfOcts = _SapIngQosPStatsDrpExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 96, 1, 47),
    _SapIngQosPStatsDrpExdProfOcts_Type()
)
sapIngQosPStatsDrpExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosPStatsDrpExdProfOcts.setStatus("current")
_SapEgrQosPolicerStatsTable_Object = MibTable
sapEgrQosPolicerStatsTable = _SapEgrQosPolicerStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97)
)
if mibBuilder.loadTexts:
    sapEgrQosPolicerStatsTable.setStatus("current")
_SapEgrQosPolicerStatsEntry_Object = MibTableRow
sapEgrQosPolicerStatsEntry = _SapEgrQosPolicerStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1)
)
sapEgrQosPolicerStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosPStatsPolId"),
)
if mibBuilder.loadTexts:
    sapEgrQosPolicerStatsEntry.setStatus("current")
_SapEgrQosPStatsPolId_Type = TEgressPolicerId
_SapEgrQosPStatsPolId_Object = MibTableColumn
sapEgrQosPStatsPolId = _SapEgrQosPStatsPolId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 1),
    _SapEgrQosPStatsPolId_Type()
)
sapEgrQosPStatsPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosPStatsPolId.setStatus("current")
_SapEgrQosPStatsCustId_Type = TmnxCustId
_SapEgrQosPStatsCustId_Object = MibTableColumn
sapEgrQosPStatsCustId = _SapEgrQosPStatsCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 2),
    _SapEgrQosPStatsCustId_Type()
)
sapEgrQosPStatsCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsCustId.setStatus("current")
_SapEgrQosPStatsMode_Type = TmnxEgrPolicerStatMode
_SapEgrQosPStatsMode_Object = MibTableColumn
sapEgrQosPStatsMode = _SapEgrQosPStatsMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 3),
    _SapEgrQosPStatsMode_Type()
)
sapEgrQosPStatsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsMode.setStatus("current")
_SapEgrQosPStatsOffInProfPkts_Type = Counter64
_SapEgrQosPStatsOffInProfPkts_Object = MibTableColumn
sapEgrQosPStatsOffInProfPkts = _SapEgrQosPStatsOffInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 4),
    _SapEgrQosPStatsOffInProfPkts_Type()
)
sapEgrQosPStatsOffInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfPkts.setStatus("current")
_SapEgrQosPStatsOffInProfPktsLo_Type = Counter32
_SapEgrQosPStatsOffInProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsOffInProfPktsLo = _SapEgrQosPStatsOffInProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 5),
    _SapEgrQosPStatsOffInProfPktsLo_Type()
)
sapEgrQosPStatsOffInProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfPktsLo.setStatus("current")
_SapEgrQosPStatsOffInProfPktsHi_Type = Counter32
_SapEgrQosPStatsOffInProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsOffInProfPktsHi = _SapEgrQosPStatsOffInProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 6),
    _SapEgrQosPStatsOffInProfPktsHi_Type()
)
sapEgrQosPStatsOffInProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfPktsHi.setStatus("current")
_SapEgrQosPStatsFwdInProfPkts_Type = Counter64
_SapEgrQosPStatsFwdInProfPkts_Object = MibTableColumn
sapEgrQosPStatsFwdInProfPkts = _SapEgrQosPStatsFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 7),
    _SapEgrQosPStatsFwdInProfPkts_Type()
)
sapEgrQosPStatsFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfPkts.setStatus("current")
_SapEgrQosPStatsFwdInProfPktsLo_Type = Counter32
_SapEgrQosPStatsFwdInProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsFwdInProfPktsLo = _SapEgrQosPStatsFwdInProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 8),
    _SapEgrQosPStatsFwdInProfPktsLo_Type()
)
sapEgrQosPStatsFwdInProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfPktsLo.setStatus("current")
_SapEgrQosPStatsFwdInProfPktsHi_Type = Counter32
_SapEgrQosPStatsFwdInProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsFwdInProfPktsHi = _SapEgrQosPStatsFwdInProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 9),
    _SapEgrQosPStatsFwdInProfPktsHi_Type()
)
sapEgrQosPStatsFwdInProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfPktsHi.setStatus("current")
_SapEgrQosPStatsDrpInProfPkts_Type = Counter64
_SapEgrQosPStatsDrpInProfPkts_Object = MibTableColumn
sapEgrQosPStatsDrpInProfPkts = _SapEgrQosPStatsDrpInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 10),
    _SapEgrQosPStatsDrpInProfPkts_Type()
)
sapEgrQosPStatsDrpInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfPkts.setStatus("current")
_SapEgrQosPStatsDrpInProfPktsLo_Type = Counter32
_SapEgrQosPStatsDrpInProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsDrpInProfPktsLo = _SapEgrQosPStatsDrpInProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 11),
    _SapEgrQosPStatsDrpInProfPktsLo_Type()
)
sapEgrQosPStatsDrpInProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfPktsLo.setStatus("current")
_SapEgrQosPStatsDrpInProfPktsHi_Type = Counter32
_SapEgrQosPStatsDrpInProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsDrpInProfPktsHi = _SapEgrQosPStatsDrpInProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 12),
    _SapEgrQosPStatsDrpInProfPktsHi_Type()
)
sapEgrQosPStatsDrpInProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfPktsHi.setStatus("current")
_SapEgrQosPStatsOffOutProfPkts_Type = Counter64
_SapEgrQosPStatsOffOutProfPkts_Object = MibTableColumn
sapEgrQosPStatsOffOutProfPkts = _SapEgrQosPStatsOffOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 13),
    _SapEgrQosPStatsOffOutProfPkts_Type()
)
sapEgrQosPStatsOffOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfPkts.setStatus("current")
_SapEgrQosPStatsOffOutProfPktsLo_Type = Counter32
_SapEgrQosPStatsOffOutProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsOffOutProfPktsLo = _SapEgrQosPStatsOffOutProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 14),
    _SapEgrQosPStatsOffOutProfPktsLo_Type()
)
sapEgrQosPStatsOffOutProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfPktsLo.setStatus("current")
_SapEgrQosPStatsOffOutProfPktsHi_Type = Counter32
_SapEgrQosPStatsOffOutProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsOffOutProfPktsHi = _SapEgrQosPStatsOffOutProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 15),
    _SapEgrQosPStatsOffOutProfPktsHi_Type()
)
sapEgrQosPStatsOffOutProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfPktsHi.setStatus("current")
_SapEgrQosPStatsFwdOutProfPkts_Type = Counter64
_SapEgrQosPStatsFwdOutProfPkts_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfPkts = _SapEgrQosPStatsFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 16),
    _SapEgrQosPStatsFwdOutProfPkts_Type()
)
sapEgrQosPStatsFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfPkts.setStatus("current")
_SapEgrQosPStatsFwdOutProfPktsLo_Type = Counter32
_SapEgrQosPStatsFwdOutProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfPktsLo = _SapEgrQosPStatsFwdOutProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 17),
    _SapEgrQosPStatsFwdOutProfPktsLo_Type()
)
sapEgrQosPStatsFwdOutProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfPktsLo.setStatus("current")
_SapEgrQosPStatsFwdOutProfPktsHi_Type = Counter32
_SapEgrQosPStatsFwdOutProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfPktsHi = _SapEgrQosPStatsFwdOutProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 18),
    _SapEgrQosPStatsFwdOutProfPktsHi_Type()
)
sapEgrQosPStatsFwdOutProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfPktsHi.setStatus("current")
_SapEgrQosPStatsDrpOutProfPkts_Type = Counter64
_SapEgrQosPStatsDrpOutProfPkts_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfPkts = _SapEgrQosPStatsDrpOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 19),
    _SapEgrQosPStatsDrpOutProfPkts_Type()
)
sapEgrQosPStatsDrpOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfPkts.setStatus("current")
_SapEgrQosPStatsDrpOutProfPktsLo_Type = Counter32
_SapEgrQosPStatsDrpOutProfPktsLo_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfPktsLo = _SapEgrQosPStatsDrpOutProfPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 20),
    _SapEgrQosPStatsDrpOutProfPktsLo_Type()
)
sapEgrQosPStatsDrpOutProfPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfPktsLo.setStatus("current")
_SapEgrQosPStatsDrpOutProfPktsHi_Type = Counter32
_SapEgrQosPStatsDrpOutProfPktsHi_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfPktsHi = _SapEgrQosPStatsDrpOutProfPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 21),
    _SapEgrQosPStatsDrpOutProfPktsHi_Type()
)
sapEgrQosPStatsDrpOutProfPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfPktsHi.setStatus("current")
_SapEgrQosPStatsOffInProfOcts_Type = Counter64
_SapEgrQosPStatsOffInProfOcts_Object = MibTableColumn
sapEgrQosPStatsOffInProfOcts = _SapEgrQosPStatsOffInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 22),
    _SapEgrQosPStatsOffInProfOcts_Type()
)
sapEgrQosPStatsOffInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfOcts.setStatus("current")
_SapEgrQosPStatsOffInProfOctsLo_Type = Counter32
_SapEgrQosPStatsOffInProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsOffInProfOctsLo = _SapEgrQosPStatsOffInProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 23),
    _SapEgrQosPStatsOffInProfOctsLo_Type()
)
sapEgrQosPStatsOffInProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfOctsLo.setStatus("current")
_SapEgrQosPStatsOffInProfOctsHi_Type = Counter32
_SapEgrQosPStatsOffInProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsOffInProfOctsHi = _SapEgrQosPStatsOffInProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 24),
    _SapEgrQosPStatsOffInProfOctsHi_Type()
)
sapEgrQosPStatsOffInProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInProfOctsHi.setStatus("current")
_SapEgrQosPStatsFwdInProfOcts_Type = Counter64
_SapEgrQosPStatsFwdInProfOcts_Object = MibTableColumn
sapEgrQosPStatsFwdInProfOcts = _SapEgrQosPStatsFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 25),
    _SapEgrQosPStatsFwdInProfOcts_Type()
)
sapEgrQosPStatsFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfOcts.setStatus("current")
_SapEgrQosPStatsFwdInProfOctsLo_Type = Counter32
_SapEgrQosPStatsFwdInProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsFwdInProfOctsLo = _SapEgrQosPStatsFwdInProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 26),
    _SapEgrQosPStatsFwdInProfOctsLo_Type()
)
sapEgrQosPStatsFwdInProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfOctsLo.setStatus("current")
_SapEgrQosPStatsFwdInProfOctsHi_Type = Counter32
_SapEgrQosPStatsFwdInProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsFwdInProfOctsHi = _SapEgrQosPStatsFwdInProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 27),
    _SapEgrQosPStatsFwdInProfOctsHi_Type()
)
sapEgrQosPStatsFwdInProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInProfOctsHi.setStatus("current")
_SapEgrQosPStatsDrpInProfOcts_Type = Counter64
_SapEgrQosPStatsDrpInProfOcts_Object = MibTableColumn
sapEgrQosPStatsDrpInProfOcts = _SapEgrQosPStatsDrpInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 28),
    _SapEgrQosPStatsDrpInProfOcts_Type()
)
sapEgrQosPStatsDrpInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfOcts.setStatus("current")
_SapEgrQosPStatsDrpInProfOctsLo_Type = Counter32
_SapEgrQosPStatsDrpInProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsDrpInProfOctsLo = _SapEgrQosPStatsDrpInProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 29),
    _SapEgrQosPStatsDrpInProfOctsLo_Type()
)
sapEgrQosPStatsDrpInProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfOctsLo.setStatus("current")
_SapEgrQosPStatsDrpInProfOctsHi_Type = Counter32
_SapEgrQosPStatsDrpInProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsDrpInProfOctsHi = _SapEgrQosPStatsDrpInProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 30),
    _SapEgrQosPStatsDrpInProfOctsHi_Type()
)
sapEgrQosPStatsDrpInProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInProfOctsHi.setStatus("current")
_SapEgrQosPStatsOffOutProfOcts_Type = Counter64
_SapEgrQosPStatsOffOutProfOcts_Object = MibTableColumn
sapEgrQosPStatsOffOutProfOcts = _SapEgrQosPStatsOffOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 31),
    _SapEgrQosPStatsOffOutProfOcts_Type()
)
sapEgrQosPStatsOffOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfOcts.setStatus("current")
_SapEgrQosPStatsOffOutProfOctsLo_Type = Counter32
_SapEgrQosPStatsOffOutProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsOffOutProfOctsLo = _SapEgrQosPStatsOffOutProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 32),
    _SapEgrQosPStatsOffOutProfOctsLo_Type()
)
sapEgrQosPStatsOffOutProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfOctsLo.setStatus("current")
_SapEgrQosPStatsOffOutProfOctsHi_Type = Counter32
_SapEgrQosPStatsOffOutProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsOffOutProfOctsHi = _SapEgrQosPStatsOffOutProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 33),
    _SapEgrQosPStatsOffOutProfOctsHi_Type()
)
sapEgrQosPStatsOffOutProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffOutProfOctsHi.setStatus("current")
_SapEgrQosPStatsFwdOutProfOcts_Type = Counter64
_SapEgrQosPStatsFwdOutProfOcts_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfOcts = _SapEgrQosPStatsFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 34),
    _SapEgrQosPStatsFwdOutProfOcts_Type()
)
sapEgrQosPStatsFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfOcts.setStatus("current")
_SapEgrQosPStatsFwdOutProfOctsLo_Type = Counter32
_SapEgrQosPStatsFwdOutProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfOctsLo = _SapEgrQosPStatsFwdOutProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 35),
    _SapEgrQosPStatsFwdOutProfOctsLo_Type()
)
sapEgrQosPStatsFwdOutProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfOctsLo.setStatus("current")
_SapEgrQosPStatsFwdOutProfOctsHi_Type = Counter32
_SapEgrQosPStatsFwdOutProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsFwdOutProfOctsHi = _SapEgrQosPStatsFwdOutProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 36),
    _SapEgrQosPStatsFwdOutProfOctsHi_Type()
)
sapEgrQosPStatsFwdOutProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdOutProfOctsHi.setStatus("current")
_SapEgrQosPStatsDrpOutProfOcts_Type = Counter64
_SapEgrQosPStatsDrpOutProfOcts_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfOcts = _SapEgrQosPStatsDrpOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 37),
    _SapEgrQosPStatsDrpOutProfOcts_Type()
)
sapEgrQosPStatsDrpOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfOcts.setStatus("current")
_SapEgrQosPStatsDrpOutProfOctsLo_Type = Counter32
_SapEgrQosPStatsDrpOutProfOctsLo_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfOctsLo = _SapEgrQosPStatsDrpOutProfOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 38),
    _SapEgrQosPStatsDrpOutProfOctsLo_Type()
)
sapEgrQosPStatsDrpOutProfOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfOctsLo.setStatus("current")
_SapEgrQosPStatsDrpOutProfOctsHi_Type = Counter32
_SapEgrQosPStatsDrpOutProfOctsHi_Object = MibTableColumn
sapEgrQosPStatsDrpOutProfOctsHi = _SapEgrQosPStatsDrpOutProfOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 39),
    _SapEgrQosPStatsDrpOutProfOctsHi_Type()
)
sapEgrQosPStatsDrpOutProfOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpOutProfOctsHi.setStatus("current")
_SapEgrQosPStatsUncolPktsOff_Type = Counter64
_SapEgrQosPStatsUncolPktsOff_Object = MibTableColumn
sapEgrQosPStatsUncolPktsOff = _SapEgrQosPStatsUncolPktsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 40),
    _SapEgrQosPStatsUncolPktsOff_Type()
)
sapEgrQosPStatsUncolPktsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolPktsOff.setStatus("current")
_SapEgrQosPStatsUncolPktsOffLo_Type = Counter32
_SapEgrQosPStatsUncolPktsOffLo_Object = MibTableColumn
sapEgrQosPStatsUncolPktsOffLo = _SapEgrQosPStatsUncolPktsOffLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 41),
    _SapEgrQosPStatsUncolPktsOffLo_Type()
)
sapEgrQosPStatsUncolPktsOffLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolPktsOffLo.setStatus("current")
_SapEgrQosPStatsUncolPktsOffHi_Type = Counter32
_SapEgrQosPStatsUncolPktsOffHi_Object = MibTableColumn
sapEgrQosPStatsUncolPktsOffHi = _SapEgrQosPStatsUncolPktsOffHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 42),
    _SapEgrQosPStatsUncolPktsOffHi_Type()
)
sapEgrQosPStatsUncolPktsOffHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolPktsOffHi.setStatus("current")
_SapEgrQosPStatsUncolOctsOff_Type = Counter64
_SapEgrQosPStatsUncolOctsOff_Object = MibTableColumn
sapEgrQosPStatsUncolOctsOff = _SapEgrQosPStatsUncolOctsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 43),
    _SapEgrQosPStatsUncolOctsOff_Type()
)
sapEgrQosPStatsUncolOctsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolOctsOff.setStatus("current")
_SapEgrQosPStatsUncolOctsOffLo_Type = Counter32
_SapEgrQosPStatsUncolOctsOffLo_Object = MibTableColumn
sapEgrQosPStatsUncolOctsOffLo = _SapEgrQosPStatsUncolOctsOffLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 44),
    _SapEgrQosPStatsUncolOctsOffLo_Type()
)
sapEgrQosPStatsUncolOctsOffLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolOctsOffLo.setStatus("current")
_SapEgrQosPStatsUncolOctsOffHi_Type = Counter32
_SapEgrQosPStatsUncolOctsOffHi_Object = MibTableColumn
sapEgrQosPStatsUncolOctsOffHi = _SapEgrQosPStatsUncolOctsOffHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 45),
    _SapEgrQosPStatsUncolOctsOffHi_Type()
)
sapEgrQosPStatsUncolOctsOffHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsUncolOctsOffHi.setStatus("current")
_SapEgrQosPStatsFwdExdProfPkts_Type = Counter64
_SapEgrQosPStatsFwdExdProfPkts_Object = MibTableColumn
sapEgrQosPStatsFwdExdProfPkts = _SapEgrQosPStatsFwdExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 46),
    _SapEgrQosPStatsFwdExdProfPkts_Type()
)
sapEgrQosPStatsFwdExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdExdProfPkts.setStatus("current")
_SapEgrQosPStatsDrpExdProfPkts_Type = Counter64
_SapEgrQosPStatsDrpExdProfPkts_Object = MibTableColumn
sapEgrQosPStatsDrpExdProfPkts = _SapEgrQosPStatsDrpExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 47),
    _SapEgrQosPStatsDrpExdProfPkts_Type()
)
sapEgrQosPStatsDrpExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpExdProfPkts.setStatus("current")
_SapEgrQosPStatsFwdExdProfOcts_Type = Counter64
_SapEgrQosPStatsFwdExdProfOcts_Object = MibTableColumn
sapEgrQosPStatsFwdExdProfOcts = _SapEgrQosPStatsFwdExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 48),
    _SapEgrQosPStatsFwdExdProfOcts_Type()
)
sapEgrQosPStatsFwdExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdExdProfOcts.setStatus("current")
_SapEgrQosPStatsDrpExdProfOcts_Type = Counter64
_SapEgrQosPStatsDrpExdProfOcts_Object = MibTableColumn
sapEgrQosPStatsDrpExdProfOcts = _SapEgrQosPStatsDrpExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 49),
    _SapEgrQosPStatsDrpExdProfOcts_Type()
)
sapEgrQosPStatsDrpExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpExdProfOcts.setStatus("current")
_SapEgrQosPStatsOffExdProfPkts_Type = Counter64
_SapEgrQosPStatsOffExdProfPkts_Object = MibTableColumn
sapEgrQosPStatsOffExdProfPkts = _SapEgrQosPStatsOffExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 50),
    _SapEgrQosPStatsOffExdProfPkts_Type()
)
sapEgrQosPStatsOffExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffExdProfPkts.setStatus("current")
_SapEgrQosPStatsOffExdProfOcts_Type = Counter64
_SapEgrQosPStatsOffExdProfOcts_Object = MibTableColumn
sapEgrQosPStatsOffExdProfOcts = _SapEgrQosPStatsOffExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 51),
    _SapEgrQosPStatsOffExdProfOcts_Type()
)
sapEgrQosPStatsOffExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffExdProfOcts.setStatus("current")
_SapEgrQosPStatsOffInPlusProfPkts_Type = Counter64
_SapEgrQosPStatsOffInPlusProfPkts_Object = MibTableColumn
sapEgrQosPStatsOffInPlusProfPkts = _SapEgrQosPStatsOffInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 52),
    _SapEgrQosPStatsOffInPlusProfPkts_Type()
)
sapEgrQosPStatsOffInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInPlusProfPkts.setStatus("current")
_SapEgrQosPStatsFwdInPlusProfPkts_Type = Counter64
_SapEgrQosPStatsFwdInPlusProfPkts_Object = MibTableColumn
sapEgrQosPStatsFwdInPlusProfPkts = _SapEgrQosPStatsFwdInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 53),
    _SapEgrQosPStatsFwdInPlusProfPkts_Type()
)
sapEgrQosPStatsFwdInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInPlusProfPkts.setStatus("current")
_SapEgrQosPStatsDrpInPlusProfPkts_Type = Counter64
_SapEgrQosPStatsDrpInPlusProfPkts_Object = MibTableColumn
sapEgrQosPStatsDrpInPlusProfPkts = _SapEgrQosPStatsDrpInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 54),
    _SapEgrQosPStatsDrpInPlusProfPkts_Type()
)
sapEgrQosPStatsDrpInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInPlusProfPkts.setStatus("current")
_SapEgrQosPStatsOffInPlusProfOcts_Type = Counter64
_SapEgrQosPStatsOffInPlusProfOcts_Object = MibTableColumn
sapEgrQosPStatsOffInPlusProfOcts = _SapEgrQosPStatsOffInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 55),
    _SapEgrQosPStatsOffInPlusProfOcts_Type()
)
sapEgrQosPStatsOffInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsOffInPlusProfOcts.setStatus("current")
_SapEgrQosPStatsFwdInPlusProfOcts_Type = Counter64
_SapEgrQosPStatsFwdInPlusProfOcts_Object = MibTableColumn
sapEgrQosPStatsFwdInPlusProfOcts = _SapEgrQosPStatsFwdInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 56),
    _SapEgrQosPStatsFwdInPlusProfOcts_Type()
)
sapEgrQosPStatsFwdInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsFwdInPlusProfOcts.setStatus("current")
_SapEgrQosPStatsDrpInPlusProfOcts_Type = Counter64
_SapEgrQosPStatsDrpInPlusProfOcts_Object = MibTableColumn
sapEgrQosPStatsDrpInPlusProfOcts = _SapEgrQosPStatsDrpInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 97, 1, 57),
    _SapEgrQosPStatsDrpInPlusProfOcts_Type()
)
sapEgrQosPStatsDrpInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosPStatsDrpInPlusProfOcts.setStatus("current")
_SapIngQosPlcyPolicerStatsTable_Object = MibTable
sapIngQosPlcyPolicerStatsTable = _SapIngQosPlcyPolicerStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98)
)
if mibBuilder.loadTexts:
    sapIngQosPlcyPolicerStatsTable.setStatus("obsolete")
_SapIngQosPlcyPolicerStatsEntry_Object = MibTableRow
sapIngQosPlcyPolicerStatsEntry = _SapIngQosPlcyPolicerStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1)
)
sapIngQosPlcyPolicerStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIgQosPlcyPStatPlcyId"),
    (0, "TIMETRA-SAP-MIB", "sapIgQosPlcyPStatPolId"),
)
if mibBuilder.loadTexts:
    sapIngQosPlcyPolicerStatsEntry.setStatus("obsolete")
_SapIgQosPlcyPStatPlcyId_Type = TSapIngressPolicyID
_SapIgQosPlcyPStatPlcyId_Object = MibTableColumn
sapIgQosPlcyPStatPlcyId = _SapIgQosPlcyPStatPlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 1),
    _SapIgQosPlcyPStatPlcyId_Type()
)
sapIgQosPlcyPStatPlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatPlcyId.setStatus("obsolete")
_SapIgQosPlcyPStatPolId_Type = TIngPolicerId
_SapIgQosPlcyPStatPolId_Object = MibTableColumn
sapIgQosPlcyPStatPolId = _SapIgQosPlcyPStatPolId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 2),
    _SapIgQosPlcyPStatPolId_Type()
)
sapIgQosPlcyPStatPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatPolId.setStatus("obsolete")
_SapIgQosPlcyPStatCustId_Type = TmnxCustId
_SapIgQosPlcyPStatCustId_Object = MibTableColumn
sapIgQosPlcyPStatCustId = _SapIgQosPlcyPStatCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 3),
    _SapIgQosPlcyPStatCustId_Type()
)
sapIgQosPlcyPStatCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatCustId.setStatus("obsolete")
_SapIgQosPlcyPStatMode_Type = TmnxIngPolicerStatMode
_SapIgQosPlcyPStatMode_Object = MibTableColumn
sapIgQosPlcyPStatMode = _SapIgQosPlcyPStatMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 4),
    _SapIgQosPlcyPStatMode_Type()
)
sapIgQosPlcyPStatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatMode.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioPkts_Type = Counter64
_SapIgQosPlcyPStatOffHiPrioPkts_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioPkts = _SapIgQosPlcyPStatOffHiPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 5),
    _SapIgQosPlcyPStatOffHiPrioPkts_Type()
)
sapIgQosPlcyPStatOffHiPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioPkts.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioPktsL_Type = Counter32
_SapIgQosPlcyPStatOffHiPrioPktsL_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioPktsL = _SapIgQosPlcyPStatOffHiPrioPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 6),
    _SapIgQosPlcyPStatOffHiPrioPktsL_Type()
)
sapIgQosPlcyPStatOffHiPrioPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioPktsH_Type = Counter32
_SapIgQosPlcyPStatOffHiPrioPktsH_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioPktsH = _SapIgQosPlcyPStatOffHiPrioPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 7),
    _SapIgQosPlcyPStatOffHiPrioPktsH_Type()
)
sapIgQosPlcyPStatOffHiPrioPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioPkts_Type = Counter64
_SapIgQosPlcyPStatDrpHiPrioPkts_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioPkts = _SapIgQosPlcyPStatDrpHiPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 8),
    _SapIgQosPlcyPStatDrpHiPrioPkts_Type()
)
sapIgQosPlcyPStatDrpHiPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioPkts.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioPktsL_Type = Counter32
_SapIgQosPlcyPStatDrpHiPrioPktsL_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioPktsL = _SapIgQosPlcyPStatDrpHiPrioPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 9),
    _SapIgQosPlcyPStatDrpHiPrioPktsL_Type()
)
sapIgQosPlcyPStatDrpHiPrioPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioPktsH_Type = Counter32
_SapIgQosPlcyPStatDrpHiPrioPktsH_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioPktsH = _SapIgQosPlcyPStatDrpHiPrioPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 10),
    _SapIgQosPlcyPStatDrpHiPrioPktsH_Type()
)
sapIgQosPlcyPStatDrpHiPrioPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioPkts_Type = Counter64
_SapIgQosPlcyPStatOffLoPrioPkts_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioPkts = _SapIgQosPlcyPStatOffLoPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 11),
    _SapIgQosPlcyPStatOffLoPrioPkts_Type()
)
sapIgQosPlcyPStatOffLoPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioPkts.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioPktsL_Type = Counter32
_SapIgQosPlcyPStatOffLoPrioPktsL_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioPktsL = _SapIgQosPlcyPStatOffLoPrioPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 12),
    _SapIgQosPlcyPStatOffLoPrioPktsL_Type()
)
sapIgQosPlcyPStatOffLoPrioPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioPktsH_Type = Counter32
_SapIgQosPlcyPStatOffLoPrioPktsH_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioPktsH = _SapIgQosPlcyPStatOffLoPrioPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 13),
    _SapIgQosPlcyPStatOffLoPrioPktsH_Type()
)
sapIgQosPlcyPStatOffLoPrioPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioPkts_Type = Counter64
_SapIgQosPlcyPStatDrpLoPrioPkts_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioPkts = _SapIgQosPlcyPStatDrpLoPrioPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 14),
    _SapIgQosPlcyPStatDrpLoPrioPkts_Type()
)
sapIgQosPlcyPStatDrpLoPrioPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioPkts.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioPktsL_Type = Counter32
_SapIgQosPlcyPStatDrpLoPrioPktsL_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioPktsL = _SapIgQosPlcyPStatDrpLoPrioPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 15),
    _SapIgQosPlcyPStatDrpLoPrioPktsL_Type()
)
sapIgQosPlcyPStatDrpLoPrioPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioPktsH_Type = Counter32
_SapIgQosPlcyPStatDrpLoPrioPktsH_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioPktsH = _SapIgQosPlcyPStatDrpLoPrioPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 16),
    _SapIgQosPlcyPStatDrpLoPrioPktsH_Type()
)
sapIgQosPlcyPStatDrpLoPrioPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioOcts_Type = Counter64
_SapIgQosPlcyPStatOffHiPrioOcts_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioOcts = _SapIgQosPlcyPStatOffHiPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 17),
    _SapIgQosPlcyPStatOffHiPrioOcts_Type()
)
sapIgQosPlcyPStatOffHiPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioOcts.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioOctsL_Type = Counter32
_SapIgQosPlcyPStatOffHiPrioOctsL_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioOctsL = _SapIgQosPlcyPStatOffHiPrioOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 18),
    _SapIgQosPlcyPStatOffHiPrioOctsL_Type()
)
sapIgQosPlcyPStatOffHiPrioOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatOffHiPrioOctsH_Type = Counter32
_SapIgQosPlcyPStatOffHiPrioOctsH_Object = MibTableColumn
sapIgQosPlcyPStatOffHiPrioOctsH = _SapIgQosPlcyPStatOffHiPrioOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 19),
    _SapIgQosPlcyPStatOffHiPrioOctsH_Type()
)
sapIgQosPlcyPStatOffHiPrioOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffHiPrioOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioOcts_Type = Counter64
_SapIgQosPlcyPStatDrpHiPrioOcts_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioOcts = _SapIgQosPlcyPStatDrpHiPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 20),
    _SapIgQosPlcyPStatDrpHiPrioOcts_Type()
)
sapIgQosPlcyPStatDrpHiPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioOcts.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioOctsL_Type = Counter32
_SapIgQosPlcyPStatDrpHiPrioOctsL_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioOctsL = _SapIgQosPlcyPStatDrpHiPrioOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 21),
    _SapIgQosPlcyPStatDrpHiPrioOctsL_Type()
)
sapIgQosPlcyPStatDrpHiPrioOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatDrpHiPrioOctsH_Type = Counter32
_SapIgQosPlcyPStatDrpHiPrioOctsH_Object = MibTableColumn
sapIgQosPlcyPStatDrpHiPrioOctsH = _SapIgQosPlcyPStatDrpHiPrioOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 22),
    _SapIgQosPlcyPStatDrpHiPrioOctsH_Type()
)
sapIgQosPlcyPStatDrpHiPrioOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpHiPrioOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioOcts_Type = Counter64
_SapIgQosPlcyPStatOffLoPrioOcts_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioOcts = _SapIgQosPlcyPStatOffLoPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 23),
    _SapIgQosPlcyPStatOffLoPrioOcts_Type()
)
sapIgQosPlcyPStatOffLoPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioOcts.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioOctsL_Type = Counter32
_SapIgQosPlcyPStatOffLoPrioOctsL_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioOctsL = _SapIgQosPlcyPStatOffLoPrioOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 24),
    _SapIgQosPlcyPStatOffLoPrioOctsL_Type()
)
sapIgQosPlcyPStatOffLoPrioOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatOffLoPrioOctsH_Type = Counter32
_SapIgQosPlcyPStatOffLoPrioOctsH_Object = MibTableColumn
sapIgQosPlcyPStatOffLoPrioOctsH = _SapIgQosPlcyPStatOffLoPrioOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 25),
    _SapIgQosPlcyPStatOffLoPrioOctsH_Type()
)
sapIgQosPlcyPStatOffLoPrioOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatOffLoPrioOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioOcts_Type = Counter64
_SapIgQosPlcyPStatDrpLoPrioOcts_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioOcts = _SapIgQosPlcyPStatDrpLoPrioOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 26),
    _SapIgQosPlcyPStatDrpLoPrioOcts_Type()
)
sapIgQosPlcyPStatDrpLoPrioOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioOcts.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioOctsL_Type = Counter32
_SapIgQosPlcyPStatDrpLoPrioOctsL_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioOctsL = _SapIgQosPlcyPStatDrpLoPrioOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 27),
    _SapIgQosPlcyPStatDrpLoPrioOctsL_Type()
)
sapIgQosPlcyPStatDrpLoPrioOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatDrpLoPrioOctsH_Type = Counter32
_SapIgQosPlcyPStatDrpLoPrioOctsH_Object = MibTableColumn
sapIgQosPlcyPStatDrpLoPrioOctsH = _SapIgQosPlcyPStatDrpLoPrioOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 28),
    _SapIgQosPlcyPStatDrpLoPrioOctsH_Type()
)
sapIgQosPlcyPStatDrpLoPrioOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatDrpLoPrioOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfPkts_Type = Counter64
_SapIgQosPlcyPStatFwdInProfPkts_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfPkts = _SapIgQosPlcyPStatFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 29),
    _SapIgQosPlcyPStatFwdInProfPkts_Type()
)
sapIgQosPlcyPStatFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfPkts.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfPktsL_Type = Counter32
_SapIgQosPlcyPStatFwdInProfPktsL_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfPktsL = _SapIgQosPlcyPStatFwdInProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 30),
    _SapIgQosPlcyPStatFwdInProfPktsL_Type()
)
sapIgQosPlcyPStatFwdInProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfPktsH_Type = Counter32
_SapIgQosPlcyPStatFwdInProfPktsH_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfPktsH = _SapIgQosPlcyPStatFwdInProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 31),
    _SapIgQosPlcyPStatFwdInProfPktsH_Type()
)
sapIgQosPlcyPStatFwdInProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfPkts_Type = Counter64
_SapIgQosPlcyPStatFwdOutProfPkts_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfPkts = _SapIgQosPlcyPStatFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 32),
    _SapIgQosPlcyPStatFwdOutProfPkts_Type()
)
sapIgQosPlcyPStatFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfPkts.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfPktsL_Type = Counter32
_SapIgQosPlcyPStatFwdOutProfPktsL_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfPktsL = _SapIgQosPlcyPStatFwdOutProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 33),
    _SapIgQosPlcyPStatFwdOutProfPktsL_Type()
)
sapIgQosPlcyPStatFwdOutProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfPktsL.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfPktsH_Type = Counter32
_SapIgQosPlcyPStatFwdOutProfPktsH_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfPktsH = _SapIgQosPlcyPStatFwdOutProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 34),
    _SapIgQosPlcyPStatFwdOutProfPktsH_Type()
)
sapIgQosPlcyPStatFwdOutProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfPktsH.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfOcts_Type = Counter64
_SapIgQosPlcyPStatFwdInProfOcts_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfOcts = _SapIgQosPlcyPStatFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 35),
    _SapIgQosPlcyPStatFwdInProfOcts_Type()
)
sapIgQosPlcyPStatFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfOcts.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfOctsL_Type = Counter32
_SapIgQosPlcyPStatFwdInProfOctsL_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfOctsL = _SapIgQosPlcyPStatFwdInProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 36),
    _SapIgQosPlcyPStatFwdInProfOctsL_Type()
)
sapIgQosPlcyPStatFwdInProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatFwdInProfOctsH_Type = Counter32
_SapIgQosPlcyPStatFwdInProfOctsH_Object = MibTableColumn
sapIgQosPlcyPStatFwdInProfOctsH = _SapIgQosPlcyPStatFwdInProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 37),
    _SapIgQosPlcyPStatFwdInProfOctsH_Type()
)
sapIgQosPlcyPStatFwdInProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdInProfOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfOcts_Type = Counter64
_SapIgQosPlcyPStatFwdOutProfOcts_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfOcts = _SapIgQosPlcyPStatFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 38),
    _SapIgQosPlcyPStatFwdOutProfOcts_Type()
)
sapIgQosPlcyPStatFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfOcts.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfOctsL_Type = Counter32
_SapIgQosPlcyPStatFwdOutProfOctsL_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfOctsL = _SapIgQosPlcyPStatFwdOutProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 39),
    _SapIgQosPlcyPStatFwdOutProfOctsL_Type()
)
sapIgQosPlcyPStatFwdOutProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfOctsL.setStatus("obsolete")
_SapIgQosPlcyPStatFwdOutProfOctsH_Type = Counter32
_SapIgQosPlcyPStatFwdOutProfOctsH_Object = MibTableColumn
sapIgQosPlcyPStatFwdOutProfOctsH = _SapIgQosPlcyPStatFwdOutProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 40),
    _SapIgQosPlcyPStatFwdOutProfOctsH_Type()
)
sapIgQosPlcyPStatFwdOutProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatFwdOutProfOctsH.setStatus("obsolete")
_SapIgQosPlcyPStatUncolPktsOff_Type = Counter64
_SapIgQosPlcyPStatUncolPktsOff_Object = MibTableColumn
sapIgQosPlcyPStatUncolPktsOff = _SapIgQosPlcyPStatUncolPktsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 41),
    _SapIgQosPlcyPStatUncolPktsOff_Type()
)
sapIgQosPlcyPStatUncolPktsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolPktsOff.setStatus("obsolete")
_SapIgQosPlcyPStatUncolPktsOffL_Type = Counter32
_SapIgQosPlcyPStatUncolPktsOffL_Object = MibTableColumn
sapIgQosPlcyPStatUncolPktsOffL = _SapIgQosPlcyPStatUncolPktsOffL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 42),
    _SapIgQosPlcyPStatUncolPktsOffL_Type()
)
sapIgQosPlcyPStatUncolPktsOffL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolPktsOffL.setStatus("obsolete")
_SapIgQosPlcyPStatUncolPktsOffH_Type = Counter32
_SapIgQosPlcyPStatUncolPktsOffH_Object = MibTableColumn
sapIgQosPlcyPStatUncolPktsOffH = _SapIgQosPlcyPStatUncolPktsOffH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 43),
    _SapIgQosPlcyPStatUncolPktsOffH_Type()
)
sapIgQosPlcyPStatUncolPktsOffH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolPktsOffH.setStatus("obsolete")
_SapIgQosPlcyPStatUncolOctsOff_Type = Counter64
_SapIgQosPlcyPStatUncolOctsOff_Object = MibTableColumn
sapIgQosPlcyPStatUncolOctsOff = _SapIgQosPlcyPStatUncolOctsOff_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 44),
    _SapIgQosPlcyPStatUncolOctsOff_Type()
)
sapIgQosPlcyPStatUncolOctsOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolOctsOff.setStatus("obsolete")
_SapIgQosPlcyPStatUncolOctsOffL_Type = Counter32
_SapIgQosPlcyPStatUncolOctsOffL_Object = MibTableColumn
sapIgQosPlcyPStatUncolOctsOffL = _SapIgQosPlcyPStatUncolOctsOffL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 45),
    _SapIgQosPlcyPStatUncolOctsOffL_Type()
)
sapIgQosPlcyPStatUncolOctsOffL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolOctsOffL.setStatus("obsolete")
_SapIgQosPlcyPStatUncolOctsOffH_Type = Counter32
_SapIgQosPlcyPStatUncolOctsOffH_Object = MibTableColumn
sapIgQosPlcyPStatUncolOctsOffH = _SapIgQosPlcyPStatUncolOctsOffH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 98, 1, 46),
    _SapIgQosPlcyPStatUncolOctsOffH_Type()
)
sapIgQosPlcyPStatUncolOctsOffH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIgQosPlcyPStatUncolOctsOffH.setStatus("obsolete")
_SapEgrQosPlcyPolicerStatsTable_Object = MibTable
sapEgrQosPlcyPolicerStatsTable = _SapEgrQosPlcyPolicerStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99)
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyPolicerStatsTable.setStatus("obsolete")
_SapEgrQosPlcyPolicerStatsEntry_Object = MibTableRow
sapEgrQosPlcyPolicerStatsEntry = _SapEgrQosPlcyPolicerStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1)
)
sapEgrQosPlcyPolicerStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgQosPlcyPStatPlcyId"),
    (0, "TIMETRA-SAP-MIB", "sapEgQosPlcyPStatPolId"),
)
if mibBuilder.loadTexts:
    sapEgrQosPlcyPolicerStatsEntry.setStatus("obsolete")
_SapEgQosPlcyPStatPlcyId_Type = TSapEgressPolicyID
_SapEgQosPlcyPStatPlcyId_Object = MibTableColumn
sapEgQosPlcyPStatPlcyId = _SapEgQosPlcyPStatPlcyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 1),
    _SapEgQosPlcyPStatPlcyId_Type()
)
sapEgQosPlcyPStatPlcyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatPlcyId.setStatus("obsolete")
_SapEgQosPlcyPStatPolId_Type = TEgrPolicerId
_SapEgQosPlcyPStatPolId_Object = MibTableColumn
sapEgQosPlcyPStatPolId = _SapEgQosPlcyPStatPolId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 2),
    _SapEgQosPlcyPStatPolId_Type()
)
sapEgQosPlcyPStatPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatPolId.setStatus("obsolete")
_SapEgQosPlcyPStatCustId_Type = TmnxCustId
_SapEgQosPlcyPStatCustId_Object = MibTableColumn
sapEgQosPlcyPStatCustId = _SapEgQosPlcyPStatCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 3),
    _SapEgQosPlcyPStatCustId_Type()
)
sapEgQosPlcyPStatCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatCustId.setStatus("obsolete")
_SapEgQosPlcyPStatMode_Type = TmnxEgrPolicerStatMode
_SapEgQosPlcyPStatMode_Object = MibTableColumn
sapEgQosPlcyPStatMode = _SapEgQosPlcyPStatMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 4),
    _SapEgQosPlcyPStatMode_Type()
)
sapEgQosPlcyPStatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatMode.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfPkts_Type = Counter64
_SapEgQosPlcyPStatOffInProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfPkts = _SapEgQosPlcyPStatOffInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 5),
    _SapEgQosPlcyPStatOffInProfPkts_Type()
)
sapEgQosPlcyPStatOffInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfPktsL_Type = Counter32
_SapEgQosPlcyPStatOffInProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfPktsL = _SapEgQosPlcyPStatOffInProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 6),
    _SapEgQosPlcyPStatOffInProfPktsL_Type()
)
sapEgQosPlcyPStatOffInProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfPktsH_Type = Counter32
_SapEgQosPlcyPStatOffInProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfPktsH = _SapEgQosPlcyPStatOffInProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 7),
    _SapEgQosPlcyPStatOffInProfPktsH_Type()
)
sapEgQosPlcyPStatOffInProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfPkts_Type = Counter64
_SapEgQosPlcyPStatFwdInProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfPkts = _SapEgQosPlcyPStatFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 8),
    _SapEgQosPlcyPStatFwdInProfPkts_Type()
)
sapEgQosPlcyPStatFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfPktsL_Type = Counter32
_SapEgQosPlcyPStatFwdInProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfPktsL = _SapEgQosPlcyPStatFwdInProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 9),
    _SapEgQosPlcyPStatFwdInProfPktsL_Type()
)
sapEgQosPlcyPStatFwdInProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfPktsH_Type = Counter32
_SapEgQosPlcyPStatFwdInProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfPktsH = _SapEgQosPlcyPStatFwdInProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 10),
    _SapEgQosPlcyPStatFwdInProfPktsH_Type()
)
sapEgQosPlcyPStatFwdInProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfPkts_Type = Counter64
_SapEgQosPlcyPStatDrpInProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfPkts = _SapEgQosPlcyPStatDrpInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 11),
    _SapEgQosPlcyPStatDrpInProfPkts_Type()
)
sapEgQosPlcyPStatDrpInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfPktsL_Type = Counter32
_SapEgQosPlcyPStatDrpInProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfPktsL = _SapEgQosPlcyPStatDrpInProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 12),
    _SapEgQosPlcyPStatDrpInProfPktsL_Type()
)
sapEgQosPlcyPStatDrpInProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfPktsH_Type = Counter32
_SapEgQosPlcyPStatDrpInProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfPktsH = _SapEgQosPlcyPStatDrpInProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 13),
    _SapEgQosPlcyPStatDrpInProfPktsH_Type()
)
sapEgQosPlcyPStatDrpInProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfPkts_Type = Counter64
_SapEgQosPlcyPStatOffOutProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfPkts = _SapEgQosPlcyPStatOffOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 14),
    _SapEgQosPlcyPStatOffOutProfPkts_Type()
)
sapEgQosPlcyPStatOffOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfPktsL_Type = Counter32
_SapEgQosPlcyPStatOffOutProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfPktsL = _SapEgQosPlcyPStatOffOutProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 15),
    _SapEgQosPlcyPStatOffOutProfPktsL_Type()
)
sapEgQosPlcyPStatOffOutProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfPktsH_Type = Counter32
_SapEgQosPlcyPStatOffOutProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfPktsH = _SapEgQosPlcyPStatOffOutProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 16),
    _SapEgQosPlcyPStatOffOutProfPktsH_Type()
)
sapEgQosPlcyPStatOffOutProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfPkts_Type = Counter64
_SapEgQosPlcyPStatFwdOutProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfPkts = _SapEgQosPlcyPStatFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 17),
    _SapEgQosPlcyPStatFwdOutProfPkts_Type()
)
sapEgQosPlcyPStatFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfPktsL_Type = Counter32
_SapEgQosPlcyPStatFwdOutProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfPktsL = _SapEgQosPlcyPStatFwdOutProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 18),
    _SapEgQosPlcyPStatFwdOutProfPktsL_Type()
)
sapEgQosPlcyPStatFwdOutProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfPktsH_Type = Counter32
_SapEgQosPlcyPStatFwdOutProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfPktsH = _SapEgQosPlcyPStatFwdOutProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 19),
    _SapEgQosPlcyPStatFwdOutProfPktsH_Type()
)
sapEgQosPlcyPStatFwdOutProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfPkts_Type = Counter64
_SapEgQosPlcyPStatDrpOutProfPkts_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfPkts = _SapEgQosPlcyPStatDrpOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 20),
    _SapEgQosPlcyPStatDrpOutProfPkts_Type()
)
sapEgQosPlcyPStatDrpOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfPkts.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfPktsL_Type = Counter32
_SapEgQosPlcyPStatDrpOutProfPktsL_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfPktsL = _SapEgQosPlcyPStatDrpOutProfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 21),
    _SapEgQosPlcyPStatDrpOutProfPktsL_Type()
)
sapEgQosPlcyPStatDrpOutProfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfPktsL.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfPktsH_Type = Counter32
_SapEgQosPlcyPStatDrpOutProfPktsH_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfPktsH = _SapEgQosPlcyPStatDrpOutProfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 22),
    _SapEgQosPlcyPStatDrpOutProfPktsH_Type()
)
sapEgQosPlcyPStatDrpOutProfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfPktsH.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfOcts_Type = Counter64
_SapEgQosPlcyPStatOffInProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfOcts = _SapEgQosPlcyPStatOffInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 23),
    _SapEgQosPlcyPStatOffInProfOcts_Type()
)
sapEgQosPlcyPStatOffInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfOctsL_Type = Counter32
_SapEgQosPlcyPStatOffInProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfOctsL = _SapEgQosPlcyPStatOffInProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 24),
    _SapEgQosPlcyPStatOffInProfOctsL_Type()
)
sapEgQosPlcyPStatOffInProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatOffInProfOctsH_Type = Counter32
_SapEgQosPlcyPStatOffInProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatOffInProfOctsH = _SapEgQosPlcyPStatOffInProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 25),
    _SapEgQosPlcyPStatOffInProfOctsH_Type()
)
sapEgQosPlcyPStatOffInProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffInProfOctsH.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfOcts_Type = Counter64
_SapEgQosPlcyPStatFwdInProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfOcts = _SapEgQosPlcyPStatFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 26),
    _SapEgQosPlcyPStatFwdInProfOcts_Type()
)
sapEgQosPlcyPStatFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfOctsL_Type = Counter32
_SapEgQosPlcyPStatFwdInProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfOctsL = _SapEgQosPlcyPStatFwdInProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 27),
    _SapEgQosPlcyPStatFwdInProfOctsL_Type()
)
sapEgQosPlcyPStatFwdInProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatFwdInProfOctsH_Type = Counter32
_SapEgQosPlcyPStatFwdInProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatFwdInProfOctsH = _SapEgQosPlcyPStatFwdInProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 28),
    _SapEgQosPlcyPStatFwdInProfOctsH_Type()
)
sapEgQosPlcyPStatFwdInProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdInProfOctsH.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfOcts_Type = Counter64
_SapEgQosPlcyPStatDrpInProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfOcts = _SapEgQosPlcyPStatDrpInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 29),
    _SapEgQosPlcyPStatDrpInProfOcts_Type()
)
sapEgQosPlcyPStatDrpInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfOctsL_Type = Counter32
_SapEgQosPlcyPStatDrpInProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfOctsL = _SapEgQosPlcyPStatDrpInProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 30),
    _SapEgQosPlcyPStatDrpInProfOctsL_Type()
)
sapEgQosPlcyPStatDrpInProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatDrpInProfOctsH_Type = Counter32
_SapEgQosPlcyPStatDrpInProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatDrpInProfOctsH = _SapEgQosPlcyPStatDrpInProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 31),
    _SapEgQosPlcyPStatDrpInProfOctsH_Type()
)
sapEgQosPlcyPStatDrpInProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpInProfOctsH.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfOcts_Type = Counter64
_SapEgQosPlcyPStatOffOutProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfOcts = _SapEgQosPlcyPStatOffOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 32),
    _SapEgQosPlcyPStatOffOutProfOcts_Type()
)
sapEgQosPlcyPStatOffOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfOctsL_Type = Counter32
_SapEgQosPlcyPStatOffOutProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfOctsL = _SapEgQosPlcyPStatOffOutProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 33),
    _SapEgQosPlcyPStatOffOutProfOctsL_Type()
)
sapEgQosPlcyPStatOffOutProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatOffOutProfOctsH_Type = Counter32
_SapEgQosPlcyPStatOffOutProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatOffOutProfOctsH = _SapEgQosPlcyPStatOffOutProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 34),
    _SapEgQosPlcyPStatOffOutProfOctsH_Type()
)
sapEgQosPlcyPStatOffOutProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatOffOutProfOctsH.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfOcts_Type = Counter64
_SapEgQosPlcyPStatFwdOutProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfOcts = _SapEgQosPlcyPStatFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 35),
    _SapEgQosPlcyPStatFwdOutProfOcts_Type()
)
sapEgQosPlcyPStatFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfOctsL_Type = Counter32
_SapEgQosPlcyPStatFwdOutProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfOctsL = _SapEgQosPlcyPStatFwdOutProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 36),
    _SapEgQosPlcyPStatFwdOutProfOctsL_Type()
)
sapEgQosPlcyPStatFwdOutProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatFwdOutProfOctsH_Type = Counter32
_SapEgQosPlcyPStatFwdOutProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatFwdOutProfOctsH = _SapEgQosPlcyPStatFwdOutProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 37),
    _SapEgQosPlcyPStatFwdOutProfOctsH_Type()
)
sapEgQosPlcyPStatFwdOutProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatFwdOutProfOctsH.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfOcts_Type = Counter64
_SapEgQosPlcyPStatDrpOutProfOcts_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfOcts = _SapEgQosPlcyPStatDrpOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 38),
    _SapEgQosPlcyPStatDrpOutProfOcts_Type()
)
sapEgQosPlcyPStatDrpOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfOcts.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfOctsL_Type = Counter32
_SapEgQosPlcyPStatDrpOutProfOctsL_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfOctsL = _SapEgQosPlcyPStatDrpOutProfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 39),
    _SapEgQosPlcyPStatDrpOutProfOctsL_Type()
)
sapEgQosPlcyPStatDrpOutProfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfOctsL.setStatus("obsolete")
_SapEgQosPlcyPStatDrpOutProfOctsH_Type = Counter32
_SapEgQosPlcyPStatDrpOutProfOctsH_Object = MibTableColumn
sapEgQosPlcyPStatDrpOutProfOctsH = _SapEgQosPlcyPStatDrpOutProfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 99, 1, 40),
    _SapEgQosPlcyPStatDrpOutProfOctsH_Type()
)
sapEgQosPlcyPStatDrpOutProfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgQosPlcyPStatDrpOutProfOctsH.setStatus("obsolete")
_TmnxSapNotifyObjs_ObjectIdentity = ObjectIdentity
tmnxSapNotifyObjs = _TmnxSapNotifyObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100)
)
_SapNotifyPortId_Type = TmnxPortID
_SapNotifyPortId_Object = MibScalar
sapNotifyPortId = _SapNotifyPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 1),
    _SapNotifyPortId_Type()
)
sapNotifyPortId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyPortId.setStatus("current")
_MsapStatus_Type = ConfigStatus
_MsapStatus_Object = MibScalar
msapStatus = _MsapStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 2),
    _MsapStatus_Type()
)
msapStatus.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    msapStatus.setStatus("current")
_SvcManagedSapCreationError_Type = DisplayString
_SvcManagedSapCreationError_Object = MibScalar
svcManagedSapCreationError = _SvcManagedSapCreationError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 3),
    _SvcManagedSapCreationError_Type()
)
svcManagedSapCreationError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcManagedSapCreationError.setStatus("current")
_SapTlsNotifyMacAddr_Type = MacAddress
_SapTlsNotifyMacAddr_Object = MibScalar
sapTlsNotifyMacAddr = _SapTlsNotifyMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 4),
    _SapTlsNotifyMacAddr_Type()
)
sapTlsNotifyMacAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTlsNotifyMacAddr.setStatus("current")
_SapBGPPeeringHostIpAddrType_Type = InetAddressType
_SapBGPPeeringHostIpAddrType_Object = MibScalar
sapBGPPeeringHostIpAddrType = _SapBGPPeeringHostIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 5),
    _SapBGPPeeringHostIpAddrType_Type()
)
sapBGPPeeringHostIpAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapBGPPeeringHostIpAddrType.setStatus("current")


class _SapBGPPeeringHostIpAddr_Type(InetAddress):
    """Custom type sapBGPPeeringHostIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapBGPPeeringHostIpAddr_Type.__name__ = "InetAddress"
_SapBGPPeeringHostIpAddr_Object = MibScalar
sapBGPPeeringHostIpAddr = _SapBGPPeeringHostIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 6),
    _SapBGPPeeringHostIpAddr_Type()
)
sapBGPPeeringHostIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapBGPPeeringHostIpAddr.setStatus("current")
_SapBGPPeeringNotifDescription_Type = DisplayString
_SapBGPPeeringNotifDescription_Object = MibScalar
sapBGPPeeringNotifDescription = _SapBGPPeeringNotifDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 7),
    _SapBGPPeeringNotifDescription_Type()
)
sapBGPPeeringNotifDescription.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapBGPPeeringNotifDescription.setStatus("current")
_SapBGPPeeringAttrDiscarded_Type = TruthValue
_SapBGPPeeringAttrDiscarded_Object = MibScalar
sapBGPPeeringAttrDiscarded = _SapBGPPeeringAttrDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 8),
    _SapBGPPeeringAttrDiscarded_Type()
)
sapBGPPeeringAttrDiscarded.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapBGPPeeringAttrDiscarded.setStatus("current")
_SapBGPPeeringVRtrID_Type = TmnxVRtrID
_SapBGPPeeringVRtrID_Object = MibScalar
sapBGPPeeringVRtrID = _SapBGPPeeringVRtrID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 9),
    _SapBGPPeeringVRtrID_Type()
)
sapBGPPeeringVRtrID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapBGPPeeringVRtrID.setStatus("current")
_SapTunnelNotifyName_Type = TNamedItem
_SapTunnelNotifyName_Object = MibScalar
sapTunnelNotifyName = _SapTunnelNotifyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 10),
    _SapTunnelNotifyName_Type()
)
sapTunnelNotifyName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyName.setStatus("current")
_SapTunnelNotifyReason_Type = DisplayString
_SapTunnelNotifyReason_Object = MibScalar
sapTunnelNotifyReason = _SapTunnelNotifyReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 11),
    _SapTunnelNotifyReason_Type()
)
sapTunnelNotifyReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyReason.setStatus("current")
_SapTunnelNotifyState_Type = ServiceOperStatus
_SapTunnelNotifyState_Object = MibScalar
sapTunnelNotifyState = _SapTunnelNotifyState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 12),
    _SapTunnelNotifyState_Type()
)
sapTunnelNotifyState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyState.setStatus("current")
_SapNotifyReason_Type = DisplayString
_SapNotifyReason_Object = MibScalar
sapNotifyReason = _SapNotifyReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 13),
    _SapNotifyReason_Type()
)
sapNotifyReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyReason.setStatus("current")
_SapNotifyName_Type = TNamedItem
_SapNotifyName_Object = MibScalar
sapNotifyName = _SapNotifyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 14),
    _SapNotifyName_Type()
)
sapNotifyName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyName.setStatus("current")


class _SapPppNcpFailureProtocol_Type(Integer32):
    """Custom type sapPppNcpFailureProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipcp", 1),
          ("ipv6cp", 2))
    )


_SapPppNcpFailureProtocol_Type.__name__ = "Integer32"
_SapPppNcpFailureProtocol_Object = MibScalar
sapPppNcpFailureProtocol = _SapPppNcpFailureProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 15),
    _SapPppNcpFailureProtocol_Type()
)
sapPppNcpFailureProtocol.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapPppNcpFailureProtocol.setStatus("current")
_SapIpipeCeIpAddrType_Type = InetAddressType
_SapIpipeCeIpAddrType_Object = MibScalar
sapIpipeCeIpAddrType = _SapIpipeCeIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 16),
    _SapIpipeCeIpAddrType_Type()
)
sapIpipeCeIpAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapIpipeCeIpAddrType.setStatus("current")


class _SapIpipeCeIpAddress_Type(InetAddress):
    """Custom type sapIpipeCeIpAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapIpipeCeIpAddress_Type.__name__ = "InetAddress"
_SapIpipeCeIpAddress_Object = MibScalar
sapIpipeCeIpAddress = _SapIpipeCeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 17),
    _SapIpipeCeIpAddress_Type()
)
sapIpipeCeIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapIpipeCeIpAddress.setStatus("current")
_SapNotifyEncapValue_Type = TmnxEncapVal
_SapNotifyEncapValue_Object = MibScalar
sapNotifyEncapValue = _SapNotifyEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 18),
    _SapNotifyEncapValue_Type()
)
sapNotifyEncapValue.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyEncapValue.setStatus("current")
_SapTunnelNotifyConfigIpMtu_Type = Unsigned32
_SapTunnelNotifyConfigIpMtu_Object = MibScalar
sapTunnelNotifyConfigIpMtu = _SapTunnelNotifyConfigIpMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 19),
    _SapTunnelNotifyConfigIpMtu_Type()
)
sapTunnelNotifyConfigIpMtu.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyConfigIpMtu.setStatus("current")
_SapTunnelNotifyEncapOverhead_Type = Unsigned32
_SapTunnelNotifyEncapOverhead_Object = MibScalar
sapTunnelNotifyEncapOverhead = _SapTunnelNotifyEncapOverhead_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 20),
    _SapTunnelNotifyEncapOverhead_Type()
)
sapTunnelNotifyEncapOverhead.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyEncapOverhead.setStatus("current")
_SapTunnelNotifyConfigEncapIpMtu_Type = Unsigned32
_SapTunnelNotifyConfigEncapIpMtu_Object = MibScalar
sapTunnelNotifyConfigEncapIpMtu = _SapTunnelNotifyConfigEncapIpMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 21),
    _SapTunnelNotifyConfigEncapIpMtu_Type()
)
sapTunnelNotifyConfigEncapIpMtu.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapTunnelNotifyConfigEncapIpMtu.setStatus("current")
_SapRipListenerHostIpAddrType_Type = InetAddressType
_SapRipListenerHostIpAddrType_Object = MibScalar
sapRipListenerHostIpAddrType = _SapRipListenerHostIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 22),
    _SapRipListenerHostIpAddrType_Type()
)
sapRipListenerHostIpAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapRipListenerHostIpAddrType.setStatus("current")


class _SapRipListenerHostIpAddr_Type(InetAddress):
    """Custom type sapRipListenerHostIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SapRipListenerHostIpAddr_Type.__name__ = "InetAddress"
_SapRipListenerHostIpAddr_Object = MibScalar
sapRipListenerHostIpAddr = _SapRipListenerHostIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 23),
    _SapRipListenerHostIpAddr_Type()
)
sapRipListenerHostIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapRipListenerHostIpAddr.setStatus("current")
_SapRipListenerVRtrID_Type = TmnxVRtrID
_SapRipListenerVRtrID_Object = MibScalar
sapRipListenerVRtrID = _SapRipListenerVRtrID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 24),
    _SapRipListenerVRtrID_Type()
)
sapRipListenerVRtrID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapRipListenerVRtrID.setStatus("current")
_SapRipListenerNotifDescription_Type = DisplayString
_SapRipListenerNotifDescription_Object = MibScalar
sapRipListenerNotifDescription = _SapRipListenerNotifDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 25),
    _SapRipListenerNotifDescription_Type()
)
sapRipListenerNotifDescription.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapRipListenerNotifDescription.setStatus("current")
_SapNotifyIpAddrType_Type = InetAddressType
_SapNotifyIpAddrType_Object = MibScalar
sapNotifyIpAddrType = _SapNotifyIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 26),
    _SapNotifyIpAddrType_Type()
)
sapNotifyIpAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyIpAddrType.setStatus("current")


class _SapNotifyIpAddr_Type(InetAddress):
    """Custom type sapNotifyIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapNotifyIpAddr_Type.__name__ = "InetAddress"
_SapNotifyIpAddr_Object = MibScalar
sapNotifyIpAddr = _SapNotifyIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 27),
    _SapNotifyIpAddr_Type()
)
sapNotifyIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyIpAddr.setStatus("current")
_SapNotifyIfName_Type = TNamedItem
_SapNotifyIfName_Object = MibScalar
sapNotifyIfName = _SapNotifyIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 28),
    _SapNotifyIfName_Type()
)
sapNotifyIfName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyIfName.setStatus("current")


class _SapNotifyPortState_Type(Integer32):
    """Custom type sapNotifyPortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("other", 3))
    )


_SapNotifyPortState_Type.__name__ = "Integer32"
_SapNotifyPortState_Object = MibScalar
sapNotifyPortState = _SapNotifyPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 100, 29),
    _SapNotifyPortState_Type()
)
sapNotifyPortState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapNotifyPortState.setStatus("current")
_SapTmplTblLastChanged_Type = TimeStamp
_SapTmplTblLastChanged_Object = MibScalar
sapTmplTblLastChanged = _SapTmplTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 101),
    _SapTmplTblLastChanged_Type()
)
sapTmplTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplTblLastChanged.setStatus("current")
_SapTmplTable_Object = MibTable
sapTmplTable = _SapTmplTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102)
)
if mibBuilder.loadTexts:
    sapTmplTable.setStatus("current")
_SapTmplEntry_Object = MibTableRow
sapTmplEntry = _SapTmplEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1)
)
sapTmplEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "sapTmplName"),
)
if mibBuilder.loadTexts:
    sapTmplEntry.setStatus("current")
_SapTmplName_Type = TNamedItem
_SapTmplName_Object = MibTableColumn
sapTmplName = _SapTmplName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 1),
    _SapTmplName_Type()
)
sapTmplName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTmplName.setStatus("current")
_SapTmplRowStatus_Type = RowStatus
_SapTmplRowStatus_Object = MibTableColumn
sapTmplRowStatus = _SapTmplRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 2),
    _SapTmplRowStatus_Type()
)
sapTmplRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplRowStatus.setStatus("current")
_SapTmplLastChanged_Type = TimeStamp
_SapTmplLastChanged_Object = MibTableColumn
sapTmplLastChanged = _SapTmplLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 3),
    _SapTmplLastChanged_Type()
)
sapTmplLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplLastChanged.setStatus("current")
_SapTmplSapCount_Type = Unsigned32
_SapTmplSapCount_Object = MibTableColumn
sapTmplSapCount = _SapTmplSapCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 4),
    _SapTmplSapCount_Type()
)
sapTmplSapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplSapCount.setStatus("current")
_SapTmplType_Type = ServType
_SapTmplType_Object = MibTableColumn
sapTmplType = _SapTmplType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 5),
    _SapTmplType_Type()
)
sapTmplType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplType.setStatus("current")


class _SapTmplIngressQosPolicyId_Type(TTmplPolicyID):
    """Custom type sapTmplIngressQosPolicyId based on TTmplPolicyID"""
    defaultValue = 0


_SapTmplIngressQosPolicyId_Type.__name__ = "TTmplPolicyID"
_SapTmplIngressQosPolicyId_Object = MibTableColumn
sapTmplIngressQosPolicyId = _SapTmplIngressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 6),
    _SapTmplIngressQosPolicyId_Type()
)
sapTmplIngressQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressQosPolicyId.setStatus("current")


class _SapTmplIngressMacFilterId_Type(TFilterID):
    """Custom type sapTmplIngressMacFilterId based on TFilterID"""
    defaultValue = 0


_SapTmplIngressMacFilterId_Type.__name__ = "TFilterID"
_SapTmplIngressMacFilterId_Object = MibTableColumn
sapTmplIngressMacFilterId = _SapTmplIngressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 7),
    _SapTmplIngressMacFilterId_Type()
)
sapTmplIngressMacFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressMacFilterId.setStatus("current")


class _SapTmplIngressIpFilterId_Type(TFilterID):
    """Custom type sapTmplIngressIpFilterId based on TFilterID"""
    defaultValue = 0


_SapTmplIngressIpFilterId_Type.__name__ = "TFilterID"
_SapTmplIngressIpFilterId_Object = MibTableColumn
sapTmplIngressIpFilterId = _SapTmplIngressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 8),
    _SapTmplIngressIpFilterId_Type()
)
sapTmplIngressIpFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressIpFilterId.setStatus("current")


class _SapTmplEgressQosPolicyId_Type(TTmplPolicyID):
    """Custom type sapTmplEgressQosPolicyId based on TTmplPolicyID"""
    defaultValue = 0


_SapTmplEgressQosPolicyId_Type.__name__ = "TTmplPolicyID"
_SapTmplEgressQosPolicyId_Object = MibTableColumn
sapTmplEgressQosPolicyId = _SapTmplEgressQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 9),
    _SapTmplEgressQosPolicyId_Type()
)
sapTmplEgressQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressQosPolicyId.setStatus("current")


class _SapTmplEgressMacFilterId_Type(TFilterID):
    """Custom type sapTmplEgressMacFilterId based on TFilterID"""
    defaultValue = 0


_SapTmplEgressMacFilterId_Type.__name__ = "TFilterID"
_SapTmplEgressMacFilterId_Object = MibTableColumn
sapTmplEgressMacFilterId = _SapTmplEgressMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 10),
    _SapTmplEgressMacFilterId_Type()
)
sapTmplEgressMacFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressMacFilterId.setStatus("current")


class _SapTmplEgressIpFilterId_Type(TFilterID):
    """Custom type sapTmplEgressIpFilterId based on TFilterID"""
    defaultValue = 0


_SapTmplEgressIpFilterId_Type.__name__ = "TFilterID"
_SapTmplEgressIpFilterId_Object = MibTableColumn
sapTmplEgressIpFilterId = _SapTmplEgressIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 11),
    _SapTmplEgressIpFilterId_Type()
)
sapTmplEgressIpFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressIpFilterId.setStatus("current")


class _SapTmplCollectAcctStats_Type(TruthValue):
    """Custom type sapTmplCollectAcctStats based on TruthValue"""
    defaultValue = 2


_SapTmplCollectAcctStats_Type.__name__ = "TruthValue"
_SapTmplCollectAcctStats_Object = MibTableColumn
sapTmplCollectAcctStats = _SapTmplCollectAcctStats_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 12),
    _SapTmplCollectAcctStats_Type()
)
sapTmplCollectAcctStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplCollectAcctStats.setStatus("current")


class _SapTmplIngressQosSchedulerPolicy_Type(ServObjName):
    """Custom type sapTmplIngressQosSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapTmplIngressQosSchedulerPolicy_Type.__name__ = "ServObjName"
_SapTmplIngressQosSchedulerPolicy_Object = MibTableColumn
sapTmplIngressQosSchedulerPolicy = _SapTmplIngressQosSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 13),
    _SapTmplIngressQosSchedulerPolicy_Type()
)
sapTmplIngressQosSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressQosSchedulerPolicy.setStatus("current")


class _SapTmplEgressQosSchedulerPolicy_Type(ServObjName):
    """Custom type sapTmplEgressQosSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapTmplEgressQosSchedulerPolicy_Type.__name__ = "ServObjName"
_SapTmplEgressQosSchedulerPolicy_Object = MibTableColumn
sapTmplEgressQosSchedulerPolicy = _SapTmplEgressQosSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 14),
    _SapTmplEgressQosSchedulerPolicy_Type()
)
sapTmplEgressQosSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressQosSchedulerPolicy.setStatus("current")


class _SapTmplIngressSharedQueuePolicy_Type(ServObjName):
    """Custom type sapTmplIngressSharedQueuePolicy based on ServObjName"""
    defaultValue = OctetString("")


_SapTmplIngressSharedQueuePolicy_Type.__name__ = "ServObjName"
_SapTmplIngressSharedQueuePolicy_Object = MibTableColumn
sapTmplIngressSharedQueuePolicy = _SapTmplIngressSharedQueuePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 15),
    _SapTmplIngressSharedQueuePolicy_Type()
)
sapTmplIngressSharedQueuePolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressSharedQueuePolicy.setStatus("current")


class _SapTmplIngressMatchQinQDot1PBits_Type(Integer32):
    """Custom type sapTmplIngressMatchQinQDot1PBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("top", 2),
          ("bottom", 3))
    )


_SapTmplIngressMatchQinQDot1PBits_Type.__name__ = "Integer32"
_SapTmplIngressMatchQinQDot1PBits_Object = MibTableColumn
sapTmplIngressMatchQinQDot1PBits = _SapTmplIngressMatchQinQDot1PBits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 16),
    _SapTmplIngressMatchQinQDot1PBits_Type()
)
sapTmplIngressMatchQinQDot1PBits.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressMatchQinQDot1PBits.setStatus("current")


class _SapTmplIngressIpv6FilterId_Type(TFilterID):
    """Custom type sapTmplIngressIpv6FilterId based on TFilterID"""
    defaultValue = 0


_SapTmplIngressIpv6FilterId_Type.__name__ = "TFilterID"
_SapTmplIngressIpv6FilterId_Object = MibTableColumn
sapTmplIngressIpv6FilterId = _SapTmplIngressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 17),
    _SapTmplIngressIpv6FilterId_Type()
)
sapTmplIngressIpv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressIpv6FilterId.setStatus("current")


class _SapTmplEgressIpv6FilterId_Type(TFilterID):
    """Custom type sapTmplEgressIpv6FilterId based on TFilterID"""
    defaultValue = 0


_SapTmplEgressIpv6FilterId_Type.__name__ = "TFilterID"
_SapTmplEgressIpv6FilterId_Object = MibTableColumn
sapTmplEgressIpv6FilterId = _SapTmplEgressIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 18),
    _SapTmplEgressIpv6FilterId_Type()
)
sapTmplEgressIpv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressIpv6FilterId.setStatus("current")


class _SapTmplIngUseMultipointShared_Type(TruthValue):
    """Custom type sapTmplIngUseMultipointShared based on TruthValue"""
    defaultValue = 2


_SapTmplIngUseMultipointShared_Type.__name__ = "TruthValue"
_SapTmplIngUseMultipointShared_Object = MibTableColumn
sapTmplIngUseMultipointShared = _SapTmplIngUseMultipointShared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 19),
    _SapTmplIngUseMultipointShared_Type()
)
sapTmplIngUseMultipointShared.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngUseMultipointShared.setStatus("current")


class _SapTmplEgressQinQMarkTopOnly_Type(TruthValue):
    """Custom type sapTmplEgressQinQMarkTopOnly based on TruthValue"""
    defaultValue = 2


_SapTmplEgressQinQMarkTopOnly_Type.__name__ = "TruthValue"
_SapTmplEgressQinQMarkTopOnly_Object = MibTableColumn
sapTmplEgressQinQMarkTopOnly = _SapTmplEgressQinQMarkTopOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 20),
    _SapTmplEgressQinQMarkTopOnly_Type()
)
sapTmplEgressQinQMarkTopOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressQinQMarkTopOnly.setStatus("current")


class _SapTmplEgressAggRateLimit_Type(TPortSchedulerAggRateLimitPIR):
    """Custom type sapTmplEgressAggRateLimit based on TPortSchedulerAggRateLimitPIR"""
    defaultValue = -1


_SapTmplEgressAggRateLimit_Type.__name__ = "TPortSchedulerAggRateLimitPIR"
_SapTmplEgressAggRateLimit_Object = MibTableColumn
sapTmplEgressAggRateLimit = _SapTmplEgressAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 21),
    _SapTmplEgressAggRateLimit_Type()
)
sapTmplEgressAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapTmplEgressAggRateLimit.setUnits("kilobps")


class _SapTmplEgressFrameBasedAcctg_Type(TruthValue):
    """Custom type sapTmplEgressFrameBasedAcctg based on TruthValue"""
    defaultValue = 2


_SapTmplEgressFrameBasedAcctg_Type.__name__ = "TruthValue"
_SapTmplEgressFrameBasedAcctg_Object = MibTableColumn
sapTmplEgressFrameBasedAcctg = _SapTmplEgressFrameBasedAcctg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 22),
    _SapTmplEgressFrameBasedAcctg_Type()
)
sapTmplEgressFrameBasedAcctg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressFrameBasedAcctg.setStatus("current")


class _SapTmplIngressAggRateLimit_Type(TPortSchedulerPIR):
    """Custom type sapTmplIngressAggRateLimit based on TPortSchedulerPIR"""
    defaultValue = -1


_SapTmplIngressAggRateLimit_Type.__name__ = "TPortSchedulerPIR"
_SapTmplIngressAggRateLimit_Object = MibTableColumn
sapTmplIngressAggRateLimit = _SapTmplIngressAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 23),
    _SapTmplIngressAggRateLimit_Type()
)
sapTmplIngressAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapTmplIngressAggRateLimit.setUnits("kilobps")


class _SapTmplIngPolicerPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTmplIngPolicerPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapTmplIngPolicerPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTmplIngPolicerPolicy_Object = MibTableColumn
sapTmplIngPolicerPolicy = _SapTmplIngPolicerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 24),
    _SapTmplIngPolicerPolicy_Type()
)
sapTmplIngPolicerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngPolicerPolicy.setStatus("current")


class _SapTmplEgrPolicerPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTmplEgrPolicerPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapTmplEgrPolicerPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTmplEgrPolicerPolicy_Object = MibTableColumn
sapTmplEgrPolicerPolicy = _SapTmplEgrPolicerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 25),
    _SapTmplEgrPolicerPolicy_Type()
)
sapTmplEgrPolicerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgrPolicerPolicy.setStatus("current")


class _SapTmplDot1agCfmMip_Type(TruthValue):
    """Custom type sapTmplDot1agCfmMip based on TruthValue"""
    defaultValue = 2


_SapTmplDot1agCfmMip_Type.__name__ = "TruthValue"
_SapTmplDot1agCfmMip_Object = MibTableColumn
sapTmplDot1agCfmMip = _SapTmplDot1agCfmMip_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 26),
    _SapTmplDot1agCfmMip_Type()
)
sapTmplDot1agCfmMip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplDot1agCfmMip.setStatus("current")


class _SapTmplCpmProtPolicyId_Type(TCpmProtPolicyIDOrDefault):
    """Custom type sapTmplCpmProtPolicyId based on TCpmProtPolicyIDOrDefault"""
    defaultValue = -1


_SapTmplCpmProtPolicyId_Type.__name__ = "TCpmProtPolicyIDOrDefault"
_SapTmplCpmProtPolicyId_Object = MibTableColumn
sapTmplCpmProtPolicyId = _SapTmplCpmProtPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 27),
    _SapTmplCpmProtPolicyId_Type()
)
sapTmplCpmProtPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplCpmProtPolicyId.setStatus("current")


class _SapTmplCpmProtMonitorMac_Type(TruthValue):
    """Custom type sapTmplCpmProtMonitorMac based on TruthValue"""
    defaultValue = 2


_SapTmplCpmProtMonitorMac_Type.__name__ = "TruthValue"
_SapTmplCpmProtMonitorMac_Object = MibTableColumn
sapTmplCpmProtMonitorMac = _SapTmplCpmProtMonitorMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 28),
    _SapTmplCpmProtMonitorMac_Type()
)
sapTmplCpmProtMonitorMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplCpmProtMonitorMac.setStatus("current")


class _SapTmplCpmProtEthCfmMonitorFlags_Type(Bits):
    """Custom type sapTmplCpmProtEthCfmMonitorFlags based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("ethCfmMonitor", 0),
          ("ethCfmMonitorAggregate", 1),
          ("ethCfmMonitorCommittedAccessRate", 2))
    )

_SapTmplCpmProtEthCfmMonitorFlags_Type.__name__ = "Bits"
_SapTmplCpmProtEthCfmMonitorFlags_Object = MibTableColumn
sapTmplCpmProtEthCfmMonitorFlags = _SapTmplCpmProtEthCfmMonitorFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 29),
    _SapTmplCpmProtEthCfmMonitorFlags_Type()
)
sapTmplCpmProtEthCfmMonitorFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplCpmProtEthCfmMonitorFlags.setStatus("current")


class _SapTmplEgrAggRateLUB_Type(TruthValue):
    """Custom type sapTmplEgrAggRateLUB based on TruthValue"""
    defaultValue = 2


_SapTmplEgrAggRateLUB_Type.__name__ = "TruthValue"
_SapTmplEgrAggRateLUB_Object = MibTableColumn
sapTmplEgrAggRateLUB = _SapTmplEgrAggRateLUB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 30),
    _SapTmplEgrAggRateLUB_Type()
)
sapTmplEgrAggRateLUB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgrAggRateLUB.setStatus("current")


class _SapTmplEthCfmSquelchIngress_Type(Bits):
    """Custom type sapTmplEthCfmSquelchIngress based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("level0", 0),
          ("level1", 1),
          ("level2", 2),
          ("level3", 3),
          ("level4", 4),
          ("level5", 5),
          ("level6", 6),
          ("level7", 7))
    )

_SapTmplEthCfmSquelchIngress_Type.__name__ = "Bits"
_SapTmplEthCfmSquelchIngress_Object = MibTableColumn
sapTmplEthCfmSquelchIngress = _SapTmplEthCfmSquelchIngress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 31),
    _SapTmplEthCfmSquelchIngress_Type()
)
sapTmplEthCfmSquelchIngress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEthCfmSquelchIngress.setStatus("current")


class _SapTmplEgrAggRateLimitHi_Type(TmnxQosRateHigh32):
    """Custom type sapTmplEgrAggRateLimitHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapTmplEgrAggRateLimitHi_Type.__name__ = "TmnxQosRateHigh32"
_SapTmplEgrAggRateLimitHi_Object = MibTableColumn
sapTmplEgrAggRateLimitHi = _SapTmplEgrAggRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 33),
    _SapTmplEgrAggRateLimitHi_Type()
)
sapTmplEgrAggRateLimitHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgrAggRateLimitHi.setStatus("current")
if mibBuilder.loadTexts:
    sapTmplEgrAggRateLimitHi.setUnits("kilobps")


class _SapTmplEgrAggRateLimit_Type(TmnxQosRateLow32):
    """Custom type sapTmplEgrAggRateLimit based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapTmplEgrAggRateLimit_Type.__name__ = "TmnxQosRateLow32"
_SapTmplEgrAggRateLimit_Object = MibTableColumn
sapTmplEgrAggRateLimit = _SapTmplEgrAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 34),
    _SapTmplEgrAggRateLimit_Type()
)
sapTmplEgrAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgrAggRateLimit.setStatus("current")
if mibBuilder.loadTexts:
    sapTmplEgrAggRateLimit.setUnits("kilobps")


class _SapTmplDCpuProtPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapTmplDCpuProtPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapTmplDCpuProtPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapTmplDCpuProtPolicy_Object = MibTableColumn
sapTmplDCpuProtPolicy = _SapTmplDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 35),
    _SapTmplDCpuProtPolicy_Type()
)
sapTmplDCpuProtPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplDCpuProtPolicy.setStatus("current")


class _SapTmplIngressQosPolicyName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplIngressQosPolicyName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplIngressQosPolicyName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplIngressQosPolicyName_Object = MibTableColumn
sapTmplIngressQosPolicyName = _SapTmplIngressQosPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 36),
    _SapTmplIngressQosPolicyName_Type()
)
sapTmplIngressQosPolicyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressQosPolicyName.setStatus("current")


class _SapTmplEgressQosPolicyName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplEgressQosPolicyName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplEgressQosPolicyName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplEgressQosPolicyName_Object = MibTableColumn
sapTmplEgressQosPolicyName = _SapTmplEgressQosPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 37),
    _SapTmplEgressQosPolicyName_Type()
)
sapTmplEgressQosPolicyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressQosPolicyName.setStatus("current")


class _SapTmplIngressIpFilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplIngressIpFilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplIngressIpFilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplIngressIpFilterName_Object = MibTableColumn
sapTmplIngressIpFilterName = _SapTmplIngressIpFilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 38),
    _SapTmplIngressIpFilterName_Type()
)
sapTmplIngressIpFilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressIpFilterName.setStatus("current")


class _SapTmplIngressIpv6FilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplIngressIpv6FilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplIngressIpv6FilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplIngressIpv6FilterName_Object = MibTableColumn
sapTmplIngressIpv6FilterName = _SapTmplIngressIpv6FilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 39),
    _SapTmplIngressIpv6FilterName_Type()
)
sapTmplIngressIpv6FilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressIpv6FilterName.setStatus("current")


class _SapTmplIngressMacFilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplIngressMacFilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplIngressMacFilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplIngressMacFilterName_Object = MibTableColumn
sapTmplIngressMacFilterName = _SapTmplIngressMacFilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 40),
    _SapTmplIngressMacFilterName_Type()
)
sapTmplIngressMacFilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplIngressMacFilterName.setStatus("current")


class _SapTmplEgressIpFilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplEgressIpFilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplEgressIpFilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplEgressIpFilterName_Object = MibTableColumn
sapTmplEgressIpFilterName = _SapTmplEgressIpFilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 41),
    _SapTmplEgressIpFilterName_Type()
)
sapTmplEgressIpFilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressIpFilterName.setStatus("current")


class _SapTmplEgressIpv6FilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplEgressIpv6FilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplEgressIpv6FilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplEgressIpv6FilterName_Object = MibTableColumn
sapTmplEgressIpv6FilterName = _SapTmplEgressIpv6FilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 42),
    _SapTmplEgressIpv6FilterName_Type()
)
sapTmplEgressIpv6FilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressIpv6FilterName.setStatus("current")


class _SapTmplEgressMacFilterName_Type(TLNamedItemOrEmpty):
    """Custom type sapTmplEgressMacFilterName based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTmplEgressMacFilterName_Type.__name__ = "TLNamedItemOrEmpty"
_SapTmplEgressMacFilterName_Object = MibTableColumn
sapTmplEgressMacFilterName = _SapTmplEgressMacFilterName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 43),
    _SapTmplEgressMacFilterName_Type()
)
sapTmplEgressMacFilterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEgressMacFilterName.setStatus("current")


class _SapTmplEthCfmSquelchIngressCtag_Type(Bits):
    """Custom type sapTmplEthCfmSquelchIngressCtag based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("level0", 0),
          ("level1", 1),
          ("level2", 2),
          ("level3", 3),
          ("level4", 4),
          ("level5", 5),
          ("level6", 6),
          ("level7", 7))
    )

_SapTmplEthCfmSquelchIngressCtag_Type.__name__ = "Bits"
_SapTmplEthCfmSquelchIngressCtag_Object = MibTableColumn
sapTmplEthCfmSquelchIngressCtag = _SapTmplEthCfmSquelchIngressCtag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 102, 1, 44),
    _SapTmplEthCfmSquelchIngressCtag_Type()
)
sapTmplEthCfmSquelchIngressCtag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTmplEthCfmSquelchIngressCtag.setStatus("current")
_SapTmplTlsTblLastChanged_Type = TimeStamp
_SapTmplTlsTblLastChanged_Object = MibScalar
sapTmplTlsTblLastChanged = _SapTmplTlsTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 103),
    _SapTmplTlsTblLastChanged_Type()
)
sapTmplTlsTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplTlsTblLastChanged.setStatus("current")
_SapTmplTlsTable_Object = MibTable
sapTmplTlsTable = _SapTmplTlsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104)
)
if mibBuilder.loadTexts:
    sapTmplTlsTable.setStatus("current")
_SapTmplTlsEntry_Object = MibTableRow
sapTmplTlsEntry = _SapTmplTlsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1)
)
sapTmplTlsEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "sapTmplName"),
)
if mibBuilder.loadTexts:
    sapTmplTlsEntry.setStatus("current")
_SapTmplTlsLastChanged_Type = TimeStamp
_SapTmplTlsLastChanged_Object = MibTableColumn
sapTmplTlsLastChanged = _SapTmplTlsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 1),
    _SapTmplTlsLastChanged_Type()
)
sapTmplTlsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplTlsLastChanged.setStatus("current")


class _SapTmplTlsMacAgeing_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsMacAgeing based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTmplTlsMacAgeing_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsMacAgeing_Object = MibTableColumn
sapTmplTlsMacAgeing = _SapTmplTlsMacAgeing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 2),
    _SapTmplTlsMacAgeing_Type()
)
sapTmplTlsMacAgeing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsMacAgeing.setStatus("current")


class _SapTmplTlsStpAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsStpAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTmplTlsStpAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsStpAdminStatus_Object = MibTableColumn
sapTmplTlsStpAdminStatus = _SapTmplTlsStpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 3),
    _SapTmplTlsStpAdminStatus_Type()
)
sapTmplTlsStpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpAdminStatus.setStatus("current")


class _SapTmplTlsStpPriority_Type(Integer32):
    """Custom type sapTmplTlsStpPriority based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapTmplTlsStpPriority_Type.__name__ = "Integer32"
_SapTmplTlsStpPriority_Object = MibTableColumn
sapTmplTlsStpPriority = _SapTmplTlsStpPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 4),
    _SapTmplTlsStpPriority_Type()
)
sapTmplTlsStpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpPriority.setStatus("current")


class _SapTmplTlsStpPathCost_Type(Integer32):
    """Custom type sapTmplTlsStpPathCost based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000000),
    )


_SapTmplTlsStpPathCost_Type.__name__ = "Integer32"
_SapTmplTlsStpPathCost_Object = MibTableColumn
sapTmplTlsStpPathCost = _SapTmplTlsStpPathCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 5),
    _SapTmplTlsStpPathCost_Type()
)
sapTmplTlsStpPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpPathCost.setStatus("current")


class _SapTmplTlsStpRapidStart_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsStpRapidStart based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTmplTlsStpRapidStart_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsStpRapidStart_Object = MibTableColumn
sapTmplTlsStpRapidStart = _SapTmplTlsStpRapidStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 6),
    _SapTmplTlsStpRapidStart_Type()
)
sapTmplTlsStpRapidStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpRapidStart.setStatus("current")


class _SapTmplTlsStpBpduEncap_Type(Integer32):
    """Custom type sapTmplTlsStpBpduEncap based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("dot1d", 2),
          ("pvst", 3))
    )


_SapTmplTlsStpBpduEncap_Type.__name__ = "Integer32"
_SapTmplTlsStpBpduEncap_Object = MibTableColumn
sapTmplTlsStpBpduEncap = _SapTmplTlsStpBpduEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 7),
    _SapTmplTlsStpBpduEncap_Type()
)
sapTmplTlsStpBpduEncap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpBpduEncap.setStatus("current")


class _SapTmplTlsMacAddressLimit_Type(Integer32):
    """Custom type sapTmplTlsMacAddressLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_SapTmplTlsMacAddressLimit_Type.__name__ = "Integer32"
_SapTmplTlsMacAddressLimit_Object = MibTableColumn
sapTmplTlsMacAddressLimit = _SapTmplTlsMacAddressLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 8),
    _SapTmplTlsMacAddressLimit_Type()
)
sapTmplTlsMacAddressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsMacAddressLimit.setStatus("current")


class _SapTmplTlsMacLearning_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsMacLearning based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTmplTlsMacLearning_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsMacLearning_Object = MibTableColumn
sapTmplTlsMacLearning = _SapTmplTlsMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 9),
    _SapTmplTlsMacLearning_Type()
)
sapTmplTlsMacLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsMacLearning.setStatus("current")


class _SapTmplTlsStpAdminPointToPoint_Type(Integer32):
    """Custom type sapTmplTlsStpAdminPointToPoint based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("forceTrue", 0),
          ("forceFalse", 1))
    )


_SapTmplTlsStpAdminPointToPoint_Type.__name__ = "Integer32"
_SapTmplTlsStpAdminPointToPoint_Object = MibTableColumn
sapTmplTlsStpAdminPointToPoint = _SapTmplTlsStpAdminPointToPoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 10),
    _SapTmplTlsStpAdminPointToPoint_Type()
)
sapTmplTlsStpAdminPointToPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpAdminPointToPoint.setStatus("current")


class _SapTmplTlsStpAutoEdge_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsStpAutoEdge based on TmnxEnabledDisabled"""
    defaultValue = 1


_SapTmplTlsStpAutoEdge_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsStpAutoEdge_Object = MibTableColumn
sapTmplTlsStpAutoEdge = _SapTmplTlsStpAutoEdge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 11),
    _SapTmplTlsStpAutoEdge_Type()
)
sapTmplTlsStpAutoEdge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpAutoEdge.setStatus("current")


class _SapTmplTlsDiscardUnknownSource_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsDiscardUnknownSource based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTmplTlsDiscardUnknownSource_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsDiscardUnknownSource_Object = MibTableColumn
sapTmplTlsDiscardUnknownSource = _SapTmplTlsDiscardUnknownSource_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 12),
    _SapTmplTlsDiscardUnknownSource_Type()
)
sapTmplTlsDiscardUnknownSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsDiscardUnknownSource.setStatus("current")


class _SapTmplTlsL2ptTermination_Type(TmnxEnabledDisabled):
    """Custom type sapTmplTlsL2ptTermination based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTmplTlsL2ptTermination_Type.__name__ = "TmnxEnabledDisabled"
_SapTmplTlsL2ptTermination_Object = MibTableColumn
sapTmplTlsL2ptTermination = _SapTmplTlsL2ptTermination_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 13),
    _SapTmplTlsL2ptTermination_Type()
)
sapTmplTlsL2ptTermination.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsL2ptTermination.setStatus("current")


class _SapTmplTlsBpduTranslation_Type(TlsBpduTranslation):
    """Custom type sapTmplTlsBpduTranslation based on TlsBpduTranslation"""
    defaultValue = 2


_SapTmplTlsBpduTranslation_Type.__name__ = "TlsBpduTranslation"
_SapTmplTlsBpduTranslation_Object = MibTableColumn
sapTmplTlsBpduTranslation = _SapTmplTlsBpduTranslation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 14),
    _SapTmplTlsBpduTranslation_Type()
)
sapTmplTlsBpduTranslation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsBpduTranslation.setStatus("current")


class _SapTmplTlsStpRootGuard_Type(TruthValue):
    """Custom type sapTmplTlsStpRootGuard based on TruthValue"""
    defaultValue = 2


_SapTmplTlsStpRootGuard_Type.__name__ = "TruthValue"
_SapTmplTlsStpRootGuard_Object = MibTableColumn
sapTmplTlsStpRootGuard = _SapTmplTlsStpRootGuard_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 15),
    _SapTmplTlsStpRootGuard_Type()
)
sapTmplTlsStpRootGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsStpRootGuard.setStatus("current")


class _SapTmplTlsL2ptProtocols_Type(L2ptProtocols):
    """Custom type sapTmplTlsL2ptProtocols based on L2ptProtocols"""
    defaultBinValue = "1"


_SapTmplTlsL2ptProtocols_Type.__name__ = "L2ptProtocols"
_SapTmplTlsL2ptProtocols_Object = MibTableColumn
sapTmplTlsL2ptProtocols = _SapTmplTlsL2ptProtocols_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 16),
    _SapTmplTlsL2ptProtocols_Type()
)
sapTmplTlsL2ptProtocols.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsL2ptProtocols.setStatus("current")


class _SapTmplTlsLimitMacMove_Type(TlsLimitMacMove):
    """Custom type sapTmplTlsLimitMacMove based on TlsLimitMacMove"""
    defaultValue = 1


_SapTmplTlsLimitMacMove_Type.__name__ = "TlsLimitMacMove"
_SapTmplTlsLimitMacMove_Object = MibTableColumn
sapTmplTlsLimitMacMove = _SapTmplTlsLimitMacMove_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 17),
    _SapTmplTlsLimitMacMove_Type()
)
sapTmplTlsLimitMacMove.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsLimitMacMove.setStatus("current")


class _SapTmplTlsLimitMacMoveLevel_Type(TlsLimitMacMoveLevel):
    """Custom type sapTmplTlsLimitMacMoveLevel based on TlsLimitMacMoveLevel"""
    defaultValue = 3


_SapTmplTlsLimitMacMoveLevel_Type.__name__ = "TlsLimitMacMoveLevel"
_SapTmplTlsLimitMacMoveLevel_Object = MibTableColumn
sapTmplTlsLimitMacMoveLevel = _SapTmplTlsLimitMacMoveLevel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 104, 1, 18),
    _SapTmplTlsLimitMacMoveLevel_Type()
)
sapTmplTlsLimitMacMoveLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTmplTlsLimitMacMoveLevel.setStatus("current")
_SapTlsEsVidGrpTblLastChanged_Type = TimeStamp
_SapTlsEsVidGrpTblLastChanged_Object = MibScalar
sapTlsEsVidGrpTblLastChanged = _SapTlsEsVidGrpTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 105),
    _SapTlsEsVidGrpTblLastChanged_Type()
)
sapTlsEsVidGrpTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpTblLastChanged.setStatus("current")
_SapTlsEsVidGrpTable_Object = MibTable
sapTlsEsVidGrpTable = _SapTlsEsVidGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106)
)
if mibBuilder.loadTexts:
    sapTlsEsVidGrpTable.setStatus("current")
_SapTlsEsVidGrpEntry_Object = MibTableRow
sapTlsEsVidGrpEntry = _SapTlsEsVidGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1)
)
sapTlsEsVidGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsEsVidGrpId"),
)
if mibBuilder.loadTexts:
    sapTlsEsVidGrpEntry.setStatus("current")
_SapTlsEsVidGrpId_Type = TmnxVlanGroupId
_SapTlsEsVidGrpId_Object = MibTableColumn
sapTlsEsVidGrpId = _SapTlsEsVidGrpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1, 1),
    _SapTlsEsVidGrpId_Type()
)
sapTlsEsVidGrpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpId.setStatus("current")
_SapTlsEsVidGrpRowStatus_Type = RowStatus
_SapTlsEsVidGrpRowStatus_Object = MibTableColumn
sapTlsEsVidGrpRowStatus = _SapTlsEsVidGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1, 2),
    _SapTlsEsVidGrpRowStatus_Type()
)
sapTlsEsVidGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpRowStatus.setStatus("current")
_SapTlsEsVidGrpLastChgd_Type = TimeStamp
_SapTlsEsVidGrpLastChgd_Object = MibTableColumn
sapTlsEsVidGrpLastChgd = _SapTlsEsVidGrpLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1, 3),
    _SapTlsEsVidGrpLastChgd_Type()
)
sapTlsEsVidGrpLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpLastChgd.setStatus("current")
_SapTlsEsVidGrpStartVlanTag_Type = QTag
_SapTlsEsVidGrpStartVlanTag_Object = MibTableColumn
sapTlsEsVidGrpStartVlanTag = _SapTlsEsVidGrpStartVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1, 4),
    _SapTlsEsVidGrpStartVlanTag_Type()
)
sapTlsEsVidGrpStartVlanTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpStartVlanTag.setStatus("current")
_SapTlsEsVidGrpEndVlanTag_Type = QTag
_SapTlsEsVidGrpEndVlanTag_Object = MibTableColumn
sapTlsEsVidGrpEndVlanTag = _SapTlsEsVidGrpEndVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 106, 1, 5),
    _SapTlsEsVidGrpEndVlanTag_Type()
)
sapTlsEsVidGrpEndVlanTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsEsVidGrpEndVlanTag.setStatus("current")
_SapTmplUserTable_Object = MibTable
sapTmplUserTable = _SapTmplUserTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 107)
)
if mibBuilder.loadTexts:
    sapTmplUserTable.setStatus("current")
_SapTmplUserEntry_Object = MibTableRow
sapTmplUserEntry = _SapTmplUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 107, 1)
)
sapTmplUserEntry.setIndexNames(
    (0, "TIMETRA-SAP-MIB", "sapTmplName"),
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTmplUserEntry.setStatus("current")


class _SapTmplUserCreationOrigin_Type(Integer32):
    """Custom type sapTmplUserCreationOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("mVpls", 1)
    )


_SapTmplUserCreationOrigin_Type.__name__ = "Integer32"
_SapTmplUserCreationOrigin_Object = MibTableColumn
sapTmplUserCreationOrigin = _SapTmplUserCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 107, 1, 1),
    _SapTmplUserCreationOrigin_Type()
)
sapTmplUserCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplUserCreationOrigin.setStatus("current")
_SapTmplUserCreatorSvcId_Type = TmnxServId
_SapTmplUserCreatorSvcId_Object = MibTableColumn
sapTmplUserCreatorSvcId = _SapTmplUserCreatorSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 107, 1, 2),
    _SapTmplUserCreatorSvcId_Type()
)
sapTmplUserCreatorSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTmplUserCreatorSvcId.setStatus("current")
_SapIngQosArbitStatsTable_Object = MibTable
sapIngQosArbitStatsTable = _SapIngQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108)
)
if mibBuilder.loadTexts:
    sapIngQosArbitStatsTable.setStatus("current")
_SapIngQosArbitStatsEntry_Object = MibTableRow
sapIngQosArbitStatsEntry = _SapIngQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1)
)
sapIngQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosArbitStatsName"),
)
if mibBuilder.loadTexts:
    sapIngQosArbitStatsEntry.setStatus("current")
_SapIngQosArbitStatsName_Type = TNamedItem
_SapIngQosArbitStatsName_Object = MibTableColumn
sapIngQosArbitStatsName = _SapIngQosArbitStatsName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 1),
    _SapIngQosArbitStatsName_Type()
)
sapIngQosArbitStatsName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsName.setStatus("current")
_SapIngQosArbitStatsFwdPkts_Type = Counter64
_SapIngQosArbitStatsFwdPkts_Object = MibTableColumn
sapIngQosArbitStatsFwdPkts = _SapIngQosArbitStatsFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 2),
    _SapIngQosArbitStatsFwdPkts_Type()
)
sapIngQosArbitStatsFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdPkts.setStatus("current")
_SapIngQosArbitStatsFwdPktsLo_Type = Counter32
_SapIngQosArbitStatsFwdPktsLo_Object = MibTableColumn
sapIngQosArbitStatsFwdPktsLo = _SapIngQosArbitStatsFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 3),
    _SapIngQosArbitStatsFwdPktsLo_Type()
)
sapIngQosArbitStatsFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdPktsLo.setStatus("current")
_SapIngQosArbitStatsFwdPktsHi_Type = Counter32
_SapIngQosArbitStatsFwdPktsHi_Object = MibTableColumn
sapIngQosArbitStatsFwdPktsHi = _SapIngQosArbitStatsFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 4),
    _SapIngQosArbitStatsFwdPktsHi_Type()
)
sapIngQosArbitStatsFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdPktsHi.setStatus("current")
_SapIngQosArbitStatsFwdOcts_Type = Counter64
_SapIngQosArbitStatsFwdOcts_Object = MibTableColumn
sapIngQosArbitStatsFwdOcts = _SapIngQosArbitStatsFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 5),
    _SapIngQosArbitStatsFwdOcts_Type()
)
sapIngQosArbitStatsFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdOcts.setStatus("current")
_SapIngQosArbitStatsFwdOctsLo_Type = Counter32
_SapIngQosArbitStatsFwdOctsLo_Object = MibTableColumn
sapIngQosArbitStatsFwdOctsLo = _SapIngQosArbitStatsFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 6),
    _SapIngQosArbitStatsFwdOctsLo_Type()
)
sapIngQosArbitStatsFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdOctsLo.setStatus("current")
_SapIngQosArbitStatsFwdOctsHi_Type = Counter32
_SapIngQosArbitStatsFwdOctsHi_Object = MibTableColumn
sapIngQosArbitStatsFwdOctsHi = _SapIngQosArbitStatsFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 108, 1, 7),
    _SapIngQosArbitStatsFwdOctsHi_Type()
)
sapIngQosArbitStatsFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosArbitStatsFwdOctsHi.setStatus("current")
_SapEgrQosArbitStatsTable_Object = MibTable
sapEgrQosArbitStatsTable = _SapEgrQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109)
)
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsTable.setStatus("current")
_SapEgrQosArbitStatsEntry_Object = MibTableRow
sapEgrQosArbitStatsEntry = _SapEgrQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1)
)
sapEgrQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosArbitStatsName"),
)
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsEntry.setStatus("current")
_SapEgrQosArbitStatsName_Type = TNamedItem
_SapEgrQosArbitStatsName_Object = MibTableColumn
sapEgrQosArbitStatsName = _SapEgrQosArbitStatsName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 1),
    _SapEgrQosArbitStatsName_Type()
)
sapEgrQosArbitStatsName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsName.setStatus("current")
_SapEgrQosArbitStatsFwdPkts_Type = Counter64
_SapEgrQosArbitStatsFwdPkts_Object = MibTableColumn
sapEgrQosArbitStatsFwdPkts = _SapEgrQosArbitStatsFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 2),
    _SapEgrQosArbitStatsFwdPkts_Type()
)
sapEgrQosArbitStatsFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdPkts.setStatus("current")
_SapEgrQosArbitStatsFwdPktsLo_Type = Counter32
_SapEgrQosArbitStatsFwdPktsLo_Object = MibTableColumn
sapEgrQosArbitStatsFwdPktsLo = _SapEgrQosArbitStatsFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 3),
    _SapEgrQosArbitStatsFwdPktsLo_Type()
)
sapEgrQosArbitStatsFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdPktsLo.setStatus("current")
_SapEgrQosArbitStatsFwdPktsHi_Type = Counter32
_SapEgrQosArbitStatsFwdPktsHi_Object = MibTableColumn
sapEgrQosArbitStatsFwdPktsHi = _SapEgrQosArbitStatsFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 4),
    _SapEgrQosArbitStatsFwdPktsHi_Type()
)
sapEgrQosArbitStatsFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdPktsHi.setStatus("current")
_SapEgrQosArbitStatsFwdOcts_Type = Counter64
_SapEgrQosArbitStatsFwdOcts_Object = MibTableColumn
sapEgrQosArbitStatsFwdOcts = _SapEgrQosArbitStatsFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 5),
    _SapEgrQosArbitStatsFwdOcts_Type()
)
sapEgrQosArbitStatsFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdOcts.setStatus("current")
_SapEgrQosArbitStatsFwdOctsLo_Type = Counter32
_SapEgrQosArbitStatsFwdOctsLo_Object = MibTableColumn
sapEgrQosArbitStatsFwdOctsLo = _SapEgrQosArbitStatsFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 6),
    _SapEgrQosArbitStatsFwdOctsLo_Type()
)
sapEgrQosArbitStatsFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdOctsLo.setStatus("current")
_SapEgrQosArbitStatsFwdOctsHi_Type = Counter32
_SapEgrQosArbitStatsFwdOctsHi_Object = MibTableColumn
sapEgrQosArbitStatsFwdOctsHi = _SapEgrQosArbitStatsFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 109, 1, 7),
    _SapEgrQosArbitStatsFwdOctsHi_Type()
)
sapEgrQosArbitStatsFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosArbitStatsFwdOctsHi.setStatus("current")
_SapTlsMvrpTable_Object = MibTable
sapTlsMvrpTable = _SapTlsMvrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110)
)
if mibBuilder.loadTexts:
    sapTlsMvrpTable.setStatus("current")
_SapTlsMvrpEntry_Object = MibTableRow
sapTlsMvrpEntry = _SapTlsMvrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110, 1)
)
sapTlsMvrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsMvrpVlanId"),
)
if mibBuilder.loadTexts:
    sapTlsMvrpEntry.setStatus("current")


class _SapTlsMvrpVlanId_Type(Unsigned32):
    """Custom type sapTlsMvrpVlanId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SapTlsMvrpVlanId_Type.__name__ = "Unsigned32"
_SapTlsMvrpVlanId_Object = MibTableColumn
sapTlsMvrpVlanId = _SapTlsMvrpVlanId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110, 1, 1),
    _SapTlsMvrpVlanId_Type()
)
sapTlsMvrpVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsMvrpVlanId.setStatus("current")
_SapTlsMvrpDeclared_Type = TruthValue
_SapTlsMvrpDeclared_Object = MibTableColumn
sapTlsMvrpDeclared = _SapTlsMvrpDeclared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110, 1, 2),
    _SapTlsMvrpDeclared_Type()
)
sapTlsMvrpDeclared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvrpDeclared.setStatus("current")
_SapTlsMvrpRegistered_Type = TruthValue
_SapTlsMvrpRegistered_Object = MibTableColumn
sapTlsMvrpRegistered = _SapTlsMvrpRegistered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110, 1, 3),
    _SapTlsMvrpRegistered_Type()
)
sapTlsMvrpRegistered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvrpRegistered.setStatus("current")
_SapTlsMvrpEndStation_Type = TruthValue
_SapTlsMvrpEndStation_Object = MibTableColumn
sapTlsMvrpEndStation = _SapTlsMvrpEndStation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 110, 1, 4),
    _SapTlsMvrpEndStation_Type()
)
sapTlsMvrpEndStation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsMvrpEndStation.setStatus("current")
_SapPortIdIngQosArbitStatsTable_Object = MibTable
sapPortIdIngQosArbitStatsTable = _SapPortIdIngQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111)
)
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitStatsTable.setStatus("current")
_SapPortIdIngQosArbitStatsEntry_Object = MibTableRow
sapPortIdIngQosArbitStatsEntry = _SapPortIdIngQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1)
)
sapPortIdIngQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdIngQosArbitName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdIngPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitStatsEntry.setStatus("current")
_SapPortIdIngQosArbitName_Type = TNamedItem
_SapPortIdIngQosArbitName_Object = MibTableColumn
sapPortIdIngQosArbitName = _SapPortIdIngQosArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 1),
    _SapPortIdIngQosArbitName_Type()
)
sapPortIdIngQosArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitName.setStatus("current")
_SapPortIdIngQosArbitFwdPkts_Type = Counter64
_SapPortIdIngQosArbitFwdPkts_Object = MibTableColumn
sapPortIdIngQosArbitFwdPkts = _SapPortIdIngQosArbitFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 2),
    _SapPortIdIngQosArbitFwdPkts_Type()
)
sapPortIdIngQosArbitFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdPkts.setStatus("current")
_SapPortIdIngQosArbitFwdOcts_Type = Counter64
_SapPortIdIngQosArbitFwdOcts_Object = MibTableColumn
sapPortIdIngQosArbitFwdOcts = _SapPortIdIngQosArbitFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 3),
    _SapPortIdIngQosArbitFwdOcts_Type()
)
sapPortIdIngQosArbitFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdOcts.setStatus("current")
_SapPortIdIngQosArbitFwdPktsLo_Type = Counter32
_SapPortIdIngQosArbitFwdPktsLo_Object = MibTableColumn
sapPortIdIngQosArbitFwdPktsLo = _SapPortIdIngQosArbitFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 4),
    _SapPortIdIngQosArbitFwdPktsLo_Type()
)
sapPortIdIngQosArbitFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdPktsLo.setStatus("current")
_SapPortIdIngQosArbitFwdPktsHi_Type = Counter32
_SapPortIdIngQosArbitFwdPktsHi_Object = MibTableColumn
sapPortIdIngQosArbitFwdPktsHi = _SapPortIdIngQosArbitFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 5),
    _SapPortIdIngQosArbitFwdPktsHi_Type()
)
sapPortIdIngQosArbitFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdPktsHi.setStatus("current")
_SapPortIdIngQosArbitFwdOctsLo_Type = Counter32
_SapPortIdIngQosArbitFwdOctsLo_Object = MibTableColumn
sapPortIdIngQosArbitFwdOctsLo = _SapPortIdIngQosArbitFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 6),
    _SapPortIdIngQosArbitFwdOctsLo_Type()
)
sapPortIdIngQosArbitFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdOctsLo.setStatus("current")
_SapPortIdIngQosArbitFwdOctsHi_Type = Counter32
_SapPortIdIngQosArbitFwdOctsHi_Object = MibTableColumn
sapPortIdIngQosArbitFwdOctsHi = _SapPortIdIngQosArbitFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 111, 1, 7),
    _SapPortIdIngQosArbitFwdOctsHi_Type()
)
sapPortIdIngQosArbitFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdIngQosArbitFwdOctsHi.setStatus("current")
_SapPortIdEgrQosArbitStatsTable_Object = MibTable
sapPortIdEgrQosArbitStatsTable = _SapPortIdEgrQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112)
)
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitStatsTable.setStatus("current")
_SapPortIdEgrQosArbitStatsEntry_Object = MibTableRow
sapPortIdEgrQosArbitStatsEntry = _SapPortIdEgrQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1)
)
sapPortIdEgrQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitStatsEntry.setStatus("current")
_SapPortIdEgrQosArbitName_Type = TNamedItem
_SapPortIdEgrQosArbitName_Object = MibTableColumn
sapPortIdEgrQosArbitName = _SapPortIdEgrQosArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 1),
    _SapPortIdEgrQosArbitName_Type()
)
sapPortIdEgrQosArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitName.setStatus("current")
_SapPortIdEgrQosArbitFwdPkts_Type = Counter64
_SapPortIdEgrQosArbitFwdPkts_Object = MibTableColumn
sapPortIdEgrQosArbitFwdPkts = _SapPortIdEgrQosArbitFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 2),
    _SapPortIdEgrQosArbitFwdPkts_Type()
)
sapPortIdEgrQosArbitFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdPkts.setStatus("current")
_SapPortIdEgrQosArbitFwdOcts_Type = Counter64
_SapPortIdEgrQosArbitFwdOcts_Object = MibTableColumn
sapPortIdEgrQosArbitFwdOcts = _SapPortIdEgrQosArbitFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 3),
    _SapPortIdEgrQosArbitFwdOcts_Type()
)
sapPortIdEgrQosArbitFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdOcts.setStatus("current")
_SapPortIdEgrQosArbitFwdPktsLo_Type = Counter32
_SapPortIdEgrQosArbitFwdPktsLo_Object = MibTableColumn
sapPortIdEgrQosArbitFwdPktsLo = _SapPortIdEgrQosArbitFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 4),
    _SapPortIdEgrQosArbitFwdPktsLo_Type()
)
sapPortIdEgrQosArbitFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdPktsLo.setStatus("current")
_SapPortIdEgrQosArbitFwdPktsHi_Type = Counter32
_SapPortIdEgrQosArbitFwdPktsHi_Object = MibTableColumn
sapPortIdEgrQosArbitFwdPktsHi = _SapPortIdEgrQosArbitFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 5),
    _SapPortIdEgrQosArbitFwdPktsHi_Type()
)
sapPortIdEgrQosArbitFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdPktsHi.setStatus("current")
_SapPortIdEgrQosArbitFwdOctsLo_Type = Counter32
_SapPortIdEgrQosArbitFwdOctsLo_Object = MibTableColumn
sapPortIdEgrQosArbitFwdOctsLo = _SapPortIdEgrQosArbitFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 6),
    _SapPortIdEgrQosArbitFwdOctsLo_Type()
)
sapPortIdEgrQosArbitFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdOctsLo.setStatus("current")
_SapPortIdEgrQosArbitFwdOctsHi_Type = Counter32
_SapPortIdEgrQosArbitFwdOctsHi_Object = MibTableColumn
sapPortIdEgrQosArbitFwdOctsHi = _SapPortIdEgrQosArbitFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 112, 1, 7),
    _SapPortIdEgrQosArbitFwdOctsHi_Type()
)
sapPortIdEgrQosArbitFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrQosArbitFwdOctsHi.setStatus("current")
_TmnxGreTunnelTableLastChanged_Type = TimeStamp
_TmnxGreTunnelTableLastChanged_Object = MibScalar
tmnxGreTunnelTableLastChanged = _TmnxGreTunnelTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 113),
    _TmnxGreTunnelTableLastChanged_Type()
)
tmnxGreTunnelTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelTableLastChanged.setStatus("obsolete")
_TmnxGreTunnelTable_Object = MibTable
tmnxGreTunnelTable = _TmnxGreTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114)
)
if mibBuilder.loadTexts:
    tmnxGreTunnelTable.setStatus("obsolete")
_TmnxGreTunnelEntry_Object = MibTableRow
tmnxGreTunnelEntry = _TmnxGreTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1)
)
tmnxGreTunnelEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxGreTunnelName"),
)
if mibBuilder.loadTexts:
    tmnxGreTunnelEntry.setStatus("obsolete")
_TmnxGreTunnelName_Type = TNamedItem
_TmnxGreTunnelName_Object = MibTableColumn
tmnxGreTunnelName = _TmnxGreTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 1),
    _TmnxGreTunnelName_Type()
)
tmnxGreTunnelName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxGreTunnelName.setStatus("obsolete")
_TmnxGreTunnelRowStatus_Type = RowStatus
_TmnxGreTunnelRowStatus_Object = MibTableColumn
tmnxGreTunnelRowStatus = _TmnxGreTunnelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 2),
    _TmnxGreTunnelRowStatus_Type()
)
tmnxGreTunnelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelRowStatus.setStatus("obsolete")
_TmnxGreTunnelLastChanged_Type = TimeStamp
_TmnxGreTunnelLastChanged_Object = MibTableColumn
tmnxGreTunnelLastChanged = _TmnxGreTunnelLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 3),
    _TmnxGreTunnelLastChanged_Type()
)
tmnxGreTunnelLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelLastChanged.setStatus("obsolete")
_TmnxGreTunnelDstIpAddrType_Type = InetAddressType
_TmnxGreTunnelDstIpAddrType_Object = MibTableColumn
tmnxGreTunnelDstIpAddrType = _TmnxGreTunnelDstIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 4),
    _TmnxGreTunnelDstIpAddrType_Type()
)
tmnxGreTunnelDstIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelDstIpAddrType.setStatus("obsolete")


class _TmnxGreTunnelDstIpAddr_Type(InetAddress):
    """Custom type tmnxGreTunnelDstIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxGreTunnelDstIpAddr_Type.__name__ = "InetAddress"
_TmnxGreTunnelDstIpAddr_Object = MibTableColumn
tmnxGreTunnelDstIpAddr = _TmnxGreTunnelDstIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 5),
    _TmnxGreTunnelDstIpAddr_Type()
)
tmnxGreTunnelDstIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelDstIpAddr.setStatus("obsolete")


class _TmnxGreTunnelDescription_Type(TItemDescription):
    """Custom type tmnxGreTunnelDescription based on TItemDescription"""
    defaultValue = OctetString("")


_TmnxGreTunnelDescription_Type.__name__ = "TItemDescription"
_TmnxGreTunnelDescription_Object = MibTableColumn
tmnxGreTunnelDescription = _TmnxGreTunnelDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 6),
    _TmnxGreTunnelDescription_Type()
)
tmnxGreTunnelDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelDescription.setStatus("obsolete")


class _TmnxGreTunnelLclIpAddrType_Type(InetAddressType):
    """Custom type tmnxGreTunnelLclIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxGreTunnelLclIpAddrType_Type.__name__ = "InetAddressType"
_TmnxGreTunnelLclIpAddrType_Object = MibTableColumn
tmnxGreTunnelLclIpAddrType = _TmnxGreTunnelLclIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 7),
    _TmnxGreTunnelLclIpAddrType_Type()
)
tmnxGreTunnelLclIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelLclIpAddrType.setStatus("obsolete")


class _TmnxGreTunnelLclIpAddr_Type(InetAddress):
    """Custom type tmnxGreTunnelLclIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxGreTunnelLclIpAddr_Type.__name__ = "InetAddress"
_TmnxGreTunnelLclIpAddr_Object = MibTableColumn
tmnxGreTunnelLclIpAddr = _TmnxGreTunnelLclIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 8),
    _TmnxGreTunnelLclIpAddr_Type()
)
tmnxGreTunnelLclIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelLclIpAddr.setStatus("obsolete")


class _TmnxGreTunnelRemIpAddrType_Type(InetAddressType):
    """Custom type tmnxGreTunnelRemIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxGreTunnelRemIpAddrType_Type.__name__ = "InetAddressType"
_TmnxGreTunnelRemIpAddrType_Object = MibTableColumn
tmnxGreTunnelRemIpAddrType = _TmnxGreTunnelRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 9),
    _TmnxGreTunnelRemIpAddrType_Type()
)
tmnxGreTunnelRemIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelRemIpAddrType.setStatus("obsolete")


class _TmnxGreTunnelRemIpAddr_Type(InetAddress):
    """Custom type tmnxGreTunnelRemIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxGreTunnelRemIpAddr_Type.__name__ = "InetAddress"
_TmnxGreTunnelRemIpAddr_Object = MibTableColumn
tmnxGreTunnelRemIpAddr = _TmnxGreTunnelRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 10),
    _TmnxGreTunnelRemIpAddr_Type()
)
tmnxGreTunnelRemIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelRemIpAddr.setStatus("obsolete")


class _TmnxGreTunnelBackupRemIpAddrType_Type(InetAddressType):
    """Custom type tmnxGreTunnelBackupRemIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxGreTunnelBackupRemIpAddrType_Type.__name__ = "InetAddressType"
_TmnxGreTunnelBackupRemIpAddrType_Object = MibTableColumn
tmnxGreTunnelBackupRemIpAddrType = _TmnxGreTunnelBackupRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 11),
    _TmnxGreTunnelBackupRemIpAddrType_Type()
)
tmnxGreTunnelBackupRemIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelBackupRemIpAddrType.setStatus("obsolete")


class _TmnxGreTunnelBackupRemIpAddr_Type(InetAddress):
    """Custom type tmnxGreTunnelBackupRemIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxGreTunnelBackupRemIpAddr_Type.__name__ = "InetAddress"
_TmnxGreTunnelBackupRemIpAddr_Object = MibTableColumn
tmnxGreTunnelBackupRemIpAddr = _TmnxGreTunnelBackupRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 12),
    _TmnxGreTunnelBackupRemIpAddr_Type()
)
tmnxGreTunnelBackupRemIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelBackupRemIpAddr.setStatus("obsolete")
_TmnxGreTunnelOperRemIpAddrType_Type = InetAddressType
_TmnxGreTunnelOperRemIpAddrType_Object = MibTableColumn
tmnxGreTunnelOperRemIpAddrType = _TmnxGreTunnelOperRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 13),
    _TmnxGreTunnelOperRemIpAddrType_Type()
)
tmnxGreTunnelOperRemIpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelOperRemIpAddrType.setStatus("obsolete")


class _TmnxGreTunnelOperRemIpAddr_Type(InetAddress):
    """Custom type tmnxGreTunnelOperRemIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxGreTunnelOperRemIpAddr_Type.__name__ = "InetAddress"
_TmnxGreTunnelOperRemIpAddr_Object = MibTableColumn
tmnxGreTunnelOperRemIpAddr = _TmnxGreTunnelOperRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 14),
    _TmnxGreTunnelOperRemIpAddr_Type()
)
tmnxGreTunnelOperRemIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelOperRemIpAddr.setStatus("obsolete")


class _TmnxGreTunnelDeliverySvcId_Type(TmnxServId):
    """Custom type tmnxGreTunnelDeliverySvcId based on TmnxServId"""
    defaultValue = 0


_TmnxGreTunnelDeliverySvcId_Type.__name__ = "TmnxServId"
_TmnxGreTunnelDeliverySvcId_Object = MibTableColumn
tmnxGreTunnelDeliverySvcId = _TmnxGreTunnelDeliverySvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 15),
    _TmnxGreTunnelDeliverySvcId_Type()
)
tmnxGreTunnelDeliverySvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelDeliverySvcId.setStatus("obsolete")


class _TmnxGreTunnelAdminState_Type(TmnxAdminState):
    """Custom type tmnxGreTunnelAdminState based on TmnxAdminState"""
    defaultValue = 3


_TmnxGreTunnelAdminState_Type.__name__ = "TmnxAdminState"
_TmnxGreTunnelAdminState_Object = MibTableColumn
tmnxGreTunnelAdminState = _TmnxGreTunnelAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 16),
    _TmnxGreTunnelAdminState_Type()
)
tmnxGreTunnelAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelAdminState.setStatus("obsolete")
_TmnxGreTunnelOperState_Type = TmnxOperState
_TmnxGreTunnelOperState_Object = MibTableColumn
tmnxGreTunnelOperState = _TmnxGreTunnelOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 17),
    _TmnxGreTunnelOperState_Type()
)
tmnxGreTunnelOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelOperState.setStatus("obsolete")


class _TmnxGreTunnelOperFlags_Type(Bits):
    """Custom type tmnxGreTunnelOperFlags based on Bits"""
    namedValues = NamedValues(
        *(("unresolvedLocalIp", 0),
          ("tunnelAdminDown", 1),
          ("sapDown", 2),
          ("unresolvedDeliverySvc", 3),
          ("reserved", 4),
          ("remIpUnreachable", 5),
          ("unresolvedDstIp", 6))
    )

_TmnxGreTunnelOperFlags_Type.__name__ = "Bits"
_TmnxGreTunnelOperFlags_Object = MibTableColumn
tmnxGreTunnelOperFlags = _TmnxGreTunnelOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 18),
    _TmnxGreTunnelOperFlags_Type()
)
tmnxGreTunnelOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelOperFlags.setStatus("obsolete")


class _TmnxGreTunnelDscp_Type(TDSCPNameOrEmpty):
    """Custom type tmnxGreTunnelDscp based on TDSCPNameOrEmpty"""
    defaultValue = OctetString("")


_TmnxGreTunnelDscp_Type.__name__ = "TDSCPNameOrEmpty"
_TmnxGreTunnelDscp_Object = MibTableColumn
tmnxGreTunnelDscp = _TmnxGreTunnelDscp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 19),
    _TmnxGreTunnelDscp_Type()
)
tmnxGreTunnelDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelDscp.setStatus("obsolete")


class _TmnxGreTunnelReassembly_Type(Integer32):
    """Custom type tmnxGreTunnelReassembly based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 5000),
    )


_TmnxGreTunnelReassembly_Type.__name__ = "Integer32"
_TmnxGreTunnelReassembly_Object = MibTableColumn
tmnxGreTunnelReassembly = _TmnxGreTunnelReassembly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 20),
    _TmnxGreTunnelReassembly_Type()
)
tmnxGreTunnelReassembly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelReassembly.setStatus("obsolete")
if mibBuilder.loadTexts:
    tmnxGreTunnelReassembly.setUnits("milliseconds")


class _TmnxGreTunnelClearDfBit_Type(TruthValue):
    """Custom type tmnxGreTunnelClearDfBit based on TruthValue"""
    defaultValue = 2


_TmnxGreTunnelClearDfBit_Type.__name__ = "TruthValue"
_TmnxGreTunnelClearDfBit_Object = MibTableColumn
tmnxGreTunnelClearDfBit = _TmnxGreTunnelClearDfBit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 21),
    _TmnxGreTunnelClearDfBit_Type()
)
tmnxGreTunnelClearDfBit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelClearDfBit.setStatus("obsolete")


class _TmnxGreTunnelIpMtu_Type(Unsigned32):
    """Custom type tmnxGreTunnelIpMtu based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(512, 9000),
    )


_TmnxGreTunnelIpMtu_Type.__name__ = "Unsigned32"
_TmnxGreTunnelIpMtu_Object = MibTableColumn
tmnxGreTunnelIpMtu = _TmnxGreTunnelIpMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 22),
    _TmnxGreTunnelIpMtu_Type()
)
tmnxGreTunnelIpMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxGreTunnelIpMtu.setStatus("obsolete")
_TmnxGreTunnelHostISA_Type = TmnxHwIndexOrZero
_TmnxGreTunnelHostISA_Object = MibTableColumn
tmnxGreTunnelHostISA = _TmnxGreTunnelHostISA_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 114, 1, 23),
    _TmnxGreTunnelHostISA_Type()
)
tmnxGreTunnelHostISA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelHostISA.setStatus("obsolete")
_TmnxGreTunnelStatsTable_Object = MibTable
tmnxGreTunnelStatsTable = _TmnxGreTunnelStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115)
)
if mibBuilder.loadTexts:
    tmnxGreTunnelStatsTable.setStatus("obsolete")
_TmnxGreTunnelStatsEntry_Object = MibTableRow
tmnxGreTunnelStatsEntry = _TmnxGreTunnelStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1)
)
tmnxGreTunnelStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxGreTunnelName"),
)
if mibBuilder.loadTexts:
    tmnxGreTunnelStatsEntry.setStatus("obsolete")
_TmnxGreTunnelPktsTx_Type = Counter64
_TmnxGreTunnelPktsTx_Object = MibTableColumn
tmnxGreTunnelPktsTx = _TmnxGreTunnelPktsTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 1),
    _TmnxGreTunnelPktsTx_Type()
)
tmnxGreTunnelPktsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsTx.setStatus("obsolete")
_TmnxGreTunnelPktsTxLo_Type = Counter32
_TmnxGreTunnelPktsTxLo_Object = MibTableColumn
tmnxGreTunnelPktsTxLo = _TmnxGreTunnelPktsTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 2),
    _TmnxGreTunnelPktsTxLo_Type()
)
tmnxGreTunnelPktsTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsTxLo.setStatus("obsolete")
_TmnxGreTunnelPktsTxHi_Type = Counter32
_TmnxGreTunnelPktsTxHi_Object = MibTableColumn
tmnxGreTunnelPktsTxHi = _TmnxGreTunnelPktsTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 3),
    _TmnxGreTunnelPktsTxHi_Type()
)
tmnxGreTunnelPktsTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsTxHi.setStatus("obsolete")
_TmnxGreTunnelPktsRx_Type = Counter64
_TmnxGreTunnelPktsRx_Object = MibTableColumn
tmnxGreTunnelPktsRx = _TmnxGreTunnelPktsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 4),
    _TmnxGreTunnelPktsRx_Type()
)
tmnxGreTunnelPktsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsRx.setStatus("obsolete")
_TmnxGreTunnelPktsRxLo_Type = Counter32
_TmnxGreTunnelPktsRxLo_Object = MibTableColumn
tmnxGreTunnelPktsRxLo = _TmnxGreTunnelPktsRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 5),
    _TmnxGreTunnelPktsRxLo_Type()
)
tmnxGreTunnelPktsRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsRxLo.setStatus("obsolete")
_TmnxGreTunnelPktsRxHi_Type = Counter32
_TmnxGreTunnelPktsRxHi_Object = MibTableColumn
tmnxGreTunnelPktsRxHi = _TmnxGreTunnelPktsRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 6),
    _TmnxGreTunnelPktsRxHi_Type()
)
tmnxGreTunnelPktsRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelPktsRxHi.setStatus("obsolete")
_TmnxGreTunnelBytesTx_Type = Counter64
_TmnxGreTunnelBytesTx_Object = MibTableColumn
tmnxGreTunnelBytesTx = _TmnxGreTunnelBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 7),
    _TmnxGreTunnelBytesTx_Type()
)
tmnxGreTunnelBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesTx.setStatus("obsolete")
_TmnxGreTunnelBytesTxLo_Type = Counter32
_TmnxGreTunnelBytesTxLo_Object = MibTableColumn
tmnxGreTunnelBytesTxLo = _TmnxGreTunnelBytesTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 8),
    _TmnxGreTunnelBytesTxLo_Type()
)
tmnxGreTunnelBytesTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesTxLo.setStatus("obsolete")
_TmnxGreTunnelBytesTxHi_Type = Counter32
_TmnxGreTunnelBytesTxHi_Object = MibTableColumn
tmnxGreTunnelBytesTxHi = _TmnxGreTunnelBytesTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 9),
    _TmnxGreTunnelBytesTxHi_Type()
)
tmnxGreTunnelBytesTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesTxHi.setStatus("obsolete")
_TmnxGreTunnelBytesRx_Type = Counter64
_TmnxGreTunnelBytesRx_Object = MibTableColumn
tmnxGreTunnelBytesRx = _TmnxGreTunnelBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 10),
    _TmnxGreTunnelBytesRx_Type()
)
tmnxGreTunnelBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesRx.setStatus("obsolete")
_TmnxGreTunnelBytesRxLo_Type = Counter32
_TmnxGreTunnelBytesRxLo_Object = MibTableColumn
tmnxGreTunnelBytesRxLo = _TmnxGreTunnelBytesRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 11),
    _TmnxGreTunnelBytesRxLo_Type()
)
tmnxGreTunnelBytesRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesRxLo.setStatus("obsolete")
_TmnxGreTunnelBytesRxHi_Type = Counter32
_TmnxGreTunnelBytesRxHi_Object = MibTableColumn
tmnxGreTunnelBytesRxHi = _TmnxGreTunnelBytesRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 12),
    _TmnxGreTunnelBytesRxHi_Type()
)
tmnxGreTunnelBytesRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelBytesRxHi.setStatus("obsolete")
_TmnxGreTunnelTxErrors_Type = Counter32
_TmnxGreTunnelTxErrors_Object = MibTableColumn
tmnxGreTunnelTxErrors = _TmnxGreTunnelTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 13),
    _TmnxGreTunnelTxErrors_Type()
)
tmnxGreTunnelTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelTxErrors.setStatus("obsolete")
_TmnxGreTunnelRxErrors_Type = Counter32
_TmnxGreTunnelRxErrors_Object = MibTableColumn
tmnxGreTunnelRxErrors = _TmnxGreTunnelRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 14),
    _TmnxGreTunnelRxErrors_Type()
)
tmnxGreTunnelRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelRxErrors.setStatus("obsolete")
_TmnxGreTunnelKeyIgnoredRx_Type = Counter64
_TmnxGreTunnelKeyIgnoredRx_Object = MibTableColumn
tmnxGreTunnelKeyIgnoredRx = _TmnxGreTunnelKeyIgnoredRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 15),
    _TmnxGreTunnelKeyIgnoredRx_Type()
)
tmnxGreTunnelKeyIgnoredRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelKeyIgnoredRx.setStatus("obsolete")
_TmnxGreTunnelKeyIgnoredRxLo_Type = Counter32
_TmnxGreTunnelKeyIgnoredRxLo_Object = MibTableColumn
tmnxGreTunnelKeyIgnoredRxLo = _TmnxGreTunnelKeyIgnoredRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 16),
    _TmnxGreTunnelKeyIgnoredRxLo_Type()
)
tmnxGreTunnelKeyIgnoredRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelKeyIgnoredRxLo.setStatus("obsolete")
_TmnxGreTunnelKeyIgnoredRxHi_Type = Counter32
_TmnxGreTunnelKeyIgnoredRxHi_Object = MibTableColumn
tmnxGreTunnelKeyIgnoredRxHi = _TmnxGreTunnelKeyIgnoredRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 17),
    _TmnxGreTunnelKeyIgnoredRxHi_Type()
)
tmnxGreTunnelKeyIgnoredRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelKeyIgnoredRxHi.setStatus("obsolete")
_TmnxGreTunnelSeqIgnoredRx_Type = Counter64
_TmnxGreTunnelSeqIgnoredRx_Object = MibTableColumn
tmnxGreTunnelSeqIgnoredRx = _TmnxGreTunnelSeqIgnoredRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 18),
    _TmnxGreTunnelSeqIgnoredRx_Type()
)
tmnxGreTunnelSeqIgnoredRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelSeqIgnoredRx.setStatus("obsolete")
_TmnxGreTunnelSeqIgnoredRxLo_Type = Counter32
_TmnxGreTunnelSeqIgnoredRxLo_Object = MibTableColumn
tmnxGreTunnelSeqIgnoredRxLo = _TmnxGreTunnelSeqIgnoredRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 19),
    _TmnxGreTunnelSeqIgnoredRxLo_Type()
)
tmnxGreTunnelSeqIgnoredRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelSeqIgnoredRxLo.setStatus("obsolete")
_TmnxGreTunnelSeqIgnoredRxHi_Type = Counter32
_TmnxGreTunnelSeqIgnoredRxHi_Object = MibTableColumn
tmnxGreTunnelSeqIgnoredRxHi = _TmnxGreTunnelSeqIgnoredRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 20),
    _TmnxGreTunnelSeqIgnoredRxHi_Type()
)
tmnxGreTunnelSeqIgnoredRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelSeqIgnoredRxHi.setStatus("obsolete")
_TmnxGreTunnelVersUnsupRx_Type = Counter64
_TmnxGreTunnelVersUnsupRx_Object = MibTableColumn
tmnxGreTunnelVersUnsupRx = _TmnxGreTunnelVersUnsupRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 21),
    _TmnxGreTunnelVersUnsupRx_Type()
)
tmnxGreTunnelVersUnsupRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelVersUnsupRx.setStatus("obsolete")
_TmnxGreTunnelVersUnsupRxLo_Type = Counter32
_TmnxGreTunnelVersUnsupRxLo_Object = MibTableColumn
tmnxGreTunnelVersUnsupRxLo = _TmnxGreTunnelVersUnsupRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 22),
    _TmnxGreTunnelVersUnsupRxLo_Type()
)
tmnxGreTunnelVersUnsupRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelVersUnsupRxLo.setStatus("obsolete")
_TmnxGreTunnelVersUnsupRxHi_Type = Counter32
_TmnxGreTunnelVersUnsupRxHi_Object = MibTableColumn
tmnxGreTunnelVersUnsupRxHi = _TmnxGreTunnelVersUnsupRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 23),
    _TmnxGreTunnelVersUnsupRxHi_Type()
)
tmnxGreTunnelVersUnsupRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelVersUnsupRxHi.setStatus("obsolete")
_TmnxGreTunnelInvalidChksumRx_Type = Counter64
_TmnxGreTunnelInvalidChksumRx_Object = MibTableColumn
tmnxGreTunnelInvalidChksumRx = _TmnxGreTunnelInvalidChksumRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 24),
    _TmnxGreTunnelInvalidChksumRx_Type()
)
tmnxGreTunnelInvalidChksumRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelInvalidChksumRx.setStatus("obsolete")
_TmnxGreTunnelInvalidChksumRxLo_Type = Counter32
_TmnxGreTunnelInvalidChksumRxLo_Object = MibTableColumn
tmnxGreTunnelInvalidChksumRxLo = _TmnxGreTunnelInvalidChksumRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 25),
    _TmnxGreTunnelInvalidChksumRxLo_Type()
)
tmnxGreTunnelInvalidChksumRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelInvalidChksumRxLo.setStatus("obsolete")
_TmnxGreTunnelInvalidChksumRxHi_Type = Counter32
_TmnxGreTunnelInvalidChksumRxHi_Object = MibTableColumn
tmnxGreTunnelInvalidChksumRxHi = _TmnxGreTunnelInvalidChksumRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 26),
    _TmnxGreTunnelInvalidChksumRxHi_Type()
)
tmnxGreTunnelInvalidChksumRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelInvalidChksumRxHi.setStatus("obsolete")
_TmnxGreTunnelLoopsRx_Type = Counter64
_TmnxGreTunnelLoopsRx_Object = MibTableColumn
tmnxGreTunnelLoopsRx = _TmnxGreTunnelLoopsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 27),
    _TmnxGreTunnelLoopsRx_Type()
)
tmnxGreTunnelLoopsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelLoopsRx.setStatus("obsolete")
_TmnxGreTunnelLoopsRxLo_Type = Counter32
_TmnxGreTunnelLoopsRxLo_Object = MibTableColumn
tmnxGreTunnelLoopsRxLo = _TmnxGreTunnelLoopsRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 28),
    _TmnxGreTunnelLoopsRxLo_Type()
)
tmnxGreTunnelLoopsRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelLoopsRxLo.setStatus("obsolete")
_TmnxGreTunnelLoopsRxHi_Type = Counter32
_TmnxGreTunnelLoopsRxHi_Object = MibTableColumn
tmnxGreTunnelLoopsRxHi = _TmnxGreTunnelLoopsRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 29),
    _TmnxGreTunnelLoopsRxHi_Type()
)
tmnxGreTunnelLoopsRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelLoopsRxHi.setStatus("obsolete")
_TmnxGreTunnelTooBigTx_Type = Counter64
_TmnxGreTunnelTooBigTx_Object = MibTableColumn
tmnxGreTunnelTooBigTx = _TmnxGreTunnelTooBigTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 30),
    _TmnxGreTunnelTooBigTx_Type()
)
tmnxGreTunnelTooBigTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelTooBigTx.setStatus("obsolete")
_TmnxGreTunnelTooBigTxLo_Type = Counter32
_TmnxGreTunnelTooBigTxLo_Object = MibTableColumn
tmnxGreTunnelTooBigTxLo = _TmnxGreTunnelTooBigTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 31),
    _TmnxGreTunnelTooBigTxLo_Type()
)
tmnxGreTunnelTooBigTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelTooBigTxLo.setStatus("obsolete")
_TmnxGreTunnelTooBigTxHi_Type = Counter32
_TmnxGreTunnelTooBigTxHi_Object = MibTableColumn
tmnxGreTunnelTooBigTxHi = _TmnxGreTunnelTooBigTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 115, 1, 32),
    _TmnxGreTunnelTooBigTxHi_Type()
)
tmnxGreTunnelTooBigTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxGreTunnelTooBigTxHi.setStatus("obsolete")
_SapAtmVcRangeTable_Object = MibTable
sapAtmVcRangeTable = _SapAtmVcRangeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116)
)
if mibBuilder.loadTexts:
    sapAtmVcRangeTable.setStatus("current")
_SapAtmVcRangeEntry_Object = MibTableRow
sapAtmVcRangeEntry = _SapAtmVcRangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1)
)
sapAtmVcRangeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapAtmVcRangeIndex"),
)
if mibBuilder.loadTexts:
    sapAtmVcRangeEntry.setStatus("current")


class _SapAtmVcRangeIndex_Type(Unsigned32):
    """Custom type sapAtmVcRangeIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SapAtmVcRangeIndex_Type.__name__ = "Unsigned32"
_SapAtmVcRangeIndex_Object = MibTableColumn
sapAtmVcRangeIndex = _SapAtmVcRangeIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 1),
    _SapAtmVcRangeIndex_Type()
)
sapAtmVcRangeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapAtmVcRangeIndex.setStatus("current")
_SapAtmVcRangeRowStatus_Type = RowStatus
_SapAtmVcRangeRowStatus_Object = MibTableColumn
sapAtmVcRangeRowStatus = _SapAtmVcRangeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 2),
    _SapAtmVcRangeRowStatus_Type()
)
sapAtmVcRangeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAtmVcRangeRowStatus.setStatus("current")
_SapAtmVcRangeLastMgmtChange_Type = TimeStamp
_SapAtmVcRangeLastMgmtChange_Object = MibTableColumn
sapAtmVcRangeLastMgmtChange = _SapAtmVcRangeLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 3),
    _SapAtmVcRangeLastMgmtChange_Type()
)
sapAtmVcRangeLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmVcRangeLastMgmtChange.setStatus("current")
_SapAtmVcRangeVpiStart_Type = AtmVpIdentifier
_SapAtmVcRangeVpiStart_Object = MibTableColumn
sapAtmVcRangeVpiStart = _SapAtmVcRangeVpiStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 4),
    _SapAtmVcRangeVpiStart_Type()
)
sapAtmVcRangeVpiStart.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAtmVcRangeVpiStart.setStatus("current")
_SapAtmVcRangeVpiEnd_Type = AtmVpIdentifier
_SapAtmVcRangeVpiEnd_Object = MibTableColumn
sapAtmVcRangeVpiEnd = _SapAtmVcRangeVpiEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 5),
    _SapAtmVcRangeVpiEnd_Type()
)
sapAtmVcRangeVpiEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAtmVcRangeVpiEnd.setStatus("current")


class _SapAtmVcRangeVciStart_Type(AtmVcIdentifier):
    """Custom type sapAtmVcRangeVciStart based on AtmVcIdentifier"""
    subtypeSpec = AtmVcIdentifier.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SapAtmVcRangeVciStart_Type.__name__ = "AtmVcIdentifier"
_SapAtmVcRangeVciStart_Object = MibTableColumn
sapAtmVcRangeVciStart = _SapAtmVcRangeVciStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 6),
    _SapAtmVcRangeVciStart_Type()
)
sapAtmVcRangeVciStart.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAtmVcRangeVciStart.setStatus("current")


class _SapAtmVcRangeVciEnd_Type(AtmVcIdentifier):
    """Custom type sapAtmVcRangeVciEnd based on AtmVcIdentifier"""
    subtypeSpec = AtmVcIdentifier.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SapAtmVcRangeVciEnd_Type.__name__ = "AtmVcIdentifier"
_SapAtmVcRangeVciEnd_Object = MibTableColumn
sapAtmVcRangeVciEnd = _SapAtmVcRangeVciEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 116, 1, 7),
    _SapAtmVcRangeVciEnd_Type()
)
sapAtmVcRangeVciEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapAtmVcRangeVciEnd.setStatus("current")
_MsapAtmPlcyTable_Object = MibTable
msapAtmPlcyTable = _MsapAtmPlcyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117)
)
if mibBuilder.loadTexts:
    msapAtmPlcyTable.setStatus("current")
_MsapAtmPlcyEntry_Object = MibTableRow
msapAtmPlcyEntry = _MsapAtmPlcyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1)
)
if mibBuilder.loadTexts:
    msapAtmPlcyEntry.setStatus("current")
_MsapAtmPlcyLastChanged_Type = TimeStamp
_MsapAtmPlcyLastChanged_Object = MibTableColumn
msapAtmPlcyLastChanged = _MsapAtmPlcyLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1, 1),
    _MsapAtmPlcyLastChanged_Type()
)
msapAtmPlcyLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapAtmPlcyLastChanged.setStatus("current")


class _MsapAtmPlcyIngTrafficDescIndex_Type(AtmTrafficDescrParamIndex):
    """Custom type msapAtmPlcyIngTrafficDescIndex based on AtmTrafficDescrParamIndex"""
    defaultValue = 1

    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_MsapAtmPlcyIngTrafficDescIndex_Type.__name__ = "AtmTrafficDescrParamIndex"
_MsapAtmPlcyIngTrafficDescIndex_Object = MibTableColumn
msapAtmPlcyIngTrafficDescIndex = _MsapAtmPlcyIngTrafficDescIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1, 2),
    _MsapAtmPlcyIngTrafficDescIndex_Type()
)
msapAtmPlcyIngTrafficDescIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapAtmPlcyIngTrafficDescIndex.setStatus("current")


class _MsapAtmPlcyEgrTrafficDescIndex_Type(AtmTrafficDescrParamIndex):
    """Custom type msapAtmPlcyEgrTrafficDescIndex based on AtmTrafficDescrParamIndex"""
    defaultValue = 1

    subtypeSpec = AtmTrafficDescrParamIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_MsapAtmPlcyEgrTrafficDescIndex_Type.__name__ = "AtmTrafficDescrParamIndex"
_MsapAtmPlcyEgrTrafficDescIndex_Object = MibTableColumn
msapAtmPlcyEgrTrafficDescIndex = _MsapAtmPlcyEgrTrafficDescIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1, 3),
    _MsapAtmPlcyEgrTrafficDescIndex_Type()
)
msapAtmPlcyEgrTrafficDescIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapAtmPlcyEgrTrafficDescIndex.setStatus("current")


class _MsapAtmPlcyOamAlarmCellHandling_Type(ServiceAdminStatus):
    """Custom type msapAtmPlcyOamAlarmCellHandling based on ServiceAdminStatus"""
    defaultValue = 1


_MsapAtmPlcyOamAlarmCellHandling_Type.__name__ = "ServiceAdminStatus"
_MsapAtmPlcyOamAlarmCellHandling_Object = MibTableColumn
msapAtmPlcyOamAlarmCellHandling = _MsapAtmPlcyOamAlarmCellHandling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1, 4),
    _MsapAtmPlcyOamAlarmCellHandling_Type()
)
msapAtmPlcyOamAlarmCellHandling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapAtmPlcyOamAlarmCellHandling.setStatus("current")


class _MsapAtmPlcyOamPeriodicLoopback_Type(ServiceAdminStatus):
    """Custom type msapAtmPlcyOamPeriodicLoopback based on ServiceAdminStatus"""
    defaultValue = 2


_MsapAtmPlcyOamPeriodicLoopback_Type.__name__ = "ServiceAdminStatus"
_MsapAtmPlcyOamPeriodicLoopback_Object = MibTableColumn
msapAtmPlcyOamPeriodicLoopback = _MsapAtmPlcyOamPeriodicLoopback_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 117, 1, 5),
    _MsapAtmPlcyOamPeriodicLoopback_Type()
)
msapAtmPlcyOamPeriodicLoopback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    msapAtmPlcyOamPeriodicLoopback.setStatus("current")
_MsapAtmPlcyTblLastChgd_Type = TimeStamp
_MsapAtmPlcyTblLastChgd_Object = MibScalar
msapAtmPlcyTblLastChgd = _MsapAtmPlcyTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 118),
    _MsapAtmPlcyTblLastChgd_Type()
)
msapAtmPlcyTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msapAtmPlcyTblLastChgd.setStatus("current")
_SapEthCfmTblLastChanged_Type = TimeStamp
_SapEthCfmTblLastChanged_Object = MibScalar
sapEthCfmTblLastChanged = _SapEthCfmTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 119),
    _SapEthCfmTblLastChanged_Type()
)
sapEthCfmTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEthCfmTblLastChanged.setStatus("current")
_SapEthCfmTable_Object = MibTable
sapEthCfmTable = _SapEthCfmTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120)
)
if mibBuilder.loadTexts:
    sapEthCfmTable.setStatus("current")
_SapEthCfmEntry_Object = MibTableRow
sapEthCfmEntry = _SapEthCfmEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1)
)
sapEthCfmEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapEthCfmEntry.setStatus("current")
_SapEthCfmRowLastChanged_Type = TimeStamp
_SapEthCfmRowLastChanged_Object = MibTableColumn
sapEthCfmRowLastChanged = _SapEthCfmRowLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 1),
    _SapEthCfmRowLastChanged_Type()
)
sapEthCfmRowLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEthCfmRowLastChanged.setStatus("current")


class _SapEthCfmTunnelFaultNotification_Type(Integer32):
    """Custom type sapEthCfmTunnelFaultNotification based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("accept", 1),
          ("ignore", 2))
    )


_SapEthCfmTunnelFaultNotification_Type.__name__ = "Integer32"
_SapEthCfmTunnelFaultNotification_Object = MibTableColumn
sapEthCfmTunnelFaultNotification = _SapEthCfmTunnelFaultNotification_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 2),
    _SapEthCfmTunnelFaultNotification_Type()
)
sapEthCfmTunnelFaultNotification.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmTunnelFaultNotification.setStatus("current")
_SapEthCfmMcLagPropHoldTimeRemain_Type = Unsigned32
_SapEthCfmMcLagPropHoldTimeRemain_Object = MibTableColumn
sapEthCfmMcLagPropHoldTimeRemain = _SapEthCfmMcLagPropHoldTimeRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 3),
    _SapEthCfmMcLagPropHoldTimeRemain_Type()
)
sapEthCfmMcLagPropHoldTimeRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEthCfmMcLagPropHoldTimeRemain.setStatus("current")
if mibBuilder.loadTexts:
    sapEthCfmMcLagPropHoldTimeRemain.setUnits("seconds")


class _SapEthCfmAisEnable_Type(TruthValue):
    """Custom type sapEthCfmAisEnable based on TruthValue"""
    defaultValue = 2


_SapEthCfmAisEnable_Type.__name__ = "TruthValue"
_SapEthCfmAisEnable_Object = MibTableColumn
sapEthCfmAisEnable = _SapEthCfmAisEnable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 4),
    _SapEthCfmAisEnable_Type()
)
sapEthCfmAisEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmAisEnable.setStatus("current")


class _SapEthCfmVMepFilter_Type(TruthValue):
    """Custom type sapEthCfmVMepFilter based on TruthValue"""
    defaultValue = 2


_SapEthCfmVMepFilter_Type.__name__ = "TruthValue"
_SapEthCfmVMepFilter_Object = MibTableColumn
sapEthCfmVMepFilter = _SapEthCfmVMepFilter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 5),
    _SapEthCfmVMepFilter_Type()
)
sapEthCfmVMepFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmVMepFilter.setStatus("current")


class _SapEthCfmSquelchIngress_Type(Bits):
    """Custom type sapEthCfmSquelchIngress based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("level0", 0),
          ("level1", 1),
          ("level2", 2),
          ("level3", 3),
          ("level4", 4),
          ("level5", 5),
          ("level6", 6),
          ("level7", 7))
    )

_SapEthCfmSquelchIngress_Type.__name__ = "Bits"
_SapEthCfmSquelchIngress_Object = MibTableColumn
sapEthCfmSquelchIngress = _SapEthCfmSquelchIngress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 6),
    _SapEthCfmSquelchIngress_Type()
)
sapEthCfmSquelchIngress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmSquelchIngress.setStatus("current")


class _SapEthCfmCollectLmmStats_Type(TruthValue):
    """Custom type sapEthCfmCollectLmmStats based on TruthValue"""
    defaultValue = 2


_SapEthCfmCollectLmmStats_Type.__name__ = "TruthValue"
_SapEthCfmCollectLmmStats_Object = MibTableColumn
sapEthCfmCollectLmmStats = _SapEthCfmCollectLmmStats_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 7),
    _SapEthCfmCollectLmmStats_Type()
)
sapEthCfmCollectLmmStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmCollectLmmStats.setStatus("current")


class _SapEthCfmCollLmmFcSts_Type(TFCSet):
    """Custom type sapEthCfmCollLmmFcSts based on TFCSet"""
    defaultBinValue = "0"


_SapEthCfmCollLmmFcSts_Type.__name__ = "TFCSet"
_SapEthCfmCollLmmFcSts_Object = MibTableColumn
sapEthCfmCollLmmFcSts = _SapEthCfmCollLmmFcSts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 8),
    _SapEthCfmCollLmmFcSts_Type()
)
sapEthCfmCollLmmFcSts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmCollLmmFcSts.setStatus("current")


class _SapEthCfmCollLmmFcStsInP_Type(TFCSet):
    """Custom type sapEthCfmCollLmmFcStsInP based on TFCSet"""
    defaultBinValue = "0"


_SapEthCfmCollLmmFcStsInP_Type.__name__ = "TFCSet"
_SapEthCfmCollLmmFcStsInP_Object = MibTableColumn
sapEthCfmCollLmmFcStsInP = _SapEthCfmCollLmmFcStsInP_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 9),
    _SapEthCfmCollLmmFcStsInP_Type()
)
sapEthCfmCollLmmFcStsInP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmCollLmmFcStsInP.setStatus("current")


class _SapEthCfmSquelchIngressCtag_Type(Bits):
    """Custom type sapEthCfmSquelchIngressCtag based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("level0", 0),
          ("level1", 1),
          ("level2", 2),
          ("level3", 3),
          ("level4", 4),
          ("level5", 5),
          ("level6", 6),
          ("level7", 7))
    )

_SapEthCfmSquelchIngressCtag_Type.__name__ = "Bits"
_SapEthCfmSquelchIngressCtag_Object = MibTableColumn
sapEthCfmSquelchIngressCtag = _SapEthCfmSquelchIngressCtag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 120, 1, 10),
    _SapEthCfmSquelchIngressCtag_Type()
)
sapEthCfmSquelchIngressCtag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthCfmSquelchIngressCtag.setStatus("current")
_SapEgrEncapGroupTblLastChgd_Type = TimeStamp
_SapEgrEncapGroupTblLastChgd_Object = MibScalar
sapEgrEncapGroupTblLastChgd = _SapEgrEncapGroupTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 121),
    _SapEgrEncapGroupTblLastChgd_Type()
)
sapEgrEncapGroupTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEncapGroupTblLastChgd.setStatus("current")
_SapEgrEncapGroupTable_Object = MibTable
sapEgrEncapGroupTable = _SapEgrEncapGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122)
)
if mibBuilder.loadTexts:
    sapEgrEncapGroupTable.setStatus("current")
_SapEgrEncapGroupEntry_Object = MibTableRow
sapEgrEncapGroupEntry = _SapEgrEncapGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1)
)
sapEgrEncapGroupEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
)
if mibBuilder.loadTexts:
    sapEgrEncapGroupEntry.setStatus("current")
_SapEgrEncapGroupName_Type = TNamedItem
_SapEgrEncapGroupName_Object = MibTableColumn
sapEgrEncapGroupName = _SapEgrEncapGroupName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 1),
    _SapEgrEncapGroupName_Type()
)
sapEgrEncapGroupName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEncapGroupName.setStatus("current")
_SapEgrEncapGroupRowStatus_Type = RowStatus
_SapEgrEncapGroupRowStatus_Object = MibTableColumn
sapEgrEncapGroupRowStatus = _SapEgrEncapGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 2),
    _SapEgrEncapGroupRowStatus_Type()
)
sapEgrEncapGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupRowStatus.setStatus("current")
_SapEgrEncapGroupLastChanged_Type = TimeStamp
_SapEgrEncapGroupLastChanged_Object = MibTableColumn
sapEgrEncapGroupLastChanged = _SapEgrEncapGroupLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 3),
    _SapEgrEncapGroupLastChanged_Type()
)
sapEgrEncapGroupLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEncapGroupLastChanged.setStatus("current")
_SapEgrEncapGroupType_Type = TSapEgrEncapGroupType
_SapEgrEncapGroupType_Object = MibTableColumn
sapEgrEncapGroupType = _SapEgrEncapGroupType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 4),
    _SapEgrEncapGroupType_Type()
)
sapEgrEncapGroupType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupType.setStatus("current")


class _SapEgrEncapGroupQosPerMember_Type(TruthValue):
    """Custom type sapEgrEncapGroupQosPerMember based on TruthValue"""
    defaultValue = 2


_SapEgrEncapGroupQosPerMember_Type.__name__ = "TruthValue"
_SapEgrEncapGroupQosPerMember_Object = MibTableColumn
sapEgrEncapGroupQosPerMember = _SapEgrEncapGroupQosPerMember_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 5),
    _SapEgrEncapGroupQosPerMember_Type()
)
sapEgrEncapGroupQosPerMember.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupQosPerMember.setStatus("current")


class _SapEgrEncapGroupQosPolicyId_Type(TSapEgrEncapGrpQosPolicyIdOrZero):
    """Custom type sapEgrEncapGroupQosPolicyId based on TSapEgrEncapGrpQosPolicyIdOrZero"""
    defaultValue = 0


_SapEgrEncapGroupQosPolicyId_Type.__name__ = "TSapEgrEncapGrpQosPolicyIdOrZero"
_SapEgrEncapGroupQosPolicyId_Object = MibTableColumn
sapEgrEncapGroupQosPolicyId = _SapEgrEncapGroupQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 6),
    _SapEgrEncapGroupQosPolicyId_Type()
)
sapEgrEncapGroupQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupQosPolicyId.setStatus("current")


class _SapEgrEncapGroupSchedulerPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapEgrEncapGroupSchedulerPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgrEncapGroupSchedulerPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrEncapGroupSchedulerPolicy_Object = MibTableColumn
sapEgrEncapGroupSchedulerPolicy = _SapEgrEncapGroupSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 7),
    _SapEgrEncapGroupSchedulerPolicy_Type()
)
sapEgrEncapGroupSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupSchedulerPolicy.setStatus("current")


class _SapEgrEncapGroupAggRateLimit_Type(TPortSchedulerAggRateLimitPIR):
    """Custom type sapEgrEncapGroupAggRateLimit based on TPortSchedulerAggRateLimitPIR"""
    defaultValue = -1


_SapEgrEncapGroupAggRateLimit_Type.__name__ = "TPortSchedulerAggRateLimitPIR"
_SapEgrEncapGroupAggRateLimit_Object = MibTableColumn
sapEgrEncapGroupAggRateLimit = _SapEgrEncapGroupAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 8),
    _SapEgrEncapGroupAggRateLimit_Type()
)
sapEgrEncapGroupAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    sapEgrEncapGroupAggRateLimit.setUnits("kilobps")


class _SapEgrEncapGrpFrameBasedAccnt_Type(TruthValue):
    """Custom type sapEgrEncapGrpFrameBasedAccnt based on TruthValue"""
    defaultValue = 2


_SapEgrEncapGrpFrameBasedAccnt_Type.__name__ = "TruthValue"
_SapEgrEncapGrpFrameBasedAccnt_Object = MibTableColumn
sapEgrEncapGrpFrameBasedAccnt = _SapEgrEncapGrpFrameBasedAccnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 9),
    _SapEgrEncapGrpFrameBasedAccnt_Type()
)
sapEgrEncapGrpFrameBasedAccnt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGrpFrameBasedAccnt.setStatus("current")


class _SapEgrEncapGroupAggRateLUB_Type(TruthValue):
    """Custom type sapEgrEncapGroupAggRateLUB based on TruthValue"""
    defaultValue = 2


_SapEgrEncapGroupAggRateLUB_Type.__name__ = "TruthValue"
_SapEgrEncapGroupAggRateLUB_Object = MibTableColumn
sapEgrEncapGroupAggRateLUB = _SapEgrEncapGroupAggRateLUB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 10),
    _SapEgrEncapGroupAggRateLUB_Type()
)
sapEgrEncapGroupAggRateLUB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGroupAggRateLUB.setStatus("current")


class _SapEgrEncapGrpAggRateLimitHi_Type(TmnxQosRateHigh32):
    """Custom type sapEgrEncapGrpAggRateLimitHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_SapEgrEncapGrpAggRateLimitHi_Type.__name__ = "TmnxQosRateHigh32"
_SapEgrEncapGrpAggRateLimitHi_Object = MibTableColumn
sapEgrEncapGrpAggRateLimitHi = _SapEgrEncapGrpAggRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 12),
    _SapEgrEncapGrpAggRateLimitHi_Type()
)
sapEgrEncapGrpAggRateLimitHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGrpAggRateLimitHi.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrEncapGrpAggRateLimitHi.setUnits("kilobps")


class _SapEgrEncapGrpAggRateLimit_Type(TmnxQosRateLow32):
    """Custom type sapEgrEncapGrpAggRateLimit based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_SapEgrEncapGrpAggRateLimit_Type.__name__ = "TmnxQosRateLow32"
_SapEgrEncapGrpAggRateLimit_Object = MibTableColumn
sapEgrEncapGrpAggRateLimit = _SapEgrEncapGrpAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 122, 1, 13),
    _SapEgrEncapGrpAggRateLimit_Type()
)
sapEgrEncapGrpAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrEncapGrpAggRateLimit.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrEncapGrpAggRateLimit.setUnits("kilobps")
_SapEgrEncapGrpMemActTblLastChgd_Type = TimeStamp
_SapEgrEncapGrpMemActTblLastChgd_Object = MibScalar
sapEgrEncapGrpMemActTblLastChgd = _SapEgrEncapGrpMemActTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 123),
    _SapEgrEncapGrpMemActTblLastChgd_Type()
)
sapEgrEncapGrpMemActTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemActTblLastChgd.setStatus("current")
_SapEgrEncapGrpMemberActTable_Object = MibTable
sapEgrEncapGrpMemberActTable = _SapEgrEncapGrpMemberActTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 124)
)
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemberActTable.setStatus("current")
_SapEgrEncapGrpMemberActEntry_Object = MibTableRow
sapEgrEncapGrpMemberActEntry = _SapEgrEncapGrpMemberActEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 124, 1)
)
sapEgrEncapGrpMemberActEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
)
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemberActEntry.setStatus("current")
_SapEgrEncapGroupBeginMember_Type = SvcISID
_SapEgrEncapGroupBeginMember_Object = MibTableColumn
sapEgrEncapGroupBeginMember = _SapEgrEncapGroupBeginMember_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 124, 1, 1),
    _SapEgrEncapGroupBeginMember_Type()
)
sapEgrEncapGroupBeginMember.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapEgrEncapGroupBeginMember.setStatus("current")
_SapEgrEncapGroupEndMember_Type = SvcISID
_SapEgrEncapGroupEndMember_Object = MibTableColumn
sapEgrEncapGroupEndMember = _SapEgrEncapGroupEndMember_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 124, 1, 2),
    _SapEgrEncapGroupEndMember_Type()
)
sapEgrEncapGroupEndMember.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapEgrEncapGroupEndMember.setStatus("current")
_SapEgrEncapGroupMemberAction_Type = TSapEgrEncapGroupActionType
_SapEgrEncapGroupMemberAction_Object = MibTableColumn
sapEgrEncapGroupMemberAction = _SapEgrEncapGroupMemberAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 124, 1, 3),
    _SapEgrEncapGroupMemberAction_Type()
)
sapEgrEncapGroupMemberAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapEgrEncapGroupMemberAction.setStatus("current")
_SapEgrEncapGrpMemberTable_Object = MibTable
sapEgrEncapGrpMemberTable = _SapEgrEncapGrpMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 126)
)
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemberTable.setStatus("current")
_SapEgrEncapGrpMemberEntry_Object = MibTableRow
sapEgrEncapGrpMemberEntry = _SapEgrEncapGrpMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 126, 1)
)
sapEgrEncapGrpMemberEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGrpMember"),
)
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemberEntry.setStatus("current")


class _SapEgrEncapGrpMember_Type(SvcISID):
    """Custom type sapEgrEncapGrpMember based on SvcISID"""
    subtypeSpec = SvcISID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_SapEgrEncapGrpMember_Type.__name__ = "SvcISID"
_SapEgrEncapGrpMember_Object = MibTableColumn
sapEgrEncapGrpMember = _SapEgrEncapGrpMember_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 126, 1, 1),
    _SapEgrEncapGrpMember_Type()
)
sapEgrEncapGrpMember.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEncapGrpMember.setStatus("current")
_SapEgrEncapGrpRangeEndId_Type = SvcISID
_SapEgrEncapGrpRangeEndId_Object = MibTableColumn
sapEgrEncapGrpRangeEndId = _SapEgrEncapGrpRangeEndId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 126, 1, 2),
    _SapEgrEncapGrpRangeEndId_Type()
)
sapEgrEncapGrpRangeEndId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEncapGrpRangeEndId.setStatus("current")
_SapEgrEncapGrpMemberLastChanged_Type = TimeStamp
_SapEgrEncapGrpMemberLastChanged_Object = MibTableColumn
sapEgrEncapGrpMemberLastChanged = _SapEgrEncapGrpMemberLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 126, 1, 3),
    _SapEgrEncapGrpMemberLastChanged_Type()
)
sapEgrEncapGrpMemberLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEncapGrpMemberLastChanged.setStatus("current")
_SapAtmPppStatsTable_Object = MibTable
sapAtmPppStatsTable = _SapAtmPppStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 127)
)
if mibBuilder.loadTexts:
    sapAtmPppStatsTable.setStatus("current")
_SapAtmPppStatsEntry_Object = MibTableRow
sapAtmPppStatsEntry = _SapAtmPppStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 127, 1)
)
sapAtmPppStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapAtmPppStatsEntry.setStatus("current")
_SapAtmPppStatsRxPackets_Type = Counter32
_SapAtmPppStatsRxPackets_Object = MibTableColumn
sapAtmPppStatsRxPackets = _SapAtmPppStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 127, 1, 1),
    _SapAtmPppStatsRxPackets_Type()
)
sapAtmPppStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmPppStatsRxPackets.setStatus("current")
_SapAtmPppStatsRxDropped_Type = Counter32
_SapAtmPppStatsRxDropped_Object = MibTableColumn
sapAtmPppStatsRxDropped = _SapAtmPppStatsRxDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 127, 1, 2),
    _SapAtmPppStatsRxDropped_Type()
)
sapAtmPppStatsRxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmPppStatsRxDropped.setStatus("current")
_SapAtmPppStatsTxPackets_Type = Counter32
_SapAtmPppStatsTxPackets_Object = MibTableColumn
sapAtmPppStatsTxPackets = _SapAtmPppStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 127, 1, 3),
    _SapAtmPppStatsTxPackets_Type()
)
sapAtmPppStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapAtmPppStatsTxPackets.setStatus("current")
_TmnxSapGlobalObjs_ObjectIdentity = ObjectIdentity
tmnxSapGlobalObjs = _TmnxSapGlobalObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 128)
)
_TmnxSapGreTunnelCount_Type = Gauge32
_TmnxSapGreTunnelCount_Object = MibScalar
tmnxSapGreTunnelCount = _TmnxSapGreTunnelCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 128, 1),
    _TmnxSapGreTunnelCount_Type()
)
tmnxSapGreTunnelCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapGreTunnelCount.setStatus("current")
_SapEgrEGBaseStTable_Object = MibTable
sapEgrEGBaseStTable = _SapEgrEGBaseStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129)
)
if mibBuilder.loadTexts:
    sapEgrEGBaseStTable.setStatus("current")
_SapEgrEGBaseStEntry_Object = MibTableRow
sapEgrEGBaseStEntry = _SapEgrEGBaseStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1)
)
sapEgrEGBaseStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
)
if mibBuilder.loadTexts:
    sapEgrEGBaseStEntry.setStatus("current")
_SapEgrEGBaseStLastClearedTime_Type = TimeStamp
_SapEgrEGBaseStLastClearedTime_Object = MibTableColumn
sapEgrEGBaseStLastClearedTime = _SapEgrEGBaseStLastClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 1),
    _SapEgrEGBaseStLastClearedTime_Type()
)
sapEgrEGBaseStLastClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStLastClearedTime.setStatus("current")
_SapEgrEGBaseStCustId_Type = TmnxCustId
_SapEgrEGBaseStCustId_Object = MibTableColumn
sapEgrEGBaseStCustId = _SapEgrEGBaseStCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 2),
    _SapEgrEGBaseStCustId_Type()
)
sapEgrEGBaseStCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStCustId.setStatus("current")
_SapEgrEGBaseStQcDpdInPfPkts_Type = Counter64
_SapEgrEGBaseStQcDpdInPfPkts_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfPkts = _SapEgrEGBaseStQcDpdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 3),
    _SapEgrEGBaseStQcDpdInPfPkts_Type()
)
sapEgrEGBaseStQcDpdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfPkts.setStatus("current")
_SapEgrEGBaseStQcDpdInPfPktsL_Type = Counter32
_SapEgrEGBaseStQcDpdInPfPktsL_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfPktsL = _SapEgrEGBaseStQcDpdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 4),
    _SapEgrEGBaseStQcDpdInPfPktsL_Type()
)
sapEgrEGBaseStQcDpdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfPktsL.setStatus("current")
_SapEgrEGBaseStQcDpdInPfPktsH_Type = Counter32
_SapEgrEGBaseStQcDpdInPfPktsH_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfPktsH = _SapEgrEGBaseStQcDpdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 5),
    _SapEgrEGBaseStQcDpdInPfPktsH_Type()
)
sapEgrEGBaseStQcDpdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfPktsH.setStatus("current")
_SapEgrEGBaseStQcDpdInPfOcts_Type = Counter64
_SapEgrEGBaseStQcDpdInPfOcts_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfOcts = _SapEgrEGBaseStQcDpdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 6),
    _SapEgrEGBaseStQcDpdInPfOcts_Type()
)
sapEgrEGBaseStQcDpdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfOcts.setStatus("current")
_SapEgrEGBaseStQcDpdInPfOctsL_Type = Counter32
_SapEgrEGBaseStQcDpdInPfOctsL_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfOctsL = _SapEgrEGBaseStQcDpdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 7),
    _SapEgrEGBaseStQcDpdInPfOctsL_Type()
)
sapEgrEGBaseStQcDpdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfOctsL.setStatus("current")
_SapEgrEGBaseStQcDpdInPfOctsH_Type = Counter32
_SapEgrEGBaseStQcDpdInPfOctsH_Object = MibTableColumn
sapEgrEGBaseStQcDpdInPfOctsH = _SapEgrEGBaseStQcDpdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 8),
    _SapEgrEGBaseStQcDpdInPfOctsH_Type()
)
sapEgrEGBaseStQcDpdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdInPfOctsH.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfPkts_Type = Counter64
_SapEgrEGBaseStQcDpdOutPfPkts_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfPkts = _SapEgrEGBaseStQcDpdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 9),
    _SapEgrEGBaseStQcDpdOutPfPkts_Type()
)
sapEgrEGBaseStQcDpdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfPkts.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfPktsL_Type = Counter32
_SapEgrEGBaseStQcDpdOutPfPktsL_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfPktsL = _SapEgrEGBaseStQcDpdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 10),
    _SapEgrEGBaseStQcDpdOutPfPktsL_Type()
)
sapEgrEGBaseStQcDpdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfPktsL.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfPktsH_Type = Counter32
_SapEgrEGBaseStQcDpdOutPfPktsH_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfPktsH = _SapEgrEGBaseStQcDpdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 11),
    _SapEgrEGBaseStQcDpdOutPfPktsH_Type()
)
sapEgrEGBaseStQcDpdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfPktsH.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfOcts_Type = Counter64
_SapEgrEGBaseStQcDpdOutPfOcts_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfOcts = _SapEgrEGBaseStQcDpdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 12),
    _SapEgrEGBaseStQcDpdOutPfOcts_Type()
)
sapEgrEGBaseStQcDpdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfOcts.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfOctsL_Type = Counter32
_SapEgrEGBaseStQcDpdOutPfOctsL_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfOctsL = _SapEgrEGBaseStQcDpdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 13),
    _SapEgrEGBaseStQcDpdOutPfOctsL_Type()
)
sapEgrEGBaseStQcDpdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfOctsL.setStatus("current")
_SapEgrEGBaseStQcDpdOutPfOctsH_Type = Counter32
_SapEgrEGBaseStQcDpdOutPfOctsH_Object = MibTableColumn
sapEgrEGBaseStQcDpdOutPfOctsH = _SapEgrEGBaseStQcDpdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 14),
    _SapEgrEGBaseStQcDpdOutPfOctsH_Type()
)
sapEgrEGBaseStQcDpdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcDpdOutPfOctsH.setStatus("current")
_SapEgrEGBaseStQcFwdInPfPkts_Type = Counter64
_SapEgrEGBaseStQcFwdInPfPkts_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfPkts = _SapEgrEGBaseStQcFwdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 15),
    _SapEgrEGBaseStQcFwdInPfPkts_Type()
)
sapEgrEGBaseStQcFwdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfPkts.setStatus("current")
_SapEgrEGBaseStQcFwdInPfPktsL_Type = Counter32
_SapEgrEGBaseStQcFwdInPfPktsL_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfPktsL = _SapEgrEGBaseStQcFwdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 16),
    _SapEgrEGBaseStQcFwdInPfPktsL_Type()
)
sapEgrEGBaseStQcFwdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfPktsL.setStatus("current")
_SapEgrEGBaseStQcFwdInPfPktsH_Type = Counter32
_SapEgrEGBaseStQcFwdInPfPktsH_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfPktsH = _SapEgrEGBaseStQcFwdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 17),
    _SapEgrEGBaseStQcFwdInPfPktsH_Type()
)
sapEgrEGBaseStQcFwdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfPktsH.setStatus("current")
_SapEgrEGBaseStQcFwdInPfOcts_Type = Counter64
_SapEgrEGBaseStQcFwdInPfOcts_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfOcts = _SapEgrEGBaseStQcFwdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 18),
    _SapEgrEGBaseStQcFwdInPfOcts_Type()
)
sapEgrEGBaseStQcFwdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfOcts.setStatus("current")
_SapEgrEGBaseStQcFwdInPfOctsL_Type = Counter32
_SapEgrEGBaseStQcFwdInPfOctsL_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfOctsL = _SapEgrEGBaseStQcFwdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 19),
    _SapEgrEGBaseStQcFwdInPfOctsL_Type()
)
sapEgrEGBaseStQcFwdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfOctsL.setStatus("current")
_SapEgrEGBaseStQcFwdInPfOctsH_Type = Counter32
_SapEgrEGBaseStQcFwdInPfOctsH_Object = MibTableColumn
sapEgrEGBaseStQcFwdInPfOctsH = _SapEgrEGBaseStQcFwdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 20),
    _SapEgrEGBaseStQcFwdInPfOctsH_Type()
)
sapEgrEGBaseStQcFwdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdInPfOctsH.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfPkts_Type = Counter64
_SapEgrEGBaseStQcFwdOutPfPkts_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfPkts = _SapEgrEGBaseStQcFwdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 21),
    _SapEgrEGBaseStQcFwdOutPfPkts_Type()
)
sapEgrEGBaseStQcFwdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfPkts.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfPktsL_Type = Counter32
_SapEgrEGBaseStQcFwdOutPfPktsL_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfPktsL = _SapEgrEGBaseStQcFwdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 22),
    _SapEgrEGBaseStQcFwdOutPfPktsL_Type()
)
sapEgrEGBaseStQcFwdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfPktsL.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfPktsH_Type = Counter32
_SapEgrEGBaseStQcFwdOutPfPktsH_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfPktsH = _SapEgrEGBaseStQcFwdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 23),
    _SapEgrEGBaseStQcFwdOutPfPktsH_Type()
)
sapEgrEGBaseStQcFwdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfPktsH.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfOcts_Type = Counter64
_SapEgrEGBaseStQcFwdOutPfOcts_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfOcts = _SapEgrEGBaseStQcFwdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 24),
    _SapEgrEGBaseStQcFwdOutPfOcts_Type()
)
sapEgrEGBaseStQcFwdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfOcts.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfOctsL_Type = Counter32
_SapEgrEGBaseStQcFwdOutPfOctsL_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfOctsL = _SapEgrEGBaseStQcFwdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 25),
    _SapEgrEGBaseStQcFwdOutPfOctsL_Type()
)
sapEgrEGBaseStQcFwdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfOctsL.setStatus("current")
_SapEgrEGBaseStQcFwdOutPfOctsH_Type = Counter32
_SapEgrEGBaseStQcFwdOutPfOctsH_Object = MibTableColumn
sapEgrEGBaseStQcFwdOutPfOctsH = _SapEgrEGBaseStQcFwdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 129, 1, 26),
    _SapEgrEGBaseStQcFwdOutPfOctsH_Type()
)
sapEgrEGBaseStQcFwdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGBaseStQcFwdOutPfOctsH.setStatus("current")
_SapEgrEGMbrBaseStTable_Object = MibTable
sapEgrEGMbrBaseStTable = _SapEgrEGMbrBaseStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130)
)
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStTable.setStatus("current")
_SapEgrEGMbrBaseStEntry_Object = MibTableRow
sapEgrEGMbrBaseStEntry = _SapEgrEGMbrBaseStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1)
)
sapEgrEGMbrBaseStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGrpMember"),
)
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStEntry.setStatus("current")
_SapEgrEGMbrBaseStLstClearedTime_Type = TimeStamp
_SapEgrEGMbrBaseStLstClearedTime_Object = MibTableColumn
sapEgrEGMbrBaseStLstClearedTime = _SapEgrEGMbrBaseStLstClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 1),
    _SapEgrEGMbrBaseStLstClearedTime_Type()
)
sapEgrEGMbrBaseStLstClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStLstClearedTime.setStatus("current")
_SapEgrEGMbrBaseStCustId_Type = TmnxCustId
_SapEgrEGMbrBaseStCustId_Object = MibTableColumn
sapEgrEGMbrBaseStCustId = _SapEgrEGMbrBaseStCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 2),
    _SapEgrEGMbrBaseStCustId_Type()
)
sapEgrEGMbrBaseStCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStCustId.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfPkts_Type = Counter64
_SapEgrEGMbrBaseStQcDpdInPfPkts_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfPkts = _SapEgrEGMbrBaseStQcDpdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 3),
    _SapEgrEGMbrBaseStQcDpdInPfPkts_Type()
)
sapEgrEGMbrBaseStQcDpdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfPkts.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfPktsL_Type = Counter32
_SapEgrEGMbrBaseStQcDpdInPfPktsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfPktsL = _SapEgrEGMbrBaseStQcDpdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 4),
    _SapEgrEGMbrBaseStQcDpdInPfPktsL_Type()
)
sapEgrEGMbrBaseStQcDpdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfPktsL.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfPktsH_Type = Counter32
_SapEgrEGMbrBaseStQcDpdInPfPktsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfPktsH = _SapEgrEGMbrBaseStQcDpdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 5),
    _SapEgrEGMbrBaseStQcDpdInPfPktsH_Type()
)
sapEgrEGMbrBaseStQcDpdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfPktsH.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfOcts_Type = Counter64
_SapEgrEGMbrBaseStQcDpdInPfOcts_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfOcts = _SapEgrEGMbrBaseStQcDpdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 6),
    _SapEgrEGMbrBaseStQcDpdInPfOcts_Type()
)
sapEgrEGMbrBaseStQcDpdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfOcts.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfOctsL_Type = Counter32
_SapEgrEGMbrBaseStQcDpdInPfOctsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfOctsL = _SapEgrEGMbrBaseStQcDpdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 7),
    _SapEgrEGMbrBaseStQcDpdInPfOctsL_Type()
)
sapEgrEGMbrBaseStQcDpdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfOctsL.setStatus("current")
_SapEgrEGMbrBaseStQcDpdInPfOctsH_Type = Counter32
_SapEgrEGMbrBaseStQcDpdInPfOctsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdInPfOctsH = _SapEgrEGMbrBaseStQcDpdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 8),
    _SapEgrEGMbrBaseStQcDpdInPfOctsH_Type()
)
sapEgrEGMbrBaseStQcDpdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdInPfOctsH.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfPkts_Type = Counter64
_SapEgrEGMbrBaseStQcDpdOutPfPkts_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfPkts = _SapEgrEGMbrBaseStQcDpdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 9),
    _SapEgrEGMbrBaseStQcDpdOutPfPkts_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfPkts.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfPktsL_Type = Counter32
_SapEgrEGMbrBaseStQcDpdOutPfPktsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfPktsL = _SapEgrEGMbrBaseStQcDpdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 10),
    _SapEgrEGMbrBaseStQcDpdOutPfPktsL_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfPktsL.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfPktsH_Type = Counter32
_SapEgrEGMbrBaseStQcDpdOutPfPktsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfPktsH = _SapEgrEGMbrBaseStQcDpdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 11),
    _SapEgrEGMbrBaseStQcDpdOutPfPktsH_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfPktsH.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfOcts_Type = Counter64
_SapEgrEGMbrBaseStQcDpdOutPfOcts_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfOcts = _SapEgrEGMbrBaseStQcDpdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 12),
    _SapEgrEGMbrBaseStQcDpdOutPfOcts_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfOcts.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfOctsL_Type = Counter32
_SapEgrEGMbrBaseStQcDpdOutPfOctsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfOctsL = _SapEgrEGMbrBaseStQcDpdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 13),
    _SapEgrEGMbrBaseStQcDpdOutPfOctsL_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfOctsL.setStatus("current")
_SapEgrEGMbrBaseStQcDpdOutPfOctsH_Type = Counter32
_SapEgrEGMbrBaseStQcDpdOutPfOctsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcDpdOutPfOctsH = _SapEgrEGMbrBaseStQcDpdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 14),
    _SapEgrEGMbrBaseStQcDpdOutPfOctsH_Type()
)
sapEgrEGMbrBaseStQcDpdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcDpdOutPfOctsH.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfPkts_Type = Counter64
_SapEgrEGMbrBaseStQcFwdInPfPkts_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfPkts = _SapEgrEGMbrBaseStQcFwdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 15),
    _SapEgrEGMbrBaseStQcFwdInPfPkts_Type()
)
sapEgrEGMbrBaseStQcFwdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfPkts.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfPktsL_Type = Counter32
_SapEgrEGMbrBaseStQcFwdInPfPktsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfPktsL = _SapEgrEGMbrBaseStQcFwdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 16),
    _SapEgrEGMbrBaseStQcFwdInPfPktsL_Type()
)
sapEgrEGMbrBaseStQcFwdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfPktsL.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfPktsH_Type = Counter32
_SapEgrEGMbrBaseStQcFwdInPfPktsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfPktsH = _SapEgrEGMbrBaseStQcFwdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 17),
    _SapEgrEGMbrBaseStQcFwdInPfPktsH_Type()
)
sapEgrEGMbrBaseStQcFwdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfPktsH.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfOcts_Type = Counter64
_SapEgrEGMbrBaseStQcFwdInPfOcts_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfOcts = _SapEgrEGMbrBaseStQcFwdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 18),
    _SapEgrEGMbrBaseStQcFwdInPfOcts_Type()
)
sapEgrEGMbrBaseStQcFwdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfOcts.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfOctsL_Type = Counter32
_SapEgrEGMbrBaseStQcFwdInPfOctsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfOctsL = _SapEgrEGMbrBaseStQcFwdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 19),
    _SapEgrEGMbrBaseStQcFwdInPfOctsL_Type()
)
sapEgrEGMbrBaseStQcFwdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfOctsL.setStatus("current")
_SapEgrEGMbrBaseStQcFwdInPfOctsH_Type = Counter32
_SapEgrEGMbrBaseStQcFwdInPfOctsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdInPfOctsH = _SapEgrEGMbrBaseStQcFwdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 20),
    _SapEgrEGMbrBaseStQcFwdInPfOctsH_Type()
)
sapEgrEGMbrBaseStQcFwdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdInPfOctsH.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfPkts_Type = Counter64
_SapEgrEGMbrBaseStQcFwdOutPfPkts_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfPkts = _SapEgrEGMbrBaseStQcFwdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 21),
    _SapEgrEGMbrBaseStQcFwdOutPfPkts_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfPkts.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfPktsL_Type = Counter32
_SapEgrEGMbrBaseStQcFwdOutPfPktsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfPktsL = _SapEgrEGMbrBaseStQcFwdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 22),
    _SapEgrEGMbrBaseStQcFwdOutPfPktsL_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfPktsL.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfPktsH_Type = Counter32
_SapEgrEGMbrBaseStQcFwdOutPfPktsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfPktsH = _SapEgrEGMbrBaseStQcFwdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 23),
    _SapEgrEGMbrBaseStQcFwdOutPfPktsH_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfPktsH.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfOcts_Type = Counter64
_SapEgrEGMbrBaseStQcFwdOutPfOcts_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfOcts = _SapEgrEGMbrBaseStQcFwdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 24),
    _SapEgrEGMbrBaseStQcFwdOutPfOcts_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfOcts.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfOctsL_Type = Counter32
_SapEgrEGMbrBaseStQcFwdOutPfOctsL_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfOctsL = _SapEgrEGMbrBaseStQcFwdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 25),
    _SapEgrEGMbrBaseStQcFwdOutPfOctsL_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfOctsL.setStatus("current")
_SapEgrEGMbrBaseStQcFwdOutPfOctsH_Type = Counter32
_SapEgrEGMbrBaseStQcFwdOutPfOctsH_Object = MibTableColumn
sapEgrEGMbrBaseStQcFwdOutPfOctsH = _SapEgrEGMbrBaseStQcFwdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 130, 1, 26),
    _SapEgrEGMbrBaseStQcFwdOutPfOctsH_Type()
)
sapEgrEGMbrBaseStQcFwdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrBaseStQcFwdOutPfOctsH.setStatus("current")
_SapEgrEGQueueStTable_Object = MibTable
sapEgrEGQueueStTable = _SapEgrEGQueueStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131)
)
if mibBuilder.loadTexts:
    sapEgrEGQueueStTable.setStatus("current")
_SapEgrEGQueueStEntry_Object = MibTableRow
sapEgrEGQueueStEntry = _SapEgrEGQueueStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1)
)
sapEgrEGQueueStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEGQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrEGQueueStEntry.setStatus("current")
_SapEgrEGQueueId_Type = TSapEgrQueueId
_SapEgrEGQueueId_Object = MibTableColumn
sapEgrEGQueueId = _SapEgrEGQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 1),
    _SapEgrEGQueueId_Type()
)
sapEgrEGQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEGQueueId.setStatus("current")
_SapEgrEGCustId_Type = TmnxCustId
_SapEgrEGCustId_Object = MibTableColumn
sapEgrEGCustId = _SapEgrEGCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 2),
    _SapEgrEGCustId_Type()
)
sapEgrEGCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGCustId.setStatus("current")
_SapEgrEGQueueStFwdInPfPkts_Type = Counter64
_SapEgrEGQueueStFwdInPfPkts_Object = MibTableColumn
sapEgrEGQueueStFwdInPfPkts = _SapEgrEGQueueStFwdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 3),
    _SapEgrEGQueueStFwdInPfPkts_Type()
)
sapEgrEGQueueStFwdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfPkts.setStatus("current")
_SapEgrEGQueueStFwdInPfPktsL_Type = Counter32
_SapEgrEGQueueStFwdInPfPktsL_Object = MibTableColumn
sapEgrEGQueueStFwdInPfPktsL = _SapEgrEGQueueStFwdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 4),
    _SapEgrEGQueueStFwdInPfPktsL_Type()
)
sapEgrEGQueueStFwdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfPktsL.setStatus("current")
_SapEgrEGQueueStFwdInPfPktsH_Type = Counter32
_SapEgrEGQueueStFwdInPfPktsH_Object = MibTableColumn
sapEgrEGQueueStFwdInPfPktsH = _SapEgrEGQueueStFwdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 5),
    _SapEgrEGQueueStFwdInPfPktsH_Type()
)
sapEgrEGQueueStFwdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfPktsH.setStatus("current")
_SapEgrEGQueueStDpdInPfPkts_Type = Counter64
_SapEgrEGQueueStDpdInPfPkts_Object = MibTableColumn
sapEgrEGQueueStDpdInPfPkts = _SapEgrEGQueueStDpdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 6),
    _SapEgrEGQueueStDpdInPfPkts_Type()
)
sapEgrEGQueueStDpdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfPkts.setStatus("current")
_SapEgrEGQueueStDpdInPfPktsL_Type = Counter32
_SapEgrEGQueueStDpdInPfPktsL_Object = MibTableColumn
sapEgrEGQueueStDpdInPfPktsL = _SapEgrEGQueueStDpdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 7),
    _SapEgrEGQueueStDpdInPfPktsL_Type()
)
sapEgrEGQueueStDpdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfPktsL.setStatus("current")
_SapEgrEGQueueStDpdInPfPktsH_Type = Counter32
_SapEgrEGQueueStDpdInPfPktsH_Object = MibTableColumn
sapEgrEGQueueStDpdInPfPktsH = _SapEgrEGQueueStDpdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 8),
    _SapEgrEGQueueStDpdInPfPktsH_Type()
)
sapEgrEGQueueStDpdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfPktsH.setStatus("current")
_SapEgrEGQueueStFwdOutPfPkts_Type = Counter64
_SapEgrEGQueueStFwdOutPfPkts_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfPkts = _SapEgrEGQueueStFwdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 9),
    _SapEgrEGQueueStFwdOutPfPkts_Type()
)
sapEgrEGQueueStFwdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfPkts.setStatus("current")
_SapEgrEGQueueStFwdOutPfPktsL_Type = Counter32
_SapEgrEGQueueStFwdOutPfPktsL_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfPktsL = _SapEgrEGQueueStFwdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 10),
    _SapEgrEGQueueStFwdOutPfPktsL_Type()
)
sapEgrEGQueueStFwdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfPktsL.setStatus("current")
_SapEgrEGQueueStFwdOutPfPktsH_Type = Counter32
_SapEgrEGQueueStFwdOutPfPktsH_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfPktsH = _SapEgrEGQueueStFwdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 11),
    _SapEgrEGQueueStFwdOutPfPktsH_Type()
)
sapEgrEGQueueStFwdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfPktsH.setStatus("current")
_SapEgrEGQueueStDpdOutPfPkts_Type = Counter64
_SapEgrEGQueueStDpdOutPfPkts_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfPkts = _SapEgrEGQueueStDpdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 12),
    _SapEgrEGQueueStDpdOutPfPkts_Type()
)
sapEgrEGQueueStDpdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfPkts.setStatus("current")
_SapEgrEGQueueStDpdOutPfPktsL_Type = Counter32
_SapEgrEGQueueStDpdOutPfPktsL_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfPktsL = _SapEgrEGQueueStDpdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 13),
    _SapEgrEGQueueStDpdOutPfPktsL_Type()
)
sapEgrEGQueueStDpdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfPktsL.setStatus("current")
_SapEgrEGQueueStDpdOutPfPktsH_Type = Counter32
_SapEgrEGQueueStDpdOutPfPktsH_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfPktsH = _SapEgrEGQueueStDpdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 14),
    _SapEgrEGQueueStDpdOutPfPktsH_Type()
)
sapEgrEGQueueStDpdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfPktsH.setStatus("current")
_SapEgrEGQueueStFwdInPfOcts_Type = Counter64
_SapEgrEGQueueStFwdInPfOcts_Object = MibTableColumn
sapEgrEGQueueStFwdInPfOcts = _SapEgrEGQueueStFwdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 15),
    _SapEgrEGQueueStFwdInPfOcts_Type()
)
sapEgrEGQueueStFwdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfOcts.setStatus("current")
_SapEgrEGQueueStFwdInPfOctsL_Type = Counter32
_SapEgrEGQueueStFwdInPfOctsL_Object = MibTableColumn
sapEgrEGQueueStFwdInPfOctsL = _SapEgrEGQueueStFwdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 16),
    _SapEgrEGQueueStFwdInPfOctsL_Type()
)
sapEgrEGQueueStFwdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfOctsL.setStatus("current")
_SapEgrEGQueueStFwdInPfOctsH_Type = Counter32
_SapEgrEGQueueStFwdInPfOctsH_Object = MibTableColumn
sapEgrEGQueueStFwdInPfOctsH = _SapEgrEGQueueStFwdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 17),
    _SapEgrEGQueueStFwdInPfOctsH_Type()
)
sapEgrEGQueueStFwdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdInPfOctsH.setStatus("current")
_SapEgrEGQueueStDpdInPfOcts_Type = Counter64
_SapEgrEGQueueStDpdInPfOcts_Object = MibTableColumn
sapEgrEGQueueStDpdInPfOcts = _SapEgrEGQueueStDpdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 18),
    _SapEgrEGQueueStDpdInPfOcts_Type()
)
sapEgrEGQueueStDpdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfOcts.setStatus("current")
_SapEgrEGQueueStDpdInPfOctsL_Type = Counter32
_SapEgrEGQueueStDpdInPfOctsL_Object = MibTableColumn
sapEgrEGQueueStDpdInPfOctsL = _SapEgrEGQueueStDpdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 19),
    _SapEgrEGQueueStDpdInPfOctsL_Type()
)
sapEgrEGQueueStDpdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfOctsL.setStatus("current")
_SapEgrEGQueueStDpdInPfOctsH_Type = Counter32
_SapEgrEGQueueStDpdInPfOctsH_Object = MibTableColumn
sapEgrEGQueueStDpdInPfOctsH = _SapEgrEGQueueStDpdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 20),
    _SapEgrEGQueueStDpdInPfOctsH_Type()
)
sapEgrEGQueueStDpdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdInPfOctsH.setStatus("current")
_SapEgrEGQueueStFwdOutPfOcts_Type = Counter64
_SapEgrEGQueueStFwdOutPfOcts_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfOcts = _SapEgrEGQueueStFwdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 21),
    _SapEgrEGQueueStFwdOutPfOcts_Type()
)
sapEgrEGQueueStFwdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfOcts.setStatus("current")
_SapEgrEGQueueStFwdOutPfOctsL_Type = Counter32
_SapEgrEGQueueStFwdOutPfOctsL_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfOctsL = _SapEgrEGQueueStFwdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 22),
    _SapEgrEGQueueStFwdOutPfOctsL_Type()
)
sapEgrEGQueueStFwdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfOctsL.setStatus("current")
_SapEgrEGQueueStFwdOutPfOctsH_Type = Counter32
_SapEgrEGQueueStFwdOutPfOctsH_Object = MibTableColumn
sapEgrEGQueueStFwdOutPfOctsH = _SapEgrEGQueueStFwdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 23),
    _SapEgrEGQueueStFwdOutPfOctsH_Type()
)
sapEgrEGQueueStFwdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStFwdOutPfOctsH.setStatus("current")
_SapEgrEGQueueStDpdOutPfOcts_Type = Counter64
_SapEgrEGQueueStDpdOutPfOcts_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfOcts = _SapEgrEGQueueStDpdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 24),
    _SapEgrEGQueueStDpdOutPfOcts_Type()
)
sapEgrEGQueueStDpdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfOcts.setStatus("current")
_SapEgrEGQueueStDpdOutPfOctsL_Type = Counter32
_SapEgrEGQueueStDpdOutPfOctsL_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfOctsL = _SapEgrEGQueueStDpdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 25),
    _SapEgrEGQueueStDpdOutPfOctsL_Type()
)
sapEgrEGQueueStDpdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfOctsL.setStatus("current")
_SapEgrEGQueueStDpdOutPfOctsH_Type = Counter32
_SapEgrEGQueueStDpdOutPfOctsH_Object = MibTableColumn
sapEgrEGQueueStDpdOutPfOctsH = _SapEgrEGQueueStDpdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 131, 1, 26),
    _SapEgrEGQueueStDpdOutPfOctsH_Type()
)
sapEgrEGQueueStDpdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGQueueStDpdOutPfOctsH.setStatus("current")
_SapEgrEGMbrQueueStTable_Object = MibTable
sapEgrEGMbrQueueStTable = _SapEgrEGMbrQueueStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132)
)
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStTable.setStatus("current")
_SapEgrEGMbrQueueStEntry_Object = MibTableRow
sapEgrEGMbrQueueStEntry = _SapEgrEGMbrQueueStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1)
)
sapEgrEGMbrQueueStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGrpMember"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEGMbrQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStEntry.setStatus("current")
_SapEgrEGMbrQueueId_Type = TSapEgrQueueId
_SapEgrEGMbrQueueId_Object = MibTableColumn
sapEgrEGMbrQueueId = _SapEgrEGMbrQueueId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 1),
    _SapEgrEGMbrQueueId_Type()
)
sapEgrEGMbrQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueId.setStatus("current")
_SapEgrEGMbrQueueCustId_Type = TmnxCustId
_SapEgrEGMbrQueueCustId_Object = MibTableColumn
sapEgrEGMbrQueueCustId = _SapEgrEGMbrQueueCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 2),
    _SapEgrEGMbrQueueCustId_Type()
)
sapEgrEGMbrQueueCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueCustId.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfPkts_Type = Counter64
_SapEgrEGMbrQueueStFwdInPfPkts_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfPkts = _SapEgrEGMbrQueueStFwdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 3),
    _SapEgrEGMbrQueueStFwdInPfPkts_Type()
)
sapEgrEGMbrQueueStFwdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfPkts.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfPktsL_Type = Counter32
_SapEgrEGMbrQueueStFwdInPfPktsL_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfPktsL = _SapEgrEGMbrQueueStFwdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 4),
    _SapEgrEGMbrQueueStFwdInPfPktsL_Type()
)
sapEgrEGMbrQueueStFwdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfPktsL.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfPktsH_Type = Counter32
_SapEgrEGMbrQueueStFwdInPfPktsH_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfPktsH = _SapEgrEGMbrQueueStFwdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 5),
    _SapEgrEGMbrQueueStFwdInPfPktsH_Type()
)
sapEgrEGMbrQueueStFwdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfPktsH.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfPkts_Type = Counter64
_SapEgrEGMbrQueueStDpdInPfPkts_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfPkts = _SapEgrEGMbrQueueStDpdInPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 6),
    _SapEgrEGMbrQueueStDpdInPfPkts_Type()
)
sapEgrEGMbrQueueStDpdInPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfPkts.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfPktsL_Type = Counter32
_SapEgrEGMbrQueueStDpdInPfPktsL_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfPktsL = _SapEgrEGMbrQueueStDpdInPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 7),
    _SapEgrEGMbrQueueStDpdInPfPktsL_Type()
)
sapEgrEGMbrQueueStDpdInPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfPktsL.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfPktsH_Type = Counter32
_SapEgrEGMbrQueueStDpdInPfPktsH_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfPktsH = _SapEgrEGMbrQueueStDpdInPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 8),
    _SapEgrEGMbrQueueStDpdInPfPktsH_Type()
)
sapEgrEGMbrQueueStDpdInPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfPktsH.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfPkts_Type = Counter64
_SapEgrEGMbrQueueStFwdOutPfPkts_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfPkts = _SapEgrEGMbrQueueStFwdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 9),
    _SapEgrEGMbrQueueStFwdOutPfPkts_Type()
)
sapEgrEGMbrQueueStFwdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfPkts.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfPktsL_Type = Counter32
_SapEgrEGMbrQueueStFwdOutPfPktsL_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfPktsL = _SapEgrEGMbrQueueStFwdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 10),
    _SapEgrEGMbrQueueStFwdOutPfPktsL_Type()
)
sapEgrEGMbrQueueStFwdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfPktsL.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfPktsH_Type = Counter32
_SapEgrEGMbrQueueStFwdOutPfPktsH_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfPktsH = _SapEgrEGMbrQueueStFwdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 11),
    _SapEgrEGMbrQueueStFwdOutPfPktsH_Type()
)
sapEgrEGMbrQueueStFwdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfPktsH.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfPkts_Type = Counter64
_SapEgrEGMbrQueueStDpdOutPfPkts_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfPkts = _SapEgrEGMbrQueueStDpdOutPfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 12),
    _SapEgrEGMbrQueueStDpdOutPfPkts_Type()
)
sapEgrEGMbrQueueStDpdOutPfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfPkts.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfPktsL_Type = Counter32
_SapEgrEGMbrQueueStDpdOutPfPktsL_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfPktsL = _SapEgrEGMbrQueueStDpdOutPfPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 13),
    _SapEgrEGMbrQueueStDpdOutPfPktsL_Type()
)
sapEgrEGMbrQueueStDpdOutPfPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfPktsL.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfPktsH_Type = Counter32
_SapEgrEGMbrQueueStDpdOutPfPktsH_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfPktsH = _SapEgrEGMbrQueueStDpdOutPfPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 14),
    _SapEgrEGMbrQueueStDpdOutPfPktsH_Type()
)
sapEgrEGMbrQueueStDpdOutPfPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfPktsH.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfOcts_Type = Counter64
_SapEgrEGMbrQueueStFwdInPfOcts_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfOcts = _SapEgrEGMbrQueueStFwdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 15),
    _SapEgrEGMbrQueueStFwdInPfOcts_Type()
)
sapEgrEGMbrQueueStFwdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfOcts.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfOctsL_Type = Counter32
_SapEgrEGMbrQueueStFwdInPfOctsL_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfOctsL = _SapEgrEGMbrQueueStFwdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 16),
    _SapEgrEGMbrQueueStFwdInPfOctsL_Type()
)
sapEgrEGMbrQueueStFwdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfOctsL.setStatus("current")
_SapEgrEGMbrQueueStFwdInPfOctsH_Type = Counter32
_SapEgrEGMbrQueueStFwdInPfOctsH_Object = MibTableColumn
sapEgrEGMbrQueueStFwdInPfOctsH = _SapEgrEGMbrQueueStFwdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 17),
    _SapEgrEGMbrQueueStFwdInPfOctsH_Type()
)
sapEgrEGMbrQueueStFwdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdInPfOctsH.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfOcts_Type = Counter64
_SapEgrEGMbrQueueStDpdInPfOcts_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfOcts = _SapEgrEGMbrQueueStDpdInPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 18),
    _SapEgrEGMbrQueueStDpdInPfOcts_Type()
)
sapEgrEGMbrQueueStDpdInPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfOcts.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfOctsL_Type = Counter32
_SapEgrEGMbrQueueStDpdInPfOctsL_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfOctsL = _SapEgrEGMbrQueueStDpdInPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 19),
    _SapEgrEGMbrQueueStDpdInPfOctsL_Type()
)
sapEgrEGMbrQueueStDpdInPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfOctsL.setStatus("current")
_SapEgrEGMbrQueueStDpdInPfOctsH_Type = Counter32
_SapEgrEGMbrQueueStDpdInPfOctsH_Object = MibTableColumn
sapEgrEGMbrQueueStDpdInPfOctsH = _SapEgrEGMbrQueueStDpdInPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 20),
    _SapEgrEGMbrQueueStDpdInPfOctsH_Type()
)
sapEgrEGMbrQueueStDpdInPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdInPfOctsH.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfOcts_Type = Counter64
_SapEgrEGMbrQueueStFwdOutPfOcts_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfOcts = _SapEgrEGMbrQueueStFwdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 21),
    _SapEgrEGMbrQueueStFwdOutPfOcts_Type()
)
sapEgrEGMbrQueueStFwdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfOcts.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfOctsL_Type = Counter32
_SapEgrEGMbrQueueStFwdOutPfOctsL_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfOctsL = _SapEgrEGMbrQueueStFwdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 22),
    _SapEgrEGMbrQueueStFwdOutPfOctsL_Type()
)
sapEgrEGMbrQueueStFwdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfOctsL.setStatus("current")
_SapEgrEGMbrQueueStFwdOutPfOctsH_Type = Counter32
_SapEgrEGMbrQueueStFwdOutPfOctsH_Object = MibTableColumn
sapEgrEGMbrQueueStFwdOutPfOctsH = _SapEgrEGMbrQueueStFwdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 23),
    _SapEgrEGMbrQueueStFwdOutPfOctsH_Type()
)
sapEgrEGMbrQueueStFwdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStFwdOutPfOctsH.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfOcts_Type = Counter64
_SapEgrEGMbrQueueStDpdOutPfOcts_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfOcts = _SapEgrEGMbrQueueStDpdOutPfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 24),
    _SapEgrEGMbrQueueStDpdOutPfOcts_Type()
)
sapEgrEGMbrQueueStDpdOutPfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfOcts.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfOctsL_Type = Counter32
_SapEgrEGMbrQueueStDpdOutPfOctsL_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfOctsL = _SapEgrEGMbrQueueStDpdOutPfOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 25),
    _SapEgrEGMbrQueueStDpdOutPfOctsL_Type()
)
sapEgrEGMbrQueueStDpdOutPfOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfOctsL.setStatus("current")
_SapEgrEGMbrQueueStDpdOutPfOctsH_Type = Counter32
_SapEgrEGMbrQueueStDpdOutPfOctsH_Object = MibTableColumn
sapEgrEGMbrQueueStDpdOutPfOctsH = _SapEgrEGMbrQueueStDpdOutPfOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 132, 1, 26),
    _SapEgrEGMbrQueueStDpdOutPfOctsH_Type()
)
sapEgrEGMbrQueueStDpdOutPfOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrQueueStDpdOutPfOctsH.setStatus("current")
_SapEgrEGSchedStTable_Object = MibTable
sapEgrEGSchedStTable = _SapEgrEGSchedStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133)
)
if mibBuilder.loadTexts:
    sapEgrEGSchedStTable.setStatus("current")
_SapEgrEGSchedStEntry_Object = MibTableRow
sapEgrEGSchedStEntry = _SapEgrEGSchedStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1)
)
sapEgrEGSchedStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEGSchedStName"),
)
if mibBuilder.loadTexts:
    sapEgrEGSchedStEntry.setStatus("current")
_SapEgrEGSchedStName_Type = TNamedItem
_SapEgrEGSchedStName_Object = MibTableColumn
sapEgrEGSchedStName = _SapEgrEGSchedStName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 1),
    _SapEgrEGSchedStName_Type()
)
sapEgrEGSchedStName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEGSchedStName.setStatus("current")
_SapEgrEGSchedCustId_Type = TmnxCustId
_SapEgrEGSchedCustId_Object = MibTableColumn
sapEgrEGSchedCustId = _SapEgrEGSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 2),
    _SapEgrEGSchedCustId_Type()
)
sapEgrEGSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedCustId.setStatus("current")
_SapEgrEGSchedStFwdPkts_Type = Counter64
_SapEgrEGSchedStFwdPkts_Object = MibTableColumn
sapEgrEGSchedStFwdPkts = _SapEgrEGSchedStFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 3),
    _SapEgrEGSchedStFwdPkts_Type()
)
sapEgrEGSchedStFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdPkts.setStatus("current")
_SapEgrEGSchedStFwdPktsL_Type = Counter32
_SapEgrEGSchedStFwdPktsL_Object = MibTableColumn
sapEgrEGSchedStFwdPktsL = _SapEgrEGSchedStFwdPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 4),
    _SapEgrEGSchedStFwdPktsL_Type()
)
sapEgrEGSchedStFwdPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdPktsL.setStatus("current")
_SapEgrEGSchedStFwdPktsH_Type = Counter32
_SapEgrEGSchedStFwdPktsH_Object = MibTableColumn
sapEgrEGSchedStFwdPktsH = _SapEgrEGSchedStFwdPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 5),
    _SapEgrEGSchedStFwdPktsH_Type()
)
sapEgrEGSchedStFwdPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdPktsH.setStatus("current")
_SapEgrEGSchedStFwdOcts_Type = Counter64
_SapEgrEGSchedStFwdOcts_Object = MibTableColumn
sapEgrEGSchedStFwdOcts = _SapEgrEGSchedStFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 6),
    _SapEgrEGSchedStFwdOcts_Type()
)
sapEgrEGSchedStFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdOcts.setStatus("current")
_SapEgrEGSchedStFwdOctsL_Type = Counter32
_SapEgrEGSchedStFwdOctsL_Object = MibTableColumn
sapEgrEGSchedStFwdOctsL = _SapEgrEGSchedStFwdOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 7),
    _SapEgrEGSchedStFwdOctsL_Type()
)
sapEgrEGSchedStFwdOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdOctsL.setStatus("current")
_SapEgrEGSchedStFwdOctsH_Type = Counter32
_SapEgrEGSchedStFwdOctsH_Object = MibTableColumn
sapEgrEGSchedStFwdOctsH = _SapEgrEGSchedStFwdOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 133, 1, 8),
    _SapEgrEGSchedStFwdOctsH_Type()
)
sapEgrEGSchedStFwdOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGSchedStFwdOctsH.setStatus("current")
_SapEgrEGMbrSchedStTable_Object = MibTable
sapEgrEGMbrSchedStTable = _SapEgrEGMbrSchedStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134)
)
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStTable.setStatus("current")
_SapEgrEGMbrSchedStEntry_Object = MibTableRow
sapEgrEGMbrSchedStEntry = _SapEgrEGMbrSchedStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1)
)
sapEgrEGMbrSchedStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGrpMember"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStName"),
)
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStEntry.setStatus("current")
_SapEgrEGMbrSchedStName_Type = TNamedItem
_SapEgrEGMbrSchedStName_Object = MibTableColumn
sapEgrEGMbrSchedStName = _SapEgrEGMbrSchedStName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 1),
    _SapEgrEGMbrSchedStName_Type()
)
sapEgrEGMbrSchedStName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStName.setStatus("current")
_SapEgrEGMbrSchedCustId_Type = TmnxCustId
_SapEgrEGMbrSchedCustId_Object = MibTableColumn
sapEgrEGMbrSchedCustId = _SapEgrEGMbrSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 2),
    _SapEgrEGMbrSchedCustId_Type()
)
sapEgrEGMbrSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedCustId.setStatus("current")
_SapEgrEGMbrSchedStFwdPkts_Type = Counter64
_SapEgrEGMbrSchedStFwdPkts_Object = MibTableColumn
sapEgrEGMbrSchedStFwdPkts = _SapEgrEGMbrSchedStFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 3),
    _SapEgrEGMbrSchedStFwdPkts_Type()
)
sapEgrEGMbrSchedStFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdPkts.setStatus("current")
_SapEgrEGMbrSchedStFwdPktsL_Type = Counter32
_SapEgrEGMbrSchedStFwdPktsL_Object = MibTableColumn
sapEgrEGMbrSchedStFwdPktsL = _SapEgrEGMbrSchedStFwdPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 4),
    _SapEgrEGMbrSchedStFwdPktsL_Type()
)
sapEgrEGMbrSchedStFwdPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdPktsL.setStatus("current")
_SapEgrEGMbrSchedStFwdPktsH_Type = Counter32
_SapEgrEGMbrSchedStFwdPktsH_Object = MibTableColumn
sapEgrEGMbrSchedStFwdPktsH = _SapEgrEGMbrSchedStFwdPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 5),
    _SapEgrEGMbrSchedStFwdPktsH_Type()
)
sapEgrEGMbrSchedStFwdPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdPktsH.setStatus("current")
_SapEgrEGMbrSchedStFwdOcts_Type = Counter64
_SapEgrEGMbrSchedStFwdOcts_Object = MibTableColumn
sapEgrEGMbrSchedStFwdOcts = _SapEgrEGMbrSchedStFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 6),
    _SapEgrEGMbrSchedStFwdOcts_Type()
)
sapEgrEGMbrSchedStFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdOcts.setStatus("current")
_SapEgrEGMbrSchedStFwdOctsL_Type = Counter32
_SapEgrEGMbrSchedStFwdOctsL_Object = MibTableColumn
sapEgrEGMbrSchedStFwdOctsL = _SapEgrEGMbrSchedStFwdOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 7),
    _SapEgrEGMbrSchedStFwdOctsL_Type()
)
sapEgrEGMbrSchedStFwdOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdOctsL.setStatus("current")
_SapEgrEGMbrSchedStFwdOctsH_Type = Counter32
_SapEgrEGMbrSchedStFwdOctsH_Object = MibTableColumn
sapEgrEGMbrSchedStFwdOctsH = _SapEgrEGMbrSchedStFwdOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 134, 1, 8),
    _SapEgrEGMbrSchedStFwdOctsH_Type()
)
sapEgrEGMbrSchedStFwdOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrEGMbrSchedStFwdOctsH.setStatus("current")
_SapPortIdEgrEGSchedStTable_Object = MibTable
sapPortIdEgrEGSchedStTable = _SapPortIdEgrEGSchedStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135)
)
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedStTable.setStatus("current")
_SapPortIdEgrEGSchedStEntry_Object = MibTableRow
sapPortIdEgrEGSchedStEntry = _SapPortIdEgrEGSchedStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1)
)
sapPortIdEgrEGSchedStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedStName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedStEntry.setStatus("current")
_SapPortIdEgrEGSchedStName_Type = TNamedItem
_SapPortIdEgrEGSchedStName_Object = MibTableColumn
sapPortIdEgrEGSchedStName = _SapPortIdEgrEGSchedStName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 1),
    _SapPortIdEgrEGSchedStName_Type()
)
sapPortIdEgrEGSchedStName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedStName.setStatus("current")
_SapPortIdEgrEGSchedCustId_Type = TmnxCustId
_SapPortIdEgrEGSchedCustId_Object = MibTableColumn
sapPortIdEgrEGSchedCustId = _SapPortIdEgrEGSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 2),
    _SapPortIdEgrEGSchedCustId_Type()
)
sapPortIdEgrEGSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedCustId.setStatus("current")
_SapPortIdEgrEGSchedFwdPkts_Type = Counter64
_SapPortIdEgrEGSchedFwdPkts_Object = MibTableColumn
sapPortIdEgrEGSchedFwdPkts = _SapPortIdEgrEGSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 3),
    _SapPortIdEgrEGSchedFwdPkts_Type()
)
sapPortIdEgrEGSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdPkts.setStatus("current")
_SapPortIdEgrEGSchedFwdPktsL_Type = Counter32
_SapPortIdEgrEGSchedFwdPktsL_Object = MibTableColumn
sapPortIdEgrEGSchedFwdPktsL = _SapPortIdEgrEGSchedFwdPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 4),
    _SapPortIdEgrEGSchedFwdPktsL_Type()
)
sapPortIdEgrEGSchedFwdPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdPktsL.setStatus("current")
_SapPortIdEgrEGSchedFwdPktsH_Type = Counter32
_SapPortIdEgrEGSchedFwdPktsH_Object = MibTableColumn
sapPortIdEgrEGSchedFwdPktsH = _SapPortIdEgrEGSchedFwdPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 5),
    _SapPortIdEgrEGSchedFwdPktsH_Type()
)
sapPortIdEgrEGSchedFwdPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdPktsH.setStatus("current")
_SapPortIdEgrEGSchedFwdOcts_Type = Counter64
_SapPortIdEgrEGSchedFwdOcts_Object = MibTableColumn
sapPortIdEgrEGSchedFwdOcts = _SapPortIdEgrEGSchedFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 6),
    _SapPortIdEgrEGSchedFwdOcts_Type()
)
sapPortIdEgrEGSchedFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdOcts.setStatus("current")
_SapPortIdEgrEGSchedFwdOctsL_Type = Counter32
_SapPortIdEgrEGSchedFwdOctsL_Object = MibTableColumn
sapPortIdEgrEGSchedFwdOctsL = _SapPortIdEgrEGSchedFwdOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 7),
    _SapPortIdEgrEGSchedFwdOctsL_Type()
)
sapPortIdEgrEGSchedFwdOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdOctsL.setStatus("current")
_SapPortIdEgrEGSchedFwdOctsH_Type = Counter32
_SapPortIdEgrEGSchedFwdOctsH_Object = MibTableColumn
sapPortIdEgrEGSchedFwdOctsH = _SapPortIdEgrEGSchedFwdOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 135, 1, 8),
    _SapPortIdEgrEGSchedFwdOctsH_Type()
)
sapPortIdEgrEGSchedFwdOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGSchedFwdOctsH.setStatus("current")
_SapPortIdEgrEGMbrSchedStTable_Object = MibTable
sapPortIdEgrEGMbrSchedStTable = _SapPortIdEgrEGMbrSchedStTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136)
)
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedStTable.setStatus("current")
_SapPortIdEgrEGMbrSchedStEntry_Object = MibTableRow
sapPortIdEgrEGMbrSchedStEntry = _SapPortIdEgrEGMbrSchedStEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1)
)
sapPortIdEgrEGMbrSchedStEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGroupName"),
    (0, "TIMETRA-SAP-MIB", "sapEgrEncapGrpMember"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedStName"),
    (0, "TIMETRA-SAP-MIB", "sapPortIdEgrPortId"),
)
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedStEntry.setStatus("current")
_SapPortIdEgrEGMbrSchedStName_Type = TNamedItem
_SapPortIdEgrEGMbrSchedStName_Object = MibTableColumn
sapPortIdEgrEGMbrSchedStName = _SapPortIdEgrEGMbrSchedStName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 1),
    _SapPortIdEgrEGMbrSchedStName_Type()
)
sapPortIdEgrEGMbrSchedStName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedStName.setStatus("current")
_SapPortIdEgrEGMbrSchedCustId_Type = TmnxCustId
_SapPortIdEgrEGMbrSchedCustId_Object = MibTableColumn
sapPortIdEgrEGMbrSchedCustId = _SapPortIdEgrEGMbrSchedCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 2),
    _SapPortIdEgrEGMbrSchedCustId_Type()
)
sapPortIdEgrEGMbrSchedCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedCustId.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdPkts_Type = Counter64
_SapPortIdEgrEGMbrSchedFwdPkts_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdPkts = _SapPortIdEgrEGMbrSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 3),
    _SapPortIdEgrEGMbrSchedFwdPkts_Type()
)
sapPortIdEgrEGMbrSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdPkts.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdPktsL_Type = Counter32
_SapPortIdEgrEGMbrSchedFwdPktsL_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdPktsL = _SapPortIdEgrEGMbrSchedFwdPktsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 4),
    _SapPortIdEgrEGMbrSchedFwdPktsL_Type()
)
sapPortIdEgrEGMbrSchedFwdPktsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdPktsL.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdPktsH_Type = Counter32
_SapPortIdEgrEGMbrSchedFwdPktsH_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdPktsH = _SapPortIdEgrEGMbrSchedFwdPktsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 5),
    _SapPortIdEgrEGMbrSchedFwdPktsH_Type()
)
sapPortIdEgrEGMbrSchedFwdPktsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdPktsH.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdOcts_Type = Counter64
_SapPortIdEgrEGMbrSchedFwdOcts_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdOcts = _SapPortIdEgrEGMbrSchedFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 6),
    _SapPortIdEgrEGMbrSchedFwdOcts_Type()
)
sapPortIdEgrEGMbrSchedFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdOcts.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdOctsL_Type = Counter32
_SapPortIdEgrEGMbrSchedFwdOctsL_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdOctsL = _SapPortIdEgrEGMbrSchedFwdOctsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 7),
    _SapPortIdEgrEGMbrSchedFwdOctsL_Type()
)
sapPortIdEgrEGMbrSchedFwdOctsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdOctsL.setStatus("current")
_SapPortIdEgrEGMbrSchedFwdOctsH_Type = Counter32
_SapPortIdEgrEGMbrSchedFwdOctsH_Object = MibTableColumn
sapPortIdEgrEGMbrSchedFwdOctsH = _SapPortIdEgrEGMbrSchedFwdOctsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 136, 1, 8),
    _SapPortIdEgrEGMbrSchedFwdOctsH_Type()
)
sapPortIdEgrEGMbrSchedFwdOctsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapPortIdEgrEGMbrSchedFwdOctsH.setStatus("current")
_SapDefHostTableLastChanged_Type = TimeStamp
_SapDefHostTableLastChanged_Object = MibScalar
sapDefHostTableLastChanged = _SapDefHostTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 137),
    _SapDefHostTableLastChanged_Type()
)
sapDefHostTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDefHostTableLastChanged.setStatus("current")
_SapDefHostTable_Object = MibTable
sapDefHostTable = _SapDefHostTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138)
)
if mibBuilder.loadTexts:
    sapDefHostTable.setStatus("current")
_SapDefHostEntry_Object = MibTableRow
sapDefHostEntry = _SapDefHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1)
)
sapDefHostEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapDefHostIpv4SubnetAddr"),
    (0, "TIMETRA-SAP-MIB", "sapDefHostIpv4SubnetMask"),
)
if mibBuilder.loadTexts:
    sapDefHostEntry.setStatus("current")


class _SapDefHostIpv4SubnetAddr_Type(IpAddress):
    """Custom type sapDefHostIpv4SubnetAddr based on IpAddress"""
    defaultHexValue = "00000000"


_SapDefHostIpv4SubnetAddr_Type.__name__ = "IpAddress"
_SapDefHostIpv4SubnetAddr_Object = MibTableColumn
sapDefHostIpv4SubnetAddr = _SapDefHostIpv4SubnetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1, 1),
    _SapDefHostIpv4SubnetAddr_Type()
)
sapDefHostIpv4SubnetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDefHostIpv4SubnetAddr.setStatus("current")


class _SapDefHostIpv4SubnetMask_Type(IpAddress):
    """Custom type sapDefHostIpv4SubnetMask based on IpAddress"""
    defaultHexValue = "00000000"


_SapDefHostIpv4SubnetMask_Type.__name__ = "IpAddress"
_SapDefHostIpv4SubnetMask_Object = MibTableColumn
sapDefHostIpv4SubnetMask = _SapDefHostIpv4SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1, 2),
    _SapDefHostIpv4SubnetMask_Type()
)
sapDefHostIpv4SubnetMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDefHostIpv4SubnetMask.setStatus("current")
_SapDefHostLastChanged_Type = TimeStamp
_SapDefHostLastChanged_Object = MibTableColumn
sapDefHostLastChanged = _SapDefHostLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1, 3),
    _SapDefHostLastChanged_Type()
)
sapDefHostLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDefHostLastChanged.setStatus("current")
_SapDefHostRowStatus_Type = RowStatus
_SapDefHostRowStatus_Object = MibTableColumn
sapDefHostRowStatus = _SapDefHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1, 4),
    _SapDefHostRowStatus_Type()
)
sapDefHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDefHostRowStatus.setStatus("current")
_SapDefHostNextHopIpv4Addr_Type = IpAddress
_SapDefHostNextHopIpv4Addr_Object = MibTableColumn
sapDefHostNextHopIpv4Addr = _SapDefHostNextHopIpv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 138, 1, 5),
    _SapDefHostNextHopIpv4Addr_Type()
)
sapDefHostNextHopIpv4Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDefHostNextHopIpv4Addr.setStatus("current")
_SapTlsSpbTblLastChanged_Type = TimeStamp
_SapTlsSpbTblLastChanged_Object = MibScalar
sapTlsSpbTblLastChanged = _SapTlsSpbTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 139),
    _SapTlsSpbTblLastChanged_Type()
)
sapTlsSpbTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsSpbTblLastChanged.setStatus("current")
_SapTlsSpbTable_Object = MibTable
sapTlsSpbTable = _SapTlsSpbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140)
)
if mibBuilder.loadTexts:
    sapTlsSpbTable.setStatus("current")
_SapTlsSpbEntry_Object = MibTableRow
sapTlsSpbEntry = _SapTlsSpbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140, 1)
)
sapTlsSpbEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapTlsSpbEntry.setStatus("current")
_SapTlsSpbRowStatus_Type = RowStatus
_SapTlsSpbRowStatus_Object = MibTableColumn
sapTlsSpbRowStatus = _SapTlsSpbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140, 1, 1),
    _SapTlsSpbRowStatus_Type()
)
sapTlsSpbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsSpbRowStatus.setStatus("current")
_SapTlsSpbLastChgd_Type = TimeStamp
_SapTlsSpbLastChgd_Object = MibTableColumn
sapTlsSpbLastChgd = _SapTlsSpbLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140, 1, 2),
    _SapTlsSpbLastChgd_Type()
)
sapTlsSpbLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsSpbLastChgd.setStatus("current")
_SapTlsSpbIfIndex_Type = InterfaceIndexOrZero
_SapTlsSpbIfIndex_Object = MibTableColumn
sapTlsSpbIfIndex = _SapTlsSpbIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140, 1, 3),
    _SapTlsSpbIfIndex_Type()
)
sapTlsSpbIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsSpbIfIndex.setStatus("current")


class _SapTlsSpbAdminState_Type(TmnxAdminState):
    """Custom type sapTlsSpbAdminState based on TmnxAdminState"""
    defaultValue = 3


_SapTlsSpbAdminState_Type.__name__ = "TmnxAdminState"
_SapTlsSpbAdminState_Object = MibTableColumn
sapTlsSpbAdminState = _SapTlsSpbAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 140, 1, 4),
    _SapTlsSpbAdminState_Type()
)
sapTlsSpbAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsSpbAdminState.setStatus("current")
_TmnxIpTunnelTableLastChanged_Type = TimeStamp
_TmnxIpTunnelTableLastChanged_Object = MibScalar
tmnxIpTunnelTableLastChanged = _TmnxIpTunnelTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 141),
    _TmnxIpTunnelTableLastChanged_Type()
)
tmnxIpTunnelTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTableLastChanged.setStatus("current")
_TmnxIpTunnelTable_Object = MibTable
tmnxIpTunnelTable = _TmnxIpTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142)
)
if mibBuilder.loadTexts:
    tmnxIpTunnelTable.setStatus("current")
_TmnxIpTunnelEntry_Object = MibTableRow
tmnxIpTunnelEntry = _TmnxIpTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1)
)
tmnxIpTunnelEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
)
if mibBuilder.loadTexts:
    tmnxIpTunnelEntry.setStatus("current")
_TmnxIpTunnelName_Type = TNamedItem
_TmnxIpTunnelName_Object = MibTableColumn
tmnxIpTunnelName = _TmnxIpTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 1),
    _TmnxIpTunnelName_Type()
)
tmnxIpTunnelName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTunnelName.setStatus("current")
_TmnxIpTunnelRowStatus_Type = RowStatus
_TmnxIpTunnelRowStatus_Object = MibTableColumn
tmnxIpTunnelRowStatus = _TmnxIpTunnelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 2),
    _TmnxIpTunnelRowStatus_Type()
)
tmnxIpTunnelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelRowStatus.setStatus("current")
_TmnxIpTunnelLastChanged_Type = TimeStamp
_TmnxIpTunnelLastChanged_Object = MibTableColumn
tmnxIpTunnelLastChanged = _TmnxIpTunnelLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 3),
    _TmnxIpTunnelLastChanged_Type()
)
tmnxIpTunnelLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelLastChanged.setStatus("current")


class _TmnxIpTunnelGreHeader_Type(TruthValue):
    """Custom type tmnxIpTunnelGreHeader based on TruthValue"""
    defaultValue = 2


_TmnxIpTunnelGreHeader_Type.__name__ = "TruthValue"
_TmnxIpTunnelGreHeader_Object = MibTableColumn
tmnxIpTunnelGreHeader = _TmnxIpTunnelGreHeader_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 4),
    _TmnxIpTunnelGreHeader_Type()
)
tmnxIpTunnelGreHeader.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelGreHeader.setStatus("current")


class _TmnxIpTunnelDescription_Type(TItemDescription):
    """Custom type tmnxIpTunnelDescription based on TItemDescription"""
    defaultValue = OctetString("")


_TmnxIpTunnelDescription_Type.__name__ = "TItemDescription"
_TmnxIpTunnelDescription_Object = MibTableColumn
tmnxIpTunnelDescription = _TmnxIpTunnelDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 5),
    _TmnxIpTunnelDescription_Type()
)
tmnxIpTunnelDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelDescription.setStatus("current")


class _TmnxIpTunnelLclIpAddrType_Type(InetAddressType):
    """Custom type tmnxIpTunnelLclIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxIpTunnelLclIpAddrType_Type.__name__ = "InetAddressType"
_TmnxIpTunnelLclIpAddrType_Object = MibTableColumn
tmnxIpTunnelLclIpAddrType = _TmnxIpTunnelLclIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 6),
    _TmnxIpTunnelLclIpAddrType_Type()
)
tmnxIpTunnelLclIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelLclIpAddrType.setStatus("current")


class _TmnxIpTunnelLclIpAddr_Type(InetAddress):
    """Custom type tmnxIpTunnelLclIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxIpTunnelLclIpAddr_Type.__name__ = "InetAddress"
_TmnxIpTunnelLclIpAddr_Object = MibTableColumn
tmnxIpTunnelLclIpAddr = _TmnxIpTunnelLclIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 7),
    _TmnxIpTunnelLclIpAddr_Type()
)
tmnxIpTunnelLclIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelLclIpAddr.setStatus("current")


class _TmnxIpTunnelRemIpAddrType_Type(InetAddressType):
    """Custom type tmnxIpTunnelRemIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxIpTunnelRemIpAddrType_Type.__name__ = "InetAddressType"
_TmnxIpTunnelRemIpAddrType_Object = MibTableColumn
tmnxIpTunnelRemIpAddrType = _TmnxIpTunnelRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 8),
    _TmnxIpTunnelRemIpAddrType_Type()
)
tmnxIpTunnelRemIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelRemIpAddrType.setStatus("current")


class _TmnxIpTunnelRemIpAddr_Type(InetAddress):
    """Custom type tmnxIpTunnelRemIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxIpTunnelRemIpAddr_Type.__name__ = "InetAddress"
_TmnxIpTunnelRemIpAddr_Object = MibTableColumn
tmnxIpTunnelRemIpAddr = _TmnxIpTunnelRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 9),
    _TmnxIpTunnelRemIpAddr_Type()
)
tmnxIpTunnelRemIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelRemIpAddr.setStatus("current")


class _TmnxIpTunnelBackupRemIpAddrType_Type(InetAddressType):
    """Custom type tmnxIpTunnelBackupRemIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxIpTunnelBackupRemIpAddrType_Type.__name__ = "InetAddressType"
_TmnxIpTunnelBackupRemIpAddrType_Object = MibTableColumn
tmnxIpTunnelBackupRemIpAddrType = _TmnxIpTunnelBackupRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 10),
    _TmnxIpTunnelBackupRemIpAddrType_Type()
)
tmnxIpTunnelBackupRemIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelBackupRemIpAddrType.setStatus("current")


class _TmnxIpTunnelBackupRemIpAddr_Type(InetAddress):
    """Custom type tmnxIpTunnelBackupRemIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxIpTunnelBackupRemIpAddr_Type.__name__ = "InetAddress"
_TmnxIpTunnelBackupRemIpAddr_Object = MibTableColumn
tmnxIpTunnelBackupRemIpAddr = _TmnxIpTunnelBackupRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 11),
    _TmnxIpTunnelBackupRemIpAddr_Type()
)
tmnxIpTunnelBackupRemIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelBackupRemIpAddr.setStatus("current")
_TmnxIpTunnelOperRemIpAddrType_Type = InetAddressType
_TmnxIpTunnelOperRemIpAddrType_Object = MibTableColumn
tmnxIpTunnelOperRemIpAddrType = _TmnxIpTunnelOperRemIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 12),
    _TmnxIpTunnelOperRemIpAddrType_Type()
)
tmnxIpTunnelOperRemIpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelOperRemIpAddrType.setStatus("current")


class _TmnxIpTunnelOperRemIpAddr_Type(InetAddress):
    """Custom type tmnxIpTunnelOperRemIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxIpTunnelOperRemIpAddr_Type.__name__ = "InetAddress"
_TmnxIpTunnelOperRemIpAddr_Object = MibTableColumn
tmnxIpTunnelOperRemIpAddr = _TmnxIpTunnelOperRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 13),
    _TmnxIpTunnelOperRemIpAddr_Type()
)
tmnxIpTunnelOperRemIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelOperRemIpAddr.setStatus("current")


class _TmnxIpTunnelDeliverySvcId_Type(TmnxServId):
    """Custom type tmnxIpTunnelDeliverySvcId based on TmnxServId"""
    defaultValue = 0


_TmnxIpTunnelDeliverySvcId_Type.__name__ = "TmnxServId"
_TmnxIpTunnelDeliverySvcId_Object = MibTableColumn
tmnxIpTunnelDeliverySvcId = _TmnxIpTunnelDeliverySvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 14),
    _TmnxIpTunnelDeliverySvcId_Type()
)
tmnxIpTunnelDeliverySvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelDeliverySvcId.setStatus("current")


class _TmnxIpTunnelAdminState_Type(TmnxAdminState):
    """Custom type tmnxIpTunnelAdminState based on TmnxAdminState"""
    defaultValue = 3


_TmnxIpTunnelAdminState_Type.__name__ = "TmnxAdminState"
_TmnxIpTunnelAdminState_Object = MibTableColumn
tmnxIpTunnelAdminState = _TmnxIpTunnelAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 15),
    _TmnxIpTunnelAdminState_Type()
)
tmnxIpTunnelAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelAdminState.setStatus("current")
_TmnxIpTunnelOperState_Type = TmnxIpTunnelOperState
_TmnxIpTunnelOperState_Object = MibTableColumn
tmnxIpTunnelOperState = _TmnxIpTunnelOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 16),
    _TmnxIpTunnelOperState_Type()
)
tmnxIpTunnelOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelOperState.setStatus("current")


class _TmnxIpTunnelOperFlags_Type(Bits):
    """Custom type tmnxIpTunnelOperFlags based on Bits"""
    namedValues = NamedValues(
        *(("unresolvedLocalIp", 0),
          ("tunnelAdminDown", 1),
          ("sapDown", 2),
          ("unresolvedDeliverySvc", 3),
          ("unregisteredLocalIp", 4),
          ("remIpUnreachable", 5),
          ("unresolvedDstIp", 6),
          ("trustAnchorsDown", 7),
          ("certProfileDown", 8))
    )

_TmnxIpTunnelOperFlags_Type.__name__ = "Bits"
_TmnxIpTunnelOperFlags_Object = MibTableColumn
tmnxIpTunnelOperFlags = _TmnxIpTunnelOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 17),
    _TmnxIpTunnelOperFlags_Type()
)
tmnxIpTunnelOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelOperFlags.setStatus("current")


class _TmnxIpTunnelDscp_Type(TDSCPNameOrEmpty):
    """Custom type tmnxIpTunnelDscp based on TDSCPNameOrEmpty"""
    defaultValue = OctetString("")


_TmnxIpTunnelDscp_Type.__name__ = "TDSCPNameOrEmpty"
_TmnxIpTunnelDscp_Object = MibTableColumn
tmnxIpTunnelDscp = _TmnxIpTunnelDscp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 18),
    _TmnxIpTunnelDscp_Type()
)
tmnxIpTunnelDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelDscp.setStatus("current")


class _TmnxIpTunnelReassembly_Type(Integer32):
    """Custom type tmnxIpTunnelReassembly based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 5000),
    )


_TmnxIpTunnelReassembly_Type.__name__ = "Integer32"
_TmnxIpTunnelReassembly_Object = MibTableColumn
tmnxIpTunnelReassembly = _TmnxIpTunnelReassembly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 19),
    _TmnxIpTunnelReassembly_Type()
)
tmnxIpTunnelReassembly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelReassembly.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelReassembly.setUnits("milliseconds")


class _TmnxIpTunnelClearDfBit_Type(TruthValue):
    """Custom type tmnxIpTunnelClearDfBit based on TruthValue"""
    defaultValue = 2


_TmnxIpTunnelClearDfBit_Type.__name__ = "TruthValue"
_TmnxIpTunnelClearDfBit_Object = MibTableColumn
tmnxIpTunnelClearDfBit = _TmnxIpTunnelClearDfBit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 20),
    _TmnxIpTunnelClearDfBit_Type()
)
tmnxIpTunnelClearDfBit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelClearDfBit.setStatus("current")


class _TmnxIpTunnelIpMtu_Type(Unsigned32):
    """Custom type tmnxIpTunnelIpMtu based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(512, 9000),
    )


_TmnxIpTunnelIpMtu_Type.__name__ = "Unsigned32"
_TmnxIpTunnelIpMtu_Object = MibTableColumn
tmnxIpTunnelIpMtu = _TmnxIpTunnelIpMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 21),
    _TmnxIpTunnelIpMtu_Type()
)
tmnxIpTunnelIpMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIpMtu.setStatus("current")
_TmnxIpTunnelHostISA_Type = TmnxHwIndexOrZero
_TmnxIpTunnelHostISA_Object = MibTableColumn
tmnxIpTunnelHostISA = _TmnxIpTunnelHostISA_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 22),
    _TmnxIpTunnelHostISA_Type()
)
tmnxIpTunnelHostISA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelHostISA.setStatus("current")


class _TmnxIpTunnelEncapIpMtu_Type(Unsigned32):
    """Custom type tmnxIpTunnelEncapIpMtu based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(512, 9000),
    )


_TmnxIpTunnelEncapIpMtu_Type.__name__ = "Unsigned32"
_TmnxIpTunnelEncapIpMtu_Object = MibTableColumn
tmnxIpTunnelEncapIpMtu = _TmnxIpTunnelEncapIpMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 23),
    _TmnxIpTunnelEncapIpMtu_Type()
)
tmnxIpTunnelEncapIpMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelEncapIpMtu.setStatus("current")


class _TmnxIpTunnelPropagateIpv6PMTU_Type(TruthValue):
    """Custom type tmnxIpTunnelPropagateIpv6PMTU based on TruthValue"""
    defaultValue = 1


_TmnxIpTunnelPropagateIpv6PMTU_Type.__name__ = "TruthValue"
_TmnxIpTunnelPropagateIpv6PMTU_Object = MibTableColumn
tmnxIpTunnelPropagateIpv6PMTU = _TmnxIpTunnelPropagateIpv6PMTU_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 24),
    _TmnxIpTunnelPropagateIpv6PMTU_Type()
)
tmnxIpTunnelPropagateIpv6PMTU.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelPropagateIpv6PMTU.setStatus("current")


class _TmnxIpTunnelIcmp6Pkt2Big_Type(TruthValue):
    """Custom type tmnxIpTunnelIcmp6Pkt2Big based on TruthValue"""
    defaultValue = 1


_TmnxIpTunnelIcmp6Pkt2Big_Type.__name__ = "TruthValue"
_TmnxIpTunnelIcmp6Pkt2Big_Object = MibTableColumn
tmnxIpTunnelIcmp6Pkt2Big = _TmnxIpTunnelIcmp6Pkt2Big_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 25),
    _TmnxIpTunnelIcmp6Pkt2Big_Type()
)
tmnxIpTunnelIcmp6Pkt2Big.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmp6Pkt2Big.setStatus("current")


class _TmnxIpTunnelIcmp6NumPkt2Big_Type(Unsigned32):
    """Custom type tmnxIpTunnelIcmp6NumPkt2Big based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_TmnxIpTunnelIcmp6NumPkt2Big_Type.__name__ = "Unsigned32"
_TmnxIpTunnelIcmp6NumPkt2Big_Object = MibTableColumn
tmnxIpTunnelIcmp6NumPkt2Big = _TmnxIpTunnelIcmp6NumPkt2Big_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 26),
    _TmnxIpTunnelIcmp6NumPkt2Big_Type()
)
tmnxIpTunnelIcmp6NumPkt2Big.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmp6NumPkt2Big.setStatus("current")


class _TmnxIpTunnelIcmp6Pkt2BigTime_Type(Unsigned32):
    """Custom type tmnxIpTunnelIcmp6Pkt2BigTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_TmnxIpTunnelIcmp6Pkt2BigTime_Type.__name__ = "Unsigned32"
_TmnxIpTunnelIcmp6Pkt2BigTime_Object = MibTableColumn
tmnxIpTunnelIcmp6Pkt2BigTime = _TmnxIpTunnelIcmp6Pkt2BigTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 27),
    _TmnxIpTunnelIcmp6Pkt2BigTime_Type()
)
tmnxIpTunnelIcmp6Pkt2BigTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmp6Pkt2BigTime.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmp6Pkt2BigTime.setUnits("seconds")


class _TmnxIpTunnelGreHeaderSendKey_Type(Unsigned32):
    """Custom type tmnxIpTunnelGreHeaderSendKey based on Unsigned32"""
    defaultValue = 0


_TmnxIpTunnelGreHeaderSendKey_Type.__name__ = "Unsigned32"
_TmnxIpTunnelGreHeaderSendKey_Object = MibTableColumn
tmnxIpTunnelGreHeaderSendKey = _TmnxIpTunnelGreHeaderSendKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 28),
    _TmnxIpTunnelGreHeaderSendKey_Type()
)
tmnxIpTunnelGreHeaderSendKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelGreHeaderSendKey.setStatus("current")


class _TmnxIpTunnelGreHeaderRcvKey_Type(Unsigned32):
    """Custom type tmnxIpTunnelGreHeaderRcvKey based on Unsigned32"""
    defaultValue = 0


_TmnxIpTunnelGreHeaderRcvKey_Type.__name__ = "Unsigned32"
_TmnxIpTunnelGreHeaderRcvKey_Object = MibTableColumn
tmnxIpTunnelGreHeaderRcvKey = _TmnxIpTunnelGreHeaderRcvKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 29),
    _TmnxIpTunnelGreHeaderRcvKey_Type()
)
tmnxIpTunnelGreHeaderRcvKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelGreHeaderRcvKey.setStatus("current")


class _TmnxIpTunnelGreHeaderKeysSet_Type(TruthValue):
    """Custom type tmnxIpTunnelGreHeaderKeysSet based on TruthValue"""
    defaultValue = 2


_TmnxIpTunnelGreHeaderKeysSet_Type.__name__ = "TruthValue"
_TmnxIpTunnelGreHeaderKeysSet_Object = MibTableColumn
tmnxIpTunnelGreHeaderKeysSet = _TmnxIpTunnelGreHeaderKeysSet_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 30),
    _TmnxIpTunnelGreHeaderKeysSet_Type()
)
tmnxIpTunnelGreHeaderKeysSet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelGreHeaderKeysSet.setStatus("current")
_TmnxIpTunnelOperChanged_Type = TimeStamp
_TmnxIpTunnelOperChanged_Object = MibTableColumn
tmnxIpTunnelOperChanged = _TmnxIpTunnelOperChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 31),
    _TmnxIpTunnelOperChanged_Type()
)
tmnxIpTunnelOperChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelOperChanged.setStatus("current")


class _TmnxIpTunnelPubTcpMssAdjust_Type(Integer32):
    """Custom type tmnxIpTunnelPubTcpMssAdjust based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(512, 9000),
    )


_TmnxIpTunnelPubTcpMssAdjust_Type.__name__ = "Integer32"
_TmnxIpTunnelPubTcpMssAdjust_Object = MibTableColumn
tmnxIpTunnelPubTcpMssAdjust = _TmnxIpTunnelPubTcpMssAdjust_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 32),
    _TmnxIpTunnelPubTcpMssAdjust_Type()
)
tmnxIpTunnelPubTcpMssAdjust.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelPubTcpMssAdjust.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelPubTcpMssAdjust.setUnits("octets")


class _TmnxIpTunnelPrivTcpMssAdjust_Type(Integer32):
    """Custom type tmnxIpTunnelPrivTcpMssAdjust based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(512, 9000),
    )


_TmnxIpTunnelPrivTcpMssAdjust_Type.__name__ = "Integer32"
_TmnxIpTunnelPrivTcpMssAdjust_Object = MibTableColumn
tmnxIpTunnelPrivTcpMssAdjust = _TmnxIpTunnelPrivTcpMssAdjust_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 33),
    _TmnxIpTunnelPrivTcpMssAdjust_Type()
)
tmnxIpTunnelPrivTcpMssAdjust.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelPrivTcpMssAdjust.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelPrivTcpMssAdjust.setUnits("octets")


class _TmnxIpTunnelDeliverySvcName_Type(TLNamedItemOrEmpty):
    """Custom type tmnxIpTunnelDeliverySvcName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_TmnxIpTunnelDeliverySvcName_Type.__name__ = "TLNamedItemOrEmpty"
_TmnxIpTunnelDeliverySvcName_Object = MibTableColumn
tmnxIpTunnelDeliverySvcName = _TmnxIpTunnelDeliverySvcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 34),
    _TmnxIpTunnelDeliverySvcName_Type()
)
tmnxIpTunnelDeliverySvcName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelDeliverySvcName.setStatus("current")
_TmnxIpTunnelHostEsa_Type = TmnxEsaIdOrZero
_TmnxIpTunnelHostEsa_Object = MibTableColumn
tmnxIpTunnelHostEsa = _TmnxIpTunnelHostEsa_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 35),
    _TmnxIpTunnelHostEsa_Type()
)
tmnxIpTunnelHostEsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelHostEsa.setStatus("current")
_TmnxIpTunnelHostEsaVm_Type = TmnxEsaVmIdOrZero
_TmnxIpTunnelHostEsaVm_Object = MibTableColumn
tmnxIpTunnelHostEsaVm = _TmnxIpTunnelHostEsaVm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 36),
    _TmnxIpTunnelHostEsaVm_Type()
)
tmnxIpTunnelHostEsaVm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelHostEsaVm.setStatus("current")


class _TmnxIpTunnelIPsecTransportMdProf_Type(TNamedItemOrEmpty):
    """Custom type tmnxIpTunnelIPsecTransportMdProf based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_TmnxIpTunnelIPsecTransportMdProf_Type.__name__ = "TNamedItemOrEmpty"
_TmnxIpTunnelIPsecTransportMdProf_Object = MibTableColumn
tmnxIpTunnelIPsecTransportMdProf = _TmnxIpTunnelIPsecTransportMdProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 37),
    _TmnxIpTunnelIPsecTransportMdProf_Type()
)
tmnxIpTunnelIPsecTransportMdProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIPsecTransportMdProf.setStatus("current")


class _TmnxIpTunnelPropagateIpv4PMTU_Type(TruthValue):
    """Custom type tmnxIpTunnelPropagateIpv4PMTU based on TruthValue"""
    defaultValue = 1


_TmnxIpTunnelPropagateIpv4PMTU_Type.__name__ = "TruthValue"
_TmnxIpTunnelPropagateIpv4PMTU_Object = MibTableColumn
tmnxIpTunnelPropagateIpv4PMTU = _TmnxIpTunnelPropagateIpv4PMTU_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 38),
    _TmnxIpTunnelPropagateIpv4PMTU_Type()
)
tmnxIpTunnelPropagateIpv4PMTU.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelPropagateIpv4PMTU.setStatus("current")


class _TmnxIpTunnelIcmpFragReq_Type(TruthValue):
    """Custom type tmnxIpTunnelIcmpFragReq based on TruthValue"""
    defaultValue = 1


_TmnxIpTunnelIcmpFragReq_Type.__name__ = "TruthValue"
_TmnxIpTunnelIcmpFragReq_Object = MibTableColumn
tmnxIpTunnelIcmpFragReq = _TmnxIpTunnelIcmpFragReq_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 39),
    _TmnxIpTunnelIcmpFragReq_Type()
)
tmnxIpTunnelIcmpFragReq.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmpFragReq.setStatus("current")


class _TmnxIpTunnelIcmpFragReqNum_Type(Unsigned32):
    """Custom type tmnxIpTunnelIcmpFragReqNum based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_TmnxIpTunnelIcmpFragReqNum_Type.__name__ = "Unsigned32"
_TmnxIpTunnelIcmpFragReqNum_Object = MibTableColumn
tmnxIpTunnelIcmpFragReqNum = _TmnxIpTunnelIcmpFragReqNum_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 40),
    _TmnxIpTunnelIcmpFragReqNum_Type()
)
tmnxIpTunnelIcmpFragReqNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmpFragReqNum.setStatus("current")


class _TmnxIpTunnelIcmpFragReqTime_Type(Unsigned32):
    """Custom type tmnxIpTunnelIcmpFragReqTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_TmnxIpTunnelIcmpFragReqTime_Type.__name__ = "Unsigned32"
_TmnxIpTunnelIcmpFragReqTime_Object = MibTableColumn
tmnxIpTunnelIcmpFragReqTime = _TmnxIpTunnelIcmpFragReqTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 41),
    _TmnxIpTunnelIcmpFragReqTime_Type()
)
tmnxIpTunnelIcmpFragReqTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmpFragReqTime.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelIcmpFragReqTime.setUnits("seconds")


class _TmnxIpTunnelPMTUDiscoverAging_Type(Unsigned32):
    """Custom type tmnxIpTunnelPMTUDiscoverAging based on Unsigned32"""
    defaultValue = 900

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(900, 3600),
    )


_TmnxIpTunnelPMTUDiscoverAging_Type.__name__ = "Unsigned32"
_TmnxIpTunnelPMTUDiscoverAging_Object = MibTableColumn
tmnxIpTunnelPMTUDiscoverAging = _TmnxIpTunnelPMTUDiscoverAging_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 142, 1, 42),
    _TmnxIpTunnelPMTUDiscoverAging_Type()
)
tmnxIpTunnelPMTUDiscoverAging.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTunnelPMTUDiscoverAging.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelPMTUDiscoverAging.setUnits("seconds")
_TmnxIpTnlDstAddrTableLastChanged_Type = TimeStamp
_TmnxIpTnlDstAddrTableLastChanged_Object = MibScalar
tmnxIpTnlDstAddrTableLastChanged = _TmnxIpTnlDstAddrTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 143),
    _TmnxIpTnlDstAddrTableLastChanged_Type()
)
tmnxIpTnlDstAddrTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrTableLastChanged.setStatus("current")
_TmnxIpTnlDstAddrTable_Object = MibTable
tmnxIpTnlDstAddrTable = _TmnxIpTnlDstAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144)
)
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrTable.setStatus("current")
_TmnxIpTnlDstAddrEntry_Object = MibTableRow
tmnxIpTnlDstAddrEntry = _TmnxIpTnlDstAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1)
)
tmnxIpTnlDstAddrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlDstAddrType"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlDstAddr"),
)
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrEntry.setStatus("current")
_TmnxIpTnlDstAddrType_Type = InetAddressType
_TmnxIpTnlDstAddrType_Object = MibTableColumn
tmnxIpTnlDstAddrType = _TmnxIpTnlDstAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1, 1),
    _TmnxIpTnlDstAddrType_Type()
)
tmnxIpTnlDstAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrType.setStatus("current")


class _TmnxIpTnlDstAddr_Type(InetAddress):
    """Custom type tmnxIpTnlDstAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_TmnxIpTnlDstAddr_Type.__name__ = "InetAddress"
_TmnxIpTnlDstAddr_Object = MibTableColumn
tmnxIpTnlDstAddr = _TmnxIpTnlDstAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1, 2),
    _TmnxIpTnlDstAddr_Type()
)
tmnxIpTnlDstAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddr.setStatus("current")
_TmnxIpTnlDstAddrRowStatus_Type = RowStatus
_TmnxIpTnlDstAddrRowStatus_Object = MibTableColumn
tmnxIpTnlDstAddrRowStatus = _TmnxIpTnlDstAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1, 3),
    _TmnxIpTnlDstAddrRowStatus_Type()
)
tmnxIpTnlDstAddrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrRowStatus.setStatus("current")
_TmnxIpTnlDstAddrLastChanged_Type = TimeStamp
_TmnxIpTnlDstAddrLastChanged_Object = MibTableColumn
tmnxIpTnlDstAddrLastChanged = _TmnxIpTnlDstAddrLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1, 4),
    _TmnxIpTnlDstAddrLastChanged_Type()
)
tmnxIpTnlDstAddrLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrLastChanged.setStatus("current")
_TmnxIpTnlDstAddrResolved_Type = TruthValue
_TmnxIpTnlDstAddrResolved_Object = MibTableColumn
tmnxIpTnlDstAddrResolved = _TmnxIpTnlDstAddrResolved_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 144, 1, 5),
    _TmnxIpTnlDstAddrResolved_Type()
)
tmnxIpTnlDstAddrResolved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlDstAddrResolved.setStatus("current")
_TmnxIpTunnelStatsTable_Object = MibTable
tmnxIpTunnelStatsTable = _TmnxIpTunnelStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145)
)
if mibBuilder.loadTexts:
    tmnxIpTunnelStatsTable.setStatus("current")
_TmnxIpTunnelStatsEntry_Object = MibTableRow
tmnxIpTunnelStatsEntry = _TmnxIpTunnelStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1)
)
tmnxIpTunnelStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
)
if mibBuilder.loadTexts:
    tmnxIpTunnelStatsEntry.setStatus("current")
_TmnxIpTunnelPktsTx_Type = Counter64
_TmnxIpTunnelPktsTx_Object = MibTableColumn
tmnxIpTunnelPktsTx = _TmnxIpTunnelPktsTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 1),
    _TmnxIpTunnelPktsTx_Type()
)
tmnxIpTunnelPktsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsTx.setStatus("current")
_TmnxIpTunnelPktsTxLo_Type = Counter32
_TmnxIpTunnelPktsTxLo_Object = MibTableColumn
tmnxIpTunnelPktsTxLo = _TmnxIpTunnelPktsTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 2),
    _TmnxIpTunnelPktsTxLo_Type()
)
tmnxIpTunnelPktsTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsTxLo.setStatus("current")
_TmnxIpTunnelPktsTxHi_Type = Counter32
_TmnxIpTunnelPktsTxHi_Object = MibTableColumn
tmnxIpTunnelPktsTxHi = _TmnxIpTunnelPktsTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 3),
    _TmnxIpTunnelPktsTxHi_Type()
)
tmnxIpTunnelPktsTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsTxHi.setStatus("current")
_TmnxIpTunnelPktsRx_Type = Counter64
_TmnxIpTunnelPktsRx_Object = MibTableColumn
tmnxIpTunnelPktsRx = _TmnxIpTunnelPktsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 4),
    _TmnxIpTunnelPktsRx_Type()
)
tmnxIpTunnelPktsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsRx.setStatus("current")
_TmnxIpTunnelPktsRxLo_Type = Counter32
_TmnxIpTunnelPktsRxLo_Object = MibTableColumn
tmnxIpTunnelPktsRxLo = _TmnxIpTunnelPktsRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 5),
    _TmnxIpTunnelPktsRxLo_Type()
)
tmnxIpTunnelPktsRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsRxLo.setStatus("current")
_TmnxIpTunnelPktsRxHi_Type = Counter32
_TmnxIpTunnelPktsRxHi_Object = MibTableColumn
tmnxIpTunnelPktsRxHi = _TmnxIpTunnelPktsRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 6),
    _TmnxIpTunnelPktsRxHi_Type()
)
tmnxIpTunnelPktsRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPktsRxHi.setStatus("current")
_TmnxIpTunnelBytesTx_Type = Counter64
_TmnxIpTunnelBytesTx_Object = MibTableColumn
tmnxIpTunnelBytesTx = _TmnxIpTunnelBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 7),
    _TmnxIpTunnelBytesTx_Type()
)
tmnxIpTunnelBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesTx.setStatus("current")
_TmnxIpTunnelBytesTxLo_Type = Counter32
_TmnxIpTunnelBytesTxLo_Object = MibTableColumn
tmnxIpTunnelBytesTxLo = _TmnxIpTunnelBytesTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 8),
    _TmnxIpTunnelBytesTxLo_Type()
)
tmnxIpTunnelBytesTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesTxLo.setStatus("current")
_TmnxIpTunnelBytesTxHi_Type = Counter32
_TmnxIpTunnelBytesTxHi_Object = MibTableColumn
tmnxIpTunnelBytesTxHi = _TmnxIpTunnelBytesTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 9),
    _TmnxIpTunnelBytesTxHi_Type()
)
tmnxIpTunnelBytesTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesTxHi.setStatus("current")
_TmnxIpTunnelBytesRx_Type = Counter64
_TmnxIpTunnelBytesRx_Object = MibTableColumn
tmnxIpTunnelBytesRx = _TmnxIpTunnelBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 10),
    _TmnxIpTunnelBytesRx_Type()
)
tmnxIpTunnelBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesRx.setStatus("current")
_TmnxIpTunnelBytesRxLo_Type = Counter32
_TmnxIpTunnelBytesRxLo_Object = MibTableColumn
tmnxIpTunnelBytesRxLo = _TmnxIpTunnelBytesRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 11),
    _TmnxIpTunnelBytesRxLo_Type()
)
tmnxIpTunnelBytesRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesRxLo.setStatus("current")
_TmnxIpTunnelBytesRxHi_Type = Counter32
_TmnxIpTunnelBytesRxHi_Object = MibTableColumn
tmnxIpTunnelBytesRxHi = _TmnxIpTunnelBytesRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 12),
    _TmnxIpTunnelBytesRxHi_Type()
)
tmnxIpTunnelBytesRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelBytesRxHi.setStatus("current")
_TmnxIpTunnelTxErrors_Type = Counter32
_TmnxIpTunnelTxErrors_Object = MibTableColumn
tmnxIpTunnelTxErrors = _TmnxIpTunnelTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 13),
    _TmnxIpTunnelTxErrors_Type()
)
tmnxIpTunnelTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTxErrors.setStatus("current")
_TmnxIpTunnelRxErrors_Type = Counter32
_TmnxIpTunnelRxErrors_Object = MibTableColumn
tmnxIpTunnelRxErrors = _TmnxIpTunnelRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 14),
    _TmnxIpTunnelRxErrors_Type()
)
tmnxIpTunnelRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelRxErrors.setStatus("current")
_TmnxIpTunnelKeyIgnoredRx_Type = Counter64
_TmnxIpTunnelKeyIgnoredRx_Object = MibTableColumn
tmnxIpTunnelKeyIgnoredRx = _TmnxIpTunnelKeyIgnoredRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 15),
    _TmnxIpTunnelKeyIgnoredRx_Type()
)
tmnxIpTunnelKeyIgnoredRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelKeyIgnoredRx.setStatus("current")
_TmnxIpTunnelKeyIgnoredRxLo_Type = Counter32
_TmnxIpTunnelKeyIgnoredRxLo_Object = MibTableColumn
tmnxIpTunnelKeyIgnoredRxLo = _TmnxIpTunnelKeyIgnoredRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 16),
    _TmnxIpTunnelKeyIgnoredRxLo_Type()
)
tmnxIpTunnelKeyIgnoredRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelKeyIgnoredRxLo.setStatus("current")
_TmnxIpTunnelKeyIgnoredRxHi_Type = Counter32
_TmnxIpTunnelKeyIgnoredRxHi_Object = MibTableColumn
tmnxIpTunnelKeyIgnoredRxHi = _TmnxIpTunnelKeyIgnoredRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 17),
    _TmnxIpTunnelKeyIgnoredRxHi_Type()
)
tmnxIpTunnelKeyIgnoredRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelKeyIgnoredRxHi.setStatus("current")
_TmnxIpTunnelSeqIgnoredRx_Type = Counter64
_TmnxIpTunnelSeqIgnoredRx_Object = MibTableColumn
tmnxIpTunnelSeqIgnoredRx = _TmnxIpTunnelSeqIgnoredRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 18),
    _TmnxIpTunnelSeqIgnoredRx_Type()
)
tmnxIpTunnelSeqIgnoredRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelSeqIgnoredRx.setStatus("current")
_TmnxIpTunnelSeqIgnoredRxLo_Type = Counter32
_TmnxIpTunnelSeqIgnoredRxLo_Object = MibTableColumn
tmnxIpTunnelSeqIgnoredRxLo = _TmnxIpTunnelSeqIgnoredRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 19),
    _TmnxIpTunnelSeqIgnoredRxLo_Type()
)
tmnxIpTunnelSeqIgnoredRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelSeqIgnoredRxLo.setStatus("current")
_TmnxIpTunnelSeqIgnoredRxHi_Type = Counter32
_TmnxIpTunnelSeqIgnoredRxHi_Object = MibTableColumn
tmnxIpTunnelSeqIgnoredRxHi = _TmnxIpTunnelSeqIgnoredRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 20),
    _TmnxIpTunnelSeqIgnoredRxHi_Type()
)
tmnxIpTunnelSeqIgnoredRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelSeqIgnoredRxHi.setStatus("current")
_TmnxIpTunnelVersUnsupRx_Type = Counter64
_TmnxIpTunnelVersUnsupRx_Object = MibTableColumn
tmnxIpTunnelVersUnsupRx = _TmnxIpTunnelVersUnsupRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 21),
    _TmnxIpTunnelVersUnsupRx_Type()
)
tmnxIpTunnelVersUnsupRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelVersUnsupRx.setStatus("current")
_TmnxIpTunnelVersUnsupRxLo_Type = Counter32
_TmnxIpTunnelVersUnsupRxLo_Object = MibTableColumn
tmnxIpTunnelVersUnsupRxLo = _TmnxIpTunnelVersUnsupRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 22),
    _TmnxIpTunnelVersUnsupRxLo_Type()
)
tmnxIpTunnelVersUnsupRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelVersUnsupRxLo.setStatus("current")
_TmnxIpTunnelVersUnsupRxHi_Type = Counter32
_TmnxIpTunnelVersUnsupRxHi_Object = MibTableColumn
tmnxIpTunnelVersUnsupRxHi = _TmnxIpTunnelVersUnsupRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 23),
    _TmnxIpTunnelVersUnsupRxHi_Type()
)
tmnxIpTunnelVersUnsupRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelVersUnsupRxHi.setStatus("current")
_TmnxIpTunnelInvalidChksumRx_Type = Counter64
_TmnxIpTunnelInvalidChksumRx_Object = MibTableColumn
tmnxIpTunnelInvalidChksumRx = _TmnxIpTunnelInvalidChksumRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 24),
    _TmnxIpTunnelInvalidChksumRx_Type()
)
tmnxIpTunnelInvalidChksumRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelInvalidChksumRx.setStatus("current")
_TmnxIpTunnelInvalidChksumRxLo_Type = Counter32
_TmnxIpTunnelInvalidChksumRxLo_Object = MibTableColumn
tmnxIpTunnelInvalidChksumRxLo = _TmnxIpTunnelInvalidChksumRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 25),
    _TmnxIpTunnelInvalidChksumRxLo_Type()
)
tmnxIpTunnelInvalidChksumRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelInvalidChksumRxLo.setStatus("current")
_TmnxIpTunnelInvalidChksumRxHi_Type = Counter32
_TmnxIpTunnelInvalidChksumRxHi_Object = MibTableColumn
tmnxIpTunnelInvalidChksumRxHi = _TmnxIpTunnelInvalidChksumRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 26),
    _TmnxIpTunnelInvalidChksumRxHi_Type()
)
tmnxIpTunnelInvalidChksumRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelInvalidChksumRxHi.setStatus("current")
_TmnxIpTunnelLoopsRx_Type = Counter64
_TmnxIpTunnelLoopsRx_Object = MibTableColumn
tmnxIpTunnelLoopsRx = _TmnxIpTunnelLoopsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 27),
    _TmnxIpTunnelLoopsRx_Type()
)
tmnxIpTunnelLoopsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelLoopsRx.setStatus("current")
_TmnxIpTunnelLoopsRxLo_Type = Counter32
_TmnxIpTunnelLoopsRxLo_Object = MibTableColumn
tmnxIpTunnelLoopsRxLo = _TmnxIpTunnelLoopsRxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 28),
    _TmnxIpTunnelLoopsRxLo_Type()
)
tmnxIpTunnelLoopsRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelLoopsRxLo.setStatus("current")
_TmnxIpTunnelLoopsRxHi_Type = Counter32
_TmnxIpTunnelLoopsRxHi_Object = MibTableColumn
tmnxIpTunnelLoopsRxHi = _TmnxIpTunnelLoopsRxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 29),
    _TmnxIpTunnelLoopsRxHi_Type()
)
tmnxIpTunnelLoopsRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelLoopsRxHi.setStatus("current")
_TmnxIpTunnelTooBigTx_Type = Counter64
_TmnxIpTunnelTooBigTx_Object = MibTableColumn
tmnxIpTunnelTooBigTx = _TmnxIpTunnelTooBigTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 30),
    _TmnxIpTunnelTooBigTx_Type()
)
tmnxIpTunnelTooBigTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTooBigTx.setStatus("current")
_TmnxIpTunnelTooBigTxLo_Type = Counter32
_TmnxIpTunnelTooBigTxLo_Object = MibTableColumn
tmnxIpTunnelTooBigTxLo = _TmnxIpTunnelTooBigTxLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 31),
    _TmnxIpTunnelTooBigTxLo_Type()
)
tmnxIpTunnelTooBigTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTooBigTxLo.setStatus("current")
_TmnxIpTunnelTooBigTxHi_Type = Counter32
_TmnxIpTunnelTooBigTxHi_Object = MibTableColumn
tmnxIpTunnelTooBigTxHi = _TmnxIpTunnelTooBigTxHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 32),
    _TmnxIpTunnelTooBigTxHi_Type()
)
tmnxIpTunnelTooBigTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTooBigTxHi.setStatus("current")
_TmnxIpTunnelKeyMismatchRx_Type = Counter64
_TmnxIpTunnelKeyMismatchRx_Object = MibTableColumn
tmnxIpTunnelKeyMismatchRx = _TmnxIpTunnelKeyMismatchRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 33),
    _TmnxIpTunnelKeyMismatchRx_Type()
)
tmnxIpTunnelKeyMismatchRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelKeyMismatchRx.setStatus("current")
_TmnxIpTunnelEncapOverhead_Type = Unsigned32
_TmnxIpTunnelEncapOverhead_Object = MibTableColumn
tmnxIpTunnelEncapOverhead = _TmnxIpTunnelEncapOverhead_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 34),
    _TmnxIpTunnelEncapOverhead_Type()
)
tmnxIpTunnelEncapOverhead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelEncapOverhead.setStatus("current")
_TmnxIpTunnelPreEncapFragCount_Type = Counter64
_TmnxIpTunnelPreEncapFragCount_Object = MibTableColumn
tmnxIpTunnelPreEncapFragCount = _TmnxIpTunnelPreEncapFragCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 35),
    _TmnxIpTunnelPreEncapFragCount_Type()
)
tmnxIpTunnelPreEncapFragCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPreEncapFragCount.setStatus("current")
_TmnxIpTunnelPreEncapFragLastSize_Type = Unsigned32
_TmnxIpTunnelPreEncapFragLastSize_Object = MibTableColumn
tmnxIpTunnelPreEncapFragLastSize = _TmnxIpTunnelPreEncapFragLastSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 36),
    _TmnxIpTunnelPreEncapFragLastSize_Type()
)
tmnxIpTunnelPreEncapFragLastSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPreEncapFragLastSize.setStatus("current")
_TmnxIpTunnelPostEncapFragCount_Type = Counter64
_TmnxIpTunnelPostEncapFragCount_Object = MibTableColumn
tmnxIpTunnelPostEncapFragCount = _TmnxIpTunnelPostEncapFragCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 37),
    _TmnxIpTunnelPostEncapFragCount_Type()
)
tmnxIpTunnelPostEncapFragCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPostEncapFragCount.setStatus("current")
_TmnxIpTunnelPostEncapFragLstSize_Type = Unsigned32
_TmnxIpTunnelPostEncapFragLstSize_Object = MibTableColumn
tmnxIpTunnelPostEncapFragLstSize = _TmnxIpTunnelPostEncapFragLstSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 38),
    _TmnxIpTunnelPostEncapFragLstSize_Type()
)
tmnxIpTunnelPostEncapFragLstSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelPostEncapFragLstSize.setStatus("current")
_TmnxIpTunnelTempPrivMtu_Type = Unsigned32
_TmnxIpTunnelTempPrivMtu_Object = MibTableColumn
tmnxIpTunnelTempPrivMtu = _TmnxIpTunnelTempPrivMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 145, 1, 39),
    _TmnxIpTunnelTempPrivMtu_Type()
)
tmnxIpTunnelTempPrivMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTunnelTempPrivMtu.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTunnelTempPrivMtu.setUnits("bytes")
_SapExtTableLastChanged_Type = TimeStamp
_SapExtTableLastChanged_Object = MibScalar
sapExtTableLastChanged = _SapExtTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 146),
    _SapExtTableLastChanged_Type()
)
sapExtTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapExtTableLastChanged.setStatus("current")
_SapExtTable_Object = MibTable
sapExtTable = _SapExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147)
)
if mibBuilder.loadTexts:
    sapExtTable.setStatus("current")
_SapExtEntry_Object = MibTableRow
sapExtEntry = _SapExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1)
)
if mibBuilder.loadTexts:
    sapExtEntry.setStatus("current")
_SapExtLastChanged_Type = TimeStamp
_SapExtLastChanged_Object = MibTableColumn
sapExtLastChanged = _SapExtLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 1),
    _SapExtLastChanged_Type()
)
sapExtLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapExtLastChanged.setStatus("current")
_SapExtLagActivePort_Type = TmnxPortID
_SapExtLagActivePort_Object = MibTableColumn
sapExtLagActivePort = _SapExtLagActivePort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 2),
    _SapExtLagActivePort_Type()
)
sapExtLagActivePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapExtLagActivePort.setStatus("current")


class _SapDCpuProtPolicy_Type(TNamedItemOrEmpty):
    """Custom type sapDCpuProtPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapDCpuProtPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SapDCpuProtPolicy_Object = MibTableColumn
sapDCpuProtPolicy = _SapDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 3),
    _SapDCpuProtPolicy_Type()
)
sapDCpuProtPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDCpuProtPolicy.setStatus("current")


class _SapCflowd_Type(Integer32):
    """Custom type sapCflowd based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("ingressOnly", 3))
    )


_SapCflowd_Type.__name__ = "Integer32"
_SapCflowd_Object = MibTableColumn
sapCflowd = _SapCflowd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 4),
    _SapCflowd_Type()
)
sapCflowd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapCflowd.setStatus("current")


class _SapStatHostMacLearnOptions_Type(Bits):
    """Custom type sapStatHostMacLearnOptions based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("singleMac", 0),
          ("dataTriggered", 1))
    )

_SapStatHostMacLearnOptions_Type.__name__ = "Bits"
_SapStatHostMacLearnOptions_Object = MibTableColumn
sapStatHostMacLearnOptions = _SapStatHostMacLearnOptions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 5),
    _SapStatHostMacLearnOptions_Type()
)
sapStatHostMacLearnOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHostMacLearnOptions.setStatus("current")


class _SapBandwidth_Type(Unsigned32):
    """Custom type sapBandwidth based on Unsigned32"""
    defaultValue = 0


_SapBandwidth_Type.__name__ = "Unsigned32"
_SapBandwidth_Object = MibTableColumn
sapBandwidth = _SapBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 6),
    _SapBandwidth_Type()
)
sapBandwidth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapBandwidth.setStatus("current")
if mibBuilder.loadTexts:
    sapBandwidth.setUnits("kilobps")
_SapOperDCpuProtPolicy_Type = TNamedItemOrEmpty
_SapOperDCpuProtPolicy_Object = MibTableColumn
sapOperDCpuProtPolicy = _SapOperDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 7),
    _SapOperDCpuProtPolicy_Type()
)
sapOperDCpuProtPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapOperDCpuProtPolicy.setStatus("current")


class _SapIngQGrpRedirectList_Type(TNamedItemOrEmpty):
    """Custom type sapIngQGrpRedirectList based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapIngQGrpRedirectList_Type.__name__ = "TNamedItemOrEmpty"
_SapIngQGrpRedirectList_Object = MibTableColumn
sapIngQGrpRedirectList = _SapIngQGrpRedirectList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 8),
    _SapIngQGrpRedirectList_Type()
)
sapIngQGrpRedirectList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQGrpRedirectList.setStatus("current")


class _SapEgrQGrpRedirectList_Type(TNamedItemOrEmpty):
    """Custom type sapEgrQGrpRedirectList based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SapEgrQGrpRedirectList_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrQGrpRedirectList_Object = MibTableColumn
sapEgrQGrpRedirectList = _SapEgrQGrpRedirectList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 9),
    _SapEgrQGrpRedirectList_Type()
)
sapEgrQGrpRedirectList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQGrpRedirectList.setStatus("current")


class _SapEgrQosQueueOvrHsSecShaper_Type(TNamedItemOrEmpty):
    """Custom type sapEgrQosQueueOvrHsSecShaper based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapEgrQosQueueOvrHsSecShaper_Type.__name__ = "TNamedItemOrEmpty"
_SapEgrQosQueueOvrHsSecShaper_Object = MibTableColumn
sapEgrQosQueueOvrHsSecShaper = _SapEgrQosQueueOvrHsSecShaper_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 10),
    _SapEgrQosQueueOvrHsSecShaper_Type()
)
sapEgrQosQueueOvrHsSecShaper.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosQueueOvrHsSecShaper.setStatus("current")


class _SapFwdWhlSaleEpipeSvcId_Type(TmnxServId):
    """Custom type sapFwdWhlSaleEpipeSvcId based on TmnxServId"""
    defaultValue = 0


_SapFwdWhlSaleEpipeSvcId_Type.__name__ = "TmnxServId"
_SapFwdWhlSaleEpipeSvcId_Object = MibTableColumn
sapFwdWhlSaleEpipeSvcId = _SapFwdWhlSaleEpipeSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 12),
    _SapFwdWhlSaleEpipeSvcId_Type()
)
sapFwdWhlSaleEpipeSvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapFwdWhlSaleEpipeSvcId.setStatus("current")


class _SapIngressQinqTranslation_Type(Integer32):
    """Custom type sapIngressQinqTranslation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("qinqIds", 2))
    )


_SapIngressQinqTranslation_Type.__name__ = "Integer32"
_SapIngressQinqTranslation_Object = MibTableColumn
sapIngressQinqTranslation = _SapIngressQinqTranslation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 13),
    _SapIngressQinqTranslation_Type()
)
sapIngressQinqTranslation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressQinqTranslation.setStatus("current")


class _SapIngressQinqInnerTranslationId_Type(Integer32):
    """Custom type sapIngressQinqInnerTranslationId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 4094),
    )


_SapIngressQinqInnerTranslationId_Type.__name__ = "Integer32"
_SapIngressQinqInnerTranslationId_Object = MibTableColumn
sapIngressQinqInnerTranslationId = _SapIngressQinqInnerTranslationId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 14),
    _SapIngressQinqInnerTranslationId_Type()
)
sapIngressQinqInnerTranslationId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressQinqInnerTranslationId.setStatus("current")


class _SapIngressQinqOuterTranslationId_Type(Integer32):
    """Custom type sapIngressQinqOuterTranslationId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 4094),
    )


_SapIngressQinqOuterTranslationId_Type.__name__ = "Integer32"
_SapIngressQinqOuterTranslationId_Object = MibTableColumn
sapIngressQinqOuterTranslationId = _SapIngressQinqOuterTranslationId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 15),
    _SapIngressQinqOuterTranslationId_Type()
)
sapIngressQinqOuterTranslationId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressQinqOuterTranslationId.setStatus("current")


class _SapBandwidthHi_Type(Unsigned32):
    """Custom type sapBandwidthHi based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SapBandwidthHi_Type.__name__ = "Unsigned32"
_SapBandwidthHi_Object = MibTableColumn
sapBandwidthHi = _SapBandwidthHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 16),
    _SapBandwidthHi_Type()
)
sapBandwidthHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapBandwidthHi.setStatus("current")


class _SapEgressQosVlanQosPlcy_Type(TLNamedItemOrEmpty):
    """Custom type sapEgressQosVlanQosPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_SapEgressQosVlanQosPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_SapEgressQosVlanQosPlcy_Object = MibTableColumn
sapEgressQosVlanQosPlcy = _SapEgressQosVlanQosPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 17),
    _SapEgressQosVlanQosPlcy_Type()
)
sapEgressQosVlanQosPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressQosVlanQosPlcy.setStatus("current")


class _SapIngQtagManipulationOuterTag_Type(Integer32):
    """Custom type sapIngQtagManipulationOuterTag based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 4094),
    )


_SapIngQtagManipulationOuterTag_Type.__name__ = "Integer32"
_SapIngQtagManipulationOuterTag_Object = MibTableColumn
sapIngQtagManipulationOuterTag = _SapIngQtagManipulationOuterTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 18),
    _SapIngQtagManipulationOuterTag_Type()
)
sapIngQtagManipulationOuterTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQtagManipulationOuterTag.setStatus("current")


class _SapIngQtagManipulationInnerTag_Type(Integer32):
    """Custom type sapIngQtagManipulationInnerTag based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 4094),
    )


_SapIngQtagManipulationInnerTag_Type.__name__ = "Integer32"
_SapIngQtagManipulationInnerTag_Object = MibTableColumn
sapIngQtagManipulationInnerTag = _SapIngQtagManipulationInnerTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 19),
    _SapIngQtagManipulationInnerTag_Type()
)
sapIngQtagManipulationInnerTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQtagManipulationInnerTag.setStatus("current")
_SapIngQtagManipulationAction_Type = TmnxSapQtagManipulationAction
_SapIngQtagManipulationAction_Object = MibTableColumn
sapIngQtagManipulationAction = _SapIngQtagManipulationAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 20),
    _SapIngQtagManipulationAction_Type()
)
sapIngQtagManipulationAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngQtagManipulationAction.setStatus("current")
_SapEgrQtagManipulationAction_Type = TmnxSapQtagManipulationAction
_SapEgrQtagManipulationAction_Object = MibTableColumn
sapEgrQtagManipulationAction = _SapEgrQtagManipulationAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 21),
    _SapEgrQtagManipulationAction_Type()
)
sapEgrQtagManipulationAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQtagManipulationAction.setStatus("current")


class _SapEgressQosEgrRemarkPlcy_Type(TLNamedItemOrEmpty):
    """Custom type sapEgressQosEgrRemarkPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_SapEgressQosEgrRemarkPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_SapEgressQosEgrRemarkPlcy_Object = MibTableColumn
sapEgressQosEgrRemarkPlcy = _SapEgressQosEgrRemarkPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 22),
    _SapEgressQosEgrRemarkPlcy_Type()
)
sapEgressQosEgrRemarkPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressQosEgrRemarkPlcy.setStatus("current")


class _SapEgressAggRateCIRLmt_Type(Integer32):
    """Custom type sapEgressAggRateCIRLmt based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 400000000),
    )


_SapEgressAggRateCIRLmt_Type.__name__ = "Integer32"
_SapEgressAggRateCIRLmt_Object = MibTableColumn
sapEgressAggRateCIRLmt = _SapEgressAggRateCIRLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 23),
    _SapEgressAggRateCIRLmt_Type()
)
sapEgressAggRateCIRLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgressAggRateCIRLmt.setStatus("current")
if mibBuilder.loadTexts:
    sapEgressAggRateCIRLmt.setUnits("kilobps")


class _SapIngressAggregatePolicerRateHi_Type(TmnxHigh32):
    """Custom type sapIngressAggregatePolicerRateHi based on TmnxHigh32"""
    defaultValue = 4294967295

    subtypeSpec = TmnxHigh32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_SapIngressAggregatePolicerRateHi_Type.__name__ = "TmnxHigh32"
_SapIngressAggregatePolicerRateHi_Object = MibTableColumn
sapIngressAggregatePolicerRateHi = _SapIngressAggregatePolicerRateHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 82),
    _SapIngressAggregatePolicerRateHi_Type()
)
sapIngressAggregatePolicerRateHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerRateHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerRateHi.setUnits("kilobps")


class _SapIngressAggregatePolicerRateLo_Type(TmnxLow32):
    """Custom type sapIngressAggregatePolicerRateLo based on TmnxLow32"""
    defaultValue = 4294967295

    subtypeSpec = TmnxLow32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(144, 1000000000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_SapIngressAggregatePolicerRateLo_Type.__name__ = "TmnxLow32"
_SapIngressAggregatePolicerRateLo_Object = MibTableColumn
sapIngressAggregatePolicerRateLo = _SapIngressAggregatePolicerRateLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 83),
    _SapIngressAggregatePolicerRateLo_Type()
)
sapIngressAggregatePolicerRateLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerRateLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerRateLo.setUnits("kilobps")


class _SapIngressAggregatePolicerBurst_Type(Integer32):
    """Custom type sapIngressAggregatePolicerBurst based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 33292),
    )


_SapIngressAggregatePolicerBurst_Type.__name__ = "Integer32"
_SapIngressAggregatePolicerBurst_Object = MibTableColumn
sapIngressAggregatePolicerBurst = _SapIngressAggregatePolicerBurst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 84),
    _SapIngressAggregatePolicerBurst_Type()
)
sapIngressAggregatePolicerBurst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerBurst.setStatus("current")


class _SapIngressAggregatePolicerCIRHi_Type(TmnxHigh32):
    """Custom type sapIngressAggregatePolicerCIRHi based on TmnxHigh32"""
    defaultValue = 4294967295

    subtypeSpec = TmnxHigh32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_SapIngressAggregatePolicerCIRHi_Type.__name__ = "TmnxHigh32"
_SapIngressAggregatePolicerCIRHi_Object = MibTableColumn
sapIngressAggregatePolicerCIRHi = _SapIngressAggregatePolicerCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 85),
    _SapIngressAggregatePolicerCIRHi_Type()
)
sapIngressAggregatePolicerCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerCIRHi.setUnits("kilobps")


class _SapIngressAggregatePolicerCIRLo_Type(TmnxLow32):
    """Custom type sapIngressAggregatePolicerCIRLo based on TmnxLow32"""
    defaultValue = 4294967294

    subtypeSpec = TmnxLow32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
        ValueRangeConstraint(4294967295, 4294967295),
        ValueRangeConstraint(4294967294, 4294967294),
    )


_SapIngressAggregatePolicerCIRLo_Type.__name__ = "TmnxLow32"
_SapIngressAggregatePolicerCIRLo_Object = MibTableColumn
sapIngressAggregatePolicerCIRLo = _SapIngressAggregatePolicerCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 86),
    _SapIngressAggregatePolicerCIRLo_Type()
)
sapIngressAggregatePolicerCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerCIRLo.setUnits("kilobps")


class _SapIngressAggregatePolicerCBS_Type(Integer32):
    """Custom type sapIngressAggregatePolicerCBS based on Integer32"""
    defaultValue = -2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2, -2),
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 33292),
    )


_SapIngressAggregatePolicerCBS_Type.__name__ = "Integer32"
_SapIngressAggregatePolicerCBS_Object = MibTableColumn
sapIngressAggregatePolicerCBS = _SapIngressAggregatePolicerCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 87),
    _SapIngressAggregatePolicerCBS_Type()
)
sapIngressAggregatePolicerCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressAggregatePolicerCBS.setStatus("current")


class _SapIngressIPCriteriaOvrTag_Type(Integer32):
    """Custom type sapIngressIPCriteriaOvrTag based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapIngressIPCriteriaOvrTag_Type.__name__ = "Integer32"
_SapIngressIPCriteriaOvrTag_Object = MibTableColumn
sapIngressIPCriteriaOvrTag = _SapIngressIPCriteriaOvrTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 88),
    _SapIngressIPCriteriaOvrTag_Type()
)
sapIngressIPCriteriaOvrTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIPCriteriaOvrTag.setStatus("current")


class _SapIngressIPv6CriteriaOvrTag_Type(Integer32):
    """Custom type sapIngressIPv6CriteriaOvrTag based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapIngressIPv6CriteriaOvrTag_Type.__name__ = "Integer32"
_SapIngressIPv6CriteriaOvrTag_Object = MibTableColumn
sapIngressIPv6CriteriaOvrTag = _SapIngressIPv6CriteriaOvrTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 89),
    _SapIngressIPv6CriteriaOvrTag_Type()
)
sapIngressIPv6CriteriaOvrTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIPv6CriteriaOvrTag.setStatus("current")


class _SapEgrVlanQosPlcyPortRedirect_Type(TruthValue):
    """Custom type sapEgrVlanQosPlcyPortRedirect based on TruthValue"""
    defaultValue = 2


_SapEgrVlanQosPlcyPortRedirect_Type.__name__ = "TruthValue"
_SapEgrVlanQosPlcyPortRedirect_Object = MibTableColumn
sapEgrVlanQosPlcyPortRedirect = _SapEgrVlanQosPlcyPortRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 90),
    _SapEgrVlanQosPlcyPortRedirect_Type()
)
sapEgrVlanQosPlcyPortRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrVlanQosPlcyPortRedirect.setStatus("current")


class _SapIngressIpFilterPair_Type(TruthValue):
    """Custom type sapIngressIpFilterPair based on TruthValue"""
    defaultValue = 2


_SapIngressIpFilterPair_Type.__name__ = "TruthValue"
_SapIngressIpFilterPair_Object = MibTableColumn
sapIngressIpFilterPair = _SapIngressIpFilterPair_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 147, 1, 91),
    _SapIngressIpFilterPair_Type()
)
sapIngressIpFilterPair.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapIngressIpFilterPair.setStatus("current")
_SapDcpFpStaticStatTable_Object = MibTable
sapDcpFpStaticStatTable = _SapDcpFpStaticStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148)
)
if mibBuilder.loadTexts:
    sapDcpFpStaticStatTable.setStatus("current")
_SapDcpFpStaticStatEntry_Object = MibTableRow
sapDcpFpStaticStatEntry = _SapDcpFpStaticStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1)
)
sapDcpFpStaticStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-SAP-MIB", "sapDcpFpStaticPlcrName"),
)
if mibBuilder.loadTexts:
    sapDcpFpStaticStatEntry.setStatus("current")
_SapDcpFpStaticPlcrName_Type = TNamedItem
_SapDcpFpStaticPlcrName_Object = MibTableColumn
sapDcpFpStaticPlcrName = _SapDcpFpStaticPlcrName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 1),
    _SapDcpFpStaticPlcrName_Type()
)
sapDcpFpStaticPlcrName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDcpFpStaticPlcrName.setStatus("current")
_SapDcpFpStaticState_Type = TmnxDistCpuProtState
_SapDcpFpStaticState_Object = MibTableColumn
sapDcpFpStaticState = _SapDcpFpStaticState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 2),
    _SapDcpFpStaticState_Type()
)
sapDcpFpStaticState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticState.setStatus("current")
_SapDcpFpStaticExcdCount_Type = Counter64
_SapDcpFpStaticExcdCount_Object = MibTableColumn
sapDcpFpStaticExcdCount = _SapDcpFpStaticExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 3),
    _SapDcpFpStaticExcdCount_Type()
)
sapDcpFpStaticExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticExcdCount.setStatus("current")
_SapDcpFpStaticExcdCountHi_Type = Counter32
_SapDcpFpStaticExcdCountHi_Object = MibTableColumn
sapDcpFpStaticExcdCountHi = _SapDcpFpStaticExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 4),
    _SapDcpFpStaticExcdCountHi_Type()
)
sapDcpFpStaticExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticExcdCountHi.setStatus("current")
_SapDcpFpStaticExcdCountLo_Type = Counter32
_SapDcpFpStaticExcdCountLo_Object = MibTableColumn
sapDcpFpStaticExcdCountLo = _SapDcpFpStaticExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 5),
    _SapDcpFpStaticExcdCountLo_Type()
)
sapDcpFpStaticExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticExcdCountLo.setStatus("current")
_SapDcpFpStaticHoldDown_Type = TmnxDistCpuProtActionDuration
_SapDcpFpStaticHoldDown_Object = MibTableColumn
sapDcpFpStaticHoldDown = _SapDcpFpStaticHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 6),
    _SapDcpFpStaticHoldDown_Type()
)
sapDcpFpStaticHoldDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    sapDcpFpStaticHoldDown.setUnits("seconds")
_SapDcpFpStaticDetectionTime_Type = Unsigned32
_SapDcpFpStaticDetectionTime_Object = MibTableColumn
sapDcpFpStaticDetectionTime = _SapDcpFpStaticDetectionTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 148, 1, 7),
    _SapDcpFpStaticDetectionTime_Type()
)
sapDcpFpStaticDetectionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpStaticDetectionTime.setStatus("current")
if mibBuilder.loadTexts:
    sapDcpFpStaticDetectionTime.setUnits("seconds")
_SapDcpFpDynStatTable_Object = MibTable
sapDcpFpDynStatTable = _SapDcpFpDynStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149)
)
if mibBuilder.loadTexts:
    sapDcpFpDynStatTable.setStatus("current")
_SapDcpFpDynStatEntry_Object = MibTableRow
sapDcpFpDynStatEntry = _SapDcpFpDynStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1)
)
sapDcpFpDynStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-SAP-MIB", "sapDcpFpProtocol"),
)
if mibBuilder.loadTexts:
    sapDcpFpDynStatEntry.setStatus("current")
_SapDcpFpProtocol_Type = TmnxDistCpuProtProtocolId
_SapDcpFpProtocol_Object = MibTableColumn
sapDcpFpProtocol = _SapDcpFpProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 1),
    _SapDcpFpProtocol_Type()
)
sapDcpFpProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDcpFpProtocol.setStatus("current")
_SapDcpFpDynState_Type = TmnxDistCpuProtState
_SapDcpFpDynState_Object = MibTableColumn
sapDcpFpDynState = _SapDcpFpDynState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 2),
    _SapDcpFpDynState_Type()
)
sapDcpFpDynState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynState.setStatus("current")
_SapDcpFpDynExcdCount_Type = Counter64
_SapDcpFpDynExcdCount_Object = MibTableColumn
sapDcpFpDynExcdCount = _SapDcpFpDynExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 3),
    _SapDcpFpDynExcdCount_Type()
)
sapDcpFpDynExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynExcdCount.setStatus("current")
_SapDcpFpDynExcdCountHi_Type = Counter32
_SapDcpFpDynExcdCountHi_Object = MibTableColumn
sapDcpFpDynExcdCountHi = _SapDcpFpDynExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 4),
    _SapDcpFpDynExcdCountHi_Type()
)
sapDcpFpDynExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynExcdCountHi.setStatus("current")
_SapDcpFpDynExcdCountLo_Type = Counter32
_SapDcpFpDynExcdCountLo_Object = MibTableColumn
sapDcpFpDynExcdCountLo = _SapDcpFpDynExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 5),
    _SapDcpFpDynExcdCountLo_Type()
)
sapDcpFpDynExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynExcdCountLo.setStatus("current")
_SapDcpFpDynHoldDown_Type = TmnxDistCpuProtActionDuration
_SapDcpFpDynHoldDown_Object = MibTableColumn
sapDcpFpDynHoldDown = _SapDcpFpDynHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 6),
    _SapDcpFpDynHoldDown_Type()
)
sapDcpFpDynHoldDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    sapDcpFpDynHoldDown.setUnits("seconds")
_SapDcpFpDynDetectionTime_Type = Unsigned32
_SapDcpFpDynDetectionTime_Object = MibTableColumn
sapDcpFpDynDetectionTime = _SapDcpFpDynDetectionTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 7),
    _SapDcpFpDynDetectionTime_Type()
)
sapDcpFpDynDetectionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynDetectionTime.setStatus("current")
if mibBuilder.loadTexts:
    sapDcpFpDynDetectionTime.setUnits("seconds")
_SapDcpFpDynAllocated_Type = TruthValue
_SapDcpFpDynAllocated_Object = MibTableColumn
sapDcpFpDynAllocated = _SapDcpFpDynAllocated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 149, 1, 8),
    _SapDcpFpDynAllocated_Type()
)
sapDcpFpDynAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpDynAllocated.setStatus("current")
_SapDcpFpLocMonStatTable_Object = MibTable
sapDcpFpLocMonStatTable = _SapDcpFpLocMonStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150)
)
if mibBuilder.loadTexts:
    sapDcpFpLocMonStatTable.setStatus("current")
_SapDcpFpLocMonStatEntry_Object = MibTableRow
sapDcpFpLocMonStatEntry = _SapDcpFpLocMonStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1)
)
sapDcpFpLocMonStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-SAP-MIB", "sapDcpFpLocMonPlcrName"),
)
if mibBuilder.loadTexts:
    sapDcpFpLocMonStatEntry.setStatus("current")
_SapDcpFpLocMonPlcrName_Type = TNamedItem
_SapDcpFpLocMonPlcrName_Object = MibTableColumn
sapDcpFpLocMonPlcrName = _SapDcpFpLocMonPlcrName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 1),
    _SapDcpFpLocMonPlcrName_Type()
)
sapDcpFpLocMonPlcrName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDcpFpLocMonPlcrName.setStatus("current")
_SapDcpFpLocMonState_Type = TmnxDistCpuProtState
_SapDcpFpLocMonState_Object = MibTableColumn
sapDcpFpLocMonState = _SapDcpFpLocMonState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 2),
    _SapDcpFpLocMonState_Type()
)
sapDcpFpLocMonState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpLocMonState.setStatus("current")
_SapDcpFpLocMonExcdCount_Type = Counter64
_SapDcpFpLocMonExcdCount_Object = MibTableColumn
sapDcpFpLocMonExcdCount = _SapDcpFpLocMonExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 3),
    _SapDcpFpLocMonExcdCount_Type()
)
sapDcpFpLocMonExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpLocMonExcdCount.setStatus("current")
_SapDcpFpLocMonExcdCountHi_Type = Counter32
_SapDcpFpLocMonExcdCountHi_Object = MibTableColumn
sapDcpFpLocMonExcdCountHi = _SapDcpFpLocMonExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 4),
    _SapDcpFpLocMonExcdCountHi_Type()
)
sapDcpFpLocMonExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpLocMonExcdCountHi.setStatus("current")
_SapDcpFpLocMonExcdCountLo_Type = Counter32
_SapDcpFpLocMonExcdCountLo_Object = MibTableColumn
sapDcpFpLocMonExcdCountLo = _SapDcpFpLocMonExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 5),
    _SapDcpFpLocMonExcdCountLo_Type()
)
sapDcpFpLocMonExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpLocMonExcdCountLo.setStatus("current")
_SapDcpFpLocMonAllDynAlloc_Type = TruthValue
_SapDcpFpLocMonAllDynAlloc_Object = MibTableColumn
sapDcpFpLocMonAllDynAlloc = _SapDcpFpLocMonAllDynAlloc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 150, 1, 6),
    _SapDcpFpLocMonAllDynAlloc_Type()
)
sapDcpFpLocMonAllDynAlloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDcpFpLocMonAllDynAlloc.setStatus("current")
_SapNotificationObjects_ObjectIdentity = ObjectIdentity
sapNotificationObjects = _SapNotificationObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 151)
)
_SapDcpTimeEventOccured_Type = TimeStamp
_SapDcpTimeEventOccured_Object = MibScalar
sapDcpTimeEventOccured = _SapDcpTimeEventOccured_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 151, 1),
    _SapDcpTimeEventOccured_Type()
)
sapDcpTimeEventOccured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    sapDcpTimeEventOccured.setStatus("current")
_SapTlsStaticIsidRngTable_Object = MibTable
sapTlsStaticIsidRngTable = _SapTlsStaticIsidRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152)
)
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngTable.setStatus("current")
_SapTlsStaticIsidRngEntry_Object = MibTableRow
sapTlsStaticIsidRngEntry = _SapTlsStaticIsidRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1)
)
sapTlsStaticIsidRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsStaticIsidRngId"),
)
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngEntry.setStatus("current")


class _SapTlsStaticIsidRngId_Type(Unsigned32):
    """Custom type sapTlsStaticIsidRngId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SapTlsStaticIsidRngId_Type.__name__ = "Unsigned32"
_SapTlsStaticIsidRngId_Object = MibTableColumn
sapTlsStaticIsidRngId = _SapTlsStaticIsidRngId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1, 1),
    _SapTlsStaticIsidRngId_Type()
)
sapTlsStaticIsidRngId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngId.setStatus("current")
_SapTlsStaticIsidRngRowStatus_Type = RowStatus
_SapTlsStaticIsidRngRowStatus_Object = MibTableColumn
sapTlsStaticIsidRngRowStatus = _SapTlsStaticIsidRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1, 2),
    _SapTlsStaticIsidRngRowStatus_Type()
)
sapTlsStaticIsidRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngRowStatus.setStatus("current")
_SapTlsStaticIsidRngLastChanged_Type = TimeStamp
_SapTlsStaticIsidRngLastChanged_Object = MibTableColumn
sapTlsStaticIsidRngLastChanged = _SapTlsStaticIsidRngLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1, 3),
    _SapTlsStaticIsidRngLastChanged_Type()
)
sapTlsStaticIsidRngLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngLastChanged.setStatus("current")


class _SapTlsStaticIsidRngLow_Type(TmnxISID):
    """Custom type sapTlsStaticIsidRngLow based on TmnxISID"""
    defaultValue = 0


_SapTlsStaticIsidRngLow_Type.__name__ = "TmnxISID"
_SapTlsStaticIsidRngLow_Object = MibTableColumn
sapTlsStaticIsidRngLow = _SapTlsStaticIsidRngLow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1, 4),
    _SapTlsStaticIsidRngLow_Type()
)
sapTlsStaticIsidRngLow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngLow.setStatus("current")


class _SapTlsStaticIsidRngHigh_Type(TmnxISID):
    """Custom type sapTlsStaticIsidRngHigh based on TmnxISID"""
    defaultValue = 0


_SapTlsStaticIsidRngHigh_Type.__name__ = "TmnxISID"
_SapTlsStaticIsidRngHigh_Object = MibTableColumn
sapTlsStaticIsidRngHigh = _SapTlsStaticIsidRngHigh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 152, 1, 5),
    _SapTlsStaticIsidRngHigh_Type()
)
sapTlsStaticIsidRngHigh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapTlsStaticIsidRngHigh.setStatus("current")
_SapTlsDhcp6InfoTable_Object = MibTable
sapTlsDhcp6InfoTable = _SapTlsDhcp6InfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153)
)
if mibBuilder.loadTexts:
    sapTlsDhcp6InfoTable.setStatus("current")
_SapTlsDhcp6InfoEntry_Object = MibTableRow
sapTlsDhcp6InfoEntry = _SapTlsDhcp6InfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1)
)
if mibBuilder.loadTexts:
    sapTlsDhcp6InfoEntry.setStatus("current")


class _SapTlsDhcp6AdminState_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcp6AdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcp6AdminState_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcp6AdminState_Object = MibTableColumn
sapTlsDhcp6AdminState = _SapTlsDhcp6AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 1),
    _SapTlsDhcp6AdminState_Type()
)
sapTlsDhcp6AdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6AdminState.setStatus("current")


class _SapTlsDhcp6Description_Type(ServObjDesc):
    """Custom type sapTlsDhcp6Description based on ServObjDesc"""
    defaultHexValue = ""


_SapTlsDhcp6Description_Type.__name__ = "ServObjDesc"
_SapTlsDhcp6Description_Object = MibTableColumn
sapTlsDhcp6Description = _SapTlsDhcp6Description_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 2),
    _SapTlsDhcp6Description_Type()
)
sapTlsDhcp6Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6Description.setStatus("current")


class _SapTlsDhcp6Snoop_Type(TmnxEnabledDisabled):
    """Custom type sapTlsDhcp6Snoop based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapTlsDhcp6Snoop_Type.__name__ = "TmnxEnabledDisabled"
_SapTlsDhcp6Snoop_Object = MibTableColumn
sapTlsDhcp6Snoop = _SapTlsDhcp6Snoop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 3),
    _SapTlsDhcp6Snoop_Type()
)
sapTlsDhcp6Snoop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6Snoop.setStatus("current")


class _SapTlsDhcp6InterfaceId_Type(Integer32):
    """Custom type sapTlsDhcp6InterfaceId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("asciiTuple", 1),
          ("vlanAsciiTuple", 2))
    )


_SapTlsDhcp6InterfaceId_Type.__name__ = "Integer32"
_SapTlsDhcp6InterfaceId_Object = MibTableColumn
sapTlsDhcp6InterfaceId = _SapTlsDhcp6InterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 4),
    _SapTlsDhcp6InterfaceId_Type()
)
sapTlsDhcp6InterfaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6InterfaceId.setStatus("current")


class _SapTlsDhcp6RemoteId_Type(Integer32):
    """Custom type sapTlsDhcp6RemoteId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("mac", 2),
          ("remote-id", 3))
    )


_SapTlsDhcp6RemoteId_Type.__name__ = "Integer32"
_SapTlsDhcp6RemoteId_Object = MibTableColumn
sapTlsDhcp6RemoteId = _SapTlsDhcp6RemoteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 5),
    _SapTlsDhcp6RemoteId_Type()
)
sapTlsDhcp6RemoteId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6RemoteId.setStatus("current")


class _SapTlsDhcp6RemoteIdString_Type(DisplayString):
    """Custom type sapTlsDhcp6RemoteIdString based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapTlsDhcp6RemoteIdString_Type.__name__ = "DisplayString"
_SapTlsDhcp6RemoteIdString_Object = MibTableColumn
sapTlsDhcp6RemoteIdString = _SapTlsDhcp6RemoteIdString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 153, 1, 6),
    _SapTlsDhcp6RemoteIdString_Type()
)
sapTlsDhcp6RemoteIdString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDhcp6RemoteIdString.setStatus("current")
_SapTlsStaticIsidTable_Object = MibTable
sapTlsStaticIsidTable = _SapTlsStaticIsidTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 154)
)
if mibBuilder.loadTexts:
    sapTlsStaticIsidTable.setStatus("current")
_SapTlsStaticIsidEntry_Object = MibTableRow
sapTlsStaticIsidEntry = _SapTlsStaticIsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 154, 1)
)
sapTlsStaticIsidEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapTlsStaticIsid"),
)
if mibBuilder.loadTexts:
    sapTlsStaticIsidEntry.setStatus("current")
_SapTlsStaticIsid_Type = TmnxISID
_SapTlsStaticIsid_Object = MibTableColumn
sapTlsStaticIsid = _SapTlsStaticIsid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 154, 1, 1),
    _SapTlsStaticIsid_Type()
)
sapTlsStaticIsid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapTlsStaticIsid.setStatus("current")
_SapTlsStaticIsidStatus_Type = TmnxIsidMFibStatus
_SapTlsStaticIsidStatus_Object = MibTableColumn
sapTlsStaticIsidStatus = _SapTlsStaticIsidStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 154, 1, 2),
    _SapTlsStaticIsidStatus_Type()
)
sapTlsStaticIsidStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsStaticIsidStatus.setStatus("current")
_SapEthLoopbackTable_Object = MibTable
sapEthLoopbackTable = _SapEthLoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155)
)
if mibBuilder.loadTexts:
    sapEthLoopbackTable.setStatus("current")
_SapEthLoopbackEntry_Object = MibTableRow
sapEthLoopbackEntry = _SapEthLoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1)
)
sapEthLoopbackEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapEthLoopbackEntry.setStatus("current")
_SapEthLoopbackRowStatus_Type = RowStatus
_SapEthLoopbackRowStatus_Object = MibTableColumn
sapEthLoopbackRowStatus = _SapEthLoopbackRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 1),
    _SapEthLoopbackRowStatus_Type()
)
sapEthLoopbackRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthLoopbackRowStatus.setStatus("current")


class _SapEthLoopbackMode_Type(Integer32):
    """Custom type sapEthLoopbackMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ingress", 1),
          ("egress", 2))
    )


_SapEthLoopbackMode_Type.__name__ = "Integer32"
_SapEthLoopbackMode_Object = MibTableColumn
sapEthLoopbackMode = _SapEthLoopbackMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 2),
    _SapEthLoopbackMode_Type()
)
sapEthLoopbackMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthLoopbackMode.setStatus("current")


class _SapEthLoopbackMacSwap_Type(TmnxEnabledDisabled):
    """Custom type sapEthLoopbackMacSwap based on TmnxEnabledDisabled"""
    defaultValue = 2


_SapEthLoopbackMacSwap_Type.__name__ = "TmnxEnabledDisabled"
_SapEthLoopbackMacSwap_Object = MibTableColumn
sapEthLoopbackMacSwap = _SapEthLoopbackMacSwap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 3),
    _SapEthLoopbackMacSwap_Type()
)
sapEthLoopbackMacSwap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthLoopbackMacSwap.setStatus("current")


class _SapEthLoopbackMacSwapAddr_Type(MacAddress):
    """Custom type sapEthLoopbackMacSwapAddr based on MacAddress"""
    defaultHexValue = "000000000000"


_SapEthLoopbackMacSwapAddr_Type.__name__ = "MacAddress"
_SapEthLoopbackMacSwapAddr_Object = MibTableColumn
sapEthLoopbackMacSwapAddr = _SapEthLoopbackMacSwapAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 4),
    _SapEthLoopbackMacSwapAddr_Type()
)
sapEthLoopbackMacSwapAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthLoopbackMacSwapAddr.setStatus("current")


class _SapEthLoopbackMacSwapAddrAll_Type(TruthValue):
    """Custom type sapEthLoopbackMacSwapAddrAll based on TruthValue"""
    defaultValue = 2


_SapEthLoopbackMacSwapAddrAll_Type.__name__ = "TruthValue"
_SapEthLoopbackMacSwapAddrAll_Object = MibTableColumn
sapEthLoopbackMacSwapAddrAll = _SapEthLoopbackMacSwapAddrAll_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 5),
    _SapEthLoopbackMacSwapAddrAll_Type()
)
sapEthLoopbackMacSwapAddrAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEthLoopbackMacSwapAddrAll.setStatus("current")
_SapEthLoopbackOperState_Type = ServiceOperStatus
_SapEthLoopbackOperState_Object = MibTableColumn
sapEthLoopbackOperState = _SapEthLoopbackOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 155, 1, 6),
    _SapEthLoopbackOperState_Type()
)
sapEthLoopbackOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEthLoopbackOperState.setStatus("current")
_SapTlsFdbMacStatsTable_Object = MibTable
sapTlsFdbMacStatsTable = _SapTlsFdbMacStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 156)
)
if mibBuilder.loadTexts:
    sapTlsFdbMacStatsTable.setStatus("current")
_SapTlsFdbMacStatsEntry_Object = MibTableRow
sapTlsFdbMacStatsEntry = _SapTlsFdbMacStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 156, 1)
)
sapTlsFdbMacStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsFdbType"),
)
if mibBuilder.loadTexts:
    sapTlsFdbMacStatsEntry.setStatus("current")
_SapTlsFdbMacStatsNumEntries_Type = Unsigned32
_SapTlsFdbMacStatsNumEntries_Object = MibTableColumn
sapTlsFdbMacStatsNumEntries = _SapTlsFdbMacStatsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 156, 1, 1),
    _SapTlsFdbMacStatsNumEntries_Type()
)
sapTlsFdbMacStatsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsFdbMacStatsNumEntries.setStatus("current")
_TmnxSapTlsExInfoTable_Object = MibTable
tmnxSapTlsExInfoTable = _TmnxSapTlsExInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157)
)
if mibBuilder.loadTexts:
    tmnxSapTlsExInfoTable.setStatus("current")
_TmnxSapTlsExInfoEntry_Object = MibTableRow
tmnxSapTlsExInfoEntry = _TmnxSapTlsExInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1)
)
if mibBuilder.loadTexts:
    tmnxSapTlsExInfoEntry.setStatus("current")
_TmnxSapTlsExLastChanged_Type = TimeStamp
_TmnxSapTlsExLastChanged_Object = MibTableColumn
tmnxSapTlsExLastChanged = _TmnxSapTlsExLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 1),
    _TmnxSapTlsExLastChanged_Type()
)
tmnxSapTlsExLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapTlsExLastChanged.setStatus("current")


class _TmnxSapTlsExDhcpPythonPolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapTlsExDhcpPythonPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapTlsExDhcpPythonPolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapTlsExDhcpPythonPolicy_Object = MibTableColumn
tmnxSapTlsExDhcpPythonPolicy = _TmnxSapTlsExDhcpPythonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 2),
    _TmnxSapTlsExDhcpPythonPolicy_Type()
)
tmnxSapTlsExDhcpPythonPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExDhcpPythonPolicy.setStatus("current")


class _TmnxSapTlsExDhcp6PythonPolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapTlsExDhcp6PythonPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapTlsExDhcp6PythonPolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapTlsExDhcp6PythonPolicy_Object = MibTableColumn
tmnxSapTlsExDhcp6PythonPolicy = _TmnxSapTlsExDhcp6PythonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 3),
    _TmnxSapTlsExDhcp6PythonPolicy_Type()
)
tmnxSapTlsExDhcp6PythonPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExDhcp6PythonPolicy.setStatus("current")


class _TmnxSapTlsExRtrSolMsapTrigger_Type(TruthValue):
    """Custom type tmnxSapTlsExRtrSolMsapTrigger based on TruthValue"""
    defaultValue = 2


_TmnxSapTlsExRtrSolMsapTrigger_Type.__name__ = "TruthValue"
_TmnxSapTlsExRtrSolMsapTrigger_Object = MibTableColumn
tmnxSapTlsExRtrSolMsapTrigger = _TmnxSapTlsExRtrSolMsapTrigger_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 4),
    _TmnxSapTlsExRtrSolMsapTrigger_Type()
)
tmnxSapTlsExRtrSolMsapTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExRtrSolMsapTrigger.setStatus("current")


class _TmnxSapTlsExRtrSolUserDb_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapTlsExRtrSolUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapTlsExRtrSolUserDb_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapTlsExRtrSolUserDb_Object = MibTableColumn
tmnxSapTlsExRtrSolUserDb = _TmnxSapTlsExRtrSolUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 5),
    _TmnxSapTlsExRtrSolUserDb_Type()
)
tmnxSapTlsExRtrSolUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExRtrSolUserDb.setStatus("current")


class _TmnxSapTlsExProcCpmTrfcSapDn_Type(TmnxEnabledDisabled):
    """Custom type tmnxSapTlsExProcCpmTrfcSapDn based on TmnxEnabledDisabled"""
    defaultValue = 2


_TmnxSapTlsExProcCpmTrfcSapDn_Type.__name__ = "TmnxEnabledDisabled"
_TmnxSapTlsExProcCpmTrfcSapDn_Object = MibTableColumn
tmnxSapTlsExProcCpmTrfcSapDn = _TmnxSapTlsExProcCpmTrfcSapDn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 6),
    _TmnxSapTlsExProcCpmTrfcSapDn_Type()
)
tmnxSapTlsExProcCpmTrfcSapDn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExProcCpmTrfcSapDn.setStatus("current")


class _TmnxSapTlsExDiameterAuthPolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapTlsExDiameterAuthPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapTlsExDiameterAuthPolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapTlsExDiameterAuthPolicy_Object = MibTableColumn
tmnxSapTlsExDiameterAuthPolicy = _TmnxSapTlsExDiameterAuthPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 7),
    _TmnxSapTlsExDiameterAuthPolicy_Type()
)
tmnxSapTlsExDiameterAuthPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExDiameterAuthPolicy.setStatus("current")


class _TmnxSapTlsExPppoePythonPolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapTlsExPppoePythonPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapTlsExPppoePythonPolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapTlsExPppoePythonPolicy_Object = MibTableColumn
tmnxSapTlsExPppoePythonPolicy = _TmnxSapTlsExPppoePythonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 8),
    _TmnxSapTlsExPppoePythonPolicy_Type()
)
tmnxSapTlsExPppoePythonPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExPppoePythonPolicy.setStatus("current")


class _TmnxSapTlsExAllowDot1qMsap_Type(TruthValue):
    """Custom type tmnxSapTlsExAllowDot1qMsap based on TruthValue"""
    defaultValue = 2


_TmnxSapTlsExAllowDot1qMsap_Type.__name__ = "TruthValue"
_TmnxSapTlsExAllowDot1qMsap_Object = MibTableColumn
tmnxSapTlsExAllowDot1qMsap = _TmnxSapTlsExAllowDot1qMsap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 9),
    _TmnxSapTlsExAllowDot1qMsap_Type()
)
tmnxSapTlsExAllowDot1qMsap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExAllowDot1qMsap.setStatus("current")


class _TmnxSapTlsExEgressDestMac_Type(MacAddress):
    """Custom type tmnxSapTlsExEgressDestMac based on MacAddress"""
    defaultHexValue = "000000000000"


_TmnxSapTlsExEgressDestMac_Type.__name__ = "MacAddress"
_TmnxSapTlsExEgressDestMac_Object = MibTableColumn
tmnxSapTlsExEgressDestMac = _TmnxSapTlsExEgressDestMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 10),
    _TmnxSapTlsExEgressDestMac_Type()
)
tmnxSapTlsExEgressDestMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapTlsExEgressDestMac.setStatus("current")


class _SapTlsDisableSendBvplsEvpnFlush_Type(TruthValue):
    """Custom type sapTlsDisableSendBvplsEvpnFlush based on TruthValue"""
    defaultValue = 2


_SapTlsDisableSendBvplsEvpnFlush_Type.__name__ = "TruthValue"
_SapTlsDisableSendBvplsEvpnFlush_Object = MibTableColumn
sapTlsDisableSendBvplsEvpnFlush = _SapTlsDisableSendBvplsEvpnFlush_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 11),
    _SapTlsDisableSendBvplsEvpnFlush_Type()
)
sapTlsDisableSendBvplsEvpnFlush.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsDisableSendBvplsEvpnFlush.setStatus("current")


class _SapTlsAutoLrnMacProtectExcList_Type(TNamedItemOrEmpty):
    """Custom type sapTlsAutoLrnMacProtectExcList based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SapTlsAutoLrnMacProtectExcList_Type.__name__ = "TNamedItemOrEmpty"
_SapTlsAutoLrnMacProtectExcList_Object = MibTableColumn
sapTlsAutoLrnMacProtectExcList = _SapTlsAutoLrnMacProtectExcList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 12),
    _SapTlsAutoLrnMacProtectExcList_Type()
)
sapTlsAutoLrnMacProtectExcList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsAutoLrnMacProtectExcList.setStatus("current")


class _SapTlsExBgpVplsMhVeId_Type(TmnxVeId):
    """Custom type sapTlsExBgpVplsMhVeId based on TmnxVeId"""
    defaultValue = -1


_SapTlsExBgpVplsMhVeId_Type.__name__ = "TmnxVeId"
_SapTlsExBgpVplsMhVeId_Object = MibTableColumn
sapTlsExBgpVplsMhVeId = _SapTlsExBgpVplsMhVeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 157, 1, 13),
    _SapTlsExBgpVplsMhVeId_Type()
)
sapTlsExBgpVplsMhVeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sapTlsExBgpVplsMhVeId.setStatus("current")
_SapLagPerLinkHashTableLastChgd_Type = TimeStamp
_SapLagPerLinkHashTableLastChgd_Object = MibScalar
sapLagPerLinkHashTableLastChgd = _SapLagPerLinkHashTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 158),
    _SapLagPerLinkHashTableLastChgd_Type()
)
sapLagPerLinkHashTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLagPerLinkHashTableLastChgd.setStatus("current")
_SapLagPerLinkHashTable_Object = MibTable
sapLagPerLinkHashTable = _SapLagPerLinkHashTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159)
)
if mibBuilder.loadTexts:
    sapLagPerLinkHashTable.setStatus("current")
_SapLagPerLinkHashEntry_Object = MibTableRow
sapLagPerLinkHashEntry = _SapLagPerLinkHashEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1)
)
sapLagPerLinkHashEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapLagPerLinkHashEntry.setStatus("current")
_SapLagPerLinkHashLastChanged_Type = TimeStamp
_SapLagPerLinkHashLastChanged_Object = MibTableColumn
sapLagPerLinkHashLastChanged = _SapLagPerLinkHashLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 1),
    _SapLagPerLinkHashLastChanged_Type()
)
sapLagPerLinkHashLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLagPerLinkHashLastChanged.setStatus("current")


class _SapLagPerLinkHashClass_Type(TmnxLagPerLinkHashClass):
    """Custom type sapLagPerLinkHashClass based on TmnxLagPerLinkHashClass"""
    defaultValue = 1


_SapLagPerLinkHashClass_Type.__name__ = "TmnxLagPerLinkHashClass"
_SapLagPerLinkHashClass_Object = MibTableColumn
sapLagPerLinkHashClass = _SapLagPerLinkHashClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 2),
    _SapLagPerLinkHashClass_Type()
)
sapLagPerLinkHashClass.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapLagPerLinkHashClass.setStatus("current")


class _SapLagPerLinkHashWeight_Type(TmnxLagPerLinkHashWeight):
    """Custom type sapLagPerLinkHashWeight based on TmnxLagPerLinkHashWeight"""
    defaultValue = 1


_SapLagPerLinkHashWeight_Type.__name__ = "TmnxLagPerLinkHashWeight"
_SapLagPerLinkHashWeight_Object = MibTableColumn
sapLagPerLinkHashWeight = _SapLagPerLinkHashWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 3),
    _SapLagPerLinkHashWeight_Type()
)
sapLagPerLinkHashWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapLagPerLinkHashWeight.setStatus("current")
_SapLagPerLinkHashOperClass_Type = TmnxLagPerLinkHashClass
_SapLagPerLinkHashOperClass_Object = MibTableColumn
sapLagPerLinkHashOperClass = _SapLagPerLinkHashOperClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 4),
    _SapLagPerLinkHashOperClass_Type()
)
sapLagPerLinkHashOperClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLagPerLinkHashOperClass.setStatus("current")
_SapLagPerLinkHashOperWeight_Type = TmnxLagPerLinkHashWeight
_SapLagPerLinkHashOperWeight_Object = MibTableColumn
sapLagPerLinkHashOperWeight = _SapLagPerLinkHashOperWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 5),
    _SapLagPerLinkHashOperWeight_Type()
)
sapLagPerLinkHashOperWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLagPerLinkHashOperWeight.setStatus("current")
_SapLagPerLinkHashIsOverriden_Type = TruthValue
_SapLagPerLinkHashIsOverriden_Object = MibTableColumn
sapLagPerLinkHashIsOverriden = _SapLagPerLinkHashIsOverriden_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 159, 1, 6),
    _SapLagPerLinkHashIsOverriden_Type()
)
sapLagPerLinkHashIsOverriden.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapLagPerLinkHashIsOverriden.setStatus("current")
_TmnxSapIpoeTableLastChanged_Type = TimeStamp
_TmnxSapIpoeTableLastChanged_Object = MibScalar
tmnxSapIpoeTableLastChanged = _TmnxSapIpoeTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 160),
    _TmnxSapIpoeTableLastChanged_Type()
)
tmnxSapIpoeTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapIpoeTableLastChanged.setStatus("current")
_TmnxSapIpoeTable_Object = MibTable
tmnxSapIpoeTable = _TmnxSapIpoeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161)
)
if mibBuilder.loadTexts:
    tmnxSapIpoeTable.setStatus("current")
_TmnxSapIpoeEntry_Object = MibTableRow
tmnxSapIpoeEntry = _TmnxSapIpoeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1)
)
tmnxSapIpoeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    tmnxSapIpoeEntry.setStatus("current")
_TmnxSapIpoeLastChanged_Type = TimeStamp
_TmnxSapIpoeLastChanged_Object = MibTableColumn
tmnxSapIpoeLastChanged = _TmnxSapIpoeLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1, 1),
    _TmnxSapIpoeLastChanged_Type()
)
tmnxSapIpoeLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapIpoeLastChanged.setStatus("current")


class _TmnxSapIpoeAdminState_Type(TmnxEnabledDisabled):
    """Custom type tmnxSapIpoeAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_TmnxSapIpoeAdminState_Type.__name__ = "TmnxEnabledDisabled"
_TmnxSapIpoeAdminState_Object = MibTableColumn
tmnxSapIpoeAdminState = _TmnxSapIpoeAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1, 2),
    _TmnxSapIpoeAdminState_Type()
)
tmnxSapIpoeAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapIpoeAdminState.setStatus("current")


class _TmnxSapIpoeDescription_Type(TItemDescription):
    """Custom type tmnxSapIpoeDescription based on TItemDescription"""
    defaultValue = OctetString("")


_TmnxSapIpoeDescription_Type.__name__ = "TItemDescription"
_TmnxSapIpoeDescription_Object = MibTableColumn
tmnxSapIpoeDescription = _TmnxSapIpoeDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1, 3),
    _TmnxSapIpoeDescription_Type()
)
tmnxSapIpoeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapIpoeDescription.setStatus("current")


class _TmnxSapIpoePolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapIpoePolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapIpoePolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapIpoePolicy_Object = MibTableColumn
tmnxSapIpoePolicy = _TmnxSapIpoePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1, 4),
    _TmnxSapIpoePolicy_Type()
)
tmnxSapIpoePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapIpoePolicy.setStatus("current")


class _TmnxSapIpoeUserDb_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapIpoeUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapIpoeUserDb_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapIpoeUserDb_Object = MibTableColumn
tmnxSapIpoeUserDb = _TmnxSapIpoeUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 161, 1, 5),
    _TmnxSapIpoeUserDb_Type()
)
tmnxSapIpoeUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSapIpoeUserDb.setStatus("current")
_TmnxStaticHostIpv6Objs_ObjectIdentity = ObjectIdentity
tmnxStaticHostIpv6Objs = _TmnxStaticHostIpv6Objs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162)
)
_SapStatHost6Table_Object = MibTable
sapStatHost6Table = _SapStatHost6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1)
)
if mibBuilder.loadTexts:
    sapStatHost6Table.setStatus("current")
_SapStatHost6Entry_Object = MibTableRow
sapStatHost6Entry = _SapStatHost6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1)
)
sapStatHost6Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6IpAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6MacAddress"),
)
if mibBuilder.loadTexts:
    sapStatHost6Entry.setStatus("current")
_SapStatHost6IpAddress_Type = InetAddressIPv6
_SapStatHost6IpAddress_Object = MibTableColumn
sapStatHost6IpAddress = _SapStatHost6IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 1),
    _SapStatHost6IpAddress_Type()
)
sapStatHost6IpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStatHost6IpAddress.setStatus("current")
_SapStatHost6MacAddress_Type = MacAddress
_SapStatHost6MacAddress_Object = MibTableColumn
sapStatHost6MacAddress = _SapStatHost6MacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 2),
    _SapStatHost6MacAddress_Type()
)
sapStatHost6MacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStatHost6MacAddress.setStatus("current")
_SapStatHost6LastChanged_Type = TimeStamp
_SapStatHost6LastChanged_Object = MibTableColumn
sapStatHost6LastChanged = _SapStatHost6LastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 3),
    _SapStatHost6LastChanged_Type()
)
sapStatHost6LastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6LastChanged.setStatus("current")
_SapStatHost6RowStatus_Type = RowStatus
_SapStatHost6RowStatus_Object = MibTableColumn
sapStatHost6RowStatus = _SapStatHost6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 4),
    _SapStatHost6RowStatus_Type()
)
sapStatHost6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6RowStatus.setStatus("current")


class _SapStatHost6AdminStatus_Type(ServiceAdminStatus):
    """Custom type sapStatHost6AdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SapStatHost6AdminStatus_Type.__name__ = "ServiceAdminStatus"
_SapStatHost6AdminStatus_Object = MibTableColumn
sapStatHost6AdminStatus = _SapStatHost6AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 5),
    _SapStatHost6AdminStatus_Type()
)
sapStatHost6AdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6AdminStatus.setStatus("current")


class _SapStatHost6PrefixLen_Type(InetAddressPrefixLength):
    """Custom type sapStatHost6PrefixLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 64),
        ValueRangeConstraint(128, 128),
    )


_SapStatHost6PrefixLen_Type.__name__ = "InetAddressPrefixLength"
_SapStatHost6PrefixLen_Object = MibTableColumn
sapStatHost6PrefixLen = _SapStatHost6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 6),
    _SapStatHost6PrefixLen_Type()
)
sapStatHost6PrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6PrefixLen.setStatus("current")


class _SapStatHost6NextHopAddrType_Type(InetAddressType):
    """Custom type sapStatHost6NextHopAddrType based on InetAddressType"""
    defaultValue = 0


_SapStatHost6NextHopAddrType_Type.__name__ = "InetAddressType"
_SapStatHost6NextHopAddrType_Object = MibTableColumn
sapStatHost6NextHopAddrType = _SapStatHost6NextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 7),
    _SapStatHost6NextHopAddrType_Type()
)
sapStatHost6NextHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6NextHopAddrType.setStatus("current")


class _SapStatHost6NextHopAddr_Type(InetAddress):
    """Custom type sapStatHost6NextHopAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SapStatHost6NextHopAddr_Type.__name__ = "InetAddress"
_SapStatHost6NextHopAddr_Object = MibTableColumn
sapStatHost6NextHopAddr = _SapStatHost6NextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 8),
    _SapStatHost6NextHopAddr_Type()
)
sapStatHost6NextHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6NextHopAddr.setStatus("current")


class _SapStatHost6SubscrIdent_Type(TmnxSubIdentStringOrEmpty):
    """Custom type sapStatHost6SubscrIdent based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SapStatHost6SubscrIdent_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SapStatHost6SubscrIdent_Object = MibTableColumn
sapStatHost6SubscrIdent = _SapStatHost6SubscrIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 9),
    _SapStatHost6SubscrIdent_Type()
)
sapStatHost6SubscrIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6SubscrIdent.setStatus("current")


class _SapStatHost6SubProfile_Type(ServObjName):
    """Custom type sapStatHost6SubProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStatHost6SubProfile_Type.__name__ = "ServObjName"
_SapStatHost6SubProfile_Object = MibTableColumn
sapStatHost6SubProfile = _SapStatHost6SubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 10),
    _SapStatHost6SubProfile_Type()
)
sapStatHost6SubProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6SubProfile.setStatus("current")


class _SapStatHost6SlaProfile_Type(ServObjName):
    """Custom type sapStatHost6SlaProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStatHost6SlaProfile_Type.__name__ = "ServObjName"
_SapStatHost6SlaProfile_Object = MibTableColumn
sapStatHost6SlaProfile = _SapStatHost6SlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 11),
    _SapStatHost6SlaProfile_Type()
)
sapStatHost6SlaProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6SlaProfile.setStatus("current")
_SapStatHost6ShcvOperState_Type = ServShcvOperState
_SapStatHost6ShcvOperState_Object = MibTableColumn
sapStatHost6ShcvOperState = _SapStatHost6ShcvOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 12),
    _SapStatHost6ShcvOperState_Type()
)
sapStatHost6ShcvOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6ShcvOperState.setStatus("current")
_SapStatHost6ShcvChecks_Type = Unsigned32
_SapStatHost6ShcvChecks_Object = MibTableColumn
sapStatHost6ShcvChecks = _SapStatHost6ShcvChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 13),
    _SapStatHost6ShcvChecks_Type()
)
sapStatHost6ShcvChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6ShcvChecks.setStatus("current")
_SapStatHost6ShcvReplies_Type = Unsigned32
_SapStatHost6ShcvReplies_Object = MibTableColumn
sapStatHost6ShcvReplies = _SapStatHost6ShcvReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 14),
    _SapStatHost6ShcvReplies_Type()
)
sapStatHost6ShcvReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6ShcvReplies.setStatus("current")
_SapStatHost6ShcvReplyTime_Type = TimeStamp
_SapStatHost6ShcvReplyTime_Object = MibTableColumn
sapStatHost6ShcvReplyTime = _SapStatHost6ShcvReplyTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 15),
    _SapStatHost6ShcvReplyTime_Type()
)
sapStatHost6ShcvReplyTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6ShcvReplyTime.setStatus("current")
_SapStatHost6DynMacAddress_Type = MacAddress
_SapStatHost6DynMacAddress_Object = MibTableColumn
sapStatHost6DynMacAddress = _SapStatHost6DynMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 16),
    _SapStatHost6DynMacAddress_Type()
)
sapStatHost6DynMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6DynMacAddress.setStatus("current")
_SapStatHost6RetailerSvcId_Type = TmnxServId
_SapStatHost6RetailerSvcId_Object = MibTableColumn
sapStatHost6RetailerSvcId = _SapStatHost6RetailerSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 17),
    _SapStatHost6RetailerSvcId_Type()
)
sapStatHost6RetailerSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6RetailerSvcId.setStatus("current")
_SapStatHost6RetailerIf_Type = InterfaceIndexOrZero
_SapStatHost6RetailerIf_Object = MibTableColumn
sapStatHost6RetailerIf = _SapStatHost6RetailerIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 18),
    _SapStatHost6RetailerIf_Type()
)
sapStatHost6RetailerIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6RetailerIf.setStatus("current")
_SapStatHost6FwdingState_Type = TmnxOperState
_SapStatHost6FwdingState_Object = MibTableColumn
sapStatHost6FwdingState = _SapStatHost6FwdingState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 19),
    _SapStatHost6FwdingState_Type()
)
sapStatHost6FwdingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6FwdingState.setStatus("current")


class _SapStatHost6AncpString_Type(TmnxAncpStringOrZero):
    """Custom type sapStatHost6AncpString based on TmnxAncpStringOrZero"""
    defaultValue = OctetString("")


_SapStatHost6AncpString_Type.__name__ = "TmnxAncpStringOrZero"
_SapStatHost6AncpString_Object = MibTableColumn
sapStatHost6AncpString = _SapStatHost6AncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 20),
    _SapStatHost6AncpString_Type()
)
sapStatHost6AncpString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6AncpString.setStatus("current")


class _SapStatHost6SubIdIsSapId_Type(TruthValue):
    """Custom type sapStatHost6SubIdIsSapId based on TruthValue"""
    defaultValue = 2


_SapStatHost6SubIdIsSapId_Type.__name__ = "TruthValue"
_SapStatHost6SubIdIsSapId_Object = MibTableColumn
sapStatHost6SubIdIsSapId = _SapStatHost6SubIdIsSapId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 21),
    _SapStatHost6SubIdIsSapId_Type()
)
sapStatHost6SubIdIsSapId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6SubIdIsSapId.setStatus("current")


class _SapStatHost6AppProfile_Type(ServObjName):
    """Custom type sapStatHost6AppProfile based on ServObjName"""
    defaultValue = OctetString("")


_SapStatHost6AppProfile_Type.__name__ = "ServObjName"
_SapStatHost6AppProfile_Object = MibTableColumn
sapStatHost6AppProfile = _SapStatHost6AppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 22),
    _SapStatHost6AppProfile_Type()
)
sapStatHost6AppProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6AppProfile.setStatus("current")


class _SapStatHost6IntermediateDestId_Type(DisplayString):
    """Custom type sapStatHost6IntermediateDestId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SapStatHost6IntermediateDestId_Type.__name__ = "DisplayString"
_SapStatHost6IntermediateDestId_Object = MibTableColumn
sapStatHost6IntermediateDestId = _SapStatHost6IntermediateDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 23),
    _SapStatHost6IntermediateDestId_Type()
)
sapStatHost6IntermediateDestId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6IntermediateDestId.setStatus("current")


class _SapStatHost6AdminRetailSvcId_Type(TmnxServId):
    """Custom type sapStatHost6AdminRetailSvcId based on TmnxServId"""
    defaultValue = 0


_SapStatHost6AdminRetailSvcId_Type.__name__ = "TmnxServId"
_SapStatHost6AdminRetailSvcId_Object = MibTableColumn
sapStatHost6AdminRetailSvcId = _SapStatHost6AdminRetailSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 24),
    _SapStatHost6AdminRetailSvcId_Type()
)
sapStatHost6AdminRetailSvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6AdminRetailSvcId.setStatus("current")


class _SapStatHost6AppProfileScope_Type(TmnxSapAASubScope):
    """Custom type sapStatHost6AppProfileScope based on TmnxSapAASubScope"""
    defaultValue = 1


_SapStatHost6AppProfileScope_Type.__name__ = "TmnxSapAASubScope"
_SapStatHost6AppProfileScope_Object = MibTableColumn
sapStatHost6AppProfileScope = _SapStatHost6AppProfileScope_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 1, 1, 25),
    _SapStatHost6AppProfileScope_Type()
)
sapStatHost6AppProfileScope.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6AppProfileScope.setStatus("current")
_SapStatHost6MRtTable_Object = MibTable
sapStatHost6MRtTable = _SapStatHost6MRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2)
)
if mibBuilder.loadTexts:
    sapStatHost6MRtTable.setStatus("current")
_SapStatHost6MRtEntry_Object = MibTableRow
sapStatHost6MRtEntry = _SapStatHost6MRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1)
)
sapStatHost6MRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6IpAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6MacAddress"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6MRtAddrType"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6MRtAddr"),
    (0, "TIMETRA-SAP-MIB", "sapStatHost6MRtPrefixLen"),
)
if mibBuilder.loadTexts:
    sapStatHost6MRtEntry.setStatus("current")
_SapStatHost6MRtAddrType_Type = InetAddressType
_SapStatHost6MRtAddrType_Object = MibTableColumn
sapStatHost6MRtAddrType = _SapStatHost6MRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 1),
    _SapStatHost6MRtAddrType_Type()
)
sapStatHost6MRtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStatHost6MRtAddrType.setStatus("current")


class _SapStatHost6MRtAddr_Type(InetAddress):
    """Custom type sapStatHost6MRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapStatHost6MRtAddr_Type.__name__ = "InetAddress"
_SapStatHost6MRtAddr_Object = MibTableColumn
sapStatHost6MRtAddr = _SapStatHost6MRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 2),
    _SapStatHost6MRtAddr_Type()
)
sapStatHost6MRtAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStatHost6MRtAddr.setStatus("current")


class _SapStatHost6MRtPrefixLen_Type(InetAddressPrefixLength):
    """Custom type sapStatHost6MRtPrefixLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_SapStatHost6MRtPrefixLen_Type.__name__ = "InetAddressPrefixLength"
_SapStatHost6MRtPrefixLen_Object = MibTableColumn
sapStatHost6MRtPrefixLen = _SapStatHost6MRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 3),
    _SapStatHost6MRtPrefixLen_Type()
)
sapStatHost6MRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapStatHost6MRtPrefixLen.setStatus("current")
_SapStatHost6MRtRowStatus_Type = RowStatus
_SapStatHost6MRtRowStatus_Object = MibTableColumn
sapStatHost6MRtRowStatus = _SapStatHost6MRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 4),
    _SapStatHost6MRtRowStatus_Type()
)
sapStatHost6MRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6MRtRowStatus.setStatus("current")
_SapStatHost6MRtLastMgmtChange_Type = TimeStamp
_SapStatHost6MRtLastMgmtChange_Object = MibTableColumn
sapStatHost6MRtLastMgmtChange = _SapStatHost6MRtLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 5),
    _SapStatHost6MRtLastMgmtChange_Type()
)
sapStatHost6MRtLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6MRtLastMgmtChange.setStatus("current")
_SapStatHost6MRtStatus_Type = TmnxManagedRouteStatus
_SapStatHost6MRtStatus_Object = MibTableColumn
sapStatHost6MRtStatus = _SapStatHost6MRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 6),
    _SapStatHost6MRtStatus_Type()
)
sapStatHost6MRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6MRtStatus.setStatus("current")


class _SapStatHost6MRtMetric_Type(Unsigned32):
    """Custom type sapStatHost6MRtMetric based on Unsigned32"""
    defaultValue = 0


_SapStatHost6MRtMetric_Type.__name__ = "Unsigned32"
_SapStatHost6MRtMetric_Object = MibTableColumn
sapStatHost6MRtMetric = _SapStatHost6MRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 7),
    _SapStatHost6MRtMetric_Type()
)
sapStatHost6MRtMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6MRtMetric.setStatus("current")


class _SapStatHost6MRtPreference_Type(Unsigned32):
    """Custom type sapStatHost6MRtPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SapStatHost6MRtPreference_Type.__name__ = "Unsigned32"
_SapStatHost6MRtPreference_Object = MibTableColumn
sapStatHost6MRtPreference = _SapStatHost6MRtPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 8),
    _SapStatHost6MRtPreference_Type()
)
sapStatHost6MRtPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6MRtPreference.setStatus("current")


class _SapStatHost6MRtTag_Type(Unsigned32):
    """Custom type sapStatHost6MRtTag based on Unsigned32"""
    defaultValue = 0


_SapStatHost6MRtTag_Type.__name__ = "Unsigned32"
_SapStatHost6MRtTag_Object = MibTableColumn
sapStatHost6MRtTag = _SapStatHost6MRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 162, 2, 1, 9),
    _SapStatHost6MRtTag_Type()
)
sapStatHost6MRtTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapStatHost6MRtTag.setStatus("current")
_SapStatHost6TableLastChanged_Type = TimeStamp
_SapStatHost6TableLastChanged_Object = MibScalar
sapStatHost6TableLastChanged = _SapStatHost6TableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 163),
    _SapStatHost6TableLastChanged_Type()
)
sapStatHost6TableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6TableLastChanged.setStatus("current")
_SapStatHost6MRtTblLastChgd_Type = TimeStamp
_SapStatHost6MRtTblLastChgd_Object = MibScalar
sapStatHost6MRtTblLastChgd = _SapStatHost6MRtTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 164),
    _SapStatHost6MRtTblLastChgd_Type()
)
sapStatHost6MRtTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStatHost6MRtTblLastChgd.setStatus("current")
_SapIngQosQueueDepthInfoTable_Object = MibTable
sapIngQosQueueDepthInfoTable = _SapIngQosQueueDepthInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165)
)
if mibBuilder.loadTexts:
    sapIngQosQueueDepthInfoTable.setStatus("current")
_SapIngQosQueueDepthInfoEntry_Object = MibTableRow
sapIngQosQueueDepthInfoEntry = _SapIngQosQueueDepthInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1)
)
sapIngQosQueueDepthInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapIngQosQueueId"),
)
if mibBuilder.loadTexts:
    sapIngQosQueueDepthInfoEntry.setStatus("current")


class _SapIngQosQueueDepthPollPrcnt1_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt1 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt1_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt1_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt1 = _SapIngQosQueueDepthPollPrcnt1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 1),
    _SapIngQosQueueDepthPollPrcnt1_Type()
)
sapIngQosQueueDepthPollPrcnt1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt1.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt1.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt2_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt2 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt2_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt2_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt2 = _SapIngQosQueueDepthPollPrcnt2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 2),
    _SapIngQosQueueDepthPollPrcnt2_Type()
)
sapIngQosQueueDepthPollPrcnt2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt2.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt2.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt3_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt3 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt3_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt3_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt3 = _SapIngQosQueueDepthPollPrcnt3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 3),
    _SapIngQosQueueDepthPollPrcnt3_Type()
)
sapIngQosQueueDepthPollPrcnt3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt3.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt3.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt4_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt4 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt4_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt4_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt4 = _SapIngQosQueueDepthPollPrcnt4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 4),
    _SapIngQosQueueDepthPollPrcnt4_Type()
)
sapIngQosQueueDepthPollPrcnt4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt4.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt4.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt5_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt5 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt5_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt5_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt5 = _SapIngQosQueueDepthPollPrcnt5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 5),
    _SapIngQosQueueDepthPollPrcnt5_Type()
)
sapIngQosQueueDepthPollPrcnt5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt5.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt5.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt6_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt6 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt6_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt6_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt6 = _SapIngQosQueueDepthPollPrcnt6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 6),
    _SapIngQosQueueDepthPollPrcnt6_Type()
)
sapIngQosQueueDepthPollPrcnt6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt6.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt6.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt7_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt7 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt7_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt7_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt7 = _SapIngQosQueueDepthPollPrcnt7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 7),
    _SapIngQosQueueDepthPollPrcnt7_Type()
)
sapIngQosQueueDepthPollPrcnt7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt7.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt7.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt8_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt8 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt8_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt8_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt8 = _SapIngQosQueueDepthPollPrcnt8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 8),
    _SapIngQosQueueDepthPollPrcnt8_Type()
)
sapIngQosQueueDepthPollPrcnt8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt8.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt8.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt9_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt9 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt9_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt9_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt9 = _SapIngQosQueueDepthPollPrcnt9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 9),
    _SapIngQosQueueDepthPollPrcnt9_Type()
)
sapIngQosQueueDepthPollPrcnt9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt9.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt9.setUnits("centipercent")


class _SapIngQosQueueDepthPollPrcnt10_Type(Unsigned32):
    """Custom type sapIngQosQueueDepthPollPrcnt10 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapIngQosQueueDepthPollPrcnt10_Type.__name__ = "Unsigned32"
_SapIngQosQueueDepthPollPrcnt10_Object = MibTableColumn
sapIngQosQueueDepthPollPrcnt10 = _SapIngQosQueueDepthPollPrcnt10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 10),
    _SapIngQosQueueDepthPollPrcnt10_Type()
)
sapIngQosQueueDepthPollPrcnt10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt10.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthPollPrcnt10.setUnits("centipercent")
_SapIngQosQueueDepthAvgPollInt_Type = Unsigned32
_SapIngQosQueueDepthAvgPollInt_Object = MibTableColumn
sapIngQosQueueDepthAvgPollInt = _SapIngQosQueueDepthAvgPollInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 11),
    _SapIngQosQueueDepthAvgPollInt_Type()
)
sapIngQosQueueDepthAvgPollInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthAvgPollInt.setStatus("current")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthAvgPollInt.setUnits("milliseconds")
_SapIngQosQueueDepthAvgElpsdTme_Type = TimeStamp
_SapIngQosQueueDepthAvgElpsdTme_Object = MibTableColumn
sapIngQosQueueDepthAvgElpsdTme = _SapIngQosQueueDepthAvgElpsdTme_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 165, 1, 12),
    _SapIngQosQueueDepthAvgElpsdTme_Type()
)
sapIngQosQueueDepthAvgElpsdTme.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapIngQosQueueDepthAvgElpsdTme.setStatus("current")
_SapEgrQosQueueDepthInfoTable_Object = MibTable
sapEgrQosQueueDepthInfoTable = _SapEgrQosQueueDepthInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166)
)
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthInfoTable.setStatus("current")
_SapEgrQosQueueDepthInfoEntry_Object = MibTableRow
sapEgrQosQueueDepthInfoEntry = _SapEgrQosQueueDepthInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1)
)
sapEgrQosQueueDepthInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
)
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthInfoEntry.setStatus("current")


class _SapEgrQosQueueDepthPollPrcnt1_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt1 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt1_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt1_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt1 = _SapEgrQosQueueDepthPollPrcnt1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 1),
    _SapEgrQosQueueDepthPollPrcnt1_Type()
)
sapEgrQosQueueDepthPollPrcnt1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt1.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt1.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt2_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt2 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt2_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt2_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt2 = _SapEgrQosQueueDepthPollPrcnt2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 2),
    _SapEgrQosQueueDepthPollPrcnt2_Type()
)
sapEgrQosQueueDepthPollPrcnt2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt2.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt2.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt3_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt3 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt3_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt3_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt3 = _SapEgrQosQueueDepthPollPrcnt3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 3),
    _SapEgrQosQueueDepthPollPrcnt3_Type()
)
sapEgrQosQueueDepthPollPrcnt3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt3.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt3.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt4_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt4 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt4_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt4_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt4 = _SapEgrQosQueueDepthPollPrcnt4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 4),
    _SapEgrQosQueueDepthPollPrcnt4_Type()
)
sapEgrQosQueueDepthPollPrcnt4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt4.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt4.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt5_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt5 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt5_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt5_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt5 = _SapEgrQosQueueDepthPollPrcnt5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 5),
    _SapEgrQosQueueDepthPollPrcnt5_Type()
)
sapEgrQosQueueDepthPollPrcnt5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt5.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt5.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt6_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt6 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt6_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt6_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt6 = _SapEgrQosQueueDepthPollPrcnt6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 6),
    _SapEgrQosQueueDepthPollPrcnt6_Type()
)
sapEgrQosQueueDepthPollPrcnt6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt6.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt6.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt7_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt7 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt7_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt7_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt7 = _SapEgrQosQueueDepthPollPrcnt7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 7),
    _SapEgrQosQueueDepthPollPrcnt7_Type()
)
sapEgrQosQueueDepthPollPrcnt7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt7.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt7.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt8_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt8 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt8_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt8_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt8 = _SapEgrQosQueueDepthPollPrcnt8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 8),
    _SapEgrQosQueueDepthPollPrcnt8_Type()
)
sapEgrQosQueueDepthPollPrcnt8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt8.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt8.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt9_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt9 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt9_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt9_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt9 = _SapEgrQosQueueDepthPollPrcnt9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 9),
    _SapEgrQosQueueDepthPollPrcnt9_Type()
)
sapEgrQosQueueDepthPollPrcnt9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt9.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt9.setUnits("centipercent")


class _SapEgrQosQueueDepthPollPrcnt10_Type(Unsigned32):
    """Custom type sapEgrQosQueueDepthPollPrcnt10 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_SapEgrQosQueueDepthPollPrcnt10_Type.__name__ = "Unsigned32"
_SapEgrQosQueueDepthPollPrcnt10_Object = MibTableColumn
sapEgrQosQueueDepthPollPrcnt10 = _SapEgrQosQueueDepthPollPrcnt10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 10),
    _SapEgrQosQueueDepthPollPrcnt10_Type()
)
sapEgrQosQueueDepthPollPrcnt10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt10.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthPollPrcnt10.setUnits("centipercent")
_SapEgrQosQueueDepthAvgPollInt_Type = Unsigned32
_SapEgrQosQueueDepthAvgPollInt_Object = MibTableColumn
sapEgrQosQueueDepthAvgPollInt = _SapEgrQosQueueDepthAvgPollInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 11),
    _SapEgrQosQueueDepthAvgPollInt_Type()
)
sapEgrQosQueueDepthAvgPollInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthAvgPollInt.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthAvgPollInt.setUnits("milliseconds")
_SapEgrQosQueueDepthAvgElpsdTme_Type = TimeStamp
_SapEgrQosQueueDepthAvgElpsdTme_Object = MibTableColumn
sapEgrQosQueueDepthAvgElpsdTme = _SapEgrQosQueueDepthAvgElpsdTme_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 12),
    _SapEgrQosQueueDepthAvgElpsdTme_Type()
)
sapEgrQosQueueDepthAvgElpsdTme.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthAvgElpsdTme.setStatus("current")
_SapEgrQosQueueDepthViolTotCnt_Type = Unsigned32
_SapEgrQosQueueDepthViolTotCnt_Object = MibTableColumn
sapEgrQosQueueDepthViolTotCnt = _SapEgrQosQueueDepthViolTotCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 13),
    _SapEgrQosQueueDepthViolTotCnt_Type()
)
sapEgrQosQueueDepthViolTotCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthViolTotCnt.setStatus("current")
_SapEgrQosQueueDepthViolLast_Type = TimeStamp
_SapEgrQosQueueDepthViolLast_Object = MibTableColumn
sapEgrQosQueueDepthViolLast = _SapEgrQosQueueDepthViolLast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 14),
    _SapEgrQosQueueDepthViolLast_Type()
)
sapEgrQosQueueDepthViolLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthViolLast.setStatus("current")
_SapEgrQosQueueDepthHWMPollInt_Type = Unsigned32
_SapEgrQosQueueDepthHWMPollInt_Object = MibTableColumn
sapEgrQosQueueDepthHWMPollInt = _SapEgrQosQueueDepthHWMPollInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 166, 1, 15),
    _SapEgrQosQueueDepthHWMPollInt_Type()
)
sapEgrQosQueueDepthHWMPollInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthHWMPollInt.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosQueueDepthHWMPollInt.setUnits("microseconds")
_SapStaticHostRipTable_Object = MibTable
sapStaticHostRipTable = _SapStaticHostRipTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 167)
)
if mibBuilder.loadTexts:
    sapStaticHostRipTable.setStatus("current")
_SapStaticHostRipEntry_Object = MibTableRow
sapStaticHostRipEntry = _SapStaticHostRipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 167, 1)
)
if mibBuilder.loadTexts:
    sapStaticHostRipEntry.setStatus("current")
_SapStaticHostRipPlcyName_Type = TNamedItemOrEmpty
_SapStaticHostRipPlcyName_Object = MibTableColumn
sapStaticHostRipPlcyName = _SapStaticHostRipPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 167, 1, 1),
    _SapStaticHostRipPlcyName_Type()
)
sapStaticHostRipPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostRipPlcyName.setStatus("current")
_SapStaticHostRipListenerStatus_Type = TmnxRipListenerStatus
_SapStaticHostRipListenerStatus_Object = MibTableColumn
sapStaticHostRipListenerStatus = _SapStaticHostRipListenerStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 167, 1, 2),
    _SapStaticHostRipListenerStatus_Type()
)
sapStaticHostRipListenerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapStaticHostRipListenerStatus.setStatus("current")
_SapEvpnMHEthSegTable_Object = MibTable
sapEvpnMHEthSegTable = _SapEvpnMHEthSegTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 168)
)
if mibBuilder.loadTexts:
    sapEvpnMHEthSegTable.setStatus("current")
_SapEvpnMHEthSegEntry_Object = MibTableRow
sapEvpnMHEthSegEntry = _SapEvpnMHEthSegEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 168, 1)
)
sapEvpnMHEthSegEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapEvpnMHEthSegEntry.setStatus("current")
_SapEvpnMHEthSegName_Type = TNamedItemOrEmpty
_SapEvpnMHEthSegName_Object = MibTableColumn
sapEvpnMHEthSegName = _SapEvpnMHEthSegName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 168, 1, 1),
    _SapEvpnMHEthSegName_Type()
)
sapEvpnMHEthSegName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEvpnMHEthSegName.setStatus("current")
_SapEvpnMHEthSegStatus_Type = TmnxEvpnMHEthSegStatus
_SapEvpnMHEthSegStatus_Object = MibTableColumn
sapEvpnMHEthSegStatus = _SapEvpnMHEthSegStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 168, 1, 2),
    _SapEvpnMHEthSegStatus_Type()
)
sapEvpnMHEthSegStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEvpnMHEthSegStatus.setStatus("current")
_SapDefHostExTableLastChanged_Type = TimeStamp
_SapDefHostExTableLastChanged_Object = MibScalar
sapDefHostExTableLastChanged = _SapDefHostExTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 169),
    _SapDefHostExTableLastChanged_Type()
)
sapDefHostExTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDefHostExTableLastChanged.setStatus("current")
_SapDefHostExTable_Object = MibTable
sapDefHostExTable = _SapDefHostExTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170)
)
if mibBuilder.loadTexts:
    sapDefHostExTable.setStatus("current")
_SapDefHostExEntry_Object = MibTableRow
sapDefHostExEntry = _SapDefHostExEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1)
)
sapDefHostExEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapDefHostExSubnetAddrType"),
    (0, "TIMETRA-SAP-MIB", "sapDefHostExSubnetAddr"),
    (0, "TIMETRA-SAP-MIB", "sapDefHostExSubnetAddrPfxLen"),
)
if mibBuilder.loadTexts:
    sapDefHostExEntry.setStatus("current")
_SapDefHostExSubnetAddrType_Type = InetAddressType
_SapDefHostExSubnetAddrType_Object = MibTableColumn
sapDefHostExSubnetAddrType = _SapDefHostExSubnetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 1),
    _SapDefHostExSubnetAddrType_Type()
)
sapDefHostExSubnetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDefHostExSubnetAddrType.setStatus("current")


class _SapDefHostExSubnetAddr_Type(InetAddress):
    """Custom type sapDefHostExSubnetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapDefHostExSubnetAddr_Type.__name__ = "InetAddress"
_SapDefHostExSubnetAddr_Object = MibTableColumn
sapDefHostExSubnetAddr = _SapDefHostExSubnetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 2),
    _SapDefHostExSubnetAddr_Type()
)
sapDefHostExSubnetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDefHostExSubnetAddr.setStatus("current")
_SapDefHostExSubnetAddrPfxLen_Type = InetAddressPrefixLength
_SapDefHostExSubnetAddrPfxLen_Object = MibTableColumn
sapDefHostExSubnetAddrPfxLen = _SapDefHostExSubnetAddrPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 3),
    _SapDefHostExSubnetAddrPfxLen_Type()
)
sapDefHostExSubnetAddrPfxLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapDefHostExSubnetAddrPfxLen.setStatus("current")
_SapDefHostExRowStatus_Type = RowStatus
_SapDefHostExRowStatus_Object = MibTableColumn
sapDefHostExRowStatus = _SapDefHostExRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 4),
    _SapDefHostExRowStatus_Type()
)
sapDefHostExRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDefHostExRowStatus.setStatus("current")
_SapDefHostExLastChanged_Type = TimeStamp
_SapDefHostExLastChanged_Object = MibTableColumn
sapDefHostExLastChanged = _SapDefHostExLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 5),
    _SapDefHostExLastChanged_Type()
)
sapDefHostExLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapDefHostExLastChanged.setStatus("current")
_SapDefHostExNextHopAddrType_Type = InetAddressType
_SapDefHostExNextHopAddrType_Object = MibTableColumn
sapDefHostExNextHopAddrType = _SapDefHostExNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 6),
    _SapDefHostExNextHopAddrType_Type()
)
sapDefHostExNextHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDefHostExNextHopAddrType.setStatus("current")


class _SapDefHostExNextHopAddr_Type(InetAddress):
    """Custom type sapDefHostExNextHopAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SapDefHostExNextHopAddr_Type.__name__ = "InetAddress"
_SapDefHostExNextHopAddr_Object = MibTableColumn
sapDefHostExNextHopAddr = _SapDefHostExNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 170, 1, 7),
    _SapDefHostExNextHopAddr_Type()
)
sapDefHostExNextHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapDefHostExNextHopAddr.setStatus("current")
_TmnxSapDataTrigStatsTable_Object = MibTable
tmnxSapDataTrigStatsTable = _TmnxSapDataTrigStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 171)
)
if mibBuilder.loadTexts:
    tmnxSapDataTrigStatsTable.setStatus("current")
_TmnxSapDataTrigStatsEntry_Object = MibTableRow
tmnxSapDataTrigStatsEntry = _TmnxSapDataTrigStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 171, 1)
)
tmnxSapDataTrigStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxSapDataTrigStatsId"),
)
if mibBuilder.loadTexts:
    tmnxSapDataTrigStatsEntry.setStatus("current")


class _TmnxSapDataTrigStatsId_Type(Unsigned32):
    """Custom type tmnxSapDataTrigStatsId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_TmnxSapDataTrigStatsId_Type.__name__ = "Unsigned32"
_TmnxSapDataTrigStatsId_Object = MibTableColumn
tmnxSapDataTrigStatsId = _TmnxSapDataTrigStatsId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 171, 1, 1),
    _TmnxSapDataTrigStatsId_Type()
)
tmnxSapDataTrigStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSapDataTrigStatsId.setStatus("current")


class _TmnxSapDataTrigStatsName_Type(DisplayString):
    """Custom type tmnxSapDataTrigStatsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TmnxSapDataTrigStatsName_Type.__name__ = "DisplayString"
_TmnxSapDataTrigStatsName_Object = MibTableColumn
tmnxSapDataTrigStatsName = _TmnxSapDataTrigStatsName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 171, 1, 2),
    _TmnxSapDataTrigStatsName_Type()
)
tmnxSapDataTrigStatsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapDataTrigStatsName.setStatus("current")
_TmnxSapDataTrigStatsVal_Type = Counter64
_TmnxSapDataTrigStatsVal_Object = MibTableColumn
tmnxSapDataTrigStatsVal = _TmnxSapDataTrigStatsVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 171, 1, 3),
    _TmnxSapDataTrigStatsVal_Type()
)
tmnxSapDataTrigStatsVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapDataTrigStatsVal.setStatus("current")
_SapL3LoopbackTable_Object = MibTable
sapL3LoopbackTable = _SapL3LoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 172)
)
if mibBuilder.loadTexts:
    sapL3LoopbackTable.setStatus("current")
_SapL3LoopbackEntry_Object = MibTableRow
sapL3LoopbackEntry = _SapL3LoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 172, 1)
)
sapL3LoopbackEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapIesIfIndex"),
)
if mibBuilder.loadTexts:
    sapL3LoopbackEntry.setStatus("current")
_SapL3LoopbackRowStatus_Type = RowStatus
_SapL3LoopbackRowStatus_Object = MibTableColumn
sapL3LoopbackRowStatus = _SapL3LoopbackRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 172, 1, 1),
    _SapL3LoopbackRowStatus_Type()
)
sapL3LoopbackRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL3LoopbackRowStatus.setStatus("current")
_SapL3LoopbackIgnrPortOpState_Type = ServiceOperStatus
_SapL3LoopbackIgnrPortOpState_Object = MibTableColumn
sapL3LoopbackIgnrPortOpState = _SapL3LoopbackIgnrPortOpState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 172, 1, 2),
    _SapL3LoopbackIgnrPortOpState_Type()
)
sapL3LoopbackIgnrPortOpState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL3LoopbackIgnrPortOpState.setStatus("current")
_SapL2tpv3TableLastChanged_Type = TimeStamp
_SapL2tpv3TableLastChanged_Object = MibScalar
sapL2tpv3TableLastChanged = _SapL2tpv3TableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 173),
    _SapL2tpv3TableLastChanged_Type()
)
sapL2tpv3TableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3TableLastChanged.setStatus("current")
_SapL2tpv3Table_Object = MibTable
sapL2tpv3Table = _SapL2tpv3Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174)
)
if mibBuilder.loadTexts:
    sapL2tpv3Table.setStatus("current")
_SapL2tpv3Entry_Object = MibTableRow
sapL2tpv3Entry = _SapL2tpv3Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1)
)
sapL2tpv3Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    sapL2tpv3Entry.setStatus("current")
_SapL2tpv3RowStatus_Type = RowStatus
_SapL2tpv3RowStatus_Object = MibTableColumn
sapL2tpv3RowStatus = _SapL2tpv3RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 1),
    _SapL2tpv3RowStatus_Type()
)
sapL2tpv3RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3RowStatus.setStatus("current")
_SapL2tpv3LastChanged_Type = TimeStamp
_SapL2tpv3LastChanged_Object = MibTableColumn
sapL2tpv3LastChanged = _SapL2tpv3LastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 2),
    _SapL2tpv3LastChanged_Type()
)
sapL2tpv3LastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3LastChanged.setStatus("current")


class _SapL2tpv3ServiceId_Type(TmnxServId):
    """Custom type sapL2tpv3ServiceId based on TmnxServId"""
    defaultValue = 0


_SapL2tpv3ServiceId_Type.__name__ = "TmnxServId"
_SapL2tpv3ServiceId_Object = MibTableColumn
sapL2tpv3ServiceId = _SapL2tpv3ServiceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 3),
    _SapL2tpv3ServiceId_Type()
)
sapL2tpv3ServiceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3ServiceId.setStatus("current")


class _SapL2tpv3RouterId_Type(TmnxVRtrIDOrZero):
    """Custom type sapL2tpv3RouterId based on TmnxVRtrIDOrZero"""
    defaultValue = 0


_SapL2tpv3RouterId_Type.__name__ = "TmnxVRtrIDOrZero"
_SapL2tpv3RouterId_Object = MibTableColumn
sapL2tpv3RouterId = _SapL2tpv3RouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 4),
    _SapL2tpv3RouterId_Type()
)
sapL2tpv3RouterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3RouterId.setStatus("current")


class _SapL2tpv3TunnelGroupName_Type(TmnxL2tpTunnelGroupNameOrEmpty):
    """Custom type sapL2tpv3TunnelGroupName based on TmnxL2tpTunnelGroupNameOrEmpty"""
    defaultHexValue = ""


_SapL2tpv3TunnelGroupName_Type.__name__ = "TmnxL2tpTunnelGroupNameOrEmpty"
_SapL2tpv3TunnelGroupName_Object = MibTableColumn
sapL2tpv3TunnelGroupName = _SapL2tpv3TunnelGroupName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 5),
    _SapL2tpv3TunnelGroupName_Type()
)
sapL2tpv3TunnelGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3TunnelGroupName.setStatus("current")


class _SapL2tpv3VcId_Type(TmnxVcIdOrNone):
    """Custom type sapL2tpv3VcId based on TmnxVcIdOrNone"""
    defaultValue = 0


_SapL2tpv3VcId_Type.__name__ = "TmnxVcIdOrNone"
_SapL2tpv3VcId_Object = MibTableColumn
sapL2tpv3VcId = _SapL2tpv3VcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 6),
    _SapL2tpv3VcId_Type()
)
sapL2tpv3VcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3VcId.setStatus("current")


class _SapL2tpv3PwType_Type(Integer32):
    """Custom type sapL2tpv3PwType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ethernet", 1),
          ("ethVlan", 2))
    )


_SapL2tpv3PwType_Type.__name__ = "Integer32"
_SapL2tpv3PwType_Object = MibTableColumn
sapL2tpv3PwType = _SapL2tpv3PwType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 7),
    _SapL2tpv3PwType_Type()
)
sapL2tpv3PwType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3PwType.setStatus("current")


class _SapL2tpv3AdminState_Type(TmnxAdminState):
    """Custom type sapL2tpv3AdminState based on TmnxAdminState"""
    defaultValue = 3


_SapL2tpv3AdminState_Type.__name__ = "TmnxAdminState"
_SapL2tpv3AdminState_Object = MibTableColumn
sapL2tpv3AdminState = _SapL2tpv3AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 8),
    _SapL2tpv3AdminState_Type()
)
sapL2tpv3AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3AdminState.setStatus("current")
_SapL2tpv3OperState_Type = ServiceOperStatus
_SapL2tpv3OperState_Object = MibTableColumn
sapL2tpv3OperState = _SapL2tpv3OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 9),
    _SapL2tpv3OperState_Type()
)
sapL2tpv3OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3OperState.setStatus("current")


class _SapL2tpv3TunnelStatus_Type(Integer32):
    """Custom type sapL2tpv3TunnelStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("inprogress", 2),
          ("connected", 3))
    )


_SapL2tpv3TunnelStatus_Type.__name__ = "Integer32"
_SapL2tpv3TunnelStatus_Object = MibTableColumn
sapL2tpv3TunnelStatus = _SapL2tpv3TunnelStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 10),
    _SapL2tpv3TunnelStatus_Type()
)
sapL2tpv3TunnelStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3TunnelStatus.setStatus("current")


class _SapL2tpv3OperFlags_Type(Bits):
    """Custom type sapL2tpv3OperFlags based on Bits"""
    namedValues = NamedValues(
        *(("sapDown", 0),
          ("routerUnreachable", 1),
          ("adminDown", 2),
          ("tunnelNotUnique", 3))
    )

_SapL2tpv3OperFlags_Type.__name__ = "Bits"
_SapL2tpv3OperFlags_Object = MibTableColumn
sapL2tpv3OperFlags = _SapL2tpv3OperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 11),
    _SapL2tpv3OperFlags_Type()
)
sapL2tpv3OperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3OperFlags.setStatus("current")
_SapL2tpv3LastOperChgd_Type = TimeStamp
_SapL2tpv3LastOperChgd_Object = MibTableColumn
sapL2tpv3LastOperChgd = _SapL2tpv3LastOperChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 12),
    _SapL2tpv3LastOperChgd_Type()
)
sapL2tpv3LastOperChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3LastOperChgd.setStatus("current")
_SapL2tpv3HostISA_Type = TmnxHwIndexOrZero
_SapL2tpv3HostISA_Object = MibTableColumn
sapL2tpv3HostISA = _SapL2tpv3HostISA_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 13),
    _SapL2tpv3HostISA_Type()
)
sapL2tpv3HostISA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapL2tpv3HostISA.setStatus("obsolete")


class _SapL2tpv3EthVlanQtag_Type(QTagFullRangeOrNone):
    """Custom type sapL2tpv3EthVlanQtag based on QTagFullRangeOrNone"""
    defaultValue = -1


_SapL2tpv3EthVlanQtag_Type.__name__ = "QTagFullRangeOrNone"
_SapL2tpv3EthVlanQtag_Object = MibTableColumn
sapL2tpv3EthVlanQtag = _SapL2tpv3EthVlanQtag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 14),
    _SapL2tpv3EthVlanQtag_Type()
)
sapL2tpv3EthVlanQtag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3EthVlanQtag.setStatus("current")


class _SapL2tpv3ServiceName_Type(TLNamedItemOrEmpty):
    """Custom type sapL2tpv3ServiceName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_SapL2tpv3ServiceName_Type.__name__ = "TLNamedItemOrEmpty"
_SapL2tpv3ServiceName_Object = MibTableColumn
sapL2tpv3ServiceName = _SapL2tpv3ServiceName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 174, 1, 15),
    _SapL2tpv3ServiceName_Type()
)
sapL2tpv3ServiceName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapL2tpv3ServiceName.setStatus("current")
_SapEgrQosHsWrrGrpTblLastChanged_Type = TimeStamp
_SapEgrQosHsWrrGrpTblLastChanged_Object = MibScalar
sapEgrQosHsWrrGrpTblLastChanged = _SapEgrQosHsWrrGrpTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 175),
    _SapEgrQosHsWrrGrpTblLastChanged_Type()
)
sapEgrQosHsWrrGrpTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpTblLastChanged.setStatus("current")
_SapEgrQosHsWrrGrpTable_Object = MibTable
sapEgrQosHsWrrGrpTable = _SapEgrQosHsWrrGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176)
)
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpTable.setStatus("current")
_SapEgrQosHsWrrGrpEntry_Object = MibTableRow
sapEgrQosHsWrrGrpEntry = _SapEgrQosHsWrrGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1)
)
sapEgrQosHsWrrGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpId"),
)
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpEntry.setStatus("current")


class _SapEgrQosHsWrrGrpId_Type(Unsigned32):
    """Custom type sapEgrQosHsWrrGrpId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SapEgrQosHsWrrGrpId_Type.__name__ = "Unsigned32"
_SapEgrQosHsWrrGrpId_Object = MibTableColumn
sapEgrQosHsWrrGrpId = _SapEgrQosHsWrrGrpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 1),
    _SapEgrQosHsWrrGrpId_Type()
)
sapEgrQosHsWrrGrpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpId.setStatus("current")
_SapEgrQosHsWrrGrpRowStatus_Type = RowStatus
_SapEgrQosHsWrrGrpRowStatus_Object = MibTableColumn
sapEgrQosHsWrrGrpRowStatus = _SapEgrQosHsWrrGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 2),
    _SapEgrQosHsWrrGrpRowStatus_Type()
)
sapEgrQosHsWrrGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpRowStatus.setStatus("current")
_SapEgrQosHsWrrGrpLastChanged_Type = TimeStamp
_SapEgrQosHsWrrGrpLastChanged_Object = MibTableColumn
sapEgrQosHsWrrGrpLastChanged = _SapEgrQosHsWrrGrpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 3),
    _SapEgrQosHsWrrGrpLastChanged_Type()
)
sapEgrQosHsWrrGrpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpLastChanged.setStatus("current")


class _SapEgrQosHsWrrGrpRate_Type(THPolPIRRateOverride):
    """Custom type sapEgrQosHsWrrGrpRate based on THPolPIRRateOverride"""
    defaultValue = -2


_SapEgrQosHsWrrGrpRate_Type.__name__ = "THPolPIRRateOverride"
_SapEgrQosHsWrrGrpRate_Object = MibTableColumn
sapEgrQosHsWrrGrpRate = _SapEgrQosHsWrrGrpRate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 4),
    _SapEgrQosHsWrrGrpRate_Type()
)
sapEgrQosHsWrrGrpRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpRate.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpRate.setUnits("kilobps")


class _SapEgrQosHsWrrGrpRatePercent_Type(TPIRPercentOverride):
    """Custom type sapEgrQosHsWrrGrpRatePercent based on TPIRPercentOverride"""
    defaultValue = -2


_SapEgrQosHsWrrGrpRatePercent_Type.__name__ = "TPIRPercentOverride"
_SapEgrQosHsWrrGrpRatePercent_Object = MibTableColumn
sapEgrQosHsWrrGrpRatePercent = _SapEgrQosHsWrrGrpRatePercent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 5),
    _SapEgrQosHsWrrGrpRatePercent_Type()
)
sapEgrQosHsWrrGrpRatePercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpRatePercent.setStatus("current")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpRatePercent.setUnits("centipercent")


class _SapEgrQosHsWrrGrpClassWeight_Type(Integer32):
    """Custom type sapEgrQosHsWrrGrpClassWeight based on Integer32"""
    defaultValue = -2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2, -2),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
    )


_SapEgrQosHsWrrGrpClassWeight_Type.__name__ = "Integer32"
_SapEgrQosHsWrrGrpClassWeight_Object = MibTableColumn
sapEgrQosHsWrrGrpClassWeight = _SapEgrQosHsWrrGrpClassWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 176, 1, 6),
    _SapEgrQosHsWrrGrpClassWeight_Type()
)
sapEgrQosHsWrrGrpClassWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sapEgrQosHsWrrGrpClassWeight.setStatus("current")
_TmnxSapPfcpTableLastChanged_Type = TimeStamp
_TmnxSapPfcpTableLastChanged_Object = MibScalar
tmnxSapPfcpTableLastChanged = _TmnxSapPfcpTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 177),
    _TmnxSapPfcpTableLastChanged_Type()
)
tmnxSapPfcpTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapPfcpTableLastChanged.setStatus("current")
_TmnxSapPfcpTable_Object = MibTable
tmnxSapPfcpTable = _TmnxSapPfcpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 178)
)
if mibBuilder.loadTexts:
    tmnxSapPfcpTable.setStatus("current")
_TmnxSapPfcpEntry_Object = MibTableRow
tmnxSapPfcpEntry = _TmnxSapPfcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 178, 1)
)
tmnxSapPfcpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    tmnxSapPfcpEntry.setStatus("current")
_TmnxSapPfcpLastChanged_Type = TimeStamp
_TmnxSapPfcpLastChanged_Object = MibTableColumn
tmnxSapPfcpLastChanged = _TmnxSapPfcpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 178, 1, 1),
    _TmnxSapPfcpLastChanged_Type()
)
tmnxSapPfcpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapPfcpLastChanged.setStatus("current")


class _TmnxSapPfcpAssociation_Type(TNamedItemOrEmpty):
    """Custom type tmnxSapPfcpAssociation based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSapPfcpAssociation_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSapPfcpAssociation_Object = MibTableColumn
tmnxSapPfcpAssociation = _TmnxSapPfcpAssociation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 178, 1, 3),
    _TmnxSapPfcpAssociation_Type()
)
tmnxSapPfcpAssociation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSapPfcpAssociation.setStatus("current")


class _TmnxSapPfcpL2AccessIdAlias_Type(DisplayString):
    """Custom type tmnxSapPfcpL2AccessIdAlias based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_TmnxSapPfcpL2AccessIdAlias_Type.__name__ = "DisplayString"
_TmnxSapPfcpL2AccessIdAlias_Object = MibTableColumn
tmnxSapPfcpL2AccessIdAlias = _TmnxSapPfcpL2AccessIdAlias_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 178, 1, 4),
    _TmnxSapPfcpL2AccessIdAlias_Type()
)
tmnxSapPfcpL2AccessIdAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSapPfcpL2AccessIdAlias.setStatus("current")
_TmnxSapOperStatusTable_Object = MibTable
tmnxSapOperStatusTable = _TmnxSapOperStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 179)
)
if mibBuilder.loadTexts:
    tmnxSapOperStatusTable.setStatus("current")
_TmnxSapOperStatusEntry_Object = MibTableRow
tmnxSapOperStatusEntry = _TmnxSapOperStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 179, 1)
)
tmnxSapOperStatusEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
)
if mibBuilder.loadTexts:
    tmnxSapOperStatusEntry.setStatus("current")


class _TmnxSapOperStatus_Type(Integer32):
    """Custom type tmnxSapOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("ingressQosMismatch", 3),
          ("egressQosMismatch", 4),
          ("portMtuTooSmall", 5),
          ("svcAdminDown", 6),
          ("iesIfAdminDown", 7))
    )


_TmnxSapOperStatus_Type.__name__ = "Integer32"
_TmnxSapOperStatus_Object = MibTableColumn
tmnxSapOperStatus = _TmnxSapOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 179, 1, 1),
    _TmnxSapOperStatus_Type()
)
tmnxSapOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapOperStatus.setStatus("current")


class _TmnxSapOperFlags_Type(Bits):
    """Custom type tmnxSapOperFlags based on Bits"""
    namedValues = NamedValues(
        *(("sapAdminDown", 0),
          ("svcAdminDown", 1),
          ("iesIfAdminDown", 2),
          ("portOperDown", 3),
          ("portMtuTooSmall", 4),
          ("l2OperDown", 5),
          ("ingressQosMismatch", 6),
          ("egressQosMismatch", 7),
          ("relearnLimitExceeded", 8),
          ("recProtSrcMac", 9),
          ("subIfAdminDown", 10),
          ("sapIpipeNoCeIpAddr", 11),
          ("reserved12", 12),
          ("reserved13", 13),
          ("sapParamMismatch", 14),
          ("sapCemNoEcidOrMacAddr", 15),
          ("sapStandbyForMcRing", 16),
          ("sapSvcMtuTooSmall", 17),
          ("ingressNamedPoolMismatch", 18),
          ("egressNamedPoolMismatch", 19),
          ("ipMirrorNoMacAddr", 20),
          ("sapEpipeNoRingNode", 21),
          ("mcStandby", 22),
          ("mhStandby", 23),
          ("oamDownMepFault", 24),
          ("oamUpMepFault", 25),
          ("ethTunTagMisconfig", 26),
          ("ingressPolicerMismatch", 27),
          ("egressPolicerMismatch", 28),
          ("sapTlsNoRingNode", 29),
          ("ethRingPathBlocked", 30),
          ("oamTunnelMepFault", 31),
          ("operGrpDown", 32),
          ("portBouncing", 33),
          ("sapEgressHQosMgmtMismatch", 34),
          ("evpnP2mpConflict", 35),
          ("l2tpv3TunnelDown", 36),
          ("labelStackLimitExceeded", 37),
          ("sapIngQGrpRedirMismatch", 38),
          ("sapEgrQGrpRedirMismatch", 39))
    )

_TmnxSapOperFlags_Type.__name__ = "Bits"
_TmnxSapOperFlags_Object = MibTableColumn
tmnxSapOperFlags = _TmnxSapOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 179, 1, 2),
    _TmnxSapOperFlags_Type()
)
tmnxSapOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapOperFlags.setStatus("current")
_TmnxMgSapNotifyObjs_ObjectIdentity = ObjectIdentity
tmnxMgSapNotifyObjs = _TmnxMgSapNotifyObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 181)
)
_TmnxIpTnlIPsecStatsTable_Object = MibTable
tmnxIpTnlIPsecStatsTable = _TmnxIpTnlIPsecStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182)
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatsTable.setStatus("current")
_TmnxIpTnlIPsecStatsEntry_Object = MibTableRow
tmnxIpTnlIPsecStatsEntry = _TmnxIpTnlIPsecStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1)
)
tmnxIpTnlIPsecStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatsEntry.setStatus("current")


class _TmnxIpTnlIPsecIsakmpState_Type(Integer32):
    """Custom type tmnxIpTnlIPsecIsakmpState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_TmnxIpTnlIPsecIsakmpState_Type.__name__ = "Integer32"
_TmnxIpTnlIPsecIsakmpState_Object = MibTableColumn
tmnxIpTnlIPsecIsakmpState = _TmnxIpTnlIPsecIsakmpState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 1),
    _TmnxIpTnlIPsecIsakmpState_Type()
)
tmnxIpTnlIPsecIsakmpState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecIsakmpState.setStatus("current")
_TmnxIpTnlIPsecIsakmpEstabTime_Type = TimeStamp
_TmnxIpTnlIPsecIsakmpEstabTime_Object = MibTableColumn
tmnxIpTnlIPsecIsakmpEstabTime = _TmnxIpTnlIPsecIsakmpEstabTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 2),
    _TmnxIpTnlIPsecIsakmpEstabTime_Type()
)
tmnxIpTnlIPsecIsakmpEstabTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecIsakmpEstabTime.setStatus("current")
_TmnxIpTnlIPsecIsakmpNegLifeTime_Type = Unsigned32
_TmnxIpTnlIPsecIsakmpNegLifeTime_Object = MibTableColumn
tmnxIpTnlIPsecIsakmpNegLifeTime = _TmnxIpTnlIPsecIsakmpNegLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 3),
    _TmnxIpTnlIPsecIsakmpNegLifeTime_Type()
)
tmnxIpTnlIPsecIsakmpNegLifeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecIsakmpNegLifeTime.setStatus("current")
_TmnxIpTnlIPsecNumDpdTx_Type = Counter32
_TmnxIpTnlIPsecNumDpdTx_Object = MibTableColumn
tmnxIpTnlIPsecNumDpdTx = _TmnxIpTnlIPsecNumDpdTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 4),
    _TmnxIpTnlIPsecNumDpdTx_Type()
)
tmnxIpTnlIPsecNumDpdTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumDpdTx.setStatus("current")
_TmnxIpTnlIPsecNumDpdRx_Type = Counter32
_TmnxIpTnlIPsecNumDpdRx_Object = MibTableColumn
tmnxIpTnlIPsecNumDpdRx = _TmnxIpTnlIPsecNumDpdRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 5),
    _TmnxIpTnlIPsecNumDpdRx_Type()
)
tmnxIpTnlIPsecNumDpdRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumDpdRx.setStatus("current")
_TmnxIpTnlIPsecNumDpdAckTx_Type = Counter32
_TmnxIpTnlIPsecNumDpdAckTx_Object = MibTableColumn
tmnxIpTnlIPsecNumDpdAckTx = _TmnxIpTnlIPsecNumDpdAckTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 6),
    _TmnxIpTnlIPsecNumDpdAckTx_Type()
)
tmnxIpTnlIPsecNumDpdAckTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumDpdAckTx.setStatus("current")
_TmnxIpTnlIPsecNumDpdAckRx_Type = Counter32
_TmnxIpTnlIPsecNumDpdAckRx_Object = MibTableColumn
tmnxIpTnlIPsecNumDpdAckRx = _TmnxIpTnlIPsecNumDpdAckRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 7),
    _TmnxIpTnlIPsecNumDpdAckRx_Type()
)
tmnxIpTnlIPsecNumDpdAckRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumDpdAckRx.setStatus("current")
_TmnxIpTnlIPsecNumExpRx_Type = Counter32
_TmnxIpTnlIPsecNumExpRx_Object = MibTableColumn
tmnxIpTnlIPsecNumExpRx = _TmnxIpTnlIPsecNumExpRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 8),
    _TmnxIpTnlIPsecNumExpRx_Type()
)
tmnxIpTnlIPsecNumExpRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumExpRx.setStatus("current")
_TmnxIpTnlIPsecNumInvalidDpdRx_Type = Counter32
_TmnxIpTnlIPsecNumInvalidDpdRx_Object = MibTableColumn
tmnxIpTnlIPsecNumInvalidDpdRx = _TmnxIpTnlIPsecNumInvalidDpdRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 9),
    _TmnxIpTnlIPsecNumInvalidDpdRx_Type()
)
tmnxIpTnlIPsecNumInvalidDpdRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumInvalidDpdRx.setStatus("current")
_TmnxIpTnlIPsecNumCtrlPktsTx_Type = Counter32
_TmnxIpTnlIPsecNumCtrlPktsTx_Object = MibTableColumn
tmnxIpTnlIPsecNumCtrlPktsTx = _TmnxIpTnlIPsecNumCtrlPktsTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 10),
    _TmnxIpTnlIPsecNumCtrlPktsTx_Type()
)
tmnxIpTnlIPsecNumCtrlPktsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumCtrlPktsTx.setStatus("current")
_TmnxIpTnlIPsecNumCtrlPktsRx_Type = Counter32
_TmnxIpTnlIPsecNumCtrlPktsRx_Object = MibTableColumn
tmnxIpTnlIPsecNumCtrlPktsRx = _TmnxIpTnlIPsecNumCtrlPktsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 11),
    _TmnxIpTnlIPsecNumCtrlPktsRx_Type()
)
tmnxIpTnlIPsecNumCtrlPktsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumCtrlPktsRx.setStatus("current")
_TmnxIpTnlIPsecNumCtrlTxErrors_Type = Counter32
_TmnxIpTnlIPsecNumCtrlTxErrors_Object = MibTableColumn
tmnxIpTnlIPsecNumCtrlTxErrors = _TmnxIpTnlIPsecNumCtrlTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 12),
    _TmnxIpTnlIPsecNumCtrlTxErrors_Type()
)
tmnxIpTnlIPsecNumCtrlTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumCtrlTxErrors.setStatus("current")
_TmnxIpTnlIPsecNumCtrlRxErrors_Type = Counter32
_TmnxIpTnlIPsecNumCtrlRxErrors_Object = MibTableColumn
tmnxIpTnlIPsecNumCtrlRxErrors = _TmnxIpTnlIPsecNumCtrlRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 13),
    _TmnxIpTnlIPsecNumCtrlRxErrors_Type()
)
tmnxIpTnlIPsecNumCtrlRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecNumCtrlRxErrors.setStatus("current")
_TmnxIpTnlIPsecMatCertEntryId_Type = Integer32
_TmnxIpTnlIPsecMatCertEntryId_Object = MibTableColumn
tmnxIpTnlIPsecMatCertEntryId = _TmnxIpTnlIPsecMatCertEntryId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 14),
    _TmnxIpTnlIPsecMatCertEntryId_Type()
)
tmnxIpTnlIPsecMatCertEntryId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecMatCertEntryId.setStatus("current")
_TmnxIpTnlIPsecCertProfName_Type = TNamedItemOrEmpty
_TmnxIpTnlIPsecCertProfName_Object = MibTableColumn
tmnxIpTnlIPsecCertProfName = _TmnxIpTnlIPsecCertProfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 15),
    _TmnxIpTnlIPsecCertProfName_Type()
)
tmnxIpTnlIPsecCertProfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecCertProfName.setStatus("current")
_TmnxIpTnlIPsecIsakmpPathMtu_Type = Unsigned32
_TmnxIpTnlIPsecIsakmpPathMtu_Object = MibTableColumn
tmnxIpTnlIPsecIsakmpPathMtu = _TmnxIpTnlIPsecIsakmpPathMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 16),
    _TmnxIpTnlIPsecIsakmpPathMtu_Type()
)
tmnxIpTnlIPsecIsakmpPathMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecIsakmpPathMtu.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecIsakmpPathMtu.setUnits("bytes")
_TmnxIpTnlIPsecStatIsakmpAuthAlg_Type = TmnxAuthAlgorithm
_TmnxIpTnlIPsecStatIsakmpAuthAlg_Object = MibTableColumn
tmnxIpTnlIPsecStatIsakmpAuthAlg = _TmnxIpTnlIPsecStatIsakmpAuthAlg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 17),
    _TmnxIpTnlIPsecStatIsakmpAuthAlg_Type()
)
tmnxIpTnlIPsecStatIsakmpAuthAlg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatIsakmpAuthAlg.setStatus("current")
_TmnxIpTnlIPsecStatIsakmpEncrAlg_Type = TmnxEncrAlgorithm
_TmnxIpTnlIPsecStatIsakmpEncrAlg_Object = MibTableColumn
tmnxIpTnlIPsecStatIsakmpEncrAlg = _TmnxIpTnlIPsecStatIsakmpEncrAlg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 18),
    _TmnxIpTnlIPsecStatIsakmpEncrAlg_Type()
)
tmnxIpTnlIPsecStatIsakmpEncrAlg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatIsakmpEncrAlg.setStatus("current")
_TmnxIpTnlIPsecStatIsakmpPfsDhGp_Type = TmnxIkePolicyDHGroupOrZero
_TmnxIpTnlIPsecStatIsakmpPfsDhGp_Object = MibTableColumn
tmnxIpTnlIPsecStatIsakmpPfsDhGp = _TmnxIpTnlIPsecStatIsakmpPfsDhGp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 19),
    _TmnxIpTnlIPsecStatIsakmpPfsDhGp_Type()
)
tmnxIpTnlIPsecStatIsakmpPfsDhGp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatIsakmpPfsDhGp.setStatus("current")


class _TmnxIpTnlIPsecStatIkeTranPrfAlg_Type(Integer32):
    """Custom type tmnxIpTnlIPsecStatIkeTranPrfAlg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("sha1", 3),
          ("sha256", 4),
          ("sha384", 5),
          ("sha512", 6),
          ("aesXcbc", 7),
          ("sameAsAuth", 8))
    )


_TmnxIpTnlIPsecStatIkeTranPrfAlg_Type.__name__ = "Integer32"
_TmnxIpTnlIPsecStatIkeTranPrfAlg_Object = MibTableColumn
tmnxIpTnlIPsecStatIkeTranPrfAlg = _TmnxIpTnlIPsecStatIkeTranPrfAlg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 20),
    _TmnxIpTnlIPsecStatIkeTranPrfAlg_Type()
)
tmnxIpTnlIPsecStatIkeTranPrfAlg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecStatIkeTranPrfAlg.setStatus("current")
_TmnxIpTnlIPsecMatchTrustAnchor_Type = TNamedItemOrEmpty
_TmnxIpTnlIPsecMatchTrustAnchor_Object = MibTableColumn
tmnxIpTnlIPsecMatchTrustAnchor = _TmnxIpTnlIPsecMatchTrustAnchor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 182, 1, 21),
    _TmnxIpTnlIPsecMatchTrustAnchor_Type()
)
tmnxIpTnlIPsecMatchTrustAnchor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecMatchTrustAnchor.setStatus("current")
_TmnxIpTnlIPsecSATable_Object = MibTable
tmnxIpTnlIPsecSATable = _TmnxIpTnlIPsecSATable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183)
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSATable.setStatus("current")
_TmnxIpTnlIPsecSAEntry_Object = MibTableRow
tmnxIpTnlIPsecSAEntry = _TmnxIpTnlIPsecSAEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1)
)
tmnxIpTnlIPsecSAEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAId"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSADirection"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAIndex"),
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAEntry.setStatus("current")


class _TmnxIpTnlIPsecSAId_Type(Unsigned32):
    """Custom type tmnxIpTnlIPsecSAId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_TmnxIpTnlIPsecSAId_Type.__name__ = "Unsigned32"
_TmnxIpTnlIPsecSAId_Object = MibTableColumn
tmnxIpTnlIPsecSAId = _TmnxIpTnlIPsecSAId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 1),
    _TmnxIpTnlIPsecSAId_Type()
)
tmnxIpTnlIPsecSAId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAId.setStatus("current")


class _TmnxIpTnlIPsecSAIndex_Type(Unsigned32):
    """Custom type tmnxIpTnlIPsecSAIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_TmnxIpTnlIPsecSAIndex_Type.__name__ = "Unsigned32"
_TmnxIpTnlIPsecSAIndex_Object = MibTableColumn
tmnxIpTnlIPsecSAIndex = _TmnxIpTnlIPsecSAIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 2),
    _TmnxIpTnlIPsecSAIndex_Type()
)
tmnxIpTnlIPsecSAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAIndex.setStatus("current")
_TmnxIpTnlIPsecSADirection_Type = TmnxIPsecDirection
_TmnxIpTnlIPsecSADirection_Object = MibTableColumn
tmnxIpTnlIPsecSADirection = _TmnxIpTnlIPsecSADirection_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 3),
    _TmnxIpTnlIPsecSADirection_Type()
)
tmnxIpTnlIPsecSADirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSADirection.setStatus("current")
_TmnxIpTnlIPsecSAType_Type = TmnxIPsecKeyingType
_TmnxIpTnlIPsecSAType_Object = MibTableColumn
tmnxIpTnlIPsecSAType = _TmnxIpTnlIPsecSAType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 4),
    _TmnxIpTnlIPsecSAType_Type()
)
tmnxIpTnlIPsecSAType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAType.setStatus("current")
_TmnxIpTnlIPsecSASpi_Type = Unsigned32
_TmnxIpTnlIPsecSASpi_Object = MibTableColumn
tmnxIpTnlIPsecSASpi = _TmnxIpTnlIPsecSASpi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 5),
    _TmnxIpTnlIPsecSASpi_Type()
)
tmnxIpTnlIPsecSASpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSASpi.setStatus("current")
_TmnxIpTnlIPsecSAAuthAlgorithm_Type = TmnxAuthAlgorithm
_TmnxIpTnlIPsecSAAuthAlgorithm_Object = MibTableColumn
tmnxIpTnlIPsecSAAuthAlgorithm = _TmnxIpTnlIPsecSAAuthAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 6),
    _TmnxIpTnlIPsecSAAuthAlgorithm_Type()
)
tmnxIpTnlIPsecSAAuthAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAAuthAlgorithm.setStatus("current")
_TmnxIpTnlIPsecSAEncrAlgorithm_Type = TmnxEncrAlgorithm
_TmnxIpTnlIPsecSAEncrAlgorithm_Object = MibTableColumn
tmnxIpTnlIPsecSAEncrAlgorithm = _TmnxIpTnlIPsecSAEncrAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 7),
    _TmnxIpTnlIPsecSAEncrAlgorithm_Type()
)
tmnxIpTnlIPsecSAEncrAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAEncrAlgorithm.setStatus("current")
_TmnxIpTnlIPsecSAEstablishedTime_Type = TimeStamp
_TmnxIpTnlIPsecSAEstablishedTime_Object = MibTableColumn
tmnxIpTnlIPsecSAEstablishedTime = _TmnxIpTnlIPsecSAEstablishedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 8),
    _TmnxIpTnlIPsecSAEstablishedTime_Type()
)
tmnxIpTnlIPsecSAEstablishedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAEstablishedTime.setStatus("current")
_TmnxIpTnlIPsecSANegLifeTime_Type = Unsigned32
_TmnxIpTnlIPsecSANegLifeTime_Object = MibTableColumn
tmnxIpTnlIPsecSANegLifeTime = _TmnxIpTnlIPsecSANegLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 183, 1, 9),
    _TmnxIpTnlIPsecSANegLifeTime_Type()
)
tmnxIpTnlIPsecSANegLifeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSANegLifeTime.setStatus("current")
_TmnxIpTnlIPsecSAStatsTable_Object = MibTable
tmnxIpTnlIPsecSAStatsTable = _TmnxIpTnlIPsecSAStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184)
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStatsTable.setStatus("current")
_TmnxIpTnlIPsecSAStatsEntry_Object = MibTableRow
tmnxIpTnlIPsecSAStatsEntry = _TmnxIpTnlIPsecSAStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1)
)
tmnxIpTnlIPsecSAStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTunnelName"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAId"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSADirection"),
    (0, "TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAIndex"),
)
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStatsEntry.setStatus("current")
_TmnxIpTnlIPsecSAStBytesProcessed_Type = Counter64
_TmnxIpTnlIPsecSAStBytesProcessed_Object = MibTableColumn
tmnxIpTnlIPsecSAStBytesProcessed = _TmnxIpTnlIPsecSAStBytesProcessed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 1),
    _TmnxIpTnlIPsecSAStBytesProcessed_Type()
)
tmnxIpTnlIPsecSAStBytesProcessed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStBytesProcessed.setStatus("current")
_TmnxIpTnlIPsecSAStBytesProcLow32_Type = Counter32
_TmnxIpTnlIPsecSAStBytesProcLow32_Object = MibTableColumn
tmnxIpTnlIPsecSAStBytesProcLow32 = _TmnxIpTnlIPsecSAStBytesProcLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 2),
    _TmnxIpTnlIPsecSAStBytesProcLow32_Type()
)
tmnxIpTnlIPsecSAStBytesProcLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStBytesProcLow32.setStatus("current")
_TmnxIpTnlIPsecSAStBytesProcHgh32_Type = Counter32
_TmnxIpTnlIPsecSAStBytesProcHgh32_Object = MibTableColumn
tmnxIpTnlIPsecSAStBytesProcHgh32 = _TmnxIpTnlIPsecSAStBytesProcHgh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 3),
    _TmnxIpTnlIPsecSAStBytesProcHgh32_Type()
)
tmnxIpTnlIPsecSAStBytesProcHgh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStBytesProcHgh32.setStatus("current")
_TmnxIpTnlIPsecSAStPktsProcessed_Type = Counter64
_TmnxIpTnlIPsecSAStPktsProcessed_Object = MibTableColumn
tmnxIpTnlIPsecSAStPktsProcessed = _TmnxIpTnlIPsecSAStPktsProcessed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 4),
    _TmnxIpTnlIPsecSAStPktsProcessed_Type()
)
tmnxIpTnlIPsecSAStPktsProcessed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStPktsProcessed.setStatus("current")
_TmnxIpTnlIPsecSAStPktsProcLow32_Type = Counter32
_TmnxIpTnlIPsecSAStPktsProcLow32_Object = MibTableColumn
tmnxIpTnlIPsecSAStPktsProcLow32 = _TmnxIpTnlIPsecSAStPktsProcLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 5),
    _TmnxIpTnlIPsecSAStPktsProcLow32_Type()
)
tmnxIpTnlIPsecSAStPktsProcLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStPktsProcLow32.setStatus("current")
_TmnxIpTnlIPsecSAStPktsProcHigh32_Type = Counter32
_TmnxIpTnlIPsecSAStPktsProcHigh32_Object = MibTableColumn
tmnxIpTnlIPsecSAStPktsProcHigh32 = _TmnxIpTnlIPsecSAStPktsProcHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 6),
    _TmnxIpTnlIPsecSAStPktsProcHigh32_Type()
)
tmnxIpTnlIPsecSAStPktsProcHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStPktsProcHigh32.setStatus("current")
_TmnxIpTnlIPsecSAStCryptoErrors_Type = Counter32
_TmnxIpTnlIPsecSAStCryptoErrors_Object = MibTableColumn
tmnxIpTnlIPsecSAStCryptoErrors = _TmnxIpTnlIPsecSAStCryptoErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 7),
    _TmnxIpTnlIPsecSAStCryptoErrors_Type()
)
tmnxIpTnlIPsecSAStCryptoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStCryptoErrors.setStatus("current")
_TmnxIpTnlIPsecSAStReplayErrors_Type = Counter32
_TmnxIpTnlIPsecSAStReplayErrors_Object = MibTableColumn
tmnxIpTnlIPsecSAStReplayErrors = _TmnxIpTnlIPsecSAStReplayErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 8),
    _TmnxIpTnlIPsecSAStReplayErrors_Type()
)
tmnxIpTnlIPsecSAStReplayErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStReplayErrors.setStatus("current")
_TmnxIpTnlIPsecSAStSAErrors_Type = Counter32
_TmnxIpTnlIPsecSAStSAErrors_Object = MibTableColumn
tmnxIpTnlIPsecSAStSAErrors = _TmnxIpTnlIPsecSAStSAErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 9),
    _TmnxIpTnlIPsecSAStSAErrors_Type()
)
tmnxIpTnlIPsecSAStSAErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStSAErrors.setStatus("current")
_TmnxIpTnlIPsecSAStPolicyErrors_Type = Counter32
_TmnxIpTnlIPsecSAStPolicyErrors_Object = MibTableColumn
tmnxIpTnlIPsecSAStPolicyErrors = _TmnxIpTnlIPsecSAStPolicyErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 10),
    _TmnxIpTnlIPsecSAStPolicyErrors_Type()
)
tmnxIpTnlIPsecSAStPolicyErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStPolicyErrors.setStatus("current")
_TmnxIpTnlIPsecSAStEncapOverhead_Type = Counter32
_TmnxIpTnlIPsecSAStEncapOverhead_Object = MibTableColumn
tmnxIpTnlIPsecSAStEncapOverhead = _TmnxIpTnlIPsecSAStEncapOverhead_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 11),
    _TmnxIpTnlIPsecSAStEncapOverhead_Type()
)
tmnxIpTnlIPsecSAStEncapOverhead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStEncapOverhead.setStatus("current")
_TmnxIpTnlIPsecSAStPfsDhGroup_Type = TmnxIkePolicyDHGroupOrZero
_TmnxIpTnlIPsecSAStPfsDhGroup_Object = MibTableColumn
tmnxIpTnlIPsecSAStPfsDhGroup = _TmnxIpTnlIPsecSAStPfsDhGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 12),
    _TmnxIpTnlIPsecSAStPfsDhGroup_Type()
)
tmnxIpTnlIPsecSAStPfsDhGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStPfsDhGroup.setStatus("current")
_TmnxIpTnlIPsecSAStESN_Type = TruthValue
_TmnxIpTnlIPsecSAStESN_Object = MibTableColumn
tmnxIpTnlIPsecSAStESN = _TmnxIpTnlIPsecSAStESN_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 184, 1, 13),
    _TmnxIpTnlIPsecSAStESN_Type()
)
tmnxIpTnlIPsecSAStESN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIpTnlIPsecSAStESN.setStatus("current")
_SapBaseTableLastChanged_Type = TimeStamp
_SapBaseTableLastChanged_Object = MibScalar
sapBaseTableLastChanged = _SapBaseTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 185),
    _SapBaseTableLastChanged_Type()
)
sapBaseTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapBaseTableLastChanged.setStatus("current")
_SapTlsTableLastChanged_Type = TimeStamp
_SapTlsTableLastChanged_Object = MibScalar
sapTlsTableLastChanged = _SapTlsTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 186),
    _SapTlsTableLastChanged_Type()
)
sapTlsTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapTlsTableLastChanged.setStatus("current")
_TmnxSapSubMonOperGrpTableLastCh_Type = TimeStamp
_TmnxSapSubMonOperGrpTableLastCh_Object = MibScalar
tmnxSapSubMonOperGrpTableLastCh = _TmnxSapSubMonOperGrpTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 187),
    _TmnxSapSubMonOperGrpTableLastCh_Type()
)
tmnxSapSubMonOperGrpTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpTableLastCh.setStatus("current")
_TmnxSapSubMonOperGrpTable_Object = MibTable
tmnxSapSubMonOperGrpTable = _TmnxSapSubMonOperGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188)
)
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpTable.setStatus("current")
_TmnxSapSubMonOperGrpEntry_Object = MibTableRow
tmnxSapSubMonOperGrpEntry = _TmnxSapSubMonOperGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188, 1)
)
tmnxSapSubMonOperGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SAP-MIB", "sapPortId"),
    (0, "TIMETRA-SAP-MIB", "sapEncapValue"),
    (1, "TIMETRA-SERV-MIB", "svcOperGrpName"),
)
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpEntry.setStatus("current")
_TmnxSapSubMonOperGrpRowStatus_Type = RowStatus
_TmnxSapSubMonOperGrpRowStatus_Object = MibTableColumn
tmnxSapSubMonOperGrpRowStatus = _TmnxSapSubMonOperGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188, 1, 1),
    _TmnxSapSubMonOperGrpRowStatus_Type()
)
tmnxSapSubMonOperGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpRowStatus.setStatus("current")
_TmnxSapSubMonOperGrpLastCh_Type = TimeStamp
_TmnxSapSubMonOperGrpLastCh_Object = MibTableColumn
tmnxSapSubMonOperGrpLastCh = _TmnxSapSubMonOperGrpLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188, 1, 2),
    _TmnxSapSubMonOperGrpLastCh_Type()
)
tmnxSapSubMonOperGrpLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpLastCh.setStatus("current")


class _TmnxSapSubMonOperGrpHlthDrop_Type(Unsigned32):
    """Custom type tmnxSapSubMonOperGrpHlthDrop based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TmnxSapSubMonOperGrpHlthDrop_Type.__name__ = "Unsigned32"
_TmnxSapSubMonOperGrpHlthDrop_Object = MibTableColumn
tmnxSapSubMonOperGrpHlthDrop = _TmnxSapSubMonOperGrpHlthDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188, 1, 3),
    _TmnxSapSubMonOperGrpHlthDrop_Type()
)
tmnxSapSubMonOperGrpHlthDrop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpHlthDrop.setStatus("current")
_TmnxSapSubMonOperGrpActHlthDrop_Type = Unsigned32
_TmnxSapSubMonOperGrpActHlthDrop_Object = MibTableColumn
tmnxSapSubMonOperGrpActHlthDrop = _TmnxSapSubMonOperGrpActHlthDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 3, 188, 1, 4),
    _TmnxSapSubMonOperGrpActHlthDrop_Type()
)
tmnxSapSubMonOperGrpActHlthDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSapSubMonOperGrpActHlthDrop.setStatus("current")
_SapTrapsPrefix_ObjectIdentity = ObjectIdentity
sapTrapsPrefix = _SapTrapsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3)
)
_SapTraps_ObjectIdentity = ObjectIdentity
sapTraps = _SapTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0)
)
_SapMgNotification_ObjectIdentity = ObjectIdentity
sapMgNotification = _SapMgNotification_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 1)
)
msapPlcyEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "msapTlsPlcyEntry")
)
msapTlsPlcyEntry.setIndexNames(*msapPlcyEntry.getIndexNames())
msapPlcyEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "msapL3PlcyEntry")
)
msapL3PlcyEntry.setIndexNames(*msapPlcyEntry.getIndexNames())
msapPlcyEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "msapAtmPlcyEntry")
)
msapAtmPlcyEntry.setIndexNames(*msapPlcyEntry.getIndexNames())
sapBaseInfoEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "sapExtEntry")
)
sapExtEntry.setIndexNames(*sapBaseInfoEntry.getIndexNames())
sapTlsDhcpInfoEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "sapTlsDhcp6InfoEntry")
)
sapTlsDhcp6InfoEntry.setIndexNames(*sapTlsDhcpInfoEntry.getIndexNames())
sapTlsInfoEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "tmnxSapTlsExInfoEntry")
)
tmnxSapTlsExInfoEntry.setIndexNames(*sapTlsInfoEntry.getIndexNames())
sapStaticHostEntry.registerAugmentions(
    ("TIMETRA-SAP-MIB",
     "sapStaticHostRipEntry")
)
sapStaticHostRipEntry.setIndexNames(*sapStaticHostEntry.getIndexNames())

# Managed Objects groups

tmnxSapV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 100)
)
tmnxSapV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapOperFlags"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapTodSuite"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofIpAddress"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofMacAddress"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"))
)
if mibBuilder.loadTexts:
    tmnxSapV6v0Group.setStatus("obsolete")

tmnxSapTlsV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 101)
)
tmnxSapTlsV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortNum"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortState"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedPort"),
        ("TIMETRA-SAP-MIB", "sapTlsStpForwardTransitions"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInBadBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsVpnId"),
        ("TIMETRA-SAP-MIB", "sapTlsCustId"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTlsNumMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsNumStaticMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortRole"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperProtocol"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTlsMacPinning"),
        ("TIMETRA-SAP-MIB", "sapTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsPruneState"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtService"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtPortId"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "sapTlsStpException"),
        ("TIMETRA-SAP-MIB", "sapTlsAuthenticationPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInsideRegion"),
        ("TIMETRA-SAP-MIB", "sapTlsEgressMcastGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacAction"),
        ("TIMETRA-SAP-MIB", "sapTlsRestUnprotDstMac"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRxdDesigBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuardViolation"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvAction"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcIp"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvInterval"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtMsti"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveNextUpTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveRateExcdLeft"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceBoundary"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTransOper"),
        ("TIMETRA-SAP-MIB", "sapTlsDefMsapPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpMsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpJoinTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveAllTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicEnabled"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV6v0Group.setStatus("obsolete")

tmnxSapAtmV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 102)
)
tmnxSapAtmV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapAtmEncapsulation"),
        ("TIMETRA-SAP-MIB", "sapAtmIngressTrafficDescIndex"),
        ("TIMETRA-SAP-MIB", "sapAtmEgressTrafficDescIndex"),
        ("TIMETRA-SAP-MIB", "sapAtmOamAlarmCellHandling"),
        ("TIMETRA-SAP-MIB", "sapAtmOamTerminate"),
        ("TIMETRA-SAP-MIB", "sapAtmOamPeriodicLoopback"),
        ("TIMETRA-SAP-MIB", "sapAtmLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapAtmLLFOperStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapAtmV6v0Group.setStatus("current")

tmnxSapBaseV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 103)
)
tmnxSapBaseV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipDroppedPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipDroppedOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressQchipForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgressQchipForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedUncoloredPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressPchipOfferedUncoloredOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsAuthenticationPktsDiscarded"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsAuthenticationPktsSuccess"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsLastClearedTime"))
)
if mibBuilder.loadTexts:
    tmnxSapBaseV6v0Group.setStatus("current")

tmnxSapQosV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 104)
)
tmnxSapQosV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQMBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAvgOverhead"),
        ("TIMETRA-SAP-MIB", "sapIngQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosSCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSSummedCIR"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV6v0Group.setStatus("obsolete")

tmnxSapStaticHostV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 105)
)
tmnxSapStaticHostV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubscrIdent"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvOperState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvChecks"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplies"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplyTime"),
        ("TIMETRA-SAP-MIB", "sapStaticHostDynMacAddress"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerSvcId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerIf"),
        ("TIMETRA-SAP-MIB", "sapStaticHostFwdingState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostAncpString"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubIdIsSapId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostIntermediateDestId"))
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostV6v0Group.setStatus("obsolete")

tmnxSapDhcpV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 106)
)
tmnxSapDhcpV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcpAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpDescription"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpSnoop"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLeasePopulate"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpOperLeasePopulate"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpInfoAction"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpCircuitId"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteIdString"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyServerAddr"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLTRadiusOverride"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpVendorIncludeOptions"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpVendorOptionString"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntSnoopdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrSnoopdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntForwdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrForwdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntDropdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrDropdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxRadPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxLSPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsGenReleasePckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsGenForceRenPckts"),
        ("TIMETRA-SAP-MIB", "sapDhcpOperLeasePopulate"))
)
if mibBuilder.loadTexts:
    tmnxSapDhcpV6v0Group.setStatus("obsolete")

tmnxSapPortIdV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 107)
)
tmnxSapPortIdV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapPortIdIngQosSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosSchedFwdOctets"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosSchedFwdOctets"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosSchedCustId"))
)
if mibBuilder.loadTexts:
    tmnxSapPortIdV6v0Group.setStatus("current")

tmnxSapSubMgmtV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 108)
)
tmnxSapSubMgmtV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapSubMgmtAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubIdentPolicy"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtProfiledTrafficOnly"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSlaProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdentString"))
)
if mibBuilder.loadTexts:
    tmnxSapSubMgmtV6v0Group.setStatus("obsolete")

tmnxSapMstiV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 109)
)
tmnxSapMstiV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsMstiPriority"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiPathCost"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiPortRole"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiPortState"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiDesignatedBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsMstiDesignatedPort"))
)
if mibBuilder.loadTexts:
    tmnxSapMstiV6v0Group.setStatus("current")

tmnxSapIppipeV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 110)
)
tmnxSapIppipeV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIpipeCeInetAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeInetAddressType"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacRefreshInterval"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddressTimeout"))
)
if mibBuilder.loadTexts:
    tmnxSapIppipeV6v0Group.setStatus("obsolete")

tmnxSapPolicyV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 111)
)
tmnxSapPolicyV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapCurrentIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyPortStatsFwdOct"))
)
if mibBuilder.loadTexts:
    tmnxSapPolicyV6v0Group.setStatus("obsolete")

tmnxSapCemV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 112)
)
tmnxSapCemV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapCemLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCemEndpointType"),
        ("TIMETRA-SAP-MIB", "sapCemBitrate"),
        ("TIMETRA-SAP-MIB", "sapCemCasTrunkFraming"),
        ("TIMETRA-SAP-MIB", "sapCemPayloadSize"),
        ("TIMETRA-SAP-MIB", "sapCemJitterBuffer"),
        ("TIMETRA-SAP-MIB", "sapCemUseRtpHeader"),
        ("TIMETRA-SAP-MIB", "sapCemDifferential"),
        ("TIMETRA-SAP-MIB", "sapCemTimestampFreq"),
        ("TIMETRA-SAP-MIB", "sapCemReportAlarm"),
        ("TIMETRA-SAP-MIB", "sapCemReportAlarmStatus"),
        ("TIMETRA-SAP-MIB", "sapCemLocalEcid"),
        ("TIMETRA-SAP-MIB", "sapCemRemoteMacAddr"),
        ("TIMETRA-SAP-MIB", "sapCemRemoteEcid"),
        ("TIMETRA-SAP-MIB", "sapCemJitterBufPackets"),
        ("TIMETRA-SAP-MIB", "sapCemPlayoutBufPacketsThreshold"),
        ("TIMETRA-SAP-MIB", "sapCemStatsIngressForwardedPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsIngressDroppedPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressForwardedPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressDroppedPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressMissingPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressPktsReOrder"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressJtrBfrUnderruns"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressJtrBfrOverruns"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressMisOrderDropped"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressMalformedPkts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressLBitDropped"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressMultipleDropped"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressESs"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressSESs"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressUASs"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressFailureCounts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressUnderrunCounts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressOverrunCounts"),
        ("TIMETRA-SAP-MIB", "sapCemStatsEgressJtrBfrDepth"))
)
if mibBuilder.loadTexts:
    tmnxSapCemV6v0Group.setStatus("current")

tmnxSapL2ptV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 113)
)
tmnxSapL2ptV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsL2ptStatsLastClearedTime"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpRstBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpRstBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpConfigBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpConfigBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpRstBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpRstBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpTcnBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsStpTcnBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstConfigBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstConfigBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstRstBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstRstBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstTcnBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPvstTcnBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherL2ptBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherL2ptBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherInvalidBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsOtherInvalidBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapCdpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapCdpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapVtpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapVtpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapDtpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapDtpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPagpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapPagpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapUdldBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsL2ptEncapUdldBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsCdpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsCdpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsVtpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsVtpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsDtpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsDtpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPagpBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsPagpBpdusTx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsUdldBpdusRx"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptStatsUdldBpdusTx"))
)
if mibBuilder.loadTexts:
    tmnxSapL2ptV6v0Group.setStatus("current")

tmnxSapMsapV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 114)
)
tmnxSapMsapV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapPlcyRowStatus"),
        ("TIMETRA-SAP-MIB", "msapPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapPlcyDescription"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubIdStr"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubIdPlcy"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtProfiledTrafOnly"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSlaProf"),
        ("TIMETRA-SAP-MIB", "msapPlcyAssociatedMsaps"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpLeasePopulate"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyAdminState"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddrType"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLTRadOverride"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpInfoAction"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpCircuitId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteIdString"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorInclOpts"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorOptStr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyEgressMcastGroup"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgImportPlcy"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgFastLeave"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgSendQueries"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgGenQueryIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgQueryRespIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgRobustCount"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgLastMembIntvl"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMvrFromVplsId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgVersion"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPlcyName"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPrRsvMnBW"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacUncnstBW"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelBW"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLevel"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationSapPortEncapVal"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationPlcyName"),
        ("TIMETRA-SAP-MIB", "msapInfoReEvalPolicy"),
        ("TIMETRA-SAP-MIB", "msapInfoLastChanged"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRecvd"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRedirect"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsDropped"),
        ("TIMETRA-SAP-MIB", "msapPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapInfoTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapMsapV6v0Group.setStatus("obsolete")

tmnxSapMrpV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 115)
)
tmnxSapMrpV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsMrpRxPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpDroppedPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxNewEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxJoinInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxJoinEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxLeaveEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxNewEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxJoinInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxJoinEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxLeaveEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMmrpDeclared"),
        ("TIMETRA-SAP-MIB", "sapTlsMmrpRegistered"))
)
if mibBuilder.loadTexts:
    tmnxSapMrpV6v0Group.setStatus("obsolete")

tmnxSapHsmdaV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 116)
)
tmnxSapHsmdaV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaShaperOverride"),
        ("TIMETRA-SAP-MIB", "sapIngressHsmdaPacketOffOvr"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaPacketOffOverride"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueLastChanged"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueSlopePolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueSlopePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatCustId"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatHiPktsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatLoPktsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatHiOctsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatLoOctsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatInProfPktsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatOutProfPktsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatInProfOctsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatOutProfOctsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatAllPktsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatAllOctsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStCustId"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStHiPktDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStLoPktDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStHiOctDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStLoOctDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStAllPktOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStAllOctOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctDrop"))
)
if mibBuilder.loadTexts:
    tmnxSapHsmdaV6v0Group.setStatus("obsolete")

tmnxTlsMsapPppoeV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 117)
)
tmnxTlsMsapPppoeV6v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsPppoeMsapTrigger")
)
if mibBuilder.loadTexts:
    tmnxTlsMsapPppoeV6v0Group.setStatus("current")

tmnxSapIpV6FilterV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 118)
)
tmnxSapIpV6FilterV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressIpv6FilterId"))
)
if mibBuilder.loadTexts:
    tmnxSapIpV6FilterV6v0Group.setStatus("obsolete")

tmnxSapBsxV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 119)
)
tmnxSapBsxV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostAppProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefAppProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficAppProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefAppProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafAppProf"))
)
if mibBuilder.loadTexts:
    tmnxSapBsxV6v0Group.setStatus("obsolete")

tmnxSapMsapV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 120)
)
tmnxSapMsapV6v1Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapL3PlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapL3PlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapL3PlcyAntiSpoof"))
)
if mibBuilder.loadTexts:
    tmnxSapMsapV6v1Group.setStatus("current")

tmnxSapStaticHostV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 121)
)
tmnxSapStaticHostV6v1Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubscrIdent"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvOperState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvChecks"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplies"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplyTime"),
        ("TIMETRA-SAP-MIB", "sapStaticHostDynMacAddress"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerSvcId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerIf"),
        ("TIMETRA-SAP-MIB", "sapStaticHostFwdingState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostAncpString"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubIdIsSapId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostIntermediateDestId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostV6v1Group.setStatus("obsolete")

tmnxSapTlsV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 122)
)
tmnxSapTlsV6v1Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortNum"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortState"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedPort"),
        ("TIMETRA-SAP-MIB", "sapTlsStpForwardTransitions"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInBadBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsVpnId"),
        ("TIMETRA-SAP-MIB", "sapTlsCustId"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTlsNumMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsNumStaticMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortRole"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperProtocol"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTlsMacPinning"),
        ("TIMETRA-SAP-MIB", "sapTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsPruneState"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtService"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtPortId"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "sapTlsStpException"),
        ("TIMETRA-SAP-MIB", "sapTlsAuthenticationPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInsideRegion"),
        ("TIMETRA-SAP-MIB", "sapTlsEgressMcastGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacAction"),
        ("TIMETRA-SAP-MIB", "sapTlsRestUnprotDstMac"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRxdDesigBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuardViolation"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvAction"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcIp"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvInterval"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtMsti"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveNextUpTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveRateExcdLeft"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceBoundary"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTransOper"),
        ("TIMETRA-SAP-MIB", "sapTlsDefMsapPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpMsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpJoinTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveAllTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicEnabled"),
        ("TIMETRA-SAP-MIB", "sapTlsPppoePolicy"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV6v1Group.setStatus("obsolete")

tmnxSapArpHostGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 123)
)
tmnxSapArpHostGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsArpHostTableLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapTlsArpHostLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapTlsArpHostAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsArpHostMaxNumHosts"),
        ("TIMETRA-SAP-MIB", "sapTlsArpHostMinAuthIntvl"),
        ("TIMETRA-SAP-MIB", "sapTlsArpMsapTrigger"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyArpHostMaxNumHosts"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyArpHostMinAuthIntvl"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatLastClearedTime"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumHosts"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatTriggersRx"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatTriggersIgnored"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatTrigIgnQFull"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumForcedVerif"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumCreated"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumDeleted"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumUpdated"),
        ("TIMETRA-SAP-MIB", "sapArpHostStatNumAuthReq"))
)
if mibBuilder.loadTexts:
    tmnxSapArpHostGroup.setStatus("current")

tmnxSapV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 124)
)
tmnxSapV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapOperFlags"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapTodSuite"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapCallingStationId"))
)
if mibBuilder.loadTexts:
    tmnxSapV7v0Group.setStatus("obsolete")

tmnxSapIgmpTrkGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 125)
)
tmnxSapIgmpTrkGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIgmpTrkTableLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkExpiryTime"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkImportPlcy"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkNbrGrps"),
        ("TIMETRA-SAP-MIB", "sapIgmpTrkMaxNbrSrcs"))
)
if mibBuilder.loadTexts:
    tmnxSapIgmpTrkGroup.setStatus("current")

tmnxSapFrGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 126)
)
tmnxSapFrGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapFrInfoFrf12Mode"),
        ("TIMETRA-SAP-MIB", "sapFrInfoSchedulingClass"),
        ("TIMETRA-SAP-MIB", "sapFrInfoLastChanged"),
        ("TIMETRA-SAP-MIB", "sapFrf12InfoFragmentThreshold"),
        ("TIMETRA-SAP-MIB", "sapFrf12InfoLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxSapFrGroup.setStatus("obsolete")

tmnxSapIpipeV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 127)
)
tmnxSapIpipeV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIpipeCeInetAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeInetAddressType"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacRefreshInterval"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddressTimeout"),
        ("TIMETRA-SAP-MIB", "sapIpipeDiscoveredCeInetAddrType"),
        ("TIMETRA-SAP-MIB", "sapIpipeDiscoveredCeInetAddr"),
        ("TIMETRA-SAP-MIB", "sapIpipeUseBroadcastMac"),
        ("TIMETRA-SAP-MIB", "sapIpipeUsingBroadcastMac"))
)
if mibBuilder.loadTexts:
    tmnxSapIpipeV7v0Group.setStatus("obsolete")

tmnxSapBsxV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 128)
)
tmnxSapBsxV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostAppProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefAppProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficAppProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefAppProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafAppProf"),
        ("TIMETRA-SAP-MIB", "sapIsaAaApplicationProfile"))
)
if mibBuilder.loadTexts:
    tmnxSapBsxV7v0Group.setStatus("current")

tmnxSapRadiusFallbackGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 129)
)
tmnxSapRadiusFallbackGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDefMsapService"),
        ("TIMETRA-SAP-MIB", "sapTlsDefMsapGroupIf"))
)
if mibBuilder.loadTexts:
    tmnxSapRadiusFallbackGroup.setStatus("current")

tmnxSapPbbGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 130)
)
tmnxSapPbbGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapPbbRowStatus"),
        ("TIMETRA-SAP-MIB", "sapPbbLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapPbbIgmpSnpgMRouter"))
)
if mibBuilder.loadTexts:
    tmnxSapPbbGroup.setStatus("current")

tmnxSapFrGroupV8v0 = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 131)
)
tmnxSapFrGroupV8v0.setObjects(
      *(("TIMETRA-SAP-MIB", "sapFrInfoFrf12Mode"),
        ("TIMETRA-SAP-MIB", "sapFrInfoSchedulingClass"),
        ("TIMETRA-SAP-MIB", "sapFrInfoLastChanged"),
        ("TIMETRA-SAP-MIB", "sapFrf12InfoFragmentThreshold"),
        ("TIMETRA-SAP-MIB", "sapFrf12InfoLastChanged"),
        ("TIMETRA-SAP-MIB", "sapFrf12InfoInterleave"))
)
if mibBuilder.loadTexts:
    tmnxSapFrGroupV8v0.setStatus("current")

tmnxSapTlsV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 132)
)
tmnxSapTlsV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortNum"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortState"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedPort"),
        ("TIMETRA-SAP-MIB", "sapTlsStpForwardTransitions"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInBadBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsVpnId"),
        ("TIMETRA-SAP-MIB", "sapTlsCustId"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTlsNumMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsNumStaticMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortRole"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperProtocol"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTlsMacPinning"),
        ("TIMETRA-SAP-MIB", "sapTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsPruneState"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtService"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtPortId"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "sapTlsStpException"),
        ("TIMETRA-SAP-MIB", "sapTlsAuthenticationPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInsideRegion"),
        ("TIMETRA-SAP-MIB", "sapTlsEgressMcastGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacAction"),
        ("TIMETRA-SAP-MIB", "sapTlsRestUnprotDstMac"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRxdDesigBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuardViolation"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvAction"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcIp"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvInterval"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtMsti"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveNextUpTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveRateExcdLeft"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceBoundary"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTransOper"),
        ("TIMETRA-SAP-MIB", "sapTlsDefMsapPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpMsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpJoinTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveAllTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicEnabled"),
        ("TIMETRA-SAP-MIB", "sapTlsPppoePolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsSiteName"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6MsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsInTcBitBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsOutTcBitBpdus"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV8v0Group.setStatus("obsolete")

tmnxSapDhcpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 133)
)
tmnxSapDhcpV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcpAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpDescription"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpSnoop"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLeasePopulate"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpOperLeasePopulate"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpInfoAction"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpCircuitId"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteIdString"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyServerAddr"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLTRadiusOverride"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpVendorIncludeOptions"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpVendorOptionString"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntSnoopdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrSnoopdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntForwdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrForwdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntDropdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsSrvrDropdPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxRadPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxLSPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsGenReleasePckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsGenForceRenPckts"),
        ("TIMETRA-SAP-MIB", "sapDhcpOperLeasePopulate"))
)
if mibBuilder.loadTexts:
    tmnxSapDhcpV8v0Group.setStatus("current")

tmnxSapV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 134)
)
tmnxSapV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapOperFlags"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapTodSuite"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapCallingStationId"),
        ("TIMETRA-SAP-MIB", "sapIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppSLAACHosts"),
        ("TIMETRA-SAP-MIB", "sapIngQosQMBSBytes"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBSBytes"))
)
if mibBuilder.loadTexts:
    tmnxSapV8v0Group.setStatus("obsolete")

tmnxSapFPropBMacV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 135)
)
tmnxSapFPropBMacV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapFPropBMacAddrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapFPropBMacAddrRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapFPropBMacV8v0Group.setStatus("current")

tmnxSapPlcrV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 136)
)
tmnxSapPlcrV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMaxRate"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMaxRate"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapPlcrV8v0Group.setStatus("obsolete")

tmnxSapTlsV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 137)
)
tmnxSapTlsV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsShcvRetryTimeout"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvRetryCount"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV7v0Group.setStatus("current")

tmnxSapSubMgmtV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 138)
)
tmnxSapSubMgmtV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapSubMgmtAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubIdentPolicy"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtProfiledTrafficOnly"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSlaProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdentString"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefInterDestId"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefInterDestIdString"))
)
if mibBuilder.loadTexts:
    tmnxSapSubMgmtV8v0Group.setStatus("obsolete")

tmnxSapMsapV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 139)
)
tmnxSapMsapV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapPlcyRowStatus"),
        ("TIMETRA-SAP-MIB", "msapPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapPlcyDescription"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubIdStr"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubIdPlcy"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtProfiledTrafOnly"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSlaProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefInterDestId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefInterDestIdStr"),
        ("TIMETRA-SAP-MIB", "msapPlcyAssociatedMsaps"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkExpiryTime"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkImportPlcy"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkMaxNbrSrcs"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpLeasePopulate"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyAdminState"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddrType"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLTRadOverride"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpInfoAction"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpCircuitId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteIdString"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorInclOpts"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorOptStr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyEgressMcastGroup"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgImportPlcy"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgFastLeave"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgSendQueries"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgGenQueryIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgQueryRespIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgRobustCount"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgLastMembIntvl"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMvrFromVplsId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgVersion"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPlcyName"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPrRsvMnBW"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacUncnstBW"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelBW"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLevel"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationSapPortEncapVal"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationPlcyName"),
        ("TIMETRA-SAP-MIB", "msapInfoReEvalPolicy"),
        ("TIMETRA-SAP-MIB", "msapInfoLastChanged"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRecvd"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRedirect"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsDropped"),
        ("TIMETRA-SAP-MIB", "msapPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapInfoTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapMsapV8v0Group.setStatus("obsolete")

tmnxSapQosV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 140)
)
tmnxSapQosV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAvgOverhead"),
        ("TIMETRA-SAP-MIB", "sapIngQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosSCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsLo"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV8v0Group.setStatus("obsolete")

tmnxSapMrpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 141)
)
tmnxSapMrpV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsMrpRxPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpDroppedPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxPdus"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxNewEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxJoinInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxJoinEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpRxLeaveEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxNewEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxJoinInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxInEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxJoinEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxEmptyEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpTxLeaveEvent"),
        ("TIMETRA-SAP-MIB", "sapTlsMmrpDeclared"),
        ("TIMETRA-SAP-MIB", "sapTlsMmrpRegistered"),
        ("TIMETRA-SAP-MIB", "sapTlsMmrpEndStation"))
)
if mibBuilder.loadTexts:
    tmnxSapMrpV8v0Group.setStatus("current")

tmnxSapMvrpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 142)
)
tmnxSapMvrpV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTmplLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplSapCount"),
        ("TIMETRA-SAP-MIB", "sapTmplType"),
        ("TIMETRA-SAP-MIB", "sapTmplTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpEndVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpLastChgd"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpStartVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplUsed"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreationOrigin"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreatorSvcId"),
        ("TIMETRA-SAP-MIB", "sapTmplCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressFrameBasedAcctg"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTmplDot1agCfmMip"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstLastErr"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpDeclared"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpEndStation"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpRegistered"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsInTcBitBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsOutTcBitBpdus"))
)
if mibBuilder.loadTexts:
    tmnxSapMvrpV8v0Group.setStatus("obsolete")

tmnxSapIpipeV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 143)
)
tmnxSapIpipeV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIpipeCeInetAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeInetAddressType"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacRefreshInterval"),
        ("TIMETRA-SAP-MIB", "sapIpipeMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddress"),
        ("TIMETRA-SAP-MIB", "sapIpipeArpedMacAddressTimeout"),
        ("TIMETRA-SAP-MIB", "sapIpipeDiscoveredCeInetAddrType"),
        ("TIMETRA-SAP-MIB", "sapIpipeDiscoveredCeInetAddr"),
        ("TIMETRA-SAP-MIB", "sapIpipeUseBroadcastMac"),
        ("TIMETRA-SAP-MIB", "sapIpipeUsingBroadcastMac"),
        ("TIMETRA-SAP-MIB", "sapIpipeIpv6LinkLocalCeInetAddr"),
        ("TIMETRA-SAP-MIB", "sapIpipeIpv6GlobalCeInetAddr"),
        ("TIMETRA-SAP-MIB", "sapIpipeIpv6DiscoveredMacAddress"))
)
if mibBuilder.loadTexts:
    tmnxSapIpipeV8v0Group.setStatus("current")

tmnxSapEthRingGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 144)
)
tmnxSapEthRingGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapEthRingIndex")
)
if mibBuilder.loadTexts:
    tmnxSapEthRingGroup.setStatus("current")

tmnxSapOverrideV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 145)
)
tmnxSapOverrideV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQWeight"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRWeight"))
)
if mibBuilder.loadTexts:
    tmnxSapOverrideV8v0Group.setStatus("current")

tmnxSapV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 146)
)
tmnxSapV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapOperGrp"),
        ("TIMETRA-SAP-MIB", "sapMonitorOperGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressFlowspec"),
        ("TIMETRA-SAP-MIB", "sapTlsPppMsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsPppPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsTrackSrrpInst"),
        ("TIMETRA-SAP-MIB", "sapTlsPppUserDb"),
        ("TIMETRA-SAP-MIB", "sapTlsPppoeUserDb"),
        ("TIMETRA-SAP-MIB", "sapHostsAdminState"))
)
if mibBuilder.loadTexts:
    tmnxSapV9v0Group.setStatus("current")

tmnxSapAtmV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 147)
)
tmnxSapAtmV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapAtmSubPppIndex"),
        ("TIMETRA-SAP-MIB", "sapAtmDetectedEncapsulation"),
        ("TIMETRA-SAP-MIB", "sapAtmIngressTrafficDescIndexOvr"),
        ("TIMETRA-SAP-MIB", "sapAtmEgressTrafficDescIndexOvr"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeRowStatus"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeVpiStart"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeVpiEnd"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeVciStart"),
        ("TIMETRA-SAP-MIB", "sapAtmVcRangeVciEnd"),
        ("TIMETRA-SAP-MIB", "sapAtmPppStatsRxPackets"),
        ("TIMETRA-SAP-MIB", "sapAtmPppStatsRxDropped"),
        ("TIMETRA-SAP-MIB", "sapAtmPppStatsTxPackets"))
)
if mibBuilder.loadTexts:
    tmnxSapAtmV9v0Group.setStatus("current")

tmnxSapEthCfmMonitorGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 148)
)
tmnxSapEthCfmMonitorGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapCpmProtEthCfmMonitorFlags"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtEthCfmMonitorFlags"))
)
if mibBuilder.loadTexts:
    tmnxSapEthCfmMonitorGroup.setStatus("current")

tmnxSapGreGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 149)
)
tmnxSapGreGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxGreTunnelAdminState"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBackupRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBackupRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDeliverySvcId"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDescription"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDscp"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDstIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDstIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLclIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLclIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperFlags"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperState"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRowStatus"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreTunnelCount"))
)
if mibBuilder.loadTexts:
    tmnxSapGreGroup.setStatus("obsolete")

tmnxSapIgmpTrkV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 150)
)
tmnxSapIgmpTrkV8v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapIgmpTrkDisRtrAlertChk")
)
if mibBuilder.loadTexts:
    tmnxSapIgmpTrkV8v0Group.setStatus("current")

tmnxSapBsxV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 151)
)
tmnxSapBsxV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTransitIpPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTransitPrefixPolicyId"))
)
if mibBuilder.loadTexts:
    tmnxSapBsxV9v0Group.setStatus("current")

tmnxSapMsapV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 152)
)
tmnxSapMsapV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapAtmPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapAtmPlcyIngTrafficDescIndex"),
        ("TIMETRA-SAP-MIB", "msapAtmPlcyEgrTrafficDescIndex"),
        ("TIMETRA-SAP-MIB", "msapAtmPlcyOamAlarmCellHandling"),
        ("TIMETRA-SAP-MIB", "msapAtmPlcyOamPeriodicLoopback"),
        ("TIMETRA-SAP-MIB", "msapAtmPlcyTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapMsapV9v0Group.setStatus("current")

tmnxSapOverrideV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 153)
)
tmnxSapOverrideV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQAdminPIRPercent"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIRPercent"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIRPercent"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIRPercent"))
)
if mibBuilder.loadTexts:
    tmnxSapOverrideV9v0Group.setStatus("current")

tmnxSapPlcrV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 154)
)
tmnxSapPlcrV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIRPercent"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIRPercent"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIRPercent"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIRPercent"))
)
if mibBuilder.loadTexts:
    tmnxSapPlcrV9v0Group.setStatus("current")

tmnxSapEgrEncapGrpV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 155)
)
tmnxSapEgrEncapGrpV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrEncapGroupTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupType"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupQosPerMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpFrameBasedAccnt"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpMemActTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupBeginMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupEndMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupMemberAction"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpRangeEndId"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpMemberLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStLastClearedTime"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStLstClearedTime"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedCustId"))
)
if mibBuilder.loadTexts:
    tmnxSapEgrEncapGrpV9v0Group.setStatus("obsolete")

tmnxSapStaticHostV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 156)
)
tmnxSapStaticHostV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubscrIdent"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvOperState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvChecks"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplies"),
        ("TIMETRA-SAP-MIB", "sapStaticHostShcvReplyTime"),
        ("TIMETRA-SAP-MIB", "sapStaticHostDynMacAddress"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerSvcId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRetailerIf"),
        ("TIMETRA-SAP-MIB", "sapStaticHostFwdingState"),
        ("TIMETRA-SAP-MIB", "sapStaticHostAncpString"),
        ("TIMETRA-SAP-MIB", "sapStaticHostSubIdIsSapId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostIntermediateDestId"),
        ("TIMETRA-SAP-MIB", "sapStaticHostAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostV9v0Group.setStatus("current")

tmnxSapSubMgmtV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 157)
)
tmnxSapSubMgmtV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapSubMgmtAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubIdentPolicy"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtProfiledTrafficOnly"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSubProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtNonSubTrafficSlaProf"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdent"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefSubIdentString"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefInterDestId"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefInterDestIdString"))
)
if mibBuilder.loadTexts:
    tmnxSapSubMgmtV9v0Group.setStatus("current")

tmnxSapHsmdaV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 158)
)
tmnxSapHsmdaV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueWrrWeight"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaWrrPolicyOvr"))
)
if mibBuilder.loadTexts:
    tmnxSapHsmdaV9v0Group.setStatus("obsolete")

tmnxSapDefHostV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 159)
)
tmnxSapDefHostV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDefHostTableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapDefHostLastChanged"),
        ("TIMETRA-SAP-MIB", "sapDefHostRowStatus"),
        ("TIMETRA-SAP-MIB", "sapDefHostNextHopIpv4Addr"))
)
if mibBuilder.loadTexts:
    tmnxSapDefHostV9v0Group.setStatus("current")

tmnxSapFilterProfileV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 160)
)
tmnxSapFilterProfileV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostFilterProfile"),
        ("TIMETRA-SAP-MIB", "sapSubMgmtDefFilterProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefFilterProfile"))
)
if mibBuilder.loadTexts:
    tmnxSapFilterProfileV9v0Group.setStatus("current")

tmnxSapV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 161)
)
tmnxSapV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapSiteName"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpUserDb"),
        ("TIMETRA-SAP-MIB", "sapHostLockoutPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsAutoLearnMacProtect"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelReassembly"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelClearDfBit"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelIpMtu"),
        ("TIMETRA-SAP-MIB", "sapIngressFPQGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressFPQGrpInstanceId"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeSLAACHosts"))
)
if mibBuilder.loadTexts:
    tmnxSapV10v0Group.setStatus("obsolete")

tmnxSapBsxV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 162)
)
tmnxSapBsxV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapAarpId"),
        ("TIMETRA-SAP-MIB", "sapAarpServRefType"))
)
if mibBuilder.loadTexts:
    tmnxSapBsxV10v0Group.setStatus("current")

tmnxSapIgmpTrkV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 163)
)
tmnxSapIgmpTrkV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapIgmpTrkMaxNbrGrpSrcs")
)
if mibBuilder.loadTexts:
    tmnxSapIgmpTrkV11v0Group.setStatus("current")

tmnxSapMsapV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 164)
)
tmnxSapMsapV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkMaxNbrGrpSrcs")
)
if mibBuilder.loadTexts:
    tmnxSapMsapV11v0Group.setStatus("current")

tmnxSapDhcpV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 165)
)
tmnxSapDhcpV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxUDBPckts")
)
if mibBuilder.loadTexts:
    tmnxSapDhcpV11v0Group.setStatus("current")

tmnxSapStaticHostV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 166)
)
tmnxSapStaticHostV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapStaticHostAdminRetailSvcId")
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostV11v0Group.setStatus("current")

tmnxSapNotificationObjV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 200)
)
tmnxSapNotificationObjV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyPortId"),
        ("TIMETRA-SAP-MIB", "svcManagedSapCreationError"),
        ("TIMETRA-SAP-MIB", "msapStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationObjV6v0Group.setStatus("obsolete")

tmnxSapNotificationObjV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 201)
)
tmnxSapNotificationObjV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyPortId"),
        ("TIMETRA-SAP-MIB", "svcManagedSapCreationError"),
        ("TIMETRA-SAP-MIB", "msapStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsNotifyMacAddr"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringHostIpAddr"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringHostIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringAttrDiscarded"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringNotifDescription"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringVRtrID"),
        ("TIMETRA-SAP-MIB", "sapNotifyEncapValue"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationObjV7v0Group.setStatus("current")

tmnxSapNotifyObjsV8v0R5Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 202)
)
tmnxSapNotifyObjsV8v0R5Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTunnelNotifyName"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyReason"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyState"))
)
if mibBuilder.loadTexts:
    tmnxSapNotifyObjsV8v0R5Group.setStatus("current")

tmnxSapNotificationObjV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 203)
)
tmnxSapNotificationObjV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyReason"),
        ("TIMETRA-SAP-MIB", "sapNotifyName"),
        ("TIMETRA-SAP-MIB", "sapPppNcpFailureProtocol"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationObjV9v0Group.setStatus("current")

tmnxSapIpipeNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 204)
)
tmnxSapIpipeNotifyObjsGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIpipeCeIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeIpAddress"))
)
if mibBuilder.loadTexts:
    tmnxSapIpipeNotifyObjsGroup.setStatus("current")

tmnxSapRipNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 205)
)
tmnxSapRipNotifyObjsGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapRipListenerHostIpAddr"),
        ("TIMETRA-SAP-MIB", "sapRipListenerHostIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapRipListenerVRtrID"),
        ("TIMETRA-SAP-MIB", "sapRipListenerNotifDescription"))
)
if mibBuilder.loadTexts:
    tmnxSapRipNotifyObjsGroup.setStatus("current")

tmnxSapDefHostV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 206)
)
tmnxSapDefHostV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDefHostExTableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapDefHostExRowStatus"),
        ("TIMETRA-SAP-MIB", "sapDefHostExLastChanged"),
        ("TIMETRA-SAP-MIB", "sapDefHostExNextHopAddrType"),
        ("TIMETRA-SAP-MIB", "sapDefHostExNextHopAddr"))
)
if mibBuilder.loadTexts:
    tmnxSapDefHostV14v0Group.setStatus("current")

tmnxSapNotificationObjV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 207)
)
tmnxSapNotificationObjV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapNotifyIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationObjV13v0Group.setStatus("current")

tmnxSapObsoletedV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 300)
)
tmnxSapObsoletedV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcpSnooping"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStateRemainLseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStateOption82"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStatePersistKey"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV6v0Group.setStatus("obsolete")

tmnxSapObsoletedV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 301)
)
tmnxSapObsoletedV7v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcpSnooping"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStateRemainLseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStateOption82"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpLseStatePersistKey"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofIpAddress"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofMacAddress"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV7v0Group.setStatus("current")

tmnxSapObsoletedV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 302)
)
tmnxSapObsoletedV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBS"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV8v0Group.setStatus("current")

tmnxSapEthCfmGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 405)
)
tmnxSapEthCfmGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthCfmTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEthCfmRowLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEthCfmTunnelFaultNotification"),
        ("TIMETRA-SAP-MIB", "sapEthCfmMcLagPropHoldTimeRemain"),
        ("TIMETRA-SAP-MIB", "sapEthCfmAisEnable"),
        ("TIMETRA-SAP-MIB", "sapEthCfmVMepFilter"))
)
if mibBuilder.loadTexts:
    tmnxSapEthCfmGroup.setStatus("current")

tmnxSapSpbGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 408)
)
tmnxSapSpbGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsSpbAdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsSpbIfIndex"),
        ("TIMETRA-SAP-MIB", "sapTlsSpbLastChgd"),
        ("TIMETRA-SAP-MIB", "sapTlsSpbRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsSpbTblLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxSapSpbGroup.setStatus("current")

tmnxSapMonitorIPGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 409)
)
tmnxSapMonitorIPGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapCpmProtMonitorIP")
)
if mibBuilder.loadTexts:
    tmnxSapMonitorIPGroup.setStatus("current")

tmnxSapV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 410)
)
tmnxSapV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcp6AdminState"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6Description"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6Snoop"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6InterfaceId"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6RemoteId"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6RemoteIdString"),
        ("TIMETRA-SAP-MIB", "sapSiteName"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpUserDb"),
        ("TIMETRA-SAP-MIB", "sapHostLockoutPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsAutoLearnMacProtect"),
        ("TIMETRA-SAP-MIB", "sapIngressFPQGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressFPQGrpInstanceId"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeSLAACHosts"),
        ("TIMETRA-SAP-MIB", "sapIgnoreOperDown"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6UserDb"))
)
if mibBuilder.loadTexts:
    tmnxSapV11v0Group.setStatus("current")

tmnxSapIpTnlGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 411)
)
tmnxSapIpTnlGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTnlDstAddrLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlDstAddrRowStatus"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlDstAddrTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelAdminState"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBackupRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBackupRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelBytesTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelClearDfBit"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelDeliverySvcId"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelDescription"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelDscp"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelGreHeader"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelInvalidChksumRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelInvalidChksumRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelInvalidChksumRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIpMtu"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelKeyIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelKeyIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelKeyIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLclIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLclIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLoopsRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLoopsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelLoopsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperFlags"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperState"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPktsTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelReassembly"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelRowStatus"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelRxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelSeqIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelSeqIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelSeqIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTooBigTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTooBigTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTooBigTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelVersUnsupRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelVersUnsupRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelVersUnsupRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelHostISA"))
)
if mibBuilder.loadTexts:
    tmnxSapIpTnlGroup.setStatus("current")

tmnxSapGreV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 412)
)
tmnxSapGreV10v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxGreTunnelHostISA")
)
if mibBuilder.loadTexts:
    tmnxSapGreV10v0Group.setStatus("obsolete")

tmnxSapHsmdaV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 414)
)
tmnxSapHsmdaV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressHsmdaShaperOverride"),
        ("TIMETRA-SAP-MIB", "sapIngressHsmdaPacketOffOvr"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaPacketOffOverride"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueSlopePolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctDrop"))
)
if mibBuilder.loadTexts:
    tmnxSapHsmdaV10v0Group.setStatus("obsolete")

tmnxSapObsoletedV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 415)
)
tmnxSapObsoletedV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapIngressHsmdaPacketOffOvr"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatCustId"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatHiPktsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatLoPktsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatHiOctsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatLoOctsDropped"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatInProfPktsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatOutProfPktsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatInProfOctsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatOutProfOctsFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatAllPktsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaQStatAllOctsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStCustId"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStHiPktDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStLoPktDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStHiOctDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStLoOctDrop"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStAllPktOffered"),
        ("TIMETRA-SAP-MIB", "sapIngHsmdaCntrStAllOctOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueLastChanged"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosHsmdaQueueSlopePolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressAggRateLimit"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV10v0Group.setStatus("current")

tmnxSapLagV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 416)
)
tmnxSapLagV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapLagLinkMapProfile"),
        ("TIMETRA-SAP-MIB", "sapExtLastChanged"),
        ("TIMETRA-SAP-MIB", "sapExtLagActivePort"),
        ("TIMETRA-SAP-MIB", "sapExtTableLastChanged"),
        ("TIMETRA-SAP-MIB", "msapPlcyLagLinkMapProfile"))
)
if mibBuilder.loadTexts:
    tmnxSapLagV11v0Group.setStatus("current")

tmnxSapMvrpV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 417)
)
tmnxSapMvrpV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTmplLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplSapCount"),
        ("TIMETRA-SAP-MIB", "sapTmplType"),
        ("TIMETRA-SAP-MIB", "sapTmplTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpEndVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpLastChgd"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpStartVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplUsed"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreationOrigin"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreatorSvcId"),
        ("TIMETRA-SAP-MIB", "sapTmplCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressFrameBasedAcctg"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTmplDot1agCfmMip"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstLastErr"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpDeclared"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpEndStation"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpRegistered"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsInTcBitBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsOutTcBitBpdus"))
)
if mibBuilder.loadTexts:
    tmnxSapMvrpV10v0Group.setStatus("obsolete")

tmnxSapFlowSPecV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 418)
)
tmnxSapFlowSPecV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressFlowspec"),
        ("TIMETRA-SAP-MIB", "sapIngressIPv6Flowspec"))
)
if mibBuilder.loadTexts:
    tmnxSapFlowSPecV11v0Group.setStatus("current")

tmnxSapGreObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 419)
)
tmnxSapGreObsoletedGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxGreTunnelAdminState"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBackupRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBackupRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelBytesTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDeliverySvcId"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDescription"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDscp"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDstIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelDstIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLclIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLclIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperFlags"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperState"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelPktsTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRemIpAddr"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRowStatus"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelRxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelInvalidChksumRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelKeyIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelLoopsRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelSeqIgnoredRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelTooBigTxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRx"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRxHi"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelVersUnsupRxLo"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelClearDfBit"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelHostISA"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelIpMtu"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelReassembly"))
)
if mibBuilder.loadTexts:
    tmnxSapGreObsoletedGroup.setStatus("current")

tmnxSapGreV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 420)
)
tmnxSapGreV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxSapGreTunnelCount")
)
if mibBuilder.loadTexts:
    tmnxSapGreV11v0Group.setStatus("current")

tmnxSapStatsV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 423)
)
tmnxSapStatsV10v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMPackets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMPacketsHi"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMPacketsLo"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMOctets"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMOctetsHi"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngressCPMOctetsLo"))
)
if mibBuilder.loadTexts:
    tmnxSapStatsV10v0Group.setStatus("current")

tmnxSapDCpuProtV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 424)
)
tmnxSapDCpuProtV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "msapPlcyDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticState"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCount"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticHoldDown"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticDetectionTime"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynState"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCount"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynHoldDown"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynDetectionTime"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynAllocated"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonState"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCount"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonAllDynAlloc"))
)
if mibBuilder.loadTexts:
    tmnxSapDCpuProtV11v0Group.setStatus("current")

tmnxSapEgrPortQGrpV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 425)
)
tmnxSapEgrPortQGrpV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressPortQGrp"),
        ("TIMETRA-SAP-MIB", "sapEgressPortQGrpInstanceId"))
)
if mibBuilder.loadTexts:
    tmnxSapEgrPortQGrpV11v0Group.setStatus("current")

tmnxSapDcpNotifyObjsV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 426)
)
tmnxSapDcpNotifyObjsV11v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured")
)
if mibBuilder.loadTexts:
    tmnxSapDcpNotifyObjsV11v0Group.setStatus("current")

tmnxSapSchedulerRateV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 428)
)
tmnxSapSchedulerRateV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosSPIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosSPIRLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosSCIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosSCIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSPIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSPIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSCIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSCIRLo"))
)
if mibBuilder.loadTexts:
    tmnxSapSchedulerRateV11v0Group.setStatus("current")

tmnxSapSpbV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 429)
)
tmnxSapSpbV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsStaticIsidStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStaticIsidRngRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStaticIsidRngLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsStaticIsidRngLow"),
        ("TIMETRA-SAP-MIB", "sapTlsStaticIsidRngHigh"))
)
if mibBuilder.loadTexts:
    tmnxSapSpbV11v0Group.setStatus("current")

tmnxSapEthLoopbackV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 430)
)
tmnxSapEthLoopbackV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthLoopbackRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMode"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwap"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwapAddr"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwapAddrAll"))
)
if mibBuilder.loadTexts:
    tmnxSapEthLoopbackV11v0Group.setStatus("current")

tmnxSapQosV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 432)
)
tmnxSapQosV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAvgOverhead"),
        ("TIMETRA-SAP-MIB", "sapIngQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsLo"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV11v0Group.setStatus("obsolete")

tmnxSapQosObsoletedV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 433)
)
tmnxSapQosObsoletedV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosSCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSCIR"))
)
if mibBuilder.loadTexts:
    tmnxSapQosObsoletedV11v0Group.setStatus("current")

tmnxSapCflowdGroupV11v0 = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 435)
)
tmnxSapCflowdGroupV11v0.setObjects(
    ("TIMETRA-SAP-MIB", "sapCflowd")
)
if mibBuilder.loadTexts:
    tmnxSapCflowdGroupV11v0.setStatus("current")

sapTlsFdbMacStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 436)
)
sapTlsFdbMacStatsGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsNumEntries")
)
if mibBuilder.loadTexts:
    sapTlsFdbMacStatsGroup.setStatus("current")

sapTlsEtreeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 437)
)
sapTlsEtreeGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEtreeRootLeafTag"),
        ("TIMETRA-SAP-MIB", "sapEtreeLeafTag"),
        ("TIMETRA-SAP-MIB", "sapEtreeLeafAc"))
)
if mibBuilder.loadTexts:
    sapTlsEtreeGroup.setStatus("current")

tmnxMsapPlcyCpmProtV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 438)
)
tmnxMsapPlcyCpmProtV12v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "msapPlcyCpmProtMonitorIP")
)
if mibBuilder.loadTexts:
    tmnxMsapPlcyCpmProtV12v0Group.setStatus("current")

tmnxSapTlsV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 439)
)
tmnxSapTlsV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapTlsExLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExDhcpPythonPolicy"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExDhcp6PythonPolicy"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExRtrSolMsapTrigger"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExRtrSolUserDb"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV12v0Group.setStatus("current")

tmnxSapQosV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 440)
)
tmnxSapQosV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressAggRateLUB"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupAggRateLUB"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrAggRateLUB"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV12v0Group.setStatus("current")

tmnxSapEthCfmV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 441)
)
tmnxSapEthCfmV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthCfmSquelchIngress"),
        ("TIMETRA-SAP-MIB", "sapTmplEthCfmSquelchIngress"),
        ("TIMETRA-SAP-MIB", "sapEthCfmCollectLmmStats"))
)
if mibBuilder.loadTexts:
    tmnxSapEthCfmV12v0Group.setStatus("current")

tmnxIpTunnelV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 442)
)
tmnxIpTunnelV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapIpMtu"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmp6Pkt2Big"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmp6NumPkt2Big"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmp6Pkt2BigTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlDstAddrResolved"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelV12v0Group.setStatus("current")

tmnxIPTunnelPMTUV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 443)
)
tmnxIPTunnelPMTUV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelPropagateIpv6PMTU"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPropagateIpv4PMTU"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmpFragReq"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmpFragReqNum"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelIcmpFragReqTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPMTUDiscoverAging"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelTempPrivMtu"))
)
if mibBuilder.loadTexts:
    tmnxIPTunnelPMTUV21v0Group.setStatus("current")

sapLagV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 444)
)
sapLagV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapLagPerLinkHashClass"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashWeight"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashOperClass"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashOperWeight"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashIsOverriden"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashLastChanged"),
        ("TIMETRA-SAP-MIB", "sapLagPerLinkHashTableLastChgd"))
)
if mibBuilder.loadTexts:
    sapLagV12v0Group.setStatus("current")

tmnxIPTunnelGreKeyV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 445)
)
tmnxIPTunnelGreKeyV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelGreHeaderSendKey"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelGreHeaderRcvKey"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelGreHeaderKeysSet"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelKeyMismatchRx"))
)
if mibBuilder.loadTexts:
    tmnxIPTunnelGreKeyV12v0Group.setStatus("current")

tmnxIpTunnelFragStatV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 446)
)
tmnxIpTunnelFragStatV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapOverhead"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPreEncapFragCount"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPreEncapFragLastSize"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPostEncapFragCount"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPostEncapFragLstSize"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelFragStatV12v0Group.setStatus("current")

tmnxIpTunnelEncaNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 448)
)
tmnxIpTunnelEncaNotifyObjsGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTunnelNotifyConfigIpMtu"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyEncapOverhead"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyConfigEncapIpMtu"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelEncaNotifyObjsGroup.setStatus("current")

tmnxSapPbbV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 449)
)
tmnxSapPbbV12v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapPbbMldSnpgMRouter")
)
if mibBuilder.loadTexts:
    tmnxSapPbbV12v0Group.setStatus("current")

tmnxMsapQosV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 450)
)
tmnxMsapQosV12v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapTlsPlcyIngQosPolicyId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIngQosQueueingType"),
        ("TIMETRA-SAP-MIB", "msapL3PlcyIngQosPolicyId"),
        ("TIMETRA-SAP-MIB", "msapL3PlcyIngQosQueueingType"))
)
if mibBuilder.loadTexts:
    tmnxMsapQosV12v0Group.setStatus("current")

tmnxIpTnlOperChgGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 451)
)
tmnxIpTnlOperChgGroup.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperChanged")
)
if mibBuilder.loadTexts:
    tmnxIpTnlOperChgGroup.setStatus("current")

tmnxSapMsapV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 452)
)
tmnxSapMsapV12v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacUsePortWt")
)
if mibBuilder.loadTexts:
    tmnxSapMsapV12v0Group.setStatus("current")

tmnxSapIpoeV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 453)
)
tmnxSapIpoeV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapIpoeTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeAdminState"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeDescription"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoePolicy"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeUserDb"))
)
if mibBuilder.loadTexts:
    tmnxSapIpoeV13v0Group.setStatus("current")

tmnxSapStatHost6Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 454)
)
tmnxSapStatHost6Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStatHostMacLearnOptions"),
        ("TIMETRA-SAP-MIB", "sapStatHost6TableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapStatHost6LastChanged"),
        ("TIMETRA-SAP-MIB", "sapStatHost6RowStatus"),
        ("TIMETRA-SAP-MIB", "sapStatHost6AdminStatus"),
        ("TIMETRA-SAP-MIB", "sapStatHost6PrefixLen"),
        ("TIMETRA-SAP-MIB", "sapStatHost6NextHopAddrType"),
        ("TIMETRA-SAP-MIB", "sapStatHost6NextHopAddr"),
        ("TIMETRA-SAP-MIB", "sapStatHost6SubscrIdent"),
        ("TIMETRA-SAP-MIB", "sapStatHost6SubProfile"),
        ("TIMETRA-SAP-MIB", "sapStatHost6SlaProfile"),
        ("TIMETRA-SAP-MIB", "sapStatHost6ShcvOperState"),
        ("TIMETRA-SAP-MIB", "sapStatHost6ShcvChecks"),
        ("TIMETRA-SAP-MIB", "sapStatHost6ShcvReplies"),
        ("TIMETRA-SAP-MIB", "sapStatHost6ShcvReplyTime"),
        ("TIMETRA-SAP-MIB", "sapStatHost6DynMacAddress"),
        ("TIMETRA-SAP-MIB", "sapStatHost6RetailerSvcId"),
        ("TIMETRA-SAP-MIB", "sapStatHost6RetailerIf"),
        ("TIMETRA-SAP-MIB", "sapStatHost6FwdingState"),
        ("TIMETRA-SAP-MIB", "sapStatHost6AncpString"),
        ("TIMETRA-SAP-MIB", "sapStatHost6SubIdIsSapId"),
        ("TIMETRA-SAP-MIB", "sapStatHost6AppProfile"),
        ("TIMETRA-SAP-MIB", "sapStatHost6IntermediateDestId"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtRowStatus"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtStatus"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtMetric"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoStaticHostsUp"),
        ("TIMETRA-SAP-MIB", "tmnxSapDataTrigStatsName"),
        ("TIMETRA-SAP-MIB", "tmnxSapDataTrigStatsVal"))
)
if mibBuilder.loadTexts:
    tmnxSapStatHost6Group.setStatus("current")

tmnxSapDnGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 455)
)
tmnxSapDnGroup.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxSapTlsExProcCpmTrfcSapDn")
)
if mibBuilder.loadTexts:
    tmnxSapDnGroup.setStatus("current")

tmnxSapQosSchedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 456)
)
tmnxSapQosSchedV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosSParentWeight"),
        ("TIMETRA-SAP-MIB", "sapIngQosSParentCIRWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSParentWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSParentCIRWeight"))
)
if mibBuilder.loadTexts:
    tmnxSapQosSchedV13v0Group.setStatus("current")

tmnxSapIpipeFaultPropGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 457)
)
tmnxSapIpipeFaultPropGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIpipeLegacyFaultNotification"),
        ("TIMETRA-SAP-MIB", "sapIpipeRemainRecoveryTimer"))
)
if mibBuilder.loadTexts:
    tmnxSapIpipeFaultPropGroup.setStatus("current")

tmnxSapStaticHostRipV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 458)
)
tmnxSapStaticHostRipV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostRipPolicy"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRipPlcyName"),
        ("TIMETRA-SAP-MIB", "sapStaticHostRipListenerStatus"))
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostRipV13v0Group.setStatus("current")

tmnxSapBaseStatsV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 459)
)
tmnxSapBaseStatsV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapBaseStatsIngPchipRcvdValidPkt"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngPchipRcvdValidOct"))
)
if mibBuilder.loadTexts:
    tmnxSapBaseStatsV13v0Group.setStatus("current")

tmnxSapQueueOvrV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 460)
)
tmnxSapQueueOvrV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQMonitorDepth"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMonitorDepth"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgElpsdTme"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgElpsdTme"))
)
if mibBuilder.loadTexts:
    tmnxSapQueueOvrV13v0Group.setStatus("obsolete")

tmnxSapStatHost6V13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 462)
)
tmnxSapStatHost6V13v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapStatHost6AdminRetailSvcId")
)
if mibBuilder.loadTexts:
    tmnxSapStatHost6V13v0Group.setStatus("current")

tmnxSapDiamNasreqGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 463)
)
tmnxSapDiamNasreqGroup.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxSapTlsExDiameterAuthPolicy")
)
if mibBuilder.loadTexts:
    tmnxSapDiamNasreqGroup.setStatus("current")

tmnxSapQosRateV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 465)
)
tmnxSapQosRateV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressAggRateLmt"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpAggRateLimit"))
)
if mibBuilder.loadTexts:
    tmnxSapQosRateV13v0Group.setStatus("current")

tmnxSapDhcpV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 466)
)
tmnxSapDhcpV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDhcpStatsClntProxNqPckts"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteIdHex"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpCircuitIdHex"))
)
if mibBuilder.loadTexts:
    tmnxSapDhcpV13v0Group.setStatus("current")

tmnxSapShcvPolicyGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 467)
)
tmnxSapShcvPolicyGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsShcvPolicyIpv4")
)
if mibBuilder.loadTexts:
    tmnxSapShcvPolicyGroup.setStatus("current")

tmnxSapV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 477)
)
tmnxSapV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapOperFlags"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapTodSuite"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapCallingStationId"),
        ("TIMETRA-SAP-MIB", "sapIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppSLAACHosts"),
        ("TIMETRA-SAP-MIB", "sapIngQosQMBSBytes"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBSBytes"))
)
if mibBuilder.loadTexts:
    tmnxSapV13v0Group.setStatus("obsolete")

tmnxSapMvrpV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 478)
)
tmnxSapMvrpV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTmplLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplSapCount"),
        ("TIMETRA-SAP-MIB", "sapTmplType"),
        ("TIMETRA-SAP-MIB", "sapTmplTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpEndVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpLastChgd"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpRowStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpStartVlanTag"),
        ("TIMETRA-SAP-MIB", "sapTlsEsVidGrpTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTmplUsed"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreationOrigin"),
        ("TIMETRA-SAP-MIB", "sapTmplUserCreatorSvcId"),
        ("TIMETRA-SAP-MIB", "sapTmplCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressFrameBasedAcctg"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTmplTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTmplDot1agCfmMip"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapTmplCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstLastErr"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpDeclared"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpEndStation"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpRegistered"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvrpOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsInTcBitBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsOutTcBitBpdus"))
)
if mibBuilder.loadTexts:
    tmnxSapMvrpV13v0Group.setStatus("current")

tmnxSapEgrEncapGrpV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 479)
)
tmnxSapEgrEncapGrpV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrEncapGroupTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupType"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupQosPerMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpFrameBasedAccnt"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpMemActTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupBeginMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupEndMember"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupMemberAction"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpRangeEndId"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpMemberLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStLastClearedTime"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGBaseStQcFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStQcFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStLstClearedTime"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrBaseStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGQueueStDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdInPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStFwdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueStDpdOutPfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedStFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedStFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgrEGMbrSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPktsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdPktsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOctsL"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedFwdOctsH"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrEGMbrSchedCustId"))
)
if mibBuilder.loadTexts:
    tmnxSapEgrEncapGrpV13v0Group.setStatus("current")

tmnxSapObsoletedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 480)
)
tmnxSapObsoletedV13v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressAggRateLimit"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGroupAggRateLimit"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV13v0Group.setStatus("current")

sapBgpEvpnMplsMhGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 481)
)
sapBgpEvpnMplsMhGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapEvpnMHEthSegName")
)
if mibBuilder.loadTexts:
    sapBgpEvpnMplsMhGroup.setStatus("current")

tmnxSapV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 482)
)
tmnxSapV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDataMsapTrigger"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExPppoePythonPolicy"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsExAllowDot1qMsap"),
        ("TIMETRA-SAP-MIB", "sapBandwidth"))
)
if mibBuilder.loadTexts:
    tmnxSapV14v0Group.setStatus("current")

tmnxSapMsapV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 483)
)
tmnxSapMsapV14v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcIfPlcyName")
)
if mibBuilder.loadTexts:
    tmnxSapMsapV14v0Group.setStatus("current")

tmnxSapVplsV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 484)
)
tmnxSapVplsV14v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxSapTlsExEgressDestMac")
)
if mibBuilder.loadTexts:
    tmnxSapVplsV14v0Group.setStatus("current")

tmnxSapQosStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 485)
)
tmnxSapQosStatsGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdExdProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpExdProfOcts"))
)
if mibBuilder.loadTexts:
    tmnxSapQosStatsGroup.setStatus("current")

tmnxSapStickyMsapGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 486)
)
tmnxSapStickyMsapGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "msapPlcySticky"),
        ("TIMETRA-SAP-MIB", "msapInfoIsIdle"),
        ("TIMETRA-SAP-MIB", "msapInfoIsSticky"))
)
if mibBuilder.loadTexts:
    tmnxSapStickyMsapGroup.setStatus("current")

tmnxSapInfoV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 488)
)
tmnxSapInfoV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapOperFlags"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapCallingStationId"),
        ("TIMETRA-SAP-MIB", "sapIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppSLAACHosts"),
        ("TIMETRA-SAP-MIB", "sapIngQosQMBSBytes"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBSBytes"))
)
if mibBuilder.loadTexts:
    tmnxSapInfoV14v0Group.setStatus("obsolete")

tmnxSapObsoletedV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 489)
)
tmnxSapObsoletedV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTodSuite"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressQosSchedPlcy"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyQueueCustId"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SAP-MIB", "sapEgrSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpHiPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatOffLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatDrpLoPrioOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolPktsOffH"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffL"),
        ("TIMETRA-SAP-MIB", "sapIgQosPlcyPStatUncolOctsOffH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfPktsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpInProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatOffOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatFwdOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsL"),
        ("TIMETRA-SAP-MIB", "sapEgQosPlcyPStatDrpOutProfOctsH"),
        ("TIMETRA-SAP-MIB", "sapCurrentIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapCurrentEgressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapIntendedEgressIpv6FilterId"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV14v0Group.setStatus("current")

tmnxSapQosV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 490)
)
tmnxSapQosV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAvgOverhead"),
        ("TIMETRA-SAP-MIB", "sapIngQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsLo"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV14v0Group.setStatus("obsolete")

tmnxSapIpV6FilterV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 491)
)
tmnxSapIpV6FilterV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressIpv6FilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpv6FilterId"))
)
if mibBuilder.loadTexts:
    tmnxSapIpV6FilterV14v0Group.setStatus("current")

tmnxSapFlowSPecObsoletedV14v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 492)
)
tmnxSapFlowSPecObsoletedV14v0Grp.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressFlowspec"),
        ("TIMETRA-SAP-MIB", "sapIngressIPv6Flowspec"))
)
if mibBuilder.loadTexts:
    tmnxSapFlowSPecObsoletedV14v0Grp.setStatus("current")

sapEthLoopbackV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 493)
)
sapEthLoopbackV14v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEthLoopbackOperState")
)
if mibBuilder.loadTexts:
    sapEthLoopbackV14v0Group.setStatus("current")

tmnxSapTlsPbbV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 494)
)
tmnxSapTlsPbbV14v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsDisableSendBvplsEvpnFlush")
)
if mibBuilder.loadTexts:
    tmnxSapTlsPbbV14v0Group.setStatus("current")

tmnxSapVprnLoopbackV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 495)
)
tmnxSapVprnLoopbackV14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapL3LoopbackRowStatus"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackIgnrPortOpState"))
)
if mibBuilder.loadTexts:
    tmnxSapVprnLoopbackV14v0Group.setStatus("current")

tmnxSapL2tpv3V14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 496)
)
tmnxSapL2tpv3V14v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapL2tpv3TableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3RowStatus"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3LastChanged"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3ServiceId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3RouterId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3TunnelGroupName"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3VcId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3PwType"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3AdminState"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3OperState"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3TunnelStatus"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3OperFlags"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3LastOperChgd"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3HostISA"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3EthVlanQtag"))
)
if mibBuilder.loadTexts:
    tmnxSapL2tpv3V14v0Group.setStatus("obsolete")

tmnxSapBgpEvpnAlmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 497)
)
tmnxSapBgpEvpnAlmpGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacOper"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacOperAct"))
)
if mibBuilder.loadTexts:
    tmnxSapBgpEvpnAlmpGroup.setStatus("current")

sapV14v0NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 499)
)
sapV14v0NotifyObjsGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapNotifyIfName")
)
if mibBuilder.loadTexts:
    sapV14v0NotifyObjsGroup.setStatus("current")

tmnxSapEgrQosStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 500)
)
tmnxSapEgrQosStatsGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffExdProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInPlusProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInPlusProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInPlusProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInPlusProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInPlusProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInPlusProfOcts"))
)
if mibBuilder.loadTexts:
    tmnxSapEgrQosStatsGroup.setStatus("current")

tmnxDDosDCpuProtPolicyGrp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 501)
)
tmnxDDosDCpuProtPolicyGrp.setObjects(
      *(("TIMETRA-SAP-MIB", "sapOperDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapTmplDCpuProtPolicy"))
)
if mibBuilder.loadTexts:
    tmnxDDosDCpuProtPolicyGrp.setStatus("current")

tmnxSapCfmLmmPerQosV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 502)
)
tmnxSapCfmLmmPerQosV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthCfmCollLmmFcSts"),
        ("TIMETRA-SAP-MIB", "sapEthCfmCollLmmFcStsInP"))
)
if mibBuilder.loadTexts:
    tmnxSapCfmLmmPerQosV15v0Group.setStatus("current")

tmnxSapQosQDropTailGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 503)
)
tmnxSapQosQDropTailGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQDrpTailLowReductnMbs"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQDrpTailLowReductnMbs"))
)
if mibBuilder.loadTexts:
    tmnxSapQosQDropTailGroup.setStatus("current")

tmnxSapQosV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 505)
)
tmnxSapQosV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedHiPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsOfferedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsDroppedLoPrioOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredPacketsOffered"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueStatsUncoloredOctetsOffered"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedInProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsForwardedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueStatsDroppedOutProfOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapIngQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSchedCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapIngQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQCIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQPIRAdaptation"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAvgOverhead"),
        ("TIMETRA-SAP-MIB", "sapIngQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapIngQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapIngQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSOverrideFlags"),
        ("TIMETRA-SAP-MIB", "sapEgrQosSSummedCIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpHiPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsOffLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpLoPrioOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsMode"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpInProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsOffOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsFwdOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsDrpOutProfOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolPktsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOff"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosPStatsUncolOctsOffHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdEgrQosArbitFwdPktsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdOctsLo"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsHi"),
        ("TIMETRA-SAP-MIB", "sapPortIdIngQosArbitFwdPktsLo"))
)
if mibBuilder.loadTexts:
    tmnxSapQosV15v0Group.setStatus("current")

tmnxSapObsoletedV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 506)
)
tmnxSapObsoletedV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHiPrioOnly"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMaxRate"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMaxRate"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedV15v0Group.setStatus("current")

tmnxSapEsmMacV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 507)
)
tmnxSapEsmMacV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStatHostAppProfileScope"),
        ("TIMETRA-SAP-MIB", "sapStatHost6AppProfileScope"))
)
if mibBuilder.loadTexts:
    tmnxSapEsmMacV15v0Group.setStatus("current")

tmnxSapQosRateGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 508)
)
tmnxSapQosRateGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQAdminPIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminPIRLo"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngQosQAdminCIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminPIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQAdminCIRLo"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMaxRateHi"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMaxRateLo"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMaxRateHi"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMaxRateLo"),
        ("TIMETRA-SAP-MIB", "sapEgrEncapGrpAggRateLimitHi"),
        ("TIMETRA-SAP-MIB", "sapTmplEgrAggRateLimitHi"),
        ("TIMETRA-SAP-MIB", "sapEgressAggRateLmtHi"))
)
if mibBuilder.loadTexts:
    tmnxSapQosRateGroup.setStatus("current")

tmnxSapQosHsQOvrGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 509)
)
tmnxSapQosHsQOvrGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosQueueOvrHsSecShaper"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHsWrrWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHsClassWeight"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQHsWredQSlopePlcy"))
)
if mibBuilder.loadTexts:
    tmnxSapQosHsQOvrGroup.setStatus("current")

tmnxSapTlsV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 510)
)
tmnxSapTlsV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsStpAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPriority"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortNum"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPathCost"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRapidStart"),
        ("TIMETRA-SAP-MIB", "sapTlsStpBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortState"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpDesignatedPort"),
        ("TIMETRA-SAP-MIB", "sapTlsStpForwardTransitions"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInBadBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutConfigBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutTcnBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperBpduEncap"),
        ("TIMETRA-SAP-MIB", "sapTlsVpnId"),
        ("TIMETRA-SAP-MIB", "sapTlsCustId"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddressLimit"),
        ("TIMETRA-SAP-MIB", "sapTlsNumMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsNumStaticMacAddresses"),
        ("TIMETRA-SAP-MIB", "sapTlsMacLearning"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAgeing"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAdminPointToPoint"),
        ("TIMETRA-SAP-MIB", "sapTlsStpPortRole"),
        ("TIMETRA-SAP-MIB", "sapTlsStpAutoEdge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperProtocol"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutRstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMove"),
        ("TIMETRA-SAP-MIB", "sapTlsMacPinning"),
        ("TIMETRA-SAP-MIB", "sapTlsDiscardUnknownSource"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsPruneState"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtService"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtPortId"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "sapTlsStpException"),
        ("TIMETRA-SAP-MIB", "sapTlsAuthenticationPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptTermination"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTranslation"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuard"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInsideRegion"),
        ("TIMETRA-SAP-MIB", "sapTlsStpInMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOutMstBpdus"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacAction"),
        ("TIMETRA-SAP-MIB", "sapTlsRestUnprotDstMac"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRxdDesigBridge"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuardViolation"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvAction"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcIp"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvSrcMac"),
        ("TIMETRA-SAP-MIB", "sapTlsShcvInterval"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsMgmtMsti"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveNextUpTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveRateExcdLeft"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceBoundary"),
        ("TIMETRA-SAP-MIB", "sapTlsLimitMacMoveLevel"),
        ("TIMETRA-SAP-MIB", "sapTlsBpduTransOper"),
        ("TIMETRA-SAP-MIB", "sapTlsDefMsapPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsL2ptForceProtocols"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpMsapTrigger"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpProxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpJoinTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpLeaveAllTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicTime"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPeriodicEnabled"),
        ("TIMETRA-SAP-MIB", "sapTlsPppoePolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsMrpPolicy"),
        ("TIMETRA-SAP-MIB", "sapTlsSiteName"),
        ("TIMETRA-SAP-MIB", "sapTlsDhcp6MsapTrigger"))
)
if mibBuilder.loadTexts:
    tmnxSapTlsV15v0Group.setStatus("current")

tmnxSapTlsEgrMcastObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 511)
)
tmnxSapTlsEgrMcastObsoletedGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsEgressMcastGroup")
)
if mibBuilder.loadTexts:
    tmnxSapTlsEgrMcastObsoletedGroup.setStatus("current")

tmnxSapMsapV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 512)
)
tmnxSapMsapV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapPlcyRowStatus"),
        ("TIMETRA-SAP-MIB", "msapPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapPlcyDescription"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "msapPlcyCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubIdStr"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSubProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefSlaProfile"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubIdPlcy"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtSubscriberLimit"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtProfiledTrafOnly"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSubProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtNonSubTrafSlaProf"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefInterDestId"),
        ("TIMETRA-SAP-MIB", "msapPlcySubMgmtDefInterDestIdStr"),
        ("TIMETRA-SAP-MIB", "msapPlcyAssociatedMsaps"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkExpiryTime"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkImportPlcy"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "msapPlcyIgmpTrkMaxNbrSrcs"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyLastChanged"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyArpReplyAgent"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcySubMgmtMacDaHashing"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpLeasePopulate"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyAdminState"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyServAddrType"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLTRadOverride"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpInfoAction"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpCircuitId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpRemoteIdString"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorInclOpts"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpVendorOptStr"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyDhcpPrxyLeaseTime"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgImportPlcy"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgFastLeave"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgSendQueries"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgGenQueryIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgQueryRespIntv"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgRobustCount"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgLastMembIntvl"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMaxNbrGrps"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMvrFromVplsId"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgVersion"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPlcyName"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacPrRsvMnBW"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyIgmpSnpgMcacUncnstBW"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyEgrQosPolicyId"),
        ("TIMETRA-SAP-MIB", "msapL3PlcyEgrQosPolicyId"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLevelBW"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagRowStatus"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLastChanged"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagLevel"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationSapPortEncapVal"),
        ("TIMETRA-SAP-MIB", "msapInfoCreationPlcyName"),
        ("TIMETRA-SAP-MIB", "msapInfoReEvalPolicy"),
        ("TIMETRA-SAP-MIB", "msapInfoLastChanged"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRecvd"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsRedirect"),
        ("TIMETRA-SAP-MIB", "msapCaptureSapStatsPktsDropped"),
        ("TIMETRA-SAP-MIB", "msapPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapTlsPlcyTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapIgmpSnpgMcacLagTblLastChgd"),
        ("TIMETRA-SAP-MIB", "msapInfoTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapMsapV15v0Group.setStatus("current")

tmnxMsapTlsEgrObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 513)
)
tmnxMsapTlsEgrObsoletedGroup.setObjects(
    ("TIMETRA-SAP-MIB", "msapTlsPlcyEgressMcastGroup")
)
if mibBuilder.loadTexts:
    tmnxMsapTlsEgrObsoletedGroup.setStatus("current")

tSapQosQGrpIngRedirectListGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 514)
)
tSapQosQGrpIngRedirectListGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapIngQGrpRedirectList")
)
if mibBuilder.loadTexts:
    tSapQosQGrpIngRedirectListGroup.setStatus("current")

tSapQosQGrpEgrRedirectListGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 515)
)
tSapQosQGrpEgrRedirectListGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgrQGrpRedirectList")
)
if mibBuilder.loadTexts:
    tSapQosQGrpEgrRedirectListGroup.setStatus("current")

tSapIpTnlTcpMssAdjustV15v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 516)
)
tSapIpTnlTcpMssAdjustV15v0Grp.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelPubTcpMssAdjust"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelPrivTcpMssAdjust"))
)
if mibBuilder.loadTexts:
    tSapIpTnlTcpMssAdjustV15v0Grp.setStatus("current")

tmnxSapPlcrV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 517)
)
tmnxSapPlcrV15v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSapPlcrV15v0Group.setStatus("obsolete")

tmnxSapQosHsWrrGrpOvrGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 518)
)
tmnxSapQosHsWrrGrpOvrGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpTblLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpRate"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpRatePercent"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsWrrGrpClassWeight"))
)
if mibBuilder.loadTexts:
    tmnxSapQosHsWrrGrpOvrGroup.setStatus("current")

sapEvpnMhEthSegV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 520)
)
sapEvpnMhEthSegV15v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEvpnMHEthSegStatus")
)
if mibBuilder.loadTexts:
    sapEvpnMhEthSegV15v0Group.setStatus("current")

tmnxSapQosQBurstLimitOvrGrp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 521)
)
tmnxSapQosQBurstLimitOvrGrp.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgrQosQBurstLimit")
)
if mibBuilder.loadTexts:
    tmnxSapQosQBurstLimitOvrGrp.setStatus("current")

sapPppoeRedirectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 522)
)
sapPppoeRedirectGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapFwdWhlSaleEpipeSvcId")
)
if mibBuilder.loadTexts:
    sapPppoeRedirectGroup.setStatus("current")

tmnxIpTunnelV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 523)
)
tmnxIpTunnelV16v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxIpTunnelDeliverySvcName")
)
if mibBuilder.loadTexts:
    tmnxIpTunnelV16v0Group.setStatus("current")

tmnxSapQosPlcrOvrV15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 524)
)
tmnxSapQosPlcrOvrV15v1Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrLvlTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrMinMBSSep"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrCtrlOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrCBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrPktOffset"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrLastChgd"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrStatMode"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrTblLastChgd"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIRLo"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIRLo"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIRHi"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIRLo"))
)
if mibBuilder.loadTexts:
    tmnxSapQosPlcrOvrV15v1Group.setStatus("current")

tmnxSapQosPlcrOvrObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 525)
)
tmnxSapQosPlcrOvrObsoletedGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapIngPlcrOvrAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrPlcrOvrAdminCIR"))
)
if mibBuilder.loadTexts:
    tmnxSapQosPlcrOvrObsoletedGroup.setStatus("current")

tmnxSapTemplateQosV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 526)
)
tmnxSapTemplateQosV16v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTmplIngressQosPolicyName"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressQosPolicyName"))
)
if mibBuilder.loadTexts:
    tmnxSapTemplateQosV16v0Group.setStatus("current")

tmnxSapTmplFilterNameV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 527)
)
tmnxSapTmplFilterNameV16v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTmplIngressIpFilterName"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpFilterName"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressIpv6FilterName"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressIpv6FilterName"),
        ("TIMETRA-SAP-MIB", "sapTmplIngressMacFilterName"),
        ("TIMETRA-SAP-MIB", "sapTmplEgressMacFilterName"))
)
if mibBuilder.loadTexts:
    tmnxSapTmplFilterNameV16v0Group.setStatus("current")

tmnxSapL2tpv3ExtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 528)
)
tmnxSapL2tpv3ExtGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapL2tpv3ServiceName")
)
if mibBuilder.loadTexts:
    tmnxSapL2tpv3ExtGroup.setStatus("current")

tmnxSapIngressQinqV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 529)
)
tmnxSapIngressQinqV16v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressQinqTranslation"),
        ("TIMETRA-SAP-MIB", "sapIngressQinqInnerTranslationId"),
        ("TIMETRA-SAP-MIB", "sapIngressQinqOuterTranslationId"))
)
if mibBuilder.loadTexts:
    tmnxSapIngressQinqV16v0Group.setStatus("current")

tmnxSapL2tpv3V16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 530)
)
tmnxSapL2tpv3V16v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapL2tpv3TableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3RowStatus"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3LastChanged"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3ServiceId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3RouterId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3TunnelGroupName"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3VcId"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3PwType"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3AdminState"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3OperState"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3TunnelStatus"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3OperFlags"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3LastOperChgd"),
        ("TIMETRA-SAP-MIB", "sapL2tpv3EthVlanQtag"))
)
if mibBuilder.loadTexts:
    tmnxSapL2tpv3V16v0Group.setStatus("current")

tmnxSapL2tpv3ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 531)
)
tmnxSapL2tpv3ObsoletedGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapL2tpv3HostISA")
)
if mibBuilder.loadTexts:
    tmnxSapL2tpv3ObsoletedGroup.setStatus("current")

tmnxSapPfcpV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 532)
)
tmnxSapPfcpV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapPfcpTableLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpLastChanged"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpAssociation"))
)
if mibBuilder.loadTexts:
    tmnxSapPfcpV19v0Group.setStatus("current")

tmnxSapBaseStatsAggregateGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 533)
)
tmnxSapBaseStatsAggregateGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateOffPkts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateOffOcts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgrAggregateFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgrAggregateFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateDropPkts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsIngAggregateDropOcts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgrAggregateDropPkts"),
        ("TIMETRA-SAP-MIB", "sapBaseStatsEgrAggregateDropOcts"))
)
if mibBuilder.loadTexts:
    tmnxSapBaseStatsAggregateGroup.setStatus("current")

tmnxSapOperStatusGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 534)
)
tmnxSapOperStatusGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapOperStatus"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxSapOperStatusGroup.setStatus("current")

tmnxSapInfoV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 535)
)
tmnxSapInfoV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNumEntries"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRowStatus"),
        ("TIMETRA-SAP-MIB", "sapType"),
        ("TIMETRA-SAP-MIB", "sapDescription"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapIngressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapIngressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslationId"),
        ("TIMETRA-SAP-MIB", "sapEgressQosPolicyId"),
        ("TIMETRA-SAP-MIB", "sapEgressMacFilterId"),
        ("TIMETRA-SAP-MIB", "sapEgressIpFilterId"),
        ("TIMETRA-SAP-MIB", "sapMirrorStatus"),
        ("TIMETRA-SAP-MIB", "sapIesIfIndex"),
        ("TIMETRA-SAP-MIB", "sapLastMgmtChange"),
        ("TIMETRA-SAP-MIB", "sapCollectAcctStats"),
        ("TIMETRA-SAP-MIB", "sapAccountingPolicyId"),
        ("TIMETRA-SAP-MIB", "sapVpnId"),
        ("TIMETRA-SAP-MIB", "sapCustId"),
        ("TIMETRA-SAP-MIB", "sapCustMultSvcSite"),
        ("TIMETRA-SAP-MIB", "sapIngressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgressQosSchedulerPolicy"),
        ("TIMETRA-SAP-MIB", "sapSplitHorizonGrp"),
        ("TIMETRA-SAP-MIB", "sapIngressSharedQueuePolicy"),
        ("TIMETRA-SAP-MIB", "sapIngressMatchQinQDot1PBits"),
        ("TIMETRA-SAP-MIB", "sapLastStatusChange"),
        ("TIMETRA-SAP-MIB", "sapAntiSpoofing"),
        ("TIMETRA-SAP-MIB", "sapIngUseMultipointShared"),
        ("TIMETRA-SAP-MIB", "sapEgressQinQMarkTopOnly"),
        ("TIMETRA-SAP-MIB", "sapEndPoint"),
        ("TIMETRA-SAP-MIB", "sapIngressVlanTranslation"),
        ("TIMETRA-SAP-MIB", "sapSubType"),
        ("TIMETRA-SAP-MIB", "sapCpmProtPolicyId"),
        ("TIMETRA-SAP-MIB", "sapCpmProtMonitorMac"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapEthernetLLFOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMvplsRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgressFrameBasedAccounting"),
        ("TIMETRA-SAP-MIB", "sapCallingStationId"),
        ("TIMETRA-SAP-MIB", "sapIngPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrPolicerPolicy"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoIpoeDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppDhcp6Hosts"),
        ("TIMETRA-SAP-MIB", "sapIpv6HostInfoPppSLAACHosts"),
        ("TIMETRA-SAP-MIB", "sapIngQosQMBSBytes"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQMBSBytes"),
        ("TIMETRA-SAP-MIB", "sapEgressQosEgrRemarkPlcy"),
        ("TIMETRA-SAP-MIB", "sapMulticastSource"))
)
if mibBuilder.loadTexts:
    tmnxSapInfoV19v0Group.setStatus("current")

tmnxSapOperObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 536)
)
tmnxSapOperObsoletedGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapOperFlags")
)
if mibBuilder.loadTexts:
    tmnxSapOperObsoletedGroup.setStatus("current")

tmnxSapBWGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 537)
)
tmnxSapBWGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapBandwidthHi")
)
if mibBuilder.loadTexts:
    tmnxSapBWGroup.setStatus("current")

tmnxSapQtagV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 538)
)
tmnxSapQtagV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQtagManipulationOuterTag"),
        ("TIMETRA-SAP-MIB", "sapIngQtagManipulationInnerTag"),
        ("TIMETRA-SAP-MIB", "sapIngQtagManipulationAction"),
        ("TIMETRA-SAP-MIB", "sapEgrQtagManipulationAction"))
)
if mibBuilder.loadTexts:
    tmnxSapQtagV19v0Group.setStatus("current")

tmnxSapVlanQosPlcyV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 539)
)
tmnxSapVlanQosPlcyV19v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgressQosVlanQosPlcy")
)
if mibBuilder.loadTexts:
    tmnxSapVlanQosPlcyV19v0Group.setStatus("current")

tmnxSapEgrAggRateCIRV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 540)
)
tmnxSapEgrAggRateCIRV19v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgressAggRateCIRLmt")
)
if mibBuilder.loadTexts:
    tmnxSapEgrAggRateCIRV19v0Group.setStatus("current")

tmnxSapIgPlcyPlcerStatV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 541)
)
tmnxSapIgPlcyPlcerStatV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapIngQosPStatsDrpExdProfOcts"))
)
if mibBuilder.loadTexts:
    tmnxSapIgPlcyPlcerStatV19v0Group.setStatus("current")

tmnxSapIngressAggRateV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 542)
)
tmnxSapIngressAggRateV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerRateLo"),
        ("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerRateHi"),
        ("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerBurst"))
)
if mibBuilder.loadTexts:
    tmnxSapIngressAggRateV19v0Group.setStatus("current")

tmnxIpTunnelEsaVmV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 543)
)
tmnxIpTunnelEsaVmV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelHostEsa"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelHostEsaVm"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelEsaVmV19v0Group.setStatus("current")

sapNotifyObjsPortStateGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 544)
)
sapNotifyObjsPortStateGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapNotifyPortState")
)
if mibBuilder.loadTexts:
    sapNotifyObjsPortStateGroup.setStatus("current")

tmnxSapQosStatsV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 545)
)
tmnxSapQosStatsV19v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpExdProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdExdProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpExdProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdInPlusProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpInPlusProfPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdInPlusProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpInPlusProfOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpPkts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsFwdOcts"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQStatsDrpOcts"))
)
if mibBuilder.loadTexts:
    tmnxSapQosStatsV19v0Group.setStatus("current")

sapTlsMacListV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 547)
)
sapTlsMacListV20v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsAutoLrnMacProtectExcList")
)
if mibBuilder.loadTexts:
    sapTlsMacListV20v0Group.setStatus("current")

sapTlsBgpVplsEvpnV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 548)
)
sapTlsBgpVplsEvpnV20v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsExBgpVplsMhVeId")
)
if mibBuilder.loadTexts:
    sapTlsBgpVplsEvpnV20v0Group.setStatus("current")

tmnxSapStickyMsapV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 549)
)
tmnxSapStickyMsapV20v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "msapPlcyStickyTimeout"),
        ("TIMETRA-SAP-MIB", "msapInfoStickyExpiryTime"))
)
if mibBuilder.loadTexts:
    tmnxSapStickyMsapV20v0Group.setStatus("current")

tmnxSapEgrQMonQDepthV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 550)
)
tmnxSapEgrQMonQDepthV20v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgrQosQMonitorQueueDepth"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQFastPolling"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQViolationThreshold"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthViolTotCnt"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthViolLast"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthHWMPollInt"))
)
if mibBuilder.loadTexts:
    tmnxSapEgrQMonQDepthV20v0Group.setStatus("current")

sapIngTrtcm2AggRateV20v10Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 551)
)
sapIngTrtcm2AggRateV20v10Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerCIRHi"),
        ("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerCIRLo"),
        ("TIMETRA-SAP-MIB", "sapIngressAggregatePolicerCBS"))
)
if mibBuilder.loadTexts:
    sapIngTrtcm2AggRateV20v10Group.setStatus("current")

tmnxIpTnlTransProfV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 552)
)
tmnxIpTnlTransProfV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelIPsecTransportMdProf"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecIsakmpState"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecIsakmpEstabTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecIsakmpNegLifeTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumDpdTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumDpdRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumDpdAckTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumDpdAckRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumExpRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumInvalidDpdRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumCtrlPktsTx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumCtrlPktsRx"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumCtrlTxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecNumCtrlRxErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecMatCertEntryId"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecCertProfName"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecIsakmpPathMtu"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecStatIsakmpAuthAlg"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecStatIsakmpEncrAlg"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecStatIsakmpPfsDhGp"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecStatIkeTranPrfAlg"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecMatchTrustAnchor"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSASpi"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAAuthAlgorithm"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAEncrAlgorithm"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAEstablishedTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSANegLifeTime"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStBytesProcessed"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStBytesProcLow32"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStBytesProcHgh32"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStPktsProcessed"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStPktsProcLow32"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStPktsProcHigh32"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStCryptoErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStReplayErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStSAErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStPolicyErrors"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStEncapOverhead"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStPfsDhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlIPsecSAStESN"))
)
if mibBuilder.loadTexts:
    tmnxIpTnlTransProfV21v0Group.setStatus("current")

sapCfmSquelchInCtagGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 553)
)
sapCfmSquelchInCtagGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthCfmSquelchIngressCtag"),
        ("TIMETRA-SAP-MIB", "sapTmplEthCfmSquelchIngressCtag"))
)
if mibBuilder.loadTexts:
    sapCfmSquelchInCtagGroup.setStatus("current")

sapIngressIPCritOvrV20v10Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 554)
)
sapIngressIPCritOvrV20v10Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngressIPCriteriaOvrTag"),
        ("TIMETRA-SAP-MIB", "sapIngressIPv6CriteriaOvrTag"))
)
if mibBuilder.loadTexts:
    sapIngressIPCritOvrV20v10Group.setStatus("current")

sapHsmdaObsoleteV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 556)
)
sapHsmdaObsoleteV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEgressHsmdaShaperOverride"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaPacketOffOverride"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueRowStatus"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueLastChanged"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminPIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueAdminCIR"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueSlopePolicy"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfPktDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatInProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaQStatOutProfOctDropd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStCustId"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfPktDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStInProfOctDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctFwd"),
        ("TIMETRA-SAP-MIB", "sapEgrHsmdaCntrStOutProfOctDrop"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueMBS"),
        ("TIMETRA-SAP-MIB", "sapEgrQosHsmdaQueueWrrWeight"),
        ("TIMETRA-SAP-MIB", "sapEgressHsmdaWrrPolicyOvr"))
)
if mibBuilder.loadTexts:
    sapHsmdaObsoleteV21v0Group.setStatus("current")

sapQueueOvrObsoleteV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 557)
)
sapQueueOvrObsoleteV21v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgrQosQMonitorDepth")
)
if mibBuilder.loadTexts:
    sapQueueOvrObsoleteV21v0Group.setStatus("current")

tmnxSapQueueOvrV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 558)
)
tmnxSapQueueOvrV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQMonitorDepth"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgElpsdTme"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgElpsdTme"))
)
if mibBuilder.loadTexts:
    tmnxSapQueueOvrV21v0Group.setStatus("obsolete")

tmnxSapIngQMonQDepthV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 559)
)
tmnxSapIngQMonQDepthV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQMonitorQueueDepth"),
        ("TIMETRA-SAP-MIB", "sapIngQosQFastPolling"))
)
if mibBuilder.loadTexts:
    tmnxSapIngQMonQDepthV21v0Group.setStatus("current")

sapLastChangeV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 560)
)
sapLastChangeV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapBaseTableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsTableLastChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsLastMgmtChange"))
)
if mibBuilder.loadTexts:
    sapLastChangeV21v0Group.setStatus("current")

tmnxSapEgressHQosV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 561)
)
tmnxSapEgressHQosV21v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapEgrVlanQosPlcyPortRedirect")
)
if mibBuilder.loadTexts:
    tmnxSapEgressHQosV21v0Group.setStatus("current")

tmnxSapSubV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 562)
)
tmnxSapSubV21v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapSubMonOperGrpTableLastCh"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMonOperGrpRowStatus"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMonOperGrpLastCh"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMonOperGrpHlthDrop"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMonOperGrpActHlthDrop"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpL2AccessIdAlias"))
)
if mibBuilder.loadTexts:
    tmnxSapSubV21v0Group.setStatus("current")

sapIPFilterPairV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 563)
)
sapIPFilterPairV22v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapIngressIpFilterPair")
)
if mibBuilder.loadTexts:
    sapIPFilterPairV22v0Group.setStatus("current")

sapQueueOvrObsoleteV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 564)
)
sapQueueOvrObsoleteV22v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapIngQosQMonitorDepth")
)
if mibBuilder.loadTexts:
    sapQueueOvrObsoleteV22v0Group.setStatus("current")

tmnxSapQueueOvrV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 565)
)
tmnxSapQueueOvrV22v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapIngQosQueueDepthAvgElpsdTme"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt1"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt2"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt3"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt4"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt5"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt6"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt7"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt8"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt9"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthPollPrcnt10"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgPollInt"),
        ("TIMETRA-SAP-MIB", "sapEgrQosQueueDepthAvgElpsdTme"))
)
if mibBuilder.loadTexts:
    tmnxSapQueueOvrV22v0Group.setStatus("current")

tmnxSapStaticHostV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 566)
)
tmnxSapStaticHostV22v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStaticHostMRtMetric"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtPreference"),
        ("TIMETRA-SAP-MIB", "sapStaticHostMRtTag"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtPreference"),
        ("TIMETRA-SAP-MIB", "sapStatHost6MRtTag"))
)
if mibBuilder.loadTexts:
    tmnxSapStaticHostV22v0Group.setStatus("current")


# Notification objects

sapCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 1)
)
sapCreated.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    sapCreated.setStatus(
        "obsolete"
    )

sapDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 2)
)
sapDeleted.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    sapDeleted.setStatus(
        "obsolete"
    )

sapStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 3)
)
sapStatusChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperStatus"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperFlags"))
)
if mibBuilder.loadTexts:
    sapStatusChanged.setStatus(
        "current"
    )

sapTlsMacAddrLimitAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 4)
)
sapTlsMacAddrLimitAlarmRaised.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    sapTlsMacAddrLimitAlarmRaised.setStatus(
        "current"
    )

sapTlsMacAddrLimitAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 5)
)
sapTlsMacAddrLimitAlarmCleared.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    sapTlsMacAddrLimitAlarmCleared.setStatus(
        "current"
    )

sapTlsDHCPLseStEntriesExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 6)
)
sapTlsDHCPLseStEntriesExceeded.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "tlsDHCPClientLease"))
)
if mibBuilder.loadTexts:
    sapTlsDHCPLseStEntriesExceeded.setStatus(
        "obsolete"
    )

sapTlsDHCPLeaseStateOverride = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 7)
)
sapTlsDHCPLeaseStateOverride.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateOldChAddr"))
)
if mibBuilder.loadTexts:
    sapTlsDHCPLeaseStateOverride.setStatus(
        "obsolete"
    )

sapTlsDHCPSuspiciousPcktRcvd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 8)
)
sapTlsDHCPSuspiciousPcktRcvd.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsDhcpPacketProblem"))
)
if mibBuilder.loadTexts:
    sapTlsDHCPSuspiciousPcktRcvd.setStatus(
        "obsolete"
    )

sapDHCPLeaseEntriesExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 9)
)
sapDHCPLeaseEntriesExceeded.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"))
)
if mibBuilder.loadTexts:
    sapDHCPLeaseEntriesExceeded.setStatus(
        "current"
    )

sapDHCPLseStateOverride = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 10)
)
sapDHCPLseStateOverride.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldChAddr"))
)
if mibBuilder.loadTexts:
    sapDHCPLseStateOverride.setStatus(
        "current"
    )

sapDHCPSuspiciousPcktRcvd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 11)
)
sapDHCPSuspiciousPcktRcvd.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpPacketProblem"))
)
if mibBuilder.loadTexts:
    sapDHCPSuspiciousPcktRcvd.setStatus(
        "current"
    )

sapDHCPLseStatePopulateErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 12)
)
sapDHCPLseStatePopulateErr.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePopulateError"))
)
if mibBuilder.loadTexts:
    sapDHCPLseStatePopulateErr.setStatus(
        "current"
    )

hostConnectivityLost = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 13)
)
hostConnectivityLost.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddrType"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddr"),
        ("TIMETRA-SERV-MIB", "hostConnectivityChAddr"),
        ("TIMETRA-SAP-MIB", "sapNotifyIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapNotifyIpAddr"))
)
if mibBuilder.loadTexts:
    hostConnectivityLost.setStatus(
        "current"
    )

hostConnectivityRestored = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 14)
)
hostConnectivityRestored.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddrType"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddr"),
        ("TIMETRA-SERV-MIB", "hostConnectivityChAddr"),
        ("TIMETRA-SAP-MIB", "sapNotifyIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapNotifyIpAddr"))
)
if mibBuilder.loadTexts:
    hostConnectivityRestored.setStatus(
        "current"
    )

sapReceivedProtSrcMac = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 15)
)
sapReceivedProtSrcMac.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"),
        ("TIMETRA-SAP-MIB", "sapTlsRestProtSrcMacAction"))
)
if mibBuilder.loadTexts:
    sapReceivedProtSrcMac.setStatus(
        "current"
    )

sapStaticHostDynMacConflict = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 16)
)
sapStaticHostDynMacConflict.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacIpAddress"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacConflict"))
)
if mibBuilder.loadTexts:
    sapStaticHostDynMacConflict.setStatus(
        "current"
    )

sapTlsMacMoveExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 17)
)
sapTlsMacMoveExceeded.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapAdminStatus"),
        ("TIMETRA-SAP-MIB", "sapOperStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveRateExcdLeft"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveNextUpTime"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveMaxRate"),
        ("TIMETRA-SAP-MIB", "sapTlsNotifyMacAddr"))
)
if mibBuilder.loadTexts:
    sapTlsMacMoveExceeded.setStatus(
        "current"
    )

sapDHCPProxyServerError = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 18)
)
sapDHCPProxyServerError.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpProxyError"))
)
if mibBuilder.loadTexts:
    sapDHCPProxyServerError.setStatus(
        "current"
    )

sapDHCPCoAError = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 19)
)
sapDHCPCoAError.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpCoAError"))
)
if mibBuilder.loadTexts:
    sapDHCPCoAError.setStatus(
        "obsolete"
    )

sapDHCPSubAuthError = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 20)
)
sapDHCPSubAuthError.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpSubAuthError"))
)
if mibBuilder.loadTexts:
    sapDHCPSubAuthError.setStatus(
        "obsolete"
    )

sapPortStateChangeProcessed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 21)
)
sapPortStateChangeProcessed.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyPortId"),
        ("TIMETRA-SAP-MIB", "sapNotifyPortState"))
)
if mibBuilder.loadTexts:
    sapPortStateChangeProcessed.setStatus(
        "current"
    )

sapDHCPLseStateMobilityError = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 22)
)
sapDHCPLseStateMobilityError.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    sapDHCPLseStateMobilityError.setStatus(
        "current"
    )

sapCemPacketDefectAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 23)
)
sapCemPacketDefectAlarm.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapCemReportAlarmStatus"),
        ("TIMETRA-PORT-MIB", "tmnxPortCemStatsReportAlarm"))
)
if mibBuilder.loadTexts:
    sapCemPacketDefectAlarm.setStatus(
        "current"
    )

sapCemPacketDefectAlarmClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 24)
)
sapCemPacketDefectAlarmClear.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapCemReportAlarmStatus"),
        ("TIMETRA-PORT-MIB", "tmnxPortCemStatsReportAlarm"))
)
if mibBuilder.loadTexts:
    sapCemPacketDefectAlarmClear.setStatus(
        "current"
    )

msapStateChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 25)
)
msapStateChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "msapStatus"))
)
if mibBuilder.loadTexts:
    msapStateChanged.setStatus(
        "current"
    )

msapCreationFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 26)
)
msapCreationFailure.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "svcManagedSapCreationError"),
        ("TIMETRA-SAP-MIB", "sapNotifyPortId"),
        ("TIMETRA-SAP-MIB", "sapNotifyEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsNotifyMacAddr"))
)
if mibBuilder.loadTexts:
    msapCreationFailure.setStatus(
        "current"
    )

sapHostBGPPeeringSetupFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 27)
)
sapHostBGPPeeringSetupFailed.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringHostIpAddr"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringHostIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringVRtrID"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringAttrDiscarded"),
        ("TIMETRA-SAP-MIB", "sapBGPPeeringNotifDescription"))
)
if mibBuilder.loadTexts:
    sapHostBGPPeeringSetupFailed.setStatus(
        "current"
    )

sapTlsDataSapInstStatusChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 28)
)
sapTlsDataSapInstStatusChgd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsDataSapInstStatus"),
        ("TIMETRA-SAP-MIB", "sapTlsDataSapInstLastErr"))
)
if mibBuilder.loadTexts:
    sapTlsDataSapInstStatusChgd.setStatus(
        "current"
    )

tmnxGreTunnelOperRemIpChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 29)
)
tmnxGreTunnelOperRemIpChg.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxGreTunnelOperRemIpChg.setStatus(
        "obsolete"
    )

sapTunnelStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 30)
)
sapTunnelStateChange.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyName"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyState"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyReason"))
)
if mibBuilder.loadTexts:
    sapTunnelStateChange.setStatus(
        "current"
    )

sapAtmPppSessionFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 31)
)
sapAtmPppSessionFailure.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapNotifyName"),
        ("TIMETRA-SAP-MIB", "sapNotifyReason"))
)
if mibBuilder.loadTexts:
    sapAtmPppSessionFailure.setStatus(
        "current"
    )

sapAtmPppNcpFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 32)
)
sapAtmPppNcpFailure.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapNotifyName"),
        ("TIMETRA-SAP-MIB", "sapPppNcpFailureProtocol"),
        ("TIMETRA-SAP-MIB", "sapNotifyReason"))
)
if mibBuilder.loadTexts:
    sapAtmPppNcpFailure.setStatus(
        "current"
    )

sapIpipeCeIpAddrChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 33)
)
sapIpipeCeIpAddrChange.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapIpipeCeIpAddress"))
)
if mibBuilder.loadTexts:
    sapIpipeCeIpAddrChange.setStatus(
        "current"
    )

tmnxIpTunnelOperRemIpChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 38)
)
tmnxIpTunnelOperRemIpChg.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelOperRemIpAddrType"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperRemIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelOperRemIpChg.setStatus(
        "current"
    )

sapDcpStaticExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 39)
)
sapDcpStaticExcd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpStaticExcd.setStatus(
        "current"
    )

sapDcpDynamicExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 40)
)
sapDcpDynamicExcd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicExcd.setStatus(
        "current"
    )

sapDcpStaticHoldDownStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 41)
)
sapDcpStaticHoldDownStart.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpStaticHoldDownStart.setStatus(
        "current"
    )

sapDcpDynamicHoldDownStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 42)
)
sapDcpDynamicHoldDownStart.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicHoldDownStart.setStatus(
        "current"
    )

sapDcpStaticHoldDownEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 43)
)
sapDcpStaticHoldDownEnd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpStaticHoldDownEnd.setStatus(
        "current"
    )

sapDcpDynamicHoldDownEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 44)
)
sapDcpDynamicHoldDownEnd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicHoldDownEnd.setStatus(
        "current"
    )

sapDcpStaticConform = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 45)
)
sapDcpStaticConform.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpStaticExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpStaticConform.setStatus(
        "current"
    )

sapDcpDynamicConform = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 46)
)
sapDcpDynamicConform.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicConform.setStatus(
        "current"
    )

sapDcpLocMonExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 47)
)
sapDcpLocMonExcd.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpLocMonExcd.setStatus(
        "current"
    )

sapDcpLocMonExcdDynResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 48)
)
sapDcpLocMonExcdDynResource.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpLocMonExcdDynResource.setStatus(
        "current"
    )

sapDcpLocMonExcdAllDynAlloc = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 49)
)
sapDcpLocMonExcdAllDynAlloc.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpLocMonExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpLocMonExcdAllDynAlloc.setStatus(
        "current"
    )

sapDcpLocMonExcdAllDynFreed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 50)
)
sapDcpLocMonExcdAllDynFreed.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpLocMonState"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpLocMonExcdAllDynFreed.setStatus(
        "current"
    )

sapDcpDynamicEnforceAlloc = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 51)
)
sapDcpDynamicEnforceAlloc.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynAllocated"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicEnforceAlloc.setStatus(
        "current"
    )

sapDcpDynamicEnforceFreed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 52)
)
sapDcpDynamicEnforceFreed.setObjects(
      *(("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountHi"),
        ("TIMETRA-SAP-MIB", "sapDcpFpDynExcdCountLo"),
        ("TIMETRA-SAP-MIB", "sapDCpuProtPolicy"),
        ("TIMETRA-SAP-MIB", "sapDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    sapDcpDynamicEnforceFreed.setStatus(
        "current"
    )

sapTlsMacMoveExceedNonBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 53)
)
sapTlsMacMoveExceedNonBlock.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveMaxRate"),
        ("TIMETRA-SAP-MIB", "sapTlsNotifyMacAddr"))
)
if mibBuilder.loadTexts:
    sapTlsMacMoveExceedNonBlock.setStatus(
        "current"
    )

sapEthLoopbackStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 54)
)
sapEthLoopbackStarted.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthLoopbackMode"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwap"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwapAddr"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackMacSwapAddrAll"))
)
if mibBuilder.loadTexts:
    sapEthLoopbackStarted.setStatus(
        "current"
    )

sapEthLoopbackStopped = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 55)
)
sapEthLoopbackStopped.setObjects(
    ("TIMETRA-SAP-MIB", "sapEthLoopbackMode")
)
if mibBuilder.loadTexts:
    sapEthLoopbackStopped.setStatus(
        "current"
    )

sapTunnelEncapIpMtuTooSmall = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 56)
)
sapTunnelEncapIpMtuTooSmall.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyName"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyConfigIpMtu"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyEncapOverhead"),
        ("TIMETRA-SAP-MIB", "sapTunnelNotifyConfigEncapIpMtu"))
)
if mibBuilder.loadTexts:
    sapTunnelEncapIpMtuTooSmall.setStatus(
        "current"
    )

sapHostRipListenerSetupFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 57)
)
sapHostRipListenerSetupFailed.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapRipListenerHostIpAddr"),
        ("TIMETRA-SAP-MIB", "sapRipListenerHostIpAddrType"),
        ("TIMETRA-SAP-MIB", "sapRipListenerVRtrID"),
        ("TIMETRA-SAP-MIB", "sapRipListenerNotifDescription"))
)
if mibBuilder.loadTexts:
    sapHostRipListenerSetupFailed.setStatus(
        "current"
    )

sapStatHost6DynMacConflict = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 58)
)
sapStatHost6DynMacConflict.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStatHost6DynMacAddress"),
        ("TIMETRA-SAP-MIB", "sapNotifyReason"))
)
if mibBuilder.loadTexts:
    sapStatHost6DynMacConflict.setStatus(
        "current"
    )

tmnxIpTunnelOperStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 59)
)
tmnxIpTunnelOperStateChange.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxIpTunnelAdminState"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperState"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxIpTunnelOperStateChange.setStatus(
        "current"
    )

svcEvpnMplsMacMoveExceedNonBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 60)
)
svcEvpnMplsMacMoveExceedNonBlock.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsEthSegId"),
        ("TIMETRA-SERV-MIB", "tlsFdbBackboneDstMac"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveMaxRate"),
        ("TIMETRA-SAP-MIB", "sapTlsNotifyMacAddr"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsMacMoveExceedNonBlock.setStatus(
        "current"
    )

sapIfIgnorePortStateStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 61)
)
sapIfIgnorePortStateStart.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapNotifyIfName"))
)
if mibBuilder.loadTexts:
    sapIfIgnorePortStateStart.setStatus(
        "current"
    )

sapIfIgnorePortStateStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 62)
)
sapIfIgnorePortStateStop.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapNotifyIfName"))
)
if mibBuilder.loadTexts:
    sapIfIgnorePortStateStop.setStatus(
        "current"
    )

sapReceivedPbbProtSrcMac = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 3, 0, 63)
)
sapReceivedPbbProtSrcMac.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"))
)
if mibBuilder.loadTexts:
    sapReceivedPbbProtSrcMac.setStatus(
        "current"
    )

topologyChangeSapMajorState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 1)
)
topologyChangeSapMajorState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    topologyChangeSapMajorState.setStatus(
        "current"
    )

newRootSap = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 2)
)
newRootSap.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    newRootSap.setStatus(
        "current"
    )

topologyChangeSapState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 5)
)
topologyChangeSapState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    topologyChangeSapState.setStatus(
        "current"
    )

receivedTCN = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 6)
)
receivedTCN.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    receivedTCN.setStatus(
        "current"
    )

higherPriorityBridge = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 9)
)
higherPriorityBridge.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerRootBridgeId"))
)
if mibBuilder.loadTexts:
    higherPriorityBridge.setStatus(
        "current"
    )

bridgedTLS = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 10)
)
bridgedTLS.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"))
)
if mibBuilder.loadTexts:
    bridgedTLS.setStatus(
        "obsolete"
    )

sapEncapPVST = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 11)
)
sapEncapPVST.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"))
)
if mibBuilder.loadTexts:
    sapEncapPVST.setStatus(
        "current"
    )

sapEncapDot1d = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 12)
)
sapEncapDot1d.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"))
)
if mibBuilder.loadTexts:
    sapEncapDot1d.setStatus(
        "current"
    )

sapReceiveOwnBpdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 13)
)
sapReceiveOwnBpdu.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"))
)
if mibBuilder.loadTexts:
    sapReceiveOwnBpdu.setStatus(
        "obsolete"
    )

sapActiveProtocolChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 30)
)
sapActiveProtocolChange.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsStpOperProtocol"))
)
if mibBuilder.loadTexts:
    sapActiveProtocolChange.setStatus(
        "current"
    )

tmnxStpRootGuardViolation = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 35)
)
tmnxStpRootGuardViolation.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsStpRootGuardViolation"))
)
if mibBuilder.loadTexts:
    tmnxStpRootGuardViolation.setStatus(
        "current"
    )

tmnxSapStpExcepCondStateChng = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 37)
)
tmnxSapStpExcepCondStateChng.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-SAP-MIB", "sapTlsStpException"))
)
if mibBuilder.loadTexts:
    tmnxSapStpExcepCondStateChng.setStatus(
        "current"
    )


# Notifications groups

tmnxSapNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 400)
)
tmnxSapNotifyGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapStatusChanged"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddrLimitAlarmRaised"),
        ("TIMETRA-SAP-MIB", "sapTlsMacAddrLimitAlarmCleared"),
        ("TIMETRA-SAP-MIB", "sapDHCPLeaseEntriesExceeded"),
        ("TIMETRA-SAP-MIB", "sapDHCPLseStateOverride"),
        ("TIMETRA-SAP-MIB", "sapDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-SAP-MIB", "sapDHCPLseStatePopulateErr"),
        ("TIMETRA-SAP-MIB", "hostConnectivityLost"),
        ("TIMETRA-SAP-MIB", "hostConnectivityRestored"),
        ("TIMETRA-SAP-MIB", "sapReceivedProtSrcMac"),
        ("TIMETRA-SAP-MIB", "sapStaticHostDynMacConflict"),
        ("TIMETRA-SAP-MIB", "sapTlsMacMoveExceeded"),
        ("TIMETRA-SAP-MIB", "sapDHCPProxyServerError"),
        ("TIMETRA-SAP-MIB", "sapPortStateChangeProcessed"),
        ("TIMETRA-SAP-MIB", "sapDHCPLseStateMobilityError"),
        ("TIMETRA-SAP-MIB", "msapStateChanged"),
        ("TIMETRA-SAP-MIB", "msapCreationFailure"),
        ("TIMETRA-SAP-MIB", "topologyChangeSapMajorState"),
        ("TIMETRA-SAP-MIB", "newRootSap"),
        ("TIMETRA-SAP-MIB", "topologyChangeSapState"),
        ("TIMETRA-SAP-MIB", "receivedTCN"),
        ("TIMETRA-SAP-MIB", "higherPriorityBridge"),
        ("TIMETRA-SAP-MIB", "sapEncapPVST"),
        ("TIMETRA-SAP-MIB", "sapEncapDot1d"),
        ("TIMETRA-SAP-MIB", "sapActiveProtocolChange"),
        ("TIMETRA-SAP-MIB", "tmnxStpRootGuardViolation"),
        ("TIMETRA-SAP-MIB", "tmnxSapStpExcepCondStateChng"),
        ("TIMETRA-SAP-MIB", "sapHostBGPPeeringSetupFailed"))
)
if mibBuilder.loadTexts:
    tmnxSapNotifyGroup.setStatus(
        "current"
    )

tmnxSapCemNotificationV6v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 401)
)
tmnxSapCemNotificationV6v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapCemPacketDefectAlarm"),
        ("TIMETRA-SAP-MIB", "sapCemPacketDefectAlarmClear"))
)
if mibBuilder.loadTexts:
    tmnxSapCemNotificationV6v0Group.setStatus(
        "current"
    )

tmnxSapObsoletedNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 402)
)
tmnxSapObsoletedNotifyGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapCreated"),
        ("TIMETRA-SAP-MIB", "sapDeleted"),
        ("TIMETRA-SAP-MIB", "sapTlsDHCPLseStEntriesExceeded"),
        ("TIMETRA-SAP-MIB", "sapTlsDHCPLeaseStateOverride"),
        ("TIMETRA-SAP-MIB", "sapTlsDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-SAP-MIB", "sapDHCPCoAError"),
        ("TIMETRA-SAP-MIB", "sapDHCPSubAuthError"),
        ("TIMETRA-SAP-MIB", "bridgedTLS"),
        ("TIMETRA-SAP-MIB", "sapReceiveOwnBpdu"))
)
if mibBuilder.loadTexts:
    tmnxSapObsoletedNotifyGroup.setStatus(
        "current"
    )

tmnxSapMvrpNotificationV8v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 403)
)
tmnxSapMvrpNotificationV8v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapTlsDataSapInstStatusChgd")
)
if mibBuilder.loadTexts:
    tmnxSapMvrpNotificationV8v0Group.setStatus(
        "current"
    )

tmnxSapNotificationV8v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 404)
)
tmnxSapNotificationV8v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpChg"),
        ("TIMETRA-SAP-MIB", "sapTunnelStateChange"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationV8v0Group.setStatus(
        "obsolete"
    )

tmnxSapNotificationV9v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 406)
)
tmnxSapNotificationV9v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapAtmPppSessionFailure"),
        ("TIMETRA-SAP-MIB", "sapAtmPppNcpFailure"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationV9v0Group.setStatus(
        "current"
    )

tmnxSapIpipeNotificationGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 407)
)
tmnxSapIpipeNotificationGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapIpipeCeIpAddrChange")
)
if mibBuilder.loadTexts:
    tmnxSapIpipeNotificationGroup.setStatus(
        "current"
    )

tmnxSapNotificationV10v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 413)
)
tmnxSapNotificationV10v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperRemIpChg")
)
if mibBuilder.loadTexts:
    tmnxSapNotificationV10v0Group.setStatus(
        "current"
    )

tmnxSapNotifObsoletedGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 421)
)
tmnxSapNotifObsoletedGroup.setObjects(
    ("TIMETRA-SAP-MIB", "tmnxGreTunnelOperRemIpChg")
)
if mibBuilder.loadTexts:
    tmnxSapNotifObsoletedGroup.setStatus(
        "current"
    )

tmnxSapNotificationV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 422)
)
tmnxSapNotificationV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTunnelStateChange"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelOperStateChange"))
)
if mibBuilder.loadTexts:
    tmnxSapNotificationV11v0Group.setStatus(
        "current"
    )

tmnxSapDcpNotifyV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 427)
)
tmnxSapDcpNotifyV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapTlsMacMoveExceedNonBlock"),
        ("TIMETRA-SAP-MIB", "sapDcpStaticExcd"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicExcd"),
        ("TIMETRA-SAP-MIB", "sapDcpStaticHoldDownStart"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicHoldDownStart"),
        ("TIMETRA-SAP-MIB", "sapDcpStaticHoldDownEnd"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicHoldDownEnd"),
        ("TIMETRA-SAP-MIB", "sapDcpStaticConform"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicConform"),
        ("TIMETRA-SAP-MIB", "sapDcpLocMonExcd"),
        ("TIMETRA-SAP-MIB", "sapDcpLocMonExcdDynResource"),
        ("TIMETRA-SAP-MIB", "sapDcpLocMonExcdAllDynAlloc"),
        ("TIMETRA-SAP-MIB", "sapDcpLocMonExcdAllDynFreed"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicEnforceAlloc"),
        ("TIMETRA-SAP-MIB", "sapDcpDynamicEnforceFreed"))
)
if mibBuilder.loadTexts:
    tmnxSapDcpNotifyV11v0Group.setStatus(
        "current"
    )

tmnxSapEthLpbkNotifyV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 431)
)
tmnxSapEthLpbkNotifyV11v0Group.setObjects(
      *(("TIMETRA-SAP-MIB", "sapEthLoopbackStarted"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackStopped"))
)
if mibBuilder.loadTexts:
    tmnxSapEthLpbkNotifyV11v0Group.setStatus(
        "current"
    )

tmnxIpTunnelEncapNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 447)
)
tmnxIpTunnelEncapNotifyGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapTunnelEncapIpMtuTooSmall")
)
if mibBuilder.loadTexts:
    tmnxIpTunnelEncapNotifyGroup.setStatus(
        "current"
    )

tmnxSapRipNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 464)
)
tmnxSapRipNotifyGroup.setObjects(
    ("TIMETRA-SAP-MIB", "sapHostRipListenerSetupFailed")
)
if mibBuilder.loadTexts:
    tmnxSapRipNotifyGroup.setStatus(
        "current"
    )

tmnxSapNotificationV13v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 476)
)
tmnxSapNotificationV13v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapStatHost6DynMacConflict")
)
if mibBuilder.loadTexts:
    tmnxSapNotificationV13v0Group.setStatus(
        "current"
    )

tmnxEvpnMplsMacMovNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 487)
)
tmnxEvpnMplsMacMovNotifGroup.setObjects(
    ("TIMETRA-SAP-MIB", "svcEvpnMplsMacMoveExceedNonBlock")
)
if mibBuilder.loadTexts:
    tmnxEvpnMplsMacMovNotifGroup.setStatus(
        "current"
    )

sapL3LoopbackNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 498)
)
sapL3LoopbackNotifGroup.setObjects(
      *(("TIMETRA-SAP-MIB", "sapIfIgnorePortStateStart"),
        ("TIMETRA-SAP-MIB", "sapIfIgnorePortStateStop"))
)
if mibBuilder.loadTexts:
    sapL3LoopbackNotifGroup.setStatus(
        "current"
    )

sapNotifyV20v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 2, 546)
)
sapNotifyV20v0Group.setObjects(
    ("TIMETRA-SAP-MIB", "sapReceivedPbbProtSrcMac")
)
if mibBuilder.loadTexts:
    sapNotifyV20v0Group.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance

tmnxSap7450V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 100)
)
tmnxSap7450V6v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 101)
)
tmnxSap7750V6v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 102)
)
tmnxSap7710V6v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 103)
)
tmnxSap7450V6v1Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 104)
)
tmnxSap7750V6v1Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 105)
)
tmnxSap7710V6v1Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIppipeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationObjV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 106)
)
tmnxSap7450V7v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 107)
)
tmnxSap7750V7v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 108)
)
tmnxSap7710V7v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 109)
)
tmnxSap7450V8v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 110)
)
tmnxSap7750V8v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 111)
)
tmnxSap7710V8v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 112)
)
tmnxSap7450V9v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 113)
)
tmnxSap7750V9v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 114)
)
tmnxSap7710V9v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 115)
)
tmnxSap7450V10v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 116)
)
tmnxSap7750V10v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 117)
)
tmnxSap7710V10v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 118)
)
tmnxSap7450V11v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 119)
)
tmnxSap7750V11v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 120)
)
tmnxSap7710V11v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 121)
)
tmnxSap7450V12v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 122)
)
tmnxSap7750V12v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 123)
)
tmnxSap7710V12v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7450V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 124)
)
tmnxSap7450V13v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7450V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7750V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 125)
)
tmnxSap7750V13v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7750V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7710V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 126)
)
tmnxSap7710V13v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPolicyV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7710V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV14v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 128)
)
tmnxSap7xxxV14v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV14v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV15v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 129)
)
tmnxSap7xxxV15v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV15v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV16v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 130)
)
tmnxSap7xxxV16v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosPlcrOvrV15v1Group"),
        ("TIMETRA-SAP-MIB", "sapPppoeRedirectGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTemplateQosV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTmplFilterNameV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3ExtGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressQinqV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsAggregateGroup"),
        ("TIMETRA-SAP-MIB", "sapNotifyObjsPortStateGroup"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV16v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV15v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 131)
)
tmnxSap7xxxV15v1Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosPlcrOvrV15v1Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV15v1Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV19v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 132)
)
tmnxSap7xxxV19v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapHsmdaV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosPlcrOvrV15v1Group"),
        ("TIMETRA-SAP-MIB", "sapPppoeRedirectGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTemplateQosV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTmplFilterNameV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3ExtGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressQinqV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsAggregateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperStatusGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapBWGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQtagV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVlanQosPlcyV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrAggRateCIRV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgPlcyPlcerStatV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressAggRateV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEsaVmV19v0Group"),
        ("TIMETRA-SAP-MIB", "sapNotifyObjsPortStateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsV19v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV19v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV20v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 133)
)
tmnxSap7xxxV20v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "sapNotifyV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsMacListV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsBgpVplsEvpnV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQMonQDepthV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapIngTrtcm2AggRateV20v10Group"),
        ("TIMETRA-SAP-MIB", "sapIngressIPCritOvrV20v10Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV20v0Compliance.setStatus(
        "obsolete"
    )

tmnxSap7xxxV21v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 134)
)
tmnxSap7xxxV21v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosPlcrOvrV15v1Group"),
        ("TIMETRA-SAP-MIB", "sapPppoeRedirectGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTemplateQosV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTmplFilterNameV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3ExtGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressQinqV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsAggregateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperStatusGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapBWGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQtagV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVlanQosPlcyV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrAggRateCIRV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgPlcyPlcerStatV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressAggRateV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEsaVmV19v0Group"),
        ("TIMETRA-SAP-MIB", "sapNotifyObjsPortStateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsV19v0Group"),
        ("TIMETRA-SAP-MIB", "sapNotifyV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsMacListV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsBgpVplsEvpnV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQMonQDepthV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapIngTrtcm2AggRateV20v10Group"),
        ("TIMETRA-SAP-MIB", "sapIngressIPCritOvrV20v10Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlTransProfV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapCfmSquelchInCtagGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelPMTUV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngQMonQDepthV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapLastChangeV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgressHQosV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapIPFilterPairV22v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV22v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSap7xxxV21v0Compliance.setStatus(
        "obsolete"
    )

tmnxSapV22v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 3, 1, 135)
)
tmnxSapV22v0Compliance.setObjects(
      *(("TIMETRA-SAP-MIB", "tmnxSapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapAtmV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPortIdV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubMgmtV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMstiV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2ptV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV6v1Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemNotificationV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxTlsMsapPppoeV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapCemV6v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMrpV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBsxV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapArpHostGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgmpTrkV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFrGroupV8v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapRadiusFallbackGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapPbbV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV7v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFPropBMacV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPlcrV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthRingGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapOverrideV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapGreV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotifObsoletedGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpNotificationV8v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmMonitorGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCflowdGroupV11v0"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDefHostV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFilterProfileV9v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeNotificationGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpTnlGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapLagV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMonitorIPGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatsV10v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapFlowSPecV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDCpuProtV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyObjsV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDcpNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrPortQGrpV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSpbV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSchedulerRateV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLoopbackV11v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthLpbkNotifyV11v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsFdbMacStatsGroup"),
        ("TIMETRA-SAP-MIB", "sapTlsEtreeGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxMsapPlcyCpmProtV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEthCfmV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV12v0Group"),
        ("TIMETRA-SAP-MIB", "sapLagV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelGreKeyV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelFragStatV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncapNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEncaNotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlOperChgGroup"),
        ("TIMETRA-SAP-MIB", "tmnxMsapQosV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV12v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStatHost6V13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpoeV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDnGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosSchedV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpipeFaultPropGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostRipV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDiamNasreqGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapRipNotifyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapNotificationV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapDhcpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapShcvPolicyGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapMvrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrEncapGrpV13v0Group"),
        ("TIMETRA-SAP-MIB", "sapBgpEvpnMplsMhGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVplsV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapInfoV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIpV6FilterV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxEvpnMplsMacMovNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapEthLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsPbbV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVprnLoopbackV14v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3V16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBgpEvpnAlmpGroup"),
        ("TIMETRA-SAP-MIB", "sapL3LoopbackNotifGroup"),
        ("TIMETRA-SAP-MIB", "sapV14v0NotifyObjsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQosStatsGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapCfmLmmPerQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQDropTailGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEsmMacV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosRateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsQOvrGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpIngRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tSapQosQGrpEgrRedirectListGroup"),
        ("TIMETRA-SAP-MIB", "tmnxDDosDCpuProtPolicyGrp"),
        ("TIMETRA-SAP-MIB", "tSapIpTnlTcpMssAdjustV15v0Grp"),
        ("TIMETRA-SAP-MIB", "tmnxSapTlsV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapMsapV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosHsWrrGrpOvrGroup"),
        ("TIMETRA-SAP-MIB", "sapEvpnMhEthSegV15v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosQBurstLimitOvrGrp"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosPlcrOvrV15v1Group"),
        ("TIMETRA-SAP-MIB", "sapPppoeRedirectGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapTemplateQosV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapTmplFilterNameV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapL2tpv3ExtGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressQinqV16v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapPfcpV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapBaseStatsAggregateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapOperStatusGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapBWGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQtagV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapVlanQosPlcyV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrAggRateCIRV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIgPlcyPlcerStatV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngressAggRateV19v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTunnelEsaVmV19v0Group"),
        ("TIMETRA-SAP-MIB", "sapNotifyObjsPortStateGroup"),
        ("TIMETRA-SAP-MIB", "tmnxSapQosStatsV19v0Group"),
        ("TIMETRA-SAP-MIB", "sapNotifyV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsMacListV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapTlsBgpVplsEvpnV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStickyMsapV20v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgrQMonQDepthV20v0Group"),
        ("TIMETRA-SAP-MIB", "sapIngTrtcm2AggRateV20v10Group"),
        ("TIMETRA-SAP-MIB", "sapIngressIPCritOvrV20v10Group"),
        ("TIMETRA-SAP-MIB", "tmnxIpTnlTransProfV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapCfmSquelchInCtagGroup"),
        ("TIMETRA-SAP-MIB", "tmnxIPTunnelPMTUV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapIngQMonQDepthV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapLastChangeV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapEgressHQosV21v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapSubV21v0Group"),
        ("TIMETRA-SAP-MIB", "sapIPFilterPairV22v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapQueueOvrV22v0Group"),
        ("TIMETRA-SAP-MIB", "tmnxSapStaticHostV22v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSapV22v0Compliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "TIMETRA-SAP-MIB",
    **{"TmnxSapAtmEncapsulation": TmnxSapAtmEncapsulation,
       "TmnxSapSubscriberLimit": TmnxSapSubscriberLimit,
       "TmnxVlanGroupId": TmnxVlanGroupId,
       "TmnxSapInstStatus": TmnxSapInstStatus,
       "TmnxSapQtagManipulationAction": TmnxSapQtagManipulationAction,
       "TmnxIpTunnelOperState": TmnxIpTunnelOperState,
       "timetraSvcSapMIBModule": timetraSvcSapMIBModule,
       "tmnxSapConformance": tmnxSapConformance,
       "tmnxSapCompliances": tmnxSapCompliances,
       "tmnxSap7450V6v0Compliance": tmnxSap7450V6v0Compliance,
       "tmnxSap7750V6v0Compliance": tmnxSap7750V6v0Compliance,
       "tmnxSap7710V6v0Compliance": tmnxSap7710V6v0Compliance,
       "tmnxSap7450V6v1Compliance": tmnxSap7450V6v1Compliance,
       "tmnxSap7750V6v1Compliance": tmnxSap7750V6v1Compliance,
       "tmnxSap7710V6v1Compliance": tmnxSap7710V6v1Compliance,
       "tmnxSap7450V7v0Compliance": tmnxSap7450V7v0Compliance,
       "tmnxSap7750V7v0Compliance": tmnxSap7750V7v0Compliance,
       "tmnxSap7710V7v0Compliance": tmnxSap7710V7v0Compliance,
       "tmnxSap7450V8v0Compliance": tmnxSap7450V8v0Compliance,
       "tmnxSap7750V8v0Compliance": tmnxSap7750V8v0Compliance,
       "tmnxSap7710V8v0Compliance": tmnxSap7710V8v0Compliance,
       "tmnxSap7450V9v0Compliance": tmnxSap7450V9v0Compliance,
       "tmnxSap7750V9v0Compliance": tmnxSap7750V9v0Compliance,
       "tmnxSap7710V9v0Compliance": tmnxSap7710V9v0Compliance,
       "tmnxSap7450V10v0Compliance": tmnxSap7450V10v0Compliance,
       "tmnxSap7750V10v0Compliance": tmnxSap7750V10v0Compliance,
       "tmnxSap7710V10v0Compliance": tmnxSap7710V10v0Compliance,
       "tmnxSap7450V11v0Compliance": tmnxSap7450V11v0Compliance,
       "tmnxSap7750V11v0Compliance": tmnxSap7750V11v0Compliance,
       "tmnxSap7710V11v0Compliance": tmnxSap7710V11v0Compliance,
       "tmnxSap7450V12v0Compliance": tmnxSap7450V12v0Compliance,
       "tmnxSap7750V12v0Compliance": tmnxSap7750V12v0Compliance,
       "tmnxSap7710V12v0Compliance": tmnxSap7710V12v0Compliance,
       "tmnxSap7450V13v0Compliance": tmnxSap7450V13v0Compliance,
       "tmnxSap7750V13v0Compliance": tmnxSap7750V13v0Compliance,
       "tmnxSap7710V13v0Compliance": tmnxSap7710V13v0Compliance,
       "tmnxSap7xxxV14v0Compliance": tmnxSap7xxxV14v0Compliance,
       "tmnxSap7xxxV15v0Compliance": tmnxSap7xxxV15v0Compliance,
       "tmnxSap7xxxV16v0Compliance": tmnxSap7xxxV16v0Compliance,
       "tmnxSap7xxxV15v1Compliance": tmnxSap7xxxV15v1Compliance,
       "tmnxSap7xxxV19v0Compliance": tmnxSap7xxxV19v0Compliance,
       "tmnxSap7xxxV20v0Compliance": tmnxSap7xxxV20v0Compliance,
       "tmnxSap7xxxV21v0Compliance": tmnxSap7xxxV21v0Compliance,
       "tmnxSapV22v0Compliance": tmnxSapV22v0Compliance,
       "tmnxSapGroups": tmnxSapGroups,
       "tmnxSapV6v0Group": tmnxSapV6v0Group,
       "tmnxSapTlsV6v0Group": tmnxSapTlsV6v0Group,
       "tmnxSapAtmV6v0Group": tmnxSapAtmV6v0Group,
       "tmnxSapBaseV6v0Group": tmnxSapBaseV6v0Group,
       "tmnxSapQosV6v0Group": tmnxSapQosV6v0Group,
       "tmnxSapStaticHostV6v0Group": tmnxSapStaticHostV6v0Group,
       "tmnxSapDhcpV6v0Group": tmnxSapDhcpV6v0Group,
       "tmnxSapPortIdV6v0Group": tmnxSapPortIdV6v0Group,
       "tmnxSapSubMgmtV6v0Group": tmnxSapSubMgmtV6v0Group,
       "tmnxSapMstiV6v0Group": tmnxSapMstiV6v0Group,
       "tmnxSapIppipeV6v0Group": tmnxSapIppipeV6v0Group,
       "tmnxSapPolicyV6v0Group": tmnxSapPolicyV6v0Group,
       "tmnxSapCemV6v0Group": tmnxSapCemV6v0Group,
       "tmnxSapL2ptV6v0Group": tmnxSapL2ptV6v0Group,
       "tmnxSapMsapV6v0Group": tmnxSapMsapV6v0Group,
       "tmnxSapMrpV6v0Group": tmnxSapMrpV6v0Group,
       "tmnxSapHsmdaV6v0Group": tmnxSapHsmdaV6v0Group,
       "tmnxTlsMsapPppoeV6v0Group": tmnxTlsMsapPppoeV6v0Group,
       "tmnxSapIpV6FilterV6v0Group": tmnxSapIpV6FilterV6v0Group,
       "tmnxSapBsxV6v0Group": tmnxSapBsxV6v0Group,
       "tmnxSapMsapV6v1Group": tmnxSapMsapV6v1Group,
       "tmnxSapStaticHostV6v1Group": tmnxSapStaticHostV6v1Group,
       "tmnxSapTlsV6v1Group": tmnxSapTlsV6v1Group,
       "tmnxSapArpHostGroup": tmnxSapArpHostGroup,
       "tmnxSapV7v0Group": tmnxSapV7v0Group,
       "tmnxSapIgmpTrkGroup": tmnxSapIgmpTrkGroup,
       "tmnxSapFrGroup": tmnxSapFrGroup,
       "tmnxSapIpipeV7v0Group": tmnxSapIpipeV7v0Group,
       "tmnxSapBsxV7v0Group": tmnxSapBsxV7v0Group,
       "tmnxSapRadiusFallbackGroup": tmnxSapRadiusFallbackGroup,
       "tmnxSapPbbGroup": tmnxSapPbbGroup,
       "tmnxSapFrGroupV8v0": tmnxSapFrGroupV8v0,
       "tmnxSapTlsV8v0Group": tmnxSapTlsV8v0Group,
       "tmnxSapDhcpV8v0Group": tmnxSapDhcpV8v0Group,
       "tmnxSapV8v0Group": tmnxSapV8v0Group,
       "tmnxSapFPropBMacV8v0Group": tmnxSapFPropBMacV8v0Group,
       "tmnxSapPlcrV8v0Group": tmnxSapPlcrV8v0Group,
       "tmnxSapTlsV7v0Group": tmnxSapTlsV7v0Group,
       "tmnxSapSubMgmtV8v0Group": tmnxSapSubMgmtV8v0Group,
       "tmnxSapMsapV8v0Group": tmnxSapMsapV8v0Group,
       "tmnxSapQosV8v0Group": tmnxSapQosV8v0Group,
       "tmnxSapMrpV8v0Group": tmnxSapMrpV8v0Group,
       "tmnxSapMvrpV8v0Group": tmnxSapMvrpV8v0Group,
       "tmnxSapIpipeV8v0Group": tmnxSapIpipeV8v0Group,
       "tmnxSapEthRingGroup": tmnxSapEthRingGroup,
       "tmnxSapOverrideV8v0Group": tmnxSapOverrideV8v0Group,
       "tmnxSapV9v0Group": tmnxSapV9v0Group,
       "tmnxSapAtmV9v0Group": tmnxSapAtmV9v0Group,
       "tmnxSapEthCfmMonitorGroup": tmnxSapEthCfmMonitorGroup,
       "tmnxSapGreGroup": tmnxSapGreGroup,
       "tmnxSapIgmpTrkV8v0Group": tmnxSapIgmpTrkV8v0Group,
       "tmnxSapBsxV9v0Group": tmnxSapBsxV9v0Group,
       "tmnxSapMsapV9v0Group": tmnxSapMsapV9v0Group,
       "tmnxSapOverrideV9v0Group": tmnxSapOverrideV9v0Group,
       "tmnxSapPlcrV9v0Group": tmnxSapPlcrV9v0Group,
       "tmnxSapEgrEncapGrpV9v0Group": tmnxSapEgrEncapGrpV9v0Group,
       "tmnxSapStaticHostV9v0Group": tmnxSapStaticHostV9v0Group,
       "tmnxSapSubMgmtV9v0Group": tmnxSapSubMgmtV9v0Group,
       "tmnxSapHsmdaV9v0Group": tmnxSapHsmdaV9v0Group,
       "tmnxSapDefHostV9v0Group": tmnxSapDefHostV9v0Group,
       "tmnxSapFilterProfileV9v0Group": tmnxSapFilterProfileV9v0Group,
       "tmnxSapV10v0Group": tmnxSapV10v0Group,
       "tmnxSapBsxV10v0Group": tmnxSapBsxV10v0Group,
       "tmnxSapIgmpTrkV11v0Group": tmnxSapIgmpTrkV11v0Group,
       "tmnxSapMsapV11v0Group": tmnxSapMsapV11v0Group,
       "tmnxSapDhcpV11v0Group": tmnxSapDhcpV11v0Group,
       "tmnxSapStaticHostV11v0Group": tmnxSapStaticHostV11v0Group,
       "tmnxSapNotificationObjV6v0Group": tmnxSapNotificationObjV6v0Group,
       "tmnxSapNotificationObjV7v0Group": tmnxSapNotificationObjV7v0Group,
       "tmnxSapNotifyObjsV8v0R5Group": tmnxSapNotifyObjsV8v0R5Group,
       "tmnxSapNotificationObjV9v0Group": tmnxSapNotificationObjV9v0Group,
       "tmnxSapIpipeNotifyObjsGroup": tmnxSapIpipeNotifyObjsGroup,
       "tmnxSapRipNotifyObjsGroup": tmnxSapRipNotifyObjsGroup,
       "tmnxSapDefHostV14v0Group": tmnxSapDefHostV14v0Group,
       "tmnxSapNotificationObjV13v0Group": tmnxSapNotificationObjV13v0Group,
       "tmnxSapObsoletedV6v0Group": tmnxSapObsoletedV6v0Group,
       "tmnxSapObsoletedV7v0Group": tmnxSapObsoletedV7v0Group,
       "tmnxSapObsoletedV8v0Group": tmnxSapObsoletedV8v0Group,
       "tmnxSapNotifyGroup": tmnxSapNotifyGroup,
       "tmnxSapCemNotificationV6v0Group": tmnxSapCemNotificationV6v0Group,
       "tmnxSapObsoletedNotifyGroup": tmnxSapObsoletedNotifyGroup,
       "tmnxSapMvrpNotificationV8v0Group": tmnxSapMvrpNotificationV8v0Group,
       "tmnxSapNotificationV8v0Group": tmnxSapNotificationV8v0Group,
       "tmnxSapEthCfmGroup": tmnxSapEthCfmGroup,
       "tmnxSapNotificationV9v0Group": tmnxSapNotificationV9v0Group,
       "tmnxSapIpipeNotificationGroup": tmnxSapIpipeNotificationGroup,
       "tmnxSapSpbGroup": tmnxSapSpbGroup,
       "tmnxSapMonitorIPGroup": tmnxSapMonitorIPGroup,
       "tmnxSapV11v0Group": tmnxSapV11v0Group,
       "tmnxSapIpTnlGroup": tmnxSapIpTnlGroup,
       "tmnxSapGreV10v0Group": tmnxSapGreV10v0Group,
       "tmnxSapNotificationV10v0Group": tmnxSapNotificationV10v0Group,
       "tmnxSapHsmdaV10v0Group": tmnxSapHsmdaV10v0Group,
       "tmnxSapObsoletedV10v0Group": tmnxSapObsoletedV10v0Group,
       "tmnxSapLagV11v0Group": tmnxSapLagV11v0Group,
       "tmnxSapMvrpV10v0Group": tmnxSapMvrpV10v0Group,
       "tmnxSapFlowSPecV11v0Group": tmnxSapFlowSPecV11v0Group,
       "tmnxSapGreObsoletedGroup": tmnxSapGreObsoletedGroup,
       "tmnxSapGreV11v0Group": tmnxSapGreV11v0Group,
       "tmnxSapNotifObsoletedGroup": tmnxSapNotifObsoletedGroup,
       "tmnxSapNotificationV11v0Group": tmnxSapNotificationV11v0Group,
       "tmnxSapStatsV10v0Group": tmnxSapStatsV10v0Group,
       "tmnxSapDCpuProtV11v0Group": tmnxSapDCpuProtV11v0Group,
       "tmnxSapEgrPortQGrpV11v0Group": tmnxSapEgrPortQGrpV11v0Group,
       "tmnxSapDcpNotifyObjsV11v0Group": tmnxSapDcpNotifyObjsV11v0Group,
       "tmnxSapDcpNotifyV11v0Group": tmnxSapDcpNotifyV11v0Group,
       "tmnxSapSchedulerRateV11v0Group": tmnxSapSchedulerRateV11v0Group,
       "tmnxSapSpbV11v0Group": tmnxSapSpbV11v0Group,
       "tmnxSapEthLoopbackV11v0Group": tmnxSapEthLoopbackV11v0Group,
       "tmnxSapEthLpbkNotifyV11v0Group": tmnxSapEthLpbkNotifyV11v0Group,
       "tmnxSapQosV11v0Group": tmnxSapQosV11v0Group,
       "tmnxSapQosObsoletedV11v0Group": tmnxSapQosObsoletedV11v0Group,
       "tmnxSapCflowdGroupV11v0": tmnxSapCflowdGroupV11v0,
       "sapTlsFdbMacStatsGroup": sapTlsFdbMacStatsGroup,
       "sapTlsEtreeGroup": sapTlsEtreeGroup,
       "tmnxMsapPlcyCpmProtV12v0Group": tmnxMsapPlcyCpmProtV12v0Group,
       "tmnxSapTlsV12v0Group": tmnxSapTlsV12v0Group,
       "tmnxSapQosV12v0Group": tmnxSapQosV12v0Group,
       "tmnxSapEthCfmV12v0Group": tmnxSapEthCfmV12v0Group,
       "tmnxIpTunnelV12v0Group": tmnxIpTunnelV12v0Group,
       "tmnxIPTunnelPMTUV21v0Group": tmnxIPTunnelPMTUV21v0Group,
       "sapLagV12v0Group": sapLagV12v0Group,
       "tmnxIPTunnelGreKeyV12v0Group": tmnxIPTunnelGreKeyV12v0Group,
       "tmnxIpTunnelFragStatV12v0Group": tmnxIpTunnelFragStatV12v0Group,
       "tmnxIpTunnelEncapNotifyGroup": tmnxIpTunnelEncapNotifyGroup,
       "tmnxIpTunnelEncaNotifyObjsGroup": tmnxIpTunnelEncaNotifyObjsGroup,
       "tmnxSapPbbV12v0Group": tmnxSapPbbV12v0Group,
       "tmnxMsapQosV12v0Group": tmnxMsapQosV12v0Group,
       "tmnxIpTnlOperChgGroup": tmnxIpTnlOperChgGroup,
       "tmnxSapMsapV12v0Group": tmnxSapMsapV12v0Group,
       "tmnxSapIpoeV13v0Group": tmnxSapIpoeV13v0Group,
       "tmnxSapStatHost6Group": tmnxSapStatHost6Group,
       "tmnxSapDnGroup": tmnxSapDnGroup,
       "tmnxSapQosSchedV13v0Group": tmnxSapQosSchedV13v0Group,
       "tmnxSapIpipeFaultPropGroup": tmnxSapIpipeFaultPropGroup,
       "tmnxSapStaticHostRipV13v0Group": tmnxSapStaticHostRipV13v0Group,
       "tmnxSapBaseStatsV13v0Group": tmnxSapBaseStatsV13v0Group,
       "tmnxSapQueueOvrV13v0Group": tmnxSapQueueOvrV13v0Group,
       "tmnxSapStatHost6V13v0Group": tmnxSapStatHost6V13v0Group,
       "tmnxSapDiamNasreqGroup": tmnxSapDiamNasreqGroup,
       "tmnxSapRipNotifyGroup": tmnxSapRipNotifyGroup,
       "tmnxSapQosRateV13v0Group": tmnxSapQosRateV13v0Group,
       "tmnxSapDhcpV13v0Group": tmnxSapDhcpV13v0Group,
       "tmnxSapShcvPolicyGroup": tmnxSapShcvPolicyGroup,
       "tmnxSapNotificationV13v0Group": tmnxSapNotificationV13v0Group,
       "tmnxSapV13v0Group": tmnxSapV13v0Group,
       "tmnxSapMvrpV13v0Group": tmnxSapMvrpV13v0Group,
       "tmnxSapEgrEncapGrpV13v0Group": tmnxSapEgrEncapGrpV13v0Group,
       "tmnxSapObsoletedV13v0Group": tmnxSapObsoletedV13v0Group,
       "sapBgpEvpnMplsMhGroup": sapBgpEvpnMplsMhGroup,
       "tmnxSapV14v0Group": tmnxSapV14v0Group,
       "tmnxSapMsapV14v0Group": tmnxSapMsapV14v0Group,
       "tmnxSapVplsV14v0Group": tmnxSapVplsV14v0Group,
       "tmnxSapQosStatsGroup": tmnxSapQosStatsGroup,
       "tmnxSapStickyMsapGroup": tmnxSapStickyMsapGroup,
       "tmnxEvpnMplsMacMovNotifGroup": tmnxEvpnMplsMacMovNotifGroup,
       "tmnxSapInfoV14v0Group": tmnxSapInfoV14v0Group,
       "tmnxSapObsoletedV14v0Group": tmnxSapObsoletedV14v0Group,
       "tmnxSapQosV14v0Group": tmnxSapQosV14v0Group,
       "tmnxSapIpV6FilterV14v0Group": tmnxSapIpV6FilterV14v0Group,
       "tmnxSapFlowSPecObsoletedV14v0Grp": tmnxSapFlowSPecObsoletedV14v0Grp,
       "sapEthLoopbackV14v0Group": sapEthLoopbackV14v0Group,
       "tmnxSapTlsPbbV14v0Group": tmnxSapTlsPbbV14v0Group,
       "tmnxSapVprnLoopbackV14v0Group": tmnxSapVprnLoopbackV14v0Group,
       "tmnxSapL2tpv3V14v0Group": tmnxSapL2tpv3V14v0Group,
       "tmnxSapBgpEvpnAlmpGroup": tmnxSapBgpEvpnAlmpGroup,
       "sapL3LoopbackNotifGroup": sapL3LoopbackNotifGroup,
       "sapV14v0NotifyObjsGroup": sapV14v0NotifyObjsGroup,
       "tmnxSapEgrQosStatsGroup": tmnxSapEgrQosStatsGroup,
       "tmnxDDosDCpuProtPolicyGrp": tmnxDDosDCpuProtPolicyGrp,
       "tmnxSapCfmLmmPerQosV15v0Group": tmnxSapCfmLmmPerQosV15v0Group,
       "tmnxSapQosQDropTailGroup": tmnxSapQosQDropTailGroup,
       "tmnxSapQosV15v0Group": tmnxSapQosV15v0Group,
       "tmnxSapObsoletedV15v0Group": tmnxSapObsoletedV15v0Group,
       "tmnxSapEsmMacV15v0Group": tmnxSapEsmMacV15v0Group,
       "tmnxSapQosRateGroup": tmnxSapQosRateGroup,
       "tmnxSapQosHsQOvrGroup": tmnxSapQosHsQOvrGroup,
       "tmnxSapTlsV15v0Group": tmnxSapTlsV15v0Group,
       "tmnxSapTlsEgrMcastObsoletedGroup": tmnxSapTlsEgrMcastObsoletedGroup,
       "tmnxSapMsapV15v0Group": tmnxSapMsapV15v0Group,
       "tmnxMsapTlsEgrObsoletedGroup": tmnxMsapTlsEgrObsoletedGroup,
       "tSapQosQGrpIngRedirectListGroup": tSapQosQGrpIngRedirectListGroup,
       "tSapQosQGrpEgrRedirectListGroup": tSapQosQGrpEgrRedirectListGroup,
       "tSapIpTnlTcpMssAdjustV15v0Grp": tSapIpTnlTcpMssAdjustV15v0Grp,
       "tmnxSapPlcrV15v0Group": tmnxSapPlcrV15v0Group,
       "tmnxSapQosHsWrrGrpOvrGroup": tmnxSapQosHsWrrGrpOvrGroup,
       "sapEvpnMhEthSegV15v0Group": sapEvpnMhEthSegV15v0Group,
       "tmnxSapQosQBurstLimitOvrGrp": tmnxSapQosQBurstLimitOvrGrp,
       "sapPppoeRedirectGroup": sapPppoeRedirectGroup,
       "tmnxIpTunnelV16v0Group": tmnxIpTunnelV16v0Group,
       "tmnxSapQosPlcrOvrV15v1Group": tmnxSapQosPlcrOvrV15v1Group,
       "tmnxSapQosPlcrOvrObsoletedGroup": tmnxSapQosPlcrOvrObsoletedGroup,
       "tmnxSapTemplateQosV16v0Group": tmnxSapTemplateQosV16v0Group,
       "tmnxSapTmplFilterNameV16v0Group": tmnxSapTmplFilterNameV16v0Group,
       "tmnxSapL2tpv3ExtGroup": tmnxSapL2tpv3ExtGroup,
       "tmnxSapIngressQinqV16v0Group": tmnxSapIngressQinqV16v0Group,
       "tmnxSapL2tpv3V16v0Group": tmnxSapL2tpv3V16v0Group,
       "tmnxSapL2tpv3ObsoletedGroup": tmnxSapL2tpv3ObsoletedGroup,
       "tmnxSapPfcpV19v0Group": tmnxSapPfcpV19v0Group,
       "tmnxSapBaseStatsAggregateGroup": tmnxSapBaseStatsAggregateGroup,
       "tmnxSapOperStatusGroup": tmnxSapOperStatusGroup,
       "tmnxSapInfoV19v0Group": tmnxSapInfoV19v0Group,
       "tmnxSapOperObsoletedGroup": tmnxSapOperObsoletedGroup,
       "tmnxSapBWGroup": tmnxSapBWGroup,
       "tmnxSapQtagV19v0Group": tmnxSapQtagV19v0Group,
       "tmnxSapVlanQosPlcyV19v0Group": tmnxSapVlanQosPlcyV19v0Group,
       "tmnxSapEgrAggRateCIRV19v0Group": tmnxSapEgrAggRateCIRV19v0Group,
       "tmnxSapIgPlcyPlcerStatV19v0Group": tmnxSapIgPlcyPlcerStatV19v0Group,
       "tmnxSapIngressAggRateV19v0Group": tmnxSapIngressAggRateV19v0Group,
       "tmnxIpTunnelEsaVmV19v0Group": tmnxIpTunnelEsaVmV19v0Group,
       "sapNotifyObjsPortStateGroup": sapNotifyObjsPortStateGroup,
       "tmnxSapQosStatsV19v0Group": tmnxSapQosStatsV19v0Group,
       "sapNotifyV20v0Group": sapNotifyV20v0Group,
       "sapTlsMacListV20v0Group": sapTlsMacListV20v0Group,
       "sapTlsBgpVplsEvpnV20v0Group": sapTlsBgpVplsEvpnV20v0Group,
       "tmnxSapStickyMsapV20v0Group": tmnxSapStickyMsapV20v0Group,
       "tmnxSapEgrQMonQDepthV20v0Group": tmnxSapEgrQMonQDepthV20v0Group,
       "sapIngTrtcm2AggRateV20v10Group": sapIngTrtcm2AggRateV20v10Group,
       "tmnxIpTnlTransProfV21v0Group": tmnxIpTnlTransProfV21v0Group,
       "sapCfmSquelchInCtagGroup": sapCfmSquelchInCtagGroup,
       "sapIngressIPCritOvrV20v10Group": sapIngressIPCritOvrV20v10Group,
       "sapHsmdaObsoleteV21v0Group": sapHsmdaObsoleteV21v0Group,
       "sapQueueOvrObsoleteV21v0Group": sapQueueOvrObsoleteV21v0Group,
       "tmnxSapQueueOvrV21v0Group": tmnxSapQueueOvrV21v0Group,
       "tmnxSapIngQMonQDepthV21v0Group": tmnxSapIngQMonQDepthV21v0Group,
       "sapLastChangeV21v0Group": sapLastChangeV21v0Group,
       "tmnxSapEgressHQosV21v0Group": tmnxSapEgressHQosV21v0Group,
       "tmnxSapSubV21v0Group": tmnxSapSubV21v0Group,
       "sapIPFilterPairV22v0Group": sapIPFilterPairV22v0Group,
       "sapQueueOvrObsoleteV22v0Group": sapQueueOvrObsoleteV22v0Group,
       "tmnxSapQueueOvrV22v0Group": tmnxSapQueueOvrV22v0Group,
       "tmnxSapStaticHostV22v0Group": tmnxSapStaticHostV22v0Group,
       "tmnxDCSapCompliances": tmnxDCSapCompliances,
       "tmnxDCSapGroups": tmnxDCSapGroups,
       "tmnxMgSapCompliances": tmnxMgSapCompliances,
       "tmnxMgSapGroups": tmnxMgSapGroups,
       "tmnxSapObjs": tmnxSapObjs,
       "sapNumEntries": sapNumEntries,
       "sapBaseInfoTable": sapBaseInfoTable,
       "sapBaseInfoEntry": sapBaseInfoEntry,
       "sapPortId": sapPortId,
       "sapEncapValue": sapEncapValue,
       "sapRowStatus": sapRowStatus,
       "sapType": sapType,
       "sapDescription": sapDescription,
       "sapAdminStatus": sapAdminStatus,
       "sapOperStatus": sapOperStatus,
       "sapIngressQosPolicyId": sapIngressQosPolicyId,
       "sapIngressMacFilterId": sapIngressMacFilterId,
       "sapIngressIpFilterId": sapIngressIpFilterId,
       "sapEgressQosPolicyId": sapEgressQosPolicyId,
       "sapEgressMacFilterId": sapEgressMacFilterId,
       "sapEgressIpFilterId": sapEgressIpFilterId,
       "sapMirrorStatus": sapMirrorStatus,
       "sapIesIfIndex": sapIesIfIndex,
       "sapLastMgmtChange": sapLastMgmtChange,
       "sapCollectAcctStats": sapCollectAcctStats,
       "sapAccountingPolicyId": sapAccountingPolicyId,
       "sapVpnId": sapVpnId,
       "sapCustId": sapCustId,
       "sapCustMultSvcSite": sapCustMultSvcSite,
       "sapIngressQosSchedulerPolicy": sapIngressQosSchedulerPolicy,
       "sapEgressQosSchedulerPolicy": sapEgressQosSchedulerPolicy,
       "sapSplitHorizonGrp": sapSplitHorizonGrp,
       "sapIngressSharedQueuePolicy": sapIngressSharedQueuePolicy,
       "sapIngressMatchQinQDot1PBits": sapIngressMatchQinQDot1PBits,
       "sapOperFlags": sapOperFlags,
       "sapLastStatusChange": sapLastStatusChange,
       "sapAntiSpoofing": sapAntiSpoofing,
       "sapIngressIpv6FilterId": sapIngressIpv6FilterId,
       "sapEgressIpv6FilterId": sapEgressIpv6FilterId,
       "sapTodSuite": sapTodSuite,
       "sapIngUseMultipointShared": sapIngUseMultipointShared,
       "sapEgressQinQMarkTopOnly": sapEgressQinQMarkTopOnly,
       "sapEgressAggRateLimit": sapEgressAggRateLimit,
       "sapEndPoint": sapEndPoint,
       "sapIngressVlanTranslation": sapIngressVlanTranslation,
       "sapIngressVlanTranslationId": sapIngressVlanTranslationId,
       "sapSubType": sapSubType,
       "sapCpmProtPolicyId": sapCpmProtPolicyId,
       "sapCpmProtMonitorMac": sapCpmProtMonitorMac,
       "sapEgressFrameBasedAccounting": sapEgressFrameBasedAccounting,
       "sapIngressAggRateLimit": sapIngressAggRateLimit,
       "sapEgressHsmdaShaperOverride": sapEgressHsmdaShaperOverride,
       "sapIngressHsmdaPacketOffOvr": sapIngressHsmdaPacketOffOvr,
       "sapEgressHsmdaPacketOffOverride": sapEgressHsmdaPacketOffOverride,
       "sapCallingStationId": sapCallingStationId,
       "sapIsaAaApplicationProfile": sapIsaAaApplicationProfile,
       "sapIngPolicerPolicy": sapIngPolicerPolicy,
       "sapEgrPolicerPolicy": sapEgrPolicerPolicy,
       "sapTmplUsed": sapTmplUsed,
       "sapEthRingIndex": sapEthRingIndex,
       "sapIngressFlowspec": sapIngressFlowspec,
       "sapCpmProtEthCfmMonitorFlags": sapCpmProtEthCfmMonitorFlags,
       "sapTransitIpPolicyId": sapTransitIpPolicyId,
       "sapOperGrp": sapOperGrp,
       "sapMonitorOperGrp": sapMonitorOperGrp,
       "sapEgressHsmdaWrrPolicyOvr": sapEgressHsmdaWrrPolicyOvr,
       "sapTransitPrefixPolicyId": sapTransitPrefixPolicyId,
       "sapCpmProtMonitorIP": sapCpmProtMonitorIP,
       "sapHostsAdminState": sapHostsAdminState,
       "sapHostLockoutPolicy": sapHostLockoutPolicy,
       "sapAarpId": sapAarpId,
       "sapIngressFPQGrp": sapIngressFPQGrp,
       "sapIngressFPQGrpInstanceId": sapIngressFPQGrpInstanceId,
       "sapAarpServRefType": sapAarpServRefType,
       "sapSiteName": sapSiteName,
       "sapIgnoreOperDown": sapIgnoreOperDown,
       "sapLagLinkMapProfile": sapLagLinkMapProfile,
       "sapIngressIPv6Flowspec": sapIngressIPv6Flowspec,
       "sapEgressPortQGrp": sapEgressPortQGrp,
       "sapEgressPortQGrpInstanceId": sapEgressPortQGrpInstanceId,
       "sapEtreeRootLeafTag": sapEtreeRootLeafTag,
       "sapEtreeLeafTag": sapEtreeLeafTag,
       "sapEtreeLeafAc": sapEtreeLeafAc,
       "sapEgressAggRateLUB": sapEgressAggRateLUB,
       "sapEgressAggRateLmtHi": sapEgressAggRateLmtHi,
       "sapEgressAggRateLmt": sapEgressAggRateLmt,
       "sapMulticastSource": sapMulticastSource,
       "sapTlsInfoTable": sapTlsInfoTable,
       "sapTlsInfoEntry": sapTlsInfoEntry,
       "sapTlsStpAdminStatus": sapTlsStpAdminStatus,
       "sapTlsStpPriority": sapTlsStpPriority,
       "sapTlsStpPortNum": sapTlsStpPortNum,
       "sapTlsStpPathCost": sapTlsStpPathCost,
       "sapTlsStpRapidStart": sapTlsStpRapidStart,
       "sapTlsStpBpduEncap": sapTlsStpBpduEncap,
       "sapTlsStpPortState": sapTlsStpPortState,
       "sapTlsStpDesignatedBridge": sapTlsStpDesignatedBridge,
       "sapTlsStpDesignatedPort": sapTlsStpDesignatedPort,
       "sapTlsStpForwardTransitions": sapTlsStpForwardTransitions,
       "sapTlsStpInConfigBpdus": sapTlsStpInConfigBpdus,
       "sapTlsStpInTcnBpdus": sapTlsStpInTcnBpdus,
       "sapTlsStpInBadBpdus": sapTlsStpInBadBpdus,
       "sapTlsStpOutConfigBpdus": sapTlsStpOutConfigBpdus,
       "sapTlsStpOutTcnBpdus": sapTlsStpOutTcnBpdus,
       "sapTlsStpOperBpduEncap": sapTlsStpOperBpduEncap,
       "sapTlsVpnId": sapTlsVpnId,
       "sapTlsCustId": sapTlsCustId,
       "sapTlsMacAddressLimit": sapTlsMacAddressLimit,
       "sapTlsNumMacAddresses": sapTlsNumMacAddresses,
       "sapTlsNumStaticMacAddresses": sapTlsNumStaticMacAddresses,
       "sapTlsMacLearning": sapTlsMacLearning,
       "sapTlsMacAgeing": sapTlsMacAgeing,
       "sapTlsStpOperEdge": sapTlsStpOperEdge,
       "sapTlsStpAdminPointToPoint": sapTlsStpAdminPointToPoint,
       "sapTlsStpPortRole": sapTlsStpPortRole,
       "sapTlsStpAutoEdge": sapTlsStpAutoEdge,
       "sapTlsStpOperProtocol": sapTlsStpOperProtocol,
       "sapTlsStpInRstBpdus": sapTlsStpInRstBpdus,
       "sapTlsStpOutRstBpdus": sapTlsStpOutRstBpdus,
       "sapTlsLimitMacMove": sapTlsLimitMacMove,
       "sapTlsDhcpSnooping": sapTlsDhcpSnooping,
       "sapTlsMacPinning": sapTlsMacPinning,
       "sapTlsDiscardUnknownSource": sapTlsDiscardUnknownSource,
       "sapTlsMvplsPruneState": sapTlsMvplsPruneState,
       "sapTlsMvplsMgmtService": sapTlsMvplsMgmtService,
       "sapTlsMvplsMgmtPortId": sapTlsMvplsMgmtPortId,
       "sapTlsMvplsMgmtEncapValue": sapTlsMvplsMgmtEncapValue,
       "sapTlsArpReplyAgent": sapTlsArpReplyAgent,
       "sapTlsStpException": sapTlsStpException,
       "sapTlsAuthenticationPolicy": sapTlsAuthenticationPolicy,
       "sapTlsL2ptTermination": sapTlsL2ptTermination,
       "sapTlsBpduTranslation": sapTlsBpduTranslation,
       "sapTlsStpRootGuard": sapTlsStpRootGuard,
       "sapTlsStpInsideRegion": sapTlsStpInsideRegion,
       "sapTlsEgressMcastGroup": sapTlsEgressMcastGroup,
       "sapTlsStpInMstBpdus": sapTlsStpInMstBpdus,
       "sapTlsStpOutMstBpdus": sapTlsStpOutMstBpdus,
       "sapTlsRestProtSrcMac": sapTlsRestProtSrcMac,
       "sapTlsRestUnprotDstMac": sapTlsRestUnprotDstMac,
       "sapTlsStpRxdDesigBridge": sapTlsStpRxdDesigBridge,
       "sapTlsStpRootGuardViolation": sapTlsStpRootGuardViolation,
       "sapTlsShcvAction": sapTlsShcvAction,
       "sapTlsShcvSrcIp": sapTlsShcvSrcIp,
       "sapTlsShcvSrcMac": sapTlsShcvSrcMac,
       "sapTlsShcvInterval": sapTlsShcvInterval,
       "sapTlsMvplsMgmtMsti": sapTlsMvplsMgmtMsti,
       "sapTlsMacMoveNextUpTime": sapTlsMacMoveNextUpTime,
       "sapTlsMacMoveRateExcdLeft": sapTlsMacMoveRateExcdLeft,
       "sapTlsRestProtSrcMacAction": sapTlsRestProtSrcMacAction,
       "sapTlsL2ptForceBoundary": sapTlsL2ptForceBoundary,
       "sapTlsLimitMacMoveLevel": sapTlsLimitMacMoveLevel,
       "sapTlsBpduTransOper": sapTlsBpduTransOper,
       "sapTlsDefMsapPolicy": sapTlsDefMsapPolicy,
       "sapTlsL2ptProtocols": sapTlsL2ptProtocols,
       "sapTlsL2ptForceProtocols": sapTlsL2ptForceProtocols,
       "sapTlsPppoeMsapTrigger": sapTlsPppoeMsapTrigger,
       "sapTlsDhcpMsapTrigger": sapTlsDhcpMsapTrigger,
       "sapTlsMrpJoinTime": sapTlsMrpJoinTime,
       "sapTlsMrpLeaveTime": sapTlsMrpLeaveTime,
       "sapTlsMrpLeaveAllTime": sapTlsMrpLeaveAllTime,
       "sapTlsMrpPeriodicTime": sapTlsMrpPeriodicTime,
       "sapTlsMrpPeriodicEnabled": sapTlsMrpPeriodicEnabled,
       "sapTlsPppoePolicy": sapTlsPppoePolicy,
       "sapTlsArpMsapTrigger": sapTlsArpMsapTrigger,
       "sapTlsDefMsapService": sapTlsDefMsapService,
       "sapTlsDefMsapGroupIf": sapTlsDefMsapGroupIf,
       "sapTlsMrpPolicy": sapTlsMrpPolicy,
       "sapTlsSiteName": sapTlsSiteName,
       "sapTlsDhcp6MsapTrigger": sapTlsDhcp6MsapTrigger,
       "sapTlsShcvRetryTimeout": sapTlsShcvRetryTimeout,
       "sapTlsShcvRetryCount": sapTlsShcvRetryCount,
       "sapTlsDataSapInstStatus": sapTlsDataSapInstStatus,
       "sapTlsDataSapInstLastErr": sapTlsDataSapInstLastErr,
       "sapTlsMvrpAdminStatus": sapTlsMvrpAdminStatus,
       "sapTlsMvrpOperStatus": sapTlsMvrpOperStatus,
       "sapTlsInTcBitBpdus": sapTlsInTcBitBpdus,
       "sapTlsOutTcBitBpdus": sapTlsOutTcBitBpdus,
       "sapTlsPppMsapTrigger": sapTlsPppMsapTrigger,
       "sapTlsPppPolicy": sapTlsPppPolicy,
       "sapTlsTrackSrrpInst": sapTlsTrackSrrpInst,
       "sapTlsPppUserDb": sapTlsPppUserDb,
       "sapTlsPppoeUserDb": sapTlsPppoeUserDb,
       "sapTlsDhcpUserDb": sapTlsDhcpUserDb,
       "sapTlsAutoLearnMacProtect": sapTlsAutoLearnMacProtect,
       "sapTlsDhcp6UserDb": sapTlsDhcp6UserDb,
       "sapTlsShcvPolicyIpv4": sapTlsShcvPolicyIpv4,
       "sapTlsDataMsapTrigger": sapTlsDataMsapTrigger,
       "sapTlsRestProtSrcMacOper": sapTlsRestProtSrcMacOper,
       "sapTlsRestProtSrcMacOperAct": sapTlsRestProtSrcMacOperAct,
       "sapTlsLastMgmtChange": sapTlsLastMgmtChange,
       "sapAtmInfoTable": sapAtmInfoTable,
       "sapAtmInfoEntry": sapAtmInfoEntry,
       "sapAtmEncapsulation": sapAtmEncapsulation,
       "sapAtmIngressTrafficDescIndex": sapAtmIngressTrafficDescIndex,
       "sapAtmEgressTrafficDescIndex": sapAtmEgressTrafficDescIndex,
       "sapAtmOamAlarmCellHandling": sapAtmOamAlarmCellHandling,
       "sapAtmOamTerminate": sapAtmOamTerminate,
       "sapAtmOamPeriodicLoopback": sapAtmOamPeriodicLoopback,
       "sapAtmLLFAdminStatus": sapAtmLLFAdminStatus,
       "sapAtmLLFOperStatus": sapAtmLLFOperStatus,
       "sapAtmSubPppIndex": sapAtmSubPppIndex,
       "sapAtmDetectedEncapsulation": sapAtmDetectedEncapsulation,
       "sapAtmIngressTrafficDescIndexOvr": sapAtmIngressTrafficDescIndexOvr,
       "sapAtmEgressTrafficDescIndexOvr": sapAtmEgressTrafficDescIndexOvr,
       "sapBaseStatsTable": sapBaseStatsTable,
       "sapBaseStatsEntry": sapBaseStatsEntry,
       "sapBaseStatsIngressPchipDroppedPackets": sapBaseStatsIngressPchipDroppedPackets,
       "sapBaseStatsIngressPchipDroppedOctets": sapBaseStatsIngressPchipDroppedOctets,
       "sapBaseStatsIngressPchipOfferedHiPrioPackets": sapBaseStatsIngressPchipOfferedHiPrioPackets,
       "sapBaseStatsIngressPchipOfferedHiPrioOctets": sapBaseStatsIngressPchipOfferedHiPrioOctets,
       "sapBaseStatsIngressPchipOfferedLoPrioPackets": sapBaseStatsIngressPchipOfferedLoPrioPackets,
       "sapBaseStatsIngressPchipOfferedLoPrioOctets": sapBaseStatsIngressPchipOfferedLoPrioOctets,
       "sapBaseStatsIngressQchipDroppedHiPrioPackets": sapBaseStatsIngressQchipDroppedHiPrioPackets,
       "sapBaseStatsIngressQchipDroppedHiPrioOctets": sapBaseStatsIngressQchipDroppedHiPrioOctets,
       "sapBaseStatsIngressQchipDroppedLoPrioPackets": sapBaseStatsIngressQchipDroppedLoPrioPackets,
       "sapBaseStatsIngressQchipDroppedLoPrioOctets": sapBaseStatsIngressQchipDroppedLoPrioOctets,
       "sapBaseStatsIngressQchipForwardedInProfPackets": sapBaseStatsIngressQchipForwardedInProfPackets,
       "sapBaseStatsIngressQchipForwardedInProfOctets": sapBaseStatsIngressQchipForwardedInProfOctets,
       "sapBaseStatsIngressQchipForwardedOutProfPackets": sapBaseStatsIngressQchipForwardedOutProfPackets,
       "sapBaseStatsIngressQchipForwardedOutProfOctets": sapBaseStatsIngressQchipForwardedOutProfOctets,
       "sapBaseStatsEgressQchipDroppedInProfPackets": sapBaseStatsEgressQchipDroppedInProfPackets,
       "sapBaseStatsEgressQchipDroppedInProfOctets": sapBaseStatsEgressQchipDroppedInProfOctets,
       "sapBaseStatsEgressQchipDroppedOutProfPackets": sapBaseStatsEgressQchipDroppedOutProfPackets,
       "sapBaseStatsEgressQchipDroppedOutProfOctets": sapBaseStatsEgressQchipDroppedOutProfOctets,
       "sapBaseStatsEgressQchipForwardedInProfPackets": sapBaseStatsEgressQchipForwardedInProfPackets,
       "sapBaseStatsEgressQchipForwardedInProfOctets": sapBaseStatsEgressQchipForwardedInProfOctets,
       "sapBaseStatsEgressQchipForwardedOutProfPackets": sapBaseStatsEgressQchipForwardedOutProfPackets,
       "sapBaseStatsEgressQchipForwardedOutProfOctets": sapBaseStatsEgressQchipForwardedOutProfOctets,
       "sapBaseStatsCustId": sapBaseStatsCustId,
       "sapBaseStatsIngressPchipOfferedUncoloredPackets": sapBaseStatsIngressPchipOfferedUncoloredPackets,
       "sapBaseStatsIngressPchipOfferedUncoloredOctets": sapBaseStatsIngressPchipOfferedUncoloredOctets,
       "sapBaseStatsAuthenticationPktsDiscarded": sapBaseStatsAuthenticationPktsDiscarded,
       "sapBaseStatsAuthenticationPktsSuccess": sapBaseStatsAuthenticationPktsSuccess,
       "sapBaseStatsLastClearedTime": sapBaseStatsLastClearedTime,
       "sapBaseStatsIngressCPMPackets": sapBaseStatsIngressCPMPackets,
       "sapBaseStatsIngressCPMPacketsHi": sapBaseStatsIngressCPMPacketsHi,
       "sapBaseStatsIngressCPMPacketsLo": sapBaseStatsIngressCPMPacketsLo,
       "sapBaseStatsIngressCPMOctets": sapBaseStatsIngressCPMOctets,
       "sapBaseStatsIngressCPMOctetsHi": sapBaseStatsIngressCPMOctetsHi,
       "sapBaseStatsIngressCPMOctetsLo": sapBaseStatsIngressCPMOctetsLo,
       "sapBaseStatsIngPchipRcvdValidPkt": sapBaseStatsIngPchipRcvdValidPkt,
       "sapBaseStatsIngPchipRcvdValidOct": sapBaseStatsIngPchipRcvdValidOct,
       "sapBaseStatsIngAggregateOffPkts": sapBaseStatsIngAggregateOffPkts,
       "sapBaseStatsIngAggregateOffOcts": sapBaseStatsIngAggregateOffOcts,
       "sapBaseStatsIngAggregateFwdPkts": sapBaseStatsIngAggregateFwdPkts,
       "sapBaseStatsIngAggregateFwdOcts": sapBaseStatsIngAggregateFwdOcts,
       "sapBaseStatsEgrAggregateFwdPkts": sapBaseStatsEgrAggregateFwdPkts,
       "sapBaseStatsEgrAggregateFwdOcts": sapBaseStatsEgrAggregateFwdOcts,
       "sapBaseStatsIngAggregateDropPkts": sapBaseStatsIngAggregateDropPkts,
       "sapBaseStatsIngAggregateDropOcts": sapBaseStatsIngAggregateDropOcts,
       "sapBaseStatsEgrAggregateDropPkts": sapBaseStatsEgrAggregateDropPkts,
       "sapBaseStatsEgrAggregateDropOcts": sapBaseStatsEgrAggregateDropOcts,
       "sapIngQosQueueStatsTable": sapIngQosQueueStatsTable,
       "sapIngQosQueueStatsEntry": sapIngQosQueueStatsEntry,
       "sapIngQosQueueId": sapIngQosQueueId,
       "sapIngQosQueueStatsOfferedHiPrioPackets": sapIngQosQueueStatsOfferedHiPrioPackets,
       "sapIngQosQueueStatsDroppedHiPrioPackets": sapIngQosQueueStatsDroppedHiPrioPackets,
       "sapIngQosQueueStatsOfferedLoPrioPackets": sapIngQosQueueStatsOfferedLoPrioPackets,
       "sapIngQosQueueStatsDroppedLoPrioPackets": sapIngQosQueueStatsDroppedLoPrioPackets,
       "sapIngQosQueueStatsOfferedHiPrioOctets": sapIngQosQueueStatsOfferedHiPrioOctets,
       "sapIngQosQueueStatsDroppedHiPrioOctets": sapIngQosQueueStatsDroppedHiPrioOctets,
       "sapIngQosQueueStatsOfferedLoPrioOctets": sapIngQosQueueStatsOfferedLoPrioOctets,
       "sapIngQosQueueStatsDroppedLoPrioOctets": sapIngQosQueueStatsDroppedLoPrioOctets,
       "sapIngQosQueueStatsForwardedInProfPackets": sapIngQosQueueStatsForwardedInProfPackets,
       "sapIngQosQueueStatsForwardedOutProfPackets": sapIngQosQueueStatsForwardedOutProfPackets,
       "sapIngQosQueueStatsForwardedInProfOctets": sapIngQosQueueStatsForwardedInProfOctets,
       "sapIngQosQueueStatsForwardedOutProfOctets": sapIngQosQueueStatsForwardedOutProfOctets,
       "sapIngQosCustId": sapIngQosCustId,
       "sapIngQosQueueStatsUncoloredPacketsOffered": sapIngQosQueueStatsUncoloredPacketsOffered,
       "sapIngQosQueueStatsUncoloredOctetsOffered": sapIngQosQueueStatsUncoloredOctetsOffered,
       "sapEgrQosQueueStatsTable": sapEgrQosQueueStatsTable,
       "sapEgrQosQueueStatsEntry": sapEgrQosQueueStatsEntry,
       "sapEgrQosQueueId": sapEgrQosQueueId,
       "sapEgrQosQueueStatsForwardedInProfPackets": sapEgrQosQueueStatsForwardedInProfPackets,
       "sapEgrQosQueueStatsDroppedInProfPackets": sapEgrQosQueueStatsDroppedInProfPackets,
       "sapEgrQosQueueStatsForwardedOutProfPackets": sapEgrQosQueueStatsForwardedOutProfPackets,
       "sapEgrQosQueueStatsDroppedOutProfPackets": sapEgrQosQueueStatsDroppedOutProfPackets,
       "sapEgrQosQueueStatsForwardedInProfOctets": sapEgrQosQueueStatsForwardedInProfOctets,
       "sapEgrQosQueueStatsDroppedInProfOctets": sapEgrQosQueueStatsDroppedInProfOctets,
       "sapEgrQosQueueStatsForwardedOutProfOctets": sapEgrQosQueueStatsForwardedOutProfOctets,
       "sapEgrQosQueueStatsDroppedOutProfOctets": sapEgrQosQueueStatsDroppedOutProfOctets,
       "sapEgrQosCustId": sapEgrQosCustId,
       "sapEgrQosQStatsFwdExdProfPkts": sapEgrQosQStatsFwdExdProfPkts,
       "sapEgrQosQStatsDrpExdProfPkts": sapEgrQosQStatsDrpExdProfPkts,
       "sapEgrQosQStatsFwdExdProfOcts": sapEgrQosQStatsFwdExdProfOcts,
       "sapEgrQosQStatsDrpExdProfOcts": sapEgrQosQStatsDrpExdProfOcts,
       "sapEgrQosQStatsFwdInPlusProfPkts": sapEgrQosQStatsFwdInPlusProfPkts,
       "sapEgrQosQStatsDrpInPlusProfPkts": sapEgrQosQStatsDrpInPlusProfPkts,
       "sapEgrQosQStatsFwdInPlusProfOcts": sapEgrQosQStatsFwdInPlusProfOcts,
       "sapEgrQosQStatsDrpInPlusProfOcts": sapEgrQosQStatsDrpInPlusProfOcts,
       "sapEgrQosQStatsFwdPkts": sapEgrQosQStatsFwdPkts,
       "sapEgrQosQStatsDrpPkts": sapEgrQosQStatsDrpPkts,
       "sapEgrQosQStatsFwdOcts": sapEgrQosQStatsFwdOcts,
       "sapEgrQosQStatsDrpOcts": sapEgrQosQStatsDrpOcts,
       "sapIngQosSchedStatsTable": sapIngQosSchedStatsTable,
       "sapIngQosSchedStatsEntry": sapIngQosSchedStatsEntry,
       "sapIngQosSchedName": sapIngQosSchedName,
       "sapIngQosSchedStatsForwardedPackets": sapIngQosSchedStatsForwardedPackets,
       "sapIngQosSchedStatsForwardedOctets": sapIngQosSchedStatsForwardedOctets,
       "sapIngQosSchedCustId": sapIngQosSchedCustId,
       "sapEgrQosSchedStatsTable": sapEgrQosSchedStatsTable,
       "sapEgrQosSchedStatsEntry": sapEgrQosSchedStatsEntry,
       "sapEgrQosSchedName": sapEgrQosSchedName,
       "sapEgrQosSchedStatsForwardedPackets": sapEgrQosSchedStatsForwardedPackets,
       "sapEgrQosSchedStatsForwardedOctets": sapEgrQosSchedStatsForwardedOctets,
       "sapEgrQosSchedCustId": sapEgrQosSchedCustId,
       "sapTlsManagedVlanListTable": sapTlsManagedVlanListTable,
       "sapTlsManagedVlanListEntry": sapTlsManagedVlanListEntry,
       "sapTlsMvplsMinVlanTag": sapTlsMvplsMinVlanTag,
       "sapTlsMvplsMaxVlanTag": sapTlsMvplsMaxVlanTag,
       "sapTlsMvplsRowStatus": sapTlsMvplsRowStatus,
       "sapAntiSpoofTable": sapAntiSpoofTable,
       "sapAntiSpoofEntry": sapAntiSpoofEntry,
       "sapAntiSpoofIpAddress": sapAntiSpoofIpAddress,
       "sapAntiSpoofMacAddress": sapAntiSpoofMacAddress,
       "sapStaticHostTable": sapStaticHostTable,
       "sapStaticHostEntry": sapStaticHostEntry,
       "sapStaticHostRowStatus": sapStaticHostRowStatus,
       "sapStaticHostIpAddress": sapStaticHostIpAddress,
       "sapStaticHostMacAddress": sapStaticHostMacAddress,
       "sapStaticHostSubscrIdent": sapStaticHostSubscrIdent,
       "sapStaticHostSubProfile": sapStaticHostSubProfile,
       "sapStaticHostSlaProfile": sapStaticHostSlaProfile,
       "sapStaticHostShcvOperState": sapStaticHostShcvOperState,
       "sapStaticHostShcvChecks": sapStaticHostShcvChecks,
       "sapStaticHostShcvReplies": sapStaticHostShcvReplies,
       "sapStaticHostShcvReplyTime": sapStaticHostShcvReplyTime,
       "sapStaticHostDynMacAddress": sapStaticHostDynMacAddress,
       "sapStaticHostRetailerSvcId": sapStaticHostRetailerSvcId,
       "sapStaticHostRetailerIf": sapStaticHostRetailerIf,
       "sapStaticHostFwdingState": sapStaticHostFwdingState,
       "sapStaticHostAncpString": sapStaticHostAncpString,
       "sapStaticHostSubIdIsSapId": sapStaticHostSubIdIsSapId,
       "sapStaticHostAppProfile": sapStaticHostAppProfile,
       "sapStaticHostIntermediateDestId": sapStaticHostIntermediateDestId,
       "sapStaticHostAdminStatus": sapStaticHostAdminStatus,
       "sapStaticHostFilterProfile": sapStaticHostFilterProfile,
       "sapStaticHostAdminRetailSvcId": sapStaticHostAdminRetailSvcId,
       "sapStaticHostRipPolicy": sapStaticHostRipPolicy,
       "sapStatHostAppProfileScope": sapStatHostAppProfileScope,
       "sapTlsDhcpInfoTable": sapTlsDhcpInfoTable,
       "sapTlsDhcpInfoEntry": sapTlsDhcpInfoEntry,
       "sapTlsDhcpAdminState": sapTlsDhcpAdminState,
       "sapTlsDhcpDescription": sapTlsDhcpDescription,
       "sapTlsDhcpSnoop": sapTlsDhcpSnoop,
       "sapTlsDhcpLeasePopulate": sapTlsDhcpLeasePopulate,
       "sapTlsDhcpOperLeasePopulate": sapTlsDhcpOperLeasePopulate,
       "sapTlsDhcpInfoAction": sapTlsDhcpInfoAction,
       "sapTlsDhcpCircuitId": sapTlsDhcpCircuitId,
       "sapTlsDhcpRemoteId": sapTlsDhcpRemoteId,
       "sapTlsDhcpRemoteIdString": sapTlsDhcpRemoteIdString,
       "sapTlsDhcpProxyAdminState": sapTlsDhcpProxyAdminState,
       "sapTlsDhcpProxyServerAddr": sapTlsDhcpProxyServerAddr,
       "sapTlsDhcpProxyLeaseTime": sapTlsDhcpProxyLeaseTime,
       "sapTlsDhcpProxyLTRadiusOverride": sapTlsDhcpProxyLTRadiusOverride,
       "sapTlsDhcpVendorIncludeOptions": sapTlsDhcpVendorIncludeOptions,
       "sapTlsDhcpVendorOptionString": sapTlsDhcpVendorOptionString,
       "sapTlsDhcpRemoteIdHex": sapTlsDhcpRemoteIdHex,
       "sapTlsDhcpCircuitIdHex": sapTlsDhcpCircuitIdHex,
       "sapTlsDhcpStatsTable": sapTlsDhcpStatsTable,
       "sapTlsDhcpStatsEntry": sapTlsDhcpStatsEntry,
       "sapTlsDhcpStatsClntSnoopdPckts": sapTlsDhcpStatsClntSnoopdPckts,
       "sapTlsDhcpStatsSrvrSnoopdPckts": sapTlsDhcpStatsSrvrSnoopdPckts,
       "sapTlsDhcpStatsClntForwdPckts": sapTlsDhcpStatsClntForwdPckts,
       "sapTlsDhcpStatsSrvrForwdPckts": sapTlsDhcpStatsSrvrForwdPckts,
       "sapTlsDhcpStatsClntDropdPckts": sapTlsDhcpStatsClntDropdPckts,
       "sapTlsDhcpStatsSrvrDropdPckts": sapTlsDhcpStatsSrvrDropdPckts,
       "sapTlsDhcpStatsClntProxRadPckts": sapTlsDhcpStatsClntProxRadPckts,
       "sapTlsDhcpStatsClntProxLSPckts": sapTlsDhcpStatsClntProxLSPckts,
       "sapTlsDhcpStatsGenReleasePckts": sapTlsDhcpStatsGenReleasePckts,
       "sapTlsDhcpStatsGenForceRenPckts": sapTlsDhcpStatsGenForceRenPckts,
       "sapTlsDhcpStatsClntProxUDBPckts": sapTlsDhcpStatsClntProxUDBPckts,
       "sapTlsDhcpStatsClntProxNqPckts": sapTlsDhcpStatsClntProxNqPckts,
       "sapTlsDhcpLeaseStateTable": sapTlsDhcpLeaseStateTable,
       "sapTlsDhcpLeaseStateEntry": sapTlsDhcpLeaseStateEntry,
       "sapTlsDhcpLseStateCiAddr": sapTlsDhcpLseStateCiAddr,
       "sapTlsDhcpLseStateChAddr": sapTlsDhcpLseStateChAddr,
       "sapTlsDhcpLseStateRemainLseTime": sapTlsDhcpLseStateRemainLseTime,
       "sapTlsDhcpLseStateOption82": sapTlsDhcpLseStateOption82,
       "sapTlsDhcpLseStatePersistKey": sapTlsDhcpLseStatePersistKey,
       "sapPortIdIngQosSchedStatsTable": sapPortIdIngQosSchedStatsTable,
       "sapPortIdIngQosSchedStatsEntry": sapPortIdIngQosSchedStatsEntry,
       "sapPortIdIngQosSchedName": sapPortIdIngQosSchedName,
       "sapPortIdIngPortId": sapPortIdIngPortId,
       "sapPortIdIngQosSchedFwdPkts": sapPortIdIngQosSchedFwdPkts,
       "sapPortIdIngQosSchedFwdOctets": sapPortIdIngQosSchedFwdOctets,
       "sapPortIdIngQosSchedCustId": sapPortIdIngQosSchedCustId,
       "sapPortIdEgrQosSchedStatsTable": sapPortIdEgrQosSchedStatsTable,
       "sapPortIdEgrQosSchedStatsEntry": sapPortIdEgrQosSchedStatsEntry,
       "sapPortIdEgrQosSchedName": sapPortIdEgrQosSchedName,
       "sapPortIdEgrPortId": sapPortIdEgrPortId,
       "sapPortIdEgrQosSchedFwdPkts": sapPortIdEgrQosSchedFwdPkts,
       "sapPortIdEgrQosSchedFwdOctets": sapPortIdEgrQosSchedFwdOctets,
       "sapPortIdEgrQosSchedCustId": sapPortIdEgrQosSchedCustId,
       "sapIngQosQueueInfoTable": sapIngQosQueueInfoTable,
       "sapIngQosQueueInfoEntry": sapIngQosQueueInfoEntry,
       "sapIngQosQId": sapIngQosQId,
       "sapIngQosQRowStatus": sapIngQosQRowStatus,
       "sapIngQosQLastMgmtChange": sapIngQosQLastMgmtChange,
       "sapIngQosQOverrideFlags": sapIngQosQOverrideFlags,
       "sapIngQosQCBS": sapIngQosQCBS,
       "sapIngQosQMBS": sapIngQosQMBS,
       "sapIngQosQHiPrioOnly": sapIngQosQHiPrioOnly,
       "sapIngQosQCIRAdaptation": sapIngQosQCIRAdaptation,
       "sapIngQosQPIRAdaptation": sapIngQosQPIRAdaptation,
       "sapIngQosQAdminPIR": sapIngQosQAdminPIR,
       "sapIngQosQAdminCIR": sapIngQosQAdminCIR,
       "sapIngQosQMBSBytes": sapIngQosQMBSBytes,
       "sapIngQosQWeight": sapIngQosQWeight,
       "sapIngQosQCIRWeight": sapIngQosQCIRWeight,
       "sapIngQosQAdminPIRPercent": sapIngQosQAdminPIRPercent,
       "sapIngQosQAdminCIRPercent": sapIngQosQAdminCIRPercent,
       "sapIngQosQMonitorDepth": sapIngQosQMonitorDepth,
       "sapIngQosQDrpTailLowReductnMbs": sapIngQosQDrpTailLowReductnMbs,
       "sapIngQosQAdminPIRHi": sapIngQosQAdminPIRHi,
       "sapIngQosQAdminPIRLo": sapIngQosQAdminPIRLo,
       "sapIngQosQAdminCIRHi": sapIngQosQAdminCIRHi,
       "sapIngQosQAdminCIRLo": sapIngQosQAdminCIRLo,
       "sapIngQosQMonitorQueueDepth": sapIngQosQMonitorQueueDepth,
       "sapIngQosQFastPolling": sapIngQosQFastPolling,
       "sapEgrQosQueueInfoTable": sapEgrQosQueueInfoTable,
       "sapEgrQosQueueInfoEntry": sapEgrQosQueueInfoEntry,
       "sapEgrQosQId": sapEgrQosQId,
       "sapEgrQosQRowStatus": sapEgrQosQRowStatus,
       "sapEgrQosQLastMgmtChange": sapEgrQosQLastMgmtChange,
       "sapEgrQosQOverrideFlags": sapEgrQosQOverrideFlags,
       "sapEgrQosQCBS": sapEgrQosQCBS,
       "sapEgrQosQMBS": sapEgrQosQMBS,
       "sapEgrQosQHiPrioOnly": sapEgrQosQHiPrioOnly,
       "sapEgrQosQCIRAdaptation": sapEgrQosQCIRAdaptation,
       "sapEgrQosQPIRAdaptation": sapEgrQosQPIRAdaptation,
       "sapEgrQosQAdminPIR": sapEgrQosQAdminPIR,
       "sapEgrQosQAdminCIR": sapEgrQosQAdminCIR,
       "sapEgrQosQAvgOverhead": sapEgrQosQAvgOverhead,
       "sapEgrQosQMBSBytes": sapEgrQosQMBSBytes,
       "sapEgrQosQWeight": sapEgrQosQWeight,
       "sapEgrQosQCIRWeight": sapEgrQosQCIRWeight,
       "sapEgrQosQAdminPIRPercent": sapEgrQosQAdminPIRPercent,
       "sapEgrQosQAdminCIRPercent": sapEgrQosQAdminCIRPercent,
       "sapEgrQosQMonitorDepth": sapEgrQosQMonitorDepth,
       "sapEgrQosQDrpTailLowReductnMbs": sapEgrQosQDrpTailLowReductnMbs,
       "sapEgrQosQAdminPIRHi": sapEgrQosQAdminPIRHi,
       "sapEgrQosQAdminPIRLo": sapEgrQosQAdminPIRLo,
       "sapEgrQosQAdminCIRHi": sapEgrQosQAdminCIRHi,
       "sapEgrQosQAdminCIRLo": sapEgrQosQAdminCIRLo,
       "sapEgrQosQHsWrrWeight": sapEgrQosQHsWrrWeight,
       "sapEgrQosQHsClassWeight": sapEgrQosQHsClassWeight,
       "sapEgrQosQHsWredQSlopePlcy": sapEgrQosQHsWredQSlopePlcy,
       "sapEgrQosQBurstLimit": sapEgrQosQBurstLimit,
       "sapEgrQosQMonitorQueueDepth": sapEgrQosQMonitorQueueDepth,
       "sapEgrQosQFastPolling": sapEgrQosQFastPolling,
       "sapEgrQosQViolationThreshold": sapEgrQosQViolationThreshold,
       "sapIngQosSchedInfoTable": sapIngQosSchedInfoTable,
       "sapIngQosSchedInfoEntry": sapIngQosSchedInfoEntry,
       "sapIngQosSName": sapIngQosSName,
       "sapIngQosSRowStatus": sapIngQosSRowStatus,
       "sapIngQosSLastMgmtChange": sapIngQosSLastMgmtChange,
       "sapIngQosSOverrideFlags": sapIngQosSOverrideFlags,
       "sapIngQosSPIR": sapIngQosSPIR,
       "sapIngQosSCIR": sapIngQosSCIR,
       "sapIngQosSSummedCIR": sapIngQosSSummedCIR,
       "sapIngQosSPIRHi": sapIngQosSPIRHi,
       "sapIngQosSPIRLo": sapIngQosSPIRLo,
       "sapIngQosSCIRHi": sapIngQosSCIRHi,
       "sapIngQosSCIRLo": sapIngQosSCIRLo,
       "sapIngQosSParentWeight": sapIngQosSParentWeight,
       "sapIngQosSParentCIRWeight": sapIngQosSParentCIRWeight,
       "sapEgrQosSchedInfoTable": sapEgrQosSchedInfoTable,
       "sapEgrQosSchedInfoEntry": sapEgrQosSchedInfoEntry,
       "sapEgrQosSName": sapEgrQosSName,
       "sapEgrQosSRowStatus": sapEgrQosSRowStatus,
       "sapEgrQosSLastMgmtChange": sapEgrQosSLastMgmtChange,
       "sapEgrQosSOverrideFlags": sapEgrQosSOverrideFlags,
       "sapEgrQosSPIR": sapEgrQosSPIR,
       "sapEgrQosSCIR": sapEgrQosSCIR,
       "sapEgrQosSSummedCIR": sapEgrQosSSummedCIR,
       "sapEgrQosSPIRHi": sapEgrQosSPIRHi,
       "sapEgrQosSPIRLo": sapEgrQosSPIRLo,
       "sapEgrQosSCIRHi": sapEgrQosSCIRHi,
       "sapEgrQosSCIRLo": sapEgrQosSCIRLo,
       "sapEgrQosSParentWeight": sapEgrQosSParentWeight,
       "sapEgrQosSParentCIRWeight": sapEgrQosSParentCIRWeight,
       "sapSubMgmtInfoTable": sapSubMgmtInfoTable,
       "sapSubMgmtInfoEntry": sapSubMgmtInfoEntry,
       "sapSubMgmtAdminStatus": sapSubMgmtAdminStatus,
       "sapSubMgmtDefSubProfile": sapSubMgmtDefSubProfile,
       "sapSubMgmtDefSlaProfile": sapSubMgmtDefSlaProfile,
       "sapSubMgmtSubIdentPolicy": sapSubMgmtSubIdentPolicy,
       "sapSubMgmtSubscriberLimit": sapSubMgmtSubscriberLimit,
       "sapSubMgmtProfiledTrafficOnly": sapSubMgmtProfiledTrafficOnly,
       "sapSubMgmtNonSubTrafficSubIdent": sapSubMgmtNonSubTrafficSubIdent,
       "sapSubMgmtNonSubTrafficSubProf": sapSubMgmtNonSubTrafficSubProf,
       "sapSubMgmtNonSubTrafficSlaProf": sapSubMgmtNonSubTrafficSlaProf,
       "sapSubMgmtMacDaHashing": sapSubMgmtMacDaHashing,
       "sapSubMgmtDefSubIdent": sapSubMgmtDefSubIdent,
       "sapSubMgmtDefSubIdentString": sapSubMgmtDefSubIdentString,
       "sapSubMgmtDefAppProfile": sapSubMgmtDefAppProfile,
       "sapSubMgmtNonSubTrafficAppProf": sapSubMgmtNonSubTrafficAppProf,
       "sapSubMgmtDefInterDestId": sapSubMgmtDefInterDestId,
       "sapSubMgmtDefInterDestIdString": sapSubMgmtDefInterDestIdString,
       "sapSubMgmtDefFilterProfile": sapSubMgmtDefFilterProfile,
       "sapTlsMstiTable": sapTlsMstiTable,
       "sapTlsMstiEntry": sapTlsMstiEntry,
       "sapTlsMstiPriority": sapTlsMstiPriority,
       "sapTlsMstiPathCost": sapTlsMstiPathCost,
       "sapTlsMstiLastMgmtChange": sapTlsMstiLastMgmtChange,
       "sapTlsMstiPortRole": sapTlsMstiPortRole,
       "sapTlsMstiPortState": sapTlsMstiPortState,
       "sapTlsMstiDesignatedBridge": sapTlsMstiDesignatedBridge,
       "sapTlsMstiDesignatedPort": sapTlsMstiDesignatedPort,
       "sapIpipeInfoTable": sapIpipeInfoTable,
       "sapIpipeInfoEntry": sapIpipeInfoEntry,
       "sapIpipeCeInetAddressType": sapIpipeCeInetAddressType,
       "sapIpipeCeInetAddress": sapIpipeCeInetAddress,
       "sapIpipeMacRefreshInterval": sapIpipeMacRefreshInterval,
       "sapIpipeMacAddress": sapIpipeMacAddress,
       "sapIpipeArpedMacAddress": sapIpipeArpedMacAddress,
       "sapIpipeArpedMacAddressTimeout": sapIpipeArpedMacAddressTimeout,
       "sapIpipeDiscoveredCeInetAddrType": sapIpipeDiscoveredCeInetAddrType,
       "sapIpipeDiscoveredCeInetAddr": sapIpipeDiscoveredCeInetAddr,
       "sapIpipeUseBroadcastMac": sapIpipeUseBroadcastMac,
       "sapIpipeUsingBroadcastMac": sapIpipeUsingBroadcastMac,
       "sapIpipeIpv6LinkLocalCeInetAddr": sapIpipeIpv6LinkLocalCeInetAddr,
       "sapIpipeIpv6GlobalCeInetAddr": sapIpipeIpv6GlobalCeInetAddr,
       "sapIpipeIpv6DiscoveredMacAddress": sapIpipeIpv6DiscoveredMacAddress,
       "sapIpipeLegacyFaultNotification": sapIpipeLegacyFaultNotification,
       "sapIpipeRemainRecoveryTimer": sapIpipeRemainRecoveryTimer,
       "sapTodMonitorTable": sapTodMonitorTable,
       "sapTodMonitorEntry": sapTodMonitorEntry,
       "sapCurrentIngressIpFilterId": sapCurrentIngressIpFilterId,
       "sapCurrentIngressIpv6FilterId": sapCurrentIngressIpv6FilterId,
       "sapCurrentIngressMacFilterId": sapCurrentIngressMacFilterId,
       "sapCurrentIngressQosPolicyId": sapCurrentIngressQosPolicyId,
       "sapCurrentIngressQosSchedPlcy": sapCurrentIngressQosSchedPlcy,
       "sapCurrentEgressIpFilterId": sapCurrentEgressIpFilterId,
       "sapCurrentEgressIpv6FilterId": sapCurrentEgressIpv6FilterId,
       "sapCurrentEgressMacFilterId": sapCurrentEgressMacFilterId,
       "sapCurrentEgressQosPolicyId": sapCurrentEgressQosPolicyId,
       "sapCurrentEgressQosSchedPlcy": sapCurrentEgressQosSchedPlcy,
       "sapIntendedIngressIpFilterId": sapIntendedIngressIpFilterId,
       "sapIntendedIngressIpv6FilterId": sapIntendedIngressIpv6FilterId,
       "sapIntendedIngressMacFilterId": sapIntendedIngressMacFilterId,
       "sapIntendedIngressQosPolicyId": sapIntendedIngressQosPolicyId,
       "sapIntendedIngressQosSchedPlcy": sapIntendedIngressQosSchedPlcy,
       "sapIntendedEgressIpFilterId": sapIntendedEgressIpFilterId,
       "sapIntendedEgressIpv6FilterId": sapIntendedEgressIpv6FilterId,
       "sapIntendedEgressMacFilterId": sapIntendedEgressMacFilterId,
       "sapIntendedEgressQosPolicyId": sapIntendedEgressQosPolicyId,
       "sapIntendedEgressQosSchedPlcy": sapIntendedEgressQosSchedPlcy,
       "sapIngrQosPlcyStatsTable": sapIngrQosPlcyStatsTable,
       "sapIngrQosPlcyStatsEntry": sapIngrQosPlcyStatsEntry,
       "sapIgQosPlcyId": sapIgQosPlcyId,
       "sapIgQosPlcyDroppedHiPrioPackets": sapIgQosPlcyDroppedHiPrioPackets,
       "sapIgQosPlcyDroppedHiPrioOctets": sapIgQosPlcyDroppedHiPrioOctets,
       "sapIgQosPlcyDroppedLoPrioPackets": sapIgQosPlcyDroppedLoPrioPackets,
       "sapIgQosPlcyDroppedLoPrioOctets": sapIgQosPlcyDroppedLoPrioOctets,
       "sapIgQosPlcyForwardedInProfPackets": sapIgQosPlcyForwardedInProfPackets,
       "sapIgQosPlcyForwardedInProfOctets": sapIgQosPlcyForwardedInProfOctets,
       "sapIgQosPlcyForwardedOutProfPackets": sapIgQosPlcyForwardedOutProfPackets,
       "sapIgQosPlcyForwardedOutProfOctets": sapIgQosPlcyForwardedOutProfOctets,
       "sapEgrQosPlcyStatsTable": sapEgrQosPlcyStatsTable,
       "sapEgrQosPlcyStatsEntry": sapEgrQosPlcyStatsEntry,
       "sapEgQosPlcyId": sapEgQosPlcyId,
       "sapEgQosPlcyDroppedInProfPackets": sapEgQosPlcyDroppedInProfPackets,
       "sapEgQosPlcyDroppedInProfOctets": sapEgQosPlcyDroppedInProfOctets,
       "sapEgQosPlcyDroppedOutProfPackets": sapEgQosPlcyDroppedOutProfPackets,
       "sapEgQosPlcyDroppedOutProfOctets": sapEgQosPlcyDroppedOutProfOctets,
       "sapEgQosPlcyForwardedInProfPackets": sapEgQosPlcyForwardedInProfPackets,
       "sapEgQosPlcyForwardedInProfOctets": sapEgQosPlcyForwardedInProfOctets,
       "sapEgQosPlcyForwardedOutProfPackets": sapEgQosPlcyForwardedOutProfPackets,
       "sapEgQosPlcyForwardedOutProfOctets": sapEgQosPlcyForwardedOutProfOctets,
       "sapIngQosPlcyQueueStatsTable": sapIngQosPlcyQueueStatsTable,
       "sapIngQosPlcyQueueStatsEntry": sapIngQosPlcyQueueStatsEntry,
       "sapIgQosPlcyQueuePlcyId": sapIgQosPlcyQueuePlcyId,
       "sapIgQosPlcyQueueId": sapIgQosPlcyQueueId,
       "sapIgQosPlcyQueueStatsOfferedHiPrioPackets": sapIgQosPlcyQueueStatsOfferedHiPrioPackets,
       "sapIgQosPlcyQueueStatsDroppedHiPrioPackets": sapIgQosPlcyQueueStatsDroppedHiPrioPackets,
       "sapIgQosPlcyQueueStatsOfferedLoPrioPackets": sapIgQosPlcyQueueStatsOfferedLoPrioPackets,
       "sapIgQosPlcyQueueStatsDroppedLoPrioPackets": sapIgQosPlcyQueueStatsDroppedLoPrioPackets,
       "sapIgQosPlcyQueueStatsOfferedHiPrioOctets": sapIgQosPlcyQueueStatsOfferedHiPrioOctets,
       "sapIgQosPlcyQueueStatsDroppedHiPrioOctets": sapIgQosPlcyQueueStatsDroppedHiPrioOctets,
       "sapIgQosPlcyQueueStatsOfferedLoPrioOctets": sapIgQosPlcyQueueStatsOfferedLoPrioOctets,
       "sapIgQosPlcyQueueStatsDroppedLoPrioOctets": sapIgQosPlcyQueueStatsDroppedLoPrioOctets,
       "sapIgQosPlcyQueueStatsForwardedInProfPackets": sapIgQosPlcyQueueStatsForwardedInProfPackets,
       "sapIgQosPlcyQueueStatsForwardedOutProfPackets": sapIgQosPlcyQueueStatsForwardedOutProfPackets,
       "sapIgQosPlcyQueueStatsForwardedInProfOctets": sapIgQosPlcyQueueStatsForwardedInProfOctets,
       "sapIgQosPlcyQueueStatsForwardedOutProfOctets": sapIgQosPlcyQueueStatsForwardedOutProfOctets,
       "sapIgQosPlcyQueueCustId": sapIgQosPlcyQueueCustId,
       "sapIgQosPlcyQueueStatsUncoloredPacketsOffered": sapIgQosPlcyQueueStatsUncoloredPacketsOffered,
       "sapIgQosPlcyQueueStatsUncoloredOctetsOffered": sapIgQosPlcyQueueStatsUncoloredOctetsOffered,
       "sapEgrQosPlcyQueueStatsTable": sapEgrQosPlcyQueueStatsTable,
       "sapEgrQosPlcyQueueStatsEntry": sapEgrQosPlcyQueueStatsEntry,
       "sapEgQosPlcyQueuePlcyId": sapEgQosPlcyQueuePlcyId,
       "sapEgQosPlcyQueueId": sapEgQosPlcyQueueId,
       "sapEgQosPlcyQueueStatsForwardedInProfPackets": sapEgQosPlcyQueueStatsForwardedInProfPackets,
       "sapEgQosPlcyQueueStatsDroppedInProfPackets": sapEgQosPlcyQueueStatsDroppedInProfPackets,
       "sapEgQosPlcyQueueStatsForwardedOutProfPackets": sapEgQosPlcyQueueStatsForwardedOutProfPackets,
       "sapEgQosPlcyQueueStatsDroppedOutProfPackets": sapEgQosPlcyQueueStatsDroppedOutProfPackets,
       "sapEgQosPlcyQueueStatsForwardedInProfOctets": sapEgQosPlcyQueueStatsForwardedInProfOctets,
       "sapEgQosPlcyQueueStatsDroppedInProfOctets": sapEgQosPlcyQueueStatsDroppedInProfOctets,
       "sapEgQosPlcyQueueStatsForwardedOutProfOctets": sapEgQosPlcyQueueStatsForwardedOutProfOctets,
       "sapEgQosPlcyQueueStatsDroppedOutProfOctets": sapEgQosPlcyQueueStatsDroppedOutProfOctets,
       "sapEgQosPlcyQueueCustId": sapEgQosPlcyQueueCustId,
       "sapDhcpInfoTable": sapDhcpInfoTable,
       "sapDhcpInfoEntry": sapDhcpInfoEntry,
       "sapDhcpOperLeasePopulate": sapDhcpOperLeasePopulate,
       "sapIngSchedPlcyStatsTable": sapIngSchedPlcyStatsTable,
       "sapIngSchedPlcyStatsEntry": sapIngSchedPlcyStatsEntry,
       "sapIngSchedPlcyStatsFwdPkt": sapIngSchedPlcyStatsFwdPkt,
       "sapIngSchedPlcyStatsFwdOct": sapIngSchedPlcyStatsFwdOct,
       "sapEgrSchedPlcyStatsTable": sapEgrSchedPlcyStatsTable,
       "sapEgrSchedPlcyStatsEntry": sapEgrSchedPlcyStatsEntry,
       "sapEgrSchedPlcyStatsFwdPkt": sapEgrSchedPlcyStatsFwdPkt,
       "sapEgrSchedPlcyStatsFwdOct": sapEgrSchedPlcyStatsFwdOct,
       "sapIngSchedPlcyPortStatsTable": sapIngSchedPlcyPortStatsTable,
       "sapIngSchedPlcyPortStatsEntry": sapIngSchedPlcyPortStatsEntry,
       "sapIngSchedPlcyPortStatsPort": sapIngSchedPlcyPortStatsPort,
       "sapIngSchedPlcyPortStatsFwdPkt": sapIngSchedPlcyPortStatsFwdPkt,
       "sapIngSchedPlcyPortStatsFwdOct": sapIngSchedPlcyPortStatsFwdOct,
       "sapEgrSchedPlcyPortStatsTable": sapEgrSchedPlcyPortStatsTable,
       "sapEgrSchedPlcyPortStatsEntry": sapEgrSchedPlcyPortStatsEntry,
       "sapEgrSchedPlcyPortStatsPort": sapEgrSchedPlcyPortStatsPort,
       "sapEgrSchedPlcyPortStatsFwdPkt": sapEgrSchedPlcyPortStatsFwdPkt,
       "sapEgrSchedPlcyPortStatsFwdOct": sapEgrSchedPlcyPortStatsFwdOct,
       "sapCemInfoTable": sapCemInfoTable,
       "sapCemInfoEntry": sapCemInfoEntry,
       "sapCemLastMgmtChange": sapCemLastMgmtChange,
       "sapCemEndpointType": sapCemEndpointType,
       "sapCemBitrate": sapCemBitrate,
       "sapCemCasTrunkFraming": sapCemCasTrunkFraming,
       "sapCemPayloadSize": sapCemPayloadSize,
       "sapCemJitterBuffer": sapCemJitterBuffer,
       "sapCemUseRtpHeader": sapCemUseRtpHeader,
       "sapCemDifferential": sapCemDifferential,
       "sapCemTimestampFreq": sapCemTimestampFreq,
       "sapCemReportAlarm": sapCemReportAlarm,
       "sapCemReportAlarmStatus": sapCemReportAlarmStatus,
       "sapCemLocalEcid": sapCemLocalEcid,
       "sapCemRemoteMacAddr": sapCemRemoteMacAddr,
       "sapCemRemoteEcid": sapCemRemoteEcid,
       "sapCemJitterBufPackets": sapCemJitterBufPackets,
       "sapCemPlayoutBufPacketsThreshold": sapCemPlayoutBufPacketsThreshold,
       "sapCemStatsTable": sapCemStatsTable,
       "sapCemStatsEntry": sapCemStatsEntry,
       "sapCemStatsIngressForwardedPkts": sapCemStatsIngressForwardedPkts,
       "sapCemStatsIngressDroppedPkts": sapCemStatsIngressDroppedPkts,
       "sapCemStatsEgressForwardedPkts": sapCemStatsEgressForwardedPkts,
       "sapCemStatsEgressDroppedPkts": sapCemStatsEgressDroppedPkts,
       "sapCemStatsEgressMissingPkts": sapCemStatsEgressMissingPkts,
       "sapCemStatsEgressPktsReOrder": sapCemStatsEgressPktsReOrder,
       "sapCemStatsEgressJtrBfrUnderruns": sapCemStatsEgressJtrBfrUnderruns,
       "sapCemStatsEgressJtrBfrOverruns": sapCemStatsEgressJtrBfrOverruns,
       "sapCemStatsEgressMisOrderDropped": sapCemStatsEgressMisOrderDropped,
       "sapCemStatsEgressMalformedPkts": sapCemStatsEgressMalformedPkts,
       "sapCemStatsEgressLBitDropped": sapCemStatsEgressLBitDropped,
       "sapCemStatsEgressMultipleDropped": sapCemStatsEgressMultipleDropped,
       "sapCemStatsEgressESs": sapCemStatsEgressESs,
       "sapCemStatsEgressSESs": sapCemStatsEgressSESs,
       "sapCemStatsEgressUASs": sapCemStatsEgressUASs,
       "sapCemStatsEgressFailureCounts": sapCemStatsEgressFailureCounts,
       "sapCemStatsEgressUnderrunCounts": sapCemStatsEgressUnderrunCounts,
       "sapCemStatsEgressOverrunCounts": sapCemStatsEgressOverrunCounts,
       "sapCemStatsEgressJtrBfrDepth": sapCemStatsEgressJtrBfrDepth,
       "sapTlsL2ptStatsTable": sapTlsL2ptStatsTable,
       "sapTlsL2ptStatsEntry": sapTlsL2ptStatsEntry,
       "sapTlsL2ptStatsLastClearedTime": sapTlsL2ptStatsLastClearedTime,
       "sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx": sapTlsL2ptStatsL2ptEncapStpConfigBpdusRx,
       "sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx": sapTlsL2ptStatsL2ptEncapStpConfigBpdusTx,
       "sapTlsL2ptStatsL2ptEncapStpRstBpdusRx": sapTlsL2ptStatsL2ptEncapStpRstBpdusRx,
       "sapTlsL2ptStatsL2ptEncapStpRstBpdusTx": sapTlsL2ptStatsL2ptEncapStpRstBpdusTx,
       "sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx": sapTlsL2ptStatsL2ptEncapStpTcnBpdusRx,
       "sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx": sapTlsL2ptStatsL2ptEncapStpTcnBpdusTx,
       "sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx": sapTlsL2ptStatsL2ptEncapPvstConfigBpdusRx,
       "sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx": sapTlsL2ptStatsL2ptEncapPvstConfigBpdusTx,
       "sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx": sapTlsL2ptStatsL2ptEncapPvstRstBpdusRx,
       "sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx": sapTlsL2ptStatsL2ptEncapPvstRstBpdusTx,
       "sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx": sapTlsL2ptStatsL2ptEncapPvstTcnBpdusRx,
       "sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx": sapTlsL2ptStatsL2ptEncapPvstTcnBpdusTx,
       "sapTlsL2ptStatsStpConfigBpdusRx": sapTlsL2ptStatsStpConfigBpdusRx,
       "sapTlsL2ptStatsStpConfigBpdusTx": sapTlsL2ptStatsStpConfigBpdusTx,
       "sapTlsL2ptStatsStpRstBpdusRx": sapTlsL2ptStatsStpRstBpdusRx,
       "sapTlsL2ptStatsStpRstBpdusTx": sapTlsL2ptStatsStpRstBpdusTx,
       "sapTlsL2ptStatsStpTcnBpdusRx": sapTlsL2ptStatsStpTcnBpdusRx,
       "sapTlsL2ptStatsStpTcnBpdusTx": sapTlsL2ptStatsStpTcnBpdusTx,
       "sapTlsL2ptStatsPvstConfigBpdusRx": sapTlsL2ptStatsPvstConfigBpdusRx,
       "sapTlsL2ptStatsPvstConfigBpdusTx": sapTlsL2ptStatsPvstConfigBpdusTx,
       "sapTlsL2ptStatsPvstRstBpdusRx": sapTlsL2ptStatsPvstRstBpdusRx,
       "sapTlsL2ptStatsPvstRstBpdusTx": sapTlsL2ptStatsPvstRstBpdusTx,
       "sapTlsL2ptStatsPvstTcnBpdusRx": sapTlsL2ptStatsPvstTcnBpdusRx,
       "sapTlsL2ptStatsPvstTcnBpdusTx": sapTlsL2ptStatsPvstTcnBpdusTx,
       "sapTlsL2ptStatsOtherBpdusRx": sapTlsL2ptStatsOtherBpdusRx,
       "sapTlsL2ptStatsOtherBpdusTx": sapTlsL2ptStatsOtherBpdusTx,
       "sapTlsL2ptStatsOtherL2ptBpdusRx": sapTlsL2ptStatsOtherL2ptBpdusRx,
       "sapTlsL2ptStatsOtherL2ptBpdusTx": sapTlsL2ptStatsOtherL2ptBpdusTx,
       "sapTlsL2ptStatsOtherInvalidBpdusRx": sapTlsL2ptStatsOtherInvalidBpdusRx,
       "sapTlsL2ptStatsOtherInvalidBpdusTx": sapTlsL2ptStatsOtherInvalidBpdusTx,
       "sapTlsL2ptStatsL2ptEncapCdpBpdusRx": sapTlsL2ptStatsL2ptEncapCdpBpdusRx,
       "sapTlsL2ptStatsL2ptEncapCdpBpdusTx": sapTlsL2ptStatsL2ptEncapCdpBpdusTx,
       "sapTlsL2ptStatsL2ptEncapVtpBpdusRx": sapTlsL2ptStatsL2ptEncapVtpBpdusRx,
       "sapTlsL2ptStatsL2ptEncapVtpBpdusTx": sapTlsL2ptStatsL2ptEncapVtpBpdusTx,
       "sapTlsL2ptStatsL2ptEncapDtpBpdusRx": sapTlsL2ptStatsL2ptEncapDtpBpdusRx,
       "sapTlsL2ptStatsL2ptEncapDtpBpdusTx": sapTlsL2ptStatsL2ptEncapDtpBpdusTx,
       "sapTlsL2ptStatsL2ptEncapPagpBpdusRx": sapTlsL2ptStatsL2ptEncapPagpBpdusRx,
       "sapTlsL2ptStatsL2ptEncapPagpBpdusTx": sapTlsL2ptStatsL2ptEncapPagpBpdusTx,
       "sapTlsL2ptStatsL2ptEncapUdldBpdusRx": sapTlsL2ptStatsL2ptEncapUdldBpdusRx,
       "sapTlsL2ptStatsL2ptEncapUdldBpdusTx": sapTlsL2ptStatsL2ptEncapUdldBpdusTx,
       "sapTlsL2ptStatsCdpBpdusRx": sapTlsL2ptStatsCdpBpdusRx,
       "sapTlsL2ptStatsCdpBpdusTx": sapTlsL2ptStatsCdpBpdusTx,
       "sapTlsL2ptStatsVtpBpdusRx": sapTlsL2ptStatsVtpBpdusRx,
       "sapTlsL2ptStatsVtpBpdusTx": sapTlsL2ptStatsVtpBpdusTx,
       "sapTlsL2ptStatsDtpBpdusRx": sapTlsL2ptStatsDtpBpdusRx,
       "sapTlsL2ptStatsDtpBpdusTx": sapTlsL2ptStatsDtpBpdusTx,
       "sapTlsL2ptStatsPagpBpdusRx": sapTlsL2ptStatsPagpBpdusRx,
       "sapTlsL2ptStatsPagpBpdusTx": sapTlsL2ptStatsPagpBpdusTx,
       "sapTlsL2ptStatsUdldBpdusRx": sapTlsL2ptStatsUdldBpdusRx,
       "sapTlsL2ptStatsUdldBpdusTx": sapTlsL2ptStatsUdldBpdusTx,
       "sapEthernetInfoTable": sapEthernetInfoTable,
       "sapEthernetInfoEntry": sapEthernetInfoEntry,
       "sapEthernetLLFAdminStatus": sapEthernetLLFAdminStatus,
       "sapEthernetLLFOperStatus": sapEthernetLLFOperStatus,
       "msapPlcyTable": msapPlcyTable,
       "msapPlcyEntry": msapPlcyEntry,
       "msapPlcyName": msapPlcyName,
       "msapPlcyRowStatus": msapPlcyRowStatus,
       "msapPlcyLastChanged": msapPlcyLastChanged,
       "msapPlcyDescription": msapPlcyDescription,
       "msapPlcyCpmProtPolicyId": msapPlcyCpmProtPolicyId,
       "msapPlcyCpmProtMonitorMac": msapPlcyCpmProtMonitorMac,
       "msapPlcySubMgmtDefSubId": msapPlcySubMgmtDefSubId,
       "msapPlcySubMgmtDefSubIdStr": msapPlcySubMgmtDefSubIdStr,
       "msapPlcySubMgmtDefSubProfile": msapPlcySubMgmtDefSubProfile,
       "msapPlcySubMgmtDefSlaProfile": msapPlcySubMgmtDefSlaProfile,
       "msapPlcySubMgmtDefAppProfile": msapPlcySubMgmtDefAppProfile,
       "msapPlcySubMgmtSubIdPlcy": msapPlcySubMgmtSubIdPlcy,
       "msapPlcySubMgmtSubscriberLimit": msapPlcySubMgmtSubscriberLimit,
       "msapPlcySubMgmtProfiledTrafOnly": msapPlcySubMgmtProfiledTrafOnly,
       "msapPlcySubMgmtNonSubTrafSubId": msapPlcySubMgmtNonSubTrafSubId,
       "msapPlcySubMgmtNonSubTrafSubProf": msapPlcySubMgmtNonSubTrafSubProf,
       "msapPlcySubMgmtNonSubTrafSlaProf": msapPlcySubMgmtNonSubTrafSlaProf,
       "msapPlcySubMgmtNonSubTrafAppProf": msapPlcySubMgmtNonSubTrafAppProf,
       "msapPlcyAssociatedMsaps": msapPlcyAssociatedMsaps,
       "msapPlcySubMgmtDefInterDestId": msapPlcySubMgmtDefInterDestId,
       "msapPlcySubMgmtDefInterDestIdStr": msapPlcySubMgmtDefInterDestIdStr,
       "msapPlcyIgmpTrkExpiryTime": msapPlcyIgmpTrkExpiryTime,
       "msapPlcyIgmpTrkImportPlcy": msapPlcyIgmpTrkImportPlcy,
       "msapPlcyIgmpTrkMaxNbrGrps": msapPlcyIgmpTrkMaxNbrGrps,
       "msapPlcyIgmpTrkMaxNbrSrcs": msapPlcyIgmpTrkMaxNbrSrcs,
       "msapPlcySubMgmtDefFilterProfile": msapPlcySubMgmtDefFilterProfile,
       "msapPlcyLagLinkMapProfile": msapPlcyLagLinkMapProfile,
       "msapPlcyIgmpTrkMaxNbrGrpSrcs": msapPlcyIgmpTrkMaxNbrGrpSrcs,
       "msapPlcyDCpuProtPolicy": msapPlcyDCpuProtPolicy,
       "msapPlcyCpmProtMonitorIP": msapPlcyCpmProtMonitorIP,
       "msapPlcySticky": msapPlcySticky,
       "msapPlcyStickyTimeout": msapPlcyStickyTimeout,
       "msapTlsPlcyTable": msapTlsPlcyTable,
       "msapTlsPlcyEntry": msapTlsPlcyEntry,
       "msapTlsPlcyLastChanged": msapTlsPlcyLastChanged,
       "msapTlsPlcySplitHorizonGrp": msapTlsPlcySplitHorizonGrp,
       "msapTlsPlcyArpReplyAgent": msapTlsPlcyArpReplyAgent,
       "msapTlsPlcySubMgmtMacDaHashing": msapTlsPlcySubMgmtMacDaHashing,
       "msapTlsPlcyDhcpLeasePopulate": msapTlsPlcyDhcpLeasePopulate,
       "msapTlsPlcyDhcpPrxyAdminState": msapTlsPlcyDhcpPrxyAdminState,
       "msapTlsPlcyDhcpPrxyServAddrType": msapTlsPlcyDhcpPrxyServAddrType,
       "msapTlsPlcyDhcpPrxyServAddr": msapTlsPlcyDhcpPrxyServAddr,
       "msapTlsPlcyDhcpPrxyLeaseTime": msapTlsPlcyDhcpPrxyLeaseTime,
       "msapTlsPlcyDhcpPrxyLTRadOverride": msapTlsPlcyDhcpPrxyLTRadOverride,
       "msapTlsPlcyDhcpInfoAction": msapTlsPlcyDhcpInfoAction,
       "msapTlsPlcyDhcpCircuitId": msapTlsPlcyDhcpCircuitId,
       "msapTlsPlcyDhcpRemoteId": msapTlsPlcyDhcpRemoteId,
       "msapTlsPlcyDhcpRemoteIdString": msapTlsPlcyDhcpRemoteIdString,
       "msapTlsPlcyDhcpVendorInclOpts": msapTlsPlcyDhcpVendorInclOpts,
       "msapTlsPlcyDhcpVendorOptStr": msapTlsPlcyDhcpVendorOptStr,
       "msapTlsPlcyEgressMcastGroup": msapTlsPlcyEgressMcastGroup,
       "msapTlsPlcyIgmpSnpgImportPlcy": msapTlsPlcyIgmpSnpgImportPlcy,
       "msapTlsPlcyIgmpSnpgFastLeave": msapTlsPlcyIgmpSnpgFastLeave,
       "msapTlsPlcyIgmpSnpgSendQueries": msapTlsPlcyIgmpSnpgSendQueries,
       "msapTlsPlcyIgmpSnpgGenQueryIntv": msapTlsPlcyIgmpSnpgGenQueryIntv,
       "msapTlsPlcyIgmpSnpgQueryRespIntv": msapTlsPlcyIgmpSnpgQueryRespIntv,
       "msapTlsPlcyIgmpSnpgRobustCount": msapTlsPlcyIgmpSnpgRobustCount,
       "msapTlsPlcyIgmpSnpgLastMembIntvl": msapTlsPlcyIgmpSnpgLastMembIntvl,
       "msapTlsPlcyIgmpSnpgMaxNbrGrps": msapTlsPlcyIgmpSnpgMaxNbrGrps,
       "msapTlsPlcyIgmpSnpgMvrFromVplsId": msapTlsPlcyIgmpSnpgMvrFromVplsId,
       "msapTlsPlcyIgmpSnpgVersion": msapTlsPlcyIgmpSnpgVersion,
       "msapTlsPlcyIgmpSnpgMcacPlcyName": msapTlsPlcyIgmpSnpgMcacPlcyName,
       "msapTlsPlcyIgmpSnpgMcacUncnstBW": msapTlsPlcyIgmpSnpgMcacUncnstBW,
       "msapTlsPlcyIgmpSnpgMcacPrRsvMnBW": msapTlsPlcyIgmpSnpgMcacPrRsvMnBW,
       "msapTlsPlcyArpHostMaxNumHosts": msapTlsPlcyArpHostMaxNumHosts,
       "msapTlsPlcyArpHostMinAuthIntvl": msapTlsPlcyArpHostMinAuthIntvl,
       "msapTlsPlcyIgmpSnpgMcacUsePortWt": msapTlsPlcyIgmpSnpgMcacUsePortWt,
       "msapTlsPlcyIngQosPolicyId": msapTlsPlcyIngQosPolicyId,
       "msapTlsPlcyIngQosQueueingType": msapTlsPlcyIngQosQueueingType,
       "msapTlsPlcyIgmpSnpgMcIfPlcyName": msapTlsPlcyIgmpSnpgMcIfPlcyName,
       "msapTlsPlcyEgrQosPolicyId": msapTlsPlcyEgrQosPolicyId,
       "msapIgmpSnpgMcacLevelTable": msapIgmpSnpgMcacLevelTable,
       "msapIgmpSnpgMcacLevelEntry": msapIgmpSnpgMcacLevelEntry,
       "msapIgmpSnpgMcacLevelId": msapIgmpSnpgMcacLevelId,
       "msapIgmpSnpgMcacLevelRowStatus": msapIgmpSnpgMcacLevelRowStatus,
       "msapIgmpSnpgMcacLevelLastChanged": msapIgmpSnpgMcacLevelLastChanged,
       "msapIgmpSnpgMcacLevelBW": msapIgmpSnpgMcacLevelBW,
       "msapIgmpSnpgMcacLagTable": msapIgmpSnpgMcacLagTable,
       "msapIgmpSnpgMcacLagEntry": msapIgmpSnpgMcacLagEntry,
       "msapIgmpSnpgMcacLagPortsDown": msapIgmpSnpgMcacLagPortsDown,
       "msapIgmpSnpgMcacLagRowStatus": msapIgmpSnpgMcacLagRowStatus,
       "msapIgmpSnpgMcacLagLastChanged": msapIgmpSnpgMcacLagLastChanged,
       "msapIgmpSnpgMcacLagLevel": msapIgmpSnpgMcacLagLevel,
       "msapInfoTable": msapInfoTable,
       "msapInfoEntry": msapInfoEntry,
       "msapInfoCreationSapPortEncapVal": msapInfoCreationSapPortEncapVal,
       "msapInfoCreationPlcyName": msapInfoCreationPlcyName,
       "msapInfoReEvalPolicy": msapInfoReEvalPolicy,
       "msapInfoLastChanged": msapInfoLastChanged,
       "msapInfoIsIdle": msapInfoIsIdle,
       "msapInfoIsSticky": msapInfoIsSticky,
       "msapInfoStickyExpiryTime": msapInfoStickyExpiryTime,
       "msapCaptureSapStatsTable": msapCaptureSapStatsTable,
       "msapCaptureSapStatsEntry": msapCaptureSapStatsEntry,
       "msapCaptureSapStatsTriggerType": msapCaptureSapStatsTriggerType,
       "msapCaptureSapStatsPktsRecvd": msapCaptureSapStatsPktsRecvd,
       "msapCaptureSapStatsPktsRedirect": msapCaptureSapStatsPktsRedirect,
       "msapCaptureSapStatsPktsDropped": msapCaptureSapStatsPktsDropped,
       "sapTlsMrpTable": sapTlsMrpTable,
       "sapTlsMrpEntry": sapTlsMrpEntry,
       "sapTlsMrpRxPdus": sapTlsMrpRxPdus,
       "sapTlsMrpDroppedPdus": sapTlsMrpDroppedPdus,
       "sapTlsMrpTxPdus": sapTlsMrpTxPdus,
       "sapTlsMrpRxNewEvent": sapTlsMrpRxNewEvent,
       "sapTlsMrpRxJoinInEvent": sapTlsMrpRxJoinInEvent,
       "sapTlsMrpRxInEvent": sapTlsMrpRxInEvent,
       "sapTlsMrpRxJoinEmptyEvent": sapTlsMrpRxJoinEmptyEvent,
       "sapTlsMrpRxEmptyEvent": sapTlsMrpRxEmptyEvent,
       "sapTlsMrpRxLeaveEvent": sapTlsMrpRxLeaveEvent,
       "sapTlsMrpTxNewEvent": sapTlsMrpTxNewEvent,
       "sapTlsMrpTxJoinInEvent": sapTlsMrpTxJoinInEvent,
       "sapTlsMrpTxInEvent": sapTlsMrpTxInEvent,
       "sapTlsMrpTxJoinEmptyEvent": sapTlsMrpTxJoinEmptyEvent,
       "sapTlsMrpTxEmptyEvent": sapTlsMrpTxEmptyEvent,
       "sapTlsMrpTxLeaveEvent": sapTlsMrpTxLeaveEvent,
       "sapTlsMmrpTable": sapTlsMmrpTable,
       "sapTlsMmrpEntry": sapTlsMmrpEntry,
       "sapTlsMmrpMacAddr": sapTlsMmrpMacAddr,
       "sapTlsMmrpDeclared": sapTlsMmrpDeclared,
       "sapTlsMmrpRegistered": sapTlsMmrpRegistered,
       "sapTlsMmrpEndStation": sapTlsMmrpEndStation,
       "sapIngQosHsmdaQueueTable": sapIngQosHsmdaQueueTable,
       "sapIngQosHsmdaQueueEntry": sapIngQosHsmdaQueueEntry,
       "sapIngQosHsmdaQueueId": sapIngQosHsmdaQueueId,
       "sapIngQosHsmdaQueueRowStatus": sapIngQosHsmdaQueueRowStatus,
       "sapIngQosHsmdaQueueLastChanged": sapIngQosHsmdaQueueLastChanged,
       "sapIngQosHsmdaQueueAdminPIR": sapIngQosHsmdaQueueAdminPIR,
       "sapIngQosHsmdaQueueAdminCIR": sapIngQosHsmdaQueueAdminCIR,
       "sapIngQosHsmdaQueueSlopePolicy": sapIngQosHsmdaQueueSlopePolicy,
       "sapIngQosHsmdaQueueStatsTable": sapIngQosHsmdaQueueStatsTable,
       "sapIngQosHsmdaQueueStatsEntry": sapIngQosHsmdaQueueStatsEntry,
       "sapIngHsmdaQStatCustId": sapIngHsmdaQStatCustId,
       "sapIngHsmdaQStatHiPktsDropped": sapIngHsmdaQStatHiPktsDropped,
       "sapIngHsmdaQStatLoPktsDropped": sapIngHsmdaQStatLoPktsDropped,
       "sapIngHsmdaQStatHiOctsDropped": sapIngHsmdaQStatHiOctsDropped,
       "sapIngHsmdaQStatLoOctsDropped": sapIngHsmdaQStatLoOctsDropped,
       "sapIngHsmdaQStatInProfPktsFwd": sapIngHsmdaQStatInProfPktsFwd,
       "sapIngHsmdaQStatOutProfPktsFwd": sapIngHsmdaQStatOutProfPktsFwd,
       "sapIngHsmdaQStatInProfOctsFwd": sapIngHsmdaQStatInProfOctsFwd,
       "sapIngHsmdaQStatOutProfOctsFwd": sapIngHsmdaQStatOutProfOctsFwd,
       "sapIngHsmdaQStatAllPktsOffered": sapIngHsmdaQStatAllPktsOffered,
       "sapIngHsmdaQStatAllOctsOffered": sapIngHsmdaQStatAllOctsOffered,
       "sapIngQosHsmdaCntrStatsTable": sapIngQosHsmdaCntrStatsTable,
       "sapIngQosHsmdaCntrStatsEntry": sapIngQosHsmdaCntrStatsEntry,
       "sapIngHsmdaCntrStCntrId": sapIngHsmdaCntrStCntrId,
       "sapIngHsmdaCntrStCustId": sapIngHsmdaCntrStCustId,
       "sapIngHsmdaCntrStHiPktDrop": sapIngHsmdaCntrStHiPktDrop,
       "sapIngHsmdaCntrStLoPktDrop": sapIngHsmdaCntrStLoPktDrop,
       "sapIngHsmdaCntrStHiOctDrop": sapIngHsmdaCntrStHiOctDrop,
       "sapIngHsmdaCntrStLoOctDrop": sapIngHsmdaCntrStLoOctDrop,
       "sapIngHsmdaCntrStInProfPktFwd": sapIngHsmdaCntrStInProfPktFwd,
       "sapIngHsmdaCntrStOutProfPktFwd": sapIngHsmdaCntrStOutProfPktFwd,
       "sapIngHsmdaCntrStInProfOctFwd": sapIngHsmdaCntrStInProfOctFwd,
       "sapIngHsmdaCntrStOutProfOctFwd": sapIngHsmdaCntrStOutProfOctFwd,
       "sapIngHsmdaCntrStAllPktOffered": sapIngHsmdaCntrStAllPktOffered,
       "sapIngHsmdaCntrStAllOctOffered": sapIngHsmdaCntrStAllOctOffered,
       "sapEgrQosHsmdaQueueTable": sapEgrQosHsmdaQueueTable,
       "sapEgrQosHsmdaQueueEntry": sapEgrQosHsmdaQueueEntry,
       "sapEgrQosHsmdaQueueId": sapEgrQosHsmdaQueueId,
       "sapEgrQosHsmdaQueueRowStatus": sapEgrQosHsmdaQueueRowStatus,
       "sapEgrQosHsmdaQueueLastChanged": sapEgrQosHsmdaQueueLastChanged,
       "sapEgrQosHsmdaQueueAdminPIR": sapEgrQosHsmdaQueueAdminPIR,
       "sapEgrQosHsmdaQueueAdminCIR": sapEgrQosHsmdaQueueAdminCIR,
       "sapEgrQosHsmdaQueueSlopePolicy": sapEgrQosHsmdaQueueSlopePolicy,
       "sapEgrQosHsmdaQueueWrrWeight": sapEgrQosHsmdaQueueWrrWeight,
       "sapEgrQosHsmdaQueueMBS": sapEgrQosHsmdaQueueMBS,
       "sapEgrQosHsmdaQueueStatsTable": sapEgrQosHsmdaQueueStatsTable,
       "sapEgrQosHsmdaQueueStatsEntry": sapEgrQosHsmdaQueueStatsEntry,
       "sapEgrHsmdaQStatCustId": sapEgrHsmdaQStatCustId,
       "sapEgrHsmdaQStatInProfPktFwd": sapEgrHsmdaQStatInProfPktFwd,
       "sapEgrHsmdaQStatInProfPktDropd": sapEgrHsmdaQStatInProfPktDropd,
       "sapEgrHsmdaQStatOutProfPktFwd": sapEgrHsmdaQStatOutProfPktFwd,
       "sapEgrHsmdaQStatOutProfPktDropd": sapEgrHsmdaQStatOutProfPktDropd,
       "sapEgrHsmdaQStatInProfOctFwd": sapEgrHsmdaQStatInProfOctFwd,
       "sapEgrHsmdaQStatInProfOctDropd": sapEgrHsmdaQStatInProfOctDropd,
       "sapEgrHsmdaQStatOutProfOctFwd": sapEgrHsmdaQStatOutProfOctFwd,
       "sapEgrHsmdaQStatOutProfOctDropd": sapEgrHsmdaQStatOutProfOctDropd,
       "sapEgrQosHsmdaCntrStatsTable": sapEgrQosHsmdaCntrStatsTable,
       "sapEgrQosHsmdaCntrStatsEntry": sapEgrQosHsmdaCntrStatsEntry,
       "sapEgrHsmdaCntrStCntrId": sapEgrHsmdaCntrStCntrId,
       "sapEgrHsmdaCntrStCustId": sapEgrHsmdaCntrStCustId,
       "sapEgrHsmdaCntrStInProfPktFwd": sapEgrHsmdaCntrStInProfPktFwd,
       "sapEgrHsmdaCntrStInProfPktDrop": sapEgrHsmdaCntrStInProfPktDrop,
       "sapEgrHsmdaCntrStOutProfPktFwd": sapEgrHsmdaCntrStOutProfPktFwd,
       "sapEgrHsmdaCntrStOutProfPktDrop": sapEgrHsmdaCntrStOutProfPktDrop,
       "sapEgrHsmdaCntrStInProfOctFwd": sapEgrHsmdaCntrStInProfOctFwd,
       "sapEgrHsmdaCntrStInProfOctDrop": sapEgrHsmdaCntrStInProfOctDrop,
       "sapEgrHsmdaCntrStOutProfOctFwd": sapEgrHsmdaCntrStOutProfOctFwd,
       "sapEgrHsmdaCntrStOutProfOctDrop": sapEgrHsmdaCntrStOutProfOctDrop,
       "msapL3PlcyTable": msapL3PlcyTable,
       "msapL3PlcyEntry": msapL3PlcyEntry,
       "msapL3PlcyLastChanged": msapL3PlcyLastChanged,
       "msapL3PlcyAntiSpoof": msapL3PlcyAntiSpoof,
       "msapL3PlcyIngQosPolicyId": msapL3PlcyIngQosPolicyId,
       "msapL3PlcyIngQosQueueingType": msapL3PlcyIngQosQueueingType,
       "msapL3PlcyEgrQosPolicyId": msapL3PlcyEgrQosPolicyId,
       "msapPlcyTblLastChgd": msapPlcyTblLastChgd,
       "msapTlsPlcyTblLastChgd": msapTlsPlcyTblLastChgd,
       "msapIgmpSnpgMcacLvlTblLastChgd": msapIgmpSnpgMcacLvlTblLastChgd,
       "msapIgmpSnpgMcacLagTblLastChgd": msapIgmpSnpgMcacLagTblLastChgd,
       "msapInfoTblLastChgd": msapInfoTblLastChgd,
       "msapL3PlcyTblLastChgd": msapL3PlcyTblLastChgd,
       "sapStaticHostMRtTblLastChgd": sapStaticHostMRtTblLastChgd,
       "sapStaticHostMRtTable": sapStaticHostMRtTable,
       "sapStaticHostMRtEntry": sapStaticHostMRtEntry,
       "sapStaticHostMRtAddrType": sapStaticHostMRtAddrType,
       "sapStaticHostMRtAddr": sapStaticHostMRtAddr,
       "sapStaticHostMRtPrefixLen": sapStaticHostMRtPrefixLen,
       "sapStaticHostMRtRowStatus": sapStaticHostMRtRowStatus,
       "sapStaticHostMRtLastMgmtChange": sapStaticHostMRtLastMgmtChange,
       "sapStaticHostMRtStatus": sapStaticHostMRtStatus,
       "sapStaticHostMRtMetric": sapStaticHostMRtMetric,
       "sapStaticHostMRtPreference": sapStaticHostMRtPreference,
       "sapStaticHostMRtTag": sapStaticHostMRtTag,
       "sapTlsArpHostTableLastMgmtChange": sapTlsArpHostTableLastMgmtChange,
       "sapTlsArpHostTable": sapTlsArpHostTable,
       "sapTlsArpHostEntry": sapTlsArpHostEntry,
       "sapTlsArpHostLastMgmtChange": sapTlsArpHostLastMgmtChange,
       "sapTlsArpHostAdminState": sapTlsArpHostAdminState,
       "sapTlsArpHostMaxNumHosts": sapTlsArpHostMaxNumHosts,
       "sapTlsArpHostMinAuthIntvl": sapTlsArpHostMinAuthIntvl,
       "sapIgmpTrkTableLastMgmtChange": sapIgmpTrkTableLastMgmtChange,
       "sapIgmpTrkTable": sapIgmpTrkTable,
       "sapIgmpTrkEntry": sapIgmpTrkEntry,
       "sapIgmpTrkLastMgmtChange": sapIgmpTrkLastMgmtChange,
       "sapIgmpTrkExpiryTime": sapIgmpTrkExpiryTime,
       "sapIgmpTrkImportPlcy": sapIgmpTrkImportPlcy,
       "sapIgmpTrkMaxNbrGrps": sapIgmpTrkMaxNbrGrps,
       "sapIgmpTrkNbrGrps": sapIgmpTrkNbrGrps,
       "sapIgmpTrkMaxNbrSrcs": sapIgmpTrkMaxNbrSrcs,
       "sapIgmpTrkDisRtrAlertChk": sapIgmpTrkDisRtrAlertChk,
       "sapIgmpTrkMaxNbrGrpSrcs": sapIgmpTrkMaxNbrGrpSrcs,
       "sapFrInfoTable": sapFrInfoTable,
       "sapFrInfoEntry": sapFrInfoEntry,
       "sapFrInfoFrf12Mode": sapFrInfoFrf12Mode,
       "sapFrInfoSchedulingClass": sapFrInfoSchedulingClass,
       "sapFrInfoLastChanged": sapFrInfoLastChanged,
       "sapFrf12InfoTable": sapFrf12InfoTable,
       "sapFrf12InfoEntry": sapFrf12InfoEntry,
       "sapFrf12InfoFragmentThreshold": sapFrf12InfoFragmentThreshold,
       "sapFrf12InfoLastChanged": sapFrf12InfoLastChanged,
       "sapFrf12InfoInterleave": sapFrf12InfoInterleave,
       "sapArpHostStatTable": sapArpHostStatTable,
       "sapArpHostStatEntry": sapArpHostStatEntry,
       "sapArpHostStatLastClearedTime": sapArpHostStatLastClearedTime,
       "sapArpHostStatNumHosts": sapArpHostStatNumHosts,
       "sapArpHostStatTriggersRx": sapArpHostStatTriggersRx,
       "sapArpHostStatTriggersIgnored": sapArpHostStatTriggersIgnored,
       "sapArpHostStatTrigIgnQFull": sapArpHostStatTrigIgnQFull,
       "sapArpHostStatNumForcedVerif": sapArpHostStatNumForcedVerif,
       "sapArpHostStatNumCreated": sapArpHostStatNumCreated,
       "sapArpHostStatNumDeleted": sapArpHostStatNumDeleted,
       "sapArpHostStatNumUpdated": sapArpHostStatNumUpdated,
       "sapArpHostStatNumAuthReq": sapArpHostStatNumAuthReq,
       "sapPbbTable": sapPbbTable,
       "sapPbbEntry": sapPbbEntry,
       "sapPbbSvcIdIVpls": sapPbbSvcIdIVpls,
       "sapPbbSvcIdBVpls": sapPbbSvcIdBVpls,
       "sapPbbPortId": sapPbbPortId,
       "sapPbbEncapValue": sapPbbEncapValue,
       "sapPbbRowStatus": sapPbbRowStatus,
       "sapPbbLastMgmtChange": sapPbbLastMgmtChange,
       "sapPbbIgmpSnpgMRouter": sapPbbIgmpSnpgMRouter,
       "sapPbbMldSnpgMRouter": sapPbbMldSnpgMRouter,
       "sapFPropBMacAddrTblLastChgd": sapFPropBMacAddrTblLastChgd,
       "sapFPropBMacAddrTable": sapFPropBMacAddrTable,
       "sapFPropBMacAddrEntry": sapFPropBMacAddrEntry,
       "sapFPropBMacAddrMacNameOrAddrTag": sapFPropBMacAddrMacNameOrAddrTag,
       "sapFPropBMacAddrMacNameOrAddr": sapFPropBMacAddrMacNameOrAddr,
       "sapFPropBMacAddrRowStatus": sapFPropBMacAddrRowStatus,
       "sapIpv6HostInfoTable": sapIpv6HostInfoTable,
       "sapIpv6HostInfoEntry": sapIpv6HostInfoEntry,
       "sapIpv6HostInfoIpoeDhcp6Hosts": sapIpv6HostInfoIpoeDhcp6Hosts,
       "sapIpv6HostInfoPppDhcp6Hosts": sapIpv6HostInfoPppDhcp6Hosts,
       "sapIpv6HostInfoPppSLAACHosts": sapIpv6HostInfoPppSLAACHosts,
       "sapIpv6HostInfoIpoeSLAACHosts": sapIpv6HostInfoIpoeSLAACHosts,
       "sapIpv6HostInfoStaticHostsUp": sapIpv6HostInfoStaticHostsUp,
       "sapIngPlcrCtrlOvrTblLastChgd": sapIngPlcrCtrlOvrTblLastChgd,
       "sapIngPlcrCtrlOvrTable": sapIngPlcrCtrlOvrTable,
       "sapIngPlcrCtrlOvrEntry": sapIngPlcrCtrlOvrEntry,
       "sapIngPlcrCtrlOvrRowStatus": sapIngPlcrCtrlOvrRowStatus,
       "sapIngPlcrCtrlOvrLastChgd": sapIngPlcrCtrlOvrLastChgd,
       "sapIngPlcrCtrlOvrMaxRate": sapIngPlcrCtrlOvrMaxRate,
       "sapIngPlcrCtrlOvrMinMBSSep": sapIngPlcrCtrlOvrMinMBSSep,
       "sapIngPlcrCtrlOvrMaxRateHi": sapIngPlcrCtrlOvrMaxRateHi,
       "sapIngPlcrCtrlOvrMaxRateLo": sapIngPlcrCtrlOvrMaxRateLo,
       "sapIngPlcrCtrlOvrLvlTblLastChgd": sapIngPlcrCtrlOvrLvlTblLastChgd,
       "sapIngPlcrCtrlOvrLvlTable": sapIngPlcrCtrlOvrLvlTable,
       "sapIngPlcrCtrlOvrLvlEntry": sapIngPlcrCtrlOvrLvlEntry,
       "sapIngPlcrCtrlOvrLvlLastChgd": sapIngPlcrCtrlOvrLvlLastChgd,
       "sapIngPlcrCtrlOvrLvlMBS": sapIngPlcrCtrlOvrLvlMBS,
       "sapIngPlcrOvrTblLastChgd": sapIngPlcrOvrTblLastChgd,
       "sapIngPlcrOvrTable": sapIngPlcrOvrTable,
       "sapIngPlcrOvrEntry": sapIngPlcrOvrEntry,
       "sapIngPlcrOvrRowStatus": sapIngPlcrOvrRowStatus,
       "sapIngPlcrOvrLastChgd": sapIngPlcrOvrLastChgd,
       "sapIngPlcrOvrAdminPIR": sapIngPlcrOvrAdminPIR,
       "sapIngPlcrOvrAdminCIR": sapIngPlcrOvrAdminCIR,
       "sapIngPlcrOvrStatMode": sapIngPlcrOvrStatMode,
       "sapIngPlcrOvrMBS": sapIngPlcrOvrMBS,
       "sapIngPlcrOvrPktOffset": sapIngPlcrOvrPktOffset,
       "sapIngPlcrOvrCBS": sapIngPlcrOvrCBS,
       "sapIngPlcrOvrAdminPIRPercent": sapIngPlcrOvrAdminPIRPercent,
       "sapIngPlcrOvrAdminCIRPercent": sapIngPlcrOvrAdminCIRPercent,
       "sapIngPlcrOvrAdminPIRHi": sapIngPlcrOvrAdminPIRHi,
       "sapIngPlcrOvrAdminPIRLo": sapIngPlcrOvrAdminPIRLo,
       "sapIngPlcrOvrAdminCIRHi": sapIngPlcrOvrAdminCIRHi,
       "sapIngPlcrOvrAdminCIRLo": sapIngPlcrOvrAdminCIRLo,
       "sapEgrPlcrCtrlOvrTblLastChgd": sapEgrPlcrCtrlOvrTblLastChgd,
       "sapEgrPlcrCtrlOvrTable": sapEgrPlcrCtrlOvrTable,
       "sapEgrPlcrCtrlOvrEntry": sapEgrPlcrCtrlOvrEntry,
       "sapEgrPlcrCtrlOvrRowStatus": sapEgrPlcrCtrlOvrRowStatus,
       "sapEgrPlcrCtrlOvrLastChgd": sapEgrPlcrCtrlOvrLastChgd,
       "sapEgrPlcrCtrlOvrMaxRate": sapEgrPlcrCtrlOvrMaxRate,
       "sapEgrPlcrCtrlOvrMinMBSSep": sapEgrPlcrCtrlOvrMinMBSSep,
       "sapEgrPlcrCtrlOvrMaxRateHi": sapEgrPlcrCtrlOvrMaxRateHi,
       "sapEgrPlcrCtrlOvrMaxRateLo": sapEgrPlcrCtrlOvrMaxRateLo,
       "sapEgrPlcrCtrlOvrLvlTblLastChgd": sapEgrPlcrCtrlOvrLvlTblLastChgd,
       "sapEgrPlcrCtrlOvrLvlTable": sapEgrPlcrCtrlOvrLvlTable,
       "sapEgrPlcrCtrlOvrLvlEntry": sapEgrPlcrCtrlOvrLvlEntry,
       "sapEgrPlcrCtrlOvrLvlLastChgd": sapEgrPlcrCtrlOvrLvlLastChgd,
       "sapEgrPlcrCtrlOvrLvlMBS": sapEgrPlcrCtrlOvrLvlMBS,
       "sapEgrPlcrOvrTblLastChgd": sapEgrPlcrOvrTblLastChgd,
       "sapEgrPlcrOvrTable": sapEgrPlcrOvrTable,
       "sapEgrPlcrOvrEntry": sapEgrPlcrOvrEntry,
       "sapEgrPlcrOvrRowStatus": sapEgrPlcrOvrRowStatus,
       "sapEgrPlcrOvrLastChgd": sapEgrPlcrOvrLastChgd,
       "sapEgrPlcrOvrAdminPIR": sapEgrPlcrOvrAdminPIR,
       "sapEgrPlcrOvrAdminCIR": sapEgrPlcrOvrAdminCIR,
       "sapEgrPlcrOvrStatMode": sapEgrPlcrOvrStatMode,
       "sapEgrPlcrOvrMBS": sapEgrPlcrOvrMBS,
       "sapEgrPlcrOvrPktOffset": sapEgrPlcrOvrPktOffset,
       "sapEgrPlcrOvrCBS": sapEgrPlcrOvrCBS,
       "sapEgrPlcrOvrAdminPIRPercent": sapEgrPlcrOvrAdminPIRPercent,
       "sapEgrPlcrOvrAdminCIRPercent": sapEgrPlcrOvrAdminCIRPercent,
       "sapEgrPlcrOvrAdminPIRHi": sapEgrPlcrOvrAdminPIRHi,
       "sapEgrPlcrOvrAdminPIRLo": sapEgrPlcrOvrAdminPIRLo,
       "sapEgrPlcrOvrAdminCIRHi": sapEgrPlcrOvrAdminCIRHi,
       "sapEgrPlcrOvrAdminCIRLo": sapEgrPlcrOvrAdminCIRLo,
       "sapIngQosPolicerStatsTable": sapIngQosPolicerStatsTable,
       "sapIngQosPolicerStatsEntry": sapIngQosPolicerStatsEntry,
       "sapIngQosPStatsPolId": sapIngQosPStatsPolId,
       "sapIngQosPStatsCustId": sapIngQosPStatsCustId,
       "sapIngQosPStatsMode": sapIngQosPStatsMode,
       "sapIngQosPStatsOffHiPrioPkts": sapIngQosPStatsOffHiPrioPkts,
       "sapIngQosPStatsOffHiPrioPktsLo": sapIngQosPStatsOffHiPrioPktsLo,
       "sapIngQosPStatsOffHiPrioPktsHi": sapIngQosPStatsOffHiPrioPktsHi,
       "sapIngQosPStatsDrpHiPrioPkts": sapIngQosPStatsDrpHiPrioPkts,
       "sapIngQosPStatsDrpHiPrioPktsLo": sapIngQosPStatsDrpHiPrioPktsLo,
       "sapIngQosPStatsDrpHiPrioPktsHi": sapIngQosPStatsDrpHiPrioPktsHi,
       "sapIngQosPStatsOffLoPrioPkts": sapIngQosPStatsOffLoPrioPkts,
       "sapIngQosPStatsOffLoPrioPktsLo": sapIngQosPStatsOffLoPrioPktsLo,
       "sapIngQosPStatsOffLoPrioPktsHi": sapIngQosPStatsOffLoPrioPktsHi,
       "sapIngQosPStatsDrpLoPrioPkts": sapIngQosPStatsDrpLoPrioPkts,
       "sapIngQosPStatsDrpLoPrioPktsLo": sapIngQosPStatsDrpLoPrioPktsLo,
       "sapIngQosPStatsDrpLoPrioPktsHi": sapIngQosPStatsDrpLoPrioPktsHi,
       "sapIngQosPStatsOffHiPrioOcts": sapIngQosPStatsOffHiPrioOcts,
       "sapIngQosPStatsOffHiPrioOctsLo": sapIngQosPStatsOffHiPrioOctsLo,
       "sapIngQosPStatsOffHiPrioOctsHi": sapIngQosPStatsOffHiPrioOctsHi,
       "sapIngQosPStatsDrpHiPrioOcts": sapIngQosPStatsDrpHiPrioOcts,
       "sapIngQosPStatsDrpHiPrioOctsLo": sapIngQosPStatsDrpHiPrioOctsLo,
       "sapIngQosPStatsDrpHiPrioOctsHi": sapIngQosPStatsDrpHiPrioOctsHi,
       "sapIngQosPStatsOffLoPrioOcts": sapIngQosPStatsOffLoPrioOcts,
       "sapIngQosPStatsOffLoPrioOctsLo": sapIngQosPStatsOffLoPrioOctsLo,
       "sapIngQosPStatsOffLoPrioOctsHi": sapIngQosPStatsOffLoPrioOctsHi,
       "sapIngQosPStatsDrpLoPrioOcts": sapIngQosPStatsDrpLoPrioOcts,
       "sapIngQosPStatsDrpLoPrioOctsLo": sapIngQosPStatsDrpLoPrioOctsLo,
       "sapIngQosPStatsDrpLoPrioOctsHi": sapIngQosPStatsDrpLoPrioOctsHi,
       "sapIngQosPStatsFwdInProfPkts": sapIngQosPStatsFwdInProfPkts,
       "sapIngQosPStatsFwdInProfPktsLo": sapIngQosPStatsFwdInProfPktsLo,
       "sapIngQosPStatsFwdInProfPktsHi": sapIngQosPStatsFwdInProfPktsHi,
       "sapIngQosPStatsFwdOutProfPkts": sapIngQosPStatsFwdOutProfPkts,
       "sapIngQosPStatsFwdOutProfPktsLo": sapIngQosPStatsFwdOutProfPktsLo,
       "sapIngQosPStatsFwdOutProfPktsHi": sapIngQosPStatsFwdOutProfPktsHi,
       "sapIngQosPStatsFwdInProfOcts": sapIngQosPStatsFwdInProfOcts,
       "sapIngQosPStatsFwdInProfOctsLo": sapIngQosPStatsFwdInProfOctsLo,
       "sapIngQosPStatsFwdInProfOctsHi": sapIngQosPStatsFwdInProfOctsHi,
       "sapIngQosPStatsFwdOutProfOcts": sapIngQosPStatsFwdOutProfOcts,
       "sapIngQosPStatsFwdOutProfOctsLo": sapIngQosPStatsFwdOutProfOctsLo,
       "sapIngQosPStatsFwdOutProfOctsHi": sapIngQosPStatsFwdOutProfOctsHi,
       "sapIngQosPStatsUncolPktsOff": sapIngQosPStatsUncolPktsOff,
       "sapIngQosPStatsUncolPktsOffLo": sapIngQosPStatsUncolPktsOffLo,
       "sapIngQosPStatsUncolPktsOffHi": sapIngQosPStatsUncolPktsOffHi,
       "sapIngQosPStatsUncolOctsOff": sapIngQosPStatsUncolOctsOff,
       "sapIngQosPStatsUncolOctsOffLo": sapIngQosPStatsUncolOctsOffLo,
       "sapIngQosPStatsUncolOctsOffHi": sapIngQosPStatsUncolOctsOffHi,
       "sapIngQosPStatsDrpExdProfPkts": sapIngQosPStatsDrpExdProfPkts,
       "sapIngQosPStatsDrpExdProfOcts": sapIngQosPStatsDrpExdProfOcts,
       "sapEgrQosPolicerStatsTable": sapEgrQosPolicerStatsTable,
       "sapEgrQosPolicerStatsEntry": sapEgrQosPolicerStatsEntry,
       "sapEgrQosPStatsPolId": sapEgrQosPStatsPolId,
       "sapEgrQosPStatsCustId": sapEgrQosPStatsCustId,
       "sapEgrQosPStatsMode": sapEgrQosPStatsMode,
       "sapEgrQosPStatsOffInProfPkts": sapEgrQosPStatsOffInProfPkts,
       "sapEgrQosPStatsOffInProfPktsLo": sapEgrQosPStatsOffInProfPktsLo,
       "sapEgrQosPStatsOffInProfPktsHi": sapEgrQosPStatsOffInProfPktsHi,
       "sapEgrQosPStatsFwdInProfPkts": sapEgrQosPStatsFwdInProfPkts,
       "sapEgrQosPStatsFwdInProfPktsLo": sapEgrQosPStatsFwdInProfPktsLo,
       "sapEgrQosPStatsFwdInProfPktsHi": sapEgrQosPStatsFwdInProfPktsHi,
       "sapEgrQosPStatsDrpInProfPkts": sapEgrQosPStatsDrpInProfPkts,
       "sapEgrQosPStatsDrpInProfPktsLo": sapEgrQosPStatsDrpInProfPktsLo,
       "sapEgrQosPStatsDrpInProfPktsHi": sapEgrQosPStatsDrpInProfPktsHi,
       "sapEgrQosPStatsOffOutProfPkts": sapEgrQosPStatsOffOutProfPkts,
       "sapEgrQosPStatsOffOutProfPktsLo": sapEgrQosPStatsOffOutProfPktsLo,
       "sapEgrQosPStatsOffOutProfPktsHi": sapEgrQosPStatsOffOutProfPktsHi,
       "sapEgrQosPStatsFwdOutProfPkts": sapEgrQosPStatsFwdOutProfPkts,
       "sapEgrQosPStatsFwdOutProfPktsLo": sapEgrQosPStatsFwdOutProfPktsLo,
       "sapEgrQosPStatsFwdOutProfPktsHi": sapEgrQosPStatsFwdOutProfPktsHi,
       "sapEgrQosPStatsDrpOutProfPkts": sapEgrQosPStatsDrpOutProfPkts,
       "sapEgrQosPStatsDrpOutProfPktsLo": sapEgrQosPStatsDrpOutProfPktsLo,
       "sapEgrQosPStatsDrpOutProfPktsHi": sapEgrQosPStatsDrpOutProfPktsHi,
       "sapEgrQosPStatsOffInProfOcts": sapEgrQosPStatsOffInProfOcts,
       "sapEgrQosPStatsOffInProfOctsLo": sapEgrQosPStatsOffInProfOctsLo,
       "sapEgrQosPStatsOffInProfOctsHi": sapEgrQosPStatsOffInProfOctsHi,
       "sapEgrQosPStatsFwdInProfOcts": sapEgrQosPStatsFwdInProfOcts,
       "sapEgrQosPStatsFwdInProfOctsLo": sapEgrQosPStatsFwdInProfOctsLo,
       "sapEgrQosPStatsFwdInProfOctsHi": sapEgrQosPStatsFwdInProfOctsHi,
       "sapEgrQosPStatsDrpInProfOcts": sapEgrQosPStatsDrpInProfOcts,
       "sapEgrQosPStatsDrpInProfOctsLo": sapEgrQosPStatsDrpInProfOctsLo,
       "sapEgrQosPStatsDrpInProfOctsHi": sapEgrQosPStatsDrpInProfOctsHi,
       "sapEgrQosPStatsOffOutProfOcts": sapEgrQosPStatsOffOutProfOcts,
       "sapEgrQosPStatsOffOutProfOctsLo": sapEgrQosPStatsOffOutProfOctsLo,
       "sapEgrQosPStatsOffOutProfOctsHi": sapEgrQosPStatsOffOutProfOctsHi,
       "sapEgrQosPStatsFwdOutProfOcts": sapEgrQosPStatsFwdOutProfOcts,
       "sapEgrQosPStatsFwdOutProfOctsLo": sapEgrQosPStatsFwdOutProfOctsLo,
       "sapEgrQosPStatsFwdOutProfOctsHi": sapEgrQosPStatsFwdOutProfOctsHi,
       "sapEgrQosPStatsDrpOutProfOcts": sapEgrQosPStatsDrpOutProfOcts,
       "sapEgrQosPStatsDrpOutProfOctsLo": sapEgrQosPStatsDrpOutProfOctsLo,
       "sapEgrQosPStatsDrpOutProfOctsHi": sapEgrQosPStatsDrpOutProfOctsHi,
       "sapEgrQosPStatsUncolPktsOff": sapEgrQosPStatsUncolPktsOff,
       "sapEgrQosPStatsUncolPktsOffLo": sapEgrQosPStatsUncolPktsOffLo,
       "sapEgrQosPStatsUncolPktsOffHi": sapEgrQosPStatsUncolPktsOffHi,
       "sapEgrQosPStatsUncolOctsOff": sapEgrQosPStatsUncolOctsOff,
       "sapEgrQosPStatsUncolOctsOffLo": sapEgrQosPStatsUncolOctsOffLo,
       "sapEgrQosPStatsUncolOctsOffHi": sapEgrQosPStatsUncolOctsOffHi,
       "sapEgrQosPStatsFwdExdProfPkts": sapEgrQosPStatsFwdExdProfPkts,
       "sapEgrQosPStatsDrpExdProfPkts": sapEgrQosPStatsDrpExdProfPkts,
       "sapEgrQosPStatsFwdExdProfOcts": sapEgrQosPStatsFwdExdProfOcts,
       "sapEgrQosPStatsDrpExdProfOcts": sapEgrQosPStatsDrpExdProfOcts,
       "sapEgrQosPStatsOffExdProfPkts": sapEgrQosPStatsOffExdProfPkts,
       "sapEgrQosPStatsOffExdProfOcts": sapEgrQosPStatsOffExdProfOcts,
       "sapEgrQosPStatsOffInPlusProfPkts": sapEgrQosPStatsOffInPlusProfPkts,
       "sapEgrQosPStatsFwdInPlusProfPkts": sapEgrQosPStatsFwdInPlusProfPkts,
       "sapEgrQosPStatsDrpInPlusProfPkts": sapEgrQosPStatsDrpInPlusProfPkts,
       "sapEgrQosPStatsOffInPlusProfOcts": sapEgrQosPStatsOffInPlusProfOcts,
       "sapEgrQosPStatsFwdInPlusProfOcts": sapEgrQosPStatsFwdInPlusProfOcts,
       "sapEgrQosPStatsDrpInPlusProfOcts": sapEgrQosPStatsDrpInPlusProfOcts,
       "sapIngQosPlcyPolicerStatsTable": sapIngQosPlcyPolicerStatsTable,
       "sapIngQosPlcyPolicerStatsEntry": sapIngQosPlcyPolicerStatsEntry,
       "sapIgQosPlcyPStatPlcyId": sapIgQosPlcyPStatPlcyId,
       "sapIgQosPlcyPStatPolId": sapIgQosPlcyPStatPolId,
       "sapIgQosPlcyPStatCustId": sapIgQosPlcyPStatCustId,
       "sapIgQosPlcyPStatMode": sapIgQosPlcyPStatMode,
       "sapIgQosPlcyPStatOffHiPrioPkts": sapIgQosPlcyPStatOffHiPrioPkts,
       "sapIgQosPlcyPStatOffHiPrioPktsL": sapIgQosPlcyPStatOffHiPrioPktsL,
       "sapIgQosPlcyPStatOffHiPrioPktsH": sapIgQosPlcyPStatOffHiPrioPktsH,
       "sapIgQosPlcyPStatDrpHiPrioPkts": sapIgQosPlcyPStatDrpHiPrioPkts,
       "sapIgQosPlcyPStatDrpHiPrioPktsL": sapIgQosPlcyPStatDrpHiPrioPktsL,
       "sapIgQosPlcyPStatDrpHiPrioPktsH": sapIgQosPlcyPStatDrpHiPrioPktsH,
       "sapIgQosPlcyPStatOffLoPrioPkts": sapIgQosPlcyPStatOffLoPrioPkts,
       "sapIgQosPlcyPStatOffLoPrioPktsL": sapIgQosPlcyPStatOffLoPrioPktsL,
       "sapIgQosPlcyPStatOffLoPrioPktsH": sapIgQosPlcyPStatOffLoPrioPktsH,
       "sapIgQosPlcyPStatDrpLoPrioPkts": sapIgQosPlcyPStatDrpLoPrioPkts,
       "sapIgQosPlcyPStatDrpLoPrioPktsL": sapIgQosPlcyPStatDrpLoPrioPktsL,
       "sapIgQosPlcyPStatDrpLoPrioPktsH": sapIgQosPlcyPStatDrpLoPrioPktsH,
       "sapIgQosPlcyPStatOffHiPrioOcts": sapIgQosPlcyPStatOffHiPrioOcts,
       "sapIgQosPlcyPStatOffHiPrioOctsL": sapIgQosPlcyPStatOffHiPrioOctsL,
       "sapIgQosPlcyPStatOffHiPrioOctsH": sapIgQosPlcyPStatOffHiPrioOctsH,
       "sapIgQosPlcyPStatDrpHiPrioOcts": sapIgQosPlcyPStatDrpHiPrioOcts,
       "sapIgQosPlcyPStatDrpHiPrioOctsL": sapIgQosPlcyPStatDrpHiPrioOctsL,
       "sapIgQosPlcyPStatDrpHiPrioOctsH": sapIgQosPlcyPStatDrpHiPrioOctsH,
       "sapIgQosPlcyPStatOffLoPrioOcts": sapIgQosPlcyPStatOffLoPrioOcts,
       "sapIgQosPlcyPStatOffLoPrioOctsL": sapIgQosPlcyPStatOffLoPrioOctsL,
       "sapIgQosPlcyPStatOffLoPrioOctsH": sapIgQosPlcyPStatOffLoPrioOctsH,
       "sapIgQosPlcyPStatDrpLoPrioOcts": sapIgQosPlcyPStatDrpLoPrioOcts,
       "sapIgQosPlcyPStatDrpLoPrioOctsL": sapIgQosPlcyPStatDrpLoPrioOctsL,
       "sapIgQosPlcyPStatDrpLoPrioOctsH": sapIgQosPlcyPStatDrpLoPrioOctsH,
       "sapIgQosPlcyPStatFwdInProfPkts": sapIgQosPlcyPStatFwdInProfPkts,
       "sapIgQosPlcyPStatFwdInProfPktsL": sapIgQosPlcyPStatFwdInProfPktsL,
       "sapIgQosPlcyPStatFwdInProfPktsH": sapIgQosPlcyPStatFwdInProfPktsH,
       "sapIgQosPlcyPStatFwdOutProfPkts": sapIgQosPlcyPStatFwdOutProfPkts,
       "sapIgQosPlcyPStatFwdOutProfPktsL": sapIgQosPlcyPStatFwdOutProfPktsL,
       "sapIgQosPlcyPStatFwdOutProfPktsH": sapIgQosPlcyPStatFwdOutProfPktsH,
       "sapIgQosPlcyPStatFwdInProfOcts": sapIgQosPlcyPStatFwdInProfOcts,
       "sapIgQosPlcyPStatFwdInProfOctsL": sapIgQosPlcyPStatFwdInProfOctsL,
       "sapIgQosPlcyPStatFwdInProfOctsH": sapIgQosPlcyPStatFwdInProfOctsH,
       "sapIgQosPlcyPStatFwdOutProfOcts": sapIgQosPlcyPStatFwdOutProfOcts,
       "sapIgQosPlcyPStatFwdOutProfOctsL": sapIgQosPlcyPStatFwdOutProfOctsL,
       "sapIgQosPlcyPStatFwdOutProfOctsH": sapIgQosPlcyPStatFwdOutProfOctsH,
       "sapIgQosPlcyPStatUncolPktsOff": sapIgQosPlcyPStatUncolPktsOff,
       "sapIgQosPlcyPStatUncolPktsOffL": sapIgQosPlcyPStatUncolPktsOffL,
       "sapIgQosPlcyPStatUncolPktsOffH": sapIgQosPlcyPStatUncolPktsOffH,
       "sapIgQosPlcyPStatUncolOctsOff": sapIgQosPlcyPStatUncolOctsOff,
       "sapIgQosPlcyPStatUncolOctsOffL": sapIgQosPlcyPStatUncolOctsOffL,
       "sapIgQosPlcyPStatUncolOctsOffH": sapIgQosPlcyPStatUncolOctsOffH,
       "sapEgrQosPlcyPolicerStatsTable": sapEgrQosPlcyPolicerStatsTable,
       "sapEgrQosPlcyPolicerStatsEntry": sapEgrQosPlcyPolicerStatsEntry,
       "sapEgQosPlcyPStatPlcyId": sapEgQosPlcyPStatPlcyId,
       "sapEgQosPlcyPStatPolId": sapEgQosPlcyPStatPolId,
       "sapEgQosPlcyPStatCustId": sapEgQosPlcyPStatCustId,
       "sapEgQosPlcyPStatMode": sapEgQosPlcyPStatMode,
       "sapEgQosPlcyPStatOffInProfPkts": sapEgQosPlcyPStatOffInProfPkts,
       "sapEgQosPlcyPStatOffInProfPktsL": sapEgQosPlcyPStatOffInProfPktsL,
       "sapEgQosPlcyPStatOffInProfPktsH": sapEgQosPlcyPStatOffInProfPktsH,
       "sapEgQosPlcyPStatFwdInProfPkts": sapEgQosPlcyPStatFwdInProfPkts,
       "sapEgQosPlcyPStatFwdInProfPktsL": sapEgQosPlcyPStatFwdInProfPktsL,
       "sapEgQosPlcyPStatFwdInProfPktsH": sapEgQosPlcyPStatFwdInProfPktsH,
       "sapEgQosPlcyPStatDrpInProfPkts": sapEgQosPlcyPStatDrpInProfPkts,
       "sapEgQosPlcyPStatDrpInProfPktsL": sapEgQosPlcyPStatDrpInProfPktsL,
       "sapEgQosPlcyPStatDrpInProfPktsH": sapEgQosPlcyPStatDrpInProfPktsH,
       "sapEgQosPlcyPStatOffOutProfPkts": sapEgQosPlcyPStatOffOutProfPkts,
       "sapEgQosPlcyPStatOffOutProfPktsL": sapEgQosPlcyPStatOffOutProfPktsL,
       "sapEgQosPlcyPStatOffOutProfPktsH": sapEgQosPlcyPStatOffOutProfPktsH,
       "sapEgQosPlcyPStatFwdOutProfPkts": sapEgQosPlcyPStatFwdOutProfPkts,
       "sapEgQosPlcyPStatFwdOutProfPktsL": sapEgQosPlcyPStatFwdOutProfPktsL,
       "sapEgQosPlcyPStatFwdOutProfPktsH": sapEgQosPlcyPStatFwdOutProfPktsH,
       "sapEgQosPlcyPStatDrpOutProfPkts": sapEgQosPlcyPStatDrpOutProfPkts,
       "sapEgQosPlcyPStatDrpOutProfPktsL": sapEgQosPlcyPStatDrpOutProfPktsL,
       "sapEgQosPlcyPStatDrpOutProfPktsH": sapEgQosPlcyPStatDrpOutProfPktsH,
       "sapEgQosPlcyPStatOffInProfOcts": sapEgQosPlcyPStatOffInProfOcts,
       "sapEgQosPlcyPStatOffInProfOctsL": sapEgQosPlcyPStatOffInProfOctsL,
       "sapEgQosPlcyPStatOffInProfOctsH": sapEgQosPlcyPStatOffInProfOctsH,
       "sapEgQosPlcyPStatFwdInProfOcts": sapEgQosPlcyPStatFwdInProfOcts,
       "sapEgQosPlcyPStatFwdInProfOctsL": sapEgQosPlcyPStatFwdInProfOctsL,
       "sapEgQosPlcyPStatFwdInProfOctsH": sapEgQosPlcyPStatFwdInProfOctsH,
       "sapEgQosPlcyPStatDrpInProfOcts": sapEgQosPlcyPStatDrpInProfOcts,
       "sapEgQosPlcyPStatDrpInProfOctsL": sapEgQosPlcyPStatDrpInProfOctsL,
       "sapEgQosPlcyPStatDrpInProfOctsH": sapEgQosPlcyPStatDrpInProfOctsH,
       "sapEgQosPlcyPStatOffOutProfOcts": sapEgQosPlcyPStatOffOutProfOcts,
       "sapEgQosPlcyPStatOffOutProfOctsL": sapEgQosPlcyPStatOffOutProfOctsL,
       "sapEgQosPlcyPStatOffOutProfOctsH": sapEgQosPlcyPStatOffOutProfOctsH,
       "sapEgQosPlcyPStatFwdOutProfOcts": sapEgQosPlcyPStatFwdOutProfOcts,
       "sapEgQosPlcyPStatFwdOutProfOctsL": sapEgQosPlcyPStatFwdOutProfOctsL,
       "sapEgQosPlcyPStatFwdOutProfOctsH": sapEgQosPlcyPStatFwdOutProfOctsH,
       "sapEgQosPlcyPStatDrpOutProfOcts": sapEgQosPlcyPStatDrpOutProfOcts,
       "sapEgQosPlcyPStatDrpOutProfOctsL": sapEgQosPlcyPStatDrpOutProfOctsL,
       "sapEgQosPlcyPStatDrpOutProfOctsH": sapEgQosPlcyPStatDrpOutProfOctsH,
       "tmnxSapNotifyObjs": tmnxSapNotifyObjs,
       "sapNotifyPortId": sapNotifyPortId,
       "msapStatus": msapStatus,
       "svcManagedSapCreationError": svcManagedSapCreationError,
       "sapTlsNotifyMacAddr": sapTlsNotifyMacAddr,
       "sapBGPPeeringHostIpAddrType": sapBGPPeeringHostIpAddrType,
       "sapBGPPeeringHostIpAddr": sapBGPPeeringHostIpAddr,
       "sapBGPPeeringNotifDescription": sapBGPPeeringNotifDescription,
       "sapBGPPeeringAttrDiscarded": sapBGPPeeringAttrDiscarded,
       "sapBGPPeeringVRtrID": sapBGPPeeringVRtrID,
       "sapTunnelNotifyName": sapTunnelNotifyName,
       "sapTunnelNotifyReason": sapTunnelNotifyReason,
       "sapTunnelNotifyState": sapTunnelNotifyState,
       "sapNotifyReason": sapNotifyReason,
       "sapNotifyName": sapNotifyName,
       "sapPppNcpFailureProtocol": sapPppNcpFailureProtocol,
       "sapIpipeCeIpAddrType": sapIpipeCeIpAddrType,
       "sapIpipeCeIpAddress": sapIpipeCeIpAddress,
       "sapNotifyEncapValue": sapNotifyEncapValue,
       "sapTunnelNotifyConfigIpMtu": sapTunnelNotifyConfigIpMtu,
       "sapTunnelNotifyEncapOverhead": sapTunnelNotifyEncapOverhead,
       "sapTunnelNotifyConfigEncapIpMtu": sapTunnelNotifyConfigEncapIpMtu,
       "sapRipListenerHostIpAddrType": sapRipListenerHostIpAddrType,
       "sapRipListenerHostIpAddr": sapRipListenerHostIpAddr,
       "sapRipListenerVRtrID": sapRipListenerVRtrID,
       "sapRipListenerNotifDescription": sapRipListenerNotifDescription,
       "sapNotifyIpAddrType": sapNotifyIpAddrType,
       "sapNotifyIpAddr": sapNotifyIpAddr,
       "sapNotifyIfName": sapNotifyIfName,
       "sapNotifyPortState": sapNotifyPortState,
       "sapTmplTblLastChanged": sapTmplTblLastChanged,
       "sapTmplTable": sapTmplTable,
       "sapTmplEntry": sapTmplEntry,
       "sapTmplName": sapTmplName,
       "sapTmplRowStatus": sapTmplRowStatus,
       "sapTmplLastChanged": sapTmplLastChanged,
       "sapTmplSapCount": sapTmplSapCount,
       "sapTmplType": sapTmplType,
       "sapTmplIngressQosPolicyId": sapTmplIngressQosPolicyId,
       "sapTmplIngressMacFilterId": sapTmplIngressMacFilterId,
       "sapTmplIngressIpFilterId": sapTmplIngressIpFilterId,
       "sapTmplEgressQosPolicyId": sapTmplEgressQosPolicyId,
       "sapTmplEgressMacFilterId": sapTmplEgressMacFilterId,
       "sapTmplEgressIpFilterId": sapTmplEgressIpFilterId,
       "sapTmplCollectAcctStats": sapTmplCollectAcctStats,
       "sapTmplIngressQosSchedulerPolicy": sapTmplIngressQosSchedulerPolicy,
       "sapTmplEgressQosSchedulerPolicy": sapTmplEgressQosSchedulerPolicy,
       "sapTmplIngressSharedQueuePolicy": sapTmplIngressSharedQueuePolicy,
       "sapTmplIngressMatchQinQDot1PBits": sapTmplIngressMatchQinQDot1PBits,
       "sapTmplIngressIpv6FilterId": sapTmplIngressIpv6FilterId,
       "sapTmplEgressIpv6FilterId": sapTmplEgressIpv6FilterId,
       "sapTmplIngUseMultipointShared": sapTmplIngUseMultipointShared,
       "sapTmplEgressQinQMarkTopOnly": sapTmplEgressQinQMarkTopOnly,
       "sapTmplEgressAggRateLimit": sapTmplEgressAggRateLimit,
       "sapTmplEgressFrameBasedAcctg": sapTmplEgressFrameBasedAcctg,
       "sapTmplIngressAggRateLimit": sapTmplIngressAggRateLimit,
       "sapTmplIngPolicerPolicy": sapTmplIngPolicerPolicy,
       "sapTmplEgrPolicerPolicy": sapTmplEgrPolicerPolicy,
       "sapTmplDot1agCfmMip": sapTmplDot1agCfmMip,
       "sapTmplCpmProtPolicyId": sapTmplCpmProtPolicyId,
       "sapTmplCpmProtMonitorMac": sapTmplCpmProtMonitorMac,
       "sapTmplCpmProtEthCfmMonitorFlags": sapTmplCpmProtEthCfmMonitorFlags,
       "sapTmplEgrAggRateLUB": sapTmplEgrAggRateLUB,
       "sapTmplEthCfmSquelchIngress": sapTmplEthCfmSquelchIngress,
       "sapTmplEgrAggRateLimitHi": sapTmplEgrAggRateLimitHi,
       "sapTmplEgrAggRateLimit": sapTmplEgrAggRateLimit,
       "sapTmplDCpuProtPolicy": sapTmplDCpuProtPolicy,
       "sapTmplIngressQosPolicyName": sapTmplIngressQosPolicyName,
       "sapTmplEgressQosPolicyName": sapTmplEgressQosPolicyName,
       "sapTmplIngressIpFilterName": sapTmplIngressIpFilterName,
       "sapTmplIngressIpv6FilterName": sapTmplIngressIpv6FilterName,
       "sapTmplIngressMacFilterName": sapTmplIngressMacFilterName,
       "sapTmplEgressIpFilterName": sapTmplEgressIpFilterName,
       "sapTmplEgressIpv6FilterName": sapTmplEgressIpv6FilterName,
       "sapTmplEgressMacFilterName": sapTmplEgressMacFilterName,
       "sapTmplEthCfmSquelchIngressCtag": sapTmplEthCfmSquelchIngressCtag,
       "sapTmplTlsTblLastChanged": sapTmplTlsTblLastChanged,
       "sapTmplTlsTable": sapTmplTlsTable,
       "sapTmplTlsEntry": sapTmplTlsEntry,
       "sapTmplTlsLastChanged": sapTmplTlsLastChanged,
       "sapTmplTlsMacAgeing": sapTmplTlsMacAgeing,
       "sapTmplTlsStpAdminStatus": sapTmplTlsStpAdminStatus,
       "sapTmplTlsStpPriority": sapTmplTlsStpPriority,
       "sapTmplTlsStpPathCost": sapTmplTlsStpPathCost,
       "sapTmplTlsStpRapidStart": sapTmplTlsStpRapidStart,
       "sapTmplTlsStpBpduEncap": sapTmplTlsStpBpduEncap,
       "sapTmplTlsMacAddressLimit": sapTmplTlsMacAddressLimit,
       "sapTmplTlsMacLearning": sapTmplTlsMacLearning,
       "sapTmplTlsStpAdminPointToPoint": sapTmplTlsStpAdminPointToPoint,
       "sapTmplTlsStpAutoEdge": sapTmplTlsStpAutoEdge,
       "sapTmplTlsDiscardUnknownSource": sapTmplTlsDiscardUnknownSource,
       "sapTmplTlsL2ptTermination": sapTmplTlsL2ptTermination,
       "sapTmplTlsBpduTranslation": sapTmplTlsBpduTranslation,
       "sapTmplTlsStpRootGuard": sapTmplTlsStpRootGuard,
       "sapTmplTlsL2ptProtocols": sapTmplTlsL2ptProtocols,
       "sapTmplTlsLimitMacMove": sapTmplTlsLimitMacMove,
       "sapTmplTlsLimitMacMoveLevel": sapTmplTlsLimitMacMoveLevel,
       "sapTlsEsVidGrpTblLastChanged": sapTlsEsVidGrpTblLastChanged,
       "sapTlsEsVidGrpTable": sapTlsEsVidGrpTable,
       "sapTlsEsVidGrpEntry": sapTlsEsVidGrpEntry,
       "sapTlsEsVidGrpId": sapTlsEsVidGrpId,
       "sapTlsEsVidGrpRowStatus": sapTlsEsVidGrpRowStatus,
       "sapTlsEsVidGrpLastChgd": sapTlsEsVidGrpLastChgd,
       "sapTlsEsVidGrpStartVlanTag": sapTlsEsVidGrpStartVlanTag,
       "sapTlsEsVidGrpEndVlanTag": sapTlsEsVidGrpEndVlanTag,
       "sapTmplUserTable": sapTmplUserTable,
       "sapTmplUserEntry": sapTmplUserEntry,
       "sapTmplUserCreationOrigin": sapTmplUserCreationOrigin,
       "sapTmplUserCreatorSvcId": sapTmplUserCreatorSvcId,
       "sapIngQosArbitStatsTable": sapIngQosArbitStatsTable,
       "sapIngQosArbitStatsEntry": sapIngQosArbitStatsEntry,
       "sapIngQosArbitStatsName": sapIngQosArbitStatsName,
       "sapIngQosArbitStatsFwdPkts": sapIngQosArbitStatsFwdPkts,
       "sapIngQosArbitStatsFwdPktsLo": sapIngQosArbitStatsFwdPktsLo,
       "sapIngQosArbitStatsFwdPktsHi": sapIngQosArbitStatsFwdPktsHi,
       "sapIngQosArbitStatsFwdOcts": sapIngQosArbitStatsFwdOcts,
       "sapIngQosArbitStatsFwdOctsLo": sapIngQosArbitStatsFwdOctsLo,
       "sapIngQosArbitStatsFwdOctsHi": sapIngQosArbitStatsFwdOctsHi,
       "sapEgrQosArbitStatsTable": sapEgrQosArbitStatsTable,
       "sapEgrQosArbitStatsEntry": sapEgrQosArbitStatsEntry,
       "sapEgrQosArbitStatsName": sapEgrQosArbitStatsName,
       "sapEgrQosArbitStatsFwdPkts": sapEgrQosArbitStatsFwdPkts,
       "sapEgrQosArbitStatsFwdPktsLo": sapEgrQosArbitStatsFwdPktsLo,
       "sapEgrQosArbitStatsFwdPktsHi": sapEgrQosArbitStatsFwdPktsHi,
       "sapEgrQosArbitStatsFwdOcts": sapEgrQosArbitStatsFwdOcts,
       "sapEgrQosArbitStatsFwdOctsLo": sapEgrQosArbitStatsFwdOctsLo,
       "sapEgrQosArbitStatsFwdOctsHi": sapEgrQosArbitStatsFwdOctsHi,
       "sapTlsMvrpTable": sapTlsMvrpTable,
       "sapTlsMvrpEntry": sapTlsMvrpEntry,
       "sapTlsMvrpVlanId": sapTlsMvrpVlanId,
       "sapTlsMvrpDeclared": sapTlsMvrpDeclared,
       "sapTlsMvrpRegistered": sapTlsMvrpRegistered,
       "sapTlsMvrpEndStation": sapTlsMvrpEndStation,
       "sapPortIdIngQosArbitStatsTable": sapPortIdIngQosArbitStatsTable,
       "sapPortIdIngQosArbitStatsEntry": sapPortIdIngQosArbitStatsEntry,
       "sapPortIdIngQosArbitName": sapPortIdIngQosArbitName,
       "sapPortIdIngQosArbitFwdPkts": sapPortIdIngQosArbitFwdPkts,
       "sapPortIdIngQosArbitFwdOcts": sapPortIdIngQosArbitFwdOcts,
       "sapPortIdIngQosArbitFwdPktsLo": sapPortIdIngQosArbitFwdPktsLo,
       "sapPortIdIngQosArbitFwdPktsHi": sapPortIdIngQosArbitFwdPktsHi,
       "sapPortIdIngQosArbitFwdOctsLo": sapPortIdIngQosArbitFwdOctsLo,
       "sapPortIdIngQosArbitFwdOctsHi": sapPortIdIngQosArbitFwdOctsHi,
       "sapPortIdEgrQosArbitStatsTable": sapPortIdEgrQosArbitStatsTable,
       "sapPortIdEgrQosArbitStatsEntry": sapPortIdEgrQosArbitStatsEntry,
       "sapPortIdEgrQosArbitName": sapPortIdEgrQosArbitName,
       "sapPortIdEgrQosArbitFwdPkts": sapPortIdEgrQosArbitFwdPkts,
       "sapPortIdEgrQosArbitFwdOcts": sapPortIdEgrQosArbitFwdOcts,
       "sapPortIdEgrQosArbitFwdPktsLo": sapPortIdEgrQosArbitFwdPktsLo,
       "sapPortIdEgrQosArbitFwdPktsHi": sapPortIdEgrQosArbitFwdPktsHi,
       "sapPortIdEgrQosArbitFwdOctsLo": sapPortIdEgrQosArbitFwdOctsLo,
       "sapPortIdEgrQosArbitFwdOctsHi": sapPortIdEgrQosArbitFwdOctsHi,
       "tmnxGreTunnelTableLastChanged": tmnxGreTunnelTableLastChanged,
       "tmnxGreTunnelTable": tmnxGreTunnelTable,
       "tmnxGreTunnelEntry": tmnxGreTunnelEntry,
       "tmnxGreTunnelName": tmnxGreTunnelName,
       "tmnxGreTunnelRowStatus": tmnxGreTunnelRowStatus,
       "tmnxGreTunnelLastChanged": tmnxGreTunnelLastChanged,
       "tmnxGreTunnelDstIpAddrType": tmnxGreTunnelDstIpAddrType,
       "tmnxGreTunnelDstIpAddr": tmnxGreTunnelDstIpAddr,
       "tmnxGreTunnelDescription": tmnxGreTunnelDescription,
       "tmnxGreTunnelLclIpAddrType": tmnxGreTunnelLclIpAddrType,
       "tmnxGreTunnelLclIpAddr": tmnxGreTunnelLclIpAddr,
       "tmnxGreTunnelRemIpAddrType": tmnxGreTunnelRemIpAddrType,
       "tmnxGreTunnelRemIpAddr": tmnxGreTunnelRemIpAddr,
       "tmnxGreTunnelBackupRemIpAddrType": tmnxGreTunnelBackupRemIpAddrType,
       "tmnxGreTunnelBackupRemIpAddr": tmnxGreTunnelBackupRemIpAddr,
       "tmnxGreTunnelOperRemIpAddrType": tmnxGreTunnelOperRemIpAddrType,
       "tmnxGreTunnelOperRemIpAddr": tmnxGreTunnelOperRemIpAddr,
       "tmnxGreTunnelDeliverySvcId": tmnxGreTunnelDeliverySvcId,
       "tmnxGreTunnelAdminState": tmnxGreTunnelAdminState,
       "tmnxGreTunnelOperState": tmnxGreTunnelOperState,
       "tmnxGreTunnelOperFlags": tmnxGreTunnelOperFlags,
       "tmnxGreTunnelDscp": tmnxGreTunnelDscp,
       "tmnxGreTunnelReassembly": tmnxGreTunnelReassembly,
       "tmnxGreTunnelClearDfBit": tmnxGreTunnelClearDfBit,
       "tmnxGreTunnelIpMtu": tmnxGreTunnelIpMtu,
       "tmnxGreTunnelHostISA": tmnxGreTunnelHostISA,
       "tmnxGreTunnelStatsTable": tmnxGreTunnelStatsTable,
       "tmnxGreTunnelStatsEntry": tmnxGreTunnelStatsEntry,
       "tmnxGreTunnelPktsTx": tmnxGreTunnelPktsTx,
       "tmnxGreTunnelPktsTxLo": tmnxGreTunnelPktsTxLo,
       "tmnxGreTunnelPktsTxHi": tmnxGreTunnelPktsTxHi,
       "tmnxGreTunnelPktsRx": tmnxGreTunnelPktsRx,
       "tmnxGreTunnelPktsRxLo": tmnxGreTunnelPktsRxLo,
       "tmnxGreTunnelPktsRxHi": tmnxGreTunnelPktsRxHi,
       "tmnxGreTunnelBytesTx": tmnxGreTunnelBytesTx,
       "tmnxGreTunnelBytesTxLo": tmnxGreTunnelBytesTxLo,
       "tmnxGreTunnelBytesTxHi": tmnxGreTunnelBytesTxHi,
       "tmnxGreTunnelBytesRx": tmnxGreTunnelBytesRx,
       "tmnxGreTunnelBytesRxLo": tmnxGreTunnelBytesRxLo,
       "tmnxGreTunnelBytesRxHi": tmnxGreTunnelBytesRxHi,
       "tmnxGreTunnelTxErrors": tmnxGreTunnelTxErrors,
       "tmnxGreTunnelRxErrors": tmnxGreTunnelRxErrors,
       "tmnxGreTunnelKeyIgnoredRx": tmnxGreTunnelKeyIgnoredRx,
       "tmnxGreTunnelKeyIgnoredRxLo": tmnxGreTunnelKeyIgnoredRxLo,
       "tmnxGreTunnelKeyIgnoredRxHi": tmnxGreTunnelKeyIgnoredRxHi,
       "tmnxGreTunnelSeqIgnoredRx": tmnxGreTunnelSeqIgnoredRx,
       "tmnxGreTunnelSeqIgnoredRxLo": tmnxGreTunnelSeqIgnoredRxLo,
       "tmnxGreTunnelSeqIgnoredRxHi": tmnxGreTunnelSeqIgnoredRxHi,
       "tmnxGreTunnelVersUnsupRx": tmnxGreTunnelVersUnsupRx,
       "tmnxGreTunnelVersUnsupRxLo": tmnxGreTunnelVersUnsupRxLo,
       "tmnxGreTunnelVersUnsupRxHi": tmnxGreTunnelVersUnsupRxHi,
       "tmnxGreTunnelInvalidChksumRx": tmnxGreTunnelInvalidChksumRx,
       "tmnxGreTunnelInvalidChksumRxLo": tmnxGreTunnelInvalidChksumRxLo,
       "tmnxGreTunnelInvalidChksumRxHi": tmnxGreTunnelInvalidChksumRxHi,
       "tmnxGreTunnelLoopsRx": tmnxGreTunnelLoopsRx,
       "tmnxGreTunnelLoopsRxLo": tmnxGreTunnelLoopsRxLo,
       "tmnxGreTunnelLoopsRxHi": tmnxGreTunnelLoopsRxHi,
       "tmnxGreTunnelTooBigTx": tmnxGreTunnelTooBigTx,
       "tmnxGreTunnelTooBigTxLo": tmnxGreTunnelTooBigTxLo,
       "tmnxGreTunnelTooBigTxHi": tmnxGreTunnelTooBigTxHi,
       "sapAtmVcRangeTable": sapAtmVcRangeTable,
       "sapAtmVcRangeEntry": sapAtmVcRangeEntry,
       "sapAtmVcRangeIndex": sapAtmVcRangeIndex,
       "sapAtmVcRangeRowStatus": sapAtmVcRangeRowStatus,
       "sapAtmVcRangeLastMgmtChange": sapAtmVcRangeLastMgmtChange,
       "sapAtmVcRangeVpiStart": sapAtmVcRangeVpiStart,
       "sapAtmVcRangeVpiEnd": sapAtmVcRangeVpiEnd,
       "sapAtmVcRangeVciStart": sapAtmVcRangeVciStart,
       "sapAtmVcRangeVciEnd": sapAtmVcRangeVciEnd,
       "msapAtmPlcyTable": msapAtmPlcyTable,
       "msapAtmPlcyEntry": msapAtmPlcyEntry,
       "msapAtmPlcyLastChanged": msapAtmPlcyLastChanged,
       "msapAtmPlcyIngTrafficDescIndex": msapAtmPlcyIngTrafficDescIndex,
       "msapAtmPlcyEgrTrafficDescIndex": msapAtmPlcyEgrTrafficDescIndex,
       "msapAtmPlcyOamAlarmCellHandling": msapAtmPlcyOamAlarmCellHandling,
       "msapAtmPlcyOamPeriodicLoopback": msapAtmPlcyOamPeriodicLoopback,
       "msapAtmPlcyTblLastChgd": msapAtmPlcyTblLastChgd,
       "sapEthCfmTblLastChanged": sapEthCfmTblLastChanged,
       "sapEthCfmTable": sapEthCfmTable,
       "sapEthCfmEntry": sapEthCfmEntry,
       "sapEthCfmRowLastChanged": sapEthCfmRowLastChanged,
       "sapEthCfmTunnelFaultNotification": sapEthCfmTunnelFaultNotification,
       "sapEthCfmMcLagPropHoldTimeRemain": sapEthCfmMcLagPropHoldTimeRemain,
       "sapEthCfmAisEnable": sapEthCfmAisEnable,
       "sapEthCfmVMepFilter": sapEthCfmVMepFilter,
       "sapEthCfmSquelchIngress": sapEthCfmSquelchIngress,
       "sapEthCfmCollectLmmStats": sapEthCfmCollectLmmStats,
       "sapEthCfmCollLmmFcSts": sapEthCfmCollLmmFcSts,
       "sapEthCfmCollLmmFcStsInP": sapEthCfmCollLmmFcStsInP,
       "sapEthCfmSquelchIngressCtag": sapEthCfmSquelchIngressCtag,
       "sapEgrEncapGroupTblLastChgd": sapEgrEncapGroupTblLastChgd,
       "sapEgrEncapGroupTable": sapEgrEncapGroupTable,
       "sapEgrEncapGroupEntry": sapEgrEncapGroupEntry,
       "sapEgrEncapGroupName": sapEgrEncapGroupName,
       "sapEgrEncapGroupRowStatus": sapEgrEncapGroupRowStatus,
       "sapEgrEncapGroupLastChanged": sapEgrEncapGroupLastChanged,
       "sapEgrEncapGroupType": sapEgrEncapGroupType,
       "sapEgrEncapGroupQosPerMember": sapEgrEncapGroupQosPerMember,
       "sapEgrEncapGroupQosPolicyId": sapEgrEncapGroupQosPolicyId,
       "sapEgrEncapGroupSchedulerPolicy": sapEgrEncapGroupSchedulerPolicy,
       "sapEgrEncapGroupAggRateLimit": sapEgrEncapGroupAggRateLimit,
       "sapEgrEncapGrpFrameBasedAccnt": sapEgrEncapGrpFrameBasedAccnt,
       "sapEgrEncapGroupAggRateLUB": sapEgrEncapGroupAggRateLUB,
       "sapEgrEncapGrpAggRateLimitHi": sapEgrEncapGrpAggRateLimitHi,
       "sapEgrEncapGrpAggRateLimit": sapEgrEncapGrpAggRateLimit,
       "sapEgrEncapGrpMemActTblLastChgd": sapEgrEncapGrpMemActTblLastChgd,
       "sapEgrEncapGrpMemberActTable": sapEgrEncapGrpMemberActTable,
       "sapEgrEncapGrpMemberActEntry": sapEgrEncapGrpMemberActEntry,
       "sapEgrEncapGroupBeginMember": sapEgrEncapGroupBeginMember,
       "sapEgrEncapGroupEndMember": sapEgrEncapGroupEndMember,
       "sapEgrEncapGroupMemberAction": sapEgrEncapGroupMemberAction,
       "sapEgrEncapGrpMemberTable": sapEgrEncapGrpMemberTable,
       "sapEgrEncapGrpMemberEntry": sapEgrEncapGrpMemberEntry,
       "sapEgrEncapGrpMember": sapEgrEncapGrpMember,
       "sapEgrEncapGrpRangeEndId": sapEgrEncapGrpRangeEndId,
       "sapEgrEncapGrpMemberLastChanged": sapEgrEncapGrpMemberLastChanged,
       "sapAtmPppStatsTable": sapAtmPppStatsTable,
       "sapAtmPppStatsEntry": sapAtmPppStatsEntry,
       "sapAtmPppStatsRxPackets": sapAtmPppStatsRxPackets,
       "sapAtmPppStatsRxDropped": sapAtmPppStatsRxDropped,
       "sapAtmPppStatsTxPackets": sapAtmPppStatsTxPackets,
       "tmnxSapGlobalObjs": tmnxSapGlobalObjs,
       "tmnxSapGreTunnelCount": tmnxSapGreTunnelCount,
       "sapEgrEGBaseStTable": sapEgrEGBaseStTable,
       "sapEgrEGBaseStEntry": sapEgrEGBaseStEntry,
       "sapEgrEGBaseStLastClearedTime": sapEgrEGBaseStLastClearedTime,
       "sapEgrEGBaseStCustId": sapEgrEGBaseStCustId,
       "sapEgrEGBaseStQcDpdInPfPkts": sapEgrEGBaseStQcDpdInPfPkts,
       "sapEgrEGBaseStQcDpdInPfPktsL": sapEgrEGBaseStQcDpdInPfPktsL,
       "sapEgrEGBaseStQcDpdInPfPktsH": sapEgrEGBaseStQcDpdInPfPktsH,
       "sapEgrEGBaseStQcDpdInPfOcts": sapEgrEGBaseStQcDpdInPfOcts,
       "sapEgrEGBaseStQcDpdInPfOctsL": sapEgrEGBaseStQcDpdInPfOctsL,
       "sapEgrEGBaseStQcDpdInPfOctsH": sapEgrEGBaseStQcDpdInPfOctsH,
       "sapEgrEGBaseStQcDpdOutPfPkts": sapEgrEGBaseStQcDpdOutPfPkts,
       "sapEgrEGBaseStQcDpdOutPfPktsL": sapEgrEGBaseStQcDpdOutPfPktsL,
       "sapEgrEGBaseStQcDpdOutPfPktsH": sapEgrEGBaseStQcDpdOutPfPktsH,
       "sapEgrEGBaseStQcDpdOutPfOcts": sapEgrEGBaseStQcDpdOutPfOcts,
       "sapEgrEGBaseStQcDpdOutPfOctsL": sapEgrEGBaseStQcDpdOutPfOctsL,
       "sapEgrEGBaseStQcDpdOutPfOctsH": sapEgrEGBaseStQcDpdOutPfOctsH,
       "sapEgrEGBaseStQcFwdInPfPkts": sapEgrEGBaseStQcFwdInPfPkts,
       "sapEgrEGBaseStQcFwdInPfPktsL": sapEgrEGBaseStQcFwdInPfPktsL,
       "sapEgrEGBaseStQcFwdInPfPktsH": sapEgrEGBaseStQcFwdInPfPktsH,
       "sapEgrEGBaseStQcFwdInPfOcts": sapEgrEGBaseStQcFwdInPfOcts,
       "sapEgrEGBaseStQcFwdInPfOctsL": sapEgrEGBaseStQcFwdInPfOctsL,
       "sapEgrEGBaseStQcFwdInPfOctsH": sapEgrEGBaseStQcFwdInPfOctsH,
       "sapEgrEGBaseStQcFwdOutPfPkts": sapEgrEGBaseStQcFwdOutPfPkts,
       "sapEgrEGBaseStQcFwdOutPfPktsL": sapEgrEGBaseStQcFwdOutPfPktsL,
       "sapEgrEGBaseStQcFwdOutPfPktsH": sapEgrEGBaseStQcFwdOutPfPktsH,
       "sapEgrEGBaseStQcFwdOutPfOcts": sapEgrEGBaseStQcFwdOutPfOcts,
       "sapEgrEGBaseStQcFwdOutPfOctsL": sapEgrEGBaseStQcFwdOutPfOctsL,
       "sapEgrEGBaseStQcFwdOutPfOctsH": sapEgrEGBaseStQcFwdOutPfOctsH,
       "sapEgrEGMbrBaseStTable": sapEgrEGMbrBaseStTable,
       "sapEgrEGMbrBaseStEntry": sapEgrEGMbrBaseStEntry,
       "sapEgrEGMbrBaseStLstClearedTime": sapEgrEGMbrBaseStLstClearedTime,
       "sapEgrEGMbrBaseStCustId": sapEgrEGMbrBaseStCustId,
       "sapEgrEGMbrBaseStQcDpdInPfPkts": sapEgrEGMbrBaseStQcDpdInPfPkts,
       "sapEgrEGMbrBaseStQcDpdInPfPktsL": sapEgrEGMbrBaseStQcDpdInPfPktsL,
       "sapEgrEGMbrBaseStQcDpdInPfPktsH": sapEgrEGMbrBaseStQcDpdInPfPktsH,
       "sapEgrEGMbrBaseStQcDpdInPfOcts": sapEgrEGMbrBaseStQcDpdInPfOcts,
       "sapEgrEGMbrBaseStQcDpdInPfOctsL": sapEgrEGMbrBaseStQcDpdInPfOctsL,
       "sapEgrEGMbrBaseStQcDpdInPfOctsH": sapEgrEGMbrBaseStQcDpdInPfOctsH,
       "sapEgrEGMbrBaseStQcDpdOutPfPkts": sapEgrEGMbrBaseStQcDpdOutPfPkts,
       "sapEgrEGMbrBaseStQcDpdOutPfPktsL": sapEgrEGMbrBaseStQcDpdOutPfPktsL,
       "sapEgrEGMbrBaseStQcDpdOutPfPktsH": sapEgrEGMbrBaseStQcDpdOutPfPktsH,
       "sapEgrEGMbrBaseStQcDpdOutPfOcts": sapEgrEGMbrBaseStQcDpdOutPfOcts,
       "sapEgrEGMbrBaseStQcDpdOutPfOctsL": sapEgrEGMbrBaseStQcDpdOutPfOctsL,
       "sapEgrEGMbrBaseStQcDpdOutPfOctsH": sapEgrEGMbrBaseStQcDpdOutPfOctsH,
       "sapEgrEGMbrBaseStQcFwdInPfPkts": sapEgrEGMbrBaseStQcFwdInPfPkts,
       "sapEgrEGMbrBaseStQcFwdInPfPktsL": sapEgrEGMbrBaseStQcFwdInPfPktsL,
       "sapEgrEGMbrBaseStQcFwdInPfPktsH": sapEgrEGMbrBaseStQcFwdInPfPktsH,
       "sapEgrEGMbrBaseStQcFwdInPfOcts": sapEgrEGMbrBaseStQcFwdInPfOcts,
       "sapEgrEGMbrBaseStQcFwdInPfOctsL": sapEgrEGMbrBaseStQcFwdInPfOctsL,
       "sapEgrEGMbrBaseStQcFwdInPfOctsH": sapEgrEGMbrBaseStQcFwdInPfOctsH,
       "sapEgrEGMbrBaseStQcFwdOutPfPkts": sapEgrEGMbrBaseStQcFwdOutPfPkts,
       "sapEgrEGMbrBaseStQcFwdOutPfPktsL": sapEgrEGMbrBaseStQcFwdOutPfPktsL,
       "sapEgrEGMbrBaseStQcFwdOutPfPktsH": sapEgrEGMbrBaseStQcFwdOutPfPktsH,
       "sapEgrEGMbrBaseStQcFwdOutPfOcts": sapEgrEGMbrBaseStQcFwdOutPfOcts,
       "sapEgrEGMbrBaseStQcFwdOutPfOctsL": sapEgrEGMbrBaseStQcFwdOutPfOctsL,
       "sapEgrEGMbrBaseStQcFwdOutPfOctsH": sapEgrEGMbrBaseStQcFwdOutPfOctsH,
       "sapEgrEGQueueStTable": sapEgrEGQueueStTable,
       "sapEgrEGQueueStEntry": sapEgrEGQueueStEntry,
       "sapEgrEGQueueId": sapEgrEGQueueId,
       "sapEgrEGCustId": sapEgrEGCustId,
       "sapEgrEGQueueStFwdInPfPkts": sapEgrEGQueueStFwdInPfPkts,
       "sapEgrEGQueueStFwdInPfPktsL": sapEgrEGQueueStFwdInPfPktsL,
       "sapEgrEGQueueStFwdInPfPktsH": sapEgrEGQueueStFwdInPfPktsH,
       "sapEgrEGQueueStDpdInPfPkts": sapEgrEGQueueStDpdInPfPkts,
       "sapEgrEGQueueStDpdInPfPktsL": sapEgrEGQueueStDpdInPfPktsL,
       "sapEgrEGQueueStDpdInPfPktsH": sapEgrEGQueueStDpdInPfPktsH,
       "sapEgrEGQueueStFwdOutPfPkts": sapEgrEGQueueStFwdOutPfPkts,
       "sapEgrEGQueueStFwdOutPfPktsL": sapEgrEGQueueStFwdOutPfPktsL,
       "sapEgrEGQueueStFwdOutPfPktsH": sapEgrEGQueueStFwdOutPfPktsH,
       "sapEgrEGQueueStDpdOutPfPkts": sapEgrEGQueueStDpdOutPfPkts,
       "sapEgrEGQueueStDpdOutPfPktsL": sapEgrEGQueueStDpdOutPfPktsL,
       "sapEgrEGQueueStDpdOutPfPktsH": sapEgrEGQueueStDpdOutPfPktsH,
       "sapEgrEGQueueStFwdInPfOcts": sapEgrEGQueueStFwdInPfOcts,
       "sapEgrEGQueueStFwdInPfOctsL": sapEgrEGQueueStFwdInPfOctsL,
       "sapEgrEGQueueStFwdInPfOctsH": sapEgrEGQueueStFwdInPfOctsH,
       "sapEgrEGQueueStDpdInPfOcts": sapEgrEGQueueStDpdInPfOcts,
       "sapEgrEGQueueStDpdInPfOctsL": sapEgrEGQueueStDpdInPfOctsL,
       "sapEgrEGQueueStDpdInPfOctsH": sapEgrEGQueueStDpdInPfOctsH,
       "sapEgrEGQueueStFwdOutPfOcts": sapEgrEGQueueStFwdOutPfOcts,
       "sapEgrEGQueueStFwdOutPfOctsL": sapEgrEGQueueStFwdOutPfOctsL,
       "sapEgrEGQueueStFwdOutPfOctsH": sapEgrEGQueueStFwdOutPfOctsH,
       "sapEgrEGQueueStDpdOutPfOcts": sapEgrEGQueueStDpdOutPfOcts,
       "sapEgrEGQueueStDpdOutPfOctsL": sapEgrEGQueueStDpdOutPfOctsL,
       "sapEgrEGQueueStDpdOutPfOctsH": sapEgrEGQueueStDpdOutPfOctsH,
       "sapEgrEGMbrQueueStTable": sapEgrEGMbrQueueStTable,
       "sapEgrEGMbrQueueStEntry": sapEgrEGMbrQueueStEntry,
       "sapEgrEGMbrQueueId": sapEgrEGMbrQueueId,
       "sapEgrEGMbrQueueCustId": sapEgrEGMbrQueueCustId,
       "sapEgrEGMbrQueueStFwdInPfPkts": sapEgrEGMbrQueueStFwdInPfPkts,
       "sapEgrEGMbrQueueStFwdInPfPktsL": sapEgrEGMbrQueueStFwdInPfPktsL,
       "sapEgrEGMbrQueueStFwdInPfPktsH": sapEgrEGMbrQueueStFwdInPfPktsH,
       "sapEgrEGMbrQueueStDpdInPfPkts": sapEgrEGMbrQueueStDpdInPfPkts,
       "sapEgrEGMbrQueueStDpdInPfPktsL": sapEgrEGMbrQueueStDpdInPfPktsL,
       "sapEgrEGMbrQueueStDpdInPfPktsH": sapEgrEGMbrQueueStDpdInPfPktsH,
       "sapEgrEGMbrQueueStFwdOutPfPkts": sapEgrEGMbrQueueStFwdOutPfPkts,
       "sapEgrEGMbrQueueStFwdOutPfPktsL": sapEgrEGMbrQueueStFwdOutPfPktsL,
       "sapEgrEGMbrQueueStFwdOutPfPktsH": sapEgrEGMbrQueueStFwdOutPfPktsH,
       "sapEgrEGMbrQueueStDpdOutPfPkts": sapEgrEGMbrQueueStDpdOutPfPkts,
       "sapEgrEGMbrQueueStDpdOutPfPktsL": sapEgrEGMbrQueueStDpdOutPfPktsL,
       "sapEgrEGMbrQueueStDpdOutPfPktsH": sapEgrEGMbrQueueStDpdOutPfPktsH,
       "sapEgrEGMbrQueueStFwdInPfOcts": sapEgrEGMbrQueueStFwdInPfOcts,
       "sapEgrEGMbrQueueStFwdInPfOctsL": sapEgrEGMbrQueueStFwdInPfOctsL,
       "sapEgrEGMbrQueueStFwdInPfOctsH": sapEgrEGMbrQueueStFwdInPfOctsH,
       "sapEgrEGMbrQueueStDpdInPfOcts": sapEgrEGMbrQueueStDpdInPfOcts,
       "sapEgrEGMbrQueueStDpdInPfOctsL": sapEgrEGMbrQueueStDpdInPfOctsL,
       "sapEgrEGMbrQueueStDpdInPfOctsH": sapEgrEGMbrQueueStDpdInPfOctsH,
       "sapEgrEGMbrQueueStFwdOutPfOcts": sapEgrEGMbrQueueStFwdOutPfOcts,
       "sapEgrEGMbrQueueStFwdOutPfOctsL": sapEgrEGMbrQueueStFwdOutPfOctsL,
       "sapEgrEGMbrQueueStFwdOutPfOctsH": sapEgrEGMbrQueueStFwdOutPfOctsH,
       "sapEgrEGMbrQueueStDpdOutPfOcts": sapEgrEGMbrQueueStDpdOutPfOcts,
       "sapEgrEGMbrQueueStDpdOutPfOctsL": sapEgrEGMbrQueueStDpdOutPfOctsL,
       "sapEgrEGMbrQueueStDpdOutPfOctsH": sapEgrEGMbrQueueStDpdOutPfOctsH,
       "sapEgrEGSchedStTable": sapEgrEGSchedStTable,
       "sapEgrEGSchedStEntry": sapEgrEGSchedStEntry,
       "sapEgrEGSchedStName": sapEgrEGSchedStName,
       "sapEgrEGSchedCustId": sapEgrEGSchedCustId,
       "sapEgrEGSchedStFwdPkts": sapEgrEGSchedStFwdPkts,
       "sapEgrEGSchedStFwdPktsL": sapEgrEGSchedStFwdPktsL,
       "sapEgrEGSchedStFwdPktsH": sapEgrEGSchedStFwdPktsH,
       "sapEgrEGSchedStFwdOcts": sapEgrEGSchedStFwdOcts,
       "sapEgrEGSchedStFwdOctsL": sapEgrEGSchedStFwdOctsL,
       "sapEgrEGSchedStFwdOctsH": sapEgrEGSchedStFwdOctsH,
       "sapEgrEGMbrSchedStTable": sapEgrEGMbrSchedStTable,
       "sapEgrEGMbrSchedStEntry": sapEgrEGMbrSchedStEntry,
       "sapEgrEGMbrSchedStName": sapEgrEGMbrSchedStName,
       "sapEgrEGMbrSchedCustId": sapEgrEGMbrSchedCustId,
       "sapEgrEGMbrSchedStFwdPkts": sapEgrEGMbrSchedStFwdPkts,
       "sapEgrEGMbrSchedStFwdPktsL": sapEgrEGMbrSchedStFwdPktsL,
       "sapEgrEGMbrSchedStFwdPktsH": sapEgrEGMbrSchedStFwdPktsH,
       "sapEgrEGMbrSchedStFwdOcts": sapEgrEGMbrSchedStFwdOcts,
       "sapEgrEGMbrSchedStFwdOctsL": sapEgrEGMbrSchedStFwdOctsL,
       "sapEgrEGMbrSchedStFwdOctsH": sapEgrEGMbrSchedStFwdOctsH,
       "sapPortIdEgrEGSchedStTable": sapPortIdEgrEGSchedStTable,
       "sapPortIdEgrEGSchedStEntry": sapPortIdEgrEGSchedStEntry,
       "sapPortIdEgrEGSchedStName": sapPortIdEgrEGSchedStName,
       "sapPortIdEgrEGSchedCustId": sapPortIdEgrEGSchedCustId,
       "sapPortIdEgrEGSchedFwdPkts": sapPortIdEgrEGSchedFwdPkts,
       "sapPortIdEgrEGSchedFwdPktsL": sapPortIdEgrEGSchedFwdPktsL,
       "sapPortIdEgrEGSchedFwdPktsH": sapPortIdEgrEGSchedFwdPktsH,
       "sapPortIdEgrEGSchedFwdOcts": sapPortIdEgrEGSchedFwdOcts,
       "sapPortIdEgrEGSchedFwdOctsL": sapPortIdEgrEGSchedFwdOctsL,
       "sapPortIdEgrEGSchedFwdOctsH": sapPortIdEgrEGSchedFwdOctsH,
       "sapPortIdEgrEGMbrSchedStTable": sapPortIdEgrEGMbrSchedStTable,
       "sapPortIdEgrEGMbrSchedStEntry": sapPortIdEgrEGMbrSchedStEntry,
       "sapPortIdEgrEGMbrSchedStName": sapPortIdEgrEGMbrSchedStName,
       "sapPortIdEgrEGMbrSchedCustId": sapPortIdEgrEGMbrSchedCustId,
       "sapPortIdEgrEGMbrSchedFwdPkts": sapPortIdEgrEGMbrSchedFwdPkts,
       "sapPortIdEgrEGMbrSchedFwdPktsL": sapPortIdEgrEGMbrSchedFwdPktsL,
       "sapPortIdEgrEGMbrSchedFwdPktsH": sapPortIdEgrEGMbrSchedFwdPktsH,
       "sapPortIdEgrEGMbrSchedFwdOcts": sapPortIdEgrEGMbrSchedFwdOcts,
       "sapPortIdEgrEGMbrSchedFwdOctsL": sapPortIdEgrEGMbrSchedFwdOctsL,
       "sapPortIdEgrEGMbrSchedFwdOctsH": sapPortIdEgrEGMbrSchedFwdOctsH,
       "sapDefHostTableLastChanged": sapDefHostTableLastChanged,
       "sapDefHostTable": sapDefHostTable,
       "sapDefHostEntry": sapDefHostEntry,
       "sapDefHostIpv4SubnetAddr": sapDefHostIpv4SubnetAddr,
       "sapDefHostIpv4SubnetMask": sapDefHostIpv4SubnetMask,
       "sapDefHostLastChanged": sapDefHostLastChanged,
       "sapDefHostRowStatus": sapDefHostRowStatus,
       "sapDefHostNextHopIpv4Addr": sapDefHostNextHopIpv4Addr,
       "sapTlsSpbTblLastChanged": sapTlsSpbTblLastChanged,
       "sapTlsSpbTable": sapTlsSpbTable,
       "sapTlsSpbEntry": sapTlsSpbEntry,
       "sapTlsSpbRowStatus": sapTlsSpbRowStatus,
       "sapTlsSpbLastChgd": sapTlsSpbLastChgd,
       "sapTlsSpbIfIndex": sapTlsSpbIfIndex,
       "sapTlsSpbAdminState": sapTlsSpbAdminState,
       "tmnxIpTunnelTableLastChanged": tmnxIpTunnelTableLastChanged,
       "tmnxIpTunnelTable": tmnxIpTunnelTable,
       "tmnxIpTunnelEntry": tmnxIpTunnelEntry,
       "tmnxIpTunnelName": tmnxIpTunnelName,
       "tmnxIpTunnelRowStatus": tmnxIpTunnelRowStatus,
       "tmnxIpTunnelLastChanged": tmnxIpTunnelLastChanged,
       "tmnxIpTunnelGreHeader": tmnxIpTunnelGreHeader,
       "tmnxIpTunnelDescription": tmnxIpTunnelDescription,
       "tmnxIpTunnelLclIpAddrType": tmnxIpTunnelLclIpAddrType,
       "tmnxIpTunnelLclIpAddr": tmnxIpTunnelLclIpAddr,
       "tmnxIpTunnelRemIpAddrType": tmnxIpTunnelRemIpAddrType,
       "tmnxIpTunnelRemIpAddr": tmnxIpTunnelRemIpAddr,
       "tmnxIpTunnelBackupRemIpAddrType": tmnxIpTunnelBackupRemIpAddrType,
       "tmnxIpTunnelBackupRemIpAddr": tmnxIpTunnelBackupRemIpAddr,
       "tmnxIpTunnelOperRemIpAddrType": tmnxIpTunnelOperRemIpAddrType,
       "tmnxIpTunnelOperRemIpAddr": tmnxIpTunnelOperRemIpAddr,
       "tmnxIpTunnelDeliverySvcId": tmnxIpTunnelDeliverySvcId,
       "tmnxIpTunnelAdminState": tmnxIpTunnelAdminState,
       "tmnxIpTunnelOperState": tmnxIpTunnelOperState,
       "tmnxIpTunnelOperFlags": tmnxIpTunnelOperFlags,
       "tmnxIpTunnelDscp": tmnxIpTunnelDscp,
       "tmnxIpTunnelReassembly": tmnxIpTunnelReassembly,
       "tmnxIpTunnelClearDfBit": tmnxIpTunnelClearDfBit,
       "tmnxIpTunnelIpMtu": tmnxIpTunnelIpMtu,
       "tmnxIpTunnelHostISA": tmnxIpTunnelHostISA,
       "tmnxIpTunnelEncapIpMtu": tmnxIpTunnelEncapIpMtu,
       "tmnxIpTunnelPropagateIpv6PMTU": tmnxIpTunnelPropagateIpv6PMTU,
       "tmnxIpTunnelIcmp6Pkt2Big": tmnxIpTunnelIcmp6Pkt2Big,
       "tmnxIpTunnelIcmp6NumPkt2Big": tmnxIpTunnelIcmp6NumPkt2Big,
       "tmnxIpTunnelIcmp6Pkt2BigTime": tmnxIpTunnelIcmp6Pkt2BigTime,
       "tmnxIpTunnelGreHeaderSendKey": tmnxIpTunnelGreHeaderSendKey,
       "tmnxIpTunnelGreHeaderRcvKey": tmnxIpTunnelGreHeaderRcvKey,
       "tmnxIpTunnelGreHeaderKeysSet": tmnxIpTunnelGreHeaderKeysSet,
       "tmnxIpTunnelOperChanged": tmnxIpTunnelOperChanged,
       "tmnxIpTunnelPubTcpMssAdjust": tmnxIpTunnelPubTcpMssAdjust,
       "tmnxIpTunnelPrivTcpMssAdjust": tmnxIpTunnelPrivTcpMssAdjust,
       "tmnxIpTunnelDeliverySvcName": tmnxIpTunnelDeliverySvcName,
       "tmnxIpTunnelHostEsa": tmnxIpTunnelHostEsa,
       "tmnxIpTunnelHostEsaVm": tmnxIpTunnelHostEsaVm,
       "tmnxIpTunnelIPsecTransportMdProf": tmnxIpTunnelIPsecTransportMdProf,
       "tmnxIpTunnelPropagateIpv4PMTU": tmnxIpTunnelPropagateIpv4PMTU,
       "tmnxIpTunnelIcmpFragReq": tmnxIpTunnelIcmpFragReq,
       "tmnxIpTunnelIcmpFragReqNum": tmnxIpTunnelIcmpFragReqNum,
       "tmnxIpTunnelIcmpFragReqTime": tmnxIpTunnelIcmpFragReqTime,
       "tmnxIpTunnelPMTUDiscoverAging": tmnxIpTunnelPMTUDiscoverAging,
       "tmnxIpTnlDstAddrTableLastChanged": tmnxIpTnlDstAddrTableLastChanged,
       "tmnxIpTnlDstAddrTable": tmnxIpTnlDstAddrTable,
       "tmnxIpTnlDstAddrEntry": tmnxIpTnlDstAddrEntry,
       "tmnxIpTnlDstAddrType": tmnxIpTnlDstAddrType,
       "tmnxIpTnlDstAddr": tmnxIpTnlDstAddr,
       "tmnxIpTnlDstAddrRowStatus": tmnxIpTnlDstAddrRowStatus,
       "tmnxIpTnlDstAddrLastChanged": tmnxIpTnlDstAddrLastChanged,
       "tmnxIpTnlDstAddrResolved": tmnxIpTnlDstAddrResolved,
       "tmnxIpTunnelStatsTable": tmnxIpTunnelStatsTable,
       "tmnxIpTunnelStatsEntry": tmnxIpTunnelStatsEntry,
       "tmnxIpTunnelPktsTx": tmnxIpTunnelPktsTx,
       "tmnxIpTunnelPktsTxLo": tmnxIpTunnelPktsTxLo,
       "tmnxIpTunnelPktsTxHi": tmnxIpTunnelPktsTxHi,
       "tmnxIpTunnelPktsRx": tmnxIpTunnelPktsRx,
       "tmnxIpTunnelPktsRxLo": tmnxIpTunnelPktsRxLo,
       "tmnxIpTunnelPktsRxHi": tmnxIpTunnelPktsRxHi,
       "tmnxIpTunnelBytesTx": tmnxIpTunnelBytesTx,
       "tmnxIpTunnelBytesTxLo": tmnxIpTunnelBytesTxLo,
       "tmnxIpTunnelBytesTxHi": tmnxIpTunnelBytesTxHi,
       "tmnxIpTunnelBytesRx": tmnxIpTunnelBytesRx,
       "tmnxIpTunnelBytesRxLo": tmnxIpTunnelBytesRxLo,
       "tmnxIpTunnelBytesRxHi": tmnxIpTunnelBytesRxHi,
       "tmnxIpTunnelTxErrors": tmnxIpTunnelTxErrors,
       "tmnxIpTunnelRxErrors": tmnxIpTunnelRxErrors,
       "tmnxIpTunnelKeyIgnoredRx": tmnxIpTunnelKeyIgnoredRx,
       "tmnxIpTunnelKeyIgnoredRxLo": tmnxIpTunnelKeyIgnoredRxLo,
       "tmnxIpTunnelKeyIgnoredRxHi": tmnxIpTunnelKeyIgnoredRxHi,
       "tmnxIpTunnelSeqIgnoredRx": tmnxIpTunnelSeqIgnoredRx,
       "tmnxIpTunnelSeqIgnoredRxLo": tmnxIpTunnelSeqIgnoredRxLo,
       "tmnxIpTunnelSeqIgnoredRxHi": tmnxIpTunnelSeqIgnoredRxHi,
       "tmnxIpTunnelVersUnsupRx": tmnxIpTunnelVersUnsupRx,
       "tmnxIpTunnelVersUnsupRxLo": tmnxIpTunnelVersUnsupRxLo,
       "tmnxIpTunnelVersUnsupRxHi": tmnxIpTunnelVersUnsupRxHi,
       "tmnxIpTunnelInvalidChksumRx": tmnxIpTunnelInvalidChksumRx,
       "tmnxIpTunnelInvalidChksumRxLo": tmnxIpTunnelInvalidChksumRxLo,
       "tmnxIpTunnelInvalidChksumRxHi": tmnxIpTunnelInvalidChksumRxHi,
       "tmnxIpTunnelLoopsRx": tmnxIpTunnelLoopsRx,
       "tmnxIpTunnelLoopsRxLo": tmnxIpTunnelLoopsRxLo,
       "tmnxIpTunnelLoopsRxHi": tmnxIpTunnelLoopsRxHi,
       "tmnxIpTunnelTooBigTx": tmnxIpTunnelTooBigTx,
       "tmnxIpTunnelTooBigTxLo": tmnxIpTunnelTooBigTxLo,
       "tmnxIpTunnelTooBigTxHi": tmnxIpTunnelTooBigTxHi,
       "tmnxIpTunnelKeyMismatchRx": tmnxIpTunnelKeyMismatchRx,
       "tmnxIpTunnelEncapOverhead": tmnxIpTunnelEncapOverhead,
       "tmnxIpTunnelPreEncapFragCount": tmnxIpTunnelPreEncapFragCount,
       "tmnxIpTunnelPreEncapFragLastSize": tmnxIpTunnelPreEncapFragLastSize,
       "tmnxIpTunnelPostEncapFragCount": tmnxIpTunnelPostEncapFragCount,
       "tmnxIpTunnelPostEncapFragLstSize": tmnxIpTunnelPostEncapFragLstSize,
       "tmnxIpTunnelTempPrivMtu": tmnxIpTunnelTempPrivMtu,
       "sapExtTableLastChanged": sapExtTableLastChanged,
       "sapExtTable": sapExtTable,
       "sapExtEntry": sapExtEntry,
       "sapExtLastChanged": sapExtLastChanged,
       "sapExtLagActivePort": sapExtLagActivePort,
       "sapDCpuProtPolicy": sapDCpuProtPolicy,
       "sapCflowd": sapCflowd,
       "sapStatHostMacLearnOptions": sapStatHostMacLearnOptions,
       "sapBandwidth": sapBandwidth,
       "sapOperDCpuProtPolicy": sapOperDCpuProtPolicy,
       "sapIngQGrpRedirectList": sapIngQGrpRedirectList,
       "sapEgrQGrpRedirectList": sapEgrQGrpRedirectList,
       "sapEgrQosQueueOvrHsSecShaper": sapEgrQosQueueOvrHsSecShaper,
       "sapFwdWhlSaleEpipeSvcId": sapFwdWhlSaleEpipeSvcId,
       "sapIngressQinqTranslation": sapIngressQinqTranslation,
       "sapIngressQinqInnerTranslationId": sapIngressQinqInnerTranslationId,
       "sapIngressQinqOuterTranslationId": sapIngressQinqOuterTranslationId,
       "sapBandwidthHi": sapBandwidthHi,
       "sapEgressQosVlanQosPlcy": sapEgressQosVlanQosPlcy,
       "sapIngQtagManipulationOuterTag": sapIngQtagManipulationOuterTag,
       "sapIngQtagManipulationInnerTag": sapIngQtagManipulationInnerTag,
       "sapIngQtagManipulationAction": sapIngQtagManipulationAction,
       "sapEgrQtagManipulationAction": sapEgrQtagManipulationAction,
       "sapEgressQosEgrRemarkPlcy": sapEgressQosEgrRemarkPlcy,
       "sapEgressAggRateCIRLmt": sapEgressAggRateCIRLmt,
       "sapIngressAggregatePolicerRateHi": sapIngressAggregatePolicerRateHi,
       "sapIngressAggregatePolicerRateLo": sapIngressAggregatePolicerRateLo,
       "sapIngressAggregatePolicerBurst": sapIngressAggregatePolicerBurst,
       "sapIngressAggregatePolicerCIRHi": sapIngressAggregatePolicerCIRHi,
       "sapIngressAggregatePolicerCIRLo": sapIngressAggregatePolicerCIRLo,
       "sapIngressAggregatePolicerCBS": sapIngressAggregatePolicerCBS,
       "sapIngressIPCriteriaOvrTag": sapIngressIPCriteriaOvrTag,
       "sapIngressIPv6CriteriaOvrTag": sapIngressIPv6CriteriaOvrTag,
       "sapEgrVlanQosPlcyPortRedirect": sapEgrVlanQosPlcyPortRedirect,
       "sapIngressIpFilterPair": sapIngressIpFilterPair,
       "sapDcpFpStaticStatTable": sapDcpFpStaticStatTable,
       "sapDcpFpStaticStatEntry": sapDcpFpStaticStatEntry,
       "sapDcpFpStaticPlcrName": sapDcpFpStaticPlcrName,
       "sapDcpFpStaticState": sapDcpFpStaticState,
       "sapDcpFpStaticExcdCount": sapDcpFpStaticExcdCount,
       "sapDcpFpStaticExcdCountHi": sapDcpFpStaticExcdCountHi,
       "sapDcpFpStaticExcdCountLo": sapDcpFpStaticExcdCountLo,
       "sapDcpFpStaticHoldDown": sapDcpFpStaticHoldDown,
       "sapDcpFpStaticDetectionTime": sapDcpFpStaticDetectionTime,
       "sapDcpFpDynStatTable": sapDcpFpDynStatTable,
       "sapDcpFpDynStatEntry": sapDcpFpDynStatEntry,
       "sapDcpFpProtocol": sapDcpFpProtocol,
       "sapDcpFpDynState": sapDcpFpDynState,
       "sapDcpFpDynExcdCount": sapDcpFpDynExcdCount,
       "sapDcpFpDynExcdCountHi": sapDcpFpDynExcdCountHi,
       "sapDcpFpDynExcdCountLo": sapDcpFpDynExcdCountLo,
       "sapDcpFpDynHoldDown": sapDcpFpDynHoldDown,
       "sapDcpFpDynDetectionTime": sapDcpFpDynDetectionTime,
       "sapDcpFpDynAllocated": sapDcpFpDynAllocated,
       "sapDcpFpLocMonStatTable": sapDcpFpLocMonStatTable,
       "sapDcpFpLocMonStatEntry": sapDcpFpLocMonStatEntry,
       "sapDcpFpLocMonPlcrName": sapDcpFpLocMonPlcrName,
       "sapDcpFpLocMonState": sapDcpFpLocMonState,
       "sapDcpFpLocMonExcdCount": sapDcpFpLocMonExcdCount,
       "sapDcpFpLocMonExcdCountHi": sapDcpFpLocMonExcdCountHi,
       "sapDcpFpLocMonExcdCountLo": sapDcpFpLocMonExcdCountLo,
       "sapDcpFpLocMonAllDynAlloc": sapDcpFpLocMonAllDynAlloc,
       "sapNotificationObjects": sapNotificationObjects,
       "sapDcpTimeEventOccured": sapDcpTimeEventOccured,
       "sapTlsStaticIsidRngTable": sapTlsStaticIsidRngTable,
       "sapTlsStaticIsidRngEntry": sapTlsStaticIsidRngEntry,
       "sapTlsStaticIsidRngId": sapTlsStaticIsidRngId,
       "sapTlsStaticIsidRngRowStatus": sapTlsStaticIsidRngRowStatus,
       "sapTlsStaticIsidRngLastChanged": sapTlsStaticIsidRngLastChanged,
       "sapTlsStaticIsidRngLow": sapTlsStaticIsidRngLow,
       "sapTlsStaticIsidRngHigh": sapTlsStaticIsidRngHigh,
       "sapTlsDhcp6InfoTable": sapTlsDhcp6InfoTable,
       "sapTlsDhcp6InfoEntry": sapTlsDhcp6InfoEntry,
       "sapTlsDhcp6AdminState": sapTlsDhcp6AdminState,
       "sapTlsDhcp6Description": sapTlsDhcp6Description,
       "sapTlsDhcp6Snoop": sapTlsDhcp6Snoop,
       "sapTlsDhcp6InterfaceId": sapTlsDhcp6InterfaceId,
       "sapTlsDhcp6RemoteId": sapTlsDhcp6RemoteId,
       "sapTlsDhcp6RemoteIdString": sapTlsDhcp6RemoteIdString,
       "sapTlsStaticIsidTable": sapTlsStaticIsidTable,
       "sapTlsStaticIsidEntry": sapTlsStaticIsidEntry,
       "sapTlsStaticIsid": sapTlsStaticIsid,
       "sapTlsStaticIsidStatus": sapTlsStaticIsidStatus,
       "sapEthLoopbackTable": sapEthLoopbackTable,
       "sapEthLoopbackEntry": sapEthLoopbackEntry,
       "sapEthLoopbackRowStatus": sapEthLoopbackRowStatus,
       "sapEthLoopbackMode": sapEthLoopbackMode,
       "sapEthLoopbackMacSwap": sapEthLoopbackMacSwap,
       "sapEthLoopbackMacSwapAddr": sapEthLoopbackMacSwapAddr,
       "sapEthLoopbackMacSwapAddrAll": sapEthLoopbackMacSwapAddrAll,
       "sapEthLoopbackOperState": sapEthLoopbackOperState,
       "sapTlsFdbMacStatsTable": sapTlsFdbMacStatsTable,
       "sapTlsFdbMacStatsEntry": sapTlsFdbMacStatsEntry,
       "sapTlsFdbMacStatsNumEntries": sapTlsFdbMacStatsNumEntries,
       "tmnxSapTlsExInfoTable": tmnxSapTlsExInfoTable,
       "tmnxSapTlsExInfoEntry": tmnxSapTlsExInfoEntry,
       "tmnxSapTlsExLastChanged": tmnxSapTlsExLastChanged,
       "tmnxSapTlsExDhcpPythonPolicy": tmnxSapTlsExDhcpPythonPolicy,
       "tmnxSapTlsExDhcp6PythonPolicy": tmnxSapTlsExDhcp6PythonPolicy,
       "tmnxSapTlsExRtrSolMsapTrigger": tmnxSapTlsExRtrSolMsapTrigger,
       "tmnxSapTlsExRtrSolUserDb": tmnxSapTlsExRtrSolUserDb,
       "tmnxSapTlsExProcCpmTrfcSapDn": tmnxSapTlsExProcCpmTrfcSapDn,
       "tmnxSapTlsExDiameterAuthPolicy": tmnxSapTlsExDiameterAuthPolicy,
       "tmnxSapTlsExPppoePythonPolicy": tmnxSapTlsExPppoePythonPolicy,
       "tmnxSapTlsExAllowDot1qMsap": tmnxSapTlsExAllowDot1qMsap,
       "tmnxSapTlsExEgressDestMac": tmnxSapTlsExEgressDestMac,
       "sapTlsDisableSendBvplsEvpnFlush": sapTlsDisableSendBvplsEvpnFlush,
       "sapTlsAutoLrnMacProtectExcList": sapTlsAutoLrnMacProtectExcList,
       "sapTlsExBgpVplsMhVeId": sapTlsExBgpVplsMhVeId,
       "sapLagPerLinkHashTableLastChgd": sapLagPerLinkHashTableLastChgd,
       "sapLagPerLinkHashTable": sapLagPerLinkHashTable,
       "sapLagPerLinkHashEntry": sapLagPerLinkHashEntry,
       "sapLagPerLinkHashLastChanged": sapLagPerLinkHashLastChanged,
       "sapLagPerLinkHashClass": sapLagPerLinkHashClass,
       "sapLagPerLinkHashWeight": sapLagPerLinkHashWeight,
       "sapLagPerLinkHashOperClass": sapLagPerLinkHashOperClass,
       "sapLagPerLinkHashOperWeight": sapLagPerLinkHashOperWeight,
       "sapLagPerLinkHashIsOverriden": sapLagPerLinkHashIsOverriden,
       "tmnxSapIpoeTableLastChanged": tmnxSapIpoeTableLastChanged,
       "tmnxSapIpoeTable": tmnxSapIpoeTable,
       "tmnxSapIpoeEntry": tmnxSapIpoeEntry,
       "tmnxSapIpoeLastChanged": tmnxSapIpoeLastChanged,
       "tmnxSapIpoeAdminState": tmnxSapIpoeAdminState,
       "tmnxSapIpoeDescription": tmnxSapIpoeDescription,
       "tmnxSapIpoePolicy": tmnxSapIpoePolicy,
       "tmnxSapIpoeUserDb": tmnxSapIpoeUserDb,
       "tmnxStaticHostIpv6Objs": tmnxStaticHostIpv6Objs,
       "sapStatHost6Table": sapStatHost6Table,
       "sapStatHost6Entry": sapStatHost6Entry,
       "sapStatHost6IpAddress": sapStatHost6IpAddress,
       "sapStatHost6MacAddress": sapStatHost6MacAddress,
       "sapStatHost6LastChanged": sapStatHost6LastChanged,
       "sapStatHost6RowStatus": sapStatHost6RowStatus,
       "sapStatHost6AdminStatus": sapStatHost6AdminStatus,
       "sapStatHost6PrefixLen": sapStatHost6PrefixLen,
       "sapStatHost6NextHopAddrType": sapStatHost6NextHopAddrType,
       "sapStatHost6NextHopAddr": sapStatHost6NextHopAddr,
       "sapStatHost6SubscrIdent": sapStatHost6SubscrIdent,
       "sapStatHost6SubProfile": sapStatHost6SubProfile,
       "sapStatHost6SlaProfile": sapStatHost6SlaProfile,
       "sapStatHost6ShcvOperState": sapStatHost6ShcvOperState,
       "sapStatHost6ShcvChecks": sapStatHost6ShcvChecks,
       "sapStatHost6ShcvReplies": sapStatHost6ShcvReplies,
       "sapStatHost6ShcvReplyTime": sapStatHost6ShcvReplyTime,
       "sapStatHost6DynMacAddress": sapStatHost6DynMacAddress,
       "sapStatHost6RetailerSvcId": sapStatHost6RetailerSvcId,
       "sapStatHost6RetailerIf": sapStatHost6RetailerIf,
       "sapStatHost6FwdingState": sapStatHost6FwdingState,
       "sapStatHost6AncpString": sapStatHost6AncpString,
       "sapStatHost6SubIdIsSapId": sapStatHost6SubIdIsSapId,
       "sapStatHost6AppProfile": sapStatHost6AppProfile,
       "sapStatHost6IntermediateDestId": sapStatHost6IntermediateDestId,
       "sapStatHost6AdminRetailSvcId": sapStatHost6AdminRetailSvcId,
       "sapStatHost6AppProfileScope": sapStatHost6AppProfileScope,
       "sapStatHost6MRtTable": sapStatHost6MRtTable,
       "sapStatHost6MRtEntry": sapStatHost6MRtEntry,
       "sapStatHost6MRtAddrType": sapStatHost6MRtAddrType,
       "sapStatHost6MRtAddr": sapStatHost6MRtAddr,
       "sapStatHost6MRtPrefixLen": sapStatHost6MRtPrefixLen,
       "sapStatHost6MRtRowStatus": sapStatHost6MRtRowStatus,
       "sapStatHost6MRtLastMgmtChange": sapStatHost6MRtLastMgmtChange,
       "sapStatHost6MRtStatus": sapStatHost6MRtStatus,
       "sapStatHost6MRtMetric": sapStatHost6MRtMetric,
       "sapStatHost6MRtPreference": sapStatHost6MRtPreference,
       "sapStatHost6MRtTag": sapStatHost6MRtTag,
       "sapStatHost6TableLastChanged": sapStatHost6TableLastChanged,
       "sapStatHost6MRtTblLastChgd": sapStatHost6MRtTblLastChgd,
       "sapIngQosQueueDepthInfoTable": sapIngQosQueueDepthInfoTable,
       "sapIngQosQueueDepthInfoEntry": sapIngQosQueueDepthInfoEntry,
       "sapIngQosQueueDepthPollPrcnt1": sapIngQosQueueDepthPollPrcnt1,
       "sapIngQosQueueDepthPollPrcnt2": sapIngQosQueueDepthPollPrcnt2,
       "sapIngQosQueueDepthPollPrcnt3": sapIngQosQueueDepthPollPrcnt3,
       "sapIngQosQueueDepthPollPrcnt4": sapIngQosQueueDepthPollPrcnt4,
       "sapIngQosQueueDepthPollPrcnt5": sapIngQosQueueDepthPollPrcnt5,
       "sapIngQosQueueDepthPollPrcnt6": sapIngQosQueueDepthPollPrcnt6,
       "sapIngQosQueueDepthPollPrcnt7": sapIngQosQueueDepthPollPrcnt7,
       "sapIngQosQueueDepthPollPrcnt8": sapIngQosQueueDepthPollPrcnt8,
       "sapIngQosQueueDepthPollPrcnt9": sapIngQosQueueDepthPollPrcnt9,
       "sapIngQosQueueDepthPollPrcnt10": sapIngQosQueueDepthPollPrcnt10,
       "sapIngQosQueueDepthAvgPollInt": sapIngQosQueueDepthAvgPollInt,
       "sapIngQosQueueDepthAvgElpsdTme": sapIngQosQueueDepthAvgElpsdTme,
       "sapEgrQosQueueDepthInfoTable": sapEgrQosQueueDepthInfoTable,
       "sapEgrQosQueueDepthInfoEntry": sapEgrQosQueueDepthInfoEntry,
       "sapEgrQosQueueDepthPollPrcnt1": sapEgrQosQueueDepthPollPrcnt1,
       "sapEgrQosQueueDepthPollPrcnt2": sapEgrQosQueueDepthPollPrcnt2,
       "sapEgrQosQueueDepthPollPrcnt3": sapEgrQosQueueDepthPollPrcnt3,
       "sapEgrQosQueueDepthPollPrcnt4": sapEgrQosQueueDepthPollPrcnt4,
       "sapEgrQosQueueDepthPollPrcnt5": sapEgrQosQueueDepthPollPrcnt5,
       "sapEgrQosQueueDepthPollPrcnt6": sapEgrQosQueueDepthPollPrcnt6,
       "sapEgrQosQueueDepthPollPrcnt7": sapEgrQosQueueDepthPollPrcnt7,
       "sapEgrQosQueueDepthPollPrcnt8": sapEgrQosQueueDepthPollPrcnt8,
       "sapEgrQosQueueDepthPollPrcnt9": sapEgrQosQueueDepthPollPrcnt9,
       "sapEgrQosQueueDepthPollPrcnt10": sapEgrQosQueueDepthPollPrcnt10,
       "sapEgrQosQueueDepthAvgPollInt": sapEgrQosQueueDepthAvgPollInt,
       "sapEgrQosQueueDepthAvgElpsdTme": sapEgrQosQueueDepthAvgElpsdTme,
       "sapEgrQosQueueDepthViolTotCnt": sapEgrQosQueueDepthViolTotCnt,
       "sapEgrQosQueueDepthViolLast": sapEgrQosQueueDepthViolLast,
       "sapEgrQosQueueDepthHWMPollInt": sapEgrQosQueueDepthHWMPollInt,
       "sapStaticHostRipTable": sapStaticHostRipTable,
       "sapStaticHostRipEntry": sapStaticHostRipEntry,
       "sapStaticHostRipPlcyName": sapStaticHostRipPlcyName,
       "sapStaticHostRipListenerStatus": sapStaticHostRipListenerStatus,
       "sapEvpnMHEthSegTable": sapEvpnMHEthSegTable,
       "sapEvpnMHEthSegEntry": sapEvpnMHEthSegEntry,
       "sapEvpnMHEthSegName": sapEvpnMHEthSegName,
       "sapEvpnMHEthSegStatus": sapEvpnMHEthSegStatus,
       "sapDefHostExTableLastChanged": sapDefHostExTableLastChanged,
       "sapDefHostExTable": sapDefHostExTable,
       "sapDefHostExEntry": sapDefHostExEntry,
       "sapDefHostExSubnetAddrType": sapDefHostExSubnetAddrType,
       "sapDefHostExSubnetAddr": sapDefHostExSubnetAddr,
       "sapDefHostExSubnetAddrPfxLen": sapDefHostExSubnetAddrPfxLen,
       "sapDefHostExRowStatus": sapDefHostExRowStatus,
       "sapDefHostExLastChanged": sapDefHostExLastChanged,
       "sapDefHostExNextHopAddrType": sapDefHostExNextHopAddrType,
       "sapDefHostExNextHopAddr": sapDefHostExNextHopAddr,
       "tmnxSapDataTrigStatsTable": tmnxSapDataTrigStatsTable,
       "tmnxSapDataTrigStatsEntry": tmnxSapDataTrigStatsEntry,
       "tmnxSapDataTrigStatsId": tmnxSapDataTrigStatsId,
       "tmnxSapDataTrigStatsName": tmnxSapDataTrigStatsName,
       "tmnxSapDataTrigStatsVal": tmnxSapDataTrigStatsVal,
       "sapL3LoopbackTable": sapL3LoopbackTable,
       "sapL3LoopbackEntry": sapL3LoopbackEntry,
       "sapL3LoopbackRowStatus": sapL3LoopbackRowStatus,
       "sapL3LoopbackIgnrPortOpState": sapL3LoopbackIgnrPortOpState,
       "sapL2tpv3TableLastChanged": sapL2tpv3TableLastChanged,
       "sapL2tpv3Table": sapL2tpv3Table,
       "sapL2tpv3Entry": sapL2tpv3Entry,
       "sapL2tpv3RowStatus": sapL2tpv3RowStatus,
       "sapL2tpv3LastChanged": sapL2tpv3LastChanged,
       "sapL2tpv3ServiceId": sapL2tpv3ServiceId,
       "sapL2tpv3RouterId": sapL2tpv3RouterId,
       "sapL2tpv3TunnelGroupName": sapL2tpv3TunnelGroupName,
       "sapL2tpv3VcId": sapL2tpv3VcId,
       "sapL2tpv3PwType": sapL2tpv3PwType,
       "sapL2tpv3AdminState": sapL2tpv3AdminState,
       "sapL2tpv3OperState": sapL2tpv3OperState,
       "sapL2tpv3TunnelStatus": sapL2tpv3TunnelStatus,
       "sapL2tpv3OperFlags": sapL2tpv3OperFlags,
       "sapL2tpv3LastOperChgd": sapL2tpv3LastOperChgd,
       "sapL2tpv3HostISA": sapL2tpv3HostISA,
       "sapL2tpv3EthVlanQtag": sapL2tpv3EthVlanQtag,
       "sapL2tpv3ServiceName": sapL2tpv3ServiceName,
       "sapEgrQosHsWrrGrpTblLastChanged": sapEgrQosHsWrrGrpTblLastChanged,
       "sapEgrQosHsWrrGrpTable": sapEgrQosHsWrrGrpTable,
       "sapEgrQosHsWrrGrpEntry": sapEgrQosHsWrrGrpEntry,
       "sapEgrQosHsWrrGrpId": sapEgrQosHsWrrGrpId,
       "sapEgrQosHsWrrGrpRowStatus": sapEgrQosHsWrrGrpRowStatus,
       "sapEgrQosHsWrrGrpLastChanged": sapEgrQosHsWrrGrpLastChanged,
       "sapEgrQosHsWrrGrpRate": sapEgrQosHsWrrGrpRate,
       "sapEgrQosHsWrrGrpRatePercent": sapEgrQosHsWrrGrpRatePercent,
       "sapEgrQosHsWrrGrpClassWeight": sapEgrQosHsWrrGrpClassWeight,
       "tmnxSapPfcpTableLastChanged": tmnxSapPfcpTableLastChanged,
       "tmnxSapPfcpTable": tmnxSapPfcpTable,
       "tmnxSapPfcpEntry": tmnxSapPfcpEntry,
       "tmnxSapPfcpLastChanged": tmnxSapPfcpLastChanged,
       "tmnxSapPfcpAssociation": tmnxSapPfcpAssociation,
       "tmnxSapPfcpL2AccessIdAlias": tmnxSapPfcpL2AccessIdAlias,
       "tmnxSapOperStatusTable": tmnxSapOperStatusTable,
       "tmnxSapOperStatusEntry": tmnxSapOperStatusEntry,
       "tmnxSapOperStatus": tmnxSapOperStatus,
       "tmnxSapOperFlags": tmnxSapOperFlags,
       "tmnxMgSapNotifyObjs": tmnxMgSapNotifyObjs,
       "tmnxIpTnlIPsecStatsTable": tmnxIpTnlIPsecStatsTable,
       "tmnxIpTnlIPsecStatsEntry": tmnxIpTnlIPsecStatsEntry,
       "tmnxIpTnlIPsecIsakmpState": tmnxIpTnlIPsecIsakmpState,
       "tmnxIpTnlIPsecIsakmpEstabTime": tmnxIpTnlIPsecIsakmpEstabTime,
       "tmnxIpTnlIPsecIsakmpNegLifeTime": tmnxIpTnlIPsecIsakmpNegLifeTime,
       "tmnxIpTnlIPsecNumDpdTx": tmnxIpTnlIPsecNumDpdTx,
       "tmnxIpTnlIPsecNumDpdRx": tmnxIpTnlIPsecNumDpdRx,
       "tmnxIpTnlIPsecNumDpdAckTx": tmnxIpTnlIPsecNumDpdAckTx,
       "tmnxIpTnlIPsecNumDpdAckRx": tmnxIpTnlIPsecNumDpdAckRx,
       "tmnxIpTnlIPsecNumExpRx": tmnxIpTnlIPsecNumExpRx,
       "tmnxIpTnlIPsecNumInvalidDpdRx": tmnxIpTnlIPsecNumInvalidDpdRx,
       "tmnxIpTnlIPsecNumCtrlPktsTx": tmnxIpTnlIPsecNumCtrlPktsTx,
       "tmnxIpTnlIPsecNumCtrlPktsRx": tmnxIpTnlIPsecNumCtrlPktsRx,
       "tmnxIpTnlIPsecNumCtrlTxErrors": tmnxIpTnlIPsecNumCtrlTxErrors,
       "tmnxIpTnlIPsecNumCtrlRxErrors": tmnxIpTnlIPsecNumCtrlRxErrors,
       "tmnxIpTnlIPsecMatCertEntryId": tmnxIpTnlIPsecMatCertEntryId,
       "tmnxIpTnlIPsecCertProfName": tmnxIpTnlIPsecCertProfName,
       "tmnxIpTnlIPsecIsakmpPathMtu": tmnxIpTnlIPsecIsakmpPathMtu,
       "tmnxIpTnlIPsecStatIsakmpAuthAlg": tmnxIpTnlIPsecStatIsakmpAuthAlg,
       "tmnxIpTnlIPsecStatIsakmpEncrAlg": tmnxIpTnlIPsecStatIsakmpEncrAlg,
       "tmnxIpTnlIPsecStatIsakmpPfsDhGp": tmnxIpTnlIPsecStatIsakmpPfsDhGp,
       "tmnxIpTnlIPsecStatIkeTranPrfAlg": tmnxIpTnlIPsecStatIkeTranPrfAlg,
       "tmnxIpTnlIPsecMatchTrustAnchor": tmnxIpTnlIPsecMatchTrustAnchor,
       "tmnxIpTnlIPsecSATable": tmnxIpTnlIPsecSATable,
       "tmnxIpTnlIPsecSAEntry": tmnxIpTnlIPsecSAEntry,
       "tmnxIpTnlIPsecSAId": tmnxIpTnlIPsecSAId,
       "tmnxIpTnlIPsecSAIndex": tmnxIpTnlIPsecSAIndex,
       "tmnxIpTnlIPsecSADirection": tmnxIpTnlIPsecSADirection,
       "tmnxIpTnlIPsecSAType": tmnxIpTnlIPsecSAType,
       "tmnxIpTnlIPsecSASpi": tmnxIpTnlIPsecSASpi,
       "tmnxIpTnlIPsecSAAuthAlgorithm": tmnxIpTnlIPsecSAAuthAlgorithm,
       "tmnxIpTnlIPsecSAEncrAlgorithm": tmnxIpTnlIPsecSAEncrAlgorithm,
       "tmnxIpTnlIPsecSAEstablishedTime": tmnxIpTnlIPsecSAEstablishedTime,
       "tmnxIpTnlIPsecSANegLifeTime": tmnxIpTnlIPsecSANegLifeTime,
       "tmnxIpTnlIPsecSAStatsTable": tmnxIpTnlIPsecSAStatsTable,
       "tmnxIpTnlIPsecSAStatsEntry": tmnxIpTnlIPsecSAStatsEntry,
       "tmnxIpTnlIPsecSAStBytesProcessed": tmnxIpTnlIPsecSAStBytesProcessed,
       "tmnxIpTnlIPsecSAStBytesProcLow32": tmnxIpTnlIPsecSAStBytesProcLow32,
       "tmnxIpTnlIPsecSAStBytesProcHgh32": tmnxIpTnlIPsecSAStBytesProcHgh32,
       "tmnxIpTnlIPsecSAStPktsProcessed": tmnxIpTnlIPsecSAStPktsProcessed,
       "tmnxIpTnlIPsecSAStPktsProcLow32": tmnxIpTnlIPsecSAStPktsProcLow32,
       "tmnxIpTnlIPsecSAStPktsProcHigh32": tmnxIpTnlIPsecSAStPktsProcHigh32,
       "tmnxIpTnlIPsecSAStCryptoErrors": tmnxIpTnlIPsecSAStCryptoErrors,
       "tmnxIpTnlIPsecSAStReplayErrors": tmnxIpTnlIPsecSAStReplayErrors,
       "tmnxIpTnlIPsecSAStSAErrors": tmnxIpTnlIPsecSAStSAErrors,
       "tmnxIpTnlIPsecSAStPolicyErrors": tmnxIpTnlIPsecSAStPolicyErrors,
       "tmnxIpTnlIPsecSAStEncapOverhead": tmnxIpTnlIPsecSAStEncapOverhead,
       "tmnxIpTnlIPsecSAStPfsDhGroup": tmnxIpTnlIPsecSAStPfsDhGroup,
       "tmnxIpTnlIPsecSAStESN": tmnxIpTnlIPsecSAStESN,
       "sapBaseTableLastChanged": sapBaseTableLastChanged,
       "sapTlsTableLastChanged": sapTlsTableLastChanged,
       "tmnxSapSubMonOperGrpTableLastCh": tmnxSapSubMonOperGrpTableLastCh,
       "tmnxSapSubMonOperGrpTable": tmnxSapSubMonOperGrpTable,
       "tmnxSapSubMonOperGrpEntry": tmnxSapSubMonOperGrpEntry,
       "tmnxSapSubMonOperGrpRowStatus": tmnxSapSubMonOperGrpRowStatus,
       "tmnxSapSubMonOperGrpLastCh": tmnxSapSubMonOperGrpLastCh,
       "tmnxSapSubMonOperGrpHlthDrop": tmnxSapSubMonOperGrpHlthDrop,
       "tmnxSapSubMonOperGrpActHlthDrop": tmnxSapSubMonOperGrpActHlthDrop,
       "sapTrapsPrefix": sapTrapsPrefix,
       "sapTraps": sapTraps,
       "sapCreated": sapCreated,
       "sapDeleted": sapDeleted,
       "sapStatusChanged": sapStatusChanged,
       "sapTlsMacAddrLimitAlarmRaised": sapTlsMacAddrLimitAlarmRaised,
       "sapTlsMacAddrLimitAlarmCleared": sapTlsMacAddrLimitAlarmCleared,
       "sapTlsDHCPLseStEntriesExceeded": sapTlsDHCPLseStEntriesExceeded,
       "sapTlsDHCPLeaseStateOverride": sapTlsDHCPLeaseStateOverride,
       "sapTlsDHCPSuspiciousPcktRcvd": sapTlsDHCPSuspiciousPcktRcvd,
       "sapDHCPLeaseEntriesExceeded": sapDHCPLeaseEntriesExceeded,
       "sapDHCPLseStateOverride": sapDHCPLseStateOverride,
       "sapDHCPSuspiciousPcktRcvd": sapDHCPSuspiciousPcktRcvd,
       "sapDHCPLseStatePopulateErr": sapDHCPLseStatePopulateErr,
       "hostConnectivityLost": hostConnectivityLost,
       "hostConnectivityRestored": hostConnectivityRestored,
       "sapReceivedProtSrcMac": sapReceivedProtSrcMac,
       "sapStaticHostDynMacConflict": sapStaticHostDynMacConflict,
       "sapTlsMacMoveExceeded": sapTlsMacMoveExceeded,
       "sapDHCPProxyServerError": sapDHCPProxyServerError,
       "sapDHCPCoAError": sapDHCPCoAError,
       "sapDHCPSubAuthError": sapDHCPSubAuthError,
       "sapPortStateChangeProcessed": sapPortStateChangeProcessed,
       "sapDHCPLseStateMobilityError": sapDHCPLseStateMobilityError,
       "sapCemPacketDefectAlarm": sapCemPacketDefectAlarm,
       "sapCemPacketDefectAlarmClear": sapCemPacketDefectAlarmClear,
       "msapStateChanged": msapStateChanged,
       "msapCreationFailure": msapCreationFailure,
       "sapHostBGPPeeringSetupFailed": sapHostBGPPeeringSetupFailed,
       "sapTlsDataSapInstStatusChgd": sapTlsDataSapInstStatusChgd,
       "tmnxGreTunnelOperRemIpChg": tmnxGreTunnelOperRemIpChg,
       "sapTunnelStateChange": sapTunnelStateChange,
       "sapAtmPppSessionFailure": sapAtmPppSessionFailure,
       "sapAtmPppNcpFailure": sapAtmPppNcpFailure,
       "sapIpipeCeIpAddrChange": sapIpipeCeIpAddrChange,
       "tmnxIpTunnelOperRemIpChg": tmnxIpTunnelOperRemIpChg,
       "sapDcpStaticExcd": sapDcpStaticExcd,
       "sapDcpDynamicExcd": sapDcpDynamicExcd,
       "sapDcpStaticHoldDownStart": sapDcpStaticHoldDownStart,
       "sapDcpDynamicHoldDownStart": sapDcpDynamicHoldDownStart,
       "sapDcpStaticHoldDownEnd": sapDcpStaticHoldDownEnd,
       "sapDcpDynamicHoldDownEnd": sapDcpDynamicHoldDownEnd,
       "sapDcpStaticConform": sapDcpStaticConform,
       "sapDcpDynamicConform": sapDcpDynamicConform,
       "sapDcpLocMonExcd": sapDcpLocMonExcd,
       "sapDcpLocMonExcdDynResource": sapDcpLocMonExcdDynResource,
       "sapDcpLocMonExcdAllDynAlloc": sapDcpLocMonExcdAllDynAlloc,
       "sapDcpLocMonExcdAllDynFreed": sapDcpLocMonExcdAllDynFreed,
       "sapDcpDynamicEnforceAlloc": sapDcpDynamicEnforceAlloc,
       "sapDcpDynamicEnforceFreed": sapDcpDynamicEnforceFreed,
       "sapTlsMacMoveExceedNonBlock": sapTlsMacMoveExceedNonBlock,
       "sapEthLoopbackStarted": sapEthLoopbackStarted,
       "sapEthLoopbackStopped": sapEthLoopbackStopped,
       "sapTunnelEncapIpMtuTooSmall": sapTunnelEncapIpMtuTooSmall,
       "sapHostRipListenerSetupFailed": sapHostRipListenerSetupFailed,
       "sapStatHost6DynMacConflict": sapStatHost6DynMacConflict,
       "tmnxIpTunnelOperStateChange": tmnxIpTunnelOperStateChange,
       "svcEvpnMplsMacMoveExceedNonBlock": svcEvpnMplsMacMoveExceedNonBlock,
       "sapIfIgnorePortStateStart": sapIfIgnorePortStateStart,
       "sapIfIgnorePortStateStop": sapIfIgnorePortStateStop,
       "sapReceivedPbbProtSrcMac": sapReceivedPbbProtSrcMac,
       "sapMgNotification": sapMgNotification,
       "topologyChangeSapMajorState": topologyChangeSapMajorState,
       "newRootSap": newRootSap,
       "topologyChangeSapState": topologyChangeSapState,
       "receivedTCN": receivedTCN,
       "higherPriorityBridge": higherPriorityBridge,
       "bridgedTLS": bridgedTLS,
       "sapEncapPVST": sapEncapPVST,
       "sapEncapDot1d": sapEncapDot1d,
       "sapReceiveOwnBpdu": sapReceiveOwnBpdu,
       "sapActiveProtocolChange": sapActiveProtocolChange,
       "tmnxStpRootGuardViolation": tmnxStpRootGuardViolation,
       "tmnxSapStpExcepCondStateChng": tmnxSapStpExcepCondStateChng}
)
